
#include <memory>

#include "llvm/Bitcode/BitcodeReader.h"
#include "llvm/IRReader/IRReader.h"

#include "llvm/ExecutionEngine/MCJIT.h"
#include "llvm/ExecutionEngine/JITLink/JITLink.h"
#include "llvm/ExecutionEngine/ExecutionEngine.h"
#include "llvm/ExecutionEngine/GenericValue.h"
#include "llvm/Transforms/IPO/Inliner.h"
#include "llvm/Transforms/IPO.h"
#include "llvm/IR/Function.h"
#include "llvm/IR/IRBuilder.h"
#include <llvm/IR/LegacyPassManager.h>
#include "llvm/Support/TargetSelect.h"
#include <llvm/Transforms/IPO/PassManagerBuilder.h>
#include "llvm/IR/LLVMContext.h"
#include "llvm/IR/Module.h"
#include "llvm/IR/Verifier.h"
#include "llvm/IR/Type.h"
#include "llvm/Support/ManagedStatic.h"
#include "llvm/Support/raw_ostream.h"
#include "llvm/Transforms/IPO/FunctionImport.h"
#include "llvm/Transforms/Utils/Cloning.h"
#include "llvm/Support/InitLLVM.h"
#include "llvm/Support/TargetSelect.h"
#include "llvm/Support/raw_ostream.h"
#include "mlir/Pass/PassManager.h"
#include "mlir/IR/Dialect.h"
#include "mlir/IR/MLIRContext.h"
#include "mlir/InitAllDialects.h"
#include "mlir/InitAllPasses.h"
#include "mlir/Pass/Pass.h"
#include "mlir/Support/MlirOptMain.h"
#include "mlir/Target/LLVMIR.h"
#include "mlir/ExecutionEngine/ExecutionEngine.h"
#include "mlir/ExecutionEngine/OptUtils.h"
#include "mlir/IR/Module.h"

extern "C" {
    void* sqlite3_initialize(void*);
    void* sqlite3BitvecClear(void*);
    void* callXInversePtr(void*);
    void* pthreadMutexFree(void*);
    void* pageReinit(void*);
    void* sqlite3BtreeFirst(void*);
    void* sqlite3Vacuum(void*);
    void* sqlite3CollapseDatabaseArray(void*);
    void* sqlite3VarintLen(void*);
    void* sqlite3_mutex_free(void*);
    void* exprIdxCover(void*);
    void* sqlite3BtreeOpen(void*);
    void* sqlite3_expanded_sql(void*);
    void* sqlite3_os_init(void*);
    void* sqlite3_stricmp(void*);
    void* sqlite3ExprCodeGetColumnOfTable(void*);
    void* exprNodeIsConstant(void*);
    void* sqlite3_backup_pagecount(void*);
    void* sqlite3_result_error_code(void*);
    void* sqlite3_column_value(void*);
    void* sqlite3RunParser(void*);
    void* sqlite3SelectWalkFail(void*);
    void* futimes(void*);
    void* valueBytes(void*);
    void* computeLimitRegisters(void*);
    void* posixUnlock(void*);
    void* memjrnlTruncate(void*);
    void* selectPopWith(void*);
    void* sqlite3_exec(void*);
    void* sqlite3VdbeMemExpandBlob(void*);
    void* sqlite3BtreeInsert(void*);
    void* groupConcatInverse(void*);
    void* sqlite3VdbeAllocUnpackedRecord(void*);
    void* sqlite3BitvecDestroy(void*);
    void* minMaxValue(void*);
    void* sqlite3SrcListDelete(void*);
    void* unixCheckReservedLock(void*);
    void* sqlite3VdbeMemTooBig(void*);
    void* sqlite3_libversion(void*);
    void* compileoptiongetFunc(void*);
    void* memjrnlClose(void*);
    void* minmaxFunc(void*);
    void* sqlite3WalCheckpoint(void*);
    void* sqlite3FkLocateIndex(void*);
    void* last_valueInvFunc(void*);
    void* pthreadMutexInit(void*);
    void* sqlite3StartTable(void*);
    void* mkdir(void*);
    void* sqlite3_bind_int(void*);
    void* sqlite3OomFault(void*);
    void* sqlite3_free_table(void*);
    void* unlink(void*);
    void* measureAllocationSize(void*);
    void* sqlite3_wal_checkpoint_v2(void*);
    void* noopMutexFree(void*);
    void* vdbeReleaseAndSetInt64(void*);
    void* sqlite3AddDefaultValue(void*);
    void* selectAddSubqueryTypeInfo(void*);
    void* convertCompoundSelectToSubquery(void*);
    void* walTryBeginRead(void*);
    void* sqlite3DbStrDup(void*);
    void* cellSizePtrNoPayload(void*);
    void* sqlite3_db_handle(void*);
    void* vdbeSorterOpenTempFile(void*);
    void* sqlite3ResultSetOfSelect(void*);
    void* sqlite3_set_auxdata(void*);
    void* sqlite3_value_text(void*);
    void* sqlite3StrAccumEnlarge(void*);
    void* sqlite3_value_double(void*);
    void* exprCodeBetween(void*);
    void* impliesNotNullRow(void*);
    void* sqlite3BtreeClearTable(void*);
    void* sqlite3UniqueConstraint(void*);
    void* sqlite3FkOldmask(void*);
    void* pcache1Init(void*);
    void* sqlite3_file_control(void*);
    void* vdbeSorterCompareText(void*);
    void* windowReturnOneRow(void*);
    void* returnSingleInt(void*);
    void* sqlite3VdbeChangeP4(void*);
    void* sqlite3BtreeCursor(void*);
    void* sqlite3SrcListAssignCursors(void*);
    void* sqlite3_result_error_toobig(void*);
    void* sqlite3VdbeMemIntegerify(void*);
    void* vdbeSorterFlushThread(void*);
    void* codeInteger(void*);
    void* walkExpr(void*);
    void* sqlite3LeaveMutexAndCloseZombie(void*);
    void* sqlite3_blob_read(void*);
    void* pagerOpenSavepoint(void*);
    void* findInodeInfo(void*);
    void* pcache1Pagecount(void*);
    void* groupConcatStep(void*);
    void* sqlite3ExprListAppendVector(void*);
    void* sqlite3_keyword_count(void*);
    void* codeCompare(void*);
    void* sqlite3_extended_errcode(void*);
    void* sqlite3VdbeMemTranslate(void*);
    void* attachFunc(void*);
    void* sqlite3_status64(void*);
    void* sqlite3WhereClauseClear(void*);
    void* sqlite3_result_text16(void*);
    void* sqlite3_filename_wal(void*);
    void* sqlite3SelectAddColumnTypeAndCollation(void*);
    void* sqlite3_result_blob(void*);
    void* sqlite3BitvecSet(void*);
    void* sqlite3_value_pointer(void*);
    void* unixSleep(void*);
    void* unixGetLastError(void*);
    void* sqlite3_create_function16(void*);
    void* releaseMemArray(void*);
    void* sqlite3_extended_result_codes(void*);
    void* callXSFuncPtr(void*);
    void* parseHhMmSs(void*);
    void* whereCombineDisjuncts(void*);
    void* sqlite3SelectDup(void*);
    void* sqlite3_vfs_find(void*);
    void* generateOutputSubroutine(void*);
    void* sqlite3MemSize(void*);
    void* wherePathSolver(void*);
    void* sqlite3_value_nochange(void*);
    void* proxyConchLock(void*);
    void* nolockIoFinderImpl(void*);
    void* sqlite3VdbeBooleanValue(void*);
    void* sqlite3_wal_hook(void*);
    void* pcache1Truncate(void*);
    void* sqlite3_get_autocommit(void*);
    void* sqlite3_stmt_readonly(void*);
    void* sqlite3_column_decltype16(void*);
    void* whereLoopAddOr(void*);
    void* sqlite3InitOne(void*);
    void* sqlite3VdbeCheckFk(void*);
    void* sqlite3_realloc(void*);
    void* cume_distInvFunc(void*);
    void* pthreadMutexTry(void*);
    void* vdbeMergeEngineLevel0(void*);
    void* sqlite3CodeSubselect(void*);
    void* ptrmapGet(void*);
    void* sqlite3OsCloseFree(void*);
    void* unixFileControl(void*);
    void* sqlite3_total_changes(void*);
    void* out2PrereleaseWithClear(void*);
    void* sqlite3BtreeSavepoint(void*);
    void* rebuildPage(void*);
    void* vdbeRecordCompareInt(void*);
    void* unixGetpagesize(void*);
    void* sqlite3_uri_parameter(void*);
    void* sqlite3_enable_load_extension(void*);
    void* countStep(void*);
    void* autoIncBegin(void*);
    void* pager_unlock(void*);
    void* insertCell(void*);
    void* analyzeOneTable(void*);
    void* whereLoopDelete(void*);
    void* sqlite3GetToken(void*);
    void* unixFileSize(void*);
    void* saveCursorsOnList(void*);
    void* sqlite3_complete16(void*);
    void* sqlite3CodeDropTable(void*);
    void* pageInsertArray(void*);
    void* sqlite3VdbeCursorMoveto(void*);
    void* windowCheckValue(void*);
    void* saveCursorKey(void*);
    void* sqlite3ExprCheckIN(void*);
    void* sqlite3DbMallocRawNN(void*);
    void* sqlite3_get_auxdata(void*);
    void* vdbePmaReaderIncrInit(void*);
    void* sqlite3VdbeMemCast(void*);
    void* sqlite3_value_bytes(void*);
    void* exprDup(void*);
    void* unixShmUnmap(void*);
    void* flock(void*);
    void* whereClauseInsert(void*);
    void* nullifFunc(void*);
    void* sqlite3_blob_reopen(void*);
    void* sqlite3_db_readonly(void*);
    void* sqlite3_column_bytes16(void*);
    void* unixFullPathname(void*);
    void* getOverflowPage(void*);
    void* unixOpen(void*);
    void* sqlite3_get_table(void*);
    void* sqlite3ExprCodeCopy(void*);
    void* sqlite3_status(void*);
    void* sqlite3_str_new(void*);
    void* renameParseSql(void*);
    void* malloc_default_zone(void*);
    void* sqlite3CreateForeignKey(void*);
    void* compileoptionusedFunc(void*);
    void* unixDlOpen(void*);
    void* sqlite3BtreeCreateTable(void*);
    void* selectWindowRewriteSelectCb(void*);
    void* sqlite3_open16(void*);
    void* sqlite3_changes(void*);
    void* sqlite3VdbeChangeEncoding(void*);
    void* sqlite3VdbeAddOpList(void*);
    void* sqlite3VdbeAddOp3(void*);
    void* unixClose(void*);
    void* sqlite3IsNaN(void*);
    void* sqlite3_column_decltype(void*);
    void* sqlite3VdbeIntValue(void*);
    void* sqlite3FkActions(void*);
    void* memjrnlFileSize(void*);
    void* sqlite3_vmprintf(void*);
    void* sqlite3VdbeError(void*);
    void* resolveOrderGroupBy(void*);
    void* patternCompare(void*);
    void* btreeParseCellAdjustSizeForOverflow(void*);
    void* sqlite3Select(void*);
    void* sqlite3ColumnsFromExprList(void*);
    void* percent_rankStepFunc(void*);
    void* sqlite3_column_int64(void*);
    void* walDecodeFrame(void*);
    void* ntileStepFunc(void*);
    void* sqlite3_create_collation16(void*);
    void* getSafetyLevel(void*);
    void* sqlite3RowSetInsert(void*);
    void* lengthFunc(void*);
    void* readMasterJournal(void*);
    void* my_assert(void*);
    void* sqlite3_config(void*);
    void* randomBlob(void*);
    void* walIndexPageRealloc(void*);
    void* resolveExprStep(void*);
    void* clearDatabasePage(void*);
    void* sqlite3FindFunction(void*);
    void* sqlite3WindowDelete(void*);
    void* sqlite3_result_text64(void*);
    void* whereLoopInsert(void*);
    void* resetAccumulator(void*);
    void* btreeEndTransaction(void*);
    void* sqlite3VdbeAddFunctionCall(void*);
    void* enlargeAndAppend(void*);
    void* sqlite3_value_dup(void*);
    void* rmdir(void*);
    void* sqlite3VdbeSerialPut(void*);
    void* nolockClose(void*);
    void* sqlite3_set_authorizer(void*);
    void* sqlite3_result_subtype(void*);
    void* sqlite3_column_bytes(void*);
    void* sqlite3_collation_needed(void*);
    void* flockIoFinderImpl(void*);
    void* sqlite3_next_stmt(void*);
    void* sqlite3VdbeFinishMoveto(void*);
    void* sqlite3_busy_handler(void*);
    void* sqlite3VdbeMemRealify(void*);
    void* sqlite3WindowDup(void*);
    void* upperFunc(void*);
    void* valueToText(void*);
    void* ctimeFunc(void*);
    void* btreeParseCellPtrNoPayload(void*);
    void* sqlite3BtreeClearCursor(void*);
    void* malloc_set_zone_name(void*);
    void* sqlite3_prepare16(void*);
    void* first_valueFinalizeFunc(void*);
    void* pager_playback_one_page(void*);
    void* zeroblobFunc(void*);
    void* nth_valueStepFunc(void*);
    void* sqlite3_bind_zeroblob64(void*);
    void* sqlite3ExprWalkNoop(void*);
    void* sqlite3VdbeMemFromBtree(void*);
    void* sqlite3GenerateConstraintChecks(void*);
    void* sqliteDefaultBusyCallback(void*);
    void* sqlite3ComputeGeneratedColumns(void*);
    void* groupConcatFinalize(void*);
    void* sqlite3_prepare_v3(void*);
    void* noopMutexEnd(void*);
    void* unixShmBarrier(void*);
    void* exprImpliesNotNull(void*);
    void* sqlite3_value_text16be(void*);
    void* vdbeSorterCompareInt(void*);
    void* sqlite3DbFreeNN(void*);
    void* sqlite3BtreeEof(void*);
    void* sqlite3BtreeTripAllCursors(void*);
    void* hexFunc(void*);
    void* sqlite3_uri_key(void*);
    void* sqlite3_db_config(void*);
    void* errlogFunc(void*);
    void* datetimeFunc(void*);
    void* sqlite3WhereCodeOneLoopStart(void*);
    void* renameColumnSelectCb(void*);
    void* decodeIntArray(void*);
    void* sqlite3_bind_int64(void*);
    void* sqlite3_sql(void*);
    void* sqlite3_result_text16be(void*);
    void* sqlite3BtreePutData(void*);
    void* sqlite3_column_double(void*);
    void* isDate(void*);
    void* sqlite3_finalize(void*);
    void* disableTerm(void*);
    void* sqlite3_bind_blob(void*);
    void* sqlite3_strglob(void*);
    void* btreeOverwriteCell(void*);
    void* roundFunc(void*);
    void* ctimestampFunc(void*);
    void* gettimeofday(void*);
    void* sqlite3_uri_boolean(void*);
    void* sqlite3_result_text16le(void*);
    void* sqlite3RowSetTest(void*);
    void* sqlite3_bind_pointer(void*);
    void* sqlite3ExprCodeTemp(void*);
    void* sqlite3VdbeMemMove(void*);
    void* replaceFunc(void*);
    void* sqlite3_result_pointer(void*);
    void* sqlite3_user_data(void*);
    void* sqlite3Prepare(void*);
    void* sqlite3RunVacuum(void*);
    void* unicodeFunc(void*);
    void* walkWindowList(void*);
    void* sqlite3_create_collation_v2(void*);
    void* resolveRemoveWindowsCb(void*);
    void* sqlite3_result_value(void*);
    void* zeroPage(void*);
    void* sqlite3MallocSize(void*);
    void* sqlite3UnlinkAndDeleteTable(void*);
    void* sqlite3MaterializeView(void*);
    void* geteuid(void*);
    void* out2Prerelease(void*);
    void* readJournalHdr(void*);
    void* sqlite3KeyInfoOfIndex(void*);
    void* yy_reduce(void*);
    void* sqlite3_aggregate_context(void*);
    void* unlockBtreeMutex(void*);
    void* dense_rankValueFunc(void*);
    void* getDigits(void*);
    void* proxyUnlock(void*);
    void* pthreadMutexEnter(void*);
    void* incrVacuumStep(void*);
    void* vdbeIncrFree(void*);
    void* sqlite3FixSrcList(void*);
    void* pager_reset(void*);
    void* sqlite3ResetAllSchemasOfConnection(void*);
    void* nfsUnlock(void*);
    void* rtrimCollFunc(void*);
    void* sqlite3GetVarint32(void*);
    void* sqlite3Close(void*);
    void* sqlite3FkCheck(void*);
    void* sqlite3IndexAffinityOk(void*);
    void* sqlite3PcacheDirtyList(void*);
    void* sqlite3AddInt64(void*);
    void* sqlite3VdbeCursorRestore(void*);
    void* sqlite3WindowChain(void*);
    void* unixLock(void*);
    void* sqlite3_column_int(void*);
    void* sqlite3VdbeAddOp4(void*);
    void* gatherSelectWindowsCallback(void*);
    void* sqlite3CodeVerifyNamedSchema(void*);
    void* sqlite3ExprCodeGeneratedColumn(void*);
    void* percent_rankInvFunc(void*);
    void* sqlite3_data_count(void*);
    void* sqlite3_mutex_enter(void*);
    void* afpUnlock(void*);
    void* sqlite3LockAndPrepare(void*);
    void* sqlite3_compileoption_used(void*);
    void* statGet(void*);
    void* sqlite3_blob_close(void*);
    void* sqlite3_vsnprintf(void*);
    void* sqlite3_vfs_register(void*);
    void* sqlite3_soft_heap_limit(void*);
    void* sqlite3_str_reset(void*);
    void* sqlite3_value_blob(void*);
    void* sqlite3_str_value(void*);
    void* sqlite3ExprCodeTarget(void*);
    void* sqlite3FindTable(void*);
    void* renameColumnExprCb(void*);
    void* substExpr(void*);
    void* robust_open(void*);
    void* cdateFunc(void*);
    void* sqlite3_bind_text16(void*);
    void* printInt(void*);
    void* sqlite3_bind_value(void*);
    void* sqlite3_bind_double(void*);
    void* sqlite3_load_extension(void*);
    void* exprNodeIsDeterministic(void*);
    void* sqlite3CompleteInsertion(void*);
    void* versionFunc(void*);
    void* countFinalize(void*);
    void* sqlite3SrcListAppend(void*);
    void* unixUnfetch(void*);
    void* windowIfNewPeer(void*);
    void* sqlite3_sleep(void*);
    void* renameColumnFunc(void*);
    void* sqlite3_hard_heap_limit64(void*);
    void* sqlite3VdbeAddOp2(void*);
    void* flockCheckReservedLock(void*);
    void* sqlite3_thread_cleanup(void*);
    void* pager_end_transaction(void*);
    void* sqlite3ExprListAppend(void*);
    void* resizeResolveLabel(void*);
    void* handleMovedCursor(void*);
    void* dotlockClose(void*);
    void* pcache1FetchStage2(void*);
    void* sqlite3_value_text16(void*);
    void* sqlite3VdbeMemInit(void*);
    void* allocateCursor(void*);
    void* vdbeSorterListToPMA(void*);
    void* sqlite3PutVarint(void*);
    void* sumStep(void*);
    void* sqlite3_bind_parameter_index(void*);
    void* sqlite3ExprAlloc(void*);
    void* computeYMD(void*);
    void* sqlite3_value_type(void*);
    void* vdbeClrCopy(void*);
    void* sqlite3VdbeMemSetNull(void*);
    void* sqlite3DropTriggerPtr(void*);
    void* deleteTable(void*);
    void* sqlite3VdbeFrameRestore(void*);
    void* sqlite3Prepare16(void*);
    void* walIndexTryHdr(void*);
    void* sqlite3GetCollSeq(void*);
    void* sqlite3_create_window_function(void*);
    void* computeNumericType(void*);
    void* gethostuuid(void*);
    void* valueFromExpr(void*);
    void* sqlite3_system_errno(void*);
    void* execSqlF(void*);
    void* sqlite3CheckObjectName(void*);
    void* sourceidFunc(void*);
    void* statInit(void*);
    void* sqlite3_prepare_v2(void*);
    void* statAccumDestructor(void*);
    void* sqlite3OpenTable(void*);
    void* relocatePage(void*);
    void* balance(void*);
    void* pcache1Free(void*);
    void* sqlite3MemShutdown(void*);
    void* sqlite3GenerateRowDelete(void*);
    void* sqlite3Update(void*);
    void* sqlite3_wal_checkpoint(void*);
    void* sqlite3_result_error_nomem(void*);
    void* sqlite3_malloc(void*);
    void* sqlite3_bind_blob64(void*);
    void* sqlite3_memory_highwater(void*);
    void* sqlite3WalDefaultHook(void*);
    void* sqlite3VdbeFrameMemDel(void*);
    void* exprMightBeIndexed2(void*);
    void* pcache1Destroy(void*);
    void* nocaseCollatingFunc(void*);
    void* proxyLock(void*);
    void* unixWrite(void*);
    void* sqlite3_create_function_v2(void*);
    void* printPtrAndValue(void*);
    void* vdbeChangeP4Full(void*);
    void* percent_rankValueFunc(void*);
    void* sqlite3BtreeUpdateMeta(void*);
    void* sqlite3_value_text16le(void*);
    void* sqlite3_db_status(void*);
    void* sqlite3ErrorWithMsg(void*);
    void* malloc_create_zone(void*);
    void* cume_distValueFunc(void*);
    void* sqlite3_release_memory(void*);
    void* sqlite3InitCallback(void*);
    void* sqlite3_aggregate_count(void*);
    void* vdbePmaReadVarint(void*);
    void* columnTypeImpl(void*);
    void* walIndexReadHdr(void*);
    void* exprSelectUsage(void*);
    void* unixShmMap(void*);
    void* checkConstraintExprNode(void*);
    void* sqlite3_set_last_insert_rowid(void*);
    void* createAggContext(void*);
    void* sqlite3WithAdd(void*);
    void* sqlite3BtreeIntegerKey(void*);
    void* sqlite3BtreeSetPageSize(void*);
    void* openDatabase(void*);
    void* sqlite3IndexAffinityStr(void*);
    void* allocateBtreePage(void*);
    void* sqlite3WindowAlloc(void*);
    void* sqlite3BtreeCursorIsValid(void*);
    void* vdbePmaReadBlob(void*);
    void* sqlite3_expired(void*);
    void* sqlite3Realloc(void*);
    void* setupLookaside(void*);
    void* freeP4(void*);
    void* sqlite3_busy_timeout(void*);
    void* readlink(void*);
    void* apiOomError(void*);
    void* walIndexClose(void*);
    void* countInverse(void*);
    void* sqlite3PExpr(void*);
    void* pcache1Shrink(void*);
    void* getCellInfo(void*);
    void* sqlite3VdbeIdxRowid(void*);
    void* sqlite3_column_name16(void*);
    void* strAccumFinishRealloc(void*);
    void* sqlite3VdbeHalt(void*);
    void* sqlite3PagerSetJournalMode(void*);
    void* yy_destructor(void*);
    void* whereScanInitIndexExpr(void*);
    void* vdbeRecordCompareString(void*);
    void* sqlite3BtreeSetSpillSize(void*);
    void* groupConcatValue(void*);
    void* utimes(void*);
    void* memjrnlRead(void*);
    void* sumFinalize(void*);
    void* codeTriggerProgram(void*);
    void* sqlite3_memory_used(void*);
    void* sqlite3VdbeMemShallowCopy(void*);
    void* vdbeSorterJoinThread(void*);
    void* sqlite3_realloc64(void*);
    void* sqlite3_blob_bytes(void*);
    void* sqlite3BtreeFakeValidCursor(void*);
    void* sqlite3WindowOffsetExpr(void*);
    void* unixRandomness(void*);
    void* sqlite3VdbeSorterInit(void*);
    void* havingToWhereExprCb(void*);
    void* noopMutexTry(void*);
    void* moveToRoot(void*);
    void* sqlite3VdbeRecordCompareWithSkip(void*);
    void* sqlite3ExpirePreparedStatements(void*);
    void* sqlite3_db_release_memory(void*);
    void* pushOntoSorter(void*);
    void* sqlite3_open_v2(void*);
    void* defragmentPage(void*);
    void* dlopen(void*);
    void* backupOnePage(void*);
    void* sqlite3VdbeMemSetInt64(void*);
    void* sqlite3_libversion_number(void*);
    void* sqlite3_bind_parameter_name(void*);
    void* sqlite3_strlike(void*);
    void* avgFinalize(void*);
    void* growOp3(void*);
    void* unixDlClose(void*);
    void* dbMallocRawFinish(void*);
    void* sqlite3CreateFunc(void*);
    void* btreeOverwriteContent(void*);
    void* pragmaFunclistLine(void*);
    void* checkAppendMsg(void*);
    void* proxyClose(void*);
    void* gatherSelectWindowsSelectCallback(void*);
    void* sqlite3_result_error(void*);
    void* clearCell(void*);
    void* vdbePmaReaderNext(void*);
    void* sqlite3ExprCollSeq(void*);
    void* sqlite3VdbeOneByteSerialTypeLen(void*);
    void* sqlite3_value_int64(void*);
    void* pcache1Shutdown(void*);
    void* sqlite3WhereEnd(void*);
    void* sqlite3_mprintf(void*);
    void* sqlite3_column_text16(void*);
    void* exprNodeIsConstantOrGroupBy(void*);
    void* walEncodeFrame(void*);
    void* pager_write_pagelist(void*);
    void* fkLookupParent(void*);
    void* unixAccess(void*);
    void* sqlite3_randomness(void*);
    void* sqlite3IdListAppend(void*);
    void* sqlite3ExprCompare(void*);
    void* total_changes(void*);
    void* analyzeAggregate(void*);
    void* sqlite3VdbeSorterRewind(void*);
    void* pcache1Cachesize(void*);
    void* freeP4FuncCtx(void*);
    void* sqlite3BtreeGetMeta(void*);
    void* cume_distStepFunc(void*);
    void* sqlite3_context_db_handle(void*);
    void* sqlite3_value_frombind(void*);
    void* sqlite3_complete(void*);
    void* autoIncrementEnd(void*);
    void* pagerWalFrames(void*);
    void* sqlite3ViewGetColumnNames(void*);
    void* vdbePmaReaderIncrMergeInit(void*);
    void* sqlite3CreateIndex(void*);
    void* dateFunc(void*);
    void* sqlite3_commit_hook(void*);
    void* bindText(void*);
    void* dupedExprSize(void*);
    void* sqlite3_table_column_metadata(void*);
    void* sqlite3_value_int(void*);
    void* sqlite3_stmt_busy(void*);
    void* sqlite3_str_length(void*);
    void* sqlite3_overload_function(void*);
    void* sqlite3FindDb(void*);
    void* sqlite3SchemaClear(void*);
    void* absFunc(void*);
    void* sqlite3_memory_alarm(void*);
    void* sqlite3_uri_int64(void*);
    void* analysisLoader(void*);
    void* sqlite3SrcListAppendFromTerm(void*);
    void* sqlite3RowSetDelete(void*);
    void* btreeParseCellPtr(void*);
    void* execSql(void*);
    void* vdbeMergeEngineStep(void*);
    void* sqlite3NestedParse(void*);
    void* row_numberStepFunc(void*);
    void* sqlite3_mutex_leave(void*);
    void* nfsIoFinderImpl(void*);
    void* sqlite3_global_recover(void*);
    void* sqlite3SetJoinExpr(void*);
    void* syncJournal(void*);
    void* sqlite3SubInt64(void*);
    void* sqlite3_interrupt(void*);
    void* vdbeSorterFlushPMA(void*);
    void* sqlite3BtreeBeginTrans(void*);
    void* sqlite3VdbeIdxKeyCompare(void*);
    void* sqlite3DeleteTriggerStep(void*);
    void* windowCodeOp(void*);
    void* afpLock(void*);
    void* updateAccumulator(void*);
    void* newDatabase(void*);
    void* analyzeAggregatesInSelect(void*);
    void* targetSrcList(void*);
    void* vdbeMergeEngineInit(void*);
    void* sqlite3DbFree(void*);
    void* sqlite3PagerSharedLock(void*);
    void* sqlite3DropTable(void*);
    void* sqlite3FixSelect(void*);
    void* sqlite3_db_filename(void*);
    void* sqlite3GenerateIndexKey(void*);
    void* rowSetTreeToList(void*);
    void* sqlite3_result_double(void*);
    void* sqlite3VdbeMemMakeWriteable(void*);
    void* mallocWithAlarm(void*);
    void* sqlite3VdbeMemNulTerminate(void*);
    void* sqlite3_column_name(void*);
    void* sqlite3BtreeSetPagerFlags(void*);
    void* autolockIoFinderImpl(void*);
    void* getPageNormal(void*);
    void* sqlite3Insert(void*);
    void* windowAggFinal(void*);
    void* sqlite3VdbeMemFinalize(void*);
    void* sqlite3PagerSetPagesize(void*);
    void* sqlite3_transfer_bindings(void*);
    void* windowReadPeerValues(void*);
    void* backupUpdate(void*);
    void* blobReadWrite(void*);
    void* whereApplyPartialIndexConstraints(void*);
    void* sqlite3ExprIsInteger(void*);
    void* proxyCheckReservedLock(void*);
    void* sqlite3_value_bytes16(void*);
    void* vdbePmaReaderBgIncrInit(void*);
    void* sqlite3FindInIndex(void*);
    void* sqlite3TableLock(void*);
    void* timeFunc(void*);
    void* malloc_zone_malloc(void*);
    void* sqlite3MatchEName(void*);
    void* sqlite3_wal_autocheckpoint(void*);
    void* ntileValueFunc(void*);
    void* sqlite3_mutex_try(void*);
    void* btreeNext(void*);
    void* sqlite3BtreeCommitPhaseTwo(void*);
    void* freeSpace(void*);
    void* sqlite3_errmsg(void*);
    void* exprINAffinity(void*);
    void* statPush(void*);
    void* sqlite3SelectExprHeight(void*);
    void* codeEqualityTerm(void*);
    void* rankValueFunc(void*);
    void* sqlite3VdbeDelete(void*);
    void* clearSelect(void*);
    void* sqlite3AnalysisLoad(void*);
    void* exprSrcCount(void*);
    void* sqlite3MPrintf(void*);
    void* unixDelete(void*);
    void* sqlite3SelectNew(void*);
    void* sqlite3MemCompare(void*);
    void* whereLoopAddBtreeIndex(void*);
    void* sqlite3AddGenerated(void*);
    void* localtimeOffset(void*);
    void* exprColumnFlagUnion(void*);
    void* vdbeLeave(void*);
    void* pushDownWhereTerms(void*);
    void* sqlite3VdbeMemSetStr(void*);
    void* verifyDbFile(void*);
    void* sqlite3_column_text(void*);
    void* sqlite3ErrorMsg(void*);
    void* sqlite3GenerateRowIndexDelete(void*);
    void* sqlite3MemMalloc(void*);
    void* sqlite3SelectWalkNoop(void*);
    void* accessPayload(void*);
    void* codeAttach(void*);
    void* pcache1Rekey(void*);
    void* sqlite3_str_appendall(void*);
    void* sqlite3SelectPrep(void*);
    void* unsetJoinExpr(void*);
    void* readDbPage(void*);
    void* nolockUnlock(void*);
    void* detachFunc(void*);
    void* unixDlError(void*);
    void* last_valueValueFunc(void*);
    void* sqlite3_os_end(void*);
    void* renameEditSql(void*);
    void* sqlite3ExprCodeRunJustOnce(void*);
    void* sqlite3VdbeSerialTypeLen(void*);
    void* sqlite3_step(void*);
    void* lowerFunc(void*);
    void* getRowTrigger(void*);
    void* pagerOpenWal(void*);
    void* sqlite3GetInt32(void*);
    void* renameTableTest(void*);
    void* selectWindowRewriteExprCb(void*);
    void* sqlite3WhereExplainOneScan(void*);
    void* sqlite3_filename_journal(void*);
    void* sqlite3HashInsert(void*);
    void* dbg(void*);
    void* reindexTable(void*);
    void* dropCell(void*);
    void* btreeLockCarefully(void*);
    void* sqlite3VdbeReset(void*);
    void* sqlite3BtreeCommitPhaseOne(void*);
    void* sqlite3_result_text(void*);
    void* pcacheFetchFinishWithInit(void*);
    void* sqlite3_mutex_alloc(void*);
    void* sqlite3WalFindFrame(void*);
    void* noopMutexAlloc(void*);
    void* unixShmPurge(void*);
    void* checkList(void*);
    void* pcache1Fetch(void*);
    void* dense_rankStepFunc(void*);
    void* sqlite3BtreePayloadSize(void*);
    void* vdbeUnbind(void*);
    void* sqlite3_stmt_status(void*);
    void* sqlite3_db_mutex(void*);
    void* whereLoopAddBtree(void*);
    void* posixIoFinderImpl(void*);
    void* resizeIndexObject(void*);
    void* pager_playback(void*);
    void* pageFindSlot(void*);
    void* whereIndexExprTransNode(void*);
    void* sqlite3_msize(void*);
    void* sqlite3ExprCode(void*);
    void* windowCodeRangeTest(void*);
    void* ftruncate(void*);
    void* createCollation(void*);
    void* freePage2(void*);
    void* resolveSelectStep(void*);
    void* sqlite3WhereExprUsageNN(void*);
    void* moveToLeftmost(void*);
    void* ptrmapPut(void*);
    void* unixTruncate(void*);
    void* sqlite3_shutdown(void*);
    void* dotlockIoFinderImpl(void*);
    void* sqlite3VdbeTransferError(void*);
    void* unixLockSharedMemory(void*);
    void* unixDeviceCharacteristics(void*);
    void* sqlite3BlobCompare(void*);
    void* sqlite3BtreeCloseCursor(void*);
    void* sqlite3NoopDestructor(void*);
    void* vdbeMergeEngineFree(void*);
    void* trimFunc(void*);
    void* malloc_size(void*);
    void* sqlite3JoinType(void*);
    void* explainAppendTerm(void*);
    void* sysconf(void*);
    void* sqlite3VdbeFreeCursor(void*);
    void* sqlite3_keyword_check(void*);
    void* printfFunc(void*);
    void* printTypeOf(void*);
    void* pcache1Unpin(void*);
    void* vdbeCompareMemString(void*);
    void* sqlite3_str_errcode(void*);
    void* unixCurrentTimeInt64(void*);
    void* sqlite3ExprIfTrue(void*);
    void* sqlite3ExprSimplifiedAndOr(void*);
    void* dlsym(void*);
    void* cellSizePtr(void*);
    void* nolockLock(void*);
    void* renameTableFunc(void*);
    void* xferCompatibleIndex(void*);
    void* windowAggStep(void*);
    void* findBtree(void*);
    void* sqlite3ExprCodeIN(void*);
    void* flockClose(void*);
    void* whereLoopOutputAdjust(void*);
    void* multiSelectCollSeq(void*);
    void* sqlite3_backup_step(void*);
    void* sqlite3BtreeCursorHasHint(void*);
    void* last_valueStepFunc(void*);
    void* flockLock(void*);
    void* sqlite3VdbeExplain(void*);
    void* sqlite3AddPrimaryKey(void*);
    void* sqlite3InvalidFunction(void*);
    void* sqlite3PagerSavepoint(void*);
    void* rowSetNDeepTree(void*);
    void* sumInverse(void*);
    void* totalFinalize(void*);
    void* unixSync(void*);
    void* sqlite3VdbeMultiLoad(void*);
    void* renameParseCleanup(void*);
    void* sqlite3_result_null(void*);
    void* vdbePmaReaderClear(void*);
    void* sqlite3_reset(void*);
    void* sqlite3_strnicmp(void*);
    void* binCollFunc(void*);
    void* sqlite3UpsertDoUpdate(void*);
    void* sqlite3_clear_bindings(void*);
    void* sqlite3_rollback_hook(void*);
    void* sqlite3BtreeBeginStmt(void*);
    void* sqlite3_column_count(void*);
    void* getPageMMap(void*);
    void* setChildPtrmaps(void*);
    void* freeP4Mem(void*);
    void* btreeComputeFreeSpace(void*);
    void* unixUnlock(void*);
    void* sqlite3_result_zeroblob(void*);
    void* memRealValue(void*);
    void* sqlite3_backup_remaining(void*);
    void* vdbeMemClear(void*);
    void* sqlite3_limit(void*);
    void* exprSetHeight(void*);
    void* unixSetSystemCall(void*);
    void* access(void*);
    void* sqlite3_vfs_unregister(void*);
    void* sqlite3ExprDeleteNN(void*);
    void* sqlite3ParseUri(void*);
    void* typeofFunc(void*);
    void* sqlite3_get_table_cb(void*);
    void* afpIoFinderImpl(void*);
    void* unixMapfile(void*);
    void* sqlite3BtreeCursorHintFlags(void*);
    void* writeJournalHdr(void*);
    void* memIntValue(void*);
    void* whereRangeVectorLen(void*);
    void* pager_write(void*);
    void* sqlite3_db_cacheflush(void*);
    void* sqlite3VdbeExec(void*);
    void* createFunctionApi(void*);
    void* sqlite3ResolveOrderGroupBy(void*);
    void* btreeParseCellPtrIndex(void*);
    void* sqlite3_vtab_nochange(void*);
    void* rowSetEntrySort(void*);
    void* vdbeSorterSort(void*);
    void* loadExt(void*);
    void* sqlite3ExprListDup(void*);
    void* sqlite3WalClose(void*);
    void* quoteFunc(void*);
    void* whereIndexExprTransColumn(void*);
    void* sqlite3_prepare16_v2(void*);
    void* sqlite3_free(void*);
    void* dbReallocFinish(void*);
    void* pthreadMutexAlloc(void*);
    void* pthreadMutexEnd(void*);
    void* pthreadMutexLeave(void*);
    void* sqlite3WhereBegin(void*);
    void* row_numberValueFunc(void*);
    void* sqlite3ExprAffinity(void*);
    void* sqlite3_errcode(void*);
    void* getPageError(void*);
    void* minmaxStep(void*);
    void* sqlite3VdbeMemClearAndResize(void*);
    void* unixNextSystemCall(void*);
    void* sqlite3_bind_text64(void*);
    void* subjournalPageIfRequired(void*);
    void* strftimeFunc(void*);
    void* sqlite3_update_hook(void*);
    void* sqlite3VdbeCloseStatement(void*);
    void* copyNodeContent(void*);
    void* vdbeSorterCompare(void*);
    void* vdbeIncrPopulate(void*);
    void* printDouble(void*);
    void* sqlite3ExprIfFalse(void*);
    void* sqlite3_collation_needed16(void*);
    void* sqlite3BeginWriteOperation(void*);
    void* sqlite3_open(void*);
    void* sqlite3_result_error16(void*);
    void* sqlite3_errmsg16(void*);
    void* getpid(void*);
    void* btreeInitPage(void*);
    void* constInsert(void*);
    void* last_insert_rowid(void*);
    void* renameUnmapSelectCb(void*);
    void* renameWalkWith(void*);
    void* sqlite3_soft_heap_limit64(void*);
    void* sqlite3VdbeMemStringify(void*);
    void* sqlite3_progress_handler(void*);
    void* sqlite3SrcListDup(void*);
    void* fsctl(void*);
    void* vdbeIncrPopulateThread(void*);
    void* blobSeekToRow(void*);
    void* sqlite3VdbeMakeReady(void*);
    void* sqlite3_create_filename(void*);
    void* sqlite3_sourceid(void*);
    void* unixSectorSize(void*);
    void* tokenExpr(void*);
    void* putVarint64(void*);
    void* likeFunc(void*);
    void* sqlite3MemFree(void*);
    void* instrFunc(void*);
    void* sqlite3_value_numeric_type(void*);
    void* sqlite3_result_zeroblob64(void*);
    void* randomFunc(void*);
    void* sqlite3BtreeNext(void*);
    void* unixFetch(void*);
    void* sqlite3VdbeMemNumerify(void*);
    void* sqlite3_close_v2(void*);
    void* pagerStress(void*);
    void* findConstInWhere(void*);
    void* sqlite3VdbeSorterReset(void*);
    void* noopMutexEnter(void*);
    void* sqlite3VdbeMemRelease(void*);
    void* first_valueStepFunc(void*);
    void* unixCurrentTime(void*);
    void* dotlockCheckReservedLock(void*);
    void* sqlite3WalkSelectExpr(void*);
    void* sysctlbyname(void*);
    void* identPut(void*);
    void* resolveP2Values(void*);
    void* noopMutexLeave(void*);
    void* proxyCreateUnixFile(void*);
    void* sqlite3WhereSplit(void*);
    void* minMaxFinalize(void*);
    void* sqlite3VdbeClearObject(void*);
    void* selectExpander(void*);
    void* printProgress(void*);
    void* malloc_zone_realloc(void*);
    void* sqlite3PagerCommitPhaseOne(void*);
    void* sqlite3AuthReadCol(void*);
    void* sqlite3_compileoption_get(void*);
    void* btreeEnterAll(void*);
    void* walIndexAppend(void*);
    void* pagerWriteLargeSector(void*);
    void* sqlite3FindCollSeq(void*);
    void* selectInnerLoop(void*);
    void* unixRead(void*);
    void* proxyTakeConch(void*);
    void* exprTableRegister(void*);
    void* sqlite3_str_finish(void*);
    void* dotlockLock(void*);
    void* sqlite3_bind_null(void*);
    void* proxyTransformUnixFile(void*);
    void* unixGetTempname(void*);
    void* sqlite3MemInit(void*);
    void* sqlite3BtreeDelete(void*);
    void* fkParentIsModified(void*);
    void* sqlite3BtreeClose(void*);
    void* sqlite3_backup_init(void*);
    void* noopMutexInit(void*);
    void* memjrnlWrite(void*);
    void* vdbePmaReaderSeek(void*);
    void* fchown(void*);
    void* multiSelectOrderByKeyInfo(void*);
    void* sqlite3_auto_extension(void*);
    void* renameTableSelectCb(void*);
    void* substSelect(void*);
    void* renameTableExprCb(void*);
    void* afpClose(void*);
    void* sqlite3SetHasNullFlag(void*);
    void* vdbeSorterSetupMerge(void*);
    void* sqlite3VdbeMemSetRowSet(void*);
    void* exprAnalyze(void*);
    void* sqlite3VdbeRecordCompare(void*);
    void* sqlite3Analyze(void*);
    void* getcwd(void*);
    void* sqlite3BtreeRollback(void*);
    void* sqlite3_reset_auto_extension(void*);
    void* noopStepFunc(void*);
    void* sqlite3_backup_finish(void*);
    void* propagateConstantExprRewrite(void*);
    void* wherePathSatisfiesOrderBy(void*);
    void* sqlite3ErrorFinish(void*);
    void* btreeLeaveAll(void*);
    void* openDirectory(void*);
    void* malloc_zone_free(void*);
    void* sqlite3ExprImpliesNonNullRow(void*);
    void* pcache1Create(void*);
    void* sqlite3PagerClose(void*);
    void* btreePrevious(void*);
    void* charFunc(void*);
    void* sqlite3Pragma(void*);
    void* rankStepFunc(void*);
    void* sqlite3_create_function(void*);
    void* sqlite3_value_subtype(void*);
    void* whereUsablePartialIndex(void*);
    void* sqlite3VdbeSorterWrite(void*);
    void* sqlite3WalkSelect(void*);
    void* whereScanNext(void*);
    void* changes(void*);
    void* exprListDeleteNN(void*);
    void* sqlite3_column_blob(void*);
    void* afpCheckReservedLock(void*);
    void* fkScanChildren(void*);
    void* nolockCheckReservedLock(void*);
    void* sqlite3DecOrHexToI64(void*);
    void* dlclose(void*);
    void* flockUnlock(void*);
    void* resolveAlias(void*);
    void* sqlite3_result_int(void*);
    void* sqlite3_blob_open(void*);
    void* checkTreePage(void*);
    void* accessPayloadChecked(void*);
    void* computeJD(void*);
    void* sqlite3GetVdbe(void*);
    void* sqlite3VdbeIntegerAffinity(void*);
    void* keywordCode(void*);
    void* proxyIoFinderImpl(void*);
    void* incrAggDepth(void*);
    void* sqlite3_free_filename(void*);
    void* sqlite3BtreePrevious(void*);
    void* sqlite3_last_insert_rowid(void*);
    void* sqlite3_bind_zeroblob(void*);
    void* sqlite3_threadsafe(void*);
    void* destroyRootPage(void*);
    void* unixDlSym(void*);
    void* juliandayFunc(void*);
    void* renameWalkTrigger(void*);
    void* dotlockUnlock(void*);
    void* sqlite3_keyword_name(void*);
    void* btreeInvokeBusyHandler(void*);
    void* sqlite3_enable_shared_cache(void*);
    void* sqlite3Checkpoint(void*);
    void* sqlite3WindowCompare(void*);
    void* sqlite3OpenTempDatabase(void*);
    void* corruptSchema(void*);
    void* nth_valueFinalizeFunc(void*);
    void* sqlite3_result_blob64(void*);
    void* sqlite3_stmt_isexplain(void*);
    void* sqlite3_create_collation(void*);
    void* sqlite3_filename_database(void*);
    void* sqlite3DeleteFrom(void*);
    void* sqlite3MulInt64(void*);
    void* sqlite3ExprCodeExprList(void*);
    void* sqlite3IdListDup(void*);
    void* sqlite3FixExpr(void*);
    void* noopValueFunc(void*);
    void* sqlite3VdbeSorterNext(void*);
    void* sqlite3_errstr(void*);
    void* sqlite3BtreeCursorIsValidNN(void*);
    void* sqlite3MemRealloc(void*);
    void* btreeCursor(void*);
    void* computeCellSize(void*);
    void* btreeCellSizeCheck(void*);
    void* sqlite3VdbeRealValue(void*);
    void* unixShmLock(void*);
    void* sqlite3_test_control(void*);
    void* sqlite3CodeRowTrigger(void*);
    void* renameUnmapExprCb(void*);
    void* sqlite3_bind_text(void*);
    void* dlerror(void*);
    void* sqlite3RollbackAll(void*);
    void* analyzeAggregatesInSelectEnd(void*);
    void* sqlite3MemRoundup(void*);
    void* sqlite3BtreePayloadChecked(void*);
    void* sqlite3TableAffinity(void*);
    void* pcache1Alloc(void*);
    void* renameResolveTrigger(void*);
    void* generateWithRecursiveQuery(void*);
    void* sqlite3BtreePayloadFetch(void*);
    void* sqlite3ReadSchema(void*);
    void* sqlite3SrcListEnlarge(void*);
    void* last_valueFinalizeFunc(void*);
    void* sqlite3_snprintf(void*);
    void* sqlite3_cancel_auto_extension(void*);
    void* sqlite3PagerRollback(void*);
    void* sqlite3_malloc64(void*);
    void* sqlite3_bind_parameter_count(void*);
    void* sqlite3_close(void*);
    void* posixOpen(void*);
    void* sqlite3_column_type(void*);
    void* walIndexWriteHdr(void*);
    void* sqlite3SchemaGet(void*);
    void* memjrnlSync(void*);
    void* sqlite3_prepare16_v3(void*);
    void* sqlite3VdbeSorterRowkey(void*);
    void* codeExprOrVector(void*);
    void* vdbeCloseStatement(void*);
    void* sqlite3Malloc(void*);
    void* sqlite3_result_int64(void*);
    void* sqlite3ExprImpliesExpr(void*);
    void* fillInUnixFile(void*);
    void* sqlite3_value_free(void*);
    void* sqlite3OpenTableAndIndices(void*);
    void* sqlite3EndTable(void*);
    void* unixGetSystemCall(void*);
    void* openStatTable(void*);
    void* sqlite3_blob_write(void*);
    void* multiSelectOrderBy(void*);
    void* substrFunc(void*);
    void* ntileInvFunc(void*);
    void* sqlite3RefillIndex(void*);
    void* sqlite3_prepare(void*);
    void* pagerAddPageToRollbackJournal(void*);
    void* codeDistinct(void*);
    void* sqlite3_str_appendf(void*);
    void* sqlite3_str_vappendf(void*);
}

void addToDynamicLibrary() {
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendf", (void*)sqlite3_str_appendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendf", (void*)sqlite3_str_appendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendf", (void*)sqlite3_str_appendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendf", (void*)sqlite3_str_appendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendf", (void*)sqlite3_str_appendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_vappendf", (void*)sqlite3_str_vappendf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemTranslate", (void*)sqlite3VdbeMemTranslate);
    llvm::sys::DynamicLibrary::AddSymbol("atoi", (void*)atoi);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_initialize", (void*)sqlite3_initialize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BitvecClear", (void*)sqlite3BitvecClear);
    llvm::sys::DynamicLibrary::AddSymbol("callXInversePtr", (void*)callXInversePtr);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexFree", (void*)pthreadMutexFree);
    llvm::sys::DynamicLibrary::AddSymbol("pageReinit", (void*)pageReinit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeFirst", (void*)sqlite3BtreeFirst);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Vacuum", (void*)sqlite3Vacuum);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CollapseDatabaseArray", (void*)sqlite3CollapseDatabaseArray);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VarintLen", (void*)sqlite3VarintLen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mutex_free", (void*)sqlite3_mutex_free);
    llvm::sys::DynamicLibrary::AddSymbol("exprIdxCover", (void*)exprIdxCover);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeOpen", (void*)sqlite3BtreeOpen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_expanded_sql", (void*)sqlite3_expanded_sql);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_os_init", (void*)sqlite3_os_init);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_stricmp", (void*)sqlite3_stricmp);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeGetColumnOfTable", (void*)sqlite3ExprCodeGetColumnOfTable);
    llvm::sys::DynamicLibrary::AddSymbol("exprNodeIsConstant", (void*)exprNodeIsConstant);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_backup_pagecount", (void*)sqlite3_backup_pagecount);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_error_code", (void*)sqlite3_result_error_code);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_value", (void*)sqlite3_column_value);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RunParser", (void*)sqlite3RunParser);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectWalkFail", (void*)sqlite3SelectWalkFail);
    llvm::sys::DynamicLibrary::AddSymbol("futimes", (void*)futimes);
    llvm::sys::DynamicLibrary::AddSymbol("valueBytes", (void*)valueBytes);
    llvm::sys::DynamicLibrary::AddSymbol("computeLimitRegisters", (void*)computeLimitRegisters);
    llvm::sys::DynamicLibrary::AddSymbol("strlen", (void*)strlen);
    llvm::sys::DynamicLibrary::AddSymbol("posixUnlock", (void*)posixUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlTruncate", (void*)memjrnlTruncate);
    llvm::sys::DynamicLibrary::AddSymbol("selectPopWith", (void*)selectPopWith);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_exec", (void*)sqlite3_exec);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemExpandBlob", (void*)sqlite3VdbeMemExpandBlob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeInsert", (void*)sqlite3BtreeInsert);
    llvm::sys::DynamicLibrary::AddSymbol("groupConcatInverse", (void*)groupConcatInverse);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAllocUnpackedRecord", (void*)sqlite3VdbeAllocUnpackedRecord);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BitvecDestroy", (void*)sqlite3BitvecDestroy);
    llvm::sys::DynamicLibrary::AddSymbol("minMaxValue", (void*)minMaxValue);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListDelete", (void*)sqlite3SrcListDelete);
    llvm::sys::DynamicLibrary::AddSymbol("strcmp", (void*)strcmp);
    llvm::sys::DynamicLibrary::AddSymbol("unixCheckReservedLock", (void*)unixCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemTooBig", (void*)sqlite3VdbeMemTooBig);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_libversion", (void*)sqlite3_libversion);
    llvm::sys::DynamicLibrary::AddSymbol("compileoptiongetFunc", (void*)compileoptiongetFunc);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlClose", (void*)memjrnlClose);
    llvm::sys::DynamicLibrary::AddSymbol("minmaxFunc", (void*)minmaxFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalCheckpoint", (void*)sqlite3WalCheckpoint);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FkLocateIndex", (void*)sqlite3FkLocateIndex);
    llvm::sys::DynamicLibrary::AddSymbol("last_valueInvFunc", (void*)last_valueInvFunc);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexInit", (void*)pthreadMutexInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3StartTable", (void*)sqlite3StartTable);
    llvm::sys::DynamicLibrary::AddSymbol("mkdir", (void*)mkdir);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_int", (void*)sqlite3_bind_int);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3OomFault", (void*)sqlite3OomFault);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_free_table", (void*)sqlite3_free_table);
    llvm::sys::DynamicLibrary::AddSymbol("unlink", (void*)unlink);
    llvm::sys::DynamicLibrary::AddSymbol("measureAllocationSize", (void*)measureAllocationSize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_wal_checkpoint_v2", (void*)sqlite3_wal_checkpoint_v2);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexFree", (void*)noopMutexFree);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeReleaseAndSetInt64", (void*)vdbeReleaseAndSetInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AddDefaultValue", (void*)sqlite3AddDefaultValue);
    llvm::sys::DynamicLibrary::AddSymbol("selectAddSubqueryTypeInfo", (void*)selectAddSubqueryTypeInfo);
    llvm::sys::DynamicLibrary::AddSymbol("convertCompoundSelectToSubquery", (void*)convertCompoundSelectToSubquery);
    llvm::sys::DynamicLibrary::AddSymbol("walTryBeginRead", (void*)walTryBeginRead);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DbStrDup", (void*)sqlite3DbStrDup);
    llvm::sys::DynamicLibrary::AddSymbol("cellSizePtrNoPayload", (void*)cellSizePtrNoPayload);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_handle", (void*)sqlite3_db_handle);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterOpenTempFile", (void*)vdbeSorterOpenTempFile);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ResultSetOfSelect", (void*)sqlite3ResultSetOfSelect);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_set_auxdata", (void*)sqlite3_set_auxdata);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_text", (void*)sqlite3_value_text);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3StrAccumEnlarge", (void*)sqlite3StrAccumEnlarge);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_double", (void*)sqlite3_value_double);
    llvm::sys::DynamicLibrary::AddSymbol("exprCodeBetween", (void*)exprCodeBetween);
    llvm::sys::DynamicLibrary::AddSymbol("impliesNotNullRow", (void*)impliesNotNullRow);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeClearTable", (void*)sqlite3BtreeClearTable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3UniqueConstraint", (void*)sqlite3UniqueConstraint);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FkOldmask", (void*)sqlite3FkOldmask);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Init", (void*)pcache1Init);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_file_control", (void*)sqlite3_file_control);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterCompareText", (void*)vdbeSorterCompareText);
    llvm::sys::DynamicLibrary::AddSymbol("windowReturnOneRow", (void*)windowReturnOneRow);
    llvm::sys::DynamicLibrary::AddSymbol("localtimeOffset", (void*)localtimeOffset);
    llvm::sys::DynamicLibrary::AddSymbol("returnSingleInt", (void*)returnSingleInt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeChangeP4", (void*)sqlite3VdbeChangeP4);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCursor", (void*)sqlite3BtreeCursor);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListAssignCursors", (void*)sqlite3SrcListAssignCursors);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_error_toobig", (void*)sqlite3_result_error_toobig);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemIntegerify", (void*)sqlite3VdbeMemIntegerify);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterFlushThread", (void*)vdbeSorterFlushThread);
    llvm::sys::DynamicLibrary::AddSymbol("codeInteger", (void*)codeInteger);
    llvm::sys::DynamicLibrary::AddSymbol("walkExpr", (void*)walkExpr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3LeaveMutexAndCloseZombie", (void*)sqlite3LeaveMutexAndCloseZombie);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_read", (void*)sqlite3_blob_read);
    llvm::sys::DynamicLibrary::AddSymbol("pagerOpenSavepoint", (void*)pagerOpenSavepoint);
    llvm::sys::DynamicLibrary::AddSymbol("findInodeInfo", (void*)findInodeInfo);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Pagecount", (void*)pcache1Pagecount);
    llvm::sys::DynamicLibrary::AddSymbol("groupConcatStep", (void*)groupConcatStep);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprListAppendVector", (void*)sqlite3ExprListAppendVector);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_keyword_count", (void*)sqlite3_keyword_count);
    llvm::sys::DynamicLibrary::AddSymbol("codeCompare", (void*)codeCompare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_extended_errcode", (void*)sqlite3_extended_errcode);
    llvm::sys::DynamicLibrary::AddSymbol("attachFunc", (void*)attachFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_status64", (void*)sqlite3_status64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereClauseClear", (void*)sqlite3WhereClauseClear);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_text16", (void*)sqlite3_result_text16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_filename_wal", (void*)sqlite3_filename_wal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectAddColumnTypeAndCollation", (void*)sqlite3SelectAddColumnTypeAndCollation);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_blob", (void*)sqlite3_result_blob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BitvecSet", (void*)sqlite3BitvecSet);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_pointer", (void*)sqlite3_value_pointer);
    llvm::sys::DynamicLibrary::AddSymbol("unixSleep", (void*)unixSleep);
    llvm::sys::DynamicLibrary::AddSymbol("unixGetLastError", (void*)unixGetLastError);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_function16", (void*)sqlite3_create_function16);
    llvm::sys::DynamicLibrary::AddSymbol("releaseMemArray", (void*)releaseMemArray);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_extended_result_codes", (void*)sqlite3_extended_result_codes);
    llvm::sys::DynamicLibrary::AddSymbol("callXSFuncPtr", (void*)callXSFuncPtr);
    llvm::sys::DynamicLibrary::AddSymbol("parseHhMmSs", (void*)parseHhMmSs);
    llvm::sys::DynamicLibrary::AddSymbol("whereCombineDisjuncts", (void*)whereCombineDisjuncts);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectDup", (void*)sqlite3SelectDup);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vfs_find", (void*)sqlite3_vfs_find);
    llvm::sys::DynamicLibrary::AddSymbol("generateOutputSubroutine", (void*)generateOutputSubroutine);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemSize", (void*)sqlite3MemSize);
    llvm::sys::DynamicLibrary::AddSymbol("wherePathSolver", (void*)wherePathSolver);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_nochange", (void*)sqlite3_value_nochange);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyConchLock", (void*)proxyConchLock);
    llvm::sys::DynamicLibrary::AddSymbol("nolockIoFinderImpl", (void*)nolockIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeBooleanValue", (void*)sqlite3VdbeBooleanValue);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_wal_hook", (void*)sqlite3_wal_hook);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Truncate", (void*)pcache1Truncate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_get_autocommit", (void*)sqlite3_get_autocommit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_stmt_readonly", (void*)sqlite3_stmt_readonly);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_decltype16", (void*)sqlite3_column_decltype16);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopAddOr", (void*)whereLoopAddOr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3InitOne", (void*)sqlite3InitOne);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeCheckFk", (void*)sqlite3VdbeCheckFk);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_realloc", (void*)sqlite3_realloc);
    llvm::sys::DynamicLibrary::AddSymbol("cume_distInvFunc", (void*)cume_distInvFunc);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexTry", (void*)pthreadMutexTry);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeMergeEngineLevel0", (void*)vdbeMergeEngineLevel0);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CodeSubselect", (void*)sqlite3CodeSubselect);
    llvm::sys::DynamicLibrary::AddSymbol("ptrmapGet", (void*)ptrmapGet);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3OsCloseFree", (void*)sqlite3OsCloseFree);
    llvm::sys::DynamicLibrary::AddSymbol("unixFileControl", (void*)unixFileControl);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_total_changes", (void*)sqlite3_total_changes);
    llvm::sys::DynamicLibrary::AddSymbol("out2PrereleaseWithClear", (void*)out2PrereleaseWithClear);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeSavepoint", (void*)sqlite3BtreeSavepoint);
    llvm::sys::DynamicLibrary::AddSymbol("rebuildPage", (void*)rebuildPage);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeRecordCompareInt", (void*)vdbeRecordCompareInt);
    llvm::sys::DynamicLibrary::AddSymbol("unixGetpagesize", (void*)unixGetpagesize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_uri_parameter", (void*)sqlite3_uri_parameter);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_enable_load_extension", (void*)sqlite3_enable_load_extension);
    llvm::sys::DynamicLibrary::AddSymbol("countStep", (void*)countStep);
    llvm::sys::DynamicLibrary::AddSymbol("autoIncBegin", (void*)autoIncBegin);
    llvm::sys::DynamicLibrary::AddSymbol("pager_unlock", (void*)pager_unlock);
    llvm::sys::DynamicLibrary::AddSymbol("insertCell", (void*)insertCell);
    llvm::sys::DynamicLibrary::AddSymbol("analyzeOneTable", (void*)analyzeOneTable);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopDelete", (void*)whereLoopDelete);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GetToken", (void*)sqlite3GetToken);
    llvm::sys::DynamicLibrary::AddSymbol("unixFileSize", (void*)unixFileSize);
    llvm::sys::DynamicLibrary::AddSymbol("saveCursorsOnList", (void*)saveCursorsOnList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_complete16", (void*)sqlite3_complete16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CodeDropTable", (void*)sqlite3CodeDropTable);
    llvm::sys::DynamicLibrary::AddSymbol("pageInsertArray", (void*)pageInsertArray);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeCursorMoveto", (void*)sqlite3VdbeCursorMoveto);
    llvm::sys::DynamicLibrary::AddSymbol("windowCheckValue", (void*)windowCheckValue);
    llvm::sys::DynamicLibrary::AddSymbol("saveCursorKey", (void*)saveCursorKey);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCheckIN", (void*)sqlite3ExprCheckIN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DbMallocRawNN", (void*)sqlite3DbMallocRawNN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_get_auxdata", (void*)sqlite3_get_auxdata);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderIncrInit", (void*)vdbePmaReaderIncrInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemCast", (void*)sqlite3VdbeMemCast);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_bytes", (void*)sqlite3_value_bytes);
    llvm::sys::DynamicLibrary::AddSymbol("exprDup", (void*)exprDup);
    llvm::sys::DynamicLibrary::AddSymbol("unixShmUnmap", (void*)unixShmUnmap);
    llvm::sys::DynamicLibrary::AddSymbol("flock", (void*)flock);
    llvm::sys::DynamicLibrary::AddSymbol("whereClauseInsert", (void*)whereClauseInsert);
    llvm::sys::DynamicLibrary::AddSymbol("nullifFunc", (void*)nullifFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_reopen", (void*)sqlite3_blob_reopen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_readonly", (void*)sqlite3_db_readonly);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_bytes16", (void*)sqlite3_column_bytes16);
    llvm::sys::DynamicLibrary::AddSymbol("unixFullPathname", (void*)unixFullPathname);
    llvm::sys::DynamicLibrary::AddSymbol("getOverflowPage", (void*)getOverflowPage);
    llvm::sys::DynamicLibrary::AddSymbol("unixOpen", (void*)unixOpen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_get_table", (void*)sqlite3_get_table);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeCopy", (void*)sqlite3ExprCodeCopy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_status", (void*)sqlite3_status);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_new", (void*)sqlite3_str_new);
    llvm::sys::DynamicLibrary::AddSymbol("renameParseSql", (void*)renameParseSql);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_default_zone", (void*)malloc_default_zone);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CreateForeignKey", (void*)sqlite3CreateForeignKey);
    llvm::sys::DynamicLibrary::AddSymbol("compileoptionusedFunc", (void*)compileoptionusedFunc);
    llvm::sys::DynamicLibrary::AddSymbol("unixDlOpen", (void*)unixDlOpen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCreateTable", (void*)sqlite3BtreeCreateTable);
    llvm::sys::DynamicLibrary::AddSymbol("selectWindowRewriteSelectCb", (void*)selectWindowRewriteSelectCb);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_open16", (void*)sqlite3_open16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_changes", (void*)sqlite3_changes);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeChangeEncoding", (void*)sqlite3VdbeChangeEncoding);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAddOpList", (void*)sqlite3VdbeAddOpList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAddOp3", (void*)sqlite3VdbeAddOp3);
    llvm::sys::DynamicLibrary::AddSymbol("unixClose", (void*)unixClose);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3IsNaN", (void*)sqlite3IsNaN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_decltype", (void*)sqlite3_column_decltype);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeIntValue", (void*)sqlite3VdbeIntValue);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FkActions", (void*)sqlite3FkActions);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlFileSize", (void*)memjrnlFileSize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vmprintf", (void*)sqlite3_vmprintf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeError", (void*)sqlite3VdbeError);
    llvm::sys::DynamicLibrary::AddSymbol("resolveOrderGroupBy", (void*)resolveOrderGroupBy);
    llvm::sys::DynamicLibrary::AddSymbol("patternCompare", (void*)patternCompare);
    llvm::sys::DynamicLibrary::AddSymbol("btreeParseCellAdjustSizeForOverflow", (void*)btreeParseCellAdjustSizeForOverflow);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Select", (void*)sqlite3Select);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ColumnsFromExprList", (void*)sqlite3ColumnsFromExprList);
    llvm::sys::DynamicLibrary::AddSymbol("percent_rankStepFunc", (void*)percent_rankStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_int64", (void*)sqlite3_column_int64);
    llvm::sys::DynamicLibrary::AddSymbol("exit", (void*)exit);
    llvm::sys::DynamicLibrary::AddSymbol("walDecodeFrame", (void*)walDecodeFrame);
    llvm::sys::DynamicLibrary::AddSymbol("ntileStepFunc", (void*)ntileStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_collation16", (void*)sqlite3_create_collation16);
    llvm::sys::DynamicLibrary::AddSymbol("getSafetyLevel", (void*)getSafetyLevel);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RowSetInsert", (void*)sqlite3RowSetInsert);
    llvm::sys::DynamicLibrary::AddSymbol("lengthFunc", (void*)lengthFunc);
    llvm::sys::DynamicLibrary::AddSymbol("readMasterJournal", (void*)readMasterJournal);
    llvm::sys::DynamicLibrary::AddSymbol("my_assert", (void*)my_assert);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_config", (void*)sqlite3_config);
    llvm::sys::DynamicLibrary::AddSymbol("randomBlob", (void*)randomBlob);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexPageRealloc", (void*)walIndexPageRealloc);
    llvm::sys::DynamicLibrary::AddSymbol("resolveExprStep", (void*)resolveExprStep);
    llvm::sys::DynamicLibrary::AddSymbol("clearDatabasePage", (void*)clearDatabasePage);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FindFunction", (void*)sqlite3FindFunction);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowDelete", (void*)sqlite3WindowDelete);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_text64", (void*)sqlite3_result_text64);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopInsert", (void*)whereLoopInsert);
    llvm::sys::DynamicLibrary::AddSymbol("resetAccumulator", (void*)resetAccumulator);
    llvm::sys::DynamicLibrary::AddSymbol("btreeEndTransaction", (void*)btreeEndTransaction);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAddFunctionCall", (void*)sqlite3VdbeAddFunctionCall);
    llvm::sys::DynamicLibrary::AddSymbol("enlargeAndAppend", (void*)enlargeAndAppend);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutexattr_settype", (void*)pthread_mutexattr_settype);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_dup", (void*)sqlite3_value_dup);
    llvm::sys::DynamicLibrary::AddSymbol("rmdir", (void*)rmdir);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSerialPut", (void*)sqlite3VdbeSerialPut);
    llvm::sys::DynamicLibrary::AddSymbol("nolockClose", (void*)nolockClose);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_set_authorizer", (void*)sqlite3_set_authorizer);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_subtype", (void*)sqlite3_result_subtype);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_bytes", (void*)sqlite3_column_bytes);
    llvm::sys::DynamicLibrary::AddSymbol("memcmp", (void*)memcmp);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_collation_needed", (void*)sqlite3_collation_needed);
    // llvm::sys::DynamicLibrary::AddSymbol("flockIoFinderImpl", (void*)flockIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_next_stmt", (void*)sqlite3_next_stmt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeFinishMoveto", (void*)sqlite3VdbeFinishMoveto);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_busy_handler", (void*)sqlite3_busy_handler);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemRealify", (void*)sqlite3VdbeMemRealify);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowDup", (void*)sqlite3WindowDup);
    llvm::sys::DynamicLibrary::AddSymbol("upperFunc", (void*)upperFunc);
    llvm::sys::DynamicLibrary::AddSymbol("valueToText", (void*)valueToText);
    llvm::sys::DynamicLibrary::AddSymbol("ctimeFunc", (void*)ctimeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("btreeParseCellPtrNoPayload", (void*)btreeParseCellPtrNoPayload);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeClearCursor", (void*)sqlite3BtreeClearCursor);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_set_zone_name", (void*)malloc_set_zone_name);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare16", (void*)sqlite3_prepare16);
    llvm::sys::DynamicLibrary::AddSymbol("first_valueFinalizeFunc", (void*)first_valueFinalizeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("pager_playback_one_page", (void*)pager_playback_one_page);
    llvm::sys::DynamicLibrary::AddSymbol("zeroblobFunc", (void*)zeroblobFunc);
    llvm::sys::DynamicLibrary::AddSymbol("nth_valueStepFunc", (void*)nth_valueStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_zeroblob64", (void*)sqlite3_bind_zeroblob64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprWalkNoop", (void*)sqlite3ExprWalkNoop);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemFromBtree", (void*)sqlite3VdbeMemFromBtree);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GenerateConstraintChecks", (void*)sqlite3GenerateConstraintChecks);
    llvm::sys::DynamicLibrary::AddSymbol("sqliteDefaultBusyCallback", (void*)sqliteDefaultBusyCallback);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ComputeGeneratedColumns", (void*)sqlite3ComputeGeneratedColumns);
    llvm::sys::DynamicLibrary::AddSymbol("groupConcatFinalize", (void*)groupConcatFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare_v3", (void*)sqlite3_prepare_v3);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexEnd", (void*)noopMutexEnd);
    llvm::sys::DynamicLibrary::AddSymbol("unixShmBarrier", (void*)unixShmBarrier);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutexattr_init", (void*)pthread_mutexattr_init);
    llvm::sys::DynamicLibrary::AddSymbol("exprImpliesNotNull", (void*)exprImpliesNotNull);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_text16be", (void*)sqlite3_value_text16be);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterCompareInt", (void*)vdbeSorterCompareInt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DbFreeNN", (void*)sqlite3DbFreeNN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeEof", (void*)sqlite3BtreeEof);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeTripAllCursors", (void*)sqlite3BtreeTripAllCursors);
    llvm::sys::DynamicLibrary::AddSymbol("hexFunc", (void*)hexFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_uri_key", (void*)sqlite3_uri_key);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_config", (void*)sqlite3_db_config);
    llvm::sys::DynamicLibrary::AddSymbol("errlogFunc", (void*)errlogFunc);
    llvm::sys::DynamicLibrary::AddSymbol("datetimeFunc", (void*)datetimeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereCodeOneLoopStart", (void*)sqlite3WhereCodeOneLoopStart);
    llvm::sys::DynamicLibrary::AddSymbol("renameColumnSelectCb", (void*)renameColumnSelectCb);
    llvm::sys::DynamicLibrary::AddSymbol("decodeIntArray", (void*)decodeIntArray);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_int64", (void*)sqlite3_bind_int64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_sql", (void*)sqlite3_sql);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_text16be", (void*)sqlite3_result_text16be);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreePutData", (void*)sqlite3BtreePutData);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_double", (void*)sqlite3_column_double);
    llvm::sys::DynamicLibrary::AddSymbol("isDate", (void*)isDate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_finalize", (void*)sqlite3_finalize);
    llvm::sys::DynamicLibrary::AddSymbol("disableTerm", (void*)disableTerm);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_blob", (void*)sqlite3_bind_blob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_strglob", (void*)sqlite3_strglob);
    llvm::sys::DynamicLibrary::AddSymbol("btreeOverwriteCell", (void*)btreeOverwriteCell);
    llvm::sys::DynamicLibrary::AddSymbol("roundFunc", (void*)roundFunc);
    llvm::sys::DynamicLibrary::AddSymbol("ctimestampFunc", (void*)ctimestampFunc);
    llvm::sys::DynamicLibrary::AddSymbol("gettimeofday", (void*)gettimeofday);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_uri_boolean", (void*)sqlite3_uri_boolean);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_text16le", (void*)sqlite3_result_text16le);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RowSetTest", (void*)sqlite3RowSetTest);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_pointer", (void*)sqlite3_bind_pointer);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeTemp", (void*)sqlite3ExprCodeTemp);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemMove", (void*)sqlite3VdbeMemMove);
    llvm::sys::DynamicLibrary::AddSymbol("replaceFunc", (void*)replaceFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_pointer", (void*)sqlite3_result_pointer);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_user_data", (void*)sqlite3_user_data);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Prepare", (void*)sqlite3Prepare);
    llvm::sys::DynamicLibrary::AddSymbol("fprintf", (void*)fprintf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RunVacuum", (void*)sqlite3RunVacuum);
    llvm::sys::DynamicLibrary::AddSymbol("unicodeFunc", (void*)unicodeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("walkWindowList", (void*)walkWindowList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_collation_v2", (void*)sqlite3_create_collation_v2);
    llvm::sys::DynamicLibrary::AddSymbol("resolveRemoveWindowsCb", (void*)resolveRemoveWindowsCb);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_value", (void*)sqlite3_result_value);
    llvm::sys::DynamicLibrary::AddSymbol("zeroPage", (void*)zeroPage);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MallocSize", (void*)sqlite3MallocSize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3UnlinkAndDeleteTable", (void*)sqlite3UnlinkAndDeleteTable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MaterializeView", (void*)sqlite3MaterializeView);
    llvm::sys::DynamicLibrary::AddSymbol("geteuid", (void*)geteuid);
    llvm::sys::DynamicLibrary::AddSymbol("out2Prerelease", (void*)out2Prerelease);
    llvm::sys::DynamicLibrary::AddSymbol("readJournalHdr", (void*)readJournalHdr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3KeyInfoOfIndex", (void*)sqlite3KeyInfoOfIndex);
    // llvm::sys::DynamicLibrary::AddSymbol("yy_reduce", (void*)yy_reduce);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_aggregate_context", (void*)sqlite3_aggregate_context);
    llvm::sys::DynamicLibrary::AddSymbol("unlockBtreeMutex", (void*)unlockBtreeMutex);
    llvm::sys::DynamicLibrary::AddSymbol("dense_rankValueFunc", (void*)dense_rankValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("getDigits", (void*)getDigits);
    llvm::sys::DynamicLibrary::AddSymbol("getenv", (void*)getenv);
    //llvm::sys::DynamicLibrary::AddSymbol("proxyUnlock", (void*)proxyUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexEnter", (void*)pthreadMutexEnter);
    llvm::sys::DynamicLibrary::AddSymbol("incrVacuumStep", (void*)incrVacuumStep);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeIncrFree", (void*)vdbeIncrFree);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FixSrcList", (void*)sqlite3FixSrcList);
    llvm::sys::DynamicLibrary::AddSymbol("pager_reset", (void*)pager_reset);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ResetAllSchemasOfConnection", (void*)sqlite3ResetAllSchemasOfConnection);
    // llvm::sys::DynamicLibrary::AddSymbol("nfsUnlock", (void*)nfsUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("rtrimCollFunc", (void*)rtrimCollFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GetVarint32", (void*)sqlite3GetVarint32);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Close", (void*)sqlite3Close);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FkCheck", (void*)sqlite3FkCheck);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3IndexAffinityOk", (void*)sqlite3IndexAffinityOk);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutex_lock", (void*)pthread_mutex_lock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PcacheDirtyList", (void*)sqlite3PcacheDirtyList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AddInt64", (void*)sqlite3AddInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeCursorRestore", (void*)sqlite3VdbeCursorRestore);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowChain", (void*)sqlite3WindowChain);
    llvm::sys::DynamicLibrary::AddSymbol("unixLock", (void*)unixLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_int", (void*)sqlite3_column_int);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAddOp4", (void*)sqlite3VdbeAddOp4);
    llvm::sys::DynamicLibrary::AddSymbol("gatherSelectWindowsCallback", (void*)gatherSelectWindowsCallback);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CodeVerifyNamedSchema", (void*)sqlite3CodeVerifyNamedSchema);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeGeneratedColumn", (void*)sqlite3ExprCodeGeneratedColumn);
    llvm::sys::DynamicLibrary::AddSymbol("percent_rankInvFunc", (void*)percent_rankInvFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_data_count", (void*)sqlite3_data_count);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mutex_enter", (void*)sqlite3_mutex_enter);
    // llvm::sys::DynamicLibrary::AddSymbol("afpUnlock", (void*)afpUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3LockAndPrepare", (void*)sqlite3LockAndPrepare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_compileoption_used", (void*)sqlite3_compileoption_used);
    llvm::sys::DynamicLibrary::AddSymbol("statGet", (void*)statGet);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_close", (void*)sqlite3_blob_close);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vsnprintf", (void*)sqlite3_vsnprintf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vfs_register", (void*)sqlite3_vfs_register);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_soft_heap_limit", (void*)sqlite3_soft_heap_limit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_reset", (void*)sqlite3_str_reset);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_blob", (void*)sqlite3_value_blob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_value", (void*)sqlite3_str_value);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeTarget", (void*)sqlite3ExprCodeTarget);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FindTable", (void*)sqlite3FindTable);
    llvm::sys::DynamicLibrary::AddSymbol("renameColumnExprCb", (void*)renameColumnExprCb);
    llvm::sys::DynamicLibrary::AddSymbol("substExpr", (void*)substExpr);
    llvm::sys::DynamicLibrary::AddSymbol("robust_open", (void*)robust_open);
    llvm::sys::DynamicLibrary::AddSymbol("cdateFunc", (void*)cdateFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_text16", (void*)sqlite3_bind_text16);
    llvm::sys::DynamicLibrary::AddSymbol("printInt", (void*)printInt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_value", (void*)sqlite3_bind_value);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_double", (void*)sqlite3_bind_double);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_load_extension", (void*)sqlite3_load_extension);
    llvm::sys::DynamicLibrary::AddSymbol("exprNodeIsDeterministic", (void*)exprNodeIsDeterministic);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CompleteInsertion", (void*)sqlite3CompleteInsertion);
    llvm::sys::DynamicLibrary::AddSymbol("versionFunc", (void*)versionFunc);
    llvm::sys::DynamicLibrary::AddSymbol("countFinalize", (void*)countFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_create", (void*)pthread_create);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListAppend", (void*)sqlite3SrcListAppend);
    llvm::sys::DynamicLibrary::AddSymbol("unixUnfetch", (void*)unixUnfetch);
    llvm::sys::DynamicLibrary::AddSymbol("windowIfNewPeer", (void*)windowIfNewPeer);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_sleep", (void*)sqlite3_sleep);
    llvm::sys::DynamicLibrary::AddSymbol("renameColumnFunc", (void*)renameColumnFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_hard_heap_limit64", (void*)sqlite3_hard_heap_limit64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeAddOp2", (void*)sqlite3VdbeAddOp2);
    // llvm::sys::DynamicLibrary::AddSymbol("flockCheckReservedLock", (void*)flockCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_thread_cleanup", (void*)sqlite3_thread_cleanup);
    llvm::sys::DynamicLibrary::AddSymbol("pager_end_transaction", (void*)pager_end_transaction);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprListAppend", (void*)sqlite3ExprListAppend);
    llvm::sys::DynamicLibrary::AddSymbol("resizeResolveLabel", (void*)resizeResolveLabel);
    llvm::sys::DynamicLibrary::AddSymbol("handleMovedCursor", (void*)handleMovedCursor);
    llvm::sys::DynamicLibrary::AddSymbol("dotlockClose", (void*)dotlockClose);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1FetchStage2", (void*)pcache1FetchStage2);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_text16", (void*)sqlite3_value_text16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemInit", (void*)sqlite3VdbeMemInit);
    llvm::sys::DynamicLibrary::AddSymbol("allocateCursor", (void*)allocateCursor);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterListToPMA", (void*)vdbeSorterListToPMA);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PutVarint", (void*)sqlite3PutVarint);
    llvm::sys::DynamicLibrary::AddSymbol("sumStep", (void*)sumStep);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_parameter_index", (void*)sqlite3_bind_parameter_index);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprAlloc", (void*)sqlite3ExprAlloc);
    llvm::sys::DynamicLibrary::AddSymbol("computeYMD", (void*)computeYMD);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_type", (void*)sqlite3_value_type);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeClrCopy", (void*)vdbeClrCopy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemSetNull", (void*)sqlite3VdbeMemSetNull);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DropTriggerPtr", (void*)sqlite3DropTriggerPtr);
    llvm::sys::DynamicLibrary::AddSymbol("deleteTable", (void*)deleteTable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeFrameRestore", (void*)sqlite3VdbeFrameRestore);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Prepare16", (void*)sqlite3Prepare16);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexTryHdr", (void*)walIndexTryHdr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GetCollSeq", (void*)sqlite3GetCollSeq);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_window_function", (void*)sqlite3_create_window_function);
    llvm::sys::DynamicLibrary::AddSymbol("computeNumericType", (void*)computeNumericType);
    // llvm::sys::DynamicLibrary::AddSymbol("gethostuuid", (void*)gethostuuid);
    llvm::sys::DynamicLibrary::AddSymbol("valueFromExpr", (void*)valueFromExpr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_system_errno", (void*)sqlite3_system_errno);
    llvm::sys::DynamicLibrary::AddSymbol("execSqlF", (void*)execSqlF);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CheckObjectName", (void*)sqlite3CheckObjectName);
    llvm::sys::DynamicLibrary::AddSymbol("sourceidFunc", (void*)sourceidFunc);
    llvm::sys::DynamicLibrary::AddSymbol("statInit", (void*)statInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare_v2", (void*)sqlite3_prepare_v2);
    llvm::sys::DynamicLibrary::AddSymbol("statAccumDestructor", (void*)statAccumDestructor);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3OpenTable", (void*)sqlite3OpenTable);
    llvm::sys::DynamicLibrary::AddSymbol("relocatePage", (void*)relocatePage);
    llvm::sys::DynamicLibrary::AddSymbol("balance", (void*)balance);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Free", (void*)pcache1Free);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemShutdown", (void*)sqlite3MemShutdown);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GenerateRowDelete", (void*)sqlite3GenerateRowDelete);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Update", (void*)sqlite3Update);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_wal_checkpoint", (void*)sqlite3_wal_checkpoint);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_error_nomem", (void*)sqlite3_result_error_nomem);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_malloc", (void*)sqlite3_malloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_blob64", (void*)sqlite3_bind_blob64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_memory_highwater", (void*)sqlite3_memory_highwater);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalDefaultHook", (void*)sqlite3WalDefaultHook);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeFrameMemDel", (void*)sqlite3VdbeFrameMemDel);
    llvm::sys::DynamicLibrary::AddSymbol("exprMightBeIndexed2", (void*)exprMightBeIndexed2);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Destroy", (void*)pcache1Destroy);
    llvm::sys::DynamicLibrary::AddSymbol("nocaseCollatingFunc", (void*)nocaseCollatingFunc);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyLock", (void*)proxyLock);
    llvm::sys::DynamicLibrary::AddSymbol("unixWrite", (void*)unixWrite);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_function_v2", (void*)sqlite3_create_function_v2);
    llvm::sys::DynamicLibrary::AddSymbol("printPtrAndValue", (void*)printPtrAndValue);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeChangeP4Full", (void*)vdbeChangeP4Full);
    llvm::sys::DynamicLibrary::AddSymbol("percent_rankValueFunc", (void*)percent_rankValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeUpdateMeta", (void*)sqlite3BtreeUpdateMeta);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_text16le", (void*)sqlite3_value_text16le);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_status", (void*)sqlite3_db_status);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ErrorWithMsg", (void*)sqlite3ErrorWithMsg);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_create_zone", (void*)malloc_create_zone);
    llvm::sys::DynamicLibrary::AddSymbol("cume_distValueFunc", (void*)cume_distValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_release_memory", (void*)sqlite3_release_memory);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3InitCallback", (void*)sqlite3InitCallback);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_aggregate_count", (void*)sqlite3_aggregate_count);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReadVarint", (void*)vdbePmaReadVarint);
    llvm::sys::DynamicLibrary::AddSymbol("columnTypeImpl", (void*)columnTypeImpl);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexReadHdr", (void*)walIndexReadHdr);
    llvm::sys::DynamicLibrary::AddSymbol("exprSelectUsage", (void*)exprSelectUsage);
    llvm::sys::DynamicLibrary::AddSymbol("unixShmMap", (void*)unixShmMap);
    llvm::sys::DynamicLibrary::AddSymbol("malloc", (void*)malloc);
    llvm::sys::DynamicLibrary::AddSymbol("checkConstraintExprNode", (void*)checkConstraintExprNode);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_set_last_insert_rowid", (void*)sqlite3_set_last_insert_rowid);
    llvm::sys::DynamicLibrary::AddSymbol("createAggContext", (void*)createAggContext);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WithAdd", (void*)sqlite3WithAdd);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeIntegerKey", (void*)sqlite3BtreeIntegerKey);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeSetPageSize", (void*)sqlite3BtreeSetPageSize);
    llvm::sys::DynamicLibrary::AddSymbol("openDatabase", (void*)openDatabase);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3IndexAffinityStr", (void*)sqlite3IndexAffinityStr);
    llvm::sys::DynamicLibrary::AddSymbol("allocateBtreePage", (void*)allocateBtreePage);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowAlloc", (void*)sqlite3WindowAlloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCursorIsValid", (void*)sqlite3BtreeCursorIsValid);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReadBlob", (void*)vdbePmaReadBlob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_expired", (void*)sqlite3_expired);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Realloc", (void*)sqlite3Realloc);
    llvm::sys::DynamicLibrary::AddSymbol("setupLookaside", (void*)setupLookaside);
    llvm::sys::DynamicLibrary::AddSymbol("freeP4", (void*)freeP4);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_busy_timeout", (void*)sqlite3_busy_timeout);
    llvm::sys::DynamicLibrary::AddSymbol("readlink", (void*)readlink);
    llvm::sys::DynamicLibrary::AddSymbol("apiOomError", (void*)apiOomError);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexClose", (void*)walIndexClose);
    llvm::sys::DynamicLibrary::AddSymbol("countInverse", (void*)countInverse);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PExpr", (void*)sqlite3PExpr);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Shrink", (void*)pcache1Shrink);
    llvm::sys::DynamicLibrary::AddSymbol("getCellInfo", (void*)getCellInfo);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeIdxRowid", (void*)sqlite3VdbeIdxRowid);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_name16", (void*)sqlite3_column_name16);
    llvm::sys::DynamicLibrary::AddSymbol("strAccumFinishRealloc", (void*)strAccumFinishRealloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeHalt", (void*)sqlite3VdbeHalt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerSetJournalMode", (void*)sqlite3PagerSetJournalMode);
    // llvm::sys::DynamicLibrary::AddSymbol("yy_destructor", (void*)yy_destructor);
    llvm::sys::DynamicLibrary::AddSymbol("whereScanInitIndexExpr", (void*)whereScanInitIndexExpr);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeRecordCompareString", (void*)vdbeRecordCompareString);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeSetSpillSize", (void*)sqlite3BtreeSetSpillSize);
    llvm::sys::DynamicLibrary::AddSymbol("groupConcatValue", (void*)groupConcatValue);
    llvm::sys::DynamicLibrary::AddSymbol("utimes", (void*)utimes);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlRead", (void*)memjrnlRead);
    llvm::sys::DynamicLibrary::AddSymbol("sumFinalize", (void*)sumFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("codeTriggerProgram", (void*)codeTriggerProgram);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_memory_used", (void*)sqlite3_memory_used);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemShallowCopy", (void*)sqlite3VdbeMemShallowCopy);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterJoinThread", (void*)vdbeSorterJoinThread);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_realloc64", (void*)sqlite3_realloc64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_bytes", (void*)sqlite3_blob_bytes);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeFakeValidCursor", (void*)sqlite3BtreeFakeValidCursor);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowOffsetExpr", (void*)sqlite3WindowOffsetExpr);
    llvm::sys::DynamicLibrary::AddSymbol("unixRandomness", (void*)unixRandomness);
    llvm::sys::DynamicLibrary::AddSymbol("random", (void*)random);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterInit", (void*)sqlite3VdbeSorterInit);
    llvm::sys::DynamicLibrary::AddSymbol("havingToWhereExprCb", (void*)havingToWhereExprCb);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexTry", (void*)noopMutexTry);
    llvm::sys::DynamicLibrary::AddSymbol("moveToRoot", (void*)moveToRoot);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeRecordCompareWithSkip", (void*)sqlite3VdbeRecordCompareWithSkip);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExpirePreparedStatements", (void*)sqlite3ExpirePreparedStatements);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_release_memory", (void*)sqlite3_db_release_memory);
    llvm::sys::DynamicLibrary::AddSymbol("pushOntoSorter", (void*)pushOntoSorter);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_open_v2", (void*)sqlite3_open_v2);
    llvm::sys::DynamicLibrary::AddSymbol("defragmentPage", (void*)defragmentPage);
    llvm::sys::DynamicLibrary::AddSymbol("dlopen", (void*)dlopen);
    llvm::sys::DynamicLibrary::AddSymbol("backupOnePage", (void*)backupOnePage);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemSetInt64", (void*)sqlite3VdbeMemSetInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_libversion_number", (void*)sqlite3_libversion_number);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_parameter_name", (void*)sqlite3_bind_parameter_name);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_strlike", (void*)sqlite3_strlike);
    llvm::sys::DynamicLibrary::AddSymbol("avgFinalize", (void*)avgFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("growOp3", (void*)growOp3);
    llvm::sys::DynamicLibrary::AddSymbol("unixDlClose", (void*)unixDlClose);
    llvm::sys::DynamicLibrary::AddSymbol("dbMallocRawFinish", (void*)dbMallocRawFinish);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CreateFunc", (void*)sqlite3CreateFunc);
    llvm::sys::DynamicLibrary::AddSymbol("btreeOverwriteContent", (void*)btreeOverwriteContent);
    // llvm::sys::DynamicLibrary::AddSymbol("srandomdev", (void*)srandomdev);
    llvm::sys::DynamicLibrary::AddSymbol("pragmaFunclistLine", (void*)pragmaFunclistLine);
    llvm::sys::DynamicLibrary::AddSymbol("checkAppendMsg", (void*)checkAppendMsg);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyClose", (void*)proxyClose);
    llvm::sys::DynamicLibrary::AddSymbol("gatherSelectWindowsSelectCallback", (void*)gatherSelectWindowsSelectCallback);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutex_trylock", (void*)pthread_mutex_trylock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_error", (void*)sqlite3_result_error);
    llvm::sys::DynamicLibrary::AddSymbol("clearCell", (void*)clearCell);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderNext", (void*)vdbePmaReaderNext);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCollSeq", (void*)sqlite3ExprCollSeq);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeOneByteSerialTypeLen", (void*)sqlite3VdbeOneByteSerialTypeLen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_int64", (void*)sqlite3_value_int64);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutex_init", (void*)pthread_mutex_init);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Shutdown", (void*)pcache1Shutdown);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereEnd", (void*)sqlite3WhereEnd);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mprintf", (void*)sqlite3_mprintf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_text16", (void*)sqlite3_column_text16);
    llvm::sys::DynamicLibrary::AddSymbol("exprNodeIsConstantOrGroupBy", (void*)exprNodeIsConstantOrGroupBy);
    llvm::sys::DynamicLibrary::AddSymbol("rename", (void*)rename);
    llvm::sys::DynamicLibrary::AddSymbol("walEncodeFrame", (void*)walEncodeFrame);
    llvm::sys::DynamicLibrary::AddSymbol("pager_write_pagelist", (void*)pager_write_pagelist);
    llvm::sys::DynamicLibrary::AddSymbol("fkLookupParent", (void*)fkLookupParent);
    llvm::sys::DynamicLibrary::AddSymbol("unixAccess", (void*)unixAccess);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_randomness", (void*)sqlite3_randomness);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3IdListAppend", (void*)sqlite3IdListAppend);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCompare", (void*)sqlite3ExprCompare);
    llvm::sys::DynamicLibrary::AddSymbol("total_changes", (void*)total_changes);
    llvm::sys::DynamicLibrary::AddSymbol("analyzeAggregate", (void*)analyzeAggregate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterRewind", (void*)sqlite3VdbeSorterRewind);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Cachesize", (void*)pcache1Cachesize);
    llvm::sys::DynamicLibrary::AddSymbol("freeP4FuncCtx", (void*)freeP4FuncCtx);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeGetMeta", (void*)sqlite3BtreeGetMeta);
    llvm::sys::DynamicLibrary::AddSymbol("cume_distStepFunc", (void*)cume_distStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_context_db_handle", (void*)sqlite3_context_db_handle);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_frombind", (void*)sqlite3_value_frombind);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_complete", (void*)sqlite3_complete);
    llvm::sys::DynamicLibrary::AddSymbol("autoIncrementEnd", (void*)autoIncrementEnd);
    llvm::sys::DynamicLibrary::AddSymbol("free", (void*)free);
    llvm::sys::DynamicLibrary::AddSymbol("pagerWalFrames", (void*)pagerWalFrames);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ViewGetColumnNames", (void*)sqlite3ViewGetColumnNames);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderIncrMergeInit", (void*)vdbePmaReaderIncrMergeInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CreateIndex", (void*)sqlite3CreateIndex);
    llvm::sys::DynamicLibrary::AddSymbol("dateFunc", (void*)dateFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_commit_hook", (void*)sqlite3_commit_hook);
    llvm::sys::DynamicLibrary::AddSymbol("bindText", (void*)bindText);
    llvm::sys::DynamicLibrary::AddSymbol("dupedExprSize", (void*)dupedExprSize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_table_column_metadata", (void*)sqlite3_table_column_metadata);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_int", (void*)sqlite3_value_int);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_stmt_busy", (void*)sqlite3_stmt_busy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_length", (void*)sqlite3_str_length);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_overload_function", (void*)sqlite3_overload_function);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FindDb", (void*)sqlite3FindDb);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SchemaClear", (void*)sqlite3SchemaClear);
    llvm::sys::DynamicLibrary::AddSymbol("absFunc", (void*)absFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_memory_alarm", (void*)sqlite3_memory_alarm);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_uri_int64", (void*)sqlite3_uri_int64);
    llvm::sys::DynamicLibrary::AddSymbol("analysisLoader", (void*)analysisLoader);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListAppendFromTerm", (void*)sqlite3SrcListAppendFromTerm);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RowSetDelete", (void*)sqlite3RowSetDelete);
    llvm::sys::DynamicLibrary::AddSymbol("btreeParseCellPtr", (void*)btreeParseCellPtr);
    llvm::sys::DynamicLibrary::AddSymbol("execSql", (void*)execSql);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeMergeEngineStep", (void*)vdbeMergeEngineStep);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3NestedParse", (void*)sqlite3NestedParse);
    llvm::sys::DynamicLibrary::AddSymbol("row_numberStepFunc", (void*)row_numberStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mutex_leave", (void*)sqlite3_mutex_leave);
    // llvm::sys::DynamicLibrary::AddSymbol("nfsIoFinderImpl", (void*)nfsIoFinderImpl);
    // llvm::sys::DynamicLibrary::AddSymbol("strlcpy", (void*)strlcpy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_global_recover", (void*)sqlite3_global_recover);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SetJoinExpr", (void*)sqlite3SetJoinExpr);
    llvm::sys::DynamicLibrary::AddSymbol("syncJournal", (void*)syncJournal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SubInt64", (void*)sqlite3SubInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_interrupt", (void*)sqlite3_interrupt);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterFlushPMA", (void*)vdbeSorterFlushPMA);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeBeginTrans", (void*)sqlite3BtreeBeginTrans);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeIdxKeyCompare", (void*)sqlite3VdbeIdxKeyCompare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DeleteTriggerStep", (void*)sqlite3DeleteTriggerStep);
    llvm::sys::DynamicLibrary::AddSymbol("windowCodeOp", (void*)windowCodeOp);
    // llvm::sys::DynamicLibrary::AddSymbol("afpLock", (void*)afpLock);
    llvm::sys::DynamicLibrary::AddSymbol("updateAccumulator", (void*)updateAccumulator);
    llvm::sys::DynamicLibrary::AddSymbol("newDatabase", (void*)newDatabase);
    llvm::sys::DynamicLibrary::AddSymbol("analyzeAggregatesInSelect", (void*)analyzeAggregatesInSelect);
    llvm::sys::DynamicLibrary::AddSymbol("targetSrcList", (void*)targetSrcList);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeMergeEngineInit", (void*)vdbeMergeEngineInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DbFree", (void*)sqlite3DbFree);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerSharedLock", (void*)sqlite3PagerSharedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DropTable", (void*)sqlite3DropTable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FixSelect", (void*)sqlite3FixSelect);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_filename", (void*)sqlite3_db_filename);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GenerateIndexKey", (void*)sqlite3GenerateIndexKey);
    llvm::sys::DynamicLibrary::AddSymbol("rowSetTreeToList", (void*)rowSetTreeToList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_double", (void*)sqlite3_result_double);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemMakeWriteable", (void*)sqlite3VdbeMemMakeWriteable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemNulTerminate", (void*)sqlite3VdbeMemNulTerminate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_name", (void*)sqlite3_column_name);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeSetPagerFlags", (void*)sqlite3BtreeSetPagerFlags);
    // llvm::sys::DynamicLibrary::AddSymbol("autolockIoFinderImpl", (void*)autolockIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("getPageNormal", (void*)getPageNormal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Insert", (void*)sqlite3Insert);
    llvm::sys::DynamicLibrary::AddSymbol("windowAggFinal", (void*)windowAggFinal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemFinalize", (void*)sqlite3VdbeMemFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerSetPagesize", (void*)sqlite3PagerSetPagesize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_transfer_bindings", (void*)sqlite3_transfer_bindings);
    llvm::sys::DynamicLibrary::AddSymbol("windowReadPeerValues", (void*)windowReadPeerValues);
    llvm::sys::DynamicLibrary::AddSymbol("backupUpdate", (void*)backupUpdate);
    llvm::sys::DynamicLibrary::AddSymbol("blobReadWrite", (void*)blobReadWrite);
    llvm::sys::DynamicLibrary::AddSymbol("whereApplyPartialIndexConstraints", (void*)whereApplyPartialIndexConstraints);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprIsInteger", (void*)sqlite3ExprIsInteger);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyCheckReservedLock", (void*)proxyCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_bytes16", (void*)sqlite3_value_bytes16);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderBgIncrInit", (void*)vdbePmaReaderBgIncrInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FindInIndex", (void*)sqlite3FindInIndex);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3TableLock", (void*)sqlite3TableLock);
    llvm::sys::DynamicLibrary::AddSymbol("timeFunc", (void*)timeFunc);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_zone_malloc", (void*)malloc_zone_malloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MatchEName", (void*)sqlite3MatchEName);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_wal_autocheckpoint", (void*)sqlite3_wal_autocheckpoint);
    llvm::sys::DynamicLibrary::AddSymbol("ntileValueFunc", (void*)ntileValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mutex_try", (void*)sqlite3_mutex_try);
    llvm::sys::DynamicLibrary::AddSymbol("btreeNext", (void*)btreeNext);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCommitPhaseTwo", (void*)sqlite3BtreeCommitPhaseTwo);
    llvm::sys::DynamicLibrary::AddSymbol("freeSpace", (void*)freeSpace);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_errmsg", (void*)sqlite3_errmsg);
    llvm::sys::DynamicLibrary::AddSymbol("exprINAffinity", (void*)exprINAffinity);
    llvm::sys::DynamicLibrary::AddSymbol("statPush", (void*)statPush);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectExprHeight", (void*)sqlite3SelectExprHeight);
    llvm::sys::DynamicLibrary::AddSymbol("codeEqualityTerm", (void*)codeEqualityTerm);
    llvm::sys::DynamicLibrary::AddSymbol("rankValueFunc", (void*)rankValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("localtime", (void*)localtime);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeDelete", (void*)sqlite3VdbeDelete);
    llvm::sys::DynamicLibrary::AddSymbol("clearSelect", (void*)clearSelect);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AnalysisLoad", (void*)sqlite3AnalysisLoad);
    llvm::sys::DynamicLibrary::AddSymbol("exprSrcCount", (void*)exprSrcCount);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MPrintf", (void*)sqlite3MPrintf);
    llvm::sys::DynamicLibrary::AddSymbol("unixDelete", (void*)unixDelete);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectNew", (void*)sqlite3SelectNew);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemCompare", (void*)sqlite3MemCompare);
    llvm::sys::DynamicLibrary::AddSymbol("time", (void*)time);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopAddBtreeIndex", (void*)whereLoopAddBtreeIndex);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AddGenerated", (void*)sqlite3AddGenerated);
    llvm::sys::DynamicLibrary::AddSymbol("exprColumnFlagUnion", (void*)exprColumnFlagUnion);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeLeave", (void*)vdbeLeave);
    llvm::sys::DynamicLibrary::AddSymbol("pushDownWhereTerms", (void*)pushDownWhereTerms);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemSetStr", (void*)sqlite3VdbeMemSetStr);
    llvm::sys::DynamicLibrary::AddSymbol("verifyDbFile", (void*)verifyDbFile);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_text", (void*)sqlite3_column_text);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ErrorMsg", (void*)sqlite3ErrorMsg);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GenerateRowIndexDelete", (void*)sqlite3GenerateRowIndexDelete);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemMalloc", (void*)sqlite3MemMalloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectWalkNoop", (void*)sqlite3SelectWalkNoop);
    llvm::sys::DynamicLibrary::AddSymbol("accessPayload", (void*)accessPayload);
    llvm::sys::DynamicLibrary::AddSymbol("codeAttach", (void*)codeAttach);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Rekey", (void*)pcache1Rekey);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_appendall", (void*)sqlite3_str_appendall);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SelectPrep", (void*)sqlite3SelectPrep);
    llvm::sys::DynamicLibrary::AddSymbol("unsetJoinExpr", (void*)unsetJoinExpr);
    llvm::sys::DynamicLibrary::AddSymbol("readDbPage", (void*)readDbPage);
    llvm::sys::DynamicLibrary::AddSymbol("nolockUnlock", (void*)nolockUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("detachFunc", (void*)detachFunc);
    llvm::sys::DynamicLibrary::AddSymbol("unixDlError", (void*)unixDlError);
    llvm::sys::DynamicLibrary::AddSymbol("last_valueValueFunc", (void*)last_valueValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_os_end", (void*)sqlite3_os_end);
    llvm::sys::DynamicLibrary::AddSymbol("renameEditSql", (void*)renameEditSql);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeRunJustOnce", (void*)sqlite3ExprCodeRunJustOnce);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSerialTypeLen", (void*)sqlite3VdbeSerialTypeLen);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexEnd", (void*)pthreadMutexEnd);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_step", (void*)sqlite3_step);
    llvm::sys::DynamicLibrary::AddSymbol("lowerFunc", (void*)lowerFunc);
    llvm::sys::DynamicLibrary::AddSymbol("getRowTrigger", (void*)getRowTrigger);
    llvm::sys::DynamicLibrary::AddSymbol("pagerOpenWal", (void*)pagerOpenWal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GetInt32", (void*)sqlite3GetInt32);
    llvm::sys::DynamicLibrary::AddSymbol("renameTableTest", (void*)renameTableTest);
    llvm::sys::DynamicLibrary::AddSymbol("selectWindowRewriteExprCb", (void*)selectWindowRewriteExprCb);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereExplainOneScan", (void*)sqlite3WhereExplainOneScan);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_filename_journal", (void*)sqlite3_filename_journal);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3HashInsert", (void*)sqlite3HashInsert);
    llvm::sys::DynamicLibrary::AddSymbol("dbg", (void*)dbg);
    llvm::sys::DynamicLibrary::AddSymbol("reindexTable", (void*)reindexTable);
    llvm::sys::DynamicLibrary::AddSymbol("dropCell", (void*)dropCell);
    llvm::sys::DynamicLibrary::AddSymbol("btreeLockCarefully", (void*)btreeLockCarefully);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeReset", (void*)sqlite3VdbeReset);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCommitPhaseOne", (void*)sqlite3BtreeCommitPhaseOne);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_text", (void*)sqlite3_result_text);
    llvm::sys::DynamicLibrary::AddSymbol("pcacheFetchFinishWithInit", (void*)pcacheFetchFinishWithInit);
    llvm::sys::DynamicLibrary::AddSymbol("moveToLeftmost", (void*)moveToLeftmost);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_mutex_alloc", (void*)sqlite3_mutex_alloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalFindFrame", (void*)sqlite3WalFindFrame);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexAlloc", (void*)noopMutexAlloc);
    llvm::sys::DynamicLibrary::AddSymbol("unixShmPurge", (void*)unixShmPurge);
    llvm::sys::DynamicLibrary::AddSymbol("checkList", (void*)checkList);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Fetch", (void*)pcache1Fetch);
    llvm::sys::DynamicLibrary::AddSymbol("dense_rankStepFunc", (void*)dense_rankStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreePayloadSize", (void*)sqlite3BtreePayloadSize);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeUnbind", (void*)vdbeUnbind);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_stmt_status", (void*)sqlite3_stmt_status);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_mutex", (void*)sqlite3_db_mutex);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopAddBtree", (void*)whereLoopAddBtree);
    llvm::sys::DynamicLibrary::AddSymbol("posixIoFinderImpl", (void*)posixIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("resizeIndexObject", (void*)resizeIndexObject);
    llvm::sys::DynamicLibrary::AddSymbol("pager_playback", (void*)pager_playback);
    llvm::sys::DynamicLibrary::AddSymbol("pageFindSlot", (void*)pageFindSlot);
    llvm::sys::DynamicLibrary::AddSymbol("whereIndexExprTransNode", (void*)whereIndexExprTransNode);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_msize", (void*)sqlite3_msize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCode", (void*)sqlite3ExprCode);
    llvm::sys::DynamicLibrary::AddSymbol("windowCodeRangeTest", (void*)windowCodeRangeTest);
    llvm::sys::DynamicLibrary::AddSymbol("ftruncate", (void*)ftruncate);
    llvm::sys::DynamicLibrary::AddSymbol("createCollation", (void*)createCollation);
    llvm::sys::DynamicLibrary::AddSymbol("freePage2", (void*)freePage2);
    llvm::sys::DynamicLibrary::AddSymbol("resolveSelectStep", (void*)resolveSelectStep);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereExprUsageNN", (void*)sqlite3WhereExprUsageNN);
    llvm::sys::DynamicLibrary::AddSymbol("ptrmapPut", (void*)ptrmapPut);
    llvm::sys::DynamicLibrary::AddSymbol("unixTruncate", (void*)unixTruncate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_shutdown", (void*)sqlite3_shutdown);
    llvm::sys::DynamicLibrary::AddSymbol("dotlockIoFinderImpl", (void*)dotlockIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeTransferError", (void*)sqlite3VdbeTransferError);
    llvm::sys::DynamicLibrary::AddSymbol("unixLockSharedMemory", (void*)unixLockSharedMemory);
    llvm::sys::DynamicLibrary::AddSymbol("unixDeviceCharacteristics", (void*)unixDeviceCharacteristics);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BlobCompare", (void*)sqlite3BlobCompare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCloseCursor", (void*)sqlite3BtreeCloseCursor);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3NoopDestructor", (void*)sqlite3NoopDestructor);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeMergeEngineFree", (void*)vdbeMergeEngineFree);
    llvm::sys::DynamicLibrary::AddSymbol("trimFunc", (void*)trimFunc);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_size", (void*)malloc_size);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3JoinType", (void*)sqlite3JoinType);
    llvm::sys::DynamicLibrary::AddSymbol("explainAppendTerm", (void*)explainAppendTerm);
    llvm::sys::DynamicLibrary::AddSymbol("sysconf", (void*)sysconf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeFreeCursor", (void*)sqlite3VdbeFreeCursor);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_keyword_check", (void*)sqlite3_keyword_check);
    llvm::sys::DynamicLibrary::AddSymbol("printfFunc", (void*)printfFunc);
    llvm::sys::DynamicLibrary::AddSymbol("printTypeOf", (void*)printTypeOf);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Unpin", (void*)pcache1Unpin);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeCompareMemString", (void*)vdbeCompareMemString);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_errcode", (void*)sqlite3_str_errcode);
    llvm::sys::DynamicLibrary::AddSymbol("unixCurrentTimeInt64", (void*)unixCurrentTimeInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprIfTrue", (void*)sqlite3ExprIfTrue);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprSimplifiedAndOr", (void*)sqlite3ExprSimplifiedAndOr);
    llvm::sys::DynamicLibrary::AddSymbol("dlsym", (void*)dlsym);
    llvm::sys::DynamicLibrary::AddSymbol("cellSizePtr", (void*)cellSizePtr);
    llvm::sys::DynamicLibrary::AddSymbol("nolockLock", (void*)nolockLock);
    llvm::sys::DynamicLibrary::AddSymbol("renameTableFunc", (void*)renameTableFunc);
    llvm::sys::DynamicLibrary::AddSymbol("xferCompatibleIndex", (void*)xferCompatibleIndex);
    llvm::sys::DynamicLibrary::AddSymbol("windowAggStep", (void*)windowAggStep);
    llvm::sys::DynamicLibrary::AddSymbol("findBtree", (void*)findBtree);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeIN", (void*)sqlite3ExprCodeIN);
    // llvm::sys::DynamicLibrary::AddSymbol("flockClose", (void*)flockClose);
    llvm::sys::DynamicLibrary::AddSymbol("whereLoopOutputAdjust", (void*)whereLoopOutputAdjust);
    llvm::sys::DynamicLibrary::AddSymbol("multiSelectCollSeq", (void*)multiSelectCollSeq);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_backup_step", (void*)sqlite3_backup_step);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCursorHasHint", (void*)sqlite3BtreeCursorHasHint);
    llvm::sys::DynamicLibrary::AddSymbol("last_valueStepFunc", (void*)last_valueStepFunc);
    // llvm::sys::DynamicLibrary::AddSymbol("flockLock", (void*)flockLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeExplain", (void*)sqlite3VdbeExplain);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AddPrimaryKey", (void*)sqlite3AddPrimaryKey);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3InvalidFunction", (void*)sqlite3InvalidFunction);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerSavepoint", (void*)sqlite3PagerSavepoint);
    llvm::sys::DynamicLibrary::AddSymbol("rowSetNDeepTree", (void*)rowSetNDeepTree);
    llvm::sys::DynamicLibrary::AddSymbol("sumInverse", (void*)sumInverse);
    llvm::sys::DynamicLibrary::AddSymbol("totalFinalize", (void*)totalFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexLeave", (void*)pthreadMutexLeave);
    llvm::sys::DynamicLibrary::AddSymbol("unixSync", (void*)unixSync);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMultiLoad", (void*)sqlite3VdbeMultiLoad);
    llvm::sys::DynamicLibrary::AddSymbol("renameParseCleanup", (void*)renameParseCleanup);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_null", (void*)sqlite3_result_null);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderClear", (void*)vdbePmaReaderClear);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_reset", (void*)sqlite3_reset);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_strnicmp", (void*)sqlite3_strnicmp);
    llvm::sys::DynamicLibrary::AddSymbol("binCollFunc", (void*)binCollFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3UpsertDoUpdate", (void*)sqlite3UpsertDoUpdate);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_clear_bindings", (void*)sqlite3_clear_bindings);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_rollback_hook", (void*)sqlite3_rollback_hook);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeBeginStmt", (void*)sqlite3BtreeBeginStmt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_count", (void*)sqlite3_column_count);
    llvm::sys::DynamicLibrary::AddSymbol("getPageMMap", (void*)getPageMMap);
    llvm::sys::DynamicLibrary::AddSymbol("setChildPtrmaps", (void*)setChildPtrmaps);
    llvm::sys::DynamicLibrary::AddSymbol("freeP4Mem", (void*)freeP4Mem);
    llvm::sys::DynamicLibrary::AddSymbol("btreeComputeFreeSpace", (void*)btreeComputeFreeSpace);
    llvm::sys::DynamicLibrary::AddSymbol("unixUnlock", (void*)unixUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_zeroblob", (void*)sqlite3_result_zeroblob);
    llvm::sys::DynamicLibrary::AddSymbol("memRealValue", (void*)memRealValue);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_backup_remaining", (void*)sqlite3_backup_remaining);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeMemClear", (void*)vdbeMemClear);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_limit", (void*)sqlite3_limit);
    llvm::sys::DynamicLibrary::AddSymbol("exprSetHeight", (void*)exprSetHeight);
    llvm::sys::DynamicLibrary::AddSymbol("unixSetSystemCall", (void*)unixSetSystemCall);
    llvm::sys::DynamicLibrary::AddSymbol("access", (void*)access);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vfs_unregister", (void*)sqlite3_vfs_unregister);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprDeleteNN", (void*)sqlite3ExprDeleteNN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ParseUri", (void*)sqlite3ParseUri);
    llvm::sys::DynamicLibrary::AddSymbol("typeofFunc", (void*)typeofFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_get_table_cb", (void*)sqlite3_get_table_cb);
    // llvm::sys::DynamicLibrary::AddSymbol("afpIoFinderImpl", (void*)afpIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("unixMapfile", (void*)unixMapfile);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCursorHintFlags", (void*)sqlite3BtreeCursorHintFlags);
    llvm::sys::DynamicLibrary::AddSymbol("writeJournalHdr", (void*)writeJournalHdr);
    llvm::sys::DynamicLibrary::AddSymbol("memIntValue", (void*)memIntValue);
    llvm::sys::DynamicLibrary::AddSymbol("whereRangeVectorLen", (void*)whereRangeVectorLen);
    llvm::sys::DynamicLibrary::AddSymbol("pager_write", (void*)pager_write);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_db_cacheflush", (void*)sqlite3_db_cacheflush);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeExec", (void*)sqlite3VdbeExec);
    llvm::sys::DynamicLibrary::AddSymbol("createFunctionApi", (void*)createFunctionApi);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ResolveOrderGroupBy", (void*)sqlite3ResolveOrderGroupBy);
    llvm::sys::DynamicLibrary::AddSymbol("btreeParseCellPtrIndex", (void*)btreeParseCellPtrIndex);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_vtab_nochange", (void*)sqlite3_vtab_nochange);
    llvm::sys::DynamicLibrary::AddSymbol("rowSetEntrySort", (void*)rowSetEntrySort);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterSort", (void*)vdbeSorterSort);
    llvm::sys::DynamicLibrary::AddSymbol("loadExt", (void*)loadExt);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprListDup", (void*)sqlite3ExprListDup);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalClose", (void*)sqlite3WalClose);
    llvm::sys::DynamicLibrary::AddSymbol("quoteFunc", (void*)quoteFunc);
    llvm::sys::DynamicLibrary::AddSymbol("whereIndexExprTransColumn", (void*)whereIndexExprTransColumn);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare16_v2", (void*)sqlite3_prepare16_v2);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_free", (void*)sqlite3_free);
    llvm::sys::DynamicLibrary::AddSymbol("dbReallocFinish", (void*)dbReallocFinish);
    llvm::sys::DynamicLibrary::AddSymbol("pthreadMutexAlloc", (void*)pthreadMutexAlloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereBegin", (void*)sqlite3WhereBegin);
    llvm::sys::DynamicLibrary::AddSymbol("row_numberValueFunc", (void*)row_numberValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprAffinity", (void*)sqlite3ExprAffinity);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_errcode", (void*)sqlite3_errcode);
    llvm::sys::DynamicLibrary::AddSymbol("getPageError", (void*)getPageError);
    llvm::sys::DynamicLibrary::AddSymbol("minmaxStep", (void*)minmaxStep);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemClearAndResize", (void*)sqlite3VdbeMemClearAndResize);
    llvm::sys::DynamicLibrary::AddSymbol("unixNextSystemCall", (void*)unixNextSystemCall);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_text64", (void*)sqlite3_bind_text64);
    llvm::sys::DynamicLibrary::AddSymbol("subjournalPageIfRequired", (void*)subjournalPageIfRequired);
    llvm::sys::DynamicLibrary::AddSymbol("strftimeFunc", (void*)strftimeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_update_hook", (void*)sqlite3_update_hook);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeCloseStatement", (void*)sqlite3VdbeCloseStatement);
    llvm::sys::DynamicLibrary::AddSymbol("copyNodeContent", (void*)copyNodeContent);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterCompare", (void*)vdbeSorterCompare);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeIncrPopulate", (void*)vdbeIncrPopulate);
    llvm::sys::DynamicLibrary::AddSymbol("printDouble", (void*)printDouble);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprIfFalse", (void*)sqlite3ExprIfFalse);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_collation_needed16", (void*)sqlite3_collation_needed16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BeginWriteOperation", (void*)sqlite3BeginWriteOperation);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_open", (void*)sqlite3_open);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_error16", (void*)sqlite3_result_error16);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_errmsg16", (void*)sqlite3_errmsg16);
    llvm::sys::DynamicLibrary::AddSymbol("getpid", (void*)getpid);
    llvm::sys::DynamicLibrary::AddSymbol("btreeInitPage", (void*)btreeInitPage);
    llvm::sys::DynamicLibrary::AddSymbol("constInsert", (void*)constInsert);
    llvm::sys::DynamicLibrary::AddSymbol("last_insert_rowid", (void*)last_insert_rowid);
    llvm::sys::DynamicLibrary::AddSymbol("renameUnmapSelectCb", (void*)renameUnmapSelectCb);
    llvm::sys::DynamicLibrary::AddSymbol("renameWalkWith", (void*)renameWalkWith);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_soft_heap_limit64", (void*)sqlite3_soft_heap_limit64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemStringify", (void*)sqlite3VdbeMemStringify);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_progress_handler", (void*)sqlite3_progress_handler);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListDup", (void*)sqlite3SrcListDup);
    // llvm::sys::DynamicLibrary::AddSymbol("fsctl", (void*)fsctl);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeIncrPopulateThread", (void*)vdbeIncrPopulateThread);
    llvm::sys::DynamicLibrary::AddSymbol("blobSeekToRow", (void*)blobSeekToRow);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMakeReady", (void*)sqlite3VdbeMakeReady);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_filename", (void*)sqlite3_create_filename);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_sourceid", (void*)sqlite3_sourceid);
    llvm::sys::DynamicLibrary::AddSymbol("unixSectorSize", (void*)unixSectorSize);
    // llvm::sys::DynamicLibrary::AddSymbol("tokenExpr", (void*)tokenExpr);
    llvm::sys::DynamicLibrary::AddSymbol("putVarint64", (void*)putVarint64);
    llvm::sys::DynamicLibrary::AddSymbol("likeFunc", (void*)likeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemFree", (void*)sqlite3MemFree);
    llvm::sys::DynamicLibrary::AddSymbol("instrFunc", (void*)instrFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_numeric_type", (void*)sqlite3_value_numeric_type);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_zeroblob64", (void*)sqlite3_result_zeroblob64);
    llvm::sys::DynamicLibrary::AddSymbol("randomFunc", (void*)randomFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeNext", (void*)sqlite3BtreeNext);
    llvm::sys::DynamicLibrary::AddSymbol("unixFetch", (void*)unixFetch);
    llvm::sys::DynamicLibrary::AddSymbol("strncmp", (void*)strncmp);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemNumerify", (void*)sqlite3VdbeMemNumerify);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_close_v2", (void*)sqlite3_close_v2);
    llvm::sys::DynamicLibrary::AddSymbol("pagerStress", (void*)pagerStress);
    llvm::sys::DynamicLibrary::AddSymbol("findConstInWhere", (void*)findConstInWhere);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterReset", (void*)sqlite3VdbeSorterReset);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexEnter", (void*)noopMutexEnter);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemRelease", (void*)sqlite3VdbeMemRelease);
    llvm::sys::DynamicLibrary::AddSymbol("first_valueStepFunc", (void*)first_valueStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("unixCurrentTime", (void*)unixCurrentTime);
    llvm::sys::DynamicLibrary::AddSymbol("dotlockCheckReservedLock", (void*)dotlockCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalkSelectExpr", (void*)sqlite3WalkSelectExpr);
    // llvm::sys::DynamicLibrary::AddSymbol("sysctlbyname", (void*)sysctlbyname);
    llvm::sys::DynamicLibrary::AddSymbol("identPut", (void*)identPut);
    llvm::sys::DynamicLibrary::AddSymbol("resolveP2Values", (void*)resolveP2Values);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexLeave", (void*)noopMutexLeave);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyCreateUnixFile", (void*)proxyCreateUnixFile);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WhereSplit", (void*)sqlite3WhereSplit);
    llvm::sys::DynamicLibrary::AddSymbol("minMaxFinalize", (void*)minMaxFinalize);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeClearObject", (void*)sqlite3VdbeClearObject);
    llvm::sys::DynamicLibrary::AddSymbol("selectExpander", (void*)selectExpander);
    llvm::sys::DynamicLibrary::AddSymbol("printProgress", (void*)printProgress);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_zone_realloc", (void*)malloc_zone_realloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerCommitPhaseOne", (void*)sqlite3PagerCommitPhaseOne);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3AuthReadCol", (void*)sqlite3AuthReadCol);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_compileoption_get", (void*)sqlite3_compileoption_get);
    llvm::sys::DynamicLibrary::AddSymbol("btreeEnterAll", (void*)btreeEnterAll);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexAppend", (void*)walIndexAppend);
    llvm::sys::DynamicLibrary::AddSymbol("pagerWriteLargeSector", (void*)pagerWriteLargeSector);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FindCollSeq", (void*)sqlite3FindCollSeq);
    llvm::sys::DynamicLibrary::AddSymbol("selectInnerLoop", (void*)selectInnerLoop);
    llvm::sys::DynamicLibrary::AddSymbol("unixRead", (void*)unixRead);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyTakeConch", (void*)proxyTakeConch);
    llvm::sys::DynamicLibrary::AddSymbol("exprTableRegister", (void*)exprTableRegister);
    llvm::sys::DynamicLibrary::AddSymbol("fwrite", (void*)fwrite);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_str_finish", (void*)sqlite3_str_finish);
    llvm::sys::DynamicLibrary::AddSymbol("dotlockLock", (void*)dotlockLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_null", (void*)sqlite3_bind_null);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyTransformUnixFile", (void*)proxyTransformUnixFile);
    llvm::sys::DynamicLibrary::AddSymbol("unixGetTempname", (void*)unixGetTempname);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemInit", (void*)sqlite3MemInit);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeDelete", (void*)sqlite3BtreeDelete);
    llvm::sys::DynamicLibrary::AddSymbol("fkParentIsModified", (void*)fkParentIsModified);
    llvm::sys::DynamicLibrary::AddSymbol("pthread_mutex_destroy", (void*)pthread_mutex_destroy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeClose", (void*)sqlite3BtreeClose);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_backup_init", (void*)sqlite3_backup_init);
    llvm::sys::DynamicLibrary::AddSymbol("noopMutexInit", (void*)noopMutexInit);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlWrite", (void*)memjrnlWrite);
    llvm::sys::DynamicLibrary::AddSymbol("vdbePmaReaderSeek", (void*)vdbePmaReaderSeek);
    llvm::sys::DynamicLibrary::AddSymbol("fchown", (void*)fchown);
    llvm::sys::DynamicLibrary::AddSymbol("multiSelectOrderByKeyInfo", (void*)multiSelectOrderByKeyInfo);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_auto_extension", (void*)sqlite3_auto_extension);
    llvm::sys::DynamicLibrary::AddSymbol("renameTableSelectCb", (void*)renameTableSelectCb);
    llvm::sys::DynamicLibrary::AddSymbol("substSelect", (void*)substSelect);
    llvm::sys::DynamicLibrary::AddSymbol("renameTableExprCb", (void*)renameTableExprCb);
    // llvm::sys::DynamicLibrary::AddSymbol("afpClose", (void*)afpClose);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SetHasNullFlag", (void*)sqlite3SetHasNullFlag);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeSorterSetupMerge", (void*)vdbeSorterSetupMerge);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeMemSetRowSet", (void*)sqlite3VdbeMemSetRowSet);
    llvm::sys::DynamicLibrary::AddSymbol("exprAnalyze", (void*)exprAnalyze);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeRecordCompare", (void*)sqlite3VdbeRecordCompare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Analyze", (void*)sqlite3Analyze);
    llvm::sys::DynamicLibrary::AddSymbol("getcwd", (void*)getcwd);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeRollback", (void*)sqlite3BtreeRollback);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_reset_auto_extension", (void*)sqlite3_reset_auto_extension);
    llvm::sys::DynamicLibrary::AddSymbol("noopStepFunc", (void*)noopStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_backup_finish", (void*)sqlite3_backup_finish);
    llvm::sys::DynamicLibrary::AddSymbol("propagateConstantExprRewrite", (void*)propagateConstantExprRewrite);
    llvm::sys::DynamicLibrary::AddSymbol("wherePathSatisfiesOrderBy", (void*)wherePathSatisfiesOrderBy);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ErrorFinish", (void*)sqlite3ErrorFinish);
    llvm::sys::DynamicLibrary::AddSymbol("btreeLeaveAll", (void*)btreeLeaveAll);
    llvm::sys::DynamicLibrary::AddSymbol("openDirectory", (void*)openDirectory);
    // llvm::sys::DynamicLibrary::AddSymbol("malloc_zone_free", (void*)malloc_zone_free);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprImpliesNonNullRow", (void*)sqlite3ExprImpliesNonNullRow);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Create", (void*)pcache1Create);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerClose", (void*)sqlite3PagerClose);
    llvm::sys::DynamicLibrary::AddSymbol("btreePrevious", (void*)btreePrevious);
    llvm::sys::DynamicLibrary::AddSymbol("charFunc", (void*)charFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Pragma", (void*)sqlite3Pragma);
    llvm::sys::DynamicLibrary::AddSymbol("rankStepFunc", (void*)rankStepFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_function", (void*)sqlite3_create_function);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_subtype", (void*)sqlite3_value_subtype);
    llvm::sys::DynamicLibrary::AddSymbol("whereUsablePartialIndex", (void*)whereUsablePartialIndex);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterWrite", (void*)sqlite3VdbeSorterWrite);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WalkSelect", (void*)sqlite3WalkSelect);
    llvm::sys::DynamicLibrary::AddSymbol("whereScanNext", (void*)whereScanNext);
    llvm::sys::DynamicLibrary::AddSymbol("strcspn", (void*)strcspn);
    llvm::sys::DynamicLibrary::AddSymbol("changes", (void*)changes);
    llvm::sys::DynamicLibrary::AddSymbol("exprListDeleteNN", (void*)exprListDeleteNN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_blob", (void*)sqlite3_column_blob);
    // llvm::sys::DynamicLibrary::AddSymbol("afpCheckReservedLock", (void*)afpCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("fkScanChildren", (void*)fkScanChildren);
    llvm::sys::DynamicLibrary::AddSymbol("nolockCheckReservedLock", (void*)nolockCheckReservedLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DecOrHexToI64", (void*)sqlite3DecOrHexToI64);
    llvm::sys::DynamicLibrary::AddSymbol("dlclose", (void*)dlclose);
    // llvm::sys::DynamicLibrary::AddSymbol("flockUnlock", (void*)flockUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("resolveAlias", (void*)resolveAlias);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_int", (void*)sqlite3_result_int);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_open", (void*)sqlite3_blob_open);
    llvm::sys::DynamicLibrary::AddSymbol("checkTreePage", (void*)checkTreePage);
    llvm::sys::DynamicLibrary::AddSymbol("accessPayloadChecked", (void*)accessPayloadChecked);
    llvm::sys::DynamicLibrary::AddSymbol("computeJD", (void*)computeJD);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3GetVdbe", (void*)sqlite3GetVdbe);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeIntegerAffinity", (void*)sqlite3VdbeIntegerAffinity);
    // llvm::sys::DynamicLibrary::AddSymbol("keywordCode", (void*)keywordCode);
    // llvm::sys::DynamicLibrary::AddSymbol("proxyIoFinderImpl", (void*)proxyIoFinderImpl);
    llvm::sys::DynamicLibrary::AddSymbol("incrAggDepth", (void*)incrAggDepth);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_free_filename", (void*)sqlite3_free_filename);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreePrevious", (void*)sqlite3BtreePrevious);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_last_insert_rowid", (void*)sqlite3_last_insert_rowid);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_zeroblob", (void*)sqlite3_bind_zeroblob);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_threadsafe", (void*)sqlite3_threadsafe);
    llvm::sys::DynamicLibrary::AddSymbol("destroyRootPage", (void*)destroyRootPage);
    llvm::sys::DynamicLibrary::AddSymbol("unixDlSym", (void*)unixDlSym);
    llvm::sys::DynamicLibrary::AddSymbol("juliandayFunc", (void*)juliandayFunc);
    llvm::sys::DynamicLibrary::AddSymbol("renameWalkTrigger", (void*)renameWalkTrigger);
    llvm::sys::DynamicLibrary::AddSymbol("dotlockUnlock", (void*)dotlockUnlock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_keyword_name", (void*)sqlite3_keyword_name);
    llvm::sys::DynamicLibrary::AddSymbol("btreeInvokeBusyHandler", (void*)btreeInvokeBusyHandler);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_enable_shared_cache", (void*)sqlite3_enable_shared_cache);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Checkpoint", (void*)sqlite3Checkpoint);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3WindowCompare", (void*)sqlite3WindowCompare);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3OpenTempDatabase", (void*)sqlite3OpenTempDatabase);
    llvm::sys::DynamicLibrary::AddSymbol("corruptSchema", (void*)corruptSchema);
    llvm::sys::DynamicLibrary::AddSymbol("nth_valueFinalizeFunc", (void*)nth_valueFinalizeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_blob64", (void*)sqlite3_result_blob64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_stmt_isexplain", (void*)sqlite3_stmt_isexplain);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_create_collation", (void*)sqlite3_create_collation);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_filename_database", (void*)sqlite3_filename_database);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3DeleteFrom", (void*)sqlite3DeleteFrom);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MulInt64", (void*)sqlite3MulInt64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprCodeExprList", (void*)sqlite3ExprCodeExprList);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3IdListDup", (void*)sqlite3IdListDup);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3FixExpr", (void*)sqlite3FixExpr);
    llvm::sys::DynamicLibrary::AddSymbol("noopValueFunc", (void*)noopValueFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterNext", (void*)sqlite3VdbeSorterNext);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_errstr", (void*)sqlite3_errstr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreeCursorIsValidNN", (void*)sqlite3BtreeCursorIsValidNN);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemRealloc", (void*)sqlite3MemRealloc);
    llvm::sys::DynamicLibrary::AddSymbol("btreeCursor", (void*)btreeCursor);
    llvm::sys::DynamicLibrary::AddSymbol("computeCellSize", (void*)computeCellSize);
    llvm::sys::DynamicLibrary::AddSymbol("btreeCellSizeCheck", (void*)btreeCellSizeCheck);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeRealValue", (void*)sqlite3VdbeRealValue);
    llvm::sys::DynamicLibrary::AddSymbol("unixShmLock", (void*)unixShmLock);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_test_control", (void*)sqlite3_test_control);
    llvm::sys::DynamicLibrary::AddSymbol("mallocWithAlarm", (void*)mallocWithAlarm);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3CodeRowTrigger", (void*)sqlite3CodeRowTrigger);
    llvm::sys::DynamicLibrary::AddSymbol("renameUnmapExprCb", (void*)renameUnmapExprCb);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_text", (void*)sqlite3_bind_text);
    llvm::sys::DynamicLibrary::AddSymbol("dlerror", (void*)dlerror);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RollbackAll", (void*)sqlite3RollbackAll);
    llvm::sys::DynamicLibrary::AddSymbol("analyzeAggregatesInSelectEnd", (void*)analyzeAggregatesInSelectEnd);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3MemRoundup", (void*)sqlite3MemRoundup);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreePayloadChecked", (void*)sqlite3BtreePayloadChecked);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3TableAffinity", (void*)sqlite3TableAffinity);
    llvm::sys::DynamicLibrary::AddSymbol("pcache1Alloc", (void*)pcache1Alloc);
    llvm::sys::DynamicLibrary::AddSymbol("renameResolveTrigger", (void*)renameResolveTrigger);
    llvm::sys::DynamicLibrary::AddSymbol("generateWithRecursiveQuery", (void*)generateWithRecursiveQuery);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3BtreePayloadFetch", (void*)sqlite3BtreePayloadFetch);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ReadSchema", (void*)sqlite3ReadSchema);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SrcListEnlarge", (void*)sqlite3SrcListEnlarge);
    llvm::sys::DynamicLibrary::AddSymbol("last_valueFinalizeFunc", (void*)last_valueFinalizeFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_snprintf", (void*)sqlite3_snprintf);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_cancel_auto_extension", (void*)sqlite3_cancel_auto_extension);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3PagerRollback", (void*)sqlite3PagerRollback);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_malloc64", (void*)sqlite3_malloc64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_bind_parameter_count", (void*)sqlite3_bind_parameter_count);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_close", (void*)sqlite3_close);
    llvm::sys::DynamicLibrary::AddSymbol("posixOpen", (void*)posixOpen);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_column_type", (void*)sqlite3_column_type);
    llvm::sys::DynamicLibrary::AddSymbol("walIndexWriteHdr", (void*)walIndexWriteHdr);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3SchemaGet", (void*)sqlite3SchemaGet);
    llvm::sys::DynamicLibrary::AddSymbol("memjrnlSync", (void*)memjrnlSync);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare16_v3", (void*)sqlite3_prepare16_v3);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3VdbeSorterRowkey", (void*)sqlite3VdbeSorterRowkey);
    llvm::sys::DynamicLibrary::AddSymbol("codeExprOrVector", (void*)codeExprOrVector);
    llvm::sys::DynamicLibrary::AddSymbol("vdbeCloseStatement", (void*)vdbeCloseStatement);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3Malloc", (void*)sqlite3Malloc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_result_int64", (void*)sqlite3_result_int64);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3ExprImpliesExpr", (void*)sqlite3ExprImpliesExpr);
    llvm::sys::DynamicLibrary::AddSymbol("fillInUnixFile", (void*)fillInUnixFile);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_value_free", (void*)sqlite3_value_free);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3OpenTableAndIndices", (void*)sqlite3OpenTableAndIndices);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3EndTable", (void*)sqlite3EndTable);
    llvm::sys::DynamicLibrary::AddSymbol("unixGetSystemCall", (void*)unixGetSystemCall);
    llvm::sys::DynamicLibrary::AddSymbol("openStatTable", (void*)openStatTable);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_blob_write", (void*)sqlite3_blob_write);
    llvm::sys::DynamicLibrary::AddSymbol("multiSelectOrderBy", (void*)multiSelectOrderBy);
    llvm::sys::DynamicLibrary::AddSymbol("substrFunc", (void*)substrFunc);
    llvm::sys::DynamicLibrary::AddSymbol("ntileInvFunc", (void*)ntileInvFunc);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3RefillIndex", (void*)sqlite3RefillIndex);
    llvm::sys::DynamicLibrary::AddSymbol("sqlite3_prepare", (void*)sqlite3_prepare);
    llvm::sys::DynamicLibrary::AddSymbol("pagerAddPageToRollbackJournal", (void*)pagerAddPageToRollbackJournal);
    llvm::sys::DynamicLibrary::AddSymbol("codeDistinct", (void*)codeDistinct);
}
