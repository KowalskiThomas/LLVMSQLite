set(LOWERING_FILES
    Lowering/Operators/MyBuilder.cpp
    Lowering/Operators/Printer.cpp
    Lowering/Operators/AssertOperator.cpp
    Lowering/Operators/OutToPrerelease.cpp
    Lowering/Operators/GetVarint32.cpp
    Lowering/Operators/NumericType.cpp
    Lowering/Operators/ConstantManager.cpp

    Lowering/AggFinalLowering.cpp
    Lowering/AggStepLowering.cpp
    Lowering/ColumnLowering.cpp
    Lowering/CompareLowering.cpp
    Lowering/CopyLowering.cpp
    Lowering/GosubLowering.cpp
    Lowering/GotoLowering.cpp
    Lowering/HaltLowering.cpp
    Lowering/IfPosLowering.cpp
    Lowering/InitLowering.cpp
    Lowering/IntegerLowering.cpp
    Lowering/JumpLowering.cpp
    Lowering/MakeRecordLowering.cpp
    Lowering/MoveLowering.cpp
    Lowering/NextLowering.cpp
    Lowering/NoopLowering.cpp
    Lowering/NullLowering.cpp
    Lowering/OpenPseudoLowering.cpp
    Lowering/OpenReadLowering.cpp
    Lowering/ResultRowLowering.cpp
    Lowering/ReturnLowering.cpp
    Lowering/RewindLowering.cpp
    Lowering/SorterDataLowering.cpp
    Lowering/SorterInsertLowering.cpp
    Lowering/SorterNextLowering.cpp
    Lowering/SorterOpenLowering.cpp
    Lowering/SorterSortLowering.cpp
    Lowering/TransactionLowering.cpp
    Lowering/ArithmeticLowering.cpp
    Lowering/StringLowering.cpp
    Lowering/VariableLowering.cpp
    Lowering/RealLowering.cpp
    Lowering/CompareJumpLowering.cpp
    Lowering/IfLowering.cpp
    Lowering/OnceLowering.cpp
    Lowering/FunctionLowering.cpp
    Lowering/OpenEphemeralLowering.cpp
    Lowering/DeferredSeekLowering.cpp
    Lowering/SeekRowidLowering.cpp
    Lowering/SequenceLowering.cpp
    Lowering/IfNotZeroLowering.cpp
    Lowering/IfNotLowering.cpp
    Lowering/LastLowering.cpp
    Lowering/IdxCompareLowering.cpp
    Lowering/DeleteLowering.cpp
    Lowering/IdxInsertLowering.cpp
    Lowering/RowidLowering.cpp
    Lowering/RowSetTestLowering.cpp
    Lowering/NotFoundLowering.cpp
    Lowering/AffinityLowering.cpp
)

add_mlir_dialect_library(MLIRStandalone
    ${ADDITIONAL_HEADER_DIRS}
    ${PROJECT_SOURCE_DIR}/include/Standalone
    StandaloneDialect.cpp
    StandaloneOps.cpp
    StandalonePasses.cpp
    StandalonePassManager.cpp
    StandalonePrerequisites.cpp
    DefaultImplementation.cpp
    TypeCache.cpp
    TypeDefinitions.cpp

    ${LOWERING_FILES}

    DEPENDS
        MLIRStandaloneOpsIncGen
)

target_link_libraries(MLIRStandalone PUBLIC MLIRIR)
