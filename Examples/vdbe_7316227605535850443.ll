; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%struct.sqlite3StatType = type { [10 x i64], [10 x i64] }
%struct.Sqlite3Config = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.sqlite3_mem_methods, %struct.sqlite3_mutex_methods, %struct.sqlite3_pcache_methods2, i8*, i32, i32, i32, i64, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sqlite3_mutex*, void (i8*, i32, i8*)*, i8*, i32 (i32)*, i32, i32, i32, i32 }
%struct.sqlite3_mem_methods = type { i8* (i32)*, void (i8*)*, i8* (i8*, i32)*, i32 (i8*)*, i32 (i32)*, i32 (i8*)*, void (i8*)*, i8* }
%struct.sqlite3_mutex_methods = type { i32 ()*, i32 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)* }
%struct.sqlite3_pcache_methods2 = type { i32, i8*, i32 (i8*)*, void (i8*)*, %struct.sqlite3_pcache* (i32, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, i32 (%struct.sqlite3_pcache*)*, %struct.sqlite3_pcache_page* (%struct.sqlite3_pcache*, i32, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, void (%struct.sqlite3_pcache*)*, void (%struct.sqlite3_pcache*)* }
%struct.sqlite3_pcache = type opaque
%struct.sqlite3_pcache_page = type { i8*, i8* }
%struct.sqlite3_mutex = type { %struct._opaque_pthread_mutex_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.anon.9 = type { i8, i8, i8*, double, double }
%struct.sqlite3_vfs = type { i32, i32, i32, %struct.sqlite3_vfs*, i8*, i8*, i32 (%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)*, void (%struct.sqlite3_vfs*, i32, i8*)*, void ()* (%struct.sqlite3_vfs*, i8*, i8*)*, void (%struct.sqlite3_vfs*, i8*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*, double*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i64*)*, i32 (%struct.sqlite3_vfs*, i8*, void ()*)*, void ()* (%struct.sqlite3_vfs*, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)* }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%struct.BenignMallocHooks = type { void ()*, void ()* }
%struct.Mem0Global = type { %struct.sqlite3_mutex*, i64, i64, i32 }
%struct.et_info = type { i8, i8, i8, i8, i8, i8 }
%struct.sqlite3_str = type { %struct.sqlite3*, i8*, i32, i32, i32, i8, i8 }
%struct.sqlite3 = type { %struct.sqlite3_vfs*, %struct.Vdbe*, %struct.CollSeq*, %struct.sqlite3_mutex*, %struct.Db*, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [12 x i32], i32, %struct.sqlite3InitInfo, i32, i32, i32, i32, i32, i32, i8**, i32 (i32, i8*, i8*, i8*)*, i8*, void (i8*, i8*, i64)*, i8*, i8*, i32 (i8*)*, i8*, void (i8*)*, i8*, void (i8*, i32, i8*, i8*, i64)*, %struct.Parse*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*, void (i8*, %struct.sqlite3*, i32, i8*)*, i8*, %struct.sqlite3_value*, %union.anon.8, %struct.Lookaside, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*, i32 (i8*)*, i8*, i32, %struct.Hash, %struct.Hash, %struct.BusyHandler, [2 x %struct.Db], %struct.Savepoint*, i32, i32, i32, i64, i64, i32* }
%struct.Vdbe = type <{ %struct.sqlite3*, %struct.Vdbe*, %struct.Vdbe*, %struct.Parse*, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i64, i64, %struct.sqlite3_value*, %struct.sqlite3_value**, %struct.VdbeCursor**, %struct.sqlite3_value*, %struct.VdbeOp*, i32, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, i8*, i32*, i16, i8, i8, i8, i16, i8, i32, i32, [7 x i32], [4 x i8], i8*, i8*, %struct.VdbeFrame*, %struct.VdbeFrame*, i32, i32, %struct.SubProgram*, %struct.AuxData* }>
%struct.VdbeCursor = type { i8, i8, i8, i8, i8, i8, %struct.Btree*, i64, i32*, i32, i32, %struct.VdbeCursor*, %union.anon.7, %struct.KeyInfo*, i32, i32, i16, i16, i64, i32*, i8*, i32, i32, [1 x i32] }
%struct.Btree = type { %struct.sqlite3*, %struct.BtShared*, i8, i8, i8, i8, i32, i32, i32, %struct.Btree*, %struct.Btree*, %struct.BtLock }
%struct.BtShared = type { %struct.Pager*, %struct.sqlite3*, %struct.BtCursor*, %struct.MemPage*, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i32, i32, i32, i32, i8*, void (i8*)*, %struct.sqlite3_mutex*, %struct.Bitvec*, i32, %struct.BtShared*, %struct.BtLock*, %struct.Btree*, i8* }
%struct.Pager = type { %struct.sqlite3_vfs*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Bitvec*, %struct.sqlite3_file*, %struct.sqlite3_file*, %struct.sqlite3_file*, i64, i64, %struct.sqlite3_backup*, %struct.PagerSavepoint*, i32, i32, [16 x i8], i32, i64, %struct.PgHdr*, i16, i16, i32, i32, i32, i32, i64, i8*, i8*, i32 (i8*)*, i8*, [4 x i32], void (%struct.PgHdr*)*, i32 (%struct.Pager*, i32, %struct.PgHdr**, i32)*, i8*, %struct.PCache*, %struct.Wal*, i8* }
%struct.sqlite3_backup = type { %struct.sqlite3*, %struct.Btree*, i32, i32, i32, %struct.sqlite3*, %struct.Btree*, i32, i32, i32, i32, %struct.sqlite3_backup* }
%struct.PagerSavepoint = type { i64, i64, %struct.Bitvec*, i32, i32, [4 x i32] }
%struct.PgHdr = type { %struct.sqlite3_pcache_page*, i8*, i8*, %struct.PCache*, %struct.PgHdr*, %struct.Pager*, i32, i16, i16, %struct.PgHdr*, %struct.PgHdr* }
%struct.PCache = type { %struct.PgHdr*, %struct.PgHdr*, %struct.PgHdr*, i32, i32, i32, i32, i32, i8, i8, i32 (i8*, %struct.PgHdr*)*, i8*, %struct.sqlite3_pcache* }
%struct.Wal = type { %struct.sqlite3_vfs*, %struct.sqlite3_file*, %struct.sqlite3_file*, i32, i64, i32, i32, i32**, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.WalIndexHdr, i32, i32, i8*, i32 }
%struct.WalIndexHdr = type { i32, i32, i32, i8, i8, i16, i32, i32, [2 x i32], [2 x i32], [2 x i32] }
%struct.BtCursor = type { i8, i8, i8, i8, i32, %struct.Btree*, i32*, i8*, %struct.BtShared*, %struct.BtCursor*, %struct.CellInfo, i64, i32, i8, i8, i16, [19 x i16], %struct.KeyInfo*, %struct.MemPage*, [19 x %struct.MemPage*] }
%struct.CellInfo = type { i64, i8*, i32, i16, i16 }
%struct.MemPage = type { i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i32, i16, i16, [4 x i16], [4 x i8*], %struct.BtShared*, i8*, i8*, i8*, i8*, %struct.PgHdr*, i16 (%struct.MemPage*, i8*)*, void (%struct.MemPage*, i8*, %struct.CellInfo*)* }
%struct.Bitvec = type { i32, i32, i32, %union.anon.10 }
%union.anon.10 = type { [62 x %struct.Bitvec*] }
%struct.BtLock = type { %struct.Btree*, i32, i8, %struct.BtLock* }
%union.anon.7 = type { %struct.BtCursor* }
%struct.KeyInfo = type { i32, i8, i16, i16, %struct.sqlite3*, i8*, [1 x %struct.CollSeq*] }
%struct.VdbeOp = type { i8, i8, i16, i32, i32, i32, %union.p4union }
%union.p4union = type { i8* }
%struct.VdbeFrame = type { %struct.Vdbe*, %struct.VdbeFrame*, %struct.VdbeOp*, i64*, %struct.sqlite3_value*, %struct.VdbeCursor**, i8*, i8*, i64, %struct.AuxData*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SubProgram = type { %struct.VdbeOp*, i32, i32, i32, i8*, i8*, %struct.SubProgram* }
%struct.AuxData = type { i32, i32, i8*, void (i8*)*, %struct.AuxData* }
%struct.CollSeq = type { i8*, i8, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)* }
%struct.Db = type { i8*, %struct.Btree*, i8, i8, %struct.Schema* }
%struct.Schema = type { i32, i32, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Table*, i8, i8, i16, i32 }
%struct.Table = type { i8*, %struct.Column*, %struct.Index*, %struct.Select*, %struct.FKey*, i8*, %struct.ExprList*, i32, i32, i32, i16, i16, i16, i16, i16, i8, i32, %struct.Trigger*, %struct.Schema*, %struct.Table* }
%struct.Column = type { i8*, %struct.Expr*, i8*, i8, i8, i8, i16 }
%struct.Expr = type { i8, i8, i8, i32, %union.anon, %struct.Expr*, %struct.Expr*, %union.anon.0, i32, i32, i16, i16, i16, %struct.AggInfo*, %union.anon.3 }
%union.anon = type { i8* }
%union.anon.0 = type { %struct.ExprList* }
%struct.AggInfo = type { i8, i8, i32, i32, i32, i32, i32, %struct.ExprList*, %struct.AggInfo_col*, i32, i32, %struct.AggInfo_func*, i32 }
%struct.AggInfo_col = type { %struct.Table*, i32, i32, i32, i32, %struct.Expr* }
%struct.AggInfo_func = type { %struct.Expr*, %struct.FuncDef*, i32, i32 }
%struct.FuncDef = type { i8, i32, i8*, %struct.FuncDef*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, i8*, %union.anon.2 }
%struct.sqlite3_context = type { %struct.sqlite3_value*, %struct.FuncDef*, %struct.sqlite3_value*, %struct.Vdbe*, i32, i32, i8, i8, [1 x %struct.sqlite3_value*] }
%union.anon.2 = type { %struct.FuncDef* }
%union.anon.3 = type { %struct.Table* }
%struct.Index = type <{ i8*, i16*, i16*, %struct.Table*, i8*, %struct.Index*, %struct.Schema*, i8*, i8**, %struct.Expr*, %struct.ExprList*, i32, i16, i16, i16, i8, i16, [3 x i8], i64 }>
%struct.Select = type { i8, i16, i32, i32, i32, i32, [2 x i32], %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Select*, %struct.Select*, %struct.Expr*, %struct.With*, %struct.Window*, %struct.Window* }
%struct.SrcList = type { i32, i32, [1 x %struct.SrcList_item] }
%struct.SrcList_item = type { %struct.Schema*, i8*, i8*, i8*, %struct.Table*, %struct.Select*, i32, i32, i32, %struct.anon, i32, %struct.Expr*, %struct.IdList*, i64, %union.anon.1, %struct.Index* }
%struct.anon = type { i8, i8, [2 x i8] }
%struct.IdList = type { %struct.IdList_item*, i32 }
%struct.IdList_item = type { i8*, i32 }
%union.anon.1 = type { i8* }
%struct.With = type { i32, %struct.With*, [1 x %struct.Cte] }
%struct.Cte = type { i8*, %struct.ExprList*, %struct.Select*, i8* }
%struct.Window = type { i8*, i8*, %struct.ExprList*, %struct.ExprList*, i8, i8, i8, i8, i8, %struct.Expr*, %struct.Expr*, %struct.Window**, %struct.Window*, %struct.Expr*, %struct.FuncDef*, i32, i32, i32, i32, i32, i32, %struct.Expr*, i32, i32, i32, i32, i32, i8 }
%struct.FKey = type { %struct.Table*, %struct.FKey*, i8*, %struct.FKey*, %struct.FKey*, i32, i8, [2 x i8], [2 x %struct.Trigger*], [1 x %struct.sColMap] }
%struct.sColMap = type { i32, i8* }
%struct.ExprList = type { i32, [1 x %struct.ExprList_item] }
%struct.ExprList_item = type { %struct.Expr*, i8*, i8, i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.Trigger = type { i8*, i8*, i8, i8, %struct.Expr*, %struct.IdList*, %struct.Schema*, %struct.Schema*, %struct.TriggerStep*, %struct.Trigger* }
%struct.TriggerStep = type { i8, i8, %struct.Trigger*, %struct.Select*, i8*, %struct.Expr*, %struct.ExprList*, %struct.IdList*, %struct.Upsert*, i8*, %struct.TriggerStep*, %struct.TriggerStep* }
%struct.Upsert = type { %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.Index*, %struct.SrcList*, i32, i32, i32 }
%struct.sqlite3InitInfo = type { i32, i8, i8, i8, i8** }
%struct.Parse = type { %struct.sqlite3*, i8*, %struct.Vdbe*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.ExprList*, %struct.Token, i32, i32, i32, i32, i32, i32, i32, %struct.TableLock*, %struct.AutoincInfo*, %struct.Parse*, %struct.Table*, %struct.Parse*, i32, i32, i32, i32, i8, i8, i8, [8 x i32], %struct.Token, %struct.Token, i16, i8, i8, i8, i32, i32, i32*, %struct.Vdbe*, i8*, %struct.Table*, %struct.Index*, %struct.Trigger*, i8*, %struct.Table*, %struct.TriggerPrg*, %struct.With*, %struct.With*, %struct.RenameToken* }
%struct.TableLock = type { i32, i32, i8, i8* }
%struct.AutoincInfo = type { %struct.AutoincInfo*, %struct.Table*, i32, i32 }
%struct.Token = type { i8*, i32 }
%struct.TriggerPrg = type { %struct.Trigger*, %struct.TriggerPrg*, %struct.SubProgram*, i32, [2 x i32] }
%struct.RenameToken = type { i8*, %struct.Token, %struct.RenameToken* }
%struct.sqlite3_value = type { %union.MemValue, i16, i8, i8, i32, i8*, i8*, i32, i32, %struct.sqlite3*, void (i8*)* }
%union.MemValue = type { double }
%union.anon.8 = type { double }
%struct.Lookaside = type { i32, i16, i16, i8, i32, [3 x i32], %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, i8*, i8*, i8* }
%struct.LookasideSlot = type { %struct.LookasideSlot* }
%struct.Hash = type { i32, i32, %struct.HashElem*, %struct._ht* }
%struct.HashElem = type { %struct.HashElem*, %struct.HashElem*, i8*, i8* }
%struct._ht = type { i32, %struct.HashElem* }
%struct.BusyHandler = type { i32 (i8*, i32)*, i8*, i32, i8 }
%struct.Savepoint = type { i8*, i64, i64, %struct.Savepoint* }
%struct.sqlite3PrngType = type { i8, i8, i8, [256 x i8] }
%struct.unix_syscall = type { i8*, void ()*, void ()* }
%struct.unixInodeInfo = type { %struct.unixFileId, %struct.sqlite3_mutex*, i32, i32, i8, i8, %struct.UnixUnusedFd*, i32, %struct.unixShmNode*, %struct.unixInodeInfo*, %struct.unixInodeInfo*, i64 }
%struct.unixFileId = type { i32, i64 }
%struct.UnixUnusedFd = type { i32, i32, %struct.UnixUnusedFd* }
%struct.unixShmNode = type { %struct.unixInodeInfo*, %struct.sqlite3_mutex*, i8*, i32, i32, i16, i8, i8, i8**, i32, %struct.unixShm* }
%struct.unixShm = type { %struct.unixShmNode*, %struct.unixShm*, i8, i8, i16, i16 }
%struct.unixFile = type { %struct.sqlite3_io_methods*, %struct.sqlite3_vfs*, %struct.unixInodeInfo*, i32, i8, i16, i32, i8*, %struct.UnixUnusedFd*, i8*, %struct.unixShm*, i32, i32, i64, i64, i64, i8*, i32, i32, i32, i32 }
%struct.Mapping = type { i8*, %struct.sqlite3_io_methods* }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.PCacheGlobal = type { %struct.PGroup, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.sqlite3_mutex*, %struct.PgFreeslot*, i32, i32 }
%struct.PGroup = type { %struct.sqlite3_mutex*, i32, i32, i32, i32, %struct.PgHdr1 }
%struct.PgHdr1 = type { %struct.sqlite3_pcache_page, i32, i16, i16, %struct.PgHdr1*, %struct.PCache1*, %struct.PgHdr1*, %struct.PgHdr1* }
%struct.PCache1 = type { %struct.PGroup*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PgHdr1**, %struct.PgHdr1*, i8* }
%struct.PgFreeslot = type { %struct.PgFreeslot* }
%struct.compareInfo = type { i8, i8, i8, i8 }
%struct.sqlite3AutoExtList = type { i32, void ()** }
%struct.PragmaName = type { i8*, i8, i8, i8, i8, i64 }
%struct.SelectDest = type { i8, i32, i32, i32, i8*, %struct.ExprList* }
%struct.FuncDefHash = type { [23 x %struct.FuncDef*] }
%struct.anon.22 = type { i32, i32 }
%struct._malloc_zone_t = type { i8*, i8*, i64 (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i64)*, i8* (%struct._malloc_zone_t*, i64, i64)*, i8* (%struct._malloc_zone_t*, i64)*, void (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i8*, i64)*, void (%struct._malloc_zone_t*)*, i8*, i32 (%struct._malloc_zone_t*, i64, i8**, i32)*, void (%struct._malloc_zone_t*, i8**, i32)*, %struct.malloc_introspection_t*, i32, i8* (%struct._malloc_zone_t*, i64, i64)*, void (%struct._malloc_zone_t*, i8*, i64)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*, i8*)* }
%struct.malloc_introspection_t = type { i32 (i32, i8*, i32, i64, i32 (i32, i64, i64, i8**)*, void (i32, i8*, i32, %struct.vm_range_t*, i32)*)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i32)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, %struct.malloc_statistics_t*)*, i32 (%struct._malloc_zone_t*)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*, void (i8*, i8*)*)*, void (%struct._malloc_zone_t*)*, void (i32, i32, i64, i32 (i32, i64, i64, i8**)*, void (i8*, ...)*)*, void (i32, i64, i32 (i32, i64, i64, i8**)*, %struct.malloc_statistics_t*)* }
%struct.vm_range_t = type { i64, i64 }
%struct.malloc_statistics_t = type { i32, i64, i64, i64 }
%struct.sqlite3_api_routines = type { i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, double)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*, i8*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, %struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i32 (i8*, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, double (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i64 (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, %struct.sqlite3_value* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3*, i32 (i8*)*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*)*, i32 (%struct.sqlite3_stmt*)*, %struct.sqlite3* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*)*, i32 (i32)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, void (i8*)*, void (i8**)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3*, i8*, i8***, i32*, i32*, i8**)*, i32 ()*, void (%struct.sqlite3*)*, i64 (%struct.sqlite3*)*, i8* ()*, i32 ()*, i8* (i32)*, i8* (i8*, ...)*, i32 (i8*, %struct.sqlite3**)*, i32 (i8*, %struct.sqlite3**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i8* (%struct.sqlite3*, void (i8*, i8*, i64)*, i8*)*, void (%struct.sqlite3*, i32, i32 (i8*)*, i8*)*, i8* (i8*, i32)*, i32 (%struct.sqlite3_stmt*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, double)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i64)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, %struct.sqlite3_value*)*, i8* (%struct.sqlite3*, void (i8*)*, i8*)*, i32 (%struct.sqlite3*, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*)*, void (%struct.sqlite3_context*, i32, i8*, void (i8*)*)*, i8* (i32, i8*, i8*, ...)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i8**, i8**, i32*, i32*, i32*)*, void ()*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, void (i8*, i8*)*, i8*)*, i32 (%struct.sqlite3_stmt*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3*, void (i8*, i32, i8*, i8*, i64)*, i8*)*, i8* (%struct.sqlite3_context*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, double (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i64 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob**)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*)*, i64 (i32)*, i64 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (i8*, %struct.sqlite3**, i32, i8*)*, i32 (i32)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, i32 (i32)*, void (i32)*, %struct.sqlite3_vfs* (i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*)*, i32 ()*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, ...)*, void (i32, i8*)*, %struct.sqlite3* (%struct.sqlite3_context*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i32, i32)*, %struct.sqlite3_stmt* (%struct.sqlite3*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*)*, i32 (i32, i32*, i32*, i32)*, i32 (%struct.sqlite3_backup*)*, %struct.sqlite3_backup* (%struct.sqlite3*, i8*, %struct.sqlite3*, i8*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*, i32)*, i8* (i32)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i32, ...)*, %struct.sqlite3_mutex* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32*, i32*, i32)*, i32 (%struct.sqlite3*)*, void (i32, i8*, ...)*, i64 (i64)*, i8* ()*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*, void (i8**, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i8*)*, i8* (%struct.sqlite3*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*)*, i32 (%struct.sqlite3_blob*, i64)*, i32 (%struct.sqlite3*, i32, ...)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*)*, i8* (i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i8*, i64)*, i8* (i8*, i8*)*, i8* (i32, i8*, i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32, i32*, i32*)*, i32 (void ()*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8)*, i32 (void ()*)*, i32 (%struct.sqlite3*, i8*, i8*, i8**)*, i8* (i64)*, i64 (i8*)*, i8* (i8*, i64)*, void ()*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8)*, i32 (i8*, i8*)*, %struct.sqlite3_value* (%struct.sqlite3_value*)*, void (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_context*, i64)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_value*)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, i64*, i64*, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32 (i32, i8*, i8*, i8*)*, i8*)*, i8* (%struct.sqlite3_stmt*)*, void (%struct.sqlite3*, i64)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i8*, void (i8*)*)*, i8* (%struct.sqlite3_value*, i8*)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_index_info*, i32)*, i32 ()*, i32 (i32, i8**, i32*)*, i32 (i8*, i32)*, %struct.sqlite3_str* (%struct.sqlite3*)*, i8* (%struct.sqlite3_str*)*, void (%struct.sqlite3_str*, i8*, ...)*, void (%struct.sqlite3_str*, i8*, %struct.__va_list_tag*)*, void (%struct.sqlite3_str*, i8*, i32)*, void (%struct.sqlite3_str*, i8*)*, void (%struct.sqlite3_str*, i32, i8)*, void (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i8* (%struct.sqlite3_str*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*)*, i8* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i8**)*, i64 (i64)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*, i8*, i8*, i32, i8**)*, void (i8*)* }
%struct.sqlite3_stmt = type opaque
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %struct.sqlite3_index_constraint*, i32, %struct.sqlite3_index_orderby*, %struct.sqlite3_index_constraint_usage*, i32, i8*, i32, i32, double, i64, i32, i64 }
%struct.sqlite3_index_constraint = type { i32, i8, i8, i32 }
%struct.sqlite3_index_orderby = type { i32, i8 }
%struct.sqlite3_index_constraint_usage = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sqlite3_blob = type opaque
%struct.WindowUpdate = type { i8*, i32, i32, i32 }
%struct.anon.23 = type { i8, i8, i8 }
%struct.EncName = type { i8*, i8 }
%struct.OpenMode = type { i8*, i32 }
%struct.RowSet = type { %struct.RowSetChunk*, %struct.sqlite3*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, i16, i16, i32 }
%struct.RowSetChunk = type { %struct.RowSetChunk*, [42 x %struct.RowSetEntry] }
%struct.RowSetEntry = type { i64, %struct.RowSetEntry*, %struct.RowSetEntry* }
%struct.UnpackedRecord = type { %struct.KeyInfo*, %struct.sqlite3_value*, i16, i8, i8, i8, i8, i8 }
%struct.BtreePayload = type { i8*, i64, i8*, %struct.sqlite3_value*, i16, i32, i32 }
%struct.DateTime = type { i64, i32, i32, i32, i32, i32, i32, double, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct.PrintfArguments = type { i32, i32, %struct.sqlite3_value** }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.flock = type { i64, i64, i32, i16, i16 }
%struct.timeval = type { i64, i32 }
%struct.statfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.fsid, i32, i32, i32, i32, [16 x i8], [1024 x i8], [1024 x i8], i32, [7 x i32] }
%struct.fsid = type { [2 x i32] }
%struct.WalCkptInfo = type { i32, [5 x i32], [8 x i8], i32, i32 }
%struct.WalHashLoc = type { i16*, i32*, i32 }
%struct.WalIterator = type { i32, i32, [1 x %struct.WalSegment] }
%struct.WalSegment = type { i32, i16*, i32*, i32, i32 }
%struct.WalWriter = type { %struct.Wal*, %struct.sqlite3_file*, i64, i32, i32 }
%struct.CellArray = type { i32, %struct.MemPage*, i8**, i16*, [6 x i8*], [6 x i32] }
%struct.IntegrityCk = type { %struct.BtShared*, %struct.Pager*, i8*, i32, i32, i32, i32, i8*, i32, i32, %struct.sqlite3_str, i32*, %struct.sqlite3* }
%struct.ValueNewStat4Ctx = type { %struct.Parse*, %struct.Index*, %struct.UnpackedRecord**, i32 }
%struct.ReusableSpace = type { i8*, i64, i64 }
%struct.Incrblob = type { i32, i32, i16, %struct.BtCursor*, %struct.sqlite3_stmt*, %struct.sqlite3*, i8*, %struct.Table* }
%struct.PmaReader = type { i64, i64, i32, i32, %struct.sqlite3_file*, i8*, i8*, i8*, i32, i8*, %struct.IncrMerger* }
%struct.IncrMerger = type { %struct.SortSubtask*, %struct.MergeEngine*, i64, i32, i32, i32, [2 x %struct.SorterFile] }
%struct.SortSubtask = type { %struct.SQLiteThread*, i32, %struct.VdbeSorter*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)*, %struct.SorterFile, %struct.SorterFile }
%struct.SQLiteThread = type { %struct._opaque_pthread_t*, i32, i8*, i8* (i8*)*, i8* }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.VdbeSorter = type { i32, i32, i32, i32, %struct.PmaReader*, %struct.MergeEngine*, %struct.sqlite3*, %struct.KeyInfo*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32, i8, i8, i8, i8, i8, [1 x %struct.SortSubtask] }
%struct.SorterList = type { %struct.SorterRecord*, i8*, i32 }
%struct.SorterRecord = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.SorterRecord* }
%struct.SorterFile = type { %struct.sqlite3_file*, i64 }
%struct.MergeEngine = type { i32, %struct.SortSubtask*, i32*, %struct.PmaReader* }
%struct.PmaWriter = type { i32, i8*, i32, i32, i32, i64, %struct.sqlite3_file* }
%struct.MemJournal = type { %struct.sqlite3_io_methods*, i32, i32, i32, %struct.FileChunk*, %struct.FilePoint, %struct.FilePoint, i32, %struct.sqlite3_vfs*, i8* }
%struct.FileChunk = type { %struct.FileChunk*, [8 x i8] }
%struct.FilePoint = type { i64, %struct.FileChunk* }
%struct.Walker = type { %struct.Parse*, i32 (%struct.Walker*, %struct.Expr*)*, i32 (%struct.Walker*, %struct.Select*)*, void (%struct.Walker*, %struct.Select*)*, i32, i16, %union.anon.12 }
%union.anon.12 = type { %struct.NameContext* }
%struct.NameContext = type { %struct.Parse*, %struct.SrcList*, %union.anon.13, %struct.NameContext*, i32, i32, i32, %struct.Select* }
%union.anon.13 = type { %struct.ExprList* }
%struct.RenameCtx = type { %struct.RenameToken*, i32, i32, %struct.Table*, i8* }
%struct.WhereInfo = type { %struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.ExprList*, %struct.Expr*, [2 x i32], i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i16, i32, %struct.WhereLoop*, %struct.WhereExprMod*, i64, %struct.WhereClause, %struct.WhereMaskSet, [1 x %struct.WhereLevel] }
%struct.WhereLoop = type { i64, i64, i8, i8, i16, i16, i16, %union.anon.15, i32, i16, i16, i16, %struct.WhereTerm**, %struct.WhereLoop*, [3 x %struct.WhereTerm*] }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i16, i16, i16, i16, %struct.Index* }
%struct.WhereTerm = type { %struct.Expr*, %struct.WhereClause*, i16, i16, i16, i8, i8, i32, i32, i32, %union.anon.18, i64, i64 }
%union.anon.18 = type { %struct.WhereOrInfo* }
%struct.WhereOrInfo = type { %struct.WhereClause, i64 }
%struct.WhereExprMod = type { %struct.WhereExprMod*, %struct.Expr*, %struct.Expr }
%struct.WhereClause = type { %struct.WhereInfo*, %struct.WhereClause*, i8, i8, i32, i32, %struct.WhereTerm*, [8 x %struct.WhereTerm] }
%struct.WhereMaskSet = type { i32, i32, [64 x i32] }
%struct.WhereLevel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %union.anon.19, %struct.WhereLoop*, i64 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32, %struct.InLoop* }
%struct.InLoop = type { i32, i32, i32, i32, i8 }
%struct.InitData = type { %struct.sqlite3*, i8**, i32, i32, i32, i32 }
%struct.RowLoadInfo = type { i32, i8 }
%struct.SortCtx = type { %struct.ExprList*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.RowLoadInfo* }
%struct.DistinctCtx = type { i8, i8, i32, i32 }
%struct.SubstContext = type { %struct.Parse*, i32, i32, i32, %struct.ExprList* }
%struct.WhereConst = type { %struct.Parse*, i32, i32, %struct.Expr** }
%struct.IdxExprTrans = type { %struct.Expr*, i32, i32, i32, i32, %struct.WhereInfo*, %struct.sqlite3* }
%struct.WhereAndInfo = type { %struct.WhereClause }
%struct.WhereOrSet = type { i16, [3 x %struct.WhereOrCost] }
%struct.WhereOrCost = type { i64, i16, i16 }
%struct.WhereScan = type { %struct.WhereClause*, %struct.WhereClause*, i8*, %struct.Expr*, i8, i8, i8, i32, i32, [11 x i32], [11 x i16] }
%struct.WhereLoopBuilder = type { %struct.WhereInfo*, %struct.WhereClause*, %struct.ExprList*, %struct.WhereLoop*, %struct.WhereOrSet*, i8, i8, i32 }
%struct.WherePath = type { i64, i64, i16, i16, i16, i8, %struct.WhereLoop** }
%struct.WindowCodeArg = type { %struct.Parse*, %struct.Window*, %struct.Vdbe*, i32, i32, i32, i32, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg }
%struct.WindowCsrAndReg = type { i32, i32 }
%struct.yyParser = type { %struct.yyStackEntry*, %struct.Parse*, [100 x %struct.yyStackEntry], %struct.yyStackEntry* }
%struct.yyStackEntry = type { i16, i16, %union.YYMINORTYPE }
%union.YYMINORTYPE = type { %struct.Token }
%struct.FuncDestructor = type { i32, void (i8*)*, i8* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }
%struct.DbFixer = type { %struct.Parse*, %struct.Schema*, i8, i8*, i8*, %struct.Token* }

@sqlite3_version = constant [7 x i8] c"3.32.0\00", align 1
@sqlite3Stat = local_unnamed_addr global %struct.sqlite3StatType zeroinitializer, align 8
@statMutex = local_unnamed_addr constant [10 x i8] c"\00\01\01\00\00\00\00\01\00\00", align 1
@sqlite3Config = external dso_local global %struct.Sqlite3Config, align 8
@getDigits.aMx = internal unnamed_addr constant [6 x i16] [i16 12, i16 14, i16 24, i16 31, i16 59, i16 9999], align 2
@sqlite3CtypeMap = internal constant [256 x i8] calign 16
@.str = private unnamed_addr constant [8 x i8] c"20b:20e\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"20c:20e\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"20e\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"40f-21a-21d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"local time unavailable\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@aXformType = local_unnamed_addr constant [6 x %struct.anon.9] [%struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), double 0x425B0625EAB00000, double 1.000000e+03 }, %struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double 0x41FCD35BA5000000, double 6.000000e+04 }, %struct.anon.9 { i8 0, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), double 0x419EBF50B0000000, double 3.600000e+06 }, %struct.anon.9 { i8 0, i8 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), double 0x41547F8B40000000, double 8.640000e+07 }, %struct.anon.9 { i8 1, i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), double 1.765460e+05, double 2.592000e+09 }, %struct.anon.9 { i8 2, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), double 1.471300e+04, double 3.153600e+10 }], align 16
@sqlite3UpperToLower = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@.str.12 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"unixepoch\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"weekday \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"start of \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"%06.3f\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"%.16g\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@vfsList = local_unnamed_addr global %struct.sqlite3_vfs* null, align 8
@sqlite3Hooks = local_unnamed_addr global %struct.BenignMallocHooks zeroinitializer, align 8
@pthreadMutexAlloc.staticMutexes = internal global [12 x %struct.sqlite3_mutex] [%struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }], align 16
@mem0 = local_unnamed_addr global %struct.Mem0Global zeroinitializer, align 8
@aDigits = local_unnamed_addr constant [33 x i8] c"0123456789ABCDEF0123456789abcdef\00", align 16
@aPrefix = local_unnamed_addr constant [7 x i8] c"-x0\00X0\00", align 1
@fmtinfo = local_unnamed_addr constant [23 x %struct.et_info] [%struct.et_info { i8 100, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 115, i8 0, i8 4, i8 5, i8 0, i8 0 }, %struct.et_info { i8 103, i8 0, i8 1, i8 3, i8 30, i8 0 }, %struct.et_info { i8 122, i8 0, i8 4, i8 6, i8 0, i8 0 }, %struct.et_info { i8 113, i8 0, i8 4, i8 9, i8 0, i8 0 }, %struct.et_info { i8 81, i8 0, i8 4, i8 10, i8 0, i8 0 }, %struct.et_info { i8 119, i8 0, i8 4, i8 14, i8 0, i8 0 }, %struct.et_info { i8 99, i8 0, i8 0, i8 8, i8 0, i8 0 }, %struct.et_info { i8 111, i8 8, i8 0, i8 0, i8 0, i8 2 }, %struct.et_info { i8 117, i8 10, i8 0, i8 16, i8 0, i8 0 }, %struct.et_info { i8 120, i8 16, i8 0, i8 0, i8 16, i8 1 }, %struct.et_info { i8 88, i8 16, i8 0, i8 0, i8 0, i8 4 }, %struct.et_info { i8 102, i8 0, i8 1, i8 1, i8 0, i8 0 }, %struct.et_info { i8 101, i8 0, i8 1, i8 2, i8 30, i8 0 }, %struct.et_info { i8 69, i8 0, i8 1, i8 2, i8 14, i8 0 }, %struct.et_info { i8 71, i8 0, i8 1, i8 3, i8 14, i8 0 }, %struct.et_info { i8 105, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 110, i8 0, i8 0, i8 4, i8 0, i8 0 }, %struct.et_info { i8 37, i8 0, i8 0, i8 7, i8 0, i8 0 }, %struct.et_info { i8 112, i8 16, i8 0, i8 13, i8 0, i8 1 }, %struct.et_info { i8 84, i8 0, i8 0, i8 11, i8 0, i8 0 }, %struct.et_info { i8 83, i8 0, i8 0, i8 12, i8 0, i8 0 }, %struct.et_info { i8 114, i8 10, i8 1, i8 15, i8 0, i8 0 }], align 16
@arRound = local_unnamed_addr constant [10 x double] [double 5.000000e-01, double 5.000000e-02, double 5.000000e-03, double 5.000000e-04, double 5.000000e-05, double 5.000000e-06, double 5.000000e-07, double 5.000000e-08, double 5.000000e-09, double 5.000000e-10], align 16
@.str.26 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@sqlite3_str_vappendf.zOrd = internal unnamed_addr constant [9 x i8] c"thstndrd\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@sqlite3OomStr = internal global %struct.sqlite3_str { %struct.sqlite3* null, i8* null, i32 0, i32 0, i32 0, i8 7, i8 0 }, align 8
@sqlite3Prng = local_unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"922337203685477580\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"API call with %s database connection pointer\00", align 1
@findElementWithHash.nullElement = internal global %struct.HashElem zeroinitializer, align 8
@randomnessPid = global i32 0, align 4
@.str.35 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"pread64\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"pwrite64\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"fallocate\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"openDirectory\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"mremap\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@aSyscall = external local_unnamed_addr global [29 x %struct.unix_syscall], align 16
@.str.64 = private unnamed_addr constant [43 x i8] c"attempt to open \22%s\22 as file descriptor %d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@unixBigLock = local_unnamed_addr global %struct.sqlite3_mutex* null, align 8
@inodeList = local_unnamed_addr global %struct.unixInodeInfo* null, align 8
@.str.66 = private unnamed_addr constant [31 x i8] c"os_unix.c:%d: (%d) %s(%s) - %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"cannot fstat db file %s\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"file unlinked while open: %s\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"multiple links to file: %s\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"file renamed while open: %s\00", align 1
@sqlite3PendingByte = internal unnamed_addr global i32 1073741824, align 4
@.str.72 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"full_fsync\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s-shm\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"readonly_shm\00", align 1
@posixIoMethods = external constant %struct.sqlite3_io_methods, align 8
@posixIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nolockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@dotlockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@dotlockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@flockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@flockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@afpIoMethods = external constant %struct.sqlite3_io_methods, align 8
@afpIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@proxyIoMethods = external constant %struct.sqlite3_io_methods, align 8
@proxyIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nfsIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nfsIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@autolockIoFinderImpl.aMap = internal unnamed_addr constant [6 x %struct.Mapping] [%struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct.sqlite3_io_methods* @nolockIoMethods }, %struct.Mapping zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [4 x i8] c"hfs\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"ufs\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"afpfs\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"smbfs\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"webdav\00", align 1
@autolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"psow\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"unix-excl\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s.lock\00", align 1
@unixTempFileDir.azDirs = internal unnamed_addr global [6 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [9 x i8] c"/var/tmp\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@sqlite3_temp_directory = local_unnamed_addr global i8* null, align 8
@.str.88 = private unnamed_addr constant [14 x i8] c"SQLITE_TMPDIR\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"%s/etilqs_%llx%c\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"modeof\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"msdos\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exfat\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"SQLITE_FORCE_PROXY_LOCKING\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c":auto:\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sqliteplocks\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@__const.proxyGetHostID.timeout = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.101 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"path error (len %d)\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"read error (len %d)\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"create failed (%d)\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"write failed (%d)\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"rename failed (%d)\00", align 1
@__stderrp = external local_unnamed_addr global %struct.__sFILE*, align 8
@.str.107 = private unnamed_addr constant [24 x i8] c"broke stale lock on %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"failed to break stale lock on %s, %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"-conch\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c":auto: (not held)\00", align 1
@sqlite3_os_init.aVfs = external dso_local global [9 x %struct.sqlite3_vfs], align 16
@.str.111 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"unix-none\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"unix-dotfile\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"unix-posix\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"unix-flock\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"unix-afp\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"unix-nfs\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"unix-proxy\00", align 1
@pcache1_g = global %struct.PCacheGlobal zeroinitializer, align 8
@aJournalMagic = constant [8 x i8] c"\D9\D5\05\F9 \A1c\D7", align 1
@zeroJournalHdr.zeroHdr = internal constant [28 x i8] zeroinitializer, align 16
@.str.119 = private unnamed_addr constant [27 x i8] c"recovered %d pages from %s\00", align 1
@syncJournal.zerobyte = internal constant i8 0, align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"recovered %d frames from WAL file %s\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"cannot limit WAL size: %s\00", align 1
@zMagicHeader = constant [16 x i8] c"SQLite format 3\00", align 16
@sqlite3SharedCacheList = internal unnamed_addr global %struct.BtShared* null, align 8
@.str.122 = private unnamed_addr constant [4 x i8] c"@  \00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"invalid page number %d\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"2nd reference to page %d\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Failed to read ptrmap key=%d\00", align 1
@.str.127 = private unnamed_addr constant [54 x i8] c"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"failed to get page %d\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"freelist leaf count too big on page %d\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%s is %d but should be %d\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.132 = private unnamed_addr constant [21 x i8] c"overflow list length\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"Page %d: \00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"unable to get the page. error code=%d\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"btreeInitPage() returns error code %d\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"free space corruption\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"On tree page %d cell %d: \00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"On page %d at right child: \00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Offset %d out of range %d..%d\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"Extends off end of page\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"Rowid %lld out of order\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Child page depth differs\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Multiple uses for byte %u of page %d\00", align 1
@.str.144 = private unnamed_addr constant [52 x i8] c"Fragmentation of %d bytes reported as %d on page %d\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"unknown database %s\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"destination database is in use\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"source and destination must be distinct\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"%!.15g\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"k(%d\00", align 1
@.str.152 = private constant [7 x i8] c"BINARY\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c",%s%s%s\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"N.\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c")\00", align 1
@displayP4.encnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0)], align 16
@.str.157 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"16LE\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"16BE\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"%.18s-%s\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"(blob)\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"%s-mjXXXXXX9XXz%c%c\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"MJ delete: %s\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"MJ collide: %s\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"-mj%06X9%02X\00", align 1
@sqlite3SmallTypeSizes = local_unnamed_addr constant [128 x i8] c"\00\01\02\03\04\06\08\08\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12\13\13\14\14\15\15\16\16\17\17\18\18\19\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !!\22\22##$$%%&&''(())**++,,--..//00112233445566778899", align 16
@.str.172 = private unnamed_addr constant [45 x i8] c"API called with finalized prepared statement\00", align 1
@.str.173 = private unnamed_addr constant [40 x i8] c"API called with NULL prepared statement\00", align 1
@sqlite3_value_type.aType = internal unnamed_addr constant [64 x i8] c"\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\02\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05\04\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05", align 16
@.str.174 = private unnamed_addr constant [23 x i8] c"string or blob too big\00", align 1
@columnNullValue.nullMem = internal constant %struct.sqlite3_value { %union.MemValue zeroinitializer, i16 1, i8 0, i8 0, i32 0, i8* null, i8* null, i32 0, i32 0, %struct.sqlite3* null, void (i8*)* null }, align 8
@.str.175 = private unnamed_addr constant [40 x i8] c"bind on a busy prepared statement: [%s]\00", align 1
@enableJit = local_unnamed_addr global i8 -1, align 1
@Argv = local_unnamed_addr global i8** null, align 8
@Argc = local_unnamed_addr global i32 -1, align 4
@maxVdbeSteps = local_unnamed_addr global i64 -1, align 8
@pcHasBeenSet = local_unnamed_addr global i8 0, align 1
@iCompare = local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [29 x i8] c"cannot open value of type %s\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"no such rowid: %lld\00", align 1
@.str.182 = private unnamed_addr constant [36 x i8] c"cannot open table without rowid: %s\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"cannot open view: %s\00", align 1
@.str.184 = private unnamed_addr constant [21 x i8] c"no such column: \22%s\22\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"foreign key\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.187 = private unnamed_addr constant [34 x i8] c"cannot open %s column for writing\00", align 1
@vdbeSorterCompareInt.aLen = internal unnamed_addr constant [10 x i8] c"\00\01\02\03\04\06\08\00\00\00", align 1
@MemJournalMethods = external constant %struct.sqlite3_io_methods, align 8
@.str.188 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"excluded\00", align 1
@.str.191 = private unnamed_addr constant [31 x i8] c"misuse of aliased aggregate %s\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"misuse of aliased window function %s\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"row value misused\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"double-quoted string literal: \22%w\22\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"no such column\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"ambiguous column name\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"%s: %s.%s.%s\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"%s: %s.%s\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.200 = private unnamed_addr constant [28 x i8] c"partial index WHERE clauses\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"index expressions\00", align 1
@.str.202 = private unnamed_addr constant [18 x i8] c"CHECK constraints\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"generated columns\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"%s prohibited in %s\00", align 1
@.str.205 = private unnamed_addr constant [17 x i8] c"the \22.\22 operator\00", align 1
@.str.206 = private unnamed_addr constant [71 x i8] c"second argument to likelihood() must be a constant between 0.0 and 1.0\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"not authorized to use function: %s\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"non-deterministic functions\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"%.*s() may not be used as a window function\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"misuse of %s function %.*s()\00", align 1
@.str.213 = private unnamed_addr constant [23 x i8] c"no such function: %.*s\00", align 1
@.str.214 = private unnamed_addr constant [45 x i8] c"wrong number of arguments to function %.*s()\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"FILTER may not be used with non-aggregate %.*s()\00", align 1
@.str.216 = private unnamed_addr constant [11 x i8] c"subqueries\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.218 = private unnamed_addr constant [56 x i8] c"%r %s BY term out of range - should be between 1 and %d\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"too many terms in ORDER BY clause\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"ORDER\00", align 1
@.str.221 = private unnamed_addr constant [61 x i8] c"%r ORDER BY term does not match any column in the result set\00", align 1
@.str.222 = private unnamed_addr constant [44 x i8] c"a GROUP BY clause is required before HAVING\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"GROUP\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"aggregate functions are not allowed in the GROUP BY clause\00", align 1
@.str.225 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.226 = private unnamed_addr constant [26 x i8] c"hex literal too big: %s%s\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"sqlite_\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"table %s may not be altered\00", align 1
@.str.229 = private unnamed_addr constant [156 x i8] c"SELECT 1 FROM \22%w\22.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.231 = private unnamed_addr constant [155 x i8] c"SELECT 1 FROM temp.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"view\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"cannot rename columns of %s \22%s\22\00", align 1
@.str.234 = private unnamed_addr constant [21 x i8] c"error in %s %s%s: %s\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c" after rename\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"\22%w\22\00", align 1
@.str.237 = private unnamed_addr constant [13 x i8] c"sqlite_stat1\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"tbl,idx,stat\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"sqlite_stat4\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"sqlite_stat3\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"CREATE TABLE %Q.%s(%s)\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"DELETE FROM %Q.%s WHERE %s=%Q\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"stat_init\00", align 1
@statInitFuncdef = external constant %struct.FuncDef, align 8
@.str.244 = private unnamed_addr constant [10 x i8] c"stat_push\00", align 1
@statPushFuncdef = external constant %struct.FuncDef, align 8
@.str.245 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c" %llu\00", align 1
@.str.247 = private unnamed_addr constant [9 x i8] c"stat_get\00", align 1
@statGetFuncdef = external constant %struct.FuncDef, align 8
@.str.248 = private unnamed_addr constant [10 x i8] c"sqlite\\_%\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"BBB\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"tbl\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"unordered*\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"sz=[0-9]*\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"noskipscan*\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"too many attached databases - max %d\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"database %s is already in use\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"database is already attached\00", align 1
@.str.258 = private unnamed_addr constant [68 x i8] c"attached databases must use the same text encoding as main database\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"unable to open database: %s\00", align 1
@.str.261 = private unnamed_addr constant [21 x i8] c"no such database: %s\00", align 1
@.str.262 = private unnamed_addr constant [26 x i8] c"cannot detach database %s\00", align 1
@.str.263 = private unnamed_addr constant [22 x i8] c"database %s is locked\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"authorizer malfunction\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"generated columns cannot be part of the PRIMARY KEY\00", align 1
@.str.266 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.267 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c",\0A  \00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"\0A)\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@createTableStmt.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0)], align 16
@.str.271 = private unnamed_addr constant [6 x i8] c" TEXT\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c" NUM\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c" INT\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c" REAL\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"corrupt schema\00", align 1
@.str.276 = private unnamed_addr constant [56 x i8] c"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\00", align 1
@typeofFunc.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)], align 16
@.str.277 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.279 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@globInfo = constant %struct.compareInfo { i8 42, i8 63, i8 91, i8 0 }, align 1
@likeInfoNorm = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 1 }, align 1
@likeInfoAlt = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 0 }, align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"LIKE or GLOB pattern too complex\00", align 1
@.str.282 = private unnamed_addr constant [45 x i8] c"ESCAPE expression must be a single character\00", align 1
@hexdigits = local_unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@.str.283 = private unnamed_addr constant [7 x i8] c"%!.20e\00", align 1
@trimFunc.lenOne = internal unnamed_addr constant [1 x i8] c"\01", align 1
@trimFunc.azOne = internal constant [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.284, i32 0, i32 0)], align 8
@.str.284 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"not authorized\00", align 1
@.str.286 = private unnamed_addr constant [30 x i8] c"FOREIGN KEY constraint failed\00", align 1
@sqlite3Autoext = local_unnamed_addr global %struct.sqlite3AutoExtList zeroinitializer, align 8
@.str.287 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.288 = private unnamed_addr constant [4 x i8] c"seq\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.290 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"on_update\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"on_delete\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"notnull\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"dflt_value\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"pk\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"coll\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"narg\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"hght\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"flgs\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"partial\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"rowid\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"fkid\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"busy\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.322 = private unnamed_addr constant [13 x i8] c"checkpointed\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"database\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.325 = private unnamed_addr constant [11 x i8] c"cache_size\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@pragCName = local_unnamed_addr constant [51 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0)], align 16
@.str.327 = private unnamed_addr constant [15 x i8] c"application_id\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"auto_vacuum\00", align 1
@.str.329 = private unnamed_addr constant [16 x i8] c"automatic_index\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"busy_timeout\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"cache_spill\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"case_sensitive_like\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"cell_size_check\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"checkpoint_fullfsync\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"collation_list\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"compile_options\00", align 1
@.str.337 = private unnamed_addr constant [14 x i8] c"count_changes\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"database_list\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"default_cache_size\00", align 1
@.str.341 = private unnamed_addr constant [19 x i8] c"defer_foreign_keys\00", align 1
@.str.342 = private unnamed_addr constant [23 x i8] c"empty_result_callbacks\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"foreign_key_check\00", align 1
@.str.345 = private unnamed_addr constant [17 x i8] c"foreign_key_list\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"foreign_keys\00", align 1
@.str.347 = private unnamed_addr constant [15 x i8] c"freelist_count\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"full_column_names\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"fullfsync\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"function_list\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"hard_heap_limit\00", align 1
@.str.352 = private unnamed_addr constant [25 x i8] c"ignore_check_constraints\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"incremental_vacuum\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"index_info\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"index_list\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"index_xinfo\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"integrity_check\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"journal_mode\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"journal_size_limit\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"legacy_alter_table\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"lock_proxy_file\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"locking_mode\00", align 1
@.str.363 = private unnamed_addr constant [15 x i8] c"max_page_count\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"mmap_size\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"page_count\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"page_size\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"pragma_list\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"query_only\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"quick_check\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"read_uncommitted\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"recursive_triggers\00", align 1
@.str.373 = private unnamed_addr constant [26 x i8] c"reverse_unordered_selects\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"schema_version\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"secure_delete\00", align 1
@.str.376 = private unnamed_addr constant [19 x i8] c"short_column_names\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"shrink_memory\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"soft_heap_limit\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c"synchronous\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"table_info\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"table_xinfo\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"temp_store\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"temp_store_directory\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.385 = private unnamed_addr constant [15 x i8] c"trusted_schema\00", align 1
@.str.386 = private unnamed_addr constant [13 x i8] c"user_version\00", align 1
@.str.387 = private unnamed_addr constant [19 x i8] c"wal_autocheckpoint\00", align 1
@.str.388 = private unnamed_addr constant [15 x i8] c"wal_checkpoint\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"writable_schema\00", align 1
@aPragmaName = constant [64 x %struct.PragmaName] [%struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i8 2, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.329, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 32768 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i8 4, i8 16, i8 50, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8 5, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i32 0, i32 0), i8 6, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), i8 7, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 2097152 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.334, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8 8, i8 16, i8 32, i8 2, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i32 0, i32 0), i8 9, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.337, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4294967296 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 15 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8 11, i8 17, i8 41, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i8 12, i8 -107, i8 49, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.341, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 524288 }, %struct.PragmaName { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.342, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 256 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i32 0, i32 0), i8 13, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8 14, i8 17, i8 37, i8 4, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.345, i32 0, i32 0), i8 15, i8 97, i8 0, i8 8, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16384 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.347, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8 16, i8 16, i8 21, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), i8 17, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.352, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 512 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), i8 18, i8 3, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8 19, i8 97, i8 15, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i8 20, i8 97, i8 32, i8 5, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i32 0, i32 0), i8 19, i8 97, i8 15, i8 6, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), i8 22, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i32 0, i32 0), i8 23, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 67108864 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i32 0, i32 0), i8 24, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8 25, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.363, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8 27, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8 29, i8 33, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), i8 30, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8 31, i8 16, i8 9, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1048576 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1024 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8192 }, %struct.PragmaName { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.373, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4096 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.374, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8 32, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.376, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 64 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i8 33, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8 34, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i32 0, i32 0), i8 35, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i8 36, i8 97, i8 8, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8 36, i8 97, i8 8, i8 7, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8 37, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i8 38, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0), i8 39, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.385, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 128 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 6 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.387, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.388, i32 0, i32 0), i8 41, i8 1, i8 44, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.389, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 134217729 }], align 16
@getSafetyLevel.zText = internal unnamed_addr constant [25 x i8] c"onoffalseyestruextrafull\00", align 16
@getSafetyLevel.iValue = internal unnamed_addr constant [8 x i8] c"\01\00\00\00\01\01\03\02", align 1
@.str.390 = private unnamed_addr constant [10 x i8] c"exclusive\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.396 = private unnamed_addr constant [62 x i8] c"temporary storage cannot be changed from within a transaction\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"SET NULL\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"SET DEFAULT\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"CASCADE\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"RESTRICT\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"NO ACTION\00", align 1
@pragmaFunclistLine.azEnc = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.404, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.404 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.407 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"sissii\00", align 1
@.str.409 = private unnamed_addr constant [31 x i8] c"malformed database schema (%s)\00", align 1
@.str.410 = private unnamed_addr constant [8 x i8] c"%z - %s\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"a NATURAL join may not have an ON or USING clause\00", align 1
@.str.412 = private unnamed_addr constant [55 x i8] c"cannot have both ON and USING clauses in the same join\00", align 1
@.str.413 = private unnamed_addr constant [64 x i8] c"cannot join using column %s - column not present in both tables\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"UNION ALL\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"INTERSECT\00", align 1
@.str.416 = private unnamed_addr constant [7 x i8] c"EXCEPT\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"UNION\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"USE TEMP B-TREE FOR %s\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.420 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"column%d\00", align 1
@.str.422 = private unnamed_addr constant [49 x i8] c"cannot use window functions in recursive queries\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"SETUP\00", align 1
@.str.424 = private unnamed_addr constant [42 x i8] c"recursive aggregate queries not supported\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"RECURSIVE STEP\00", align 1
@.str.426 = private unnamed_addr constant [23 x i8] c"SCAN %d CONSTANT ROW%s\00", align 1
@.str.427 = private unnamed_addr constant [42 x i8] c"%s clause should come after %s not before\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"ORDER BY\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"LIMIT\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"COMPOUND QUERY\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"LEFT-MOST SUBQUERY\00", align 1
@.str.432 = private unnamed_addr constant [21 x i8] c"%s USING TEMP B-TREE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"MERGE (%s)\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.437 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"'%s' is not a function\00", align 1
@.str.439 = private unnamed_addr constant [43 x i8] c"multiple references to recursive table: %s\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"circular reference: %s\00", align 1
@.str.441 = private unnamed_addr constant [38 x i8] c"table %s has %d values for %d columns\00", align 1
@.str.442 = private unnamed_addr constant [34 x i8] c"multiple recursive references: %s\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"recursive reference in a subquery: %s\00", align 1
@.str.444 = private unnamed_addr constant [39 x i8] c"too many references to \22%s\22: max 65535\00", align 1
@.str.445 = private unnamed_addr constant [31 x i8] c"access to view \22%s\22 prohibited\00", align 1
@.str.446 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"%s.%s.%s\00", align 1
@.str.448 = private unnamed_addr constant [18 x i8] c"no such table: %s\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"no tables specified\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"too many columns in result set\00", align 1
@.str.451 = private unnamed_addr constant [51 x i8] c"DISTINCT aggregates must have exactly one argument\00", align 1
@.str.452 = private unnamed_addr constant [18 x i8] c"SCAN TABLE %s%s%s\00", align 1
@.str.453 = private unnamed_addr constant [23 x i8] c" USING COVERING INDEX \00", align 1
@.str.454 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.455 = private unnamed_addr constant [65 x i8] c"sqlite3_get_table() called with two or more incompatible queries\00", align 1
@.str.456 = private unnamed_addr constant [4 x i8] c"CRE\00", align 1
@.str.457 = private unnamed_addr constant [4 x i8] c"INS\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"<expr>\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c" AND \00", align 1
@.str.460 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"%s=?\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"ANY(%s)\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.465 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.466 = private unnamed_addr constant [41 x i8] c"ON clause references tables to its right\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"NOCASE\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"automatic index on %s(%s)\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"auto-index\00", align 1
@.str.470 = private unnamed_addr constant [35 x i8] c"abbreviated query algorithm search\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"no query solution\00", align 1
@.str.472 = private unnamed_addr constant [56 x i8] c"second argument to nth_value must be a positive integer\00", align 1
@.str.473 = private unnamed_addr constant [45 x i8] c"argument of ntile must be a positive integer\00", align 1
@row_numberName = constant [11 x i8] c"row_number\00", align 1
@dense_rankName = constant [11 x i8] c"dense_rank\00", align 1
@rankName = constant [5 x i8] c"rank\00", align 1
@percent_rankName = constant [13 x i8] c"percent_rank\00", align 1
@cume_distName = constant [10 x i8] c"cume_dist\00", align 1
@ntileName = constant [6 x i8] c"ntile\00", align 1
@last_valueName = constant [11 x i8] c"last_value\00", align 1
@nth_valueName = constant [10 x i8] c"nth_value\00", align 1
@first_valueName = constant [12 x i8] c"first_value\00", align 1
@leadName = constant [5 x i8] c"lead\00", align 1
@lagName = constant [4 x i8] c"lag\00", align 1
@.str.474 = private unnamed_addr constant [19 x i8] c"no such window: %s\00", align 1
@windowCheckValue.azErr = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.478, i32 0, i32 0)], align 16
@.str.475 = private unnamed_addr constant [53 x i8] c"frame starting offset must be a non-negative integer\00", align 1
@.str.476 = private unnamed_addr constant [51 x i8] c"frame ending offset must be a non-negative integer\00", align 1
@.str.477 = private unnamed_addr constant [52 x i8] c"frame starting offset must be a non-negative number\00", align 1
@.str.478 = private unnamed_addr constant [50 x i8] c"frame ending offset must be a non-negative number\00", align 1
@windowCheckValue.aOp = internal unnamed_addr constant [5 x i32] [i32 57, i32 57, i32 54, i32 57, i32 57], align 16
@yy_action = local_unnamed_addr constant [1924 x i16] [i16 528, i16 1183, i16 528, i16 114, i16 111, i16 208, i16 114, i16 111, i16 208, i16 192, i16 1186, i16 528, i16 418, i16 528, i16 450, i16 528, i16 1447, i16 362, i16 528, i16 380, i16 6, i16 373, i16 70, i16 70, i16 42, i16 42, i16 476, i16 1423, i16 485, i16 418, i16 417, i16 911, i16 505, i16 42, i16 42, i16 71, i16 71, i16 51, i16 51, i16 912, i16 71, i16 71, i16 484, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 415, i16 380, i16 261, i16 261, i16 261, i16 261, i16 16, i16 16, i16 970, i16 970, i16 981, i16 984, i16 1226, i16 1226, i16 510, i16 525, i16 477, i16 525, i16 528, i16 491, i16 350, i16 236, i16 205, i16 486, i16 356, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 42, i16 42, i16 418, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1452, i16 349, i16 413, i16 1150, i16 1, i16 1, i16 534, i16 3, i16 1154, i16 1454, i16 1185, i16 348, i16 940, i16 286, i16 1081, i16 143, i16 1081, i16 380, i16 940, i16 114, i16 111, i16 208, i16 1234, i16 1440, i16 98, i16 370, i16 164, i16 974, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 261, i16 261, i16 228, i16 261, i16 261, i16 463, i16 460, i16 459, i16 306, i16 423, i16 296, i16 123, i16 435, i16 525, i16 306, i16 458, i16 525, i16 177, i16 1452, i16 499, i16 116, i16 116, i16 116, i16 115, i16 409, i16 285, i16 519, i16 218, i16 1221, i16 335, i16 1200, i16 380, i16 431, i16 120, i16 120, i16 120, i16 120, i16 113, i16 1221, i16 1109, i16 1110, i16 1111, i16 794, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 351, i16 12, i16 83, i16 1109, i16 81, i16 142, i16 256, i16 1109, i16 80, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 169, i16 426, i16 307, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1109, i16 1110, i16 1111, i16 1497, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 114, i16 111, i16 208, i16 528, i16 1109, i16 1109, i16 1110, i16 1111, i16 1491, i16 1109, i16 1110, i16 1111, i16 114, i16 111, i16 208, i16 380, i16 1193, i16 183, i16 1003, i16 321, i16 120, i16 120, i16 120, i16 120, i16 440, i16 71, i16 71, i16 487, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1379, i16 1468, i16 1109, i16 464, i16 1109, i16 1110, i16 1111, i16 281, i16 522, i16 522, i16 522, i16 97, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1392, i16 1334, i16 203, i16 473, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 164, i16 12, i16 1392, i16 1394, i16 1109, i16 1110, i16 1111, i16 228, i16 1076, i16 215, i16 463, i16 460, i16 459, i16 319, i16 488, i16 380, i16 334, i16 1465, i16 399, i16 816, i16 458, i16 1076, i16 239, i16 325, i16 1076, i16 407, i16 407, i16 407, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 285, i16 519, i16 1130, i16 809, i16 164, i16 235, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 189, i16 1392, i16 314, i16 178, i16 317, i16 425, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 382, i16 466, i16 1076, i16 419, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1076, i16 527, i16 396, i16 1076, i16 1109, i16 1130, i16 285, i16 519, i16 247, i16 264, i16 333, i16 469, i16 328, i16 468, i16 233, i16 380, i16 217, i16 812, i16 336, i16 1094, i16 324, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1076, i16 394, i16 960, i16 961, i16 1109, i16 1110, i16 1111, i16 285, i16 519, i16 1109, i16 444, i16 495, i16 163, i16 1076, i16 441, i16 347, i16 1076, i16 812, i16 951, i16 450, i16 505, i16 163, i16 950, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 1333, i16 1224, i16 1224, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 950, i16 950, i16 952, i16 528, i16 877, i16 115, i16 409, i16 13, i16 13, i16 293, i16 1422, i16 1109, i16 1110, i16 1111, i16 494, i16 380, i16 334, i16 1465, i16 526, i16 945, i16 866, i16 866, i16 388, i16 439, i16 32, i16 71, i16 71, i16 490, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 433, i16 284, i16 1471, i16 534, i16 3, i16 1154, i16 1109, i16 510, i16 474, i16 1446, i16 286, i16 378, i16 143, i16 6, i16 506, i16 1439, i16 509, i16 503, i16 1446, i16 1234, i16 508, i16 336, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 137, i16 5, i16 206, i16 1387, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 261, i16 261, i16 528, i16 255, i16 255, i16 533, i16 401, i16 1154, i16 1109, i16 1110, i16 1111, i16 270, i16 286, i16 525, i16 143, i16 380, i16 525, i16 406, i16 405, i16 335, i16 267, i16 1234, i16 335, i16 1109, i16 71, i16 71, i16 832, i16 218, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 261, i16 261, i16 467, i16 380, i16 355, i16 1023, i16 510, i16 1139, i16 192, i16 1139, i16 833, i16 145, i16 450, i16 525, i16 141, i16 475, i16 258, i16 1109, i16 1434, i16 896, i16 368, i16 71, i16 71, i16 1109, i16 1110, i16 1111, i16 1109, i16 218, i16 100, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 211, i16 1044, i16 528, i16 1386, i16 433, i16 282, i16 960, i16 1028, i16 1028, i16 447, i16 386, i16 397, i16 1319, i16 511, i16 1444, i16 357, i16 1045, i16 353, i16 6, i16 1109, i16 1110, i16 1111, i16 951, i16 414, i16 71, i16 71, i16 950, i16 528, i16 1109, i16 1110, i16 1111, i16 1046, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 125, i16 103, i16 1147, i16 898, i16 261, i16 261, i16 71, i16 71, i16 192, i16 852, i16 528, i16 386, i16 897, i16 207, i16 950, i16 950, i16 952, i16 525, i16 510, i16 853, i16 379, i16 380, i16 262, i16 262, i16 426, i16 307, i16 193, i16 512, i16 782, i16 783, i16 784, i16 386, i16 55, i16 55, i16 271, i16 525, i16 295, i16 450, i16 896, i16 390, i16 528, i16 380, i16 275, i16 404, i16 275, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1445, i16 380, i16 56, i16 56, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 268, i16 1233, i16 2, i16 377, i16 376, i16 121, i16 110, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 269, i16 285, i16 519, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 528, i16 439, i16 528, i16 9, i16 1109, i16 239, i16 1113, i16 450, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 528, i16 420, i16 528, i16 15, i16 15, i16 13, i16 13, i16 471, i16 528, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 393, i16 1130, i16 44, i16 44, i16 57, i16 57, i16 406, i16 405, i16 1431, i16 380, i16 13, i16 13, i16 1229, i16 872, i16 1136, i16 1109, i16 1110, i16 1111, i16 871, i16 1138, i16 1109, i16 1110, i16 1111, i16 1113, i16 439, i16 395, i16 294, i16 1137, i16 450, i16 455, i16 335, i16 104, i16 528, i16 102, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 433, i16 1109, i16 1139, i16 528, i16 1139, i16 13, i16 13, i16 232, i16 1130, i16 305, i16 109, i16 261, i16 261, i16 107, i16 520, i16 140, i16 4, i16 38, i16 1076, i16 1319, i16 274, i16 13, i16 13, i16 312, i16 525, i16 13, i16 13, i16 1319, i16 144, i16 502, i16 523, i16 1076, i16 528, i16 911, i16 1076, i16 288, i16 186, i16 528, i16 896, i16 528, i16 187, i16 912, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 410, i16 13, i16 13, i16 1109, i16 1110, i16 1111, i16 71, i16 71, i16 58, i16 58, i16 107, i16 520, i16 517, i16 4, i16 304, i16 289, i16 507, i16 1232, i16 273, i16 528, i16 272, i16 383, i16 164, i16 437, i16 1172, i16 1443, i16 501, i16 523, i16 1496, i16 6, i16 1025, i16 841, i16 493, i16 478, i16 1025, i16 481, i16 391, i16 324, i16 513, i16 8, i16 960, i16 59, i16 59, i16 408, i16 392, i16 500, i16 105, i16 105, i16 261, i16 261, i16 410, i16 261, i16 261, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 261, i16 261, i16 950, i16 525, i16 517, i16 301, i16 525, i16 528, i16 445, i16 261, i16 261, i16 261, i16 261, i16 525, i16 261, i16 261, i16 508, i16 207, i16 497, i16 285, i16 519, i16 528, i16 525, i16 496, i16 525, i16 260, i16 205, i16 525, i16 528, i16 60, i16 60, i16 528, i16 960, i16 950, i16 950, i16 952, i16 953, i16 27, i16 105, i16 105, i16 528, i16 1319, i16 896, i16 61, i16 61, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 62, i16 62, i16 950, i16 45, i16 45, i16 107, i16 520, i16 528, i16 4, i16 528, i16 438, i16 1044, i16 46, i16 46, i16 1175, i16 384, i16 298, i16 292, i16 300, i16 231, i16 230, i16 229, i16 523, i16 1442, i16 528, i16 1270, i16 1045, i16 6, i16 30, i16 47, i16 47, i16 49, i16 49, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1470, i16 1098, i16 412, i16 1046, i16 528, i16 265, i16 1238, i16 410, i16 50, i16 50, i16 366, i16 366, i16 365, i16 250, i16 363, i16 97, i16 1319, i16 791, i16 525, i16 517, i16 528, i16 31, i16 528, i16 446, i16 516, i16 1129, i16 63, i16 63, i16 528, i16 232, i16 212, i16 872, i16 291, i16 497, i16 428, i16 528, i16 871, i16 1022, i16 498, i16 1022, i16 290, i16 201, i16 64, i16 64, i16 65, i16 65, i16 528, i16 960, i16 1459, i16 528, i16 14, i16 14, i16 1269, i16 105, i16 105, i16 139, i16 937, i16 66, i16 66, i16 299, i16 106, i16 528, i16 410, i16 530, i16 529, i16 528, i16 422, i16 950, i16 127, i16 127, i16 214, i16 67, i16 67, i16 303, i16 107, i16 520, i16 97, i16 4, i16 156, i16 1411, i16 17, i16 158, i16 528, i16 52, i16 52, i16 528, i16 402, i16 68, i16 68, i16 528, i16 1204, i16 523, i16 804, i16 528, i16 819, i16 528, i16 383, i16 213, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1410, i16 69, i16 69, i16 528, i16 53, i16 53, i16 831, i16 830, i16 151, i16 151, i16 823, i16 410, i16 152, i16 152, i16 76, i16 76, i16 427, i16 528, i16 521, i16 384, i16 1010, i16 528, i16 1021, i16 517, i16 1021, i16 54, i16 54, i16 528, i16 381, i16 442, i16 528, i16 309, i16 528, i16 285, i16 519, i16 1266, i16 196, i16 497, i16 528, i16 72, i16 72, i16 954, i16 496, i16 128, i16 128, i16 804, i16 263, i16 819, i16 313, i16 73, i16 73, i16 960, i16 129, i16 129, i16 130, i16 130, i16 416, i16 105, i16 105, i16 95, i16 126, i16 126, i16 838, i16 839, i16 106, i16 528, i16 410, i16 530, i16 529, i16 1098, i16 412, i16 950, i16 316, i16 265, i16 942, i16 1203, i16 1010, i16 238, i16 366, i16 366, i16 365, i16 250, i16 363, i16 432, i16 318, i16 791, i16 238, i16 150, i16 150, i16 528, i16 107, i16 520, i16 528, i16 4, i16 528, i16 320, i16 528, i16 954, i16 212, i16 1217, i16 291, i16 1257, i16 950, i16 950, i16 952, i16 953, i16 27, i16 523, i16 290, i16 528, i16 1202, i16 149, i16 149, i16 528, i16 134, i16 134, i16 133, i16 133, i16 131, i16 131, i16 107, i16 520, i16 528, i16 4, i16 332, i16 528, i16 914, i16 915, i16 1201, i16 528, i16 410, i16 132, i16 132, i16 528, i16 331, i16 75, i16 75, i16 523, i16 214, i16 327, i16 434, i16 280, i16 517, i16 238, i16 77, i16 77, i16 156, i16 74, i16 74, i16 158, i16 869, i16 43, i16 43, i16 109, i16 308, i16 48, i16 48, i16 97, i16 337, i16 456, i16 410, i16 322, i16 234, i16 1484, i16 97, i16 213, i16 1006, i16 338, i16 905, i16 234, i16 960, i16 238, i16 517, i16 1278, i16 1318, i16 1253, i16 105, i16 105, i16 876, i16 802, i16 1264, i16 870, i16 138, i16 106, i16 109, i16 410, i16 530, i16 529, i16 514, i16 515, i16 950, i16 1324, i16 99, i16 520, i16 451, i16 4, i16 1182, i16 1174, i16 1163, i16 381, i16 960, i16 1162, i16 1164, i16 1478, i16 285, i16 519, i16 105, i16 105, i16 253, i16 523, i16 195, i16 210, i16 1250, i16 106, i16 340, i16 410, i16 530, i16 529, i16 342, i16 11, i16 950, i16 950, i16 950, i16 952, i16 953, i16 27, i16 344, i16 416, i16 198, i16 367, i16 1303, i16 421, i16 410, i16 297, i16 302, i16 1311, i16 372, i16 436, i16 461, i16 202, i16 1200, i16 330, i16 1383, i16 1382, i16 517, i16 190, i16 346, i16 191, i16 518, i16 197, i16 360, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1481, i16 1147, i16 242, i16 1430, i16 165, i16 1428, i16 1144, i16 385, i16 83, i16 430, i16 1388, i16 79, i16 175, i16 1308, i16 82, i16 161, i16 960, i16 167, i16 1300, i16 95, i16 424, i16 170, i16 105, i16 105, i16 35, i16 171, i16 172, i16 371, i16 173, i16 106, i16 36, i16 410, i16 530, i16 529, i16 1314, i16 179, i16 950, i16 265, i16 369, i16 429, i16 443, i16 1377, i16 366, i16 366, i16 365, i16 250, i16 363, i16 454, i16 222, i16 791, i16 88, i16 449, i16 1399, i16 254, i16 224, i16 184, i16 311, i16 452, i16 315, i16 225, i16 470, i16 1165, i16 212, i16 226, i16 291, i16 374, i16 90, i16 950, i16 950, i16 952, i16 953, i16 27, i16 290, i16 398, i16 1211, i16 1495, i16 823, i16 1494, i16 203, i16 1220, i16 1219, i16 1464, i16 1218, i16 1261, i16 400, i16 278, i16 375, i16 1190, i16 1189, i16 329, i16 489, i16 1188, i16 1493, i16 279, i16 94, i16 339, i16 241, i16 480, i16 1262, i16 1210, i16 483, i16 341, i16 214, i16 1260, i16 1259, i16 343, i16 345, i16 240, i16 403, i16 124, i16 156, i16 10, i16 508, i16 158, i16 1285, i16 1450, i16 1449, i16 354, i16 492, i16 101, i16 96, i16 248, i16 1171, i16 34, i16 531, i16 1363, i16 1104, i16 249, i16 251, i16 213, i16 1243, i16 252, i16 352, i16 359, i16 194, i16 1242, i16 358, i16 532, i16 1160, i16 1155, i16 1415, i16 153, i16 1416, i16 1284, i16 1414, i16 154, i16 136, i16 276, i16 1413, i16 778, i16 411, i16 199, i16 287, i16 200, i16 78, i16 155, i16 209, i16 266, i16 283, i16 135, i16 1020, i16 1018, i16 934, i16 381, i16 166, i16 157, i16 216, i16 168, i16 285, i16 519, i16 855, i16 1034, i16 938, i16 159, i16 174, i16 387, i16 389, i16 84, i16 176, i16 85, i16 86, i16 87, i16 160, i16 1037, i16 1033, i16 219, i16 220, i16 146, i16 18, i16 221, i16 1026, i16 416, i16 1141, i16 310, i16 238, i16 448, i16 223, i16 180, i16 181, i16 37, i16 793, i16 331, i16 227, i16 453, i16 323, i16 465, i16 834, i16 182, i16 89, i16 19, i16 20, i16 457, i16 821, i16 462, i16 326, i16 91, i16 277, i16 147, i16 92, i16 472, i16 479, i16 1092, i16 148, i16 986, i16 904, i16 1062, i16 162, i16 93, i16 39, i16 482, i16 1063, i16 40, i16 204, i16 257, i16 259, i16 185, i16 899, i16 237, i16 109, i16 1082, i16 1078, i16 1080, i16 21, i16 1066, i16 1086, i16 33, i16 504, i16 188, i16 22, i16 23, i16 24, i16 1085, i16 25, i16 97, i16 1001, i16 987, i16 985, i16 989, i16 26, i16 1043, i16 244, i16 7, i16 1042, i16 243, i16 990, i16 28, i16 41, i16 524, i16 955, i16 803, i16 108, i16 29, i16 245, i16 865, i16 246, i16 1486, i16 364, i16 361, i16 1100, i16 1099, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1485], align 16
@yy_lookahead = local_unnamed_addr constant [2105 x i16] [i16 189, i16 211, i16 189, i16 267, i16 268, i16 269, i16 267, i16 268, i16 269, i16 189, i16 211, i16 189, i16 189, i16 189, i16 189, i16 189, i16 294, i16 197, i16 189, i16 19, i16 298, i16 201, i16 211, i16 212, i16 211, i16 212, i16 200, i16 288, i16 200, i16 206, i16 207, i16 31, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 39, i16 211, i16 212, i16 189, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 233, i16 19, i16 234, i16 235, i16 234, i16 235, i16 211, i16 212, i16 46, i16 47, i16 48, i16 49, i16 230, i16 231, i16 248, i16 247, i16 248, i16 247, i16 189, i16 248, i16 214, i16 251, i16 252, i16 257, i16 271, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 211, i16 212, i16 277, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 299, i16 300, i16 289, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 299, i16 211, i16 301, i16 73, i16 191, i16 86, i16 193, i16 88, i16 19, i16 73, i16 267, i16 268, i16 269, i16 200, i16 292, i16 26, i16 200, i16 81, i16 119, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 234, i16 235, i16 117, i16 234, i16 235, i16 120, i16 121, i16 122, i16 125, i16 126, i16 127, i16 69, i16 189, i16 247, i16 125, i16 130, i16 247, i16 22, i16 299, i16 300, i16 107, i16 108, i16 109, i16 110, i16 111, i16 136, i16 137, i16 261, i16 218, i16 189, i16 220, i16 19, i16 263, i16 54, i16 55, i16 56, i16 57, i16 58, i16 228, i16 114, i16 115, i16 116, i16 21, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 214, i16 208, i16 148, i16 59, i16 24, i16 236, i16 208, i16 59, i16 67, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 72, i16 126, i16 127, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 114, i16 115, i16 116, i16 225, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 267, i16 268, i16 269, i16 189, i16 59, i16 114, i16 115, i16 116, i16 210, i16 114, i16 115, i16 116, i16 267, i16 268, i16 269, i16 19, i16 218, i16 72, i16 121, i16 23, i16 54, i16 55, i16 56, i16 57, i16 284, i16 211, i16 212, i16 19, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 158, i16 189, i16 59, i16 23, i16 114, i16 115, i16 116, i16 248, i16 205, i16 206, i16 207, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 162, i16 163, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 81, i16 208, i16 206, i16 207, i16 114, i16 115, i16 116, i16 117, i16 76, i16 24, i16 120, i16 121, i16 122, i16 16, i16 114, i16 19, i16 296, i16 297, i16 19, i16 23, i16 130, i16 89, i16 24, i16 24, i16 92, i16 205, i16 206, i16 207, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 136, i16 137, i16 59, i16 23, i16 81, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 279, i16 277, i16 77, i16 22, i16 79, i16 284, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 194, i16 95, i16 76, i16 118, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 89, i16 189, i16 111, i16 92, i16 59, i16 115, i16 136, i16 137, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 19, i16 139, i16 59, i16 189, i16 23, i16 129, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 76, i16 227, i16 99, i16 23, i16 114, i16 115, i16 116, i16 136, i16 137, i16 59, i16 274, i16 87, i16 189, i16 89, i16 278, i16 189, i16 92, i16 114, i16 115, i16 189, i16 189, i16 189, i16 119, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 230, i16 231, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 150, i16 151, i16 152, i16 189, i16 107, i16 110, i16 111, i16 211, i16 212, i16 189, i16 233, i16 114, i16 115, i16 116, i16 143, i16 19, i16 296, i16 297, i16 132, i16 23, i16 134, i16 135, i16 226, i16 189, i16 22, i16 211, i16 212, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 189, i16 239, i16 183, i16 184, i16 185, i16 186, i16 59, i16 248, i16 293, i16 294, i16 191, i16 249, i16 193, i16 298, i16 291, i16 292, i16 257, i16 293, i16 294, i16 200, i16 143, i16 189, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 161, i16 22, i16 189, i16 276, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 234, i16 235, i16 189, i16 234, i16 235, i16 184, i16 227, i16 186, i16 114, i16 115, i16 116, i16 285, i16 191, i16 247, i16 193, i16 19, i16 247, i16 105, i16 106, i16 189, i16 262, i16 200, i16 189, i16 59, i16 211, i16 212, i16 35, i16 261, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 234, i16 235, i16 66, i16 19, i16 189, i16 11, i16 248, i16 150, i16 189, i16 152, i16 74, i16 236, i16 189, i16 247, i16 236, i16 257, i16 23, i16 59, i16 189, i16 26, i16 201, i16 211, i16 212, i16 114, i16 115, i16 116, i16 59, i16 261, i16 156, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 15, i16 12, i16 189, i16 233, i16 189, i16 248, i16 99, i16 125, i16 126, i16 127, i16 189, i16 128, i16 189, i16 200, i16 294, i16 244, i16 27, i16 246, i16 298, i16 114, i16 115, i16 116, i16 115, i16 189, i16 211, i16 212, i16 119, i16 189, i16 114, i16 115, i16 116, i16 42, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 22, i16 156, i16 60, i16 141, i16 234, i16 235, i16 211, i16 212, i16 189, i16 63, i16 189, i16 189, i16 141, i16 116, i16 150, i16 151, i16 152, i16 247, i16 248, i16 73, i16 201, i16 19, i16 234, i16 235, i16 126, i16 127, i16 24, i16 257, i16 7, i16 8, i16 9, i16 189, i16 211, i16 212, i16 262, i16 247, i16 258, i16 189, i16 141, i16 259, i16 189, i16 19, i16 223, i16 248, i16 225, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 294, i16 19, i16 211, i16 212, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 233, i16 22, i16 105, i16 106, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 136, i16 137, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 189, i16 189, i16 189, i16 22, i16 59, i16 24, i16 59, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 189, i16 263, i16 189, i16 211, i16 212, i16 211, i16 212, i16 107, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 226, i16 59, i16 211, i16 212, i16 211, i16 212, i16 105, i16 106, i16 189, i16 19, i16 211, i16 212, i16 233, i16 133, i16 113, i16 114, i16 115, i16 116, i16 138, i16 118, i16 114, i16 115, i16 116, i16 115, i16 189, i16 226, i16 200, i16 126, i16 189, i16 19, i16 189, i16 155, i16 189, i16 157, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 189, i16 59, i16 150, i16 189, i16 152, i16 211, i16 212, i16 46, i16 115, i16 285, i16 26, i16 234, i16 235, i16 19, i16 20, i16 22, i16 22, i16 24, i16 76, i16 189, i16 226, i16 211, i16 212, i16 233, i16 247, i16 211, i16 212, i16 189, i16 236, i16 87, i16 36, i16 89, i16 189, i16 31, i16 92, i16 189, i16 226, i16 189, i16 26, i16 189, i16 226, i16 39, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 211, i16 212, i16 114, i16 115, i16 116, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 71, i16 22, i16 200, i16 189, i16 226, i16 200, i16 285, i16 189, i16 262, i16 113, i16 81, i16 19, i16 200, i16 294, i16 66, i16 36, i16 23, i16 298, i16 29, i16 26, i16 143, i16 200, i16 33, i16 200, i16 259, i16 129, i16 200, i16 48, i16 99, i16 211, i16 212, i16 248, i16 259, i16 85, i16 105, i16 106, i16 234, i16 235, i16 59, i16 234, i16 235, i16 112, i16 94, i16 114, i16 115, i16 116, i16 234, i16 235, i16 119, i16 247, i16 71, i16 16, i16 247, i16 189, i16 65, i16 234, i16 235, i16 234, i16 235, i16 247, i16 234, i16 235, i16 143, i16 116, i16 85, i16 136, i16 137, i16 189, i16 247, i16 90, i16 247, i16 251, i16 252, i16 247, i16 189, i16 211, i16 212, i16 189, i16 99, i16 150, i16 151, i16 152, i16 153, i16 154, i16 105, i16 106, i16 189, i16 189, i16 141, i16 211, i16 212, i16 112, i16 144, i16 114, i16 115, i16 116, i16 211, i16 212, i16 119, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 189, i16 114, i16 12, i16 211, i16 212, i16 203, i16 204, i16 77, i16 189, i16 79, i16 125, i16 126, i16 127, i16 36, i16 294, i16 189, i16 189, i16 27, i16 298, i16 22, i16 211, i16 212, i16 211, i16 212, i16 150, i16 151, i16 152, i16 153, i16 154, i16 0, i16 1, i16 2, i16 42, i16 189, i16 5, i16 235, i16 59, i16 211, i16 212, i16 10, i16 11, i16 12, i16 13, i16 14, i16 26, i16 189, i16 17, i16 247, i16 71, i16 189, i16 53, i16 189, i16 259, i16 63, i16 26, i16 211, i16 212, i16 189, i16 46, i16 30, i16 133, i16 32, i16 85, i16 127, i16 189, i16 138, i16 150, i16 90, i16 152, i16 40, i16 26, i16 211, i16 212, i16 211, i16 212, i16 189, i16 99, i16 303, i16 189, i16 211, i16 212, i16 189, i16 105, i16 106, i16 22, i16 149, i16 211, i16 212, i16 158, i16 112, i16 189, i16 114, i16 115, i16 116, i16 189, i16 189, i16 119, i16 211, i16 212, i16 70, i16 211, i16 212, i16 23, i16 19, i16 20, i16 26, i16 22, i16 78, i16 189, i16 22, i16 81, i16 189, i16 211, i16 212, i16 189, i16 259, i16 211, i16 212, i16 189, i16 221, i16 36, i16 59, i16 189, i16 59, i16 189, i16 113, i16 97, i16 150, i16 151, i16 152, i16 153, i16 154, i16 189, i16 211, i16 212, i16 189, i16 211, i16 212, i16 118, i16 119, i16 211, i16 212, i16 124, i16 59, i16 211, i16 212, i16 211, i16 212, i16 61, i16 189, i16 203, i16 204, i16 59, i16 189, i16 150, i16 71, i16 152, i16 211, i16 212, i16 189, i16 131, i16 189, i16 189, i16 189, i16 189, i16 136, i16 137, i16 189, i16 140, i16 85, i16 189, i16 211, i16 212, i16 59, i16 90, i16 211, i16 212, i16 115, i16 22, i16 115, i16 189, i16 211, i16 212, i16 99, i16 211, i16 212, i16 211, i16 212, i16 159, i16 105, i16 106, i16 147, i16 211, i16 212, i16 7, i16 8, i16 112, i16 189, i16 114, i16 115, i16 116, i16 1, i16 2, i16 119, i16 189, i16 5, i16 23, i16 221, i16 115, i16 26, i16 10, i16 11, i16 12, i16 13, i16 14, i16 23, i16 189, i16 17, i16 26, i16 211, i16 212, i16 189, i16 19, i16 20, i16 189, i16 22, i16 189, i16 189, i16 189, i16 115, i16 30, i16 189, i16 32, i16 253, i16 150, i16 151, i16 152, i16 153, i16 154, i16 36, i16 40, i16 189, i16 221, i16 211, i16 212, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 119, i16 189, i16 83, i16 84, i16 189, i16 189, i16 59, i16 211, i16 212, i16 189, i16 129, i16 211, i16 212, i16 36, i16 70, i16 189, i16 23, i16 250, i16 71, i16 26, i16 211, i16 212, i16 78, i16 211, i16 212, i16 81, i16 23, i16 211, i16 212, i16 26, i16 23, i16 211, i16 212, i16 26, i16 189, i16 23, i16 59, i16 23, i16 26, i16 139, i16 26, i16 97, i16 23, i16 189, i16 23, i16 26, i16 99, i16 26, i16 71, i16 189, i16 189, i16 189, i16 105, i16 106, i16 107, i16 23, i16 189, i16 23, i16 26, i16 112, i16 26, i16 114, i16 115, i16 116, i16 189, i16 231, i16 119, i16 189, i16 19, i16 20, i16 281, i16 22, i16 189, i16 189, i16 189, i16 131, i16 99, i16 189, i16 189, i16 189, i16 136, i16 137, i16 105, i16 106, i16 280, i16 36, i16 237, i16 290, i16 250, i16 112, i16 250, i16 114, i16 115, i16 116, i16 250, i16 238, i16 119, i16 150, i16 151, i16 152, i16 153, i16 154, i16 250, i16 159, i16 209, i16 187, i16 241, i16 254, i16 59, i16 254, i16 286, i16 241, i16 241, i16 286, i16 215, i16 224, i16 220, i16 214, i16 214, i16 214, i16 71, i16 244, i16 254, i16 244, i16 273, i16 238, i16 240, i16 150, i16 151, i16 152, i16 153, i16 154, i16 192, i16 60, i16 139, i16 196, i16 290, i16 196, i16 38, i16 196, i16 148, i16 113, i16 276, i16 287, i16 22, i16 265, i16 287, i16 43, i16 99, i16 229, i16 241, i16 147, i16 18, i16 232, i16 105, i16 106, i16 264, i16 232, i16 232, i16 265, i16 232, i16 112, i16 264, i16 114, i16 115, i16 116, i16 229, i16 229, i16 119, i16 5, i16 241, i16 241, i16 196, i16 241, i16 10, i16 11, i16 12, i16 13, i16 14, i16 18, i16 195, i16 17, i16 155, i16 62, i16 283, i16 196, i16 195, i16 22, i16 282, i16 216, i16 196, i16 195, i16 113, i16 196, i16 30, i16 195, i16 32, i16 216, i16 22, i16 150, i16 151, i16 152, i16 153, i16 154, i16 40, i16 64, i16 222, i16 219, i16 124, i16 219, i16 162, i16 213, i16 213, i16 297, i16 213, i16 256, i16 111, i16 275, i16 216, i16 213, i16 215, i16 213, i16 142, i16 213, i16 213, i16 275, i16 113, i16 255, i16 91, i16 216, i16 256, i16 222, i16 216, i16 255, i16 70, i16 256, i16 256, i16 255, i16 255, i16 196, i16 82, i16 146, i16 78, i16 22, i16 143, i16 81, i16 260, i16 302, i16 302, i16 196, i16 144, i16 155, i16 145, i16 25, i16 199, i16 26, i16 198, i16 270, i16 13, i16 190, i16 190, i16 97, i16 245, i16 6, i16 244, i16 241, i16 243, i16 245, i16 242, i16 188, i16 188, i16 188, i16 208, i16 202, i16 208, i16 260, i16 208, i16 202, i16 217, i16 217, i16 208, i16 4, i16 3, i16 209, i16 160, i16 209, i16 208, i16 202, i16 15, i16 98, i16 272, i16 16, i16 23, i16 23, i16 137, i16 131, i16 148, i16 128, i16 24, i16 140, i16 136, i16 137, i16 20, i16 1, i16 149, i16 128, i16 140, i16 61, i16 37, i16 53, i16 148, i16 53, i16 53, i16 53, i16 128, i16 114, i16 1, i16 34, i16 139, i16 5, i16 22, i16 113, i16 68, i16 159, i16 75, i16 158, i16 26, i16 41, i16 139, i16 68, i16 113, i16 24, i16 20, i16 129, i16 123, i16 19, i16 23, i16 96, i16 28, i16 22, i16 22, i16 22, i16 22, i16 67, i16 59, i16 67, i16 24, i16 22, i16 67, i16 23, i16 147, i16 22, i16 24, i16 23, i16 23, i16 23, i16 114, i16 23, i16 37, i16 26, i16 22, i16 24, i16 23, i16 22, i16 139, i16 23, i16 23, i16 22, i16 141, i16 34, i16 26, i16 75, i16 88, i16 86, i16 34, i16 23, i16 75, i16 22, i16 24, i16 26, i16 34, i16 34, i16 34, i16 93, i16 34, i16 26, i16 23, i16 23, i16 23, i16 23, i16 34, i16 23, i16 22, i16 44, i16 23, i16 26, i16 11, i16 22, i16 22, i16 26, i16 23, i16 23, i16 22, i16 22, i16 139, i16 133, i16 139, i16 139, i16 15, i16 23, i16 1, i16 1, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 139, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304], align 16
@yy_shift_ofst = local_unnamed_addr constant [535 x i16] [i16 1448, i16 1277, i16 1072, i16 1668, i16 1072, i16 319, i16 1122, i16 1225, i16 1332, i16 1481, i16 1481, i16 1481, i16 57, i16 0, i16 0, i16 180, i16 897, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 930, i16 930, i16 1020, i16 1020, i16 290, i16 378, i16 319, i16 319, i16 319, i16 319, i16 319, i16 319, i16 40, i16 110, i16 219, i16 288, i16 327, i16 396, i16 435, i16 504, i16 543, i16 612, i16 651, i16 720, i16 877, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 917, i16 897, i16 1019, i16 763, i16 763, i16 1451, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1553, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 147, i16 258, i16 258, i16 258, i16 258, i16 258, i16 360, i16 424, i16 81, i16 183, i16 1039, i16 183, i16 636, i16 636, i16 183, i16 434, i16 434, i16 189, i16 434, i16 434, i16 134, i16 225, i16 225, i16 511, i16 29, i16 1924, i16 1924, i16 399, i16 399, i16 399, i16 93, i16 163, i16 187, i16 163, i16 163, i16 821, i16 821, i16 487, i16 237, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 332, i16 332, i16 183, i16 773, i16 419, i16 419, i16 937, i16 937, i16 548, i16 840, i16 1924, i16 1924, i16 466, i16 739, i16 739, i16 453, i16 53, i16 618, i16 513, i16 688, i16 737, i16 746, i16 935, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 51, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 715, i16 715, i16 715, i16 183, i16 183, i16 183, i16 183, i16 772, i16 183, i16 183, i16 183, i16 971, i16 1091, i16 183, i16 183, i16 1238, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 714, i16 1132, i16 502, i16 398, i16 398, i16 398, i16 398, i16 1090, i16 502, i16 502, i16 909, i16 853, i16 896, i16 817, i16 1292, i16 300, i16 300, i16 1135, i16 1292, i16 1292, i16 1135, i16 1266, i16 1136, i16 1260, i16 1080, i16 1080, i16 1080, i16 300, i16 1062, i16 1062, i16 905, i16 1276, i16 1175, i16 1071, i16 1577, i16 1499, i16 1499, i16 1604, i16 1604, i16 1499, i16 1496, i16 1532, i16 1626, i16 1608, i16 1508, i16 1638, i16 1638, i16 1638, i16 1638, i16 1508, i16 1508, i16 1532, i16 1626, i16 1608, i16 1608, i16 1508, i16 1499, i16 1665, i16 1531, i16 1625, i16 1499, i16 1665, i16 1669, i16 1499, i16 1665, i16 1499, i16 1665, i16 1669, i16 1583, i16 1583, i16 1583, i16 1645, i16 1680, i16 1680, i16 1669, i16 1583, i16 1588, i16 1583, i16 1645, i16 1583, i16 1583, i16 1552, i16 1669, i16 1609, i16 1609, i16 1669, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1499, i16 1641, i16 1641, i16 1662, i16 1662, i16 1599, i16 1605, i16 1725, i16 1499, i16 1600, i16 1599, i16 1611, i16 1610, i16 1508, i16 1732, i16 1733, i16 1749, i16 1749, i16 1761, i16 1761, i16 1761, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 20, i16 1178, i16 397, i16 1133, i16 1310, i16 1245, i16 385, i16 1184, i16 1327, i16 1335, i16 1431, i16 1440, i16 1497, i16 1511, i16 1516, i16 1518, i16 1312, i16 1268, i16 1435, i16 1385, i16 1341, i16 1523, i16 1525, i16 1423, i16 1507, i16 1164, i16 1252, i16 1536, i16 1538, i16 1362, i16 1404, i16 1781, i16 1783, i16 1628, i16 1777, i16 1695, i16 1779, i16 1773, i16 1774, i16 1661, i16 1652, i16 1673, i16 1778, i16 1663, i16 1786, i16 1806, i16 1670, i16 1659, i16 1681, i16 1750, i16 1775, i16 1666, i16 1760, i16 1762, i16 1763, i16 1764, i16 1690, i16 1705, i16 1787, i16 1683, i16 1819, i16 1818, i16 1802, i16 1712, i16 1671, i16 1758, i16 1804, i16 1765, i16 1753, i16 1790, i16 1693, i16 1721, i16 1811, i16 1816, i16 1820, i16 1708, i16 1715, i16 1821, i16 1780, i16 1822, i16 1823, i16 1817, i16 1824, i16 1782, i16 1789, i16 1826, i16 1745, i16 1814, i16 1829, i16 1785, i16 1825, i16 1830, i16 1707, i16 1833, i16 1834, i16 1835, i16 1836, i16 1837, i16 1838, i16 1842, i16 1832, i16 1843, i16 1845, i16 1841, i16 1729, i16 1846, i16 1847, i16 1746, i16 1839, i16 1849, i16 1731, i16 1848, i16 1844, i16 1850, i16 1851, i16 1852, i16 1788, i16 1800, i16 1791, i16 1853, i16 1805, i16 1794, i16 1854, i16 1856, i16 1859, i16 1858, i16 1857, i16 1863, i16 1860, i16 1867, i16 1848, i16 1868, i16 1869, i16 1870, i16 1872, i16 1873, i16 1875, i16 1874, i16 1889, i16 1879, i16 1880, i16 1881, i16 1882, i16 1884, i16 1885, i16 1877, i16 1776, i16 1769, i16 1771, i16 1772, i16 1784, i16 1890, i16 1897, i16 1913, i16 1914], align 16
@yy_reduce_ofst = local_unnamed_addr constant [380 x i16] [i16 -66, i16 490, i16 645, i16 545, i16 -174, i16 -172, i16 -187, i16 -178, i16 -113, i16 -176, i16 430, i16 537, i16 -63, i16 -136, i16 25, i16 -261, i16 37, i16 412, i16 803, i16 828, i16 872, i16 -171, i16 888, i16 892, i16 106, i16 589, i16 921, i16 -189, i16 670, i16 926, i16 -177, i16 196, i16 386, i16 395, i16 694, i16 855, i16 945, i16 948, i16 955, i16 964, i16 966, i16 969, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -147, i16 696, i16 726, i16 801, i16 820, i16 822, i16 928, i16 961, i16 1007, i16 1021, i16 1028, i16 1031, i16 1040, i16 1057, i16 1059, i16 1074, i16 1092, i16 1108, i16 1110, i16 1116, i16 1123, i16 1134, i16 1137, i16 1149, i16 1153, i16 1170, i16 1173, i16 1177, i16 1181, i16 1183, i16 1194, i16 1208, i16 1212, i16 1218, i16 1221, i16 1223, i16 1229, i16 1256, i16 1280, i16 1283, i16 1285, i16 1287, i16 1300, i16 1304, i16 1313, i16 1316, i16 1320, i16 1324, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -175, i16 -22, i16 394, i16 150, i16 220, i16 -180, i16 493, i16 663, i16 299, i16 493, i16 663, i16 193, i16 120, i16 336, i16 -264, i16 -264, i16 -264, i16 -264, i16 90, i16 90, i16 90, i16 436, i16 482, i16 8, i16 647, i16 889, i16 -160, i16 373, i16 -278, i16 554, i16 598, i16 653, i16 697, i16 717, i16 557, i16 393, i16 602, i16 723, i16 808, i16 450, i16 655, i16 802, i16 908, i16 916, i16 864, i16 1041, i16 868, i16 337, i16 870, i16 503, i16 1104, i16 552, i16 641, i16 -157, i16 32, i16 862, i16 968, i16 1050, i16 1195, i16 603, i16 1048, i16 963, i16 433, i16 -210, i16 -201, i16 -89, i16 -9, i16 55, i16 159, i16 320, i16 389, i16 454, i16 522, i16 594, i16 608, i16 666, i16 848, i16 924, i16 957, i16 1067, i16 1075, i16 1140, i16 1154, i16 747, i16 1167, i16 1191, i16 1220, i16 1222, i16 1226, i16 1239, i16 1263, i16 1275, i16 1286, i16 1290, i16 1146, i16 1234, i16 1269, i16 1319, i16 1330, i16 1349, i16 1358, i16 1228, i16 1364, i16 1365, i16 1366, i16 1271, i16 1022, i16 1371, i16 1379, i16 1338, i16 1382, i16 320, i16 1387, i16 1388, i16 1389, i16 1392, i16 1393, i16 1394, i16 1293, i16 1308, i16 1353, i16 1342, i16 1344, i16 1348, i16 1356, i16 1228, i16 1353, i16 1353, i16 1361, i16 1399, i16 1422, i16 1301, i16 1369, i16 1357, i16 1359, i16 1328, i16 1374, i16 1375, i16 1331, i16 1403, i16 1395, i16 1400, i16 1407, i16 1408, i16 1409, i16 1372, i16 1381, i16 1383, i16 1355, i16 1390, i16 1391, i16 1444, i16 1350, i16 1443, i16 1445, i16 1360, i16 1363, i16 1447, i16 1370, i16 1384, i16 1396, i16 1424, i16 1413, i16 1425, i16 1429, i16 1430, i16 1432, i16 1433, i16 1434, i16 1398, i16 1402, i16 1441, i16 1442, i16 1436, i16 1480, i16 1489, i16 1405, i16 1410, i16 1493, i16 1495, i16 1477, i16 1498, i16 1500, i16 1501, i16 1504, i16 1485, i16 1502, i16 1503, i16 1505, i16 1488, i16 1492, i16 1494, i16 1506, i16 1510, i16 1509, i16 1512, i16 1513, i16 1514, i16 1515, i16 1420, i16 1517, i16 1446, i16 1454, i16 1520, i16 1463, i16 1476, i16 1478, i16 1482, i16 1483, i16 1486, i16 1484, i16 1487, i16 1547, i16 1449, i16 1450, i16 1490, i16 1519, i16 1521, i16 1524, i16 1491, i16 1557, i16 1522, i16 1526, i16 1527, i16 1530, i16 1528, i16 1559, i16 1562, i16 1573, i16 1574, i16 1585, i16 1586, i16 1587, i16 1575, i16 1568, i16 1570, i16 1572, i16 1576, i16 1579, i16 1565, i16 1566, i16 1578, i16 1580, i16 1582, i16 1589], align 16
@yy_default = local_unnamed_addr constant [535 x i16] [i16 1523, i16 1523, i16 1372, i16 1523, i16 1149, i16 1258, i16 1149, i16 1149, i16 1149, i16 1372, i16 1372, i16 1372, i16 1149, i16 1288, i16 1288, i16 1425, i16 1180, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1371, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1297, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1373, i16 1374, i16 1149, i16 1149, i16 1149, i16 1424, i16 1426, i16 1389, i16 1307, i16 1306, i16 1305, i16 1304, i16 1407, i16 1275, i16 1302, i16 1295, i16 1299, i16 1367, i16 1368, i16 1366, i16 1370, i16 1374, i16 1373, i16 1149, i16 1298, i16 1338, i16 1352, i16 1337, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1346, i16 1351, i16 1357, i16 1350, i16 1347, i16 1340, i16 1339, i16 1341, i16 1342, i16 1149, i16 1222, i16 1149, i16 1149, i16 1149, i16 1149, i16 1436, i16 1435, i16 1170, i16 1149, i16 1149, i16 1180, i16 1332, i16 1331, i16 1343, i16 1344, i16 1354, i16 1353, i16 1432, i16 1483, i16 1482, i16 1390, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1180, i16 1448, i16 1448, i16 1176, i16 1176, i16 1282, i16 1149, i16 1258, i16 1249, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1429, i16 1427, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1254, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1477, i16 1149, i16 1402, i16 1236, i16 1254, i16 1254, i16 1254, i16 1254, i16 1256, i16 1237, i16 1235, i16 1248, i16 1181, i16 1156, i16 1521, i16 1301, i16 1277, i16 1277, i16 1518, i16 1301, i16 1301, i16 1518, i16 1197, i16 1499, i16 1192, i16 1288, i16 1288, i16 1288, i16 1277, i16 1282, i16 1282, i16 1369, i16 1255, i16 1248, i16 1149, i16 1521, i16 1263, i16 1263, i16 1520, i16 1520, i16 1263, i16 1390, i16 1310, i16 1316, i16 1225, i16 1301, i16 1231, i16 1231, i16 1231, i16 1231, i16 1301, i16 1301, i16 1310, i16 1316, i16 1225, i16 1225, i16 1301, i16 1263, i16 1167, i16 1406, i16 1515, i16 1263, i16 1167, i16 1380, i16 1263, i16 1167, i16 1263, i16 1167, i16 1380, i16 1223, i16 1223, i16 1223, i16 1212, i16 1149, i16 1149, i16 1380, i16 1223, i16 1197, i16 1223, i16 1212, i16 1223, i16 1223, i16 1466, i16 1380, i16 1384, i16 1384, i16 1380, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1263, i16 1458, i16 1458, i16 1291, i16 1291, i16 1296, i16 1282, i16 1375, i16 1263, i16 1149, i16 1296, i16 1294, i16 1292, i16 1301, i16 1173, i16 1215, i16 1480, i16 1480, i16 1476, i16 1476, i16 1476, i16 1492, i16 1180, i16 1180, i16 1180, i16 1180, i16 1492, i16 1199, i16 1199, i16 1181, i16 1181, i16 1180, i16 1492, i16 1149, i16 1149, i16 1149, i16 1149, i16 1487, i16 1391, i16 1267, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1321, i16 1149, i16 1152, i16 1149, i16 1149, i16 1433, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1268, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1517, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1405, i16 1404, i16 1149, i16 1149, i16 1265, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1195, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1293, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1463, i16 1283, i16 1149, i16 1149, i16 1508, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1503, i16 1239, i16 1323, i16 1149, i16 1322, i16 1326, i16 1149, i16 1161, i16 1149, i16 1149], align 16
@yyFallback = local_unnamed_addr constant <{ [100 x i16], [81 x i16] }> <{ [100 x i16] [i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 0, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59], [81 x i16] zeroinitializer }>, align 16
@.str.479 = private unnamed_addr constant [22 x i8] c"parser stack overflow\00", align 1
@yyRuleInfoLhs = local_unnamed_addr constant [372 x i16] [i16 185, i16 185, i16 184, i16 186, i16 187, i16 187, i16 187, i16 187, i16 186, i16 186, i16 186, i16 186, i16 186, i16 191, i16 193, i16 195, i16 195, i16 194, i16 194, i16 192, i16 192, i16 199, i16 199, i16 201, i16 203, i16 203, i16 203, i16 204, i16 208, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 219, i16 219, i16 215, i16 215, i16 217, i16 217, i16 220, i16 220, i16 220, i16 220, i16 221, i16 221, i16 221, i16 221, i16 221, i16 218, i16 218, i16 222, i16 222, i16 222, i16 198, i16 224, i16 225, i16 225, i16 225, i16 225, i16 225, i16 228, i16 213, i16 213, i16 229, i16 229, i16 230, i16 230, i16 186, i16 232, i16 232, i16 186, i16 186, i16 186, i16 200, i16 200, i16 200, i16 234, i16 237, i16 237, i16 237, i16 235, i16 235, i16 247, i16 247, i16 238, i16 238, i16 238, i16 249, i16 239, i16 239, i16 239, i16 250, i16 250, i16 240, i16 240, i16 252, i16 252, i16 251, i16 251, i16 251, i16 251, i16 196, i16 196, i16 233, i16 233, i16 258, i16 258, i16 258, i16 258, i16 253, i16 253, i16 253, i16 253, i16 255, i16 255, i16 254, i16 254, i16 254, i16 256, i16 256, i16 244, i16 244, i16 226, i16 226, i16 214, i16 214, i16 214, i16 260, i16 260, i16 260, i16 242, i16 242, i16 243, i16 243, i16 245, i16 245, i16 245, i16 245, i16 186, i16 241, i16 241, i16 186, i16 262, i16 262, i16 262, i16 262, i16 186, i16 186, i16 265, i16 265, i16 265, i16 265, i16 263, i16 263, i16 264, i16 264, i16 259, i16 259, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 267, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 268, i16 268, i16 212, i16 269, i16 269, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 272, i16 272, i16 273, i16 273, i16 271, i16 271, i16 257, i16 248, i16 248, i16 270, i16 270, i16 186, i16 274, i16 274, i16 216, i16 216, i16 227, i16 227, i16 275, i16 275, i16 186, i16 186, i16 186, i16 276, i16 276, i16 186, i16 186, i16 186, i16 186, i16 186, i16 206, i16 207, i16 186, i16 278, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 283, i16 283, i16 279, i16 279, i16 285, i16 286, i16 286, i16 284, i16 284, i16 284, i16 284, i16 212, i16 212, i16 231, i16 231, i16 231, i16 186, i16 186, i16 186, i16 288, i16 288, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 289, i16 186, i16 261, i16 261, i16 236, i16 236, i16 291, i16 291, i16 292, i16 293, i16 293, i16 293, i16 293, i16 293, i16 293, i16 294, i16 294, i16 294, i16 298, i16 300, i16 300, i16 301, i16 301, i16 299, i16 299, i16 302, i16 302, i16 303, i16 303, i16 303, i16 246, i16 266, i16 266, i16 266, i16 297, i16 297, i16 296, i16 181, i16 182, i16 182, i16 183, i16 183, i16 183, i16 188, i16 188, i16 188, i16 190, i16 190, i16 186, i16 197, i16 197, i16 189, i16 189, i16 189, i16 203, i16 204, i16 205, i16 205, i16 202, i16 202, i16 210, i16 210, i16 210, i16 198, i16 223, i16 223, i16 224, i16 228, i16 230, i16 234, i16 235, i16 249, i16 250, i16 212, i16 267, i16 257, i16 277, i16 277, i16 277, i16 277, i16 277, i16 206, i16 282, i16 282, i16 285, i16 286, i16 287, i16 287, i16 290, i16 290, i16 261], align 16
@yyRuleInfoNRhs = local_unnamed_addr constant [372 x i8] c"\FF\FD\FF\FD\00\FF\FF\FF\FE\FE\FE\FD\FB\FA\FF\00\FD\FF\00\FB\FE\00\FE\FE\00\FC\FA\FE\00\00\FE\FD\FC\FC\FC\FD\FD\FB\FE\FC\FC\FF\FE\FD\FC\00\FF\00\FE\FE\FD\FD\FD\FE\FE\FF\FF\FE\FD\FE\00\FE\FE\00\FF\FE\F9\FB\FB\F6\00\00\FD\00\FE\FF\FF\FC\FE\00\F7\FC\FF\FD\FC\FF\FD\FF\FE\FF\F7\F6\FC\FB\FF\FF\00\00\FB\FD\FB\FE\00\00\FE\FE\00\F9\F7\F9\F9\00\FE\FF\FD\FF\FD\FB\FD\FF\FE\FD\FC\FE\00\00\FD\FE\FC\00\00\FD\FB\FD\FF\FF\00\FE\FE\00\00\FD\00\FE\00\FE\FC\FC\FA\00\FE\F8\FB\F9\FD\FB\F9\F9\00\F5\F8\FC\FE\FF\00\FD\FD\FF\FD\FF\FF\FD\FB\FF\FF\FF\FF\FD\FA\FB\FC\FA\FB\FF\FB\FD\FD\FD\FD\FD\FD\FD\FD\FE\FD\FB\FE\FD\FD\FC\FE\FE\FE\FF\FE\FB\FF\FE\FB\FD\FB\FB\FC\FB\FB\FC\FE\00\FF\00\00\FD\FF\00\FD\F4\FF\00\00\FD\FB\FD\00\FE\FC\FE\FD\FE\00\FD\FB\FA\FB\FA\FE\FE\FB\F5\FF\FE\00\FF\FF\FD\00\FE\FD\FE\FD\FD\FE\F8\F8\FA\FD\FC\FA\FF\FF\FF\FC\FA\FD\00\FE\FF\FD\FF\FD\FA\F9\FF\F8\FE\FD\FA\F8\FF\FD\FB\FB\FA\FC\FB\FF\FE\00\FD\FA\FF\FF\FE\FF\FE\FE\FE\00\FE\FE\FE\FF\FE\FE\FF\FF\FC\FE\FB\FF\FE\FF\FF\FE\FD\00\FF\FE\FF\00\FE\FC\FE\FF\FF\FF\FF\FF\FF\FF\FE\00\FE\FC\FE\FE\FD\FF\00\FF\FF\FF\FF\FE\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FD\FF\00\FF\00\00\FF\00", align 16
@.str.480 = private unnamed_addr constant [27 x i8] c"unknown table option: %.*s\00", align 1
@__const.yy_reduce.dest = private unnamed_addr constant %struct.SelectDest { i8 9, i32 0, i32 0, i32 0, i8* null, %struct.ExprList* null }, align 8
@.str.481 = private unnamed_addr constant [9 x i8] c"set list\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"near \22%T\22: syntax error\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.484 = private unnamed_addr constant [95 x i8] c"qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\00", align 1
@.str.485 = private unnamed_addr constant [84 x i8] c"the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.486 = private unnamed_addr constant [85 x i8] c"the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@aiClass = local_unnamed_addr constant [256 x i8] calign 16
@zKWText = constant [647 x i8] c"REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEAFTERENAMEANDEFERREDISTINCTAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPARTITIONDROPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY", align 16
@aKWHash = local_unnamed_addr constant [127 x i8] c"Tf\84Rr\1D\00\00[\00UH\005#V\0F\00*^6~\85\13\00\00\8A\00(\80\00\16h\00\09\00\00zP\00N\06\00Ac\91\00\86p\00\000\00d\18\00\11\00\1BF\17\1A\05<\8Cky\00IeG\8F=wJ\001\00\0B)\00n\00\00\00j\0Alq|\0E2{\00Y\00\12x\8E8\81\89XS%\1E}\00\00i3\82\7F\00\22\00\00,\00_&'\00\14-tZ", align 16
@aKWNext = local_unnamed_addr constant [145 x i8] c"\00\00\00\00\04\00+\00\00go\00\00\00\02\00\00\8D\00\00\00\0D\00\00\00\00\8B\00\00v4\00\00\87\0C\00\00>\00\88\00\83\00\00$\00\00\1CM\00\00\00\00;\00/\00\00\00\00\00\00\00\00\00\00E\00\00\00\00\00\90\03\00:\00\01K\00\00\00\1F\00\00\00\00\00\00@B?\00\00\00\00.\00\10\00s\00\00\00\00\00\00\00\00\00\00Qa\00\08\00m\15\07C\00O]u\00\00D\00\00`\007\00L\00\\ !9\19\00b\00\00W", align 16
@aKWLen = local_unnamed_addr constant [145 x i8] c"\07\07\05\04\06\04\05\03\06\07\03\06\06\07\07\03\08\02\06\05\04\04\03\0A\04\07\06\09\04\02\06\05\09\09\04\07\03\02\04\04\06\0B\06\02\07\05\05\09\06\0A\04\06\02\03\07\05\09\06\06\04\05\05\0A\06\05\07\04\05\07\06\07\07\06\05\07\03\07\04\07\06\0C\09\04\06\05\04\07\06\05\06\06\07\06\04\05\09\05\06\03\08\08\02\0D\02\02\04\06\06\08\05\11\0C\07\09\04\09\04\04\06\07\05\09\04\04\05\02\05\08\06\04\05\08\04\03\09\05\05\06\04\06\02\02\09\03\07", align 16
@aKWOffset = local_unnamed_addr constant [145 x i16] [i16 0, i16 2, i16 2, i16 8, i16 9, i16 14, i16 16, i16 20, i16 23, i16 25, i16 25, i16 29, i16 33, i16 36, i16 41, i16 46, i16 48, i16 53, i16 54, i16 59, i16 62, i16 65, i16 67, i16 69, i16 78, i16 81, i16 86, i16 90, i16 90, i16 94, i16 99, i16 101, i16 105, i16 111, i16 119, i16 123, i16 123, i16 123, i16 126, i16 129, i16 132, i16 137, i16 142, i16 146, i16 147, i16 152, i16 156, i16 160, i16 168, i16 174, i16 181, i16 184, i16 184, i16 187, i16 189, i16 195, i16 198, i16 206, i16 211, i16 216, i16 219, i16 222, i16 226, i16 236, i16 239, i16 244, i16 244, i16 248, i16 252, i16 259, i16 265, i16 271, i16 277, i16 277, i16 283, i16 284, i16 288, i16 295, i16 299, i16 306, i16 312, i16 324, i16 333, i16 335, i16 341, i16 346, i16 348, i16 355, i16 360, i16 365, i16 371, i16 377, i16 382, i16 388, i16 392, i16 395, i16 404, i16 408, i16 414, i16 416, i16 423, i16 424, i16 431, i16 433, i16 435, i16 444, i16 448, i16 454, i16 460, i16 468, i16 473, i16 473, i16 473, i16 489, i16 498, i16 501, i16 510, i16 513, i16 517, i16 522, i16 529, i16 534, i16 543, i16 547, i16 550, i16 555, i16 557, i16 561, i16 569, i16 575, i16 578, i16 583, i16 591, i16 591, i16 595, i16 604, i16 609, i16 614, i16 620, i16 623, i16 626, i16 629, i16 631, i16 636, i16 640], align 16
@aKWCode = local_unnamed_addr constant [145 x i8] c"ar\9E':)zC!\82>?/\02A\A0&\18\88\10t\9C\0B\81\9D[~\15\15+2R\0D\87^3\13Bw/\86\06\1Cqt\9FG\09\14u\94ED\80MY_(\91/\05t{y\03\19Qt\0E 0\95\\\90#\1Fv\9Ao\11c\08\8D}.\04\1EF\1B\7F\89P`\9B\93H\1Db,\07\8A-|\0F1$<\0A%tccUW\83X*T\A3ISV\8Ct\92\12\8FJ]\A2t\0CLKZ\84\8ENO\A1=\22@\85x", align 16
@sqlite3_complete.trans = internal unnamed_addr constant [8 x [8 x i8]] [[8 x i8] c"\01\00\02\03\04\02\02\02", [8 x i8] c"\01\01\02\03\04\02\02\02", [8 x i8] c"\01\02\02\02\02\02\02\02", [8 x i8] c"\01\03\03\02\04\02\02\02", [8 x i8] c"\01\04\02\02\02\04\05\02", [8 x i8] c"\06\05\05\05\05\05\05\05", [8 x i8] c"\06\06\05\05\05\05\05\07", [8 x i8] c"\01\07\05\05\05\05\05\05"], align 16
@.str.488 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.489 = private unnamed_addr constant [8 x i8] c"trigger\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.491 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.493 = private unnamed_addr constant [8 x i8] c"explain\00", align 1
@sqlite3_data_directory = local_unnamed_addr global i8* null, align 8
@sqlite3BuiltinFunctions = internal unnamed_addr global %struct.FuncDefHash zeroinitializer, align 8
@sqlite3_db_config.aFlagOp = internal unnamed_addr constant [16 x %struct.anon.22] [%struct.anon.22 { i32 1002, i32 16384 }, %struct.anon.22 { i32 1003, i32 262144 }, %struct.anon.22 { i32 1015, i32 -2147483648 }, %struct.anon.22 { i32 1004, i32 4194304 }, %struct.anon.22 { i32 1005, i32 65536 }, %struct.anon.22 { i32 1006, i32 2048 }, %struct.anon.22 { i32 1007, i32 8388608 }, %struct.anon.22 { i32 1008, i32 16777216 }, %struct.anon.22 { i32 1009, i32 33554432 }, %struct.anon.22 { i32 1010, i32 268435456 }, %struct.anon.22 { i32 1011, i32 134217729 }, %struct.anon.22 { i32 1012, i32 67108864 }, %struct.anon.22 { i32 1014, i32 536870912 }, %struct.anon.22 { i32 1013, i32 1073741824 }, %struct.anon.22 { i32 1016, i32 2 }, %struct.anon.22 { i32 1017, i32 128 }], align 16
@.str.494 = private unnamed_addr constant [21 x i8] c"unknown database: %s\00", align 1
@sqlite3_errmsg16.outOfMem = internal constant [14 x i16] [i16 111, i16 117, i16 116, i16 32, i16 111, i16 102, i16 32, i16 109, i16 101, i16 109, i16 111, i16 114, i16 121, i16 0], align 16
@sqlite3_errmsg16.misuse = internal constant [34 x i16] [i16 98, i16 97, i16 100, i16 32, i16 112, i16 97, i16 114, i16 97, i16 109, i16 101, i16 116, i16 101, i16 114, i16 32, i16 111, i16 114, i16 32, i16 111, i16 116, i16 104, i16 101, i16 114, i16 32, i16 65, i16 80, i16 73, i16 32, i16 109, i16 105, i16 115, i16 117, i16 115, i16 101, i16 0], align 16
@.str.495 = private unnamed_addr constant [68 x i8] c"unable to delete/modify collation sequence due to active statements\00", align 1
@aHardLimit = constant [12 x i32] [i32 1000000000, i32 1000000000, i32 2000, i32 1000, i32 500, i32 250000000, i32 127, i32 10, i32 50000, i32 32766, i32 1000, i32 8], align 16
@.str.496 = private unnamed_addr constant [6 x i8] c"RTRIM\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.498 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.499 = private unnamed_addr constant [28 x i8] c"no such table column: %s.%s\00", align 1
@.str.500 = private unnamed_addr constant [8 x i8] c"SQLITE_\00", align 1
@.str.501 = private unnamed_addr constant [85 x i8] c"2020-03-11 19:56:26 c5f96a085db9688a09793f52ce1ecf033c2e6e2e5873a19fe0fb374b242balt1\00", align 1
@_sqliteZone_ = local_unnamed_addr global %struct._malloc_zone_t* null, align 8
@top_of_stack = local_unnamed_addr global i64 0, align 8
@sqlite3Utf8Trans1 = internal unnamed_addr constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\00\01\02\03\00\01\00\00", align 16
@sqlite3PagerFilename.zFake = internal constant [8 x i8] zeroinitializer, align 1
@sqlite3VdbeSerialGet.aFlag = internal unnamed_addr constant [2 x i16] [i16 4112, i16 4098], align 2
@.str.502 = private unnamed_addr constant [19 x i8] c"a CHECK constraint\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"a generated column\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"an index\00", align 1
@.str.505 = private unnamed_addr constant [36 x i8] c"non-deterministic use of %s() in %s\00", align 1
@.str.506 = private unnamed_addr constant [35 x i8] c"sqlite3VdbeRealValue: NO FLAG SET\0A\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@sqlite3OpcodeName.azName = internal unnamed_addr constant [176 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.683, i32 0, i32 0)], align 16
@.str.508 = private unnamed_addr constant [10 x i8] c"Savepoint\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"AutoCommit\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"Transaction\00", align 1
@.str.511 = private unnamed_addr constant [11 x i8] c"SorterNext\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"Next\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"Checkpoint\00", align 1
@.str.515 = private unnamed_addr constant [12 x i8] c"JournalMode\00", align 1
@.str.516 = private unnamed_addr constant [7 x i8] c"Vacuum\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"VFilter\00", align 1
@.str.518 = private unnamed_addr constant [8 x i8] c"VUpdate\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"Gosub\00", align 1
@.str.521 = private unnamed_addr constant [14 x i8] c"InitCoroutine\00", align 1
@.str.522 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"MustBeInt\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Once\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"IfNot\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"IfNullRow\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"SeekLT\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"SeekLE\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"SeekGE\00", align 1
@.str.533 = private unnamed_addr constant [7 x i8] c"SeekGT\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"IfNotOpen\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"IfNoHope\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"NoConflict\00", align 1
@.str.537 = private unnamed_addr constant [9 x i8] c"NotFound\00", align 1
@.str.538 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"SeekRowid\00", align 1
@.str.540 = private unnamed_addr constant [10 x i8] c"NotExists\00", align 1
@.str.541 = private unnamed_addr constant [5 x i8] c"Last\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"IfSmaller\00", align 1
@.str.543 = private unnamed_addr constant [11 x i8] c"SorterSort\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"Sort\00", align 1
@.str.545 = private unnamed_addr constant [7 x i8] c"Rewind\00", align 1
@.str.546 = private unnamed_addr constant [6 x i8] c"IdxLE\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"IdxGT\00", align 1
@.str.548 = private unnamed_addr constant [6 x i8] c"IdxLT\00", align 1
@.str.549 = private unnamed_addr constant [6 x i8] c"IdxGE\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"RowSetRead\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.553 = private unnamed_addr constant [11 x i8] c"RowSetTest\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"Program\00", align 1
@.str.555 = private unnamed_addr constant [9 x i8] c"FkIfZero\00", align 1
@.str.556 = private unnamed_addr constant [6 x i8] c"IfPos\00", align 1
@.str.557 = private unnamed_addr constant [10 x i8] c"IfNotZero\00", align 1
@.str.558 = private unnamed_addr constant [7 x i8] c"IsNull\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"NotNull\00", align 1
@.str.560 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@.str.561 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@.str.562 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Le\00", align 1
@.str.564 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@.str.565 = private unnamed_addr constant [3 x i8] c"Ge\00", align 1
@.str.566 = private unnamed_addr constant [10 x i8] c"ElseNotEq\00", align 1
@.str.567 = private unnamed_addr constant [13 x i8] c"DecrJumpZero\00", align 1
@.str.568 = private unnamed_addr constant [11 x i8] c"IncrVacuum\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"VNext\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"PureFunc\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.573 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"EndCoroutine\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"HaltIfNull\00", align 1
@.str.576 = private unnamed_addr constant [5 x i8] c"Halt\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"Int64\00", align 1
@.str.579 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.581 = private unnamed_addr constant [9 x i8] c"SoftNull\00", align 1
@.str.582 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"Variable\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.585 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"SCopy\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"IntCopy\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"ResultRow\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"CollSeq\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"AddImm\00", align 1
@.str.591 = private unnamed_addr constant [13 x i8] c"RealAffinity\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"Cast\00", align 1
@.str.593 = private unnamed_addr constant [12 x i8] c"Permutation\00", align 1
@.str.594 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.595 = private unnamed_addr constant [7 x i8] c"IsTrue\00", align 1
@.str.596 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"Column\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"Affinity\00", align 1
@.str.599 = private unnamed_addr constant [11 x i8] c"MakeRecord\00", align 1
@.str.600 = private unnamed_addr constant [6 x i8] c"Count\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"ReadCookie\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"SetCookie\00", align 1
@.str.603 = private unnamed_addr constant [10 x i8] c"ReopenIdx\00", align 1
@.str.604 = private unnamed_addr constant [9 x i8] c"OpenRead\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"OpenWrite\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"OpenDup\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"OpenAutoindex\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"OpenEphemeral\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@.str.610 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"ShiftLeft\00", align 1
@.str.612 = private unnamed_addr constant [11 x i8] c"ShiftRight\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"Remainder\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"Concat\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"SorterOpen\00", align 1
@.str.620 = private unnamed_addr constant [7 x i8] c"BitNot\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"SequenceTest\00", align 1
@.str.622 = private unnamed_addr constant [11 x i8] c"OpenPseudo\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"String8\00", align 1
@.str.624 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"ColumnsUsed\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"SeekHit\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.628 = private unnamed_addr constant [9 x i8] c"NewRowid\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"ResetCount\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"SorterCompare\00", align 1
@.str.633 = private unnamed_addr constant [11 x i8] c"SorterData\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"RowData\00", align 1
@.str.635 = private unnamed_addr constant [6 x i8] c"Rowid\00", align 1
@.str.636 = private unnamed_addr constant [8 x i8] c"NullRow\00", align 1
@.str.637 = private unnamed_addr constant [8 x i8] c"SeekEnd\00", align 1
@.str.638 = private unnamed_addr constant [10 x i8] c"IdxInsert\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"SorterInsert\00", align 1
@.str.640 = private unnamed_addr constant [10 x i8] c"IdxDelete\00", align 1
@.str.641 = private unnamed_addr constant [13 x i8] c"DeferredSeek\00", align 1
@.str.642 = private unnamed_addr constant [9 x i8] c"IdxRowid\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"FinishSeek\00", align 1
@.str.644 = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.645 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.646 = private unnamed_addr constant [12 x i8] c"ResetSorter\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"CreateBtree\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"SqlExec\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"ParseSchema\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"LoadAnalysis\00", align 1
@.str.651 = private unnamed_addr constant [10 x i8] c"DropTable\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"DropIndex\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"DropTrigger\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"IntegrityCk\00", align 1
@.str.655 = private unnamed_addr constant [10 x i8] c"RowSetAdd\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@.str.657 = private unnamed_addr constant [10 x i8] c"FkCounter\00", align 1
@.str.658 = private unnamed_addr constant [5 x i8] c"Real\00", align 1
@.str.659 = private unnamed_addr constant [7 x i8] c"MemMax\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"OffsetLimit\00", align 1
@.str.661 = private unnamed_addr constant [11 x i8] c"AggInverse\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"AggStep\00", align 1
@.str.663 = private unnamed_addr constant [9 x i8] c"AggStep1\00", align 1
@.str.664 = private unnamed_addr constant [9 x i8] c"AggValue\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"AggFinal\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"Expire\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"CursorLock\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"CursorUnlock\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"TableLock\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"VBegin\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"VCreate\00", align 1
@.str.672 = private unnamed_addr constant [9 x i8] c"VDestroy\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"VOpen\00", align 1
@.str.674 = private unnamed_addr constant [8 x i8] c"VColumn\00", align 1
@.str.675 = private unnamed_addr constant [8 x i8] c"VRename\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"Pagecount\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"MaxPgcnt\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"Trace\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"CursorHint\00", align 1
@.str.680 = private unnamed_addr constant [11 x i8] c"ReleaseReg\00", align 1
@.str.681 = private unnamed_addr constant [5 x i8] c"Noop\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"Explain\00", align 1
@.str.683 = private unnamed_addr constant [10 x i8] c"Abortable\00", align 1
@sqlite3VdbeExec.azType = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0)], align 16
@.str.684 = private unnamed_addr constant [9 x i8] c"NOT NULL\00", align 1
@.str.685 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@.str.686 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"FOREIGN KEY\00", align 1
@.str.688 = private unnamed_addr constant [21 x i8] c"%s constraint failed\00", align 1
@.str.689 = private unnamed_addr constant [7 x i8] c"%z: %s\00", align 1
@.str.690 = private unnamed_addr constant [24 x i8] c"abort at %d in [%s]: %s\00", align 1
@sqlite3VdbeExec.aLTb = internal unnamed_addr constant [6 x i8] c"\01\00\00\01\01\00", align 1
@sqlite3VdbeExec.aEQb = internal unnamed_addr constant [6 x i8] c"\00\01\00\01\00\01", align 1
@sqlite3VdbeExec.aGTb = internal unnamed_addr constant [6 x i8] c"\01\00\01\00\00\01", align 1
@sqlite3VdbeExec.and_logic = internal unnamed_addr constant [9 x i8] c"\00\00\00\00\01\02\00\02\02", align 1
@sqlite3VdbeExec.or_logic = internal unnamed_addr constant [9 x i8] c"\00\01\02\01\01\01\02\01\02", align 1
@sqlite3VdbeExec.aFlag = internal unnamed_addr constant [2 x i16] [i16 16, i16 514], align 2
@.str.691 = private unnamed_addr constant [51 x i8] c"cannot open savepoint - SQL statements in progress\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"no such savepoint: %s\00", align 1
@.str.693 = private unnamed_addr constant [54 x i8] c"cannot release savepoint - SQL statements in progress\00", align 1
@.str.694 = private unnamed_addr constant [55 x i8] c"cannot commit transaction - SQL statements in progress\00", align 1
@.str.695 = private unnamed_addr constant [48 x i8] c"cannot start a transaction within a transaction\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"cannot rollback - no transaction is active\00", align 1
@.str.697 = private unnamed_addr constant [41 x i8] c"cannot commit - no transaction is active\00", align 1
@.str.698 = private unnamed_addr constant [28 x i8] c"database schema has changed\00", align 1
@.str.699 = private unnamed_addr constant [43 x i8] c"SELECT*FROM\22%w\22.%s WHERE %s ORDER BY rowid\00", align 1
@.str.700 = private unnamed_addr constant [37 x i8] c"too many levels of trigger recursion\00", align 1
@.str.701 = private unnamed_addr constant [52 x i8] c"cannot change %s wal mode from within a transaction\00", align 1
@.str.702 = private unnamed_addr constant [5 x i8] c"into\00", align 1
@.str.703 = private unnamed_addr constant [7 x i8] c"out of\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"database table is locked: %s\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"statement aborts at %d: [%s] %s\00", align 1
@sqlite3BtreeFakeValidCursor.fakeCursor = internal global i8 0, align 1
@.str.706 = private unnamed_addr constant [19 x i8] c"sqlite_temp_master\00", align 1
@.str.707 = private unnamed_addr constant [72 x i8] c"CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\00", align 1
@.str.708 = private unnamed_addr constant [24 x i8] c"unsupported file format\00", align 1
@.str.709 = private unnamed_addr constant [34 x i8] c"SELECT*FROM\22%w\22.%s ORDER BY rowid\00", align 1
@.str.710 = private unnamed_addr constant [8 x i8] c"create \00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"invalid rootpage\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"orphan index\00", align 1
@.str.713 = private unnamed_addr constant [30 x i8] c"database schema is locked: %s\00", align 1
@.str.714 = private unnamed_addr constant [19 x i8] c"statement too long\00", align 1
@.str.715 = private unnamed_addr constant [41 x i8] c"SELECT tbl,idx,stat FROM %Q.sqlite_stat1\00", align 1
@__const.sqlite3DefaultRowEst.aVal = private unnamed_addr constant [5 x i16] [i16 33, i16 32, i16 30, i16 28, i16 26], align 2
@.str.716 = private unnamed_addr constant [16 x i8] c"Main freelist: \00", align 1
@.str.717 = private unnamed_addr constant [45 x i8] c"max rootpage (%d) disagrees with header (%d)\00", align 1
@.str.718 = private unnamed_addr constant [55 x i8] c"incremental_vacuum enabled with a max rootpage of zero\00", align 1
@.str.719 = private unnamed_addr constant [22 x i8] c"Page %d is never used\00", align 1
@.str.720 = private unnamed_addr constant [34 x i8] c"Pointer map page %d is referenced\00", align 1
@sqlite3JournalModename.azModeName = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.725, i32 0, i32 0)], align 16
@.str.721 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.723 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.724 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.725 = private unnamed_addr constant [4 x i8] c"wal\00", align 1
@.str.726 = private unnamed_addr constant [40 x i8] c"cannot VACUUM from within a transaction\00", align 1
@.str.727 = private unnamed_addr constant [43 x i8] c"cannot VACUUM - SQL statements in progress\00", align 1
@.str.728 = private unnamed_addr constant [18 x i8] c"non-text filename\00", align 1
@.str.729 = private unnamed_addr constant [23 x i8] c"ATTACH %Q AS vacuum_db\00", align 1
@.str.730 = private unnamed_addr constant [27 x i8] c"output file already exists\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.732 = private unnamed_addr constant [108 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\00", align 1
@.str.733 = private unnamed_addr constant [54 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='index'\00", align 1
@.str.734 = private unnamed_addr constant [151 x i8] c"SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\22%w\22.'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\00", align 1
@.str.735 = private unnamed_addr constant [130 x i8] c"INSERT INTO vacuum_db.sqlite_master SELECT*FROM \22%w\22.sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\00", align 1
@sqlite3RunVacuum.aCopy = internal unnamed_addr constant [10 x i8] c"\01\01\03\00\05\00\06\00\08\00", align 1
@sqlite3OpcodeProperty = internal unnamed_addr constant [176 x i8] calign 16
@sqlite3VdbeMakeReady.azColName = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0)], align 16
@.str.736 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.737 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.738 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.739 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.740 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.741 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@.str.742 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@.str.743 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.744 = private unnamed_addr constant [8 x i8] c"notused\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.746 = private unnamed_addr constant [31 x i8] c"too many terms in %s BY clause\00", align 1
@.str.747 = private unnamed_addr constant [48 x i8] c"Expression tree is too large (maximum depth %d)\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"unsafe use of %s()\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.750 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.751 = private unnamed_addr constant [8 x i8] c"_ROWID_\00", align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"ROWID\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"REUSE SUBQUERY %d\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"%sSCALAR SUBQUERY %d\00", align 1
@.str.756 = private unnamed_addr constant [12 x i8] c"CORRELATED \00", align 1
@sqlite3VdbeGetOp.dummy = internal global %struct.VdbeOp zeroinitializer, align 8
@sqlite3ExprCodeTarget.zAff = internal constant [8 x i8] c"B\00C\00D\00E\00", align 1
@.str.757 = private unnamed_addr constant [30 x i8] c"generated column loop on \22%s\22\00", align 1
@.str.758 = private unnamed_addr constant [26 x i8] c"misuse of aggregate: %s()\00", align 1
@.str.759 = private unnamed_addr constant [23 x i8] c"unknown function: %s()\00", align 1
@.str.760 = private unnamed_addr constant [30 x i8] c"%d columns assigned %d values\00", align 1
@.str.761 = private unnamed_addr constant [50 x i8] c"RAISE() may only be used within a trigger-program\00", align 1
@.str.762 = private unnamed_addr constant [44 x i8] c"sub-select returns %d columns - expected %d\00", align 1
@.str.763 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@sqlite3LogEst.a = internal unnamed_addr constant [8 x i16] [i16 0, i16 2, i16 3, i16 5, i16 6, i16 7, i16 8, i16 9], align 16
@.str.764 = private unnamed_addr constant [9 x i8] c":memory:\00", align 1
@.str.767 = private unnamed_addr constant [7 x i8] c"nolock\00", align 1
@.str.768 = private unnamed_addr constant [10 x i8] c"immutable\00", align 1
@.str.769 = private unnamed_addr constant [6 x i8] c"%s.%z\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"access to %z is prohibited\00", align 1
@.str.771 = private unnamed_addr constant [13 x i8] c"no such view\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"no such table\00", align 1
@.str.773 = private unnamed_addr constant [30 x i8] c"view %s is circularly defined\00", align 1
@.str.774 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.775 = private unnamed_addr constant [50 x i8] c"cannot create a TEMP index on non-TEMP table \22%s\22\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"table %s may not be indexed\00", align 1
@.str.777 = private unnamed_addr constant [25 x i8] c"views may not be indexed\00", align 1
@.str.778 = private unnamed_addr constant [34 x i8] c"there is already a table named %s\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"index %s already exists\00", align 1
@.str.780 = private unnamed_addr constant [23 x i8] c"sqlite_autoindex_%s_%d\00", align 1
@.str.781 = private unnamed_addr constant [61 x i8] c"expressions prohibited in PRIMARY KEY and UNIQUE constraints\00", align 1
@.str.782 = private unnamed_addr constant [42 x i8] c"conflicting ON CONFLICT clauses specified\00", align 1
@.str.783 = private unnamed_addr constant [20 x i8] c"CREATE%s INDEX %.*s\00", align 1
@.str.784 = private unnamed_addr constant [8 x i8] c" UNIQUE\00", align 1
@.str.785 = private unnamed_addr constant [48 x i8] c"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\00", align 1
@.str.786 = private unnamed_addr constant [27 x i8] c"name='%q' AND type='index'\00", align 1
@.str.787 = private unnamed_addr constant [28 x i8] c"unsupported use of NULLS %s\00", align 1
@.str.788 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.789 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"corrupt database\00", align 1
@.str.791 = private unnamed_addr constant [20 x i8] c"unknown database %T\00", align 1
@.str.792 = private unnamed_addr constant [46 x i8] c"%s %T cannot reference objects in database %s\00", align 1
@.str.793 = private unnamed_addr constant [24 x i8] c"%s cannot use variables\00", align 1
@.str.794 = private unnamed_addr constant [42 x i8] c"object name reserved for internal use: %s\00", align 1
@.str.795 = private unnamed_addr constant [70 x i8] c"unable to open a temporary database file for storing temporary tables\00", align 1
@.str.796 = private unnamed_addr constant [11 x i8] c"index '%q'\00", align 1
@.str.797 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.798 = private unnamed_addr constant [31 x i8] c"no such collation sequence: %s\00", align 1
@.str.799 = private unnamed_addr constant [45 x i8] c"foreign key mismatch - \22%w\22 referencing \22%w\22\00", align 1
@.str.800 = private unnamed_addr constant [9 x i8] c"%s.rowid\00", align 1
@.str.801 = private unnamed_addr constant [9 x i8] c"unopened\00", align 1
@.str.802 = private unnamed_addr constant [6 x i8] c"dylib\00", align 1
@.str.803 = private unnamed_addr constant [23 x i8] c"sqlite3_extension_init\00", align 1
@.str.804 = private unnamed_addr constant [35 x i8] c"unable to open shared library [%s]\00", align 1
@.str.806 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.807 = private unnamed_addr constant [6 x i8] c"_init\00", align 1
@.str.808 = private unnamed_addr constant [43 x i8] c"no entry point [%s] in shared library [%s]\00", align 1
@sqlite3Apis = external dso_local constant %struct.sqlite3_api_routines, align 8
@.str.809 = private unnamed_addr constant [32 x i8] c"error during initialization: %s\00", align 1
@sqlite3LogEstAdd.x = internal unnamed_addr constant [32 x i8] c"\0A\0A\09\09\08\08\07\07\07\06\06\06\05\05\05\04\04\04\04\03\03\03\03\03\03\02\02\02\02\02\02\02", align 16
@.str.810 = private unnamed_addr constant [46 x i8] c"all VALUES must have the same number of terms\00", align 1
@.str.811 = private unnamed_addr constant [82 x i8] c"SELECTs to the left and right of %s do not have the same number of result columns\00", align 1
@.str.812 = private unnamed_addr constant [36 x i8] c"too many FROM clause terms, max: %d\00", align 1
@.str.813 = private unnamed_addr constant [36 x i8] c"a JOIN clause is required before %s\00", align 1
@.str.814 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.815 = private unnamed_addr constant [6 x i8] c"USING\00", align 1
@.str.816 = private unnamed_addr constant [8 x i8] c"%.*z:%u\00", align 1
@.str.817 = private unnamed_addr constant [12 x i8] c"subquery_%u\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"no such index: %s\00", align 1
@.str.819 = private unnamed_addr constant [40 x i8] c"expected %d columns for '%s' but got %d\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"CO-ROUTINE %u\00", align 1
@.str.821 = private unnamed_addr constant [15 x i8] c"MATERIALIZE %u\00", align 1
@.str.822 = private unnamed_addr constant [9 x i8] c"DISTINCT\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"GROUP BY\00", align 1
@.str.824 = private unnamed_addr constant [23 x i8] c"RIGHT PART OF ORDER BY\00", align 1
@.str.825 = private unnamed_addr constant [41 x i8] c"cannot INSERT into generated column \22%s\22\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"table %S has no column named %s\00", align 1
@.str.827 = private unnamed_addr constant [52 x i8] c"table %S has %d columns but %d values were supplied\00", align 1
@.str.828 = private unnamed_addr constant [25 x i8] c"%d values for %d columns\00", align 1
@.str.829 = private unnamed_addr constant [21 x i8] c"cannot UPSERT a view\00", align 1
@.str.830 = private unnamed_addr constant [14 x i8] c"rows inserted\00", align 1
@.str.831 = private unnamed_addr constant [29 x i8] c"table %s may not be modified\00", align 1
@.str.832 = private unnamed_addr constant [38 x i8] c"cannot modify %s because it is a view\00", align 1
@.str.833 = private unnamed_addr constant [71 x i8] c"ON CONFLICT clause does not match any PRIMARY KEY or UNIQUE constraint\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"rows deleted\00", align 1
@.str.835 = private unnamed_addr constant [36 x i8] c"cannot UPDATE generated column \22%s\22\00", align 1
@.str.836 = private unnamed_addr constant [19 x i8] c"no such column: %s\00", align 1
@.str.837 = private unnamed_addr constant [13 x i8] c"rows updated\00", align 1
@.str.838 = private unnamed_addr constant [47 x i8] c"USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR\00", align 1
@.str.839 = private unnamed_addr constant [31 x i8] c"USING INDEX %s FOR IN-OPERATOR\00", align 1
@.str.840 = private unnamed_addr constant [23 x i8] c"REUSE LIST SUBQUERY %d\00", align 1
@.str.841 = private unnamed_addr constant [19 x i8] c"%sLIST SUBQUERY %d\00", align 1
@.str.842 = private unnamed_addr constant [28 x i8] c"at most %d tables in a join\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"SCAN CONSTANT ROW\00", align 1
@.str.844 = private unnamed_addr constant [36 x i8] c"too many arguments on %s() - max %d\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1
@.str.846 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c" SUBQUERY %u\00", align 1
@.str.848 = private unnamed_addr constant [10 x i8] c" TABLE %s\00", align 1
@.str.849 = private unnamed_addr constant [7 x i8] c" AS %s\00", align 1
@.str.850 = private unnamed_addr constant [12 x i8] c"PRIMARY KEY\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"AUTOMATIC PARTIAL COVERING INDEX\00", align 1
@.str.852 = private unnamed_addr constant [25 x i8] c"AUTOMATIC COVERING INDEX\00", align 1
@.str.853 = private unnamed_addr constant [18 x i8] c"COVERING INDEX %s\00", align 1
@.str.854 = private unnamed_addr constant [9 x i8] c"INDEX %s\00", align 1
@.str.855 = private unnamed_addr constant [8 x i8] c" USING \00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.857 = private unnamed_addr constant [14 x i8] c">? AND rowid<\00", align 1
@.str.858 = private unnamed_addr constant [38 x i8] c" USING INTEGER PRIMARY KEY (rowid%s?)\00", align 1
@__const.sqlite3WhereCodeOneLoopStart.aMoveOp = private unnamed_addr constant [4 x i8] c"\19\17\16\18", align 1
@sqlite3WhereCodeOneLoopStart.aStartOp = internal unnamed_addr constant [8 x i8] c"\00\00%!\19\16\18\17", align 1
@sqlite3WhereCodeOneLoopStart.aEndOp = internal unnamed_addr constant [4 x i8] c")'&(", align 1
@.str.859 = private unnamed_addr constant [15 x i8] c"MULTI-INDEX OR\00", align 1
@.str.860 = private unnamed_addr constant [9 x i8] c"INDEX %d\00", align 1
@sqlite3WhereCodeOneLoopStart.aStep = internal unnamed_addr constant [2 x i8] c"\05\04", align 1
@sqlite3WhereCodeOneLoopStart.aStart = internal unnamed_addr constant [2 x i8] c"%!", align 1
@.str.861 = private unnamed_addr constant [71 x i8] c"RANGE with offset PRECEDING/FOLLOWING requires one ORDER BY expression\00", align 1
@.str.862 = private unnamed_addr constant [63 x i8] c"FILTER clause may only be used with aggregate window functions\00", align 1
@__const.sqlite3WindowUpdate.aUp = private unnamed_addr constant [8 x %struct.WindowUpdate] [%struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @row_numberName, i32 0, i32 0), i32 76, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @dense_rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @percent_rankName, i32 0, i32 0), i32 92, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @cume_distName, i32 0, i32 0), i32 92, i32 86, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ntileName, i32 0, i32 0), i32 76, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @leadName, i32 0, i32 0), i32 76, i32 90, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @lagName, i32 0, i32 0), i32 76, i32 90, i32 85 }], align 16
@.str.863 = private unnamed_addr constant [9 x i8] c"ROLLBACK\00", align 1
@.str.864 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.865 = private unnamed_addr constant [8 x i8] c"RELEASE\00", align 1
@.str.866 = private unnamed_addr constant [41 x i8] c"temporary table name must be unqualified\00", align 1
@sqlite3StartTable.aCode = internal unnamed_addr constant [4 x i8] c"\02\04\08\06", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"table %T already exists\00", align 1
@.str.868 = private unnamed_addr constant [35 x i8] c"there is already an index named %s\00", align 1
@.str.869 = private unnamed_addr constant [16 x i8] c"sqlite_sequence\00", align 1
@sqlite3StartTable.nullRow = internal constant [6 x i8] c"\06\00\00\00\00\00", align 1
@.str.870 = private unnamed_addr constant [50 x i8] c"AUTOINCREMENT not allowed on WITHOUT ROWID tables\00", align 1
@.str.871 = private unnamed_addr constant [32 x i8] c"PRIMARY KEY missing on table %s\00", align 1
@.str.872 = private unnamed_addr constant [44 x i8] c"must have at least one non-generated column\00", align 1
@.str.873 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.874 = private unnamed_addr constant [5 x i8] c"VIEW\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"CREATE %s %.*s\00", align 1
@.str.876 = private unnamed_addr constant [87 x i8] c"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\00", align 1
@.str.877 = private unnamed_addr constant [42 x i8] c"CREATE TABLE %Q.sqlite_sequence(name,seq)\00", align 1
@.str.878 = private unnamed_addr constant [34 x i8] c"tbl_name='%q' AND type!='trigger'\00", align 1
@.str.879 = private unnamed_addr constant [23 x i8] c"too many columns on %s\00", align 1
@.str.880 = private unnamed_addr constant [26 x i8] c"duplicate column name: %s\00", align 1
@.str.881 = private unnamed_addr constant [45 x i8] c"default value of column [%s] is not constant\00", align 1
@.str.882 = private unnamed_addr constant [41 x i8] c"cannot use DEFAULT on a generated column\00", align 1
@.str.883 = private unnamed_addr constant [41 x i8] c"table \22%s\22 has more than one primary key\00", align 1
@.str.884 = private unnamed_addr constant [56 x i8] c"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\00", align 1
@.str.885 = private unnamed_addr constant [63 x i8] c"foreign key on %s should reference only one column of table %T\00", align 1
@.str.886 = private unnamed_addr constant [94 x i8] c"number of columns in foreign key does not match the number of columns in the referenced table\00", align 1
@.str.887 = private unnamed_addr constant [46 x i8] c"unknown column \22%s\22 in foreign key definition\00", align 1
@.str.890 = private unnamed_addr constant [31 x i8] c"error in generated column \22%s\22\00", align 1
@.str.891 = private unnamed_addr constant [28 x i8] c"table %s may not be dropped\00", align 1
@.str.892 = private unnamed_addr constant [34 x i8] c"use DROP TABLE to delete table %s\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"use DROP VIEW to delete view %s\00", align 1
@.str.894 = private unnamed_addr constant [14 x i8] c"sqlite_stat%d\00", align 1
@.str.895 = private unnamed_addr constant [45 x i8] c"DELETE FROM %Q.sqlite_sequence WHERE name=%Q\00", align 1
@.str.896 = private unnamed_addr constant [56 x i8] c"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\00", align 1
@.str.897 = private unnamed_addr constant [51 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"parameters are not allowed in views\00", align 1
@.str.899 = private unnamed_addr constant [34 x i8] c"too many terms in compound SELECT\00", align 1
@sqlite3JoinType.zKeyText = internal unnamed_addr constant [34 x i8] c"naturaleftouterightfullinnercross\00", align 16
@sqlite3JoinType.aKeyword = internal unnamed_addr constant [7 x %struct.anon.23] [%struct.anon.23 { i8 0, i8 7, i8 4 }, %struct.anon.23 { i8 6, i8 4, i8 40 }, %struct.anon.23 { i8 10, i8 5, i8 32 }, %struct.anon.23 { i8 14, i8 5, i8 48 }, %struct.anon.23 { i8 19, i8 4, i8 56 }, %struct.anon.23 { i8 23, i8 5, i8 1 }, %struct.anon.23 { i8 28, i8 5, i8 3 }], align 16
@.str.900 = private unnamed_addr constant [44 x i8] c"unknown or unsupported join type: %T %T%s%T\00", align 1
@.str.901 = private unnamed_addr constant [55 x i8] c"RIGHT and FULL OUTER JOINs are not currently supported\00", align 1
@.str.902 = private unnamed_addr constant [23 x i8] c"too many columns in %s\00", align 1
@.str.903 = private unnamed_addr constant [43 x i8] c"variable number must be between ?1 and ?%d\00", align 1
@.str.904 = private unnamed_addr constant [23 x i8] c"too many SQL variables\00", align 1
@.str.905 = private unnamed_addr constant [34 x i8] c"too many arguments on function %T\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"DISTINCT is not supported for window functions\00", align 1
@.str.907 = private unnamed_addr constant [38 x i8] c"syntax error after column name \22%.*s\22\00", align 1
@.str.908 = private unnamed_addr constant [18 x i8] c"no such index: %S\00", align 1
@.str.909 = private unnamed_addr constant [73 x i8] c"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\00", align 1
@.str.910 = private unnamed_addr constant [49 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='index'\00", align 1
@.str.911 = private unnamed_addr constant [4 x i8] c"-%T\00", align 1
@.str.912 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.914 = private unnamed_addr constant [25 x i8] c"not a writable directory\00", align 1
@.str.915 = private unnamed_addr constant [30 x i8] c"failed to set lock proxy file\00", align 1
@.str.916 = private unnamed_addr constant [53 x i8] c"Safety level may not be changed inside a transaction\00", align 1
@.str.917 = private unnamed_addr constant [8 x i8] c"issisii\00", align 1
@.str.918 = private unnamed_addr constant [7 x i8] c"issisi\00", align 1
@.str.919 = private unnamed_addr constant [5 x i8] c"iisX\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"isiX\00", align 1
@.str.921 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.922 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@__const.sqlite3Pragma.azOrigin = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.921, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0)], align 16
@.str.923 = private unnamed_addr constant [6 x i8] c"isisi\00", align 1
@.str.924 = private unnamed_addr constant [4 x i8] c"iss\00", align 1
@.str.925 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.926 = private unnamed_addr constant [9 x i8] c"iissssss\00", align 1
@.str.927 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"siX\00", align 1
@.str.929 = private unnamed_addr constant [24 x i8] c"*** in database %s ***\0A\00", align 1
@.str.930 = private unnamed_addr constant [20 x i8] c"NULL value in %s.%s\00", align 1
@.str.931 = private unnamed_addr constant [30 x i8] c"CHECK constraint failed in %s\00", align 1
@.str.932 = private unnamed_addr constant [5 x i8] c"row \00", align 1
@.str.933 = private unnamed_addr constant [21 x i8] c" missing from index \00", align 1
@.str.934 = private unnamed_addr constant [27 x i8] c"non-unique entry in index \00", align 1
@.str.935 = private unnamed_addr constant [29 x i8] c"wrong # of entries in index \00", align 1
@.str.937 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@sqlite3Pragma.encnames = internal unnamed_addr constant [9 x %struct.EncName] [%struct.EncName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.938, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.939, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.941, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.942, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.943, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.944, i32 0, i32 0), i8 0 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.945, i32 0, i32 0), i8 0 }, %struct.EncName zeroinitializer], align 16
@.str.938 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.939 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"UTF-16le\00", align 1
@.str.941 = private unnamed_addr constant [9 x i8] c"UTF-16be\00", align 1
@.str.942 = private unnamed_addr constant [8 x i8] c"UTF16le\00", align 1
@.str.943 = private unnamed_addr constant [8 x i8] c"UTF16be\00", align 1
@.str.944 = private unnamed_addr constant [7 x i8] c"UTF-16\00", align 1
@.str.945 = private unnamed_addr constant [6 x i8] c"UTF16\00", align 1
@.str.946 = private unnamed_addr constant [25 x i8] c"unsupported encoding: %s\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.948 = private unnamed_addr constant [18 x i8] c"ANALYZE \22%w\22.\22%w\22\00", align 1
@.str.949 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.950 = private unnamed_addr constant [64 x i8] c"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\00", align 1
@.str.951 = private unnamed_addr constant [29 x i8] c"type='trigger' AND name='%q'\00", align 1
@.str.952 = private unnamed_addr constant [46 x i8] c"temporary trigger may not have qualified name\00", align 1
@.str.953 = private unnamed_addr constant [26 x i8] c"trigger %T already exists\00", align 1
@.str.954 = private unnamed_addr constant [38 x i8] c"cannot create trigger on system table\00", align 1
@.str.955 = private unnamed_addr constant [37 x i8] c"cannot create %s trigger on view: %S\00", align 1
@.str.956 = private unnamed_addr constant [7 x i8] c"BEFORE\00", align 1
@.str.957 = private unnamed_addr constant [6 x i8] c"AFTER\00", align 1
@.str.958 = private unnamed_addr constant [46 x i8] c"cannot create INSTEAD OF trigger on table: %S\00", align 1
@.str.959 = private unnamed_addr constant [20 x i8] c"no such trigger: %S\00", align 1
@sqlite3Attach.attach_func = external dso_local constant %struct.FuncDef, align 8
@.str.960 = private unnamed_addr constant [14 x i8] c"sqlite_attach\00", align 1
@sqlite3Detach.detach_func = external dso_local constant %struct.FuncDef, align 8
@.str.961 = private unnamed_addr constant [14 x i8] c"sqlite_detach\00", align 1
@.str.962 = private unnamed_addr constant [46 x i8] c"unable to identify the object to be reindexed\00", align 1
@.str.963 = private unnamed_addr constant [59 x i8] c"there is already another table or index with this name: %s\00", align 1
@.str.964 = private unnamed_addr constant [27 x i8] c"view %s may not be altered\00", align 1
@.str.965 = private unnamed_addr constant [173 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\00", align 1
@.str.966 = private unnamed_addr constant [294 x i8] c"UPDATE %Q.%s SET tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\00", align 1
@.str.967 = private unnamed_addr constant [58 x i8] c"UPDATE \22%w\22.sqlite_sequence set name = %Q WHERE name = %Q\00", align 1
@.str.968 = private unnamed_addr constant [254 x i8] c"UPDATE sqlite_temp_master SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, 1), tbl_name = CASE WHEN tbl_name=%Q COLLATE nocase AND           sqlite_rename_test(%Q, sql, type, name, 1) THEN %Q ELSE tbl_name END WHERE type IN ('view', 'trigger')\00", align 1
@.str.969 = private unnamed_addr constant [32 x i8] c"Cannot add a PRIMARY KEY column\00", align 1
@.str.970 = private unnamed_addr constant [27 x i8] c"Cannot add a UNIQUE column\00", align 1
@.str.971 = private unnamed_addr constant [59 x i8] c"Cannot add a REFERENCES column with non-NULL default value\00", align 1
@.str.972 = private unnamed_addr constant [53 x i8] c"Cannot add a NOT NULL column with default value NULL\00", align 1
@.str.973 = private unnamed_addr constant [46 x i8] c"Cannot add a column with non-constant default\00", align 1
@.str.974 = private unnamed_addr constant [27 x i8] c"cannot add a STORED column\00", align 1
@.str.975 = private unnamed_addr constant [109 x i8] c"UPDATE \22%w\22.%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\00", align 1
@.str.976 = private unnamed_addr constant [30 x i8] c"Cannot add a column to a view\00", align 1
@.str.977 = private unnamed_addr constant [19 x i8] c"sqlite_altertab_%s\00", align 1
@.str.978 = private unnamed_addr constant [207 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'  AND (type != 'index' OR tbl_name = %Q) AND sql NOT LIKE 'create virtual%%'\00", align 1
@.str.979 = private unnamed_addr constant [120 x i8] c"UPDATE temp.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, 1) WHERE type IN ('trigger', 'view')\00", align 1
@.str.980 = private unnamed_addr constant [30 x i8] c"duplicate WITH table name: %s\00", align 1
@.str.981 = private unnamed_addr constant [17 x i8] c"PARTITION clause\00", align 1
@.str.982 = private unnamed_addr constant [16 x i8] c"ORDER BY clause\00", align 1
@.str.983 = private unnamed_addr constant [20 x i8] c"frame specification\00", align 1
@.str.984 = private unnamed_addr constant [33 x i8] c"cannot override %s of window: %s\00", align 1
@.str.985 = private unnamed_addr constant [32 x i8] c"unsupported frame specification\00", align 1
@.str.986 = private unnamed_addr constant [27 x i8] c"unrecognized token: \22%.*s\22\00", align 1
@.str.987 = private unnamed_addr constant [11 x i8] c"%s in \22%s\22\00", align 1
@sqlite3RegisterBuiltinFunctions.aBuiltinFunc = external dso_local global [62 x %struct.FuncDef], align 16
@.str.988 = private unnamed_addr constant [20 x i8] c"implies_nonnull_row\00", align 1
@.str.989 = private unnamed_addr constant [13 x i8] c"expr_compare\00", align 1
@.str.990 = private unnamed_addr constant [18 x i8] c"expr_implies_expr\00", align 1
@.str.991 = private unnamed_addr constant [15 x i8] c"load_extension\00", align 1
@.str.992 = private unnamed_addr constant [26 x i8] c"sqlite_compileoption_used\00", align 1
@.str.993 = private unnamed_addr constant [25 x i8] c"sqlite_compileoption_get\00", align 1
@.str.994 = private unnamed_addr constant [9 x i8] c"unlikely\00", align 1
@.str.995 = private unnamed_addr constant [11 x i8] c"likelihood\00", align 1
@.str.996 = private unnamed_addr constant [7 x i8] c"likely\00", align 1
@.str.997 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.998 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.1000 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.1001 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1002 = private unnamed_addr constant [6 x i8] c"instr\00", align 1
@.str.1003 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1004 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.1006 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.1007 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.1008 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.1009 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.1010 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.1011 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.1012 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.1013 = private unnamed_addr constant [11 x i8] c"randomblob\00", align 1
@.str.1014 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.1015 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.1016 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.1017 = private unnamed_addr constant [11 x i8] c"sqlite_log\00", align 1
@.str.1018 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.1019 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.1020 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.1021 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.1022 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.1023 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.1024 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.1025 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.1026 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.1027 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.1028 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.1029 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.1031 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@sqlite3AlterFunctions.aAlterTableFuncs = external dso_local global [3 x %struct.FuncDef], align 16
@.str.1032 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.1033 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.1034 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@sqlite3WindowFunctions.aWindowFuncs = external dso_local global [15 x %struct.FuncDef], align 16
@sqlite3RegisterDateTimeFunctions_aDateTimeFuncs = external dso_local global [8 x %struct.FuncDef], align 16
@.str.1035 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1038 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.1039 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1040 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.1041 = private unnamed_addr constant [18 x i8] c"current_timestamp\00", align 1
@.str.1042 = private unnamed_addr constant [13 x i8] c"current_date\00", align 1
@sqlite3MemSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_mem_methods, align 8
@.str.1043 = private unnamed_addr constant [38 x i8] c"failed to allocate %u bytes of memory\00", align 1
@.str.1044 = private unnamed_addr constant [36 x i8] c"failed memory resize %u to %u bytes\00", align 1
@.str.1045 = private unnamed_addr constant [8 x i8] c"hw.ncpu\00", align 1
@.str.1046 = private unnamed_addr constant [12 x i8] c"Sqlite_Heap\00", align 1
@sqlite3PCacheSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_pcache_methods2, align 8
@.str.1047 = private unnamed_addr constant [68 x i8] c"unable to close due to unfinalized statements or unfinished backups\00", align 1
@sqlite3ErrStr.aMsg = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1048, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1049, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1050, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1051, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1052, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1054, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1055, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1056, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1057, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1058, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1059, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1060, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1061, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1062, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1063, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1064, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1065, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1066, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1068, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1069, i32 0, i32 0)], align 16
@.str.1048 = private unnamed_addr constant [13 x i8] c"not an error\00", align 1
@.str.1049 = private unnamed_addr constant [16 x i8] c"SQL logic error\00", align 1
@.str.1050 = private unnamed_addr constant [25 x i8] c"access permission denied\00", align 1
@.str.1051 = private unnamed_addr constant [14 x i8] c"query aborted\00", align 1
@.str.1052 = private unnamed_addr constant [19 x i8] c"database is locked\00", align 1
@.str.1053 = private unnamed_addr constant [25 x i8] c"database table is locked\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"attempt to write a readonly database\00", align 1
@.str.1055 = private unnamed_addr constant [12 x i8] c"interrupted\00", align 1
@.str.1056 = private unnamed_addr constant [15 x i8] c"disk I/O error\00", align 1
@.str.1057 = private unnamed_addr constant [33 x i8] c"database disk image is malformed\00", align 1
@.str.1058 = private unnamed_addr constant [18 x i8] c"unknown operation\00", align 1
@.str.1059 = private unnamed_addr constant [25 x i8] c"database or disk is full\00", align 1
@.str.1060 = private unnamed_addr constant [29 x i8] c"unable to open database file\00", align 1
@.str.1061 = private unnamed_addr constant [17 x i8] c"locking protocol\00", align 1
@.str.1062 = private unnamed_addr constant [18 x i8] c"constraint failed\00", align 1
@.str.1063 = private unnamed_addr constant [18 x i8] c"datatype mismatch\00", align 1
@.str.1064 = private unnamed_addr constant [34 x i8] c"bad parameter or other API misuse\00", align 1
@.str.1065 = private unnamed_addr constant [21 x i8] c"authorization denied\00", align 1
@.str.1066 = private unnamed_addr constant [26 x i8] c"column index out of range\00", align 1
@.str.1067 = private unnamed_addr constant [23 x i8] c"file is not a database\00", align 1
@.str.1068 = private unnamed_addr constant [21 x i8] c"notification message\00", align 1
@.str.1069 = private unnamed_addr constant [16 x i8] c"warning message\00", align 1
@.str.1070 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1071 = private unnamed_addr constant [22 x i8] c"abort due to ROLLBACK\00", align 1
@.str.1072 = private unnamed_addr constant [22 x i8] c"another row available\00", align 1
@.str.1073 = private unnamed_addr constant [23 x i8] c"no more rows available\00", align 1
@.str.1074 = private unnamed_addr constant [63 x i8] c"unable to delete/modify user-function due to active statements\00", align 1
@.str.1075 = private unnamed_addr constant [51 x i8] c"unable to use function %s in the requested context\00", align 1
@.str.1076 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.1077 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.1078 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"invalid uri authority: %.*s\00", align 1
@.str.1080 = private unnamed_addr constant [4 x i8] c"vfs\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@sqlite3ParseUri.aCacheMode = internal unnamed_addr constant [3 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1082, i32 0, i32 0), i32 131072 }, %struct.OpenMode { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1083, i32 0, i32 0), i32 262144 }, %struct.OpenMode zeroinitializer], align 16
@.str.1082 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.1083 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.1084 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@sqlite3ParseUri.aOpenMode = internal unnamed_addr constant [5 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1085, i32 0, i32 0), i32 1 }, %struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1086, i32 0, i32 0), i32 2 }, %struct.OpenMode { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1087, i32 0, i32 0), i32 6 }, %struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 128 }, %struct.OpenMode zeroinitializer], align 16
@.str.1085 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.1086 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.1087 = private unnamed_addr constant [4 x i8] c"rwc\00", align 1
@.str.1088 = private unnamed_addr constant [20 x i8] c"no such %s mode: %s\00", align 1
@.str.1089 = private unnamed_addr constant [24 x i8] c"%s mode not allowed: %s\00", align 1
@.str.1090 = private unnamed_addr constant [16 x i8] c"no such vfs: %s\00", align 1
@.str.1091 = private unnamed_addr constant [6 x i8] c"MATCH\00", align 1
@.str.1092 = private unnamed_addr constant [39 x i8] c"automatic extension loading failed: %s\00", align 1
@.str.1093 = private unnamed_addr constant [20 x i8] c"database corruption\00", align 1
@.str.1094 = private unnamed_addr constant [25 x i8] c"%s at line %d of [%.10s]\00", align 1
@.str.1095 = private unnamed_addr constant [7 x i8] c"misuse\00", align 1
@.str.1096 = private unnamed_addr constant [17 x i8] c"cannot open file\00", align 1
@sqlite3SavedPrng = internal unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@sqlite3azCompileOpt = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1097, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1098, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1099, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1100, i32 0, i32 0)], align 16
@.str.1097 = private unnamed_addr constant [22 x i8] c"COMPILER=clang-11.0.0\00", align 1
@.str.1098 = private unnamed_addr constant [11 x i8] c"OMIT_TRACE\00", align 1
@.str.1099 = private unnamed_addr constant [18 x i8] c"OMIT_VIRTUALTABLE\00", align 1
@.str.1100 = private unnamed_addr constant [13 x i8] c"THREADSAFE=1\00", align 1
@switch.table.multiSelectOrderBy = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)], align 8
@switch.table.sqlite3Pragma.1201 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i64 0, i64 0)], align 8

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @my_assert(i1, i64, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @dbg() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRealify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @printTypeOf(i8*, i32, %struct.Vdbe*, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeIntegerAffinity(%struct.sqlite3_value*) #0

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3AtoF(i8* readonly %z, double* nocapture %pResult, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  store double 0.000000e+00, double* %pResult, align 8, !tbaa !6
  %cmp = icmp eq i32 %length, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i8 %enc to i32
  %cmp1 = icmp eq i8 %enc, 1
  br i1 %cmp1, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %and = and i32 %length, -2
  %sub = sub nsw i32 3, %conv
  %cmp5540 = icmp slt i32 %sub, %and
  br i1 %cmp5540, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %and to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %i.0541 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %z, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp8 = icmp eq i8 %2, 0
  br i1 %cmp8, label %for.inc, label %for.end.loopexit.split.loop.exit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add i64 %indvars.iv, 2
  %add = add nsw i32 %i.0541, 2
  %cmp5 = icmp slt i64 %indvars.iv.next, %1
  br i1 %cmp5, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit, %for.inc, %if.else
  %i.0.lcssa563 = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit ], [ %add, %for.inc ]
  %4 = phi i32 [ 1, %if.else ], [ -100, %for.end.loopexit.split.loop.exit ], [ 1, %for.inc ]
  %xor = xor i32 %i.0.lcssa563, 1
  %and17 = and i32 %conv, 1
  %idx.ext18 = zext i32 %and17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %z, i64 %idx.ext18
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.end
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %if.end ]
  %eType.1 = phi i32 [ %4, %for.end ], [ 1, %if.end ]
  %incr.0 = phi i64 [ 2, %for.end ], [ 1, %if.end ]
  %z.addr.0 = phi i8* [ %add.ptr19, %for.end ], [ %z, %if.end ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %z, i64 %idx.ext.pn
  %cmp21538 = icmp ult i8* %z.addr.0, %zEnd.0
  br i1 %cmp21538, label %land.rhs23, label %cleanup

land.rhs23:                                       ; preds = %while.body, %if.end20
  %z.addr.1539 = phi i8* [ %add.ptr30, %while.body ], [ %z.addr.0, %if.end20 ]
  %5 = load i8, i8* %z.addr.1539, align 1, !tbaa !10
  %idxprom24 = zext i8 %5 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom24
  %6 = load i8, i8* %arrayidx25, align 1, !tbaa !10
  %7 = and i8 %6, 1
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end34, label %while.body

while.body:                                       ; preds = %land.rhs23
  %add.ptr30 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  %cmp21 = icmp ult i8* %add.ptr30, %zEnd.0
  br i1 %cmp21, label %land.rhs23, label %cleanup

if.end34:                                         ; preds = %land.rhs23
  switch i8 %5, label %if.end49 [
    i8 45, label %if.then38
    i8 43, label %if.then45
  ]

if.then38:                                        ; preds = %if.end34
  %add.ptr40 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.then45:                                        ; preds = %if.end34
  %add.ptr47 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.end49:                                         ; preds = %if.then45, %if.then38, %if.end34
  %sign.0 = phi i32 [ -1, %if.then38 ], [ 1, %if.then45 ], [ 1, %if.end34 ]
  %z.addr.2 = phi i8* [ %add.ptr40, %if.then38 ], [ %add.ptr47, %if.then45 ], [ %z.addr.1539, %if.end34 ]
  %cmp51529 = icmp ult i8* %z.addr.2, %zEnd.0
  br i1 %cmp51529, label %land.rhs53, label %if.then201

land.rhs53:                                       ; preds = %if.end85, %if.end49
  %z.addr.3533 = phi i8* [ %z.addr.5, %if.end85 ], [ %z.addr.2, %if.end49 ]
  %nDigit.0532 = phi i32 [ %inc, %if.end85 ], [ 0, %if.end49 ]
  %d.0531 = phi i32 [ %d.2, %if.end85 ], [ 0, %if.end49 ]
  %s.0530 = phi i64 [ %add64, %if.end85 ], [ 0, %if.end49 ]
  %8 = load i8, i8* %z.addr.3533, align 1, !tbaa !10
  %idxprom54 = zext i8 %8 to i64
  %9 = add nsw i64 %idxprom54, -48
  %tobool58 = icmp ult i64 %9, 10
  br i1 %tobool58, label %while.body60, label %if.end90

while.body60:                                     ; preds = %land.rhs53
  %mul = mul nsw i64 %s.0530, 10
  %conv61 = sext i8 %8 to i64
  %sub62 = add i64 %mul, -48
  %add64 = add i64 %sub62, %conv61
  %add.ptr66 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %inc = add nuw nsw i32 %nDigit.0532, 1
  %cmp67 = icmp sgt i64 %add64, 922337203685477578
  %cmp71522 = icmp ult i8* %add.ptr66, %zEnd.0
  %or.cond547 = and i1 %cmp67, %cmp71522
  br i1 %or.cond547, label %land.rhs73, label %if.end85

land.rhs73:                                       ; preds = %while.body80, %while.body60
  %z.addr.4524 = phi i8* [ %add.ptr82, %while.body80 ], [ %add.ptr66, %while.body60 ]
  %d.1523 = phi i32 [ %inc83, %while.body80 ], [ %d.0531, %while.body60 ]
  %10 = load i8, i8* %z.addr.4524, align 1, !tbaa !10
  %idxprom74 = zext i8 %10 to i64
  %11 = add nsw i64 %idxprom74, -48
  %tobool78 = icmp ult i64 %11, 10
  br i1 %tobool78, label %while.body80, label %if.end85

while.body80:                                     ; preds = %land.rhs73
  %add.ptr82 = getelementptr inbounds i8, i8* %z.addr.4524, i64 %incr.0
  %inc83 = add nsw i32 %d.1523, 1
  %cmp71 = icmp ult i8* %add.ptr82, %zEnd.0
  br i1 %cmp71, label %land.rhs73, label %if.end85

if.end85:                                         ; preds = %while.body80, %land.rhs73, %while.body60
  %d.2 = phi i32 [ %d.0531, %while.body60 ], [ %inc83, %while.body80 ], [ %d.1523, %land.rhs73 ]
  %z.addr.5 = phi i8* [ %add.ptr66, %while.body60 ], [ %add.ptr82, %while.body80 ], [ %z.addr.4524, %land.rhs73 ]
  %cmp51 = icmp ult i8* %z.addr.5, %zEnd.0
  br i1 %cmp51, label %land.rhs53, label %do_atof_calc

if.end90:                                         ; preds = %land.rhs53
  %cmp92 = icmp eq i8 %8, 46
  br i1 %cmp92, label %if.then94, label %if.end122

if.then94:                                        ; preds = %if.end90
  %inc97 = add nuw nsw i32 %eType.1, 1
  %z.addr.6508 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %cmp99509 = icmp ult i8* %z.addr.6508, %zEnd.0
  br i1 %cmp99509, label %land.rhs101, label %if.end122

land.rhs101:                                      ; preds = %if.end118, %if.then94
  %z.addr.6513 = phi i8* [ %z.addr.6, %if.end118 ], [ %z.addr.6508, %if.then94 ]
  %nDigit.1512 = phi i32 [ %nDigit.2, %if.end118 ], [ %nDigit.0532, %if.then94 ]
  %d.3511 = phi i32 [ %d.4, %if.end118 ], [ %d.0531, %if.then94 ]
  %s.1510 = phi i64 [ %s.2, %if.end118 ], [ %s.0530, %if.then94 ]
  %12 = load i8, i8* %z.addr.6513, align 1, !tbaa !10
  %idxprom102 = zext i8 %12 to i64
  %13 = add nsw i64 %idxprom102, -48
  %tobool106 = icmp ult i64 %13, 10
  br i1 %tobool106, label %while.body108, label %if.end122

while.body108:                                    ; preds = %land.rhs101
  %cmp109 = icmp slt i64 %s.1510, 922337203685477579
  br i1 %cmp109, label %if.then111, label %if.end118

if.then111:                                       ; preds = %while.body108
  %mul112 = mul nsw i64 %s.1510, 10
  %conv113 = sext i8 %12 to i64
  %sub114 = add i64 %mul112, -48
  %add116 = add i64 %sub114, %conv113
  %dec = add nsw i32 %d.3511, -1
  %inc117 = add nsw i32 %nDigit.1512, 1
  br label %if.end118

if.end118:                                        ; preds = %if.then111, %while.body108
  %s.2 = phi i64 [ %add116, %if.then111 ], [ %s.1510, %while.body108 ]
  %d.4 = phi i32 [ %dec, %if.then111 ], [ %d.3511, %while.body108 ]
  %nDigit.2 = phi i32 [ %inc117, %if.then111 ], [ %nDigit.1512, %while.body108 ]
  %z.addr.6 = getelementptr inbounds i8, i8* %z.addr.6513, i64 %incr.0
  %cmp99 = icmp ult i8* %z.addr.6, %zEnd.0
  br i1 %cmp99, label %land.rhs101, label %if.end122

if.end122:                                        ; preds = %if.end118, %land.rhs101, %if.then94, %if.end90
  %s.3 = phi i64 [ %s.0530, %if.end90 ], [ %s.0530, %if.then94 ], [ %s.2, %if.end118 ], [ %s.1510, %land.rhs101 ]
  %d.5 = phi i32 [ %d.0531, %if.end90 ], [ %d.0531, %if.then94 ], [ %d.4, %if.end118 ], [ %d.3511, %land.rhs101 ]
  %nDigit.3 = phi i32 [ %nDigit.0532, %if.end90 ], [ %nDigit.0532, %if.then94 ], [ %nDigit.2, %if.end118 ], [ %nDigit.1512, %land.rhs101 ]
  %eType.2 = phi i32 [ %eType.1, %if.end90 ], [ %inc97, %if.then94 ], [ %inc97, %land.rhs101 ], [ %inc97, %if.end118 ]
  %z.addr.7 = phi i8* [ %z.addr.3533, %if.end90 ], [ %z.addr.6508, %if.then94 ], [ %z.addr.6, %if.end118 ], [ %z.addr.6513, %land.rhs101 ]
  %cmp123 = icmp ult i8* %z.addr.7, %zEnd.0
  br i1 %cmp123, label %if.end126, label %do_atof_calc

if.end126:                                        ; preds = %if.end122
  %14 = load i8, i8* %z.addr.7, align 1, !tbaa !10
  switch i8 %14, label %if.end176 [
    i8 101, label %if.then133
    i8 69, label %if.then133
  ]

if.then133:                                       ; preds = %if.end126, %if.end126
  %add.ptr135 = getelementptr inbounds i8, i8* %z.addr.7, i64 %incr.0
  %inc136 = add nsw i32 %eType.2, 1
  %cmp137 = icmp ult i8* %add.ptr135, %zEnd.0
  br i1 %cmp137, label %if.end140, label %do_atof_calc

if.end140:                                        ; preds = %if.then133
  %15 = load i8, i8* %add.ptr135, align 1, !tbaa !10
  switch i8 %15, label %if.end155 [
    i8 45, label %if.then144
    i8 43, label %if.then151
  ]

if.then144:                                       ; preds = %if.end140
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.then151:                                       ; preds = %if.end140
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.end155:                                        ; preds = %if.then151, %if.then144, %if.end140
  %esign.0 = phi i32 [ -1, %if.then144 ], [ 1, %if.then151 ], [ 1, %if.end140 ]
  %z.addr.8 = phi i8* [ %add.ptr146, %if.then144 ], [ %add.ptr153, %if.then151 ], [ %add.ptr135, %if.end140 ]
  %cmp157498 = icmp ult i8* %z.addr.8, %zEnd.0
  br i1 %cmp157498, label %land.rhs159.preheader, label %if.end176

land.rhs159.preheader:                            ; preds = %if.end155
  %16 = load i8, i8* %z.addr.8, align 1, !tbaa !10
  %idxprom160622 = zext i8 %16 to i64
  %17 = add nsw i64 %idxprom160622, -48
  %tobool164623 = icmp ult i64 %17, 10
  br i1 %tobool164623, label %while.body166, label %if.end176

land.rhs159:                                      ; preds = %while.body166
  %18 = load i8, i8* %add.ptr174, align 1, !tbaa !10
  %idxprom160 = zext i8 %18 to i64
  %19 = add nsw i64 %idxprom160, -48
  %tobool164 = icmp ult i64 %19, 10
  br i1 %tobool164, label %while.body166, label %if.end176

while.body166:                                    ; preds = %land.rhs159, %land.rhs159.preheader
  %20 = phi i8 [ %18, %land.rhs159 ], [ %16, %land.rhs159.preheader ]
  %e.0499625 = phi i32 [ %cond, %land.rhs159 ], [ 0, %land.rhs159.preheader ]
  %z.addr.9501624 = phi i8* [ %add.ptr174, %land.rhs159 ], [ %z.addr.8, %land.rhs159.preheader ]
  %cmp167 = icmp slt i32 %e.0499625, 10000
  %mul169 = mul nsw i32 %e.0499625, 10
  %conv170 = sext i8 %20 to i32
  %sub171 = add i32 %mul169, -48
  %add172 = add i32 %sub171, %conv170
  %cond = select i1 %cmp167, i32 %add172, i32 10000
  %add.ptr174 = getelementptr inbounds i8, i8* %z.addr.9501624, i64 %incr.0
  %cmp157 = icmp ult i8* %add.ptr174, %zEnd.0
  br i1 %cmp157, label %land.rhs159, label %if.end176

if.end176:                                        ; preds = %while.body166, %land.rhs159, %land.rhs159.preheader, %if.end155, %if.end126
  %esign.1 = phi i32 [ 1, %if.end126 ], [ %esign.0, %if.end155 ], [ %esign.0, %land.rhs159.preheader ], [ %esign.0, %while.body166 ], [ %esign.0, %land.rhs159 ]
  %e.1 = phi i32 [ 0, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ %cond, %while.body166 ], [ %cond, %land.rhs159 ]
  %eValid.1 = phi i32 [ 1, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ 1, %while.body166 ], [ 1, %land.rhs159 ]
  %eType.3 = phi i32 [ %eType.2, %if.end126 ], [ %inc136, %if.end155 ], [ %inc136, %land.rhs159.preheader ], [ %inc136, %while.body166 ], [ %inc136, %land.rhs159 ]
  %z.addr.10 = phi i8* [ %z.addr.7, %if.end126 ], [ %z.addr.8, %if.end155 ], [ %z.addr.8, %land.rhs159.preheader ], [ %add.ptr174, %while.body166 ], [ %add.ptr174, %land.rhs159 ]
  %cmp178494 = icmp ult i8* %z.addr.10, %zEnd.0
  br i1 %cmp178494, label %land.rhs180, label %do_atof_calc

land.rhs180:                                      ; preds = %while.body187, %if.end176
  %z.addr.11495 = phi i8* [ %add.ptr189, %while.body187 ], [ %z.addr.10, %if.end176 ]
  %21 = load i8, i8* %z.addr.11495, align 1, !tbaa !10
  %idxprom181 = zext i8 %21 to i64
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !10
  %23 = and i8 %22, 1
  %tobool185 = icmp eq i8 %23, 0
  br i1 %tobool185, label %do_atof_calc, label %while.body187

while.body187:                                    ; preds = %land.rhs180
  %add.ptr189 = getelementptr inbounds i8, i8* %z.addr.11495, i64 %incr.0
  %cmp178 = icmp ult i8* %add.ptr189, %zEnd.0
  br i1 %cmp178, label %land.rhs180, label %do_atof_calc

do_atof_calc:                                     ; preds = %while.body187, %land.rhs180, %if.end176, %if.then133, %if.end122, %if.end85
  %s.4 = phi i64 [ %s.3, %if.end122 ], [ %s.3, %if.then133 ], [ %s.3, %if.end176 ], [ %s.3, %land.rhs180 ], [ %s.3, %while.body187 ], [ %add64, %if.end85 ]
  %d.6 = phi i32 [ %d.5, %if.end122 ], [ %d.5, %if.then133 ], [ %d.5, %if.end176 ], [ %d.5, %land.rhs180 ], [ %d.5, %while.body187 ], [ %d.2, %if.end85 ]
  %esign.2 = phi i32 [ 1, %if.end122 ], [ 1, %if.then133 ], [ %esign.1, %if.end176 ], [ %esign.1, %land.rhs180 ], [ %esign.1, %while.body187 ], [ 1, %if.end85 ]
  %e.2 = phi i32 [ 0, %if.end122 ], [ 0, %if.then133 ], [ %e.1, %if.end176 ], [ %e.1, %land.rhs180 ], [ %e.1, %while.body187 ], [ 0, %if.end85 ]
  %eValid.2 = phi i32 [ 1, %if.end122 ], [ 0, %if.then133 ], [ %eValid.1, %if.end176 ], [ %eValid.1, %land.rhs180 ], [ %eValid.1, %while.body187 ], [ 1, %if.end85 ]
  %nDigit.4 = phi i32 [ %nDigit.3, %if.end122 ], [ %nDigit.3, %if.then133 ], [ %nDigit.3, %if.end176 ], [ %nDigit.3, %land.rhs180 ], [ %nDigit.3, %while.body187 ], [ %inc, %if.end85 ]
  %eType.4 = phi i32 [ %eType.2, %if.end122 ], [ %inc136, %if.then133 ], [ %eType.3, %if.end176 ], [ %eType.3, %land.rhs180 ], [ %eType.3, %while.body187 ], [ %eType.1, %if.end85 ]
  %z.addr.12 = phi i8* [ %z.addr.7, %if.end122 ], [ %add.ptr135, %if.then133 ], [ %z.addr.10, %if.end176 ], [ %add.ptr189, %while.body187 ], [ %z.addr.11495, %land.rhs180 ], [ %z.addr.5, %if.end85 ]
  %mul191 = mul nsw i32 %e.2, %esign.2
  %add192 = add nsw i32 %mul191, %d.6
  %cmp193 = icmp slt i32 %add192, 0
  %mul196 = sub nsw i32 0, %add192
  %e.3 = select i1 %cmp193, i32 %mul196, i32 %add192
  %cmp199 = icmp eq i64 %s.4, 0
  br i1 %cmp199, label %if.then201, label %while.cond206.preheader

while.cond206.preheader:                          ; preds = %do_atof_calc
  %cmp207489 = icmp sgt i32 %e.3, 0
  br i1 %cmp207489, label %while.body209.lr.ph, label %while.end225

while.body209.lr.ph:                              ; preds = %while.cond206.preheader
  br i1 %cmp193, label %while.body209.us, label %while.body209

while.body209.us:                                 ; preds = %if.end222.us, %while.body209.lr.ph
  %e.4491.us = phi i32 [ %dec224.us, %if.end222.us ], [ %mul196, %while.body209.lr.ph ]
  %s.5490.us = phi i64 [ %div.us, %if.end222.us ], [ %s.4, %while.body209.lr.ph ]
  %rem.us = srem i64 %s.5490.us, 10
  %div.us = sdiv i64 %s.5490.us, 10
  %cmp219.us = icmp eq i64 %rem.us, 0
  br i1 %cmp219.us, label %if.end222.us, label %if.else237

if.end222.us:                                     ; preds = %while.body209.us
  %dec224.us = add nsw i32 %e.4491.us, -1
  %cmp207.us = icmp sgt i32 %e.4491.us, 1
  br i1 %cmp207.us, label %while.body209.us, label %while.end225

if.then201:                                       ; preds = %do_atof_calc, %if.end49
  %z.addr.12585 = phi i8* [ %z.addr.12, %do_atof_calc ], [ %z.addr.2, %if.end49 ]
  %eType.4583 = phi i32 [ %eType.4, %do_atof_calc ], [ %eType.1, %if.end49 ]
  %nDigit.4581 = phi i32 [ %nDigit.4, %do_atof_calc ], [ 0, %if.end49 ]
  %eValid.2579 = phi i32 [ %eValid.2, %do_atof_calc ], [ 1, %if.end49 ]
  %cmp202 = icmp slt i32 %sign.0, 0
  %cond204 = select i1 %cmp202, double -0.000000e+00, double 0.000000e+00
  br label %if.end286

while.body209:                                    ; preds = %if.end216, %while.body209.lr.ph
  %e.4491 = phi i32 [ %dec224, %if.end216 ], [ %add192, %while.body209.lr.ph ]
  %s.5490 = phi i64 [ %mul217, %if.end216 ], [ %s.4, %while.body209.lr.ph ]
  %cmp213 = icmp sgt i64 %s.5490, 922337203685477579
  br i1 %cmp213, label %if.else237, label %if.end216

if.end216:                                        ; preds = %while.body209
  %mul217 = mul nsw i64 %s.5490, 10
  %dec224 = add nsw i32 %e.4491, -1
  %cmp207 = icmp sgt i32 %e.4491, 1
  br i1 %cmp207, label %while.body209, label %while.end225

while.end225:                                     ; preds = %if.end216, %if.end222.us, %while.cond206.preheader
  %s.5.lcssa = phi i64 [ %s.4, %while.cond206.preheader ], [ %div.us, %if.end222.us ], [ %mul217, %if.end216 ]
  %e.4.lcssa = phi i32 [ %e.3, %while.cond206.preheader ], [ 0, %if.end222.us ], [ 0, %if.end216 ]
  %cmp226 = icmp slt i32 %sign.0, 0
  %sub229 = sub nsw i64 0, %s.5.lcssa
  %cond232 = select i1 %cmp226, i64 %sub229, i64 %s.5.lcssa
  %cmp233 = icmp eq i32 %e.4.lcssa, 0
  br i1 %cmp233, label %if.then235, label %if.else270

if.then235:                                       ; preds = %while.end225
  %conv236 = sitofp i64 %cond232 to double
  br label %if.end286

if.else237:                                       ; preds = %while.body209, %while.body209.us
  %s.5.lcssa483 = phi i64 [ %s.5490.us, %while.body209.us ], [ %s.5490, %while.body209 ]
  %e.4.lcssa481 = phi i32 [ %e.4491.us, %while.body209.us ], [ %e.4491, %while.body209 ]
  %cmp226472 = icmp slt i32 %sign.0, 0
  %sub229473 = sub nsw i64 0, %s.5.lcssa483
  %cond232474 = select i1 %cmp226472, i64 %sub229473, i64 %s.5.lcssa483
  %cmp238 = icmp sgt i32 %e.4.lcssa481, 307
  br i1 %cmp238, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.else237
  %cmp241 = icmp slt i32 %e.4.lcssa481, 342
  br i1 %cmp241, label %if.then243, label %if.else258

if.then243:                                       ; preds = %if.then240
  %sub244 = add nsw i32 %e.4.lcssa481, -308
  %and13.i = and i32 %sub244, 1
  %tobool14.i = icmp eq i32 %and13.i, 0
  %spec.select15.i = select i1 %tobool14.i, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i = ashr i32 %sub244, 1
  %cmp17.i = icmp eq i32 %shr16.i, 0
  br i1 %cmp17.i, label %sqlite3Pow10.exit, label %if.end2.i

if.end2.i:                                        ; preds = %if.end2.i, %if.then243
  %shr20.i = phi i32 [ %shr.i, %if.end2.i ], [ %shr16.i, %if.then243 ]
  %spec.select19.i = phi x86_fp80 [ %spec.select.i, %if.end2.i ], [ %spec.select15.i, %if.then243 ]
  %x.018.i = phi x86_fp80 [ %mul3.i, %if.end2.i ], [ 0xK4002A000000000000000, %if.then243 ]
  %mul3.i = fmul x86_fp80 %x.018.i, %x.018.i
  %and.i = and i32 %shr20.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %mul.i = fmul x86_fp80 %spec.select19.i, %mul3.i
  %spec.select.i = select i1 %tobool.i, x86_fp80 %spec.select19.i, x86_fp80 %mul.i
  %shr.i = ashr i32 %shr20.i, 1
  %cmp.i = icmp eq i32 %shr.i, 0
  br i1 %cmp.i, label %sqlite3Pow10.exit, label %if.end2.i

sqlite3Pow10.exit:                                ; preds = %if.end2.i, %if.then243
  %spec.select.lcssa.i = phi x86_fp80 [ %spec.select15.i, %if.then243 ], [ %spec.select.i, %if.end2.i ]
  %conv248 = sitofp i64 %cond232474 to x86_fp80
  br i1 %cmp193, label %if.then247, label %if.else252

if.then247:                                       ; preds = %sqlite3Pow10.exit
  %div249 = fdiv x86_fp80 %conv248, %spec.select.lcssa.i
  %conv250 = fptrunc x86_fp80 %div249 to double
  %div251 = fdiv double %conv250, 1.000000e+308
  br label %if.end286

if.else252:                                       ; preds = %sqlite3Pow10.exit
  %mul254 = fmul x86_fp80 %spec.select.lcssa.i, %conv248
  %conv255 = fptrunc x86_fp80 %mul254 to double
  %mul256 = fmul double %conv255, 1.000000e+308
  br label %if.end286

if.else258:                                       ; preds = %if.then240
  br i1 %cmp193, label %if.then261, label %if.else264

if.then261:                                       ; preds = %if.else258
  %conv262 = sitofp i64 %cond232474 to double
  %mul263 = fmul double %conv262, 0.000000e+00
  br label %if.end286

if.else264:                                       ; preds = %if.else258
  %conv265 = sitofp i64 %cond232474 to float
  %mul266 = fmul float %conv265, 0x7FF0000000000000
  %conv267 = fpext float %mul266 to double
  br label %if.end286

if.else270:                                       ; preds = %if.else237, %while.end225
  %e.4482 = phi i32 [ %e.4.lcssa481, %if.else237 ], [ %e.4.lcssa, %while.end225 ]
  %cond232476479 = phi i64 [ %cond232474, %if.else237 ], [ %cond232, %while.end225 ]
  %and13.i454 = and i32 %e.4482, 1
  %tobool14.i455 = icmp eq i32 %and13.i454, 0
  %spec.select15.i456 = select i1 %tobool14.i455, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i457 = ashr i32 %e.4482, 1
  %cmp17.i458 = icmp eq i32 %shr16.i457, 0
  br i1 %cmp17.i458, label %sqlite3Pow10.exit471, label %if.end2.i469

if.end2.i469:                                     ; preds = %if.end2.i469, %if.else270
  %shr20.i459 = phi i32 [ %shr.i467, %if.end2.i469 ], [ %shr16.i457, %if.else270 ]
  %spec.select19.i460 = phi x86_fp80 [ %spec.select.i466, %if.end2.i469 ], [ %spec.select15.i456, %if.else270 ]
  %x.018.i461 = phi x86_fp80 [ %mul3.i462, %if.end2.i469 ], [ 0xK4002A000000000000000, %if.else270 ]
  %mul3.i462 = fmul x86_fp80 %x.018.i461, %x.018.i461
  %and.i463 = and i32 %shr20.i459, 1
  %tobool.i464 = icmp eq i32 %and.i463, 0
  %mul.i465 = fmul x86_fp80 %spec.select19.i460, %mul3.i462
  %spec.select.i466 = select i1 %tobool.i464, x86_fp80 %spec.select19.i460, x86_fp80 %mul.i465
  %shr.i467 = ashr i32 %shr20.i459, 1
  %cmp.i468 = icmp eq i32 %shr.i467, 0
  br i1 %cmp.i468, label %sqlite3Pow10.exit471, label %if.end2.i469

sqlite3Pow10.exit471:                             ; preds = %if.end2.i469, %if.else270
  %spec.select.lcssa.i470 = phi x86_fp80 [ %spec.select15.i456, %if.else270 ], [ %spec.select.i466, %if.end2.i469 ]
  %conv276 = sitofp i64 %cond232476479 to x86_fp80
  br i1 %cmp193, label %if.then275, label %if.else279

if.then275:                                       ; preds = %sqlite3Pow10.exit471
  %div277 = fdiv x86_fp80 %conv276, %spec.select.lcssa.i470
  br label %if.end283

if.else279:                                       ; preds = %sqlite3Pow10.exit471
  %mul281 = fmul x86_fp80 %spec.select.lcssa.i470, %conv276
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  %result.1.in = phi x86_fp80 [ %div277, %if.then275 ], [ %mul281, %if.else279 ]
  %result.1 = fptrunc x86_fp80 %result.1.in to double
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.else264, %if.then261, %if.else252, %if.then247, %if.then235, %if.then201
  %z.addr.12584 = phi i8* [ %z.addr.12585, %if.then201 ], [ %z.addr.12, %if.then235 ], [ %z.addr.12, %if.then261 ], [ %z.addr.12, %if.else264 ], [ %z.addr.12, %if.end283 ], [ %z.addr.12, %if.then247 ], [ %z.addr.12, %if.else252 ]
  %eType.4582 = phi i32 [ %eType.4583, %if.then201 ], [ %eType.4, %if.then235 ], [ %eType.4, %if.then261 ], [ %eType.4, %if.else264 ], [ %eType.4, %if.end283 ], [ %eType.4, %if.then247 ], [ %eType.4, %if.else252 ]
  %nDigit.4580 = phi i32 [ %nDigit.4581, %if.then201 ], [ %nDigit.4, %if.then235 ], [ %nDigit.4, %if.then261 ], [ %nDigit.4, %if.else264 ], [ %nDigit.4, %if.end283 ], [ %nDigit.4, %if.then247 ], [ %nDigit.4, %if.else252 ]
  %eValid.2578 = phi i32 [ %eValid.2579, %if.then201 ], [ %eValid.2, %if.then235 ], [ %eValid.2, %if.then261 ], [ %eValid.2, %if.else264 ], [ %eValid.2, %if.end283 ], [ %eValid.2, %if.then247 ], [ %eValid.2, %if.else252 ]
  %result.2 = phi double [ %cond204, %if.then201 ], [ %conv236, %if.then235 ], [ %mul263, %if.then261 ], [ %conv267, %if.else264 ], [ %result.1, %if.end283 ], [ %div251, %if.then247 ], [ %mul256, %if.else252 ]
  store double %result.2, double* %pResult, align 8, !tbaa !6
  %cmp287 = icmp eq i8* %z.addr.12584, %zEnd.0
  %cmp289 = icmp sgt i32 %nDigit.4580, 0
  %or.cond = and i1 %cmp289, %cmp287
  %tobool292 = icmp ne i32 %eValid.2578, 0
  %or.cond320 = and i1 %tobool292, %or.cond
  %cmp294 = icmp sgt i32 %eType.4582, 0
  %or.cond321 = and i1 %cmp294, %or.cond320
  br i1 %or.cond321, label %cleanup, label %if.else297

if.else297:                                       ; preds = %if.end286
  %cmp298 = icmp sgt i32 %eType.4582, 1
  br i1 %cmp298, label %land.lhs.true300, label %if.else309

land.lhs.true300:                                 ; preds = %if.else297
  %cmp301 = icmp eq i32 %eType.4582, 3
  %or.cond322 = or i1 %tobool292, %cmp301
  %or.cond323 = and i1 %cmp289, %or.cond322
  br i1 %or.cond323, label %cleanup, label %if.else309

if.else309:                                       ; preds = %land.lhs.true300, %if.else297
  br label %cleanup

cleanup:                                          ; preds = %if.else309, %land.lhs.true300, %if.end286, %while.body, %if.end20, %entry
  %retval.0 = phi i32 [ 0, %if.else309 ], [ 0, %entry ], [ %eType.4582, %if.end286 ], [ -1, %land.lhs.true300 ], [ 0, %if.end20 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_randomness(i32, i8*) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemIntegerify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3UnlinkAndDeleteTable(%struct.sqlite3*, i32, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3ExpirePreparedStatements(%struct.sqlite3*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeUpdateMeta(%struct.Btree*, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFreeCursor(%struct.Vdbe* nocapture readonly, %struct.VdbeCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemSetStr(%struct.sqlite3_value*, i8*, i32, i8 zeroext, void (i8*)*) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeGetMeta(%struct.Btree*, i32, i32*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemCast(%struct.sqlite3_value*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePrevious(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeEof(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorHasHint(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeClearCursor(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3VdbeIntValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3RowSetInsert(%struct.RowSet*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3RowSetTest(%struct.RowSet*, i32, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemSetRowSet(%struct.sqlite3_value*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFreeNN(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local void @sqlite3VdbeRecordUnpack(%struct.KeyInfo* nocapture readonly %pKeyInfo, i32 %nKey, i8* %pKey, %struct.UnpackedRecord* nocapture %p) unnamed_addr #4 {
entry:
  %v64.i71 = alloca i64, align 8
  %v64.i = alloca i64, align 8
  %aMem = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 1
  %0 = load %struct.sqlite3_value*, %struct.sqlite3_value** %aMem, align 8, !tbaa !11
  %default_rc = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 3
  store i8 0, i8* %default_rc, align 2, !tbaa !15
  %1 = load i8, i8* %pKey, align 1, !tbaa !10
  %cmp = icmp sgt i8 %1, -1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %incdec.ptr.i = getelementptr inbounds i8, i8* %pKey, i64 1
  %2 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv1.i = zext i8 %2 to i32
  %tobool.i = icmp slt i8 %2, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.false
  %and2.i = shl nuw nsw i32 %conv, 7
  %shl.i = and i32 %and2.i, 16256
  %or.i = or i32 %shl.i, %conv1.i
  br label %cond.end

if.end.i:                                         ; preds = %cond.false
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %pKey, i64 2
  %3 = load i8, i8* %incdec.ptr3.i, align 1, !tbaa !10
  %tobool8.i = icmp slt i8 %3, 0
  br i1 %tobool8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %conv5.i = zext i8 %3 to i32
  %shl4.i = shl nuw nsw i32 %conv, 14
  %or6.i = or i32 %shl4.i, %conv5.i
  %and10.i = and i32 %or6.i, 2080895
  %and11.i = shl nuw nsw i32 %conv1.i, 7
  %shl12.i = and i32 %and11.i, 16256
  %or13.i = or i32 %and10.i, %shl12.i
  br label %cond.end

if.end14.i:                                       ; preds = %if.end.i
  %4 = bitcast i64* %v64.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %call.i = call zeroext i8 @sqlite3GetVarint(i8* nonnull %pKey, i64* nonnull %v64.i) #5
  %5 = load i64, i64* %v64.i, align 8, !tbaa !16
  %6 = icmp ult i64 %5, 4294967295
  %storemerge43.i = select i1 %6, i64 %5, i64 4294967295
  %7 = trunc i64 %storemerge43.i to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %phitmp101 = zext i8 %call.i to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end14.i, %if.then9.i, %if.then.i, %entry
  %szHdr.1 = phi i32 [ %conv, %entry ], [ %7, %if.end14.i ], [ %or13.i, %if.then9.i ], [ %or.i, %if.then.i ]
  %cond = phi i32 [ 1, %entry ], [ %phitmp101, %if.end14.i ], [ 3, %if.then9.i ], [ 2, %if.then.i ]
  %8 = bitcast i64* %v64.i71 to i8*
  %enc = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 1
  %db = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 4
  %9 = bitcast %struct.sqlite3** %db to i64*
  %nField = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %cond.end22, %cond.end
  %d.0 = phi i32 [ %szHdr.1, %cond.end ], [ %add31, %cond.end22 ]
  %idx.0 = phi i32 [ %cond, %cond.end ], [ %add, %cond.end22 ]
  %u.0 = phi i16 [ 0, %cond.end ], [ %inc, %cond.end22 ]
  %pMem.0 = phi %struct.sqlite3_value* [ %0, %cond.end ], [ %incdec.ptr, %cond.end22 ]
  %cmp6 = icmp ult i32 %idx.0, %szHdr.1
  %cmp8 = icmp ule i32 %d.0, %nKey
  %10 = and i1 %cmp8, %cmp6
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom = zext i32 %idx.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %pKey, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp11 = icmp sgt i8 %11, -1
  %conv10 = zext i8 %11 to i32
  br i1 %cmp11, label %cond.end22, label %cond.false17

cond.false17:                                     ; preds = %while.body
  %incdec.ptr.i73 = getelementptr inbounds i8, i8* %arrayidx, i64 1
  %12 = load i8, i8* %incdec.ptr.i73, align 1, !tbaa !10
  %conv1.i74 = zext i8 %12 to i32
  %tobool.i75 = icmp slt i8 %12, 0
  br i1 %tobool.i75, label %if.end.i82, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false17
  %and2.i76 = shl nuw nsw i32 %conv10, 7
  %shl.i77 = and i32 %and2.i76, 16256
  %or.i78 = or i32 %shl.i77, %conv1.i74
  br label %cond.end22

if.end.i82:                                       ; preds = %cond.false17
  %incdec.ptr3.i80 = getelementptr inbounds i8, i8* %arrayidx, i64 2
  %13 = load i8, i8* %incdec.ptr3.i80, align 1, !tbaa !10
  %tobool8.i81 = icmp slt i8 %13, 0
  br i1 %tobool8.i81, label %if.end14.i93, label %if.then9.i90

if.then9.i90:                                     ; preds = %if.end.i82
  %conv5.i83 = zext i8 %13 to i32
  %shl4.i84 = shl nuw nsw i32 %conv10, 14
  %or6.i85 = or i32 %shl4.i84, %conv5.i83
  %and10.i86 = and i32 %or6.i85, 2080895
  %and11.i87 = shl nuw nsw i32 %conv1.i74, 7
  %shl12.i88 = and i32 %and11.i87, 16256
  %or13.i89 = or i32 %and10.i86, %shl12.i88
  br label %cond.end22

if.end14.i93:                                     ; preds = %if.end.i82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %call.i91 = call zeroext i8 @sqlite3GetVarint(i8* nonnull %arrayidx, i64* nonnull %v64.i71) #5
  %14 = load i64, i64* %v64.i71, align 8, !tbaa !16
  %15 = icmp ult i64 %14, 4294967295
  %storemerge43.i92 = select i1 %15, i64 %14, i64 4294967295
  %16 = trunc i64 %storemerge43.i92 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end14.i93, %if.then9.i90, %if.then.i79, %while.body
  %serial_type.1 = phi i32 [ %16, %if.end14.i93 ], [ %or13.i89, %if.then9.i90 ], [ %or.i78, %if.then.i79 ], [ %conv10, %while.body ]
  %cond23 = phi i8 [ %call.i91, %if.end14.i93 ], [ 3, %if.then9.i90 ], [ 2, %if.then.i79 ], [ 1, %while.body ]
  %conv25 = zext i8 %cond23 to i32
  %add = add i32 %idx.0, %conv25
  %17 = load i8, i8* %enc, align 4, !tbaa !18
  %enc26 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 2
  store i8 %17, i8* %enc26, align 2, !tbaa !21
  %18 = load i64, i64* %9, align 8, !tbaa !23
  %db27 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 9
  %19 = bitcast %struct.sqlite3** %db27 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !24
  %szMalloc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 7
  store i32 0, i32* %szMalloc, align 8, !tbaa !25
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 5
  store i8* null, i8** %z, align 8, !tbaa !26
  %idxprom28 = zext i32 %d.0 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %pKey, i64 %idxprom28
  %call30 = call i32 @sqlite3VdbeSerialGet(i8* nonnull %arrayidx29, i32 %serial_type.1, %struct.sqlite3_value* %pMem.0)
  %add31 = add i32 %call30, %d.0
  %incdec.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 1
  %inc = add nuw i16 %u.0, 1
  %20 = load i16, i16* %nField, align 8, !tbaa !27
  %cmp34 = icmp ult i16 %inc, %20
  br i1 %cmp34, label %while.cond, label %while.end

while.end:                                        ; preds = %cond.end22, %while.cond
  %d.1 = phi i32 [ %add31, %cond.end22 ], [ %d.0, %while.cond ]
  %u.1 = phi i16 [ %inc, %cond.end22 ], [ %u.0, %while.cond ]
  %pMem.1 = phi %struct.sqlite3_value* [ %incdec.ptr, %cond.end22 ], [ %pMem.0, %while.cond ]
  %cmp36 = icmp ule i32 %d.1, %nKey
  %tobool = icmp eq i16 %u.1, 0
  %or.cond = or i1 %cmp36, %tobool
  br i1 %or.cond, label %if.end40, label %if.then39

if.then39:                                        ; preds = %while.end
  %flags.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1, i32 1
  %21 = load i16, i16* %flags.i, align 8, !tbaa !28
  %22 = and i16 %21, 9216
  %cmp.i = icmp eq i16 %22, 0
  br i1 %cmp.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.then39
  %add.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* nonnull %add.ptr) #5
  br label %if.end40

if.else.i:                                        ; preds = %if.then39
  store i16 1, i16* %flags.i, align 8, !tbaa !28
  br label %if.end40

if.end40:                                         ; preds = %if.else.i, %if.then.i96, %while.end
  store i16 %u.1, i16* %nField, align 8, !tbaa !27
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.UnpackedRecord* @sqlite3VdbeAllocUnpackedRecord(%struct.KeyInfo*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCreateTable(%struct.Btree*, i32*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3*, %struct.Btree** nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor*, %struct.UnpackedRecord*, i64, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeLast(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValidNN(%struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeInsert(%struct.BtCursor*, %struct.BtreePayload* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3*, %struct.VdbeCursor*, %struct.UnpackedRecord*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxRowid(%struct.sqlite3*, %struct.BtCursor*, i64*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeDelete(%struct.BtCursor*, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3BtreeIntegerKey(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeClearTable(%struct.Btree*, i32, i32*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeNumericType(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeError(%struct.Vdbe* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value*, i8, i8) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyNumericAffinity(%struct.sqlite3_value* nocapture %pRec, i32 %bTryForInt) local_unnamed_addr #4 {
entry:
  %rValue = alloca double, align 8
  %0 = bitcast double* %rValue to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %enc1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %1 = load i8, i8* %enc1, align 2, !tbaa !21
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %2 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %3 = load i32, i32* %n, align 4, !tbaa !29
  %call = call i32 @sqlite3AtoF(i8* %2, double* nonnull %rValue, i32 %3, i8 zeroext %1)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call, 1
  %4 = load double, double* %rValue, align 8, !tbaa !6
  %i = bitcast %struct.sqlite3_value* %pRec to i64*
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %conv.i = fptosi double %4 to i64
  %cmp.i.i = fcmp oeq double %4, 0.000000e+00
  br i1 %cmp.i.i, label %alsoAnInt.exit.thread, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.lhs.true
  %5 = bitcast double %4 to i64
  %conv.i.i = sitofp i64 %conv.i to double
  %6 = bitcast double %conv.i.i to i64
  %7 = icmp ne i64 %5, %6
  %conv.off.i = add i64 %conv.i, 2251799813685248
  %8 = icmp ugt i64 %conv.off.i, 4503599627370495
  %9 = or i1 %8, %7
  br i1 %9, label %alsoAnInt.exit, label %alsoAnInt.exit.thread

alsoAnInt.exit.thread:                            ; preds = %lor.rhs.i.i, %land.lhs.true
  store i64 %conv.i, i64* %i, align 8, !tbaa !16
  br label %if.then4

alsoAnInt.exit:                                   ; preds = %lor.rhs.i.i
  %10 = load i8*, i8** %z, align 8, !tbaa !26
  %11 = load i32, i32* %n, align 4, !tbaa !29
  %12 = load i8, i8* %enc1, align 2, !tbaa !21
  %call1.i = call i32 @sqlite3Atoi64(i8* %10, i64* %i, i32 %11, i8 zeroext %12) #5
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.then4, label %if.else

if.then4:                                         ; preds = %alsoAnInt.exit, %alsoAnInt.exit.thread
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %13 = load i16, i16* %flags, align 8, !tbaa !28
  %14 = or i16 %13, 4
  store i16 %14, i16* %flags, align 8, !tbaa !28
  br label %if.end14

if.else:                                          ; preds = %alsoAnInt.exit, %if.end
  %15 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  store double %4, double* %15, align 8, !tbaa !10
  %flags7 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %16 = load i16, i16* %flags7, align 8, !tbaa !28
  %17 = or i16 %16, 8
  store i16 %17, i16* %flags7, align 8, !tbaa !28
  %tobool11 = icmp eq i32 %bTryForInt, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.else
  %call.i = call i64 @doubleToInt64(double %4) #5
  %conv.i31 = sitofp i64 %call.i to double
  %cmp.i32 = fcmp oeq double %4, %conv.i31
  %18 = add i64 %call.i, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %19, %cmp.i32
  br i1 %20, label %if.then.i33, label %if.end14

if.then.i33:                                      ; preds = %if.then12
  store i64 %call.i, i64* %i, align 8, !tbaa !10
  %21 = and i16 %16, 15936
  %22 = or i16 %21, 4
  store i16 %22, i16* %flags7, align 8, !tbaa !28
  br label %if.end14

if.end14:                                         ; preds = %if.then.i33, %if.then12, %if.else, %if.then4
  %23 = phi i16 [ %22, %if.then.i33 ], [ %17, %if.then12 ], [ %17, %if.else ], [ %14, %if.then4 ]
  %flags15 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %24 = and i16 %23, -3
  store i16 %24, i16* %flags15, align 8, !tbaa !28
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3IsNaN(double) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare double @sqlite3VdbeRealValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3MulInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3SubInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3AddInt64(i64*, i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define zeroext i16 @numericType(%struct.sqlite3_value* %pMem) local_unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 44
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv4 = trunc i32 %and to i16
  br label %return

if.end:                                           ; preds = %entry
  %and7 = and i32 %conv, 18
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %return, label %if.then9

if.then9:                                         ; preds = %if.end
  %call = call zeroext i16 @computeNumericType(%struct.sqlite3_value* nonnull %pMem)
  br label %return

return:                                           ; preds = %if.then9, %if.end, %if.then
  %retval.0 = phi i16 [ %conv4, %if.then ], [ %call, %if.then9 ], [ 0, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemMove(%struct.sqlite3_value*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @"#VDBE_EXEC_NAME"(%struct.Vdbe*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValid(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialPut(i8*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3PutVarint(i8*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VarintLen(i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyAffinity(%struct.sqlite3_value* %pRec, i8 signext %affinity, i8 zeroext %enc) local_unnamed_addr #4 {
entry:
  %acc.i = alloca %struct.sqlite3_str, align 8
  %cmp = icmp sgt i8 %affinity, 66
  br i1 %cmp, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv2 = zext i16 %0 to i32
  %and = and i32 %conv2, 4
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.then
  %and8 = and i32 %conv2, 8
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then5
  %and14 = and i32 %conv2, 2
  %tobool = icmp eq i32 %and14, 0
  br i1 %tobool, label %if.end41, label %if.then15

if.then15:                                        ; preds = %if.then11
  call void @applyNumericAffinity(%struct.sqlite3_value* nonnull %pRec, i32 1)
  br label %if.end41

if.else:                                          ; preds = %if.then5
  %r.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %1 = load double, double* %r.i, align 8, !tbaa !10
  %call.i = call i64 @doubleToInt64(double %1) #5
  %conv.i = sitofp i64 %call.i to double
  %cmp.i = fcmp oeq double %1, %conv.i
  %2 = add i64 %call.i, -9223372036854775807
  %3 = icmp ugt i64 %2, 1
  %4 = and i1 %3, %cmp.i
  br i1 %4, label %if.then.i, label %if.end41

if.then.i:                                        ; preds = %if.else
  %i.i = bitcast %struct.sqlite3_value* %pRec to i64*
  store i64 %call.i, i64* %i.i, align 8, !tbaa !10
  %5 = and i16 %0, 15936
  %6 = or i16 %5, 4
  store i16 %6, i16* %flags, align 8, !tbaa !28
  br label %if.end41

if.else18:                                        ; preds = %entry
  %cmp20 = icmp eq i8 %affinity, 66
  br i1 %cmp20, label %if.then22, label %if.end41

if.then22:                                        ; preds = %if.else18
  %flags23 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %7 = load i16, i16* %flags23, align 8, !tbaa !28
  %conv24 = zext i16 %7 to i32
  %and25 = and i32 %conv24, 2
  %cmp26 = icmp ne i32 %and25, 0
  %and31 = and i32 %conv24, 44
  %tobool32 = icmp eq i32 %and31, 0
  %or.cond = or i1 %cmp26, %tobool32
  br i1 %or.cond, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then22
  %szMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 7
  %8 = load i32, i32* %szMalloc.i, align 8, !tbaa !25
  %cmp.i54 = icmp slt i32 %8, 32
  br i1 %cmp.i54, label %sqlite3VdbeMemClearAndResize.exit, label %sqlite3VdbeMemClearAndResize.exit.thread

sqlite3VdbeMemClearAndResize.exit.thread:         ; preds = %if.then33
  %zMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 6
  %9 = bitcast i8** %zMalloc.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !30
  %z.i57 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %11 = bitcast i8** %z.i57 to i64*
  store i64 %10, i64* %11, align 8, !tbaa !26
  %12 = and i16 %7, 45
  store i16 %12, i16* %flags23, align 8, !tbaa !28
  %13 = inttoptr i64 %10 to i8*
  br label %lor.lhs.false.i.i

sqlite3VdbeMemClearAndResize.exit:                ; preds = %if.then33
  %call.i55 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* nonnull %pRec, i32 32, i32 0) #5
  %tobool.i = icmp eq i32 %call.i55, 0
  br i1 %tobool.i, label %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, label %if.then.i51

sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge: ; preds = %sqlite3VdbeMemClearAndResize.exit
  %z.i.phi.trans.insert = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %.pre = load i8*, i8** %z.i.phi.trans.insert, align 8, !tbaa !26
  %.pre68 = load i16, i16* %flags23, align 8, !tbaa !28
  br label %lor.lhs.false.i.i

if.then.i51:                                      ; preds = %sqlite3VdbeMemClearAndResize.exit
  %enc1.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 0, i8* %enc1.i, align 2, !tbaa !21
  br label %if.end35

lor.lhs.false.i.i:                                ; preds = %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, %sqlite3VdbeMemClearAndResize.exit.thread
  %14 = phi i16 [ %.pre68, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %12, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %15 = phi i8* [ %.pre, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %13, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %z.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %16 = bitcast %struct.sqlite3_str* %acc.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %zText.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 1
  store i8* %15, i8** %zText.i.i, align 8, !tbaa !31
  %db1.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 0
  store %struct.sqlite3* null, %struct.sqlite3** %db1.i.i, align 8, !tbaa !33
  %nAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 2
  store i32 32, i32* %nAlloc.i.i, align 8, !tbaa !34
  %mxAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 3
  %nChar.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 4
  %17 = bitcast i32* %mxAlloc.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(10) %17, i8 0, i64 10, i1 false) #5
  %conv.i61 = zext i16 %14 to i32
  %and.i = and i32 %conv.i61, 4
  %tobool.i62 = icmp eq i32 %and.i, 0
  br i1 %tobool.i62, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %lor.lhs.false.i.i
  %i.i63 = bitcast %struct.sqlite3_value* %pRec to i64*
  %18 = load i64, i64* %i.i63, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 %18) #5
  br label %vdbeMemRenderNum.exit

if.else.i:                                        ; preds = %lor.lhs.false.i.i
  %and3.i = and i32 %conv.i61, 32
  %tobool4.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.else.i
  %i7.i = bitcast %struct.sqlite3_value* %pRec to i64*
  %19 = load i64, i64* %i7.i, align 8, !tbaa !10
  %conv8.i = sitofp i64 %19 to double
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %conv8.i) #5
  br label %vdbeMemRenderNum.exit

if.else9.i:                                       ; preds = %if.else.i
  %r.i65 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %20 = load double, double* %r.i65, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %20) #5
  br label %vdbeMemRenderNum.exit

vdbeMemRenderNum.exit:                            ; preds = %if.else9.i, %if.then5.i, %if.then.i64
  %21 = load i32, i32* %nChar.i.i, align 8, !tbaa !35
  %idxprom.i = zext i32 %21 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %15, i64 %idxprom.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  %22 = load i8*, i8** %z.i, align 8, !tbaa !26
  %call3.i = call i64 @strlen(i8* nonnull dereferenceable(1) %22) #5
  %23 = trunc i64 %call3.i to i32
  %conv.i52 = and i32 %23, 1073741823
  %n.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  store i32 %conv.i52, i32* %n.i, align 4, !tbaa !29
  %enc4.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 1, i8* %enc4.i, align 2, !tbaa !21
  %24 = load i16, i16* %flags23, align 8, !tbaa !28
  %25 = and i16 %24, -559
  %26 = or i16 %25, 514
  store i16 %26, i16* %flags23, align 8, !tbaa !28
  %cmp.i.i = icmp eq i8 %enc, 1
  br i1 %cmp.i.i, label %if.end35, label %if.end.i.i

if.end.i.i:                                       ; preds = %vdbeMemRenderNum.exit
  %call.i.i = call i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value* nonnull %pRec, i8 zeroext %enc) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end.i.i, %vdbeMemRenderNum.exit, %if.then.i51, %if.then22
  %27 = load i16, i16* %flags23, align 8, !tbaa !28
  %28 = and i16 %27, -45
  store i16 %28, i16* %flags23, align 8, !tbaa !28
  br label %if.end41

if.end41:                                         ; preds = %if.end35, %if.else18, %if.then.i, %if.else, %if.then15, %if.then11, %if.then
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterInit(%struct.sqlite3*, i32, %struct.VdbeCursor*) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3MemCompare(%struct.sqlite3_value* %pMem1, %struct.sqlite3_value* %pMem2, %struct.CollSeq* readonly %pColl) unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %flags1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 1
  %1 = load i16, i16* %flags1, align 8, !tbaa !28
  %conv2 = zext i16 %1 to i32
  %or164 = or i16 %1, %0
  %or = zext i16 %or164 to i32
  %and = and i32 %or, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and3 = and i32 %conv2, 1
  %and4 = and i32 %conv, 1
  %sub = sub nsw i32 %and3, %and4
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i32 %or, 44
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.end98, label %if.then7

if.then7:                                         ; preds = %if.end
  %and8165 = and i16 %1, %0
  %and8 = zext i16 %and8165 to i32
  %and9 = and i32 %and8, 36
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.end26, label %if.then11

if.then11:                                        ; preds = %if.then7
  %i = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %2 = load i64, i64* %i, align 8, !tbaa !10
  %i13 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %3 = load i64, i64* %i13, align 8, !tbaa !10
  %cmp14 = icmp slt i64 %2, %3
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.then11
  %cmp22 = icmp sgt i64 %2, %3
  %. = zext i1 %cmp22 to i32
  br label %cleanup

if.end26:                                         ; preds = %if.then7
  %and28 = and i32 %and8, 8
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end47, label %if.then31

if.then31:                                        ; preds = %if.end26
  %r = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %4 = load double, double* %r, align 8, !tbaa !10
  %r34 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %5 = load double, double* %r34, align 8, !tbaa !10
  %cmp35 = fcmp olt double %4, %5
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.then31
  %cmp43 = fcmp ogt double %4, %5
  %.166 = zext i1 %cmp43 to i32
  br label %cleanup

if.end47:                                         ; preds = %if.end26
  %and48 = and i32 %conv, 36
  %cmp49 = icmp eq i32 %and48, 0
  br i1 %cmp49, label %if.end81, label %if.then51

if.then51:                                        ; preds = %if.end47
  %and52 = and i32 %conv2, 8
  %cmp53 = icmp eq i32 %and52, 0
  br i1 %cmp53, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then51
  %i57 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %6 = load i64, i64* %i57, align 8, !tbaa !10
  %r59 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %7 = load double, double* %r59, align 8, !tbaa !10
  %conv.i = sitofp i64 %6 to x86_fp80
  %conv1.i = fpext double %7 to x86_fp80
  %cmp.i = fcmp olt x86_fp80 %conv.i, %conv1.i
  %cmp4.i = fcmp ogt x86_fp80 %conv.i, %conv1.i
  %..i = zext i1 %cmp4.i to i32
  %retval.0.i = select i1 %cmp.i, i32 -1, i32 %..i
  br label %cleanup

if.else:                                          ; preds = %if.then51
  %and60 = and i32 %conv2, 36
  %cmp61 = icmp eq i32 %and60, 0
  br i1 %cmp61, label %cleanup, label %if.then63

if.then63:                                        ; preds = %if.else
  %i65 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %8 = load i64, i64* %i65, align 8, !tbaa !10
  %i67 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %9 = load i64, i64* %i67, align 8, !tbaa !10
  %cmp68 = icmp slt i64 %8, %9
  br i1 %cmp68, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.then63
  %cmp76 = icmp sgt i64 %8, %9
  %.167 = zext i1 %cmp76 to i32
  br label %cleanup

if.end81:                                         ; preds = %if.end47
  %and82 = and i32 %conv, 8
  %cmp83 = icmp eq i32 %and82, 0
  br i1 %cmp83, label %cleanup, label %if.then85

if.then85:                                        ; preds = %if.end81
  %and86 = and i32 %conv2, 36
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %cleanup, label %if.then89

if.then89:                                        ; preds = %if.then85
  %i91 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %10 = load i64, i64* %i91, align 8, !tbaa !10
  %r93 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %11 = load double, double* %r93, align 8, !tbaa !10
  %conv.i168 = sitofp i64 %10 to x86_fp80
  %conv1.i169 = fpext double %11 to x86_fp80
  %cmp.i170 = fcmp olt x86_fp80 %conv.i168, %conv1.i169
  %cmp4.i171 = fcmp ogt x86_fp80 %conv.i168, %conv1.i169
  %..i172.neg = sext i1 %cmp4.i171 to i32
  %sub95 = select i1 %cmp.i170, i32 1, i32 %..i172.neg
  br label %cleanup

if.end98:                                         ; preds = %if.end
  %and99 = and i32 %or, 2
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.end116, label %if.then101

if.then101:                                       ; preds = %if.end98
  %and102 = and i32 %conv, 2
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cleanup, label %if.end106

if.end106:                                        ; preds = %if.then101
  %and107 = and i32 %conv2, 2
  %cmp108 = icmp eq i32 %and107, 0
  br i1 %cmp108, label %cleanup, label %if.end111

if.end111:                                        ; preds = %if.end106
  %tobool112 = icmp eq %struct.CollSeq* %pColl, null
  br i1 %tobool112, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end111
  %call114 = call i32 @vdbeCompareMemString(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2, %struct.CollSeq* nonnull %pColl, i8* null)
  br label %cleanup

if.end116:                                        ; preds = %if.end111, %if.end98
  %call117 = call i32 @sqlite3BlobCompare(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then113, %if.end106, %if.then101, %if.then89, %if.then85, %if.end81, %if.end71, %if.then63, %if.else, %if.then55, %if.end38, %if.then31, %if.end17, %if.then11, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %retval.0.i, %if.then55 ], [ %sub95, %if.then89 ], [ %call114, %if.then113 ], [ %call117, %if.end116 ], [ -1, %if.then11 ], [ %., %if.end17 ], [ -1, %if.then31 ], [ %.166, %if.end38 ], [ -1, %if.then63 ], [ %.167, %if.end71 ], [ -1, %if.else ], [ -1, %if.then85 ], [ 1, %if.end81 ], [ 1, %if.then101 ], [ -1, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterNext(%struct.sqlite3*, %struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.BtCursor* @sqlite3BtreeFakeValidCursor() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXSFuncPtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXInversePtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value*, %struct.FuncDef*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value*, i64) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRawNN(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemInit(%struct.sqlite3_value*, %struct.sqlite3*, i16) #0

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* returned) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeBeginStmt(%struct.Btree*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeBeginTrans(%struct.Btree*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeHalt(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeNext(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCloseStatement(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCheckFk(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor*, i32, i32, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value*, i32, i32) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3VdbeSerialGet(i8* %buf, i32 %serial_type, %struct.sqlite3_value* %pMem) unnamed_addr #4 {
entry:
  switch i32 %serial_type, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb15
    i32 4, label %sw.bb29
    i32 5, label %sw.bb48
    i32 6, label %sw.bb78
    i32 7, label %sw.bb78
    i32 8, label %sw.bb79
    i32 9, label %sw.bb79
  ]

sw.bb:                                            ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 16385, i16* %flags, align 8, !tbaa !28
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 0, i32* %n, align 4, !tbaa !29
  %nZero = bitcast %struct.sqlite3_value* %pMem to i32*
  store i32 0, i32* %nZero, align 8, !tbaa !10
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  %flags2 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 1, i16* %flags2, align 8, !tbaa !28
  br label %return

sw.bb3:                                           ; preds = %entry
  %0 = load i8, i8* %buf, align 1, !tbaa !10
  %conv = sext i8 %0 to i64
  %i = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv, i64* %i, align 8, !tbaa !10
  %flags5 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags5, align 8, !tbaa !28
  br label %return

sw.bb6:                                           ; preds = %entry
  %1 = load i8, i8* %buf, align 1, !tbaa !10
  %conv8 = sext i8 %1 to i32
  %mul = shl nsw i32 %conv8, 8
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 1
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !10
  %conv10 = zext i8 %2 to i32
  %or = or i32 %mul, %conv10
  %conv11 = sext i32 %or to i64
  %i13 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv11, i64* %i13, align 8, !tbaa !10
  %flags14 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags14, align 8, !tbaa !28
  br label %return

sw.bb15:                                          ; preds = %entry
  %3 = load i8, i8* %buf, align 1, !tbaa !10
  %conv17 = sext i8 %3 to i32
  %mul18 = shl nsw i32 %conv17, 16
  %arrayidx19 = getelementptr inbounds i8, i8* %buf, i64 1
  %4 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv20, 8
  %or21 = or i32 %shl, %mul18
  %arrayidx22 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx22, align 1, !tbaa !10
  %conv23 = zext i8 %5 to i32
  %or24 = or i32 %or21, %conv23
  %conv25 = sext i32 %or24 to i64
  %i27 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv25, i64* %i27, align 8, !tbaa !10
  %flags28 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags28, align 8, !tbaa !28
  br label %return

sw.bb29:                                          ; preds = %entry
  %6 = load i8, i8* %buf, align 1, !tbaa !10
  %conv31 = sext i8 %6 to i32
  %mul32 = shl nsw i32 %conv31, 24
  %arrayidx33 = getelementptr inbounds i8, i8* %buf, i64 1
  %7 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %7 to i32
  %shl35 = shl nuw nsw i32 %conv34, 16
  %or36 = or i32 %shl35, %mul32
  %arrayidx37 = getelementptr inbounds i8, i8* %buf, i64 2
  %8 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %8 to i32
  %shl39 = shl nuw nsw i32 %conv38, 8
  %or40 = or i32 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %buf, i64 3
  %9 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %9 to i32
  %or43 = or i32 %or40, %conv42
  %conv44 = sext i32 %or43 to i64
  %i46 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv44, i64* %i46, align 8, !tbaa !10
  %flags47 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags47, align 8, !tbaa !28
  br label %return

sw.bb48:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 2
  %10 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv50 = zext i8 %10 to i64
  %shl51 = shl nuw nsw i64 %conv50, 24
  %arrayidx53 = getelementptr inbounds i8, i8* %buf, i64 3
  %11 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %11 to i64
  %shl55 = shl nuw nsw i64 %conv54, 16
  %or56 = or i64 %shl55, %shl51
  %arrayidx58 = getelementptr inbounds i8, i8* %buf, i64 4
  %12 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %12 to i64
  %shl60 = shl nuw nsw i64 %conv59, 8
  %or61 = or i64 %or56, %shl60
  %arrayidx63 = getelementptr inbounds i8, i8* %buf, i64 5
  %13 = load i8, i8* %arrayidx63, align 1, !tbaa !10
  %conv64 = zext i8 %13 to i64
  %or65 = or i64 %or61, %conv64
  %14 = load i8, i8* %buf, align 1, !tbaa !10
  %conv68 = sext i8 %14 to i32
  %mul69 = shl nsw i32 %conv68, 8
  %arrayidx70 = getelementptr inbounds i8, i8* %buf, i64 1
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %15 to i32
  %or72 = or i32 %mul69, %conv71
  %conv73 = sext i32 %or72 to i64
  %mul74 = shl nsw i64 %conv73, 32
  %add = or i64 %or65, %mul74
  %i76 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %add, i64* %i76, align 8, !tbaa !10
  %flags77 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags77, align 8, !tbaa !28
  br label %return

sw.bb78:                                          ; preds = %entry, %entry
  %16 = load i8, i8* %buf, align 1, !tbaa !10
  %conv.i = zext i8 %16 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 24
  %arrayidx1.i = getelementptr inbounds i8, i8* %buf, i64 1
  %17 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %17 to i64
  %shl3.i = shl nuw nsw i64 %conv2.i, 16
  %or.i = or i64 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr inbounds i8, i8* %buf, i64 2
  %18 = load i8, i8* %arrayidx4.i, align 1, !tbaa !10
  %conv5.i = zext i8 %18 to i64
  %shl6.i = shl nuw nsw i64 %conv5.i, 8
  %or7.i = or i64 %or.i, %shl6.i
  %arrayidx8.i = getelementptr inbounds i8, i8* %buf, i64 3
  %19 = load i8, i8* %arrayidx8.i, align 1, !tbaa !10
  %conv9.i = zext i8 %19 to i64
  %or10.i = or i64 %or7.i, %conv9.i
  %add.ptr.i = getelementptr inbounds i8, i8* %buf, i64 4
  %20 = load i8, i8* %add.ptr.i, align 1, !tbaa !10
  %conv13.i = zext i8 %20 to i64
  %shl14.i = shl nuw nsw i64 %conv13.i, 24
  %arrayidx16.i = getelementptr inbounds i8, i8* %buf, i64 5
  %21 = load i8, i8* %arrayidx16.i, align 1, !tbaa !10
  %conv17.i = zext i8 %21 to i64
  %shl18.i = shl nuw nsw i64 %conv17.i, 16
  %arrayidx21.i = getelementptr inbounds i8, i8* %buf, i64 6
  %22 = load i8, i8* %arrayidx21.i, align 1, !tbaa !10
  %conv22.i = zext i8 %22 to i64
  %shl23.i = shl nuw nsw i64 %conv22.i, 8
  %arrayidx26.i = getelementptr inbounds i8, i8* %buf, i64 7
  %23 = load i8, i8* %arrayidx26.i, align 1, !tbaa !10
  %conv27.i = zext i8 %23 to i64
  %shl29.i = shl nuw i64 %or10.i, 32
  %or19.i = or i64 %shl29.i, %shl14.i
  %or24.i = or i64 %or19.i, %shl18.i
  %or28.i = or i64 %or24.i, %shl23.i
  %add.i = or i64 %or28.i, %conv27.i
  %cmp.i = icmp eq i32 %serial_type, 6
  %i.i = bitcast %struct.sqlite3_value* %pMem to i64*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 8, !tbaa !10
  br label %serialGet.exit

if.else.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 1
  %and.i = and i64 %add.i, 9218868437227405312
  %cmp35.i = icmp eq i64 %and.i, 9218868437227405312
  %and37.i = and i64 %add.i, 4503599627370495
  %cmp38.i = icmp ne i64 %and37.i, 0
  %24 = and i1 %cmp35.i, %cmp38.i
  %conv40.i = select i1 %24, i16 1, i16 8
  br label %serialGet.exit

serialGet.exit:                                   ; preds = %if.else.i, %if.then.i
  %conv40.sink.i = phi i16 [ 4, %if.then.i ], [ %conv40.i, %if.else.i ]
  %25 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %conv40.sink.i, i16* %25, align 8
  br label %return

sw.bb79:                                          ; preds = %entry, %entry
  %sub = add nsw i32 %serial_type, -8
  %conv80 = zext i32 %sub to i64
  %i82 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv80, i64* %i82, align 8, !tbaa !10
  %flags83 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags83, align 8, !tbaa !28
  br label %return

sw.default:                                       ; preds = %entry
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 5
  store i8* %buf, i8** %z, align 8, !tbaa !26
  %sub84 = add i32 %serial_type, -12
  %div = lshr i32 %sub84, 1
  %n85 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 %div, i32* %n85, align 4, !tbaa !29
  %and = and i32 %serial_type, 1
  %idxprom = zext i32 %and to i64
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* @sqlite3VdbeSerialGet.aFlag, i64 0, i64 %idxprom
  %26 = load i16, i16* %arrayidx86, align 2, !tbaa !36
  %flags87 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %26, i16* %flags87, align 8, !tbaa !28
  br label %return

return:                                           ; preds = %sw.default, %sw.bb79, %serialGet.exit, %sw.bb48, %sw.bb29, %sw.bb15, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ 0, %sw.bb79 ], [ 8, %serialGet.exit ], [ 6, %sw.bb48 ], [ 4, %sw.bb29 ], [ 3, %sw.bb15 ], [ 2, %sw.bb6 ], [ 1, %sw.bb3 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRelease(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialTypeLen(i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3VdbeOneByteSerialTypeLen(i8) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3GetVarint32(i8*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8* @sqlite3BtreePayloadFetch(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreePayloadSize(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetNull(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor**, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeFirst(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeCursorHintFlags(%struct.BtCursor*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* nocapture readonly, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare void @printProgress(i64, i32, i64)

declare void @printInt(i64, i64, i32, i64)

declare void @printDouble(double, i64, i32, i64)

declare void @printPtrAndValue(i64, i64, i64, i32, i64, i1)

define i32 @jittedFunction(%struct.Vdbe* %0, i8* %1, i32* %2, i8* %3, i8* %4) !dbg !37 {
  %6 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 19, !dbg !41
  %7 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6, align 8, !dbg !43
  %8 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 21, !dbg !44
  %9 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !45
  %10 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 23, !dbg !46
  %11 = load %struct.VdbeOp*, %struct.VdbeOp** %10, align 8, !dbg !47
  %12 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 0, !dbg !48
  %13 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !49
  br label %14, !dbg !50

14:                                               ; preds = %10618, %10539, %.critedge1, %10706, %5
  %15 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 10, !dbg !51
  %16 = load i32, i32* %15, align 4, !dbg !52
  switch i32 %16, label %17 [
    i32 105, label %22
    i32 1, label %22
    i32 2, label %22
    i32 3, label %31
    i32 4, label %49
    i32 5, label %85
    i32 6, label %90
    i32 7, label %107
    i32 8, label %124
    i32 9, label %141
    i32 10, label %158
    i32 11, label %175
    i32 12, label %199
    i32 13, label %456
    i32 14, label %511
    i32 15, label %768
    i32 16, label %823
    i32 17, label %840
    i32 18, label %906
    i32 19, label %930
    i32 20, label %1187
    i32 21, label %1444
    i32 22, label %1701
    i32 23, label %1958
    i32 24, label %2215
    i32 25, label %2215
    i32 26, label %2472
    i32 27, label %2472
    i32 28, label %2523
    i32 29, label %3404
    i32 30, label %3435
    i32 31, label %3447
    i32 32, label %3702
    i32 33, label %3708
    i32 34, label %3710
    i32 35, label %3830
    i32 36, label %3849
    i32 37, label %4106
    i32 38, label %4147
    i32 39, label %4403
    i32 40, label %4515
    i32 41, label %4771
    i32 42, label %4883
    i32 43, label %5140
    i32 44, label %5182
    i32 45, label %5439
    i32 46, label %5494
    i32 47, label %5751
    i32 48, label %5793
    i32 49, label %6050
    i32 50, label %6105
    i32 51, label %6361
    i32 52, label %6618
    i32 53, label %6875
    i32 54, label %7132
    i32 55, label %7139
    i32 56, label %7396
    i32 57, label %7403
    i32 58, label %8050
    i32 59, label %8066
    i32 60, label %8078
    i32 61, label %8090
    i32 62, label %8098
    i32 63, label %8122
    i32 64, label %8131
    i32 65, label %8386
    i32 66, label %8643
    i32 67, label %8900
    i32 68, label %8998
    i32 69, label %9002
    i32 70, label %9009
    i32 71, label %9014
    i32 72, label %.critedge
    i32 73, label %9025
    i32 74, label %9282
    i32 75, label %9289
    i32 76, label %9546
    i32 77, label %9553
    i32 78, label %9632
    i32 79, label %9716
    i32 80, label %9720
    i32 81, label %9975
    i32 82, label %10232
    i32 83, label %10489
    i32 84, label %10507
    i32 85, label %10516
    i32 86, label %10713
    i32 87, label %10521
    i32 88, label %10539
    i32 89, label %10546
    i32 90, label %.critedge1
    i32 91, label %10559
    i32 92, label %10570
    i32 93, label %10579
    i32 94, label %10618
    i32 95, label %10625
    i32 96, label %10688
    i32 97, label %10706
    i32 98, label %10713
    i32 99, label %10715
    i32 100, label %10737
    i32 101, label %10760
    i32 102, label %10783
    i32 103, label %10801
    i32 104, label %10819
  ], !dbg !53

17:                                               ; preds = %14
  %18 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !54
  store i32 0, i32* %18, align 4, !dbg !57
  %19 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !58
  %20 = load i32, i32* %19, align 4, !dbg !59
  %21 = add i32 %20, 1, !dbg !60
  store i32 %21, i32* %19, align 4, !dbg !61
  br label %10715, !dbg !62

22:                                               ; preds = %10833, %14, %14, %14
  %23 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 6, i32 5, i32 -1, i8 1), !dbg !63
  %24 = ptrtoint %struct.VdbeCursor* %23 to i64, !dbg !66
  %25 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %23, i32 0, i32 13, !dbg !67
  %26 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, !dbg !68
  %27 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %26, i32 0, i32 6, !dbg !69
  %28 = bitcast %union.p4union* %27 to %struct.KeyInfo**, !dbg !70
  %29 = load %struct.KeyInfo*, %struct.KeyInfo** %28, align 8, !dbg !71
  store %struct.KeyInfo* %29, %struct.KeyInfo** %25, align 8, !dbg !72
  %30 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %23), !dbg !73
  br label %31, !dbg !74

31:                                               ; preds = %22, %14
  %32 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 3, !dbg !75
  %33 = call i8* @llvm.stacksave(), !dbg !78
  %34 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %32, i32 0, i32 4, !dbg !79
  %35 = load i32, i32* %34, align 4, !dbg !82
  %36 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %35, !dbg !83
  %37 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %36, i32 0, i32 1, !dbg !78
  %38 = load i16, i16* %37, align 2, !dbg !78
  %39 = and i16 %38, 9216, !dbg !78
  %40 = icmp ne i16 %39, 0, !dbg !78
  %41 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %40, label %42, label %44, !dbg !78

42:                                               ; preds = %31
  %43 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %36), !dbg !78
  store %struct.sqlite3_value* %43, %struct.sqlite3_value** %41, align 8, !dbg !78
  br label %45, !dbg !78

44:                                               ; preds = %31
  store i16 4, i16* %37, align 2, !dbg !78
  store %struct.sqlite3_value* %36, %struct.sqlite3_value** %41, align 8, !dbg !78
  br label %45, !dbg !78

45:                                               ; preds = %44, %42
  %46 = load %struct.sqlite3_value*, %struct.sqlite3_value** %41, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %33), !dbg !78
  %47 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %46, i32 0, i32 0, i32 0, !dbg !84
  %48 = bitcast double* %47 to i64*, !dbg !85
  store i64 0, i64* %48, align 4, !dbg !86
  br label %49, !dbg !74

49:                                               ; preds = %45, %14
  %50 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 4, !dbg !87
  %51 = call i8* @llvm.stacksave(), !dbg !90
  %52 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %50, i32 0, i32 4, !dbg !79
  %53 = load i32, i32* %52, align 4, !dbg !82
  %54 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %53, !dbg !83
  %55 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %54, i32 0, i32 1, !dbg !90
  %56 = load i16, i16* %55, align 2, !dbg !90
  %57 = and i16 %56, 9216, !dbg !90
  %58 = icmp ne i16 %57, 0, !dbg !90
  %59 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %58, label %60, label %62, !dbg !90

60:                                               ; preds = %49
  %61 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %54), !dbg !90
  store %struct.sqlite3_value* %61, %struct.sqlite3_value** %59, align 8, !dbg !90
  br label %63, !dbg !90

62:                                               ; preds = %49
  store i16 4, i16* %55, align 2, !dbg !90
  store %struct.sqlite3_value* %54, %struct.sqlite3_value** %59, align 8, !dbg !90
  br label %63, !dbg !90

63:                                               ; preds = %62, %60
  %64 = load %struct.sqlite3_value*, %struct.sqlite3_value** %59, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %51), !dbg !90
  %65 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 0, i32 1, !dbg !91
  store i16 1, i16* %65, align 2, !dbg !92
  %66 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 0, i32 4, !dbg !93
  store i32 0, i32* %66, align 4, !dbg !94
  %67 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 1, !dbg !95
  %68 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %67, i32 0, i32 1, !dbg !96
  %69 = load i16, i16* %68, align 2, !dbg !96
  %70 = and i16 %69, 9216, !dbg !96
  %71 = icmp ne i16 %70, 0, !dbg !96
  br i1 %71, label %72, label %73, !dbg !96

72:                                               ; preds = %63
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %67), !dbg !96
  br label %74, !dbg !96

73:                                               ; preds = %63
  store i16 1, i16* %68, align 2, !dbg !96
  br label %74, !dbg !96

74:                                               ; preds = %73, %72
  store i16 1, i16* %68, align 2, !dbg !97
  %75 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %67, i32 0, i32 4, !dbg !98
  store i32 0, i32* %75, align 4, !dbg !99
  %76 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %67, i32 1, !dbg !95
  %77 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %76, i32 0, i32 1, !dbg !96
  %78 = load i16, i16* %77, align 2, !dbg !96
  %79 = and i16 %78, 9216, !dbg !96
  %80 = icmp ne i16 %79, 0, !dbg !96
  br i1 %80, label %81, label %82, !dbg !96

81:                                               ; preds = %74
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %76), !dbg !96
  br label %83, !dbg !96

82:                                               ; preds = %74
  store i16 1, i16* %77, align 2, !dbg !96
  br label %83, !dbg !96

83:                                               ; preds = %82, %81
  store i16 1, i16* %77, align 2, !dbg !97
  %84 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %76, i32 0, i32 4, !dbg !98
  store i32 0, i32* %84, align 4, !dbg !99
  br label %85, !dbg !74

85:                                               ; preds = %83, %14
  %86 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !100
  %87 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %86, i32 0, i32 1, !dbg !103
  store i16 4, i16* %87, align 2, !dbg !104
  %88 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %86, i32 0, i32 0, i32 0, !dbg !105
  %89 = bitcast double* %88 to i64*, !dbg !106
  store i64 5, i64* %89, align 4, !dbg !107
  br label %10625, !dbg !108

90:                                               ; preds = %14
  %91 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %92 = getelementptr %struct.sqlite3, %struct.sqlite3* %91, i32 0, i32 4, !dbg !112
  %93 = load %struct.Db*, %struct.Db** %92, align 8, !dbg !113
  %94 = getelementptr %struct.Db, %struct.Db* %93, i32 0, i32 1, !dbg !114
  %95 = load %struct.Btree*, %struct.Btree** %94, align 8, !dbg !115
  %96 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 3, i32 4, i32 0, i8 0), !dbg !116
  %97 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 2, !dbg !117
  store i8 1, i8* %97, align 1, !dbg !118
  %98 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 5, !dbg !119
  %99 = load i8, i8* %98, align 1, !dbg !120
  %100 = or i8 %99, 4, !dbg !121
  store i8 %100, i8* %98, align 1, !dbg !122
  %101 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 15, !dbg !123
  store i32 4, i32* %101, align 4, !dbg !124
  %102 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 12, i32 0, !dbg !125
  %103 = load %struct.BtCursor*, %struct.BtCursor** %102, align 8, !dbg !126
  %104 = call i32 @sqlite3BtreeCursor(%struct.Btree* %95, i32 4, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %103), !dbg !127
  %105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %105, align 8, !dbg !129
  %106 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %96, i32 0, i32 4, !dbg !130
  store i8 1, i8* %106, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %103, i32 0), !dbg !132
  br label %107, !dbg !74

107:                                              ; preds = %90, %14
  %108 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %109 = getelementptr %struct.sqlite3, %struct.sqlite3* %108, i32 0, i32 4, !dbg !112
  %110 = load %struct.Db*, %struct.Db** %109, align 8, !dbg !113
  %111 = getelementptr %struct.Db, %struct.Db* %110, i32 0, i32 1, !dbg !114
  %112 = load %struct.Btree*, %struct.Btree** %111, align 8, !dbg !115
  %113 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 4, i32 14, i32 0, i8 0), !dbg !116
  %114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 2, !dbg !117
  store i8 1, i8* %114, align 1, !dbg !118
  %115 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 5, !dbg !119
  %116 = load i8, i8* %115, align 1, !dbg !120
  %117 = or i8 %116, 4, !dbg !121
  store i8 %117, i8* %115, align 1, !dbg !122
  %118 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 15, !dbg !123
  store i32 2, i32* %118, align 4, !dbg !124
  %119 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 12, i32 0, !dbg !125
  %120 = load %struct.BtCursor*, %struct.BtCursor** %119, align 8, !dbg !126
  %121 = call i32 @sqlite3BtreeCursor(%struct.Btree* %112, i32 2, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %120), !dbg !127
  %122 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %122, align 8, !dbg !129
  %123 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %113, i32 0, i32 4, !dbg !130
  store i8 1, i8* %123, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %120, i32 0), !dbg !132
  br label %124, !dbg !74

124:                                              ; preds = %107, %14
  %125 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %126 = getelementptr %struct.sqlite3, %struct.sqlite3* %125, i32 0, i32 4, !dbg !112
  %127 = load %struct.Db*, %struct.Db** %126, align 8, !dbg !113
  %128 = getelementptr %struct.Db, %struct.Db* %127, i32 0, i32 1, !dbg !114
  %129 = load %struct.Btree*, %struct.Btree** %128, align 8, !dbg !115
  %130 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 0, i32 5, i32 0, i8 0), !dbg !116
  %131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 2, !dbg !117
  store i8 1, i8* %131, align 1, !dbg !118
  %132 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 5, !dbg !119
  %133 = load i8, i8* %132, align 1, !dbg !120
  %134 = or i8 %133, 4, !dbg !121
  store i8 %134, i8* %132, align 1, !dbg !122
  %135 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 15, !dbg !123
  store i32 8, i32* %135, align 4, !dbg !124
  %136 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 12, i32 0, !dbg !125
  %137 = load %struct.BtCursor*, %struct.BtCursor** %136, align 8, !dbg !126
  %138 = call i32 @sqlite3BtreeCursor(%struct.Btree* %129, i32 8, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %137), !dbg !127
  %139 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %139, align 8, !dbg !129
  %140 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %130, i32 0, i32 4, !dbg !130
  store i8 1, i8* %140, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %137, i32 0), !dbg !132
  br label %141, !dbg !74

141:                                              ; preds = %124, %14
  %142 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %143 = getelementptr %struct.sqlite3, %struct.sqlite3* %142, i32 0, i32 4, !dbg !112
  %144 = load %struct.Db*, %struct.Db** %143, align 8, !dbg !113
  %145 = getelementptr %struct.Db, %struct.Db* %144, i32 0, i32 1, !dbg !114
  %146 = load %struct.Btree*, %struct.Btree** %145, align 8, !dbg !115
  %147 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 1, i32 6, i32 0, i8 0), !dbg !116
  %148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 2, !dbg !117
  store i8 1, i8* %148, align 1, !dbg !118
  %149 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 5, !dbg !119
  %150 = load i8, i8* %149, align 1, !dbg !120
  %151 = or i8 %150, 4, !dbg !121
  store i8 %151, i8* %149, align 1, !dbg !122
  %152 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 15, !dbg !123
  store i32 7, i32* %152, align 4, !dbg !124
  %153 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 12, i32 0, !dbg !125
  %154 = load %struct.BtCursor*, %struct.BtCursor** %153, align 8, !dbg !126
  %155 = call i32 @sqlite3BtreeCursor(%struct.Btree* %146, i32 7, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %154), !dbg !127
  %156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %156, align 8, !dbg !129
  %157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %147, i32 0, i32 4, !dbg !130
  store i8 1, i8* %157, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %154, i32 0), !dbg !132
  br label %158, !dbg !74

158:                                              ; preds = %141, %14
  %159 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %160 = getelementptr %struct.sqlite3, %struct.sqlite3* %159, i32 0, i32 4, !dbg !112
  %161 = load %struct.Db*, %struct.Db** %160, align 8, !dbg !113
  %162 = getelementptr %struct.Db, %struct.Db* %161, i32 0, i32 1, !dbg !114
  %163 = load %struct.Btree*, %struct.Btree** %162, align 8, !dbg !115
  %164 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 2, i32 6, i32 0, i8 0), !dbg !116
  %165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 2, !dbg !117
  store i8 1, i8* %165, align 1, !dbg !118
  %166 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 5, !dbg !119
  %167 = load i8, i8* %166, align 1, !dbg !120
  %168 = or i8 %167, 4, !dbg !121
  store i8 %168, i8* %166, align 1, !dbg !122
  %169 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 15, !dbg !123
  store i32 6, i32* %169, align 4, !dbg !124
  %170 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 12, i32 0, !dbg !125
  %171 = load %struct.BtCursor*, %struct.BtCursor** %170, align 8, !dbg !126
  %172 = call i32 @sqlite3BtreeCursor(%struct.Btree* %163, i32 6, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %171), !dbg !127
  %173 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %173, align 8, !dbg !129
  %174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %164, i32 0, i32 4, !dbg !130
  store i8 1, i8* %174, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %171, i32 0), !dbg !132
  br label %175, !dbg !74

175:                                              ; preds = %158, %14
  %176 = call i8* @llvm.stacksave(), !dbg !133
  %177 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %178 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %177, i32 3, !dbg !137
  %179 = load %struct.VdbeCursor*, %struct.VdbeCursor** %178, align 8, !dbg !138
  %180 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %180, align 4, !dbg !140
  %181 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %179, i32 0, i32 0, !dbg !141
  %182 = load i8, i8* %181, align 1, !dbg !142
  %183 = icmp eq i8 %182, 1, !dbg !143
  %184 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %184, align 4, !dbg !145
  br i1 %183, label %185, label %187, !dbg !146

185:                                              ; preds = %175
  %186 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %179, i32* %180), !dbg !147
  store i32 %186, i32* %184, align 4, !dbg !148
  br label %193, !dbg !149

187:                                              ; preds = %175
  %188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %179, i32 0, i32 12, i32 0, !dbg !150
  %189 = load %struct.BtCursor*, %struct.BtCursor** %188, align 8, !dbg !151
  %190 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %189, i32* %180), !dbg !152
  store i32 %190, i32* %184, align 4, !dbg !153
  %191 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %179, i32 0, i32 3, !dbg !154
  store i8 0, i8* %191, align 1, !dbg !155
  %192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %179, i32 0, i32 9, !dbg !156
  store i32 0, i32* %192, align 4, !dbg !157
  br label %193, !dbg !158

193:                                              ; preds = %187, %185
  %194 = load i32, i32* %184, align 4, !dbg !159
  %195 = load i32, i32* %180, align 4, !dbg !160
  %196 = trunc i32 %195 to i8, !dbg !161
  %197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %179, i32 0, i32 2, !dbg !162
  store i8 %196, i8* %197, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %176), !dbg !164
  %198 = icmp ne i32 %195, 0, !dbg !165
  br i1 %198, label %8090, label %199, !dbg !166

199:                                              ; preds = %8088, %193, %14
  %200 = call i8* @llvm.stacksave(), !dbg !167
  %201 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %202 = load i8, i8* %201, align 1, !dbg !171
  %203 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %203, align 4, !dbg !173
  %204 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %205 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %206 = load %struct.VdbeCursor*, %struct.VdbeCursor** %204, align 8, !dbg !176
  store %struct.VdbeCursor* %206, %struct.VdbeCursor** %205, align 8, !dbg !177
  %207 = alloca i8*, align 8, !dbg !178
  %208 = alloca i32, align 4, !dbg !179
  %209 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %205, i32* %203), !dbg !180
  %210 = load %struct.VdbeCursor*, %struct.VdbeCursor** %205, align 8, !dbg !181
  %211 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 16, !dbg !183
  %213 = load i16, i16* %212, align 2, !dbg !184
  %214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 19, !dbg !185
  %215 = load i32*, i32** %214, align 8, !dbg !186
  %216 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 0, !dbg !187
  %217 = load i8, i8* %216, align 1, !dbg !188
  %218 = icmp ne i8 %217, 3, !dbg !189
  %219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 2, !dbg !190
  %220 = load i8, i8* %219, align 1, !dbg !191
  %221 = icmp ne i8 %220, 0, !dbg !192
  %222 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 14, !dbg !193
  %223 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 21, !dbg !194
  %224 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 22, !dbg !195
  %225 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 20, !dbg !196
  %226 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 17, !dbg !197
  %227 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 9, !dbg !198
  %228 = load i32, i32* %227, align 4, !dbg !199
  %229 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %230 = load i32, i32* %229, align 4, !dbg !201
  %231 = icmp ne i32 %228, %230, !dbg !202
  br i1 %231, label %232, label %274, !dbg !203

232:                                              ; preds = %199
  br i1 %221, label %254, label %249, !dbg !204

233:                                              ; preds = %249, %256
  %234 = load i32, i32* %229, align 4, !dbg !205
  store i32 %234, i32* %227, align 4, !dbg !206
  %235 = load i8*, i8** %225, align 8, !dbg !207
  %236 = load i8, i8* %235, align 1, !dbg !208
  %237 = icmp sgt i8 %236, -1, !dbg !211
  br i1 %237, label %238, label %240, !dbg !212

238:                                              ; preds = %233
  %239 = zext i8 %236 to i32, !dbg !213
  store i32 %239, i32* %215, align 4, !dbg !214
  store i32 1, i32* %222, align 4, !dbg !215
  br label %243, !dbg !216

240:                                              ; preds = %233
  %241 = call i8 @sqlite3GetVarint32(i8* %235, i32* %215), !dbg !217
  %242 = zext i8 %241 to i32, !dbg !218
  store i32 %242, i32* %222, align 4, !dbg !219
  br label %243, !dbg !220

243:                                              ; preds = %240, %238
  store i16 0, i16* %226, align 2, !dbg !221
  %244 = load i32, i32* %224, align 4, !dbg !222
  %245 = load i32, i32* %215, align 4, !dbg !223
  %246 = icmp ult i32 %244, %245, !dbg !224
  br i1 %246, label %248, label %247, !dbg !225

247:                                              ; preds = %243
  store i8* %235, i8** %207, align 8, !dbg !226
  br label %367, !dbg !227

248:                                              ; preds = %243
  store i8* null, i8** %225, align 8, !dbg !228
  store i32 0, i32* %224, align 4, !dbg !229
  br label %274, !dbg !230

249:                                              ; preds = %232
  %250 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 12, i32 0, !dbg !231
  %251 = load %struct.BtCursor*, %struct.BtCursor** %250, align 8, !dbg !232
  %252 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %251), !dbg !233
  store i32 %252, i32* %223, align 4, !dbg !234
  %253 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %251, i32* %224), !dbg !235
  store i8* %253, i8** %225, align 8, !dbg !236
  br label %233, !dbg !237

254:                                              ; preds = %232
  %255 = icmp eq i8 %217, 3, !dbg !238
  br i1 %255, label %256, label %267, !dbg !239

256:                                              ; preds = %254
  %257 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 10, !dbg !240
  %258 = load i32, i32* %257, align 4, !dbg !241
  %259 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %258, !dbg !242
  %260 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %259, i32 0, i32 1, !dbg !243
  %261 = load i16, i16* %260, align 2, !dbg !244
  %262 = and i16 %261, 16, !dbg !245
  %263 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %259, i32 0, i32 4, !dbg !246
  %264 = load i32, i32* %263, align 4, !dbg !247
  store i32 %264, i32* %223, align 4, !dbg !248
  store i32 %264, i32* %224, align 4, !dbg !249
  %265 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %259, i32 0, i32 5, !dbg !250
  %266 = load i8*, i8** %265, align 8, !dbg !251
  store i8* %266, i8** %225, align 8, !dbg !252
  br label %233, !dbg !253

267:                                              ; preds = %254
  %268 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 1, !dbg !254
  %269 = load i16, i16* %268, align 2, !dbg !254
  %270 = and i16 %269, 9216, !dbg !254
  %271 = icmp ne i16 %270, 0, !dbg !254
  br i1 %271, label %272, label %273, !dbg !254

272:                                              ; preds = %267
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %211), !dbg !254
  br label %455, !dbg !254

273:                                              ; preds = %267
  store i16 1, i16* %268, align 2, !dbg !254
  br label %455, !dbg !254

274:                                              ; preds = %248, %199
  %275 = load i16, i16* %226, align 2, !dbg !255
  %276 = icmp ule i16 %275, 2, !dbg !256
  br i1 %276, label %359, label %356, !dbg !257

277:                                              ; preds = %356, %445
  %278 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 1, !dbg !258
  %279 = load i16, i16* %278, align 2, !dbg !259
  %280 = and i16 9216, %279, !dbg !260
  %281 = icmp eq i16 0, %280, !dbg !261
  br i1 %281, label %282, label %286, !dbg !262

282:                                              ; preds = %277
  %283 = icmp ne i16 %280, 0, !dbg !263
  br i1 %283, label %284, label %285, !dbg !263

284:                                              ; preds = %282
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %211), !dbg !263
  br label %286, !dbg !263

285:                                              ; preds = %282
  store i16 1, i16* %278, align 2, !dbg !263
  br label %286, !dbg !263

286:                                              ; preds = %284, %285, %277
  %287 = load i32, i32* %208, align 4, !dbg !264
  %288 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 23, i32 2, !dbg !265
  %289 = load i32, i32* %288, align 4, !dbg !266
  %290 = load i32, i32* %224, align 4, !dbg !267
  %291 = getelementptr i32, i32* %215, i32 3, !dbg !268
  %292 = load i32, i32* %291, align 4, !dbg !269
  %293 = icmp sge i32 %290, %292, !dbg !270
  br i1 %293, label %294, label %334, !dbg !271

294:                                              ; preds = %286
  %295 = load i8*, i8** %225, align 8, !dbg !272
  %296 = ptrtoint i8* %295 to i64, !dbg !273
  %297 = getelementptr i32, i32* %215, i32 2, !dbg !274
  %298 = load i32, i32* %297, align 4, !dbg !275
  %299 = zext i32 %298 to i64, !dbg !276
  %300 = add i64 %296, %299, !dbg !277
  %301 = inttoptr i64 %300 to i8*, !dbg !278
  store i8* %301, i8** %207, align 8, !dbg !279
  %302 = load i32, i32* %208, align 4, !dbg !280
  %303 = icmp ult i32 %302, 12, !dbg !281
  br i1 %303, label %304, label %306, !dbg !282

304:                                              ; preds = %294
  %305 = call i32 @sqlite3VdbeSerialGet(i8* %301, i32 %302, %struct.sqlite3_value* %211), !dbg !283
  br label %455, !dbg !284

306:                                              ; preds = %294
  %307 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %307, align 2, !dbg !286
  %308 = getelementptr i16, i16* %307, i32 1, !dbg !287
  store i16 514, i16* %308, align 2, !dbg !288
  %309 = load i32, i32* %208, align 4, !dbg !289
  %310 = sub i32 %309, 12, !dbg !290
  %311 = lshr i32 %310, 1, !dbg !291
  %312 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 4, !dbg !292
  store i32 %311, i32* %312, align 4, !dbg !293
  %313 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 2, !dbg !294
  store i8 %202, i8* %313, align 1, !dbg !295
  %314 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 5, !dbg !296
  %315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 7, !dbg !297
  %316 = load i32, i32* %315, align 4, !dbg !298
  %317 = add i32 %311, 2, !dbg !299
  %318 = icmp slt i32 %316, %317, !dbg !300
  br i1 %318, label %319, label %321, !dbg !301

319:                                              ; preds = %306
  store i16 1, i16* %278, align 2, !dbg !302
  %320 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %211, i32 %317, i32 0), !dbg !303
  br label %324, !dbg !304

321:                                              ; preds = %306
  %322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 6, !dbg !305
  %323 = load i8*, i8** %322, align 8, !dbg !306
  store i8* %323, i8** %314, align 8, !dbg !307
  br label %324, !dbg !308

324:                                              ; preds = %321, %319
  %325 = zext i32 %311 to i64, !dbg !309
  %326 = load i8*, i8** %314, align 8, !dbg !310
  %327 = load i8*, i8** %207, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %326, i8* %327, i64 %325, i1 false), !dbg !312
  %328 = getelementptr i8, i8* %326, i32 %311, !dbg !313
  store i8 0, i8* %328, align 1, !dbg !314
  %329 = add i32 %311, 1, !dbg !315
  %330 = getelementptr i8, i8* %326, i32 %329, !dbg !316
  store i8 0, i8* %330, align 1, !dbg !317
  %331 = and i32 %309, 1, !dbg !318
  %332 = getelementptr i16, i16* %307, i32 %331, !dbg !319
  %333 = load i16, i16* %332, align 2, !dbg !320
  store i16 %333, i16* %278, align 2, !dbg !321
  br label %455, !dbg !322

334:                                              ; preds = %286
  %335 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 2, !dbg !323
  store i8 %202, i8* %335, align 1, !dbg !324
  %336 = load i32, i32* %208, align 4, !dbg !325
  %337 = and i32 %336, 1, !dbg !326
  %338 = icmp eq i32 %337, 0, !dbg !327
  %339 = icmp sge i32 %336, 12, !dbg !328
  %340 = and i1 %339, %338, !dbg !329
  %341 = call i32 @sqlite3VdbeSerialTypeLen(i32 %336), !dbg !330
  %342 = icmp eq i32 %341, 0, !dbg !331
  br i1 %342, label %354, label %343, !dbg !332

343:                                              ; preds = %334
  %344 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 12, i32 0, !dbg !333
  %345 = load %struct.BtCursor*, %struct.BtCursor** %344, align 8, !dbg !334
  %346 = getelementptr i32, i32* %215, i32 2, !dbg !335
  %347 = load i32, i32* %346, align 4, !dbg !336
  %348 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %345, i32 %347, i32 %341, %struct.sqlite3_value* %211), !dbg !337
  %349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 5, !dbg !338
  %350 = load i8*, i8** %349, align 8, !dbg !339
  %351 = call i32 @sqlite3VdbeSerialGet(i8* %350, i32 %336, %struct.sqlite3_value* %211), !dbg !340
  %352 = load i16, i16* %278, align 2, !dbg !341
  %353 = and i16 %352, -4097, !dbg !342
  store i16 %353, i16* %278, align 2, !dbg !343
  br label %455, !dbg !344

354:                                              ; preds = %334
  %355 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %336, %struct.sqlite3_value* %211), !dbg !345
  br label %455, !dbg !346

356:                                              ; preds = %274
  %357 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 23, i32 2, !dbg !347
  %358 = load i32, i32* %357, align 4, !dbg !348
  store i32 %358, i32* %208, align 4, !dbg !349
  br label %277, !dbg !350

359:                                              ; preds = %274
  %360 = load i32, i32* %222, align 4, !dbg !351
  %361 = load i32, i32* %215, align 4, !dbg !352
  %362 = icmp ult i32 %360, %361, !dbg !353
  br i1 %362, label %363, label %444, !dbg !354

363:                                              ; preds = %359
  %364 = load i8*, i8** %225, align 8, !dbg !355
  %365 = icmp eq i8* %364, null, !dbg !356
  br i1 %365, label %367, label %366, !dbg !357

366:                                              ; preds = %363
  store i8* %364, i8** %207, align 8, !dbg !358
  br label %367, !dbg !359

367:                                              ; preds = %366, %363, %247
  %368 = alloca i32, align 4, !dbg !360
  %369 = load i16, i16* %226, align 2, !dbg !361
  %370 = zext i16 %369 to i32, !dbg !362
  store i32 %370, i32* %368, align 4, !dbg !363
  %371 = alloca i64, align 8, !dbg !364
  %372 = getelementptr i32, i32* %215, i32 %370, !dbg !365
  %373 = load i32, i32* %372, align 4, !dbg !366
  %374 = zext i32 %373 to i64, !dbg !367
  store i64 %374, i64* %371, align 4, !dbg !368
  %375 = load i8*, i8** %207, align 8, !dbg !369
  %376 = load i32, i32* %222, align 4, !dbg !370
  %377 = alloca i8*, align 8, !dbg !371
  %378 = getelementptr i8, i8* %375, i32 %376, !dbg !372
  store i8* %378, i8** %377, align 8, !dbg !373
  %379 = load i32, i32* %215, align 4, !dbg !374
  %380 = getelementptr i8, i8* %375, i32 %379, !dbg !375
  br label %381, !dbg !376

381:                                              ; preds = %388, %367
  %382 = load i32, i32* %368, align 4, !dbg !377
  %383 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %210, i32 0, i32 23, i32 %382, !dbg !378
  %384 = load i8*, i8** %377, align 8, !dbg !379
  %385 = load i8, i8* %384, align 1, !dbg !380
  %386 = zext i8 %385 to i32, !dbg !381
  store i32 %386, i32* %208, align 4, !dbg !382
  store i32 %386, i32* %383, align 4, !dbg !383
  %387 = icmp sgt i8 %385, -1, !dbg !384
  br i1 %387, label %411, label %402, !dbg !385

388:                                              ; preds = %402, %411
  %389 = load i32, i32* %368, align 4, !dbg !386
  %390 = add i32 %389, 1, !dbg !387
  store i32 %390, i32* %368, align 4, !dbg !388
  %391 = load i64, i64* %371, align 4, !dbg !389
  %392 = and i64 4294967295, %391, !dbg !390
  %393 = trunc i64 %392 to i32, !dbg !391
  %394 = getelementptr i32, i32* %215, i32 %390, !dbg !392
  store i32 %393, i32* %394, align 4, !dbg !393
  %395 = load i32, i32* %368, align 4, !dbg !394
  %396 = icmp sle i32 %395, 2, !dbg !395
  %397 = load i8*, i8** %377, align 8, !dbg !396
  %398 = ptrtoint i8* %397 to i64, !dbg !397
  %399 = ptrtoint i8* %380 to i64, !dbg !398
  %400 = icmp ult i64 %398, %399, !dbg !399
  %401 = and i1 %396, %400, !dbg !400
  br i1 %401, label %381, label %420, !dbg !401

402:                                              ; preds = %381
  %403 = load i8*, i8** %377, align 8, !dbg !402
  %404 = call i8 @sqlite3GetVarint32(i8* %403, i32* %208), !dbg !403
  %405 = getelementptr i8, i8* %403, i8 %404, !dbg !404
  store i8* %405, i8** %377, align 8, !dbg !405
  %406 = load i32, i32* %208, align 4, !dbg !406
  store i32 %406, i32* %383, align 4, !dbg !407
  %407 = load i64, i64* %371, align 4, !dbg !408
  %408 = call i32 @sqlite3VdbeSerialTypeLen(i32 %406), !dbg !409
  %409 = zext i32 %408 to i64, !dbg !410
  %410 = add i64 %407, %409, !dbg !411
  store i64 %410, i64* %371, align 4, !dbg !412
  br label %388, !dbg !413

411:                                              ; preds = %381
  %412 = getelementptr i8, i8* %384, i32 1, !dbg !414
  store i8* %412, i8** %377, align 8, !dbg !415
  %413 = load i32, i32* %208, align 4, !dbg !416
  %414 = trunc i32 %413 to i8, !dbg !417
  %415 = getelementptr i8, i8* %4, i8 %414, !dbg !418
  %416 = load i8, i8* %415, align 1, !dbg !419
  %417 = zext i8 %416 to i64, !dbg !420
  %418 = load i64, i64* %371, align 4, !dbg !421
  %419 = add i64 %418, %417, !dbg !422
  store i64 %419, i64* %371, align 4, !dbg !423
  br label %388, !dbg !424

420:                                              ; preds = %388
  %421 = load i64, i64* %371, align 4, !dbg !425
  %422 = load i32, i32* %223, align 4, !dbg !426
  %423 = zext i32 %422 to i64, !dbg !427
  %424 = icmp uge i64 %398, %399, !dbg !428
  %425 = icmp ugt i64 %398, %399, !dbg !429
  %426 = icmp ne i64 %421, %423, !dbg !430
  %427 = icmp ugt i64 %421, %423, !dbg !431
  %428 = or i1 %425, %426, !dbg !432
  %429 = and i1 %424, %428, !dbg !433
  %430 = or i1 %429, %427, !dbg !434
  br i1 %430, label %431, label %435, !dbg !435

431:                                              ; preds = %420
  %432 = load i32, i32* %215, align 4, !dbg !436
  %433 = icmp eq i32 %432, 0, !dbg !437
  br i1 %433, label %434, label %435, !dbg !438

434:                                              ; preds = %431
  store i32 0, i32* %368, align 4, !dbg !439
  store i8* %380, i8** %377, align 8, !dbg !440
  br label %435, !dbg !441

435:                                              ; preds = %434, %431, %420
  %436 = load i32, i32* %368, align 4, !dbg !442
  %437 = trunc i32 %436 to i16, !dbg !443
  store i16 %437, i16* %226, align 2, !dbg !444
  %438 = load i8*, i8** %377, align 8, !dbg !445
  %439 = ptrtoint i8* %438 to i64, !dbg !446
  %440 = load i8*, i8** %207, align 8, !dbg !447
  %441 = ptrtoint i8* %440 to i64, !dbg !448
  %442 = sub i64 %439, %441, !dbg !449
  %443 = trunc i64 %442 to i32, !dbg !450
  store i32 %443, i32* %222, align 4, !dbg !451
  br label %445, !dbg !452

444:                                              ; preds = %359
  store i32 0, i32* %208, align 4, !dbg !453
  br label %445, !dbg !454

445:                                              ; preds = %435, %444
  %446 = load i16, i16* %226, align 2, !dbg !455
  %447 = icmp sle i16 %446, 2, !dbg !456
  br i1 %447, label %448, label %277, !dbg !457

448:                                              ; preds = %445
  %449 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %211, i32 0, i32 1, !dbg !458
  %450 = load i16, i16* %449, align 2, !dbg !458
  %451 = and i16 %450, 9216, !dbg !458
  %452 = icmp ne i16 %451, 0, !dbg !458
  br i1 %452, label %453, label %454, !dbg !458

453:                                              ; preds = %448
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %211), !dbg !458
  br label %455, !dbg !458

454:                                              ; preds = %448
  store i16 1, i16* %449, align 2, !dbg !458
  br label %455, !dbg !458

455:                                              ; preds = %453, %454, %324, %304, %343, %354, %272, %273
  call void @llvm.stackrestore(i8* %200), !dbg !459
  br label %456, !dbg !74

456:                                              ; preds = %455, %14
  %457 = call i8* @llvm.stacksave(), !dbg !460
  %458 = alloca i32, align 8, !dbg !463
  %459 = alloca i32, align 8, !dbg !464
  %460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !465
  %461 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %462 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %460, i32 0, i32 1, !dbg !467
  %463 = load i16, i16* %462, align 2, !dbg !468
  %464 = alloca i16, align 8, !dbg !469
  store i16 %463, i16* %464, align 2, !dbg !470
  %465 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %461, i32 0, i32 1, !dbg !471
  %466 = load i16, i16* %465, align 2, !dbg !472
  %467 = alloca i16, align 8, !dbg !473
  store i16 %466, i16* %467, align 2, !dbg !474
  %468 = or i16 %463, %466, !dbg !475
  %469 = and i16 %468, 1, !dbg !476
  %470 = icmp ne i16 %469, 0, !dbg !477
  br i1 %470, label %471, label %472, !dbg !478

471:                                              ; preds = %456
  call void @llvm.stackrestore(i8* %457), !dbg !479
  call void @llvm.stackrestore(i8* %457), !dbg !480
  br label %823, !dbg !481

472:                                              ; preds = %456
  %473 = and i16 %463, 2, !dbg !482
  %474 = and i16 %463, 44, !dbg !483
  %475 = icmp eq i16 %473, 0, !dbg !484
  %476 = icmp ne i16 %474, 0, !dbg !485
  %477 = and i16 %466, 2, !dbg !486
  %478 = and i16 %466, 44, !dbg !487
  %479 = icmp eq i16 %477, 0, !dbg !488
  %480 = icmp ne i16 %478, 0, !dbg !489
  %481 = and i1 %475, %476, !dbg !490
  br i1 %481, label %482, label %488, !dbg !491

482:                                              ; preds = %472
  %483 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %460, i8 1, i8 1), !dbg !492
  %484 = load i16, i16* %462, align 2, !dbg !493
  %485 = and i16 %484, 15936, !dbg !493
  %486 = and i16 %463, -15937, !dbg !494
  %487 = or i16 %485, %486, !dbg !495
  store i16 %487, i16* %464, align 2, !dbg !496
  br label %488, !dbg !497

488:                                              ; preds = %482, %472
  %489 = and i1 %479, %480, !dbg !498
  br i1 %489, label %490, label %496, !dbg !499

490:                                              ; preds = %488
  %491 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %461, i8 1, i8 1), !dbg !500
  %492 = load i16, i16* %465, align 2, !dbg !501
  %493 = and i16 %492, 15936, !dbg !501
  %494 = and i16 %466, -15937, !dbg !502
  %495 = or i16 %493, %494, !dbg !503
  store i16 %495, i16* %467, align 2, !dbg !504
  br label %496, !dbg !505

496:                                              ; preds = %490, %488
  %497 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 13, !dbg !506
  %498 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %497, i32 0, i32 6, !dbg !507
  %499 = bitcast %union.p4union* %498 to %struct.CollSeq**, !dbg !508
  %500 = load %struct.CollSeq*, %struct.CollSeq** %499, align 8, !dbg !509
  %501 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %461, %struct.sqlite3_value* %460, %struct.CollSeq* %500), !dbg !510
  store i32 %501, i32* %458, align 4, !dbg !511
  %502 = icmp slt i32 %501, 0, !dbg !512
  br i1 %502, label %503, label %504, !dbg !513

503:                                              ; preds = %496
  store i32 0, i32* %459, align 4, !dbg !514
  br label %508, !dbg !515

504:                                              ; preds = %496
  %505 = icmp eq i32 %501, 0, !dbg !516
  br i1 %505, label %506, label %507, !dbg !517

506:                                              ; preds = %504
  store i32 1, i32* %459, align 4, !dbg !518
  br label %508, !dbg !519

507:                                              ; preds = %504
  store i32 0, i32* %459, align 4, !dbg !520
  br label %508, !dbg !521

508:                                              ; preds = %507, %506, %503
  store i16 %466, i16* %467, align 2, !dbg !522
  store i16 %463, i16* %464, align 2, !dbg !523
  %509 = load i32, i32* %459, align 4, !dbg !524
  %510 = icmp ne i32 %509, 0, !dbg !525
  call void @llvm.stackrestore(i8* %457), !dbg !526
  br i1 %510, label %823, label %511, !dbg !527

511:                                              ; preds = %508, %14
  %512 = call i8* @llvm.stacksave(), !dbg !167
  %513 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %514 = load i8, i8* %513, align 1, !dbg !171
  %515 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %515, align 4, !dbg !173
  %516 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %517 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %518 = load %struct.VdbeCursor*, %struct.VdbeCursor** %516, align 8, !dbg !176
  store %struct.VdbeCursor* %518, %struct.VdbeCursor** %517, align 8, !dbg !177
  %519 = alloca i8*, align 8, !dbg !178
  %520 = alloca i32, align 4, !dbg !179
  %521 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %517, i32* %515), !dbg !180
  %522 = load %struct.VdbeCursor*, %struct.VdbeCursor** %517, align 8, !dbg !181
  %523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %524 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 16, !dbg !183
  %525 = load i16, i16* %524, align 2, !dbg !184
  %526 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 19, !dbg !185
  %527 = load i32*, i32** %526, align 8, !dbg !186
  %528 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 0, !dbg !187
  %529 = load i8, i8* %528, align 1, !dbg !188
  %530 = icmp ne i8 %529, 3, !dbg !189
  %531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 2, !dbg !190
  %532 = load i8, i8* %531, align 1, !dbg !191
  %533 = icmp ne i8 %532, 0, !dbg !192
  %534 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 14, !dbg !193
  %535 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 21, !dbg !194
  %536 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 22, !dbg !195
  %537 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 20, !dbg !196
  %538 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 17, !dbg !197
  %539 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 9, !dbg !198
  %540 = load i32, i32* %539, align 4, !dbg !199
  %541 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %542 = load i32, i32* %541, align 4, !dbg !201
  %543 = icmp ne i32 %540, %542, !dbg !202
  br i1 %543, label %544, label %586, !dbg !203

544:                                              ; preds = %511
  br i1 %533, label %566, label %561, !dbg !204

545:                                              ; preds = %561, %568
  %546 = load i32, i32* %541, align 4, !dbg !205
  store i32 %546, i32* %539, align 4, !dbg !206
  %547 = load i8*, i8** %537, align 8, !dbg !207
  %548 = load i8, i8* %547, align 1, !dbg !208
  %549 = icmp sgt i8 %548, -1, !dbg !211
  br i1 %549, label %550, label %552, !dbg !212

550:                                              ; preds = %545
  %551 = zext i8 %548 to i32, !dbg !213
  store i32 %551, i32* %527, align 4, !dbg !214
  store i32 1, i32* %534, align 4, !dbg !215
  br label %555, !dbg !216

552:                                              ; preds = %545
  %553 = call i8 @sqlite3GetVarint32(i8* %547, i32* %527), !dbg !217
  %554 = zext i8 %553 to i32, !dbg !218
  store i32 %554, i32* %534, align 4, !dbg !219
  br label %555, !dbg !220

555:                                              ; preds = %552, %550
  store i16 0, i16* %538, align 2, !dbg !221
  %556 = load i32, i32* %536, align 4, !dbg !222
  %557 = load i32, i32* %527, align 4, !dbg !223
  %558 = icmp ult i32 %556, %557, !dbg !224
  br i1 %558, label %560, label %559, !dbg !225

559:                                              ; preds = %555
  store i8* %547, i8** %519, align 8, !dbg !226
  br label %679, !dbg !227

560:                                              ; preds = %555
  store i8* null, i8** %537, align 8, !dbg !228
  store i32 0, i32* %536, align 4, !dbg !229
  br label %586, !dbg !230

561:                                              ; preds = %544
  %562 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 12, i32 0, !dbg !231
  %563 = load %struct.BtCursor*, %struct.BtCursor** %562, align 8, !dbg !232
  %564 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %563), !dbg !233
  store i32 %564, i32* %535, align 4, !dbg !234
  %565 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %563, i32* %536), !dbg !235
  store i8* %565, i8** %537, align 8, !dbg !236
  br label %545, !dbg !237

566:                                              ; preds = %544
  %567 = icmp eq i8 %529, 3, !dbg !238
  br i1 %567, label %568, label %579, !dbg !239

568:                                              ; preds = %566
  %569 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 10, !dbg !240
  %570 = load i32, i32* %569, align 4, !dbg !241
  %571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %570, !dbg !242
  %572 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %571, i32 0, i32 1, !dbg !243
  %573 = load i16, i16* %572, align 2, !dbg !244
  %574 = and i16 %573, 16, !dbg !245
  %575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %571, i32 0, i32 4, !dbg !246
  %576 = load i32, i32* %575, align 4, !dbg !247
  store i32 %576, i32* %535, align 4, !dbg !248
  store i32 %576, i32* %536, align 4, !dbg !249
  %577 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %571, i32 0, i32 5, !dbg !250
  %578 = load i8*, i8** %577, align 8, !dbg !251
  store i8* %578, i8** %537, align 8, !dbg !252
  br label %545, !dbg !253

579:                                              ; preds = %566
  %580 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 1, !dbg !254
  %581 = load i16, i16* %580, align 2, !dbg !254
  %582 = and i16 %581, 9216, !dbg !254
  %583 = icmp ne i16 %582, 0, !dbg !254
  br i1 %583, label %584, label %585, !dbg !254

584:                                              ; preds = %579
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %523), !dbg !254
  br label %767, !dbg !254

585:                                              ; preds = %579
  store i16 1, i16* %580, align 2, !dbg !254
  br label %767, !dbg !254

586:                                              ; preds = %560, %511
  %587 = load i16, i16* %538, align 2, !dbg !255
  %588 = icmp ule i16 %587, 2, !dbg !256
  br i1 %588, label %671, label %668, !dbg !257

589:                                              ; preds = %668, %757
  %590 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 1, !dbg !258
  %591 = load i16, i16* %590, align 2, !dbg !259
  %592 = and i16 9216, %591, !dbg !260
  %593 = icmp eq i16 0, %592, !dbg !261
  br i1 %593, label %594, label %598, !dbg !262

594:                                              ; preds = %589
  %595 = icmp ne i16 %592, 0, !dbg !263
  br i1 %595, label %596, label %597, !dbg !263

596:                                              ; preds = %594
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %523), !dbg !263
  br label %598, !dbg !263

597:                                              ; preds = %594
  store i16 1, i16* %590, align 2, !dbg !263
  br label %598, !dbg !263

598:                                              ; preds = %596, %597, %589
  %599 = load i32, i32* %520, align 4, !dbg !264
  %600 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 23, i32 2, !dbg !265
  %601 = load i32, i32* %600, align 4, !dbg !266
  %602 = load i32, i32* %536, align 4, !dbg !267
  %603 = getelementptr i32, i32* %527, i32 3, !dbg !268
  %604 = load i32, i32* %603, align 4, !dbg !269
  %605 = icmp sge i32 %602, %604, !dbg !270
  br i1 %605, label %606, label %646, !dbg !271

606:                                              ; preds = %598
  %607 = load i8*, i8** %537, align 8, !dbg !272
  %608 = ptrtoint i8* %607 to i64, !dbg !273
  %609 = getelementptr i32, i32* %527, i32 2, !dbg !274
  %610 = load i32, i32* %609, align 4, !dbg !275
  %611 = zext i32 %610 to i64, !dbg !276
  %612 = add i64 %608, %611, !dbg !277
  %613 = inttoptr i64 %612 to i8*, !dbg !278
  store i8* %613, i8** %519, align 8, !dbg !279
  %614 = load i32, i32* %520, align 4, !dbg !280
  %615 = icmp ult i32 %614, 12, !dbg !281
  br i1 %615, label %616, label %618, !dbg !282

616:                                              ; preds = %606
  %617 = call i32 @sqlite3VdbeSerialGet(i8* %613, i32 %614, %struct.sqlite3_value* %523), !dbg !283
  br label %767, !dbg !284

618:                                              ; preds = %606
  %619 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %619, align 2, !dbg !286
  %620 = getelementptr i16, i16* %619, i32 1, !dbg !287
  store i16 514, i16* %620, align 2, !dbg !288
  %621 = load i32, i32* %520, align 4, !dbg !289
  %622 = sub i32 %621, 12, !dbg !290
  %623 = lshr i32 %622, 1, !dbg !291
  %624 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 4, !dbg !292
  store i32 %623, i32* %624, align 4, !dbg !293
  %625 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 2, !dbg !294
  store i8 %514, i8* %625, align 1, !dbg !295
  %626 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 5, !dbg !296
  %627 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 7, !dbg !297
  %628 = load i32, i32* %627, align 4, !dbg !298
  %629 = add i32 %623, 2, !dbg !299
  %630 = icmp slt i32 %628, %629, !dbg !300
  br i1 %630, label %631, label %633, !dbg !301

631:                                              ; preds = %618
  store i16 1, i16* %590, align 2, !dbg !302
  %632 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %523, i32 %629, i32 0), !dbg !303
  br label %636, !dbg !304

633:                                              ; preds = %618
  %634 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 6, !dbg !305
  %635 = load i8*, i8** %634, align 8, !dbg !306
  store i8* %635, i8** %626, align 8, !dbg !307
  br label %636, !dbg !308

636:                                              ; preds = %633, %631
  %637 = zext i32 %623 to i64, !dbg !309
  %638 = load i8*, i8** %626, align 8, !dbg !310
  %639 = load i8*, i8** %519, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %638, i8* %639, i64 %637, i1 false), !dbg !312
  %640 = getelementptr i8, i8* %638, i32 %623, !dbg !313
  store i8 0, i8* %640, align 1, !dbg !314
  %641 = add i32 %623, 1, !dbg !315
  %642 = getelementptr i8, i8* %638, i32 %641, !dbg !316
  store i8 0, i8* %642, align 1, !dbg !317
  %643 = and i32 %621, 1, !dbg !318
  %644 = getelementptr i16, i16* %619, i32 %643, !dbg !319
  %645 = load i16, i16* %644, align 2, !dbg !320
  store i16 %645, i16* %590, align 2, !dbg !321
  br label %767, !dbg !322

646:                                              ; preds = %598
  %647 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 2, !dbg !323
  store i8 %514, i8* %647, align 1, !dbg !324
  %648 = load i32, i32* %520, align 4, !dbg !325
  %649 = and i32 %648, 1, !dbg !326
  %650 = icmp eq i32 %649, 0, !dbg !327
  %651 = icmp sge i32 %648, 12, !dbg !328
  %652 = and i1 %651, %650, !dbg !329
  %653 = call i32 @sqlite3VdbeSerialTypeLen(i32 %648), !dbg !330
  %654 = icmp eq i32 %653, 0, !dbg !331
  br i1 %654, label %666, label %655, !dbg !332

655:                                              ; preds = %646
  %656 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 12, i32 0, !dbg !333
  %657 = load %struct.BtCursor*, %struct.BtCursor** %656, align 8, !dbg !334
  %658 = getelementptr i32, i32* %527, i32 2, !dbg !335
  %659 = load i32, i32* %658, align 4, !dbg !336
  %660 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %657, i32 %659, i32 %653, %struct.sqlite3_value* %523), !dbg !337
  %661 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 5, !dbg !338
  %662 = load i8*, i8** %661, align 8, !dbg !339
  %663 = call i32 @sqlite3VdbeSerialGet(i8* %662, i32 %648, %struct.sqlite3_value* %523), !dbg !340
  %664 = load i16, i16* %590, align 2, !dbg !341
  %665 = and i16 %664, -4097, !dbg !342
  store i16 %665, i16* %590, align 2, !dbg !343
  br label %767, !dbg !344

666:                                              ; preds = %646
  %667 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %648, %struct.sqlite3_value* %523), !dbg !345
  br label %767, !dbg !346

668:                                              ; preds = %586
  %669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 23, i32 2, !dbg !347
  %670 = load i32, i32* %669, align 4, !dbg !348
  store i32 %670, i32* %520, align 4, !dbg !349
  br label %589, !dbg !350

671:                                              ; preds = %586
  %672 = load i32, i32* %534, align 4, !dbg !351
  %673 = load i32, i32* %527, align 4, !dbg !352
  %674 = icmp ult i32 %672, %673, !dbg !353
  br i1 %674, label %675, label %756, !dbg !354

675:                                              ; preds = %671
  %676 = load i8*, i8** %537, align 8, !dbg !355
  %677 = icmp eq i8* %676, null, !dbg !356
  br i1 %677, label %679, label %678, !dbg !357

678:                                              ; preds = %675
  store i8* %676, i8** %519, align 8, !dbg !358
  br label %679, !dbg !359

679:                                              ; preds = %678, %675, %559
  %680 = alloca i32, align 4, !dbg !360
  %681 = load i16, i16* %538, align 2, !dbg !361
  %682 = zext i16 %681 to i32, !dbg !362
  store i32 %682, i32* %680, align 4, !dbg !363
  %683 = alloca i64, align 8, !dbg !364
  %684 = getelementptr i32, i32* %527, i32 %682, !dbg !365
  %685 = load i32, i32* %684, align 4, !dbg !366
  %686 = zext i32 %685 to i64, !dbg !367
  store i64 %686, i64* %683, align 4, !dbg !368
  %687 = load i8*, i8** %519, align 8, !dbg !369
  %688 = load i32, i32* %534, align 4, !dbg !370
  %689 = alloca i8*, align 8, !dbg !371
  %690 = getelementptr i8, i8* %687, i32 %688, !dbg !372
  store i8* %690, i8** %689, align 8, !dbg !373
  %691 = load i32, i32* %527, align 4, !dbg !374
  %692 = getelementptr i8, i8* %687, i32 %691, !dbg !375
  br label %693, !dbg !376

693:                                              ; preds = %700, %679
  %694 = load i32, i32* %680, align 4, !dbg !377
  %695 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %522, i32 0, i32 23, i32 %694, !dbg !378
  %696 = load i8*, i8** %689, align 8, !dbg !379
  %697 = load i8, i8* %696, align 1, !dbg !380
  %698 = zext i8 %697 to i32, !dbg !381
  store i32 %698, i32* %520, align 4, !dbg !382
  store i32 %698, i32* %695, align 4, !dbg !383
  %699 = icmp sgt i8 %697, -1, !dbg !384
  br i1 %699, label %723, label %714, !dbg !385

700:                                              ; preds = %714, %723
  %701 = load i32, i32* %680, align 4, !dbg !386
  %702 = add i32 %701, 1, !dbg !387
  store i32 %702, i32* %680, align 4, !dbg !388
  %703 = load i64, i64* %683, align 4, !dbg !389
  %704 = and i64 4294967295, %703, !dbg !390
  %705 = trunc i64 %704 to i32, !dbg !391
  %706 = getelementptr i32, i32* %527, i32 %702, !dbg !392
  store i32 %705, i32* %706, align 4, !dbg !393
  %707 = load i32, i32* %680, align 4, !dbg !394
  %708 = icmp sle i32 %707, 2, !dbg !395
  %709 = load i8*, i8** %689, align 8, !dbg !396
  %710 = ptrtoint i8* %709 to i64, !dbg !397
  %711 = ptrtoint i8* %692 to i64, !dbg !398
  %712 = icmp ult i64 %710, %711, !dbg !399
  %713 = and i1 %708, %712, !dbg !400
  br i1 %713, label %693, label %732, !dbg !401

714:                                              ; preds = %693
  %715 = load i8*, i8** %689, align 8, !dbg !402
  %716 = call i8 @sqlite3GetVarint32(i8* %715, i32* %520), !dbg !403
  %717 = getelementptr i8, i8* %715, i8 %716, !dbg !404
  store i8* %717, i8** %689, align 8, !dbg !405
  %718 = load i32, i32* %520, align 4, !dbg !406
  store i32 %718, i32* %695, align 4, !dbg !407
  %719 = load i64, i64* %683, align 4, !dbg !408
  %720 = call i32 @sqlite3VdbeSerialTypeLen(i32 %718), !dbg !409
  %721 = zext i32 %720 to i64, !dbg !410
  %722 = add i64 %719, %721, !dbg !411
  store i64 %722, i64* %683, align 4, !dbg !412
  br label %700, !dbg !413

723:                                              ; preds = %693
  %724 = getelementptr i8, i8* %696, i32 1, !dbg !414
  store i8* %724, i8** %689, align 8, !dbg !415
  %725 = load i32, i32* %520, align 4, !dbg !416
  %726 = trunc i32 %725 to i8, !dbg !417
  %727 = getelementptr i8, i8* %4, i8 %726, !dbg !418
  %728 = load i8, i8* %727, align 1, !dbg !419
  %729 = zext i8 %728 to i64, !dbg !420
  %730 = load i64, i64* %683, align 4, !dbg !421
  %731 = add i64 %730, %729, !dbg !422
  store i64 %731, i64* %683, align 4, !dbg !423
  br label %700, !dbg !424

732:                                              ; preds = %700
  %733 = load i64, i64* %683, align 4, !dbg !425
  %734 = load i32, i32* %535, align 4, !dbg !426
  %735 = zext i32 %734 to i64, !dbg !427
  %736 = icmp uge i64 %710, %711, !dbg !428
  %737 = icmp ugt i64 %710, %711, !dbg !429
  %738 = icmp ne i64 %733, %735, !dbg !430
  %739 = icmp ugt i64 %733, %735, !dbg !431
  %740 = or i1 %737, %738, !dbg !432
  %741 = and i1 %736, %740, !dbg !433
  %742 = or i1 %741, %739, !dbg !434
  br i1 %742, label %743, label %747, !dbg !435

743:                                              ; preds = %732
  %744 = load i32, i32* %527, align 4, !dbg !436
  %745 = icmp eq i32 %744, 0, !dbg !437
  br i1 %745, label %746, label %747, !dbg !438

746:                                              ; preds = %743
  store i32 0, i32* %680, align 4, !dbg !439
  store i8* %692, i8** %689, align 8, !dbg !440
  br label %747, !dbg !441

747:                                              ; preds = %746, %743, %732
  %748 = load i32, i32* %680, align 4, !dbg !442
  %749 = trunc i32 %748 to i16, !dbg !443
  store i16 %749, i16* %538, align 2, !dbg !444
  %750 = load i8*, i8** %689, align 8, !dbg !445
  %751 = ptrtoint i8* %750 to i64, !dbg !446
  %752 = load i8*, i8** %519, align 8, !dbg !447
  %753 = ptrtoint i8* %752 to i64, !dbg !448
  %754 = sub i64 %751, %753, !dbg !449
  %755 = trunc i64 %754 to i32, !dbg !450
  store i32 %755, i32* %534, align 4, !dbg !451
  br label %757, !dbg !452

756:                                              ; preds = %671
  store i32 0, i32* %520, align 4, !dbg !453
  br label %757, !dbg !454

757:                                              ; preds = %747, %756
  %758 = load i16, i16* %538, align 2, !dbg !455
  %759 = icmp sle i16 %758, 2, !dbg !456
  br i1 %759, label %760, label %589, !dbg !457

760:                                              ; preds = %757
  %761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %523, i32 0, i32 1, !dbg !458
  %762 = load i16, i16* %761, align 2, !dbg !458
  %763 = and i16 %762, 9216, !dbg !458
  %764 = icmp ne i16 %763, 0, !dbg !458
  br i1 %764, label %765, label %766, !dbg !458

765:                                              ; preds = %760
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %523), !dbg !458
  br label %767, !dbg !458

766:                                              ; preds = %760
  store i16 1, i16* %761, align 2, !dbg !458
  br label %767, !dbg !458

767:                                              ; preds = %765, %766, %636, %616, %655, %666, %584, %585
  call void @llvm.stackrestore(i8* %512), !dbg !459
  br label %768, !dbg !74

768:                                              ; preds = %767, %14
  %769 = call i8* @llvm.stacksave(), !dbg !460
  %770 = alloca i32, align 8, !dbg !463
  %771 = alloca i32, align 8, !dbg !464
  %772 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !465
  %773 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %774 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %772, i32 0, i32 1, !dbg !467
  %775 = load i16, i16* %774, align 2, !dbg !468
  %776 = alloca i16, align 8, !dbg !469
  store i16 %775, i16* %776, align 2, !dbg !470
  %777 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %773, i32 0, i32 1, !dbg !471
  %778 = load i16, i16* %777, align 2, !dbg !472
  %779 = alloca i16, align 8, !dbg !473
  store i16 %778, i16* %779, align 2, !dbg !474
  %780 = or i16 %775, %778, !dbg !475
  %781 = and i16 %780, 1, !dbg !476
  %782 = icmp ne i16 %781, 0, !dbg !477
  br i1 %782, label %783, label %784, !dbg !478

783:                                              ; preds = %768
  call void @llvm.stackrestore(i8* %769), !dbg !479
  br label %8078, !dbg !528

784:                                              ; preds = %768
  %785 = and i16 %775, 2, !dbg !482
  %786 = and i16 %775, 44, !dbg !483
  %787 = icmp eq i16 %785, 0, !dbg !484
  %788 = icmp ne i16 %786, 0, !dbg !485
  %789 = and i16 %778, 2, !dbg !486
  %790 = and i16 %778, 44, !dbg !487
  %791 = icmp eq i16 %789, 0, !dbg !488
  %792 = icmp ne i16 %790, 0, !dbg !489
  %793 = and i1 %787, %788, !dbg !490
  br i1 %793, label %794, label %800, !dbg !491

794:                                              ; preds = %784
  %795 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %772, i8 1, i8 1), !dbg !492
  %796 = load i16, i16* %774, align 2, !dbg !493
  %797 = and i16 %796, 15936, !dbg !493
  %798 = and i16 %775, -15937, !dbg !494
  %799 = or i16 %797, %798, !dbg !495
  store i16 %799, i16* %776, align 2, !dbg !496
  br label %800, !dbg !497

800:                                              ; preds = %794, %784
  %801 = and i1 %791, %792, !dbg !498
  br i1 %801, label %802, label %808, !dbg !499

802:                                              ; preds = %800
  %803 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %773, i8 1, i8 1), !dbg !500
  %804 = load i16, i16* %777, align 2, !dbg !501
  %805 = and i16 %804, 15936, !dbg !501
  %806 = and i16 %778, -15937, !dbg !502
  %807 = or i16 %805, %806, !dbg !503
  store i16 %807, i16* %779, align 2, !dbg !504
  br label %808, !dbg !505

808:                                              ; preds = %802, %800
  %809 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 15, !dbg !506
  %810 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %809, i32 0, i32 6, !dbg !507
  %811 = bitcast %union.p4union* %810 to %struct.CollSeq**, !dbg !508
  %812 = load %struct.CollSeq*, %struct.CollSeq** %811, align 8, !dbg !509
  %813 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %773, %struct.sqlite3_value* %772, %struct.CollSeq* %812), !dbg !510
  store i32 %813, i32* %770, align 4, !dbg !511
  %814 = icmp slt i32 %813, 0, !dbg !512
  br i1 %814, label %815, label %816, !dbg !513

815:                                              ; preds = %808
  store i32 1, i32* %771, align 4, !dbg !514
  br label %820, !dbg !515

816:                                              ; preds = %808
  %817 = icmp eq i32 %813, 0, !dbg !516
  br i1 %817, label %818, label %819, !dbg !517

818:                                              ; preds = %816
  store i32 0, i32* %771, align 4, !dbg !518
  br label %820, !dbg !519

819:                                              ; preds = %816
  store i32 1, i32* %771, align 4, !dbg !520
  br label %820, !dbg !521

820:                                              ; preds = %819, %818, %815
  store i16 %778, i16* %779, align 2, !dbg !522
  store i16 %775, i16* %776, align 2, !dbg !523
  %821 = load i32, i32* %771, align 4, !dbg !524
  %822 = icmp ne i32 %821, 0, !dbg !525
  call void @llvm.stackrestore(i8* %769), !dbg !526
  br i1 %822, label %8078, label %823, !dbg !527

823:                                              ; preds = %820, %508, %471, %14
  %824 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !529
  %825 = load %struct.VdbeFrame*, %struct.VdbeFrame** %824, align 8, !dbg !532
  %826 = ptrtoint %struct.VdbeFrame* %825 to i64, !dbg !533
  %827 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !534
  %828 = load i32, i32* %827, align 4, !dbg !535
  %829 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !536
  %830 = icmp ne i64 %826, 0, !dbg !537
  br i1 %830, label %831, label %836, !dbg !538

831:                                              ; preds = %823
  %832 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %825, i32 0, i32 6, !dbg !539
  %833 = load i8*, i8** %832, align 8, !dbg !540
  %834 = getelementptr i8, i8* %833, i32 2, !dbg !541
  %835 = load i8, i8* %834, align 1, !dbg !542
  br label %839, !dbg !543

836:                                              ; preds = %823
  %837 = load i32, i32* %829, align 4, !dbg !544
  %838 = icmp eq i32 %837, %828, !dbg !545
  br i1 %838, label %3447, label %839, !dbg !546

839:                                              ; preds = %836, %831
  store i32 %828, i32* %829, align 4, !dbg !547
  br label %840, !dbg !548

840:                                              ; preds = %839, %14
  %841 = call i8* @llvm.stacksave(), !dbg !549
  %842 = alloca %struct.VdbeCursor*, align 8, !dbg !552
  %843 = alloca i32, align 8, !dbg !553
  %844 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !554
  %845 = load %struct.VdbeCursor*, %struct.VdbeCursor** %844, align 8, !dbg !555
  store %struct.VdbeCursor* %845, %struct.VdbeCursor** %842, align 8, !dbg !556
  %846 = icmp ne %struct.VdbeCursor* %845, null, !dbg !557
  br i1 %846, label %847, label %857, !dbg !558

847:                                              ; preds = %840
  %848 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %845, i32 0, i32 6, !dbg !559
  %849 = load %struct.Btree*, %struct.Btree** %848, align 8, !dbg !560
  %850 = icmp ne %struct.Btree* %849, null, !dbg !561
  br i1 %850, label %851, label %857, !dbg !562

851:                                              ; preds = %847
  %852 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %845, i32 0, i32 7, !dbg !563
  store i64 0, i64* %852, align 4, !dbg !564
  %853 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %845, i32 0, i32 9, !dbg !565
  store i32 0, i32* %853, align 4, !dbg !566
  %854 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %845, i32 0, i32 15, !dbg !567
  %855 = load i32, i32* %854, align 4, !dbg !568
  %856 = call i32 @sqlite3BtreeClearTable(%struct.Btree* %849, i32 %855, i32* null), !dbg !569
  store i32 %856, i32* %843, align 4, !dbg !570
  br label %902, !dbg !571

857:                                              ; preds = %847, %840
  %858 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 7, i32 7, i32 -1, i8 0), !dbg !572
  store %struct.VdbeCursor* %858, %struct.VdbeCursor** %842, align 8, !dbg !573
  %859 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 5, !dbg !574
  %860 = load i8, i8* %859, align 1, !dbg !575
  %861 = or i8 %860, 1, !dbg !576
  store i8 %861, i8* %859, align 1, !dbg !577
  %862 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 0, !dbg !578
  %863 = load %struct.sqlite3_vfs*, %struct.sqlite3_vfs** %862, align 8, !dbg !579
  %864 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 6, !dbg !580
  %865 = call i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs* %863, i8* null, %struct.sqlite3* %13, %struct.Btree** %864, i32 5, i32 1054), !dbg !581
  store i32 %865, i32* %843, align 4, !dbg !582
  %866 = icmp eq i32 %865, 0, !dbg !583
  br i1 %866, label %867, label %870, !dbg !584

867:                                              ; preds = %857
  %868 = load %struct.Btree*, %struct.Btree** %864, align 8, !dbg !585
  %869 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %868, i32 1, i32* null), !dbg !586
  store i32 %869, i32* %843, align 4, !dbg !587
  br label %870, !dbg !588

870:                                              ; preds = %867, %857
  %871 = load i32, i32* %843, align 4, !dbg !589
  %872 = icmp eq i32 %871, 0, !dbg !590
  br i1 %872, label %873, label %897, !dbg !591

873:                                              ; preds = %870
  %874 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, !dbg !592
  %875 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %874, i32 0, i32 6, !dbg !593
  %876 = bitcast %union.p4union* %875 to %struct.KeyInfo**, !dbg !594
  %877 = load %struct.KeyInfo*, %struct.KeyInfo** %876, align 8, !dbg !595
  %878 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 13, !dbg !596
  store %struct.KeyInfo* %877, %struct.KeyInfo** %878, align 8, !dbg !597
  %879 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 15, !dbg !598
  %880 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 12, i32 0, !dbg !599
  %881 = icmp ne %struct.KeyInfo* %877, null, !dbg !600
  br i1 %881, label %882, label %892, !dbg !601

882:                                              ; preds = %873
  %883 = load %struct.Btree*, %struct.Btree** %864, align 8, !dbg !602
  %884 = call i32 @sqlite3BtreeCreateTable(%struct.Btree* %883, i32* %879, i32 2), !dbg !603
  store i32 %884, i32* %843, align 4, !dbg !604
  %885 = icmp eq i32 %884, 0, !dbg !605
  br i1 %885, label %886, label %890, !dbg !606

886:                                              ; preds = %882
  %887 = load %struct.BtCursor*, %struct.BtCursor** %880, align 8, !dbg !607
  %888 = load i32, i32* %879, align 4, !dbg !608
  %889 = call i32 @sqlite3BtreeCursor(%struct.Btree* %883, i32 %888, i32 4, %struct.KeyInfo* %877, %struct.BtCursor* %887), !dbg !609
  store i32 %889, i32* %843, align 4, !dbg !610
  br label %890, !dbg !611

890:                                              ; preds = %886, %882
  %891 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 4, !dbg !612
  store i8 0, i8* %891, align 1, !dbg !613
  br label %897, !dbg !614

892:                                              ; preds = %873
  store i32 1, i32* %879, align 4, !dbg !615
  %893 = load %struct.BtCursor*, %struct.BtCursor** %880, align 8, !dbg !616
  %894 = load %struct.Btree*, %struct.Btree** %864, align 8, !dbg !617
  %895 = call i32 @sqlite3BtreeCursor(%struct.Btree* %894, i32 1, i32 4, %struct.KeyInfo* null, %struct.BtCursor* %893), !dbg !618
  store i32 %895, i32* %843, align 4, !dbg !619
  %896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %858, i32 0, i32 4, !dbg !620
  store i8 1, i8* %896, align 1, !dbg !621
  br label %897, !dbg !622

897:                                              ; preds = %890, %892, %870
  %898 = load %struct.VdbeCursor*, %struct.VdbeCursor** %842, align 8, !dbg !623
  %899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %898, i32 0, i32 5, !dbg !624
  %900 = load i8, i8* %899, align 1, !dbg !625
  %901 = or i8 %900, 1, !dbg !626
  store i8 %901, i8* %899, align 1, !dbg !627
  br label %902, !dbg !628

902:                                              ; preds = %897, %851
  %903 = load i32, i32* %843, align 4, !dbg !629
  %904 = load %struct.VdbeCursor*, %struct.VdbeCursor** %842, align 8, !dbg !630
  %905 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %904, i32 0, i32 2, !dbg !631
  store i8 1, i8* %905, align 1, !dbg !632
  call void @llvm.stackrestore(i8* %841), !dbg !633
  br label %906, !dbg !74

906:                                              ; preds = %902, %14
  %907 = call i8* @llvm.stacksave(), !dbg !133
  %908 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %909 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %908, i32 4, !dbg !137
  %910 = load %struct.VdbeCursor*, %struct.VdbeCursor** %909, align 8, !dbg !138
  %911 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %911, align 4, !dbg !140
  %912 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %910, i32 0, i32 0, !dbg !141
  %913 = load i8, i8* %912, align 1, !dbg !142
  %914 = icmp eq i8 %913, 1, !dbg !143
  %915 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %915, align 4, !dbg !145
  br i1 %914, label %916, label %918, !dbg !146

916:                                              ; preds = %906
  %917 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %910, i32* %911), !dbg !147
  store i32 %917, i32* %915, align 4, !dbg !148
  br label %924, !dbg !149

918:                                              ; preds = %906
  %919 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %910, i32 0, i32 12, i32 0, !dbg !150
  %920 = load %struct.BtCursor*, %struct.BtCursor** %919, align 8, !dbg !151
  %921 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %920, i32* %911), !dbg !152
  store i32 %921, i32* %915, align 4, !dbg !153
  %922 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %910, i32 0, i32 3, !dbg !154
  store i8 0, i8* %922, align 1, !dbg !155
  %923 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %910, i32 0, i32 9, !dbg !156
  store i32 0, i32* %923, align 4, !dbg !157
  br label %924, !dbg !158

924:                                              ; preds = %918, %916
  %925 = load i32, i32* %915, align 4, !dbg !159
  %926 = load i32, i32* %911, align 4, !dbg !160
  %927 = trunc i32 %926 to i8, !dbg !161
  %928 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %910, i32 0, i32 2, !dbg !162
  store i8 %927, i8* %928, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %907), !dbg !164
  %929 = icmp ne i32 %926, 0, !dbg !165
  br i1 %929, label %3447, label %930, !dbg !166

930:                                              ; preds = %3445, %924, %14
  %931 = call i8* @llvm.stacksave(), !dbg !167
  %932 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %933 = load i8, i8* %932, align 1, !dbg !171
  %934 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %934, align 4, !dbg !173
  %935 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %936 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %937 = load %struct.VdbeCursor*, %struct.VdbeCursor** %935, align 8, !dbg !176
  store %struct.VdbeCursor* %937, %struct.VdbeCursor** %936, align 8, !dbg !177
  %938 = alloca i8*, align 8, !dbg !178
  %939 = alloca i32, align 4, !dbg !179
  %940 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %936, i32* %934), !dbg !180
  %941 = load %struct.VdbeCursor*, %struct.VdbeCursor** %936, align 8, !dbg !181
  %942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !182
  %943 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 16, !dbg !183
  %944 = load i16, i16* %943, align 2, !dbg !184
  %945 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 19, !dbg !185
  %946 = load i32*, i32** %945, align 8, !dbg !186
  %947 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 0, !dbg !187
  %948 = load i8, i8* %947, align 1, !dbg !188
  %949 = icmp ne i8 %948, 3, !dbg !189
  %950 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 2, !dbg !190
  %951 = load i8, i8* %950, align 1, !dbg !191
  %952 = icmp ne i8 %951, 0, !dbg !192
  %953 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 14, !dbg !193
  %954 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 21, !dbg !194
  %955 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 22, !dbg !195
  %956 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 20, !dbg !196
  %957 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 17, !dbg !197
  %958 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 9, !dbg !198
  %959 = load i32, i32* %958, align 4, !dbg !199
  %960 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %961 = load i32, i32* %960, align 4, !dbg !201
  %962 = icmp ne i32 %959, %961, !dbg !202
  br i1 %962, label %963, label %1005, !dbg !203

963:                                              ; preds = %930
  br i1 %952, label %985, label %980, !dbg !204

964:                                              ; preds = %980, %987
  %965 = load i32, i32* %960, align 4, !dbg !205
  store i32 %965, i32* %958, align 4, !dbg !206
  %966 = load i8*, i8** %956, align 8, !dbg !207
  %967 = load i8, i8* %966, align 1, !dbg !208
  %968 = icmp sgt i8 %967, -1, !dbg !211
  br i1 %968, label %969, label %971, !dbg !212

969:                                              ; preds = %964
  %970 = zext i8 %967 to i32, !dbg !213
  store i32 %970, i32* %946, align 4, !dbg !214
  store i32 1, i32* %953, align 4, !dbg !215
  br label %974, !dbg !216

971:                                              ; preds = %964
  %972 = call i8 @sqlite3GetVarint32(i8* %966, i32* %946), !dbg !217
  %973 = zext i8 %972 to i32, !dbg !218
  store i32 %973, i32* %953, align 4, !dbg !219
  br label %974, !dbg !220

974:                                              ; preds = %971, %969
  store i16 0, i16* %957, align 2, !dbg !221
  %975 = load i32, i32* %955, align 4, !dbg !222
  %976 = load i32, i32* %946, align 4, !dbg !223
  %977 = icmp ult i32 %975, %976, !dbg !224
  br i1 %977, label %979, label %978, !dbg !225

978:                                              ; preds = %974
  store i8* %966, i8** %938, align 8, !dbg !226
  br label %1098, !dbg !227

979:                                              ; preds = %974
  store i8* null, i8** %956, align 8, !dbg !228
  store i32 0, i32* %955, align 4, !dbg !229
  br label %1005, !dbg !230

980:                                              ; preds = %963
  %981 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 12, i32 0, !dbg !231
  %982 = load %struct.BtCursor*, %struct.BtCursor** %981, align 8, !dbg !232
  %983 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %982), !dbg !233
  store i32 %983, i32* %954, align 4, !dbg !234
  %984 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %982, i32* %955), !dbg !235
  store i8* %984, i8** %956, align 8, !dbg !236
  br label %964, !dbg !237

985:                                              ; preds = %963
  %986 = icmp eq i8 %948, 3, !dbg !238
  br i1 %986, label %987, label %998, !dbg !239

987:                                              ; preds = %985
  %988 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 10, !dbg !240
  %989 = load i32, i32* %988, align 4, !dbg !241
  %990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %989, !dbg !242
  %991 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %990, i32 0, i32 1, !dbg !243
  %992 = load i16, i16* %991, align 2, !dbg !244
  %993 = and i16 %992, 16, !dbg !245
  %994 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %990, i32 0, i32 4, !dbg !246
  %995 = load i32, i32* %994, align 4, !dbg !247
  store i32 %995, i32* %954, align 4, !dbg !248
  store i32 %995, i32* %955, align 4, !dbg !249
  %996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %990, i32 0, i32 5, !dbg !250
  %997 = load i8*, i8** %996, align 8, !dbg !251
  store i8* %997, i8** %956, align 8, !dbg !252
  br label %964, !dbg !253

998:                                              ; preds = %985
  %999 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 1, !dbg !254
  %1000 = load i16, i16* %999, align 2, !dbg !254
  %1001 = and i16 %1000, 9216, !dbg !254
  %1002 = icmp ne i16 %1001, 0, !dbg !254
  br i1 %1002, label %1003, label %1004, !dbg !254

1003:                                             ; preds = %998
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %942), !dbg !254
  br label %1186, !dbg !254

1004:                                             ; preds = %998
  store i16 1, i16* %999, align 2, !dbg !254
  br label %1186, !dbg !254

1005:                                             ; preds = %979, %930
  %1006 = load i16, i16* %957, align 2, !dbg !255
  %1007 = icmp ule i16 %1006, 3, !dbg !256
  br i1 %1007, label %1090, label %1087, !dbg !257

1008:                                             ; preds = %1087, %1176
  %1009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 1, !dbg !258
  %1010 = load i16, i16* %1009, align 2, !dbg !259
  %1011 = and i16 9216, %1010, !dbg !260
  %1012 = icmp eq i16 0, %1011, !dbg !261
  br i1 %1012, label %1013, label %1017, !dbg !262

1013:                                             ; preds = %1008
  %1014 = icmp ne i16 %1011, 0, !dbg !263
  br i1 %1014, label %1015, label %1016, !dbg !263

1015:                                             ; preds = %1013
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %942), !dbg !263
  br label %1017, !dbg !263

1016:                                             ; preds = %1013
  store i16 1, i16* %1009, align 2, !dbg !263
  br label %1017, !dbg !263

1017:                                             ; preds = %1015, %1016, %1008
  %1018 = load i32, i32* %939, align 4, !dbg !264
  %1019 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 23, i32 3, !dbg !265
  %1020 = load i32, i32* %1019, align 4, !dbg !266
  %1021 = load i32, i32* %955, align 4, !dbg !267
  %1022 = getelementptr i32, i32* %946, i32 4, !dbg !268
  %1023 = load i32, i32* %1022, align 4, !dbg !269
  %1024 = icmp sge i32 %1021, %1023, !dbg !270
  br i1 %1024, label %1025, label %1065, !dbg !271

1025:                                             ; preds = %1017
  %1026 = load i8*, i8** %956, align 8, !dbg !272
  %1027 = ptrtoint i8* %1026 to i64, !dbg !273
  %1028 = getelementptr i32, i32* %946, i32 3, !dbg !274
  %1029 = load i32, i32* %1028, align 4, !dbg !275
  %1030 = zext i32 %1029 to i64, !dbg !276
  %1031 = add i64 %1027, %1030, !dbg !277
  %1032 = inttoptr i64 %1031 to i8*, !dbg !278
  store i8* %1032, i8** %938, align 8, !dbg !279
  %1033 = load i32, i32* %939, align 4, !dbg !280
  %1034 = icmp ult i32 %1033, 12, !dbg !281
  br i1 %1034, label %1035, label %1037, !dbg !282

1035:                                             ; preds = %1025
  %1036 = call i32 @sqlite3VdbeSerialGet(i8* %1032, i32 %1033, %struct.sqlite3_value* %942), !dbg !283
  br label %1186, !dbg !284

1037:                                             ; preds = %1025
  %1038 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1038, align 2, !dbg !286
  %1039 = getelementptr i16, i16* %1038, i32 1, !dbg !287
  store i16 514, i16* %1039, align 2, !dbg !288
  %1040 = load i32, i32* %939, align 4, !dbg !289
  %1041 = sub i32 %1040, 12, !dbg !290
  %1042 = lshr i32 %1041, 1, !dbg !291
  %1043 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 4, !dbg !292
  store i32 %1042, i32* %1043, align 4, !dbg !293
  %1044 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 2, !dbg !294
  store i8 %933, i8* %1044, align 1, !dbg !295
  %1045 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 5, !dbg !296
  %1046 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 7, !dbg !297
  %1047 = load i32, i32* %1046, align 4, !dbg !298
  %1048 = add i32 %1042, 2, !dbg !299
  %1049 = icmp slt i32 %1047, %1048, !dbg !300
  br i1 %1049, label %1050, label %1052, !dbg !301

1050:                                             ; preds = %1037
  store i16 1, i16* %1009, align 2, !dbg !302
  %1051 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %942, i32 %1048, i32 0), !dbg !303
  br label %1055, !dbg !304

1052:                                             ; preds = %1037
  %1053 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 6, !dbg !305
  %1054 = load i8*, i8** %1053, align 8, !dbg !306
  store i8* %1054, i8** %1045, align 8, !dbg !307
  br label %1055, !dbg !308

1055:                                             ; preds = %1052, %1050
  %1056 = zext i32 %1042 to i64, !dbg !309
  %1057 = load i8*, i8** %1045, align 8, !dbg !310
  %1058 = load i8*, i8** %938, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1057, i8* %1058, i64 %1056, i1 false), !dbg !312
  %1059 = getelementptr i8, i8* %1057, i32 %1042, !dbg !313
  store i8 0, i8* %1059, align 1, !dbg !314
  %1060 = add i32 %1042, 1, !dbg !315
  %1061 = getelementptr i8, i8* %1057, i32 %1060, !dbg !316
  store i8 0, i8* %1061, align 1, !dbg !317
  %1062 = and i32 %1040, 1, !dbg !318
  %1063 = getelementptr i16, i16* %1038, i32 %1062, !dbg !319
  %1064 = load i16, i16* %1063, align 2, !dbg !320
  store i16 %1064, i16* %1009, align 2, !dbg !321
  br label %1186, !dbg !322

1065:                                             ; preds = %1017
  %1066 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 2, !dbg !323
  store i8 %933, i8* %1066, align 1, !dbg !324
  %1067 = load i32, i32* %939, align 4, !dbg !325
  %1068 = and i32 %1067, 1, !dbg !326
  %1069 = icmp eq i32 %1068, 0, !dbg !327
  %1070 = icmp sge i32 %1067, 12, !dbg !328
  %1071 = and i1 %1070, %1069, !dbg !329
  %1072 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1067), !dbg !330
  %1073 = icmp eq i32 %1072, 0, !dbg !331
  br i1 %1073, label %1085, label %1074, !dbg !332

1074:                                             ; preds = %1065
  %1075 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 12, i32 0, !dbg !333
  %1076 = load %struct.BtCursor*, %struct.BtCursor** %1075, align 8, !dbg !334
  %1077 = getelementptr i32, i32* %946, i32 3, !dbg !335
  %1078 = load i32, i32* %1077, align 4, !dbg !336
  %1079 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1076, i32 %1078, i32 %1072, %struct.sqlite3_value* %942), !dbg !337
  %1080 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 5, !dbg !338
  %1081 = load i8*, i8** %1080, align 8, !dbg !339
  %1082 = call i32 @sqlite3VdbeSerialGet(i8* %1081, i32 %1067, %struct.sqlite3_value* %942), !dbg !340
  %1083 = load i16, i16* %1009, align 2, !dbg !341
  %1084 = and i16 %1083, -4097, !dbg !342
  store i16 %1084, i16* %1009, align 2, !dbg !343
  br label %1186, !dbg !344

1085:                                             ; preds = %1065
  %1086 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1067, %struct.sqlite3_value* %942), !dbg !345
  br label %1186, !dbg !346

1087:                                             ; preds = %1005
  %1088 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 23, i32 3, !dbg !347
  %1089 = load i32, i32* %1088, align 4, !dbg !348
  store i32 %1089, i32* %939, align 4, !dbg !349
  br label %1008, !dbg !350

1090:                                             ; preds = %1005
  %1091 = load i32, i32* %953, align 4, !dbg !351
  %1092 = load i32, i32* %946, align 4, !dbg !352
  %1093 = icmp ult i32 %1091, %1092, !dbg !353
  br i1 %1093, label %1094, label %1175, !dbg !354

1094:                                             ; preds = %1090
  %1095 = load i8*, i8** %956, align 8, !dbg !355
  %1096 = icmp eq i8* %1095, null, !dbg !356
  br i1 %1096, label %1098, label %1097, !dbg !357

1097:                                             ; preds = %1094
  store i8* %1095, i8** %938, align 8, !dbg !358
  br label %1098, !dbg !359

1098:                                             ; preds = %1097, %1094, %978
  %1099 = alloca i32, align 4, !dbg !360
  %1100 = load i16, i16* %957, align 2, !dbg !361
  %1101 = zext i16 %1100 to i32, !dbg !362
  store i32 %1101, i32* %1099, align 4, !dbg !363
  %1102 = alloca i64, align 8, !dbg !364
  %1103 = getelementptr i32, i32* %946, i32 %1101, !dbg !365
  %1104 = load i32, i32* %1103, align 4, !dbg !366
  %1105 = zext i32 %1104 to i64, !dbg !367
  store i64 %1105, i64* %1102, align 4, !dbg !368
  %1106 = load i8*, i8** %938, align 8, !dbg !369
  %1107 = load i32, i32* %953, align 4, !dbg !370
  %1108 = alloca i8*, align 8, !dbg !371
  %1109 = getelementptr i8, i8* %1106, i32 %1107, !dbg !372
  store i8* %1109, i8** %1108, align 8, !dbg !373
  %1110 = load i32, i32* %946, align 4, !dbg !374
  %1111 = getelementptr i8, i8* %1106, i32 %1110, !dbg !375
  br label %1112, !dbg !376

1112:                                             ; preds = %1119, %1098
  %1113 = load i32, i32* %1099, align 4, !dbg !377
  %1114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %941, i32 0, i32 23, i32 %1113, !dbg !378
  %1115 = load i8*, i8** %1108, align 8, !dbg !379
  %1116 = load i8, i8* %1115, align 1, !dbg !380
  %1117 = zext i8 %1116 to i32, !dbg !381
  store i32 %1117, i32* %939, align 4, !dbg !382
  store i32 %1117, i32* %1114, align 4, !dbg !383
  %1118 = icmp sgt i8 %1116, -1, !dbg !384
  br i1 %1118, label %1142, label %1133, !dbg !385

1119:                                             ; preds = %1133, %1142
  %1120 = load i32, i32* %1099, align 4, !dbg !386
  %1121 = add i32 %1120, 1, !dbg !387
  store i32 %1121, i32* %1099, align 4, !dbg !388
  %1122 = load i64, i64* %1102, align 4, !dbg !389
  %1123 = and i64 4294967295, %1122, !dbg !390
  %1124 = trunc i64 %1123 to i32, !dbg !391
  %1125 = getelementptr i32, i32* %946, i32 %1121, !dbg !392
  store i32 %1124, i32* %1125, align 4, !dbg !393
  %1126 = load i32, i32* %1099, align 4, !dbg !394
  %1127 = icmp sle i32 %1126, 3, !dbg !395
  %1128 = load i8*, i8** %1108, align 8, !dbg !396
  %1129 = ptrtoint i8* %1128 to i64, !dbg !397
  %1130 = ptrtoint i8* %1111 to i64, !dbg !398
  %1131 = icmp ult i64 %1129, %1130, !dbg !399
  %1132 = and i1 %1127, %1131, !dbg !400
  br i1 %1132, label %1112, label %1151, !dbg !401

1133:                                             ; preds = %1112
  %1134 = load i8*, i8** %1108, align 8, !dbg !402
  %1135 = call i8 @sqlite3GetVarint32(i8* %1134, i32* %939), !dbg !403
  %1136 = getelementptr i8, i8* %1134, i8 %1135, !dbg !404
  store i8* %1136, i8** %1108, align 8, !dbg !405
  %1137 = load i32, i32* %939, align 4, !dbg !406
  store i32 %1137, i32* %1114, align 4, !dbg !407
  %1138 = load i64, i64* %1102, align 4, !dbg !408
  %1139 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1137), !dbg !409
  %1140 = zext i32 %1139 to i64, !dbg !410
  %1141 = add i64 %1138, %1140, !dbg !411
  store i64 %1141, i64* %1102, align 4, !dbg !412
  br label %1119, !dbg !413

1142:                                             ; preds = %1112
  %1143 = getelementptr i8, i8* %1115, i32 1, !dbg !414
  store i8* %1143, i8** %1108, align 8, !dbg !415
  %1144 = load i32, i32* %939, align 4, !dbg !416
  %1145 = trunc i32 %1144 to i8, !dbg !417
  %1146 = getelementptr i8, i8* %4, i8 %1145, !dbg !418
  %1147 = load i8, i8* %1146, align 1, !dbg !419
  %1148 = zext i8 %1147 to i64, !dbg !420
  %1149 = load i64, i64* %1102, align 4, !dbg !421
  %1150 = add i64 %1149, %1148, !dbg !422
  store i64 %1150, i64* %1102, align 4, !dbg !423
  br label %1119, !dbg !424

1151:                                             ; preds = %1119
  %1152 = load i64, i64* %1102, align 4, !dbg !425
  %1153 = load i32, i32* %954, align 4, !dbg !426
  %1154 = zext i32 %1153 to i64, !dbg !427
  %1155 = icmp uge i64 %1129, %1130, !dbg !428
  %1156 = icmp ugt i64 %1129, %1130, !dbg !429
  %1157 = icmp ne i64 %1152, %1154, !dbg !430
  %1158 = icmp ugt i64 %1152, %1154, !dbg !431
  %1159 = or i1 %1156, %1157, !dbg !432
  %1160 = and i1 %1155, %1159, !dbg !433
  %1161 = or i1 %1160, %1158, !dbg !434
  br i1 %1161, label %1162, label %1166, !dbg !435

1162:                                             ; preds = %1151
  %1163 = load i32, i32* %946, align 4, !dbg !436
  %1164 = icmp eq i32 %1163, 0, !dbg !437
  br i1 %1164, label %1165, label %1166, !dbg !438

1165:                                             ; preds = %1162
  store i32 0, i32* %1099, align 4, !dbg !439
  store i8* %1111, i8** %1108, align 8, !dbg !440
  br label %1166, !dbg !441

1166:                                             ; preds = %1165, %1162, %1151
  %1167 = load i32, i32* %1099, align 4, !dbg !442
  %1168 = trunc i32 %1167 to i16, !dbg !443
  store i16 %1168, i16* %957, align 2, !dbg !444
  %1169 = load i8*, i8** %1108, align 8, !dbg !445
  %1170 = ptrtoint i8* %1169 to i64, !dbg !446
  %1171 = load i8*, i8** %938, align 8, !dbg !447
  %1172 = ptrtoint i8* %1171 to i64, !dbg !448
  %1173 = sub i64 %1170, %1172, !dbg !449
  %1174 = trunc i64 %1173 to i32, !dbg !450
  store i32 %1174, i32* %953, align 4, !dbg !451
  br label %1176, !dbg !452

1175:                                             ; preds = %1090
  store i32 0, i32* %939, align 4, !dbg !453
  br label %1176, !dbg !454

1176:                                             ; preds = %1166, %1175
  %1177 = load i16, i16* %957, align 2, !dbg !455
  %1178 = icmp sle i16 %1177, 3, !dbg !456
  br i1 %1178, label %1179, label %1008, !dbg !457

1179:                                             ; preds = %1176
  %1180 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %942, i32 0, i32 1, !dbg !458
  %1181 = load i16, i16* %1180, align 2, !dbg !458
  %1182 = and i16 %1181, 9216, !dbg !458
  %1183 = icmp ne i16 %1182, 0, !dbg !458
  br i1 %1183, label %1184, label %1185, !dbg !458

1184:                                             ; preds = %1179
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %942), !dbg !458
  br label %1186, !dbg !458

1185:                                             ; preds = %1179
  store i16 1, i16* %1180, align 2, !dbg !458
  br label %1186, !dbg !458

1186:                                             ; preds = %1184, %1185, %1055, %1035, %1074, %1085, %1003, %1004
  call void @llvm.stackrestore(i8* %931), !dbg !459
  br label %1187, !dbg !74

1187:                                             ; preds = %1186, %14
  %1188 = call i8* @llvm.stacksave(), !dbg !167
  %1189 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1190 = load i8, i8* %1189, align 1, !dbg !171
  %1191 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1191, align 4, !dbg !173
  %1192 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1193 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1194 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1192, align 8, !dbg !176
  store %struct.VdbeCursor* %1194, %struct.VdbeCursor** %1193, align 8, !dbg !177
  %1195 = alloca i8*, align 8, !dbg !178
  %1196 = alloca i32, align 4, !dbg !179
  %1197 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1193, i32* %1191), !dbg !180
  %1198 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1193, align 8, !dbg !181
  %1199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !182
  %1200 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 16, !dbg !183
  %1201 = load i16, i16* %1200, align 2, !dbg !184
  %1202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 19, !dbg !185
  %1203 = load i32*, i32** %1202, align 8, !dbg !186
  %1204 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 0, !dbg !187
  %1205 = load i8, i8* %1204, align 1, !dbg !188
  %1206 = icmp ne i8 %1205, 3, !dbg !189
  %1207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 2, !dbg !190
  %1208 = load i8, i8* %1207, align 1, !dbg !191
  %1209 = icmp ne i8 %1208, 0, !dbg !192
  %1210 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 14, !dbg !193
  %1211 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 21, !dbg !194
  %1212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 22, !dbg !195
  %1213 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 20, !dbg !196
  %1214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 17, !dbg !197
  %1215 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 9, !dbg !198
  %1216 = load i32, i32* %1215, align 4, !dbg !199
  %1217 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1218 = load i32, i32* %1217, align 4, !dbg !201
  %1219 = icmp ne i32 %1216, %1218, !dbg !202
  br i1 %1219, label %1220, label %1262, !dbg !203

1220:                                             ; preds = %1187
  br i1 %1209, label %1242, label %1237, !dbg !204

1221:                                             ; preds = %1237, %1244
  %1222 = load i32, i32* %1217, align 4, !dbg !205
  store i32 %1222, i32* %1215, align 4, !dbg !206
  %1223 = load i8*, i8** %1213, align 8, !dbg !207
  %1224 = load i8, i8* %1223, align 1, !dbg !208
  %1225 = icmp sgt i8 %1224, -1, !dbg !211
  br i1 %1225, label %1226, label %1228, !dbg !212

1226:                                             ; preds = %1221
  %1227 = zext i8 %1224 to i32, !dbg !213
  store i32 %1227, i32* %1203, align 4, !dbg !214
  store i32 1, i32* %1210, align 4, !dbg !215
  br label %1231, !dbg !216

1228:                                             ; preds = %1221
  %1229 = call i8 @sqlite3GetVarint32(i8* %1223, i32* %1203), !dbg !217
  %1230 = zext i8 %1229 to i32, !dbg !218
  store i32 %1230, i32* %1210, align 4, !dbg !219
  br label %1231, !dbg !220

1231:                                             ; preds = %1228, %1226
  store i16 0, i16* %1214, align 2, !dbg !221
  %1232 = load i32, i32* %1212, align 4, !dbg !222
  %1233 = load i32, i32* %1203, align 4, !dbg !223
  %1234 = icmp ult i32 %1232, %1233, !dbg !224
  br i1 %1234, label %1236, label %1235, !dbg !225

1235:                                             ; preds = %1231
  store i8* %1223, i8** %1195, align 8, !dbg !226
  br label %1355, !dbg !227

1236:                                             ; preds = %1231
  store i8* null, i8** %1213, align 8, !dbg !228
  store i32 0, i32* %1212, align 4, !dbg !229
  br label %1262, !dbg !230

1237:                                             ; preds = %1220
  %1238 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 12, i32 0, !dbg !231
  %1239 = load %struct.BtCursor*, %struct.BtCursor** %1238, align 8, !dbg !232
  %1240 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1239), !dbg !233
  store i32 %1240, i32* %1211, align 4, !dbg !234
  %1241 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1239, i32* %1212), !dbg !235
  store i8* %1241, i8** %1213, align 8, !dbg !236
  br label %1221, !dbg !237

1242:                                             ; preds = %1220
  %1243 = icmp eq i8 %1205, 3, !dbg !238
  br i1 %1243, label %1244, label %1255, !dbg !239

1244:                                             ; preds = %1242
  %1245 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 10, !dbg !240
  %1246 = load i32, i32* %1245, align 4, !dbg !241
  %1247 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1246, !dbg !242
  %1248 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 1, !dbg !243
  %1249 = load i16, i16* %1248, align 2, !dbg !244
  %1250 = and i16 %1249, 16, !dbg !245
  %1251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 4, !dbg !246
  %1252 = load i32, i32* %1251, align 4, !dbg !247
  store i32 %1252, i32* %1211, align 4, !dbg !248
  store i32 %1252, i32* %1212, align 4, !dbg !249
  %1253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 5, !dbg !250
  %1254 = load i8*, i8** %1253, align 8, !dbg !251
  store i8* %1254, i8** %1213, align 8, !dbg !252
  br label %1221, !dbg !253

1255:                                             ; preds = %1242
  %1256 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !254
  %1257 = load i16, i16* %1256, align 2, !dbg !254
  %1258 = and i16 %1257, 9216, !dbg !254
  %1259 = icmp ne i16 %1258, 0, !dbg !254
  br i1 %1259, label %1260, label %1261, !dbg !254

1260:                                             ; preds = %1255
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !254
  br label %1443, !dbg !254

1261:                                             ; preds = %1255
  store i16 1, i16* %1256, align 2, !dbg !254
  br label %1443, !dbg !254

1262:                                             ; preds = %1236, %1187
  %1263 = load i16, i16* %1214, align 2, !dbg !255
  %1264 = icmp ule i16 %1263, 2, !dbg !256
  br i1 %1264, label %1347, label %1344, !dbg !257

1265:                                             ; preds = %1344, %1433
  %1266 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !258
  %1267 = load i16, i16* %1266, align 2, !dbg !259
  %1268 = and i16 9216, %1267, !dbg !260
  %1269 = icmp eq i16 0, %1268, !dbg !261
  br i1 %1269, label %1270, label %1274, !dbg !262

1270:                                             ; preds = %1265
  %1271 = icmp ne i16 %1268, 0, !dbg !263
  br i1 %1271, label %1272, label %1273, !dbg !263

1272:                                             ; preds = %1270
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !263
  br label %1274, !dbg !263

1273:                                             ; preds = %1270
  store i16 1, i16* %1266, align 2, !dbg !263
  br label %1274, !dbg !263

1274:                                             ; preds = %1272, %1273, %1265
  %1275 = load i32, i32* %1196, align 4, !dbg !264
  %1276 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 2, !dbg !265
  %1277 = load i32, i32* %1276, align 4, !dbg !266
  %1278 = load i32, i32* %1212, align 4, !dbg !267
  %1279 = getelementptr i32, i32* %1203, i32 3, !dbg !268
  %1280 = load i32, i32* %1279, align 4, !dbg !269
  %1281 = icmp sge i32 %1278, %1280, !dbg !270
  br i1 %1281, label %1282, label %1322, !dbg !271

1282:                                             ; preds = %1274
  %1283 = load i8*, i8** %1213, align 8, !dbg !272
  %1284 = ptrtoint i8* %1283 to i64, !dbg !273
  %1285 = getelementptr i32, i32* %1203, i32 2, !dbg !274
  %1286 = load i32, i32* %1285, align 4, !dbg !275
  %1287 = zext i32 %1286 to i64, !dbg !276
  %1288 = add i64 %1284, %1287, !dbg !277
  %1289 = inttoptr i64 %1288 to i8*, !dbg !278
  store i8* %1289, i8** %1195, align 8, !dbg !279
  %1290 = load i32, i32* %1196, align 4, !dbg !280
  %1291 = icmp ult i32 %1290, 12, !dbg !281
  br i1 %1291, label %1292, label %1294, !dbg !282

1292:                                             ; preds = %1282
  %1293 = call i32 @sqlite3VdbeSerialGet(i8* %1289, i32 %1290, %struct.sqlite3_value* %1199), !dbg !283
  br label %1443, !dbg !284

1294:                                             ; preds = %1282
  %1295 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1295, align 2, !dbg !286
  %1296 = getelementptr i16, i16* %1295, i32 1, !dbg !287
  store i16 514, i16* %1296, align 2, !dbg !288
  %1297 = load i32, i32* %1196, align 4, !dbg !289
  %1298 = sub i32 %1297, 12, !dbg !290
  %1299 = lshr i32 %1298, 1, !dbg !291
  %1300 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 4, !dbg !292
  store i32 %1299, i32* %1300, align 4, !dbg !293
  %1301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 2, !dbg !294
  store i8 %1190, i8* %1301, align 1, !dbg !295
  %1302 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 5, !dbg !296
  %1303 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 7, !dbg !297
  %1304 = load i32, i32* %1303, align 4, !dbg !298
  %1305 = add i32 %1299, 2, !dbg !299
  %1306 = icmp slt i32 %1304, %1305, !dbg !300
  br i1 %1306, label %1307, label %1309, !dbg !301

1307:                                             ; preds = %1294
  store i16 1, i16* %1266, align 2, !dbg !302
  %1308 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1199, i32 %1305, i32 0), !dbg !303
  br label %1312, !dbg !304

1309:                                             ; preds = %1294
  %1310 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 6, !dbg !305
  %1311 = load i8*, i8** %1310, align 8, !dbg !306
  store i8* %1311, i8** %1302, align 8, !dbg !307
  br label %1312, !dbg !308

1312:                                             ; preds = %1309, %1307
  %1313 = zext i32 %1299 to i64, !dbg !309
  %1314 = load i8*, i8** %1302, align 8, !dbg !310
  %1315 = load i8*, i8** %1195, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1314, i8* %1315, i64 %1313, i1 false), !dbg !312
  %1316 = getelementptr i8, i8* %1314, i32 %1299, !dbg !313
  store i8 0, i8* %1316, align 1, !dbg !314
  %1317 = add i32 %1299, 1, !dbg !315
  %1318 = getelementptr i8, i8* %1314, i32 %1317, !dbg !316
  store i8 0, i8* %1318, align 1, !dbg !317
  %1319 = and i32 %1297, 1, !dbg !318
  %1320 = getelementptr i16, i16* %1295, i32 %1319, !dbg !319
  %1321 = load i16, i16* %1320, align 2, !dbg !320
  store i16 %1321, i16* %1266, align 2, !dbg !321
  br label %1443, !dbg !322

1322:                                             ; preds = %1274
  %1323 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 2, !dbg !323
  store i8 %1190, i8* %1323, align 1, !dbg !324
  %1324 = load i32, i32* %1196, align 4, !dbg !325
  %1325 = and i32 %1324, 1, !dbg !326
  %1326 = icmp eq i32 %1325, 0, !dbg !327
  %1327 = icmp sge i32 %1324, 12, !dbg !328
  %1328 = and i1 %1327, %1326, !dbg !329
  %1329 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1324), !dbg !330
  %1330 = icmp eq i32 %1329, 0, !dbg !331
  br i1 %1330, label %1342, label %1331, !dbg !332

1331:                                             ; preds = %1322
  %1332 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 12, i32 0, !dbg !333
  %1333 = load %struct.BtCursor*, %struct.BtCursor** %1332, align 8, !dbg !334
  %1334 = getelementptr i32, i32* %1203, i32 2, !dbg !335
  %1335 = load i32, i32* %1334, align 4, !dbg !336
  %1336 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1333, i32 %1335, i32 %1329, %struct.sqlite3_value* %1199), !dbg !337
  %1337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 5, !dbg !338
  %1338 = load i8*, i8** %1337, align 8, !dbg !339
  %1339 = call i32 @sqlite3VdbeSerialGet(i8* %1338, i32 %1324, %struct.sqlite3_value* %1199), !dbg !340
  %1340 = load i16, i16* %1266, align 2, !dbg !341
  %1341 = and i16 %1340, -4097, !dbg !342
  store i16 %1341, i16* %1266, align 2, !dbg !343
  br label %1443, !dbg !344

1342:                                             ; preds = %1322
  %1343 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1324, %struct.sqlite3_value* %1199), !dbg !345
  br label %1443, !dbg !346

1344:                                             ; preds = %1262
  %1345 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 2, !dbg !347
  %1346 = load i32, i32* %1345, align 4, !dbg !348
  store i32 %1346, i32* %1196, align 4, !dbg !349
  br label %1265, !dbg !350

1347:                                             ; preds = %1262
  %1348 = load i32, i32* %1210, align 4, !dbg !351
  %1349 = load i32, i32* %1203, align 4, !dbg !352
  %1350 = icmp ult i32 %1348, %1349, !dbg !353
  br i1 %1350, label %1351, label %1432, !dbg !354

1351:                                             ; preds = %1347
  %1352 = load i8*, i8** %1213, align 8, !dbg !355
  %1353 = icmp eq i8* %1352, null, !dbg !356
  br i1 %1353, label %1355, label %1354, !dbg !357

1354:                                             ; preds = %1351
  store i8* %1352, i8** %1195, align 8, !dbg !358
  br label %1355, !dbg !359

1355:                                             ; preds = %1354, %1351, %1235
  %1356 = alloca i32, align 4, !dbg !360
  %1357 = load i16, i16* %1214, align 2, !dbg !361
  %1358 = zext i16 %1357 to i32, !dbg !362
  store i32 %1358, i32* %1356, align 4, !dbg !363
  %1359 = alloca i64, align 8, !dbg !364
  %1360 = getelementptr i32, i32* %1203, i32 %1358, !dbg !365
  %1361 = load i32, i32* %1360, align 4, !dbg !366
  %1362 = zext i32 %1361 to i64, !dbg !367
  store i64 %1362, i64* %1359, align 4, !dbg !368
  %1363 = load i8*, i8** %1195, align 8, !dbg !369
  %1364 = load i32, i32* %1210, align 4, !dbg !370
  %1365 = alloca i8*, align 8, !dbg !371
  %1366 = getelementptr i8, i8* %1363, i32 %1364, !dbg !372
  store i8* %1366, i8** %1365, align 8, !dbg !373
  %1367 = load i32, i32* %1203, align 4, !dbg !374
  %1368 = getelementptr i8, i8* %1363, i32 %1367, !dbg !375
  br label %1369, !dbg !376

1369:                                             ; preds = %1376, %1355
  %1370 = load i32, i32* %1356, align 4, !dbg !377
  %1371 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 %1370, !dbg !378
  %1372 = load i8*, i8** %1365, align 8, !dbg !379
  %1373 = load i8, i8* %1372, align 1, !dbg !380
  %1374 = zext i8 %1373 to i32, !dbg !381
  store i32 %1374, i32* %1196, align 4, !dbg !382
  store i32 %1374, i32* %1371, align 4, !dbg !383
  %1375 = icmp sgt i8 %1373, -1, !dbg !384
  br i1 %1375, label %1399, label %1390, !dbg !385

1376:                                             ; preds = %1390, %1399
  %1377 = load i32, i32* %1356, align 4, !dbg !386
  %1378 = add i32 %1377, 1, !dbg !387
  store i32 %1378, i32* %1356, align 4, !dbg !388
  %1379 = load i64, i64* %1359, align 4, !dbg !389
  %1380 = and i64 4294967295, %1379, !dbg !390
  %1381 = trunc i64 %1380 to i32, !dbg !391
  %1382 = getelementptr i32, i32* %1203, i32 %1378, !dbg !392
  store i32 %1381, i32* %1382, align 4, !dbg !393
  %1383 = load i32, i32* %1356, align 4, !dbg !394
  %1384 = icmp sle i32 %1383, 2, !dbg !395
  %1385 = load i8*, i8** %1365, align 8, !dbg !396
  %1386 = ptrtoint i8* %1385 to i64, !dbg !397
  %1387 = ptrtoint i8* %1368 to i64, !dbg !398
  %1388 = icmp ult i64 %1386, %1387, !dbg !399
  %1389 = and i1 %1384, %1388, !dbg !400
  br i1 %1389, label %1369, label %1408, !dbg !401

1390:                                             ; preds = %1369
  %1391 = load i8*, i8** %1365, align 8, !dbg !402
  %1392 = call i8 @sqlite3GetVarint32(i8* %1391, i32* %1196), !dbg !403
  %1393 = getelementptr i8, i8* %1391, i8 %1392, !dbg !404
  store i8* %1393, i8** %1365, align 8, !dbg !405
  %1394 = load i32, i32* %1196, align 4, !dbg !406
  store i32 %1394, i32* %1371, align 4, !dbg !407
  %1395 = load i64, i64* %1359, align 4, !dbg !408
  %1396 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1394), !dbg !409
  %1397 = zext i32 %1396 to i64, !dbg !410
  %1398 = add i64 %1395, %1397, !dbg !411
  store i64 %1398, i64* %1359, align 4, !dbg !412
  br label %1376, !dbg !413

1399:                                             ; preds = %1369
  %1400 = getelementptr i8, i8* %1372, i32 1, !dbg !414
  store i8* %1400, i8** %1365, align 8, !dbg !415
  %1401 = load i32, i32* %1196, align 4, !dbg !416
  %1402 = trunc i32 %1401 to i8, !dbg !417
  %1403 = getelementptr i8, i8* %4, i8 %1402, !dbg !418
  %1404 = load i8, i8* %1403, align 1, !dbg !419
  %1405 = zext i8 %1404 to i64, !dbg !420
  %1406 = load i64, i64* %1359, align 4, !dbg !421
  %1407 = add i64 %1406, %1405, !dbg !422
  store i64 %1407, i64* %1359, align 4, !dbg !423
  br label %1376, !dbg !424

1408:                                             ; preds = %1376
  %1409 = load i64, i64* %1359, align 4, !dbg !425
  %1410 = load i32, i32* %1211, align 4, !dbg !426
  %1411 = zext i32 %1410 to i64, !dbg !427
  %1412 = icmp uge i64 %1386, %1387, !dbg !428
  %1413 = icmp ugt i64 %1386, %1387, !dbg !429
  %1414 = icmp ne i64 %1409, %1411, !dbg !430
  %1415 = icmp ugt i64 %1409, %1411, !dbg !431
  %1416 = or i1 %1413, %1414, !dbg !432
  %1417 = and i1 %1412, %1416, !dbg !433
  %1418 = or i1 %1417, %1415, !dbg !434
  br i1 %1418, label %1419, label %1423, !dbg !435

1419:                                             ; preds = %1408
  %1420 = load i32, i32* %1203, align 4, !dbg !436
  %1421 = icmp eq i32 %1420, 0, !dbg !437
  br i1 %1421, label %1422, label %1423, !dbg !438

1422:                                             ; preds = %1419
  store i32 0, i32* %1356, align 4, !dbg !439
  store i8* %1368, i8** %1365, align 8, !dbg !440
  br label %1423, !dbg !441

1423:                                             ; preds = %1422, %1419, %1408
  %1424 = load i32, i32* %1356, align 4, !dbg !442
  %1425 = trunc i32 %1424 to i16, !dbg !443
  store i16 %1425, i16* %1214, align 2, !dbg !444
  %1426 = load i8*, i8** %1365, align 8, !dbg !445
  %1427 = ptrtoint i8* %1426 to i64, !dbg !446
  %1428 = load i8*, i8** %1195, align 8, !dbg !447
  %1429 = ptrtoint i8* %1428 to i64, !dbg !448
  %1430 = sub i64 %1427, %1429, !dbg !449
  %1431 = trunc i64 %1430 to i32, !dbg !450
  store i32 %1431, i32* %1210, align 4, !dbg !451
  br label %1433, !dbg !452

1432:                                             ; preds = %1347
  store i32 0, i32* %1196, align 4, !dbg !453
  br label %1433, !dbg !454

1433:                                             ; preds = %1423, %1432
  %1434 = load i16, i16* %1214, align 2, !dbg !455
  %1435 = icmp sle i16 %1434, 2, !dbg !456
  br i1 %1435, label %1436, label %1265, !dbg !457

1436:                                             ; preds = %1433
  %1437 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !458
  %1438 = load i16, i16* %1437, align 2, !dbg !458
  %1439 = and i16 %1438, 9216, !dbg !458
  %1440 = icmp ne i16 %1439, 0, !dbg !458
  br i1 %1440, label %1441, label %1442, !dbg !458

1441:                                             ; preds = %1436
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !458
  br label %1443, !dbg !458

1442:                                             ; preds = %1436
  store i16 1, i16* %1437, align 2, !dbg !458
  br label %1443, !dbg !458

1443:                                             ; preds = %1441, %1442, %1312, %1292, %1331, %1342, %1260, %1261
  call void @llvm.stackrestore(i8* %1188), !dbg !459
  br label %1444, !dbg !74

1444:                                             ; preds = %1443, %14
  %1445 = call i8* @llvm.stacksave(), !dbg !167
  %1446 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1447 = load i8, i8* %1446, align 1, !dbg !171
  %1448 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1448, align 4, !dbg !173
  %1449 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1450 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1451 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1449, align 8, !dbg !176
  store %struct.VdbeCursor* %1451, %struct.VdbeCursor** %1450, align 8, !dbg !177
  %1452 = alloca i8*, align 8, !dbg !178
  %1453 = alloca i32, align 4, !dbg !179
  %1454 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1450, i32* %1448), !dbg !180
  %1455 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1450, align 8, !dbg !181
  %1456 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !182
  %1457 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 16, !dbg !183
  %1458 = load i16, i16* %1457, align 2, !dbg !184
  %1459 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 19, !dbg !185
  %1460 = load i32*, i32** %1459, align 8, !dbg !186
  %1461 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 0, !dbg !187
  %1462 = load i8, i8* %1461, align 1, !dbg !188
  %1463 = icmp ne i8 %1462, 3, !dbg !189
  %1464 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 2, !dbg !190
  %1465 = load i8, i8* %1464, align 1, !dbg !191
  %1466 = icmp ne i8 %1465, 0, !dbg !192
  %1467 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 14, !dbg !193
  %1468 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 21, !dbg !194
  %1469 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 22, !dbg !195
  %1470 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 20, !dbg !196
  %1471 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 17, !dbg !197
  %1472 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 9, !dbg !198
  %1473 = load i32, i32* %1472, align 4, !dbg !199
  %1474 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1475 = load i32, i32* %1474, align 4, !dbg !201
  %1476 = icmp ne i32 %1473, %1475, !dbg !202
  br i1 %1476, label %1477, label %1519, !dbg !203

1477:                                             ; preds = %1444
  br i1 %1466, label %1499, label %1494, !dbg !204

1478:                                             ; preds = %1494, %1501
  %1479 = load i32, i32* %1474, align 4, !dbg !205
  store i32 %1479, i32* %1472, align 4, !dbg !206
  %1480 = load i8*, i8** %1470, align 8, !dbg !207
  %1481 = load i8, i8* %1480, align 1, !dbg !208
  %1482 = icmp sgt i8 %1481, -1, !dbg !211
  br i1 %1482, label %1483, label %1485, !dbg !212

1483:                                             ; preds = %1478
  %1484 = zext i8 %1481 to i32, !dbg !213
  store i32 %1484, i32* %1460, align 4, !dbg !214
  store i32 1, i32* %1467, align 4, !dbg !215
  br label %1488, !dbg !216

1485:                                             ; preds = %1478
  %1486 = call i8 @sqlite3GetVarint32(i8* %1480, i32* %1460), !dbg !217
  %1487 = zext i8 %1486 to i32, !dbg !218
  store i32 %1487, i32* %1467, align 4, !dbg !219
  br label %1488, !dbg !220

1488:                                             ; preds = %1485, %1483
  store i16 0, i16* %1471, align 2, !dbg !221
  %1489 = load i32, i32* %1469, align 4, !dbg !222
  %1490 = load i32, i32* %1460, align 4, !dbg !223
  %1491 = icmp ult i32 %1489, %1490, !dbg !224
  br i1 %1491, label %1493, label %1492, !dbg !225

1492:                                             ; preds = %1488
  store i8* %1480, i8** %1452, align 8, !dbg !226
  br label %1612, !dbg !227

1493:                                             ; preds = %1488
  store i8* null, i8** %1470, align 8, !dbg !228
  store i32 0, i32* %1469, align 4, !dbg !229
  br label %1519, !dbg !230

1494:                                             ; preds = %1477
  %1495 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 12, i32 0, !dbg !231
  %1496 = load %struct.BtCursor*, %struct.BtCursor** %1495, align 8, !dbg !232
  %1497 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1496), !dbg !233
  store i32 %1497, i32* %1468, align 4, !dbg !234
  %1498 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1496, i32* %1469), !dbg !235
  store i8* %1498, i8** %1470, align 8, !dbg !236
  br label %1478, !dbg !237

1499:                                             ; preds = %1477
  %1500 = icmp eq i8 %1462, 3, !dbg !238
  br i1 %1500, label %1501, label %1512, !dbg !239

1501:                                             ; preds = %1499
  %1502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 10, !dbg !240
  %1503 = load i32, i32* %1502, align 4, !dbg !241
  %1504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1503, !dbg !242
  %1505 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1504, i32 0, i32 1, !dbg !243
  %1506 = load i16, i16* %1505, align 2, !dbg !244
  %1507 = and i16 %1506, 16, !dbg !245
  %1508 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1504, i32 0, i32 4, !dbg !246
  %1509 = load i32, i32* %1508, align 4, !dbg !247
  store i32 %1509, i32* %1468, align 4, !dbg !248
  store i32 %1509, i32* %1469, align 4, !dbg !249
  %1510 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1504, i32 0, i32 5, !dbg !250
  %1511 = load i8*, i8** %1510, align 8, !dbg !251
  store i8* %1511, i8** %1470, align 8, !dbg !252
  br label %1478, !dbg !253

1512:                                             ; preds = %1499
  %1513 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 1, !dbg !254
  %1514 = load i16, i16* %1513, align 2, !dbg !254
  %1515 = and i16 %1514, 9216, !dbg !254
  %1516 = icmp ne i16 %1515, 0, !dbg !254
  br i1 %1516, label %1517, label %1518, !dbg !254

1517:                                             ; preds = %1512
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1456), !dbg !254
  br label %1700, !dbg !254

1518:                                             ; preds = %1512
  store i16 1, i16* %1513, align 2, !dbg !254
  br label %1700, !dbg !254

1519:                                             ; preds = %1493, %1444
  %1520 = load i16, i16* %1471, align 2, !dbg !255
  %1521 = icmp ule i16 %1520, 4, !dbg !256
  br i1 %1521, label %1604, label %1601, !dbg !257

1522:                                             ; preds = %1601, %1690
  %1523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 1, !dbg !258
  %1524 = load i16, i16* %1523, align 2, !dbg !259
  %1525 = and i16 9216, %1524, !dbg !260
  %1526 = icmp eq i16 0, %1525, !dbg !261
  br i1 %1526, label %1527, label %1531, !dbg !262

1527:                                             ; preds = %1522
  %1528 = icmp ne i16 %1525, 0, !dbg !263
  br i1 %1528, label %1529, label %1530, !dbg !263

1529:                                             ; preds = %1527
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1456), !dbg !263
  br label %1531, !dbg !263

1530:                                             ; preds = %1527
  store i16 1, i16* %1523, align 2, !dbg !263
  br label %1531, !dbg !263

1531:                                             ; preds = %1529, %1530, %1522
  %1532 = load i32, i32* %1453, align 4, !dbg !264
  %1533 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 23, i32 4, !dbg !265
  %1534 = load i32, i32* %1533, align 4, !dbg !266
  %1535 = load i32, i32* %1469, align 4, !dbg !267
  %1536 = getelementptr i32, i32* %1460, i32 5, !dbg !268
  %1537 = load i32, i32* %1536, align 4, !dbg !269
  %1538 = icmp sge i32 %1535, %1537, !dbg !270
  br i1 %1538, label %1539, label %1579, !dbg !271

1539:                                             ; preds = %1531
  %1540 = load i8*, i8** %1470, align 8, !dbg !272
  %1541 = ptrtoint i8* %1540 to i64, !dbg !273
  %1542 = getelementptr i32, i32* %1460, i32 4, !dbg !274
  %1543 = load i32, i32* %1542, align 4, !dbg !275
  %1544 = zext i32 %1543 to i64, !dbg !276
  %1545 = add i64 %1541, %1544, !dbg !277
  %1546 = inttoptr i64 %1545 to i8*, !dbg !278
  store i8* %1546, i8** %1452, align 8, !dbg !279
  %1547 = load i32, i32* %1453, align 4, !dbg !280
  %1548 = icmp ult i32 %1547, 12, !dbg !281
  br i1 %1548, label %1549, label %1551, !dbg !282

1549:                                             ; preds = %1539
  %1550 = call i32 @sqlite3VdbeSerialGet(i8* %1546, i32 %1547, %struct.sqlite3_value* %1456), !dbg !283
  br label %1700, !dbg !284

1551:                                             ; preds = %1539
  %1552 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1552, align 2, !dbg !286
  %1553 = getelementptr i16, i16* %1552, i32 1, !dbg !287
  store i16 514, i16* %1553, align 2, !dbg !288
  %1554 = load i32, i32* %1453, align 4, !dbg !289
  %1555 = sub i32 %1554, 12, !dbg !290
  %1556 = lshr i32 %1555, 1, !dbg !291
  %1557 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 4, !dbg !292
  store i32 %1556, i32* %1557, align 4, !dbg !293
  %1558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 2, !dbg !294
  store i8 %1447, i8* %1558, align 1, !dbg !295
  %1559 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 5, !dbg !296
  %1560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 7, !dbg !297
  %1561 = load i32, i32* %1560, align 4, !dbg !298
  %1562 = add i32 %1556, 2, !dbg !299
  %1563 = icmp slt i32 %1561, %1562, !dbg !300
  br i1 %1563, label %1564, label %1566, !dbg !301

1564:                                             ; preds = %1551
  store i16 1, i16* %1523, align 2, !dbg !302
  %1565 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1456, i32 %1562, i32 0), !dbg !303
  br label %1569, !dbg !304

1566:                                             ; preds = %1551
  %1567 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 6, !dbg !305
  %1568 = load i8*, i8** %1567, align 8, !dbg !306
  store i8* %1568, i8** %1559, align 8, !dbg !307
  br label %1569, !dbg !308

1569:                                             ; preds = %1566, %1564
  %1570 = zext i32 %1556 to i64, !dbg !309
  %1571 = load i8*, i8** %1559, align 8, !dbg !310
  %1572 = load i8*, i8** %1452, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1571, i8* %1572, i64 %1570, i1 false), !dbg !312
  %1573 = getelementptr i8, i8* %1571, i32 %1556, !dbg !313
  store i8 0, i8* %1573, align 1, !dbg !314
  %1574 = add i32 %1556, 1, !dbg !315
  %1575 = getelementptr i8, i8* %1571, i32 %1574, !dbg !316
  store i8 0, i8* %1575, align 1, !dbg !317
  %1576 = and i32 %1554, 1, !dbg !318
  %1577 = getelementptr i16, i16* %1552, i32 %1576, !dbg !319
  %1578 = load i16, i16* %1577, align 2, !dbg !320
  store i16 %1578, i16* %1523, align 2, !dbg !321
  br label %1700, !dbg !322

1579:                                             ; preds = %1531
  %1580 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 2, !dbg !323
  store i8 %1447, i8* %1580, align 1, !dbg !324
  %1581 = load i32, i32* %1453, align 4, !dbg !325
  %1582 = and i32 %1581, 1, !dbg !326
  %1583 = icmp eq i32 %1582, 0, !dbg !327
  %1584 = icmp sge i32 %1581, 12, !dbg !328
  %1585 = and i1 %1584, %1583, !dbg !329
  %1586 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1581), !dbg !330
  %1587 = icmp eq i32 %1586, 0, !dbg !331
  br i1 %1587, label %1599, label %1588, !dbg !332

1588:                                             ; preds = %1579
  %1589 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 12, i32 0, !dbg !333
  %1590 = load %struct.BtCursor*, %struct.BtCursor** %1589, align 8, !dbg !334
  %1591 = getelementptr i32, i32* %1460, i32 4, !dbg !335
  %1592 = load i32, i32* %1591, align 4, !dbg !336
  %1593 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1590, i32 %1592, i32 %1586, %struct.sqlite3_value* %1456), !dbg !337
  %1594 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 5, !dbg !338
  %1595 = load i8*, i8** %1594, align 8, !dbg !339
  %1596 = call i32 @sqlite3VdbeSerialGet(i8* %1595, i32 %1581, %struct.sqlite3_value* %1456), !dbg !340
  %1597 = load i16, i16* %1523, align 2, !dbg !341
  %1598 = and i16 %1597, -4097, !dbg !342
  store i16 %1598, i16* %1523, align 2, !dbg !343
  br label %1700, !dbg !344

1599:                                             ; preds = %1579
  %1600 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1581, %struct.sqlite3_value* %1456), !dbg !345
  br label %1700, !dbg !346

1601:                                             ; preds = %1519
  %1602 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 23, i32 4, !dbg !347
  %1603 = load i32, i32* %1602, align 4, !dbg !348
  store i32 %1603, i32* %1453, align 4, !dbg !349
  br label %1522, !dbg !350

1604:                                             ; preds = %1519
  %1605 = load i32, i32* %1467, align 4, !dbg !351
  %1606 = load i32, i32* %1460, align 4, !dbg !352
  %1607 = icmp ult i32 %1605, %1606, !dbg !353
  br i1 %1607, label %1608, label %1689, !dbg !354

1608:                                             ; preds = %1604
  %1609 = load i8*, i8** %1470, align 8, !dbg !355
  %1610 = icmp eq i8* %1609, null, !dbg !356
  br i1 %1610, label %1612, label %1611, !dbg !357

1611:                                             ; preds = %1608
  store i8* %1609, i8** %1452, align 8, !dbg !358
  br label %1612, !dbg !359

1612:                                             ; preds = %1611, %1608, %1492
  %1613 = alloca i32, align 4, !dbg !360
  %1614 = load i16, i16* %1471, align 2, !dbg !361
  %1615 = zext i16 %1614 to i32, !dbg !362
  store i32 %1615, i32* %1613, align 4, !dbg !363
  %1616 = alloca i64, align 8, !dbg !364
  %1617 = getelementptr i32, i32* %1460, i32 %1615, !dbg !365
  %1618 = load i32, i32* %1617, align 4, !dbg !366
  %1619 = zext i32 %1618 to i64, !dbg !367
  store i64 %1619, i64* %1616, align 4, !dbg !368
  %1620 = load i8*, i8** %1452, align 8, !dbg !369
  %1621 = load i32, i32* %1467, align 4, !dbg !370
  %1622 = alloca i8*, align 8, !dbg !371
  %1623 = getelementptr i8, i8* %1620, i32 %1621, !dbg !372
  store i8* %1623, i8** %1622, align 8, !dbg !373
  %1624 = load i32, i32* %1460, align 4, !dbg !374
  %1625 = getelementptr i8, i8* %1620, i32 %1624, !dbg !375
  br label %1626, !dbg !376

1626:                                             ; preds = %1633, %1612
  %1627 = load i32, i32* %1613, align 4, !dbg !377
  %1628 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1455, i32 0, i32 23, i32 %1627, !dbg !378
  %1629 = load i8*, i8** %1622, align 8, !dbg !379
  %1630 = load i8, i8* %1629, align 1, !dbg !380
  %1631 = zext i8 %1630 to i32, !dbg !381
  store i32 %1631, i32* %1453, align 4, !dbg !382
  store i32 %1631, i32* %1628, align 4, !dbg !383
  %1632 = icmp sgt i8 %1630, -1, !dbg !384
  br i1 %1632, label %1656, label %1647, !dbg !385

1633:                                             ; preds = %1647, %1656
  %1634 = load i32, i32* %1613, align 4, !dbg !386
  %1635 = add i32 %1634, 1, !dbg !387
  store i32 %1635, i32* %1613, align 4, !dbg !388
  %1636 = load i64, i64* %1616, align 4, !dbg !389
  %1637 = and i64 4294967295, %1636, !dbg !390
  %1638 = trunc i64 %1637 to i32, !dbg !391
  %1639 = getelementptr i32, i32* %1460, i32 %1635, !dbg !392
  store i32 %1638, i32* %1639, align 4, !dbg !393
  %1640 = load i32, i32* %1613, align 4, !dbg !394
  %1641 = icmp sle i32 %1640, 4, !dbg !395
  %1642 = load i8*, i8** %1622, align 8, !dbg !396
  %1643 = ptrtoint i8* %1642 to i64, !dbg !397
  %1644 = ptrtoint i8* %1625 to i64, !dbg !398
  %1645 = icmp ult i64 %1643, %1644, !dbg !399
  %1646 = and i1 %1641, %1645, !dbg !400
  br i1 %1646, label %1626, label %1665, !dbg !401

1647:                                             ; preds = %1626
  %1648 = load i8*, i8** %1622, align 8, !dbg !402
  %1649 = call i8 @sqlite3GetVarint32(i8* %1648, i32* %1453), !dbg !403
  %1650 = getelementptr i8, i8* %1648, i8 %1649, !dbg !404
  store i8* %1650, i8** %1622, align 8, !dbg !405
  %1651 = load i32, i32* %1453, align 4, !dbg !406
  store i32 %1651, i32* %1628, align 4, !dbg !407
  %1652 = load i64, i64* %1616, align 4, !dbg !408
  %1653 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1651), !dbg !409
  %1654 = zext i32 %1653 to i64, !dbg !410
  %1655 = add i64 %1652, %1654, !dbg !411
  store i64 %1655, i64* %1616, align 4, !dbg !412
  br label %1633, !dbg !413

1656:                                             ; preds = %1626
  %1657 = getelementptr i8, i8* %1629, i32 1, !dbg !414
  store i8* %1657, i8** %1622, align 8, !dbg !415
  %1658 = load i32, i32* %1453, align 4, !dbg !416
  %1659 = trunc i32 %1658 to i8, !dbg !417
  %1660 = getelementptr i8, i8* %4, i8 %1659, !dbg !418
  %1661 = load i8, i8* %1660, align 1, !dbg !419
  %1662 = zext i8 %1661 to i64, !dbg !420
  %1663 = load i64, i64* %1616, align 4, !dbg !421
  %1664 = add i64 %1663, %1662, !dbg !422
  store i64 %1664, i64* %1616, align 4, !dbg !423
  br label %1633, !dbg !424

1665:                                             ; preds = %1633
  %1666 = load i64, i64* %1616, align 4, !dbg !425
  %1667 = load i32, i32* %1468, align 4, !dbg !426
  %1668 = zext i32 %1667 to i64, !dbg !427
  %1669 = icmp uge i64 %1643, %1644, !dbg !428
  %1670 = icmp ugt i64 %1643, %1644, !dbg !429
  %1671 = icmp ne i64 %1666, %1668, !dbg !430
  %1672 = icmp ugt i64 %1666, %1668, !dbg !431
  %1673 = or i1 %1670, %1671, !dbg !432
  %1674 = and i1 %1669, %1673, !dbg !433
  %1675 = or i1 %1674, %1672, !dbg !434
  br i1 %1675, label %1676, label %1680, !dbg !435

1676:                                             ; preds = %1665
  %1677 = load i32, i32* %1460, align 4, !dbg !436
  %1678 = icmp eq i32 %1677, 0, !dbg !437
  br i1 %1678, label %1679, label %1680, !dbg !438

1679:                                             ; preds = %1676
  store i32 0, i32* %1613, align 4, !dbg !439
  store i8* %1625, i8** %1622, align 8, !dbg !440
  br label %1680, !dbg !441

1680:                                             ; preds = %1679, %1676, %1665
  %1681 = load i32, i32* %1613, align 4, !dbg !442
  %1682 = trunc i32 %1681 to i16, !dbg !443
  store i16 %1682, i16* %1471, align 2, !dbg !444
  %1683 = load i8*, i8** %1622, align 8, !dbg !445
  %1684 = ptrtoint i8* %1683 to i64, !dbg !446
  %1685 = load i8*, i8** %1452, align 8, !dbg !447
  %1686 = ptrtoint i8* %1685 to i64, !dbg !448
  %1687 = sub i64 %1684, %1686, !dbg !449
  %1688 = trunc i64 %1687 to i32, !dbg !450
  store i32 %1688, i32* %1467, align 4, !dbg !451
  br label %1690, !dbg !452

1689:                                             ; preds = %1604
  store i32 0, i32* %1453, align 4, !dbg !453
  br label %1690, !dbg !454

1690:                                             ; preds = %1680, %1689
  %1691 = load i16, i16* %1471, align 2, !dbg !455
  %1692 = icmp sle i16 %1691, 4, !dbg !456
  br i1 %1692, label %1693, label %1522, !dbg !457

1693:                                             ; preds = %1690
  %1694 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1456, i32 0, i32 1, !dbg !458
  %1695 = load i16, i16* %1694, align 2, !dbg !458
  %1696 = and i16 %1695, 9216, !dbg !458
  %1697 = icmp ne i16 %1696, 0, !dbg !458
  br i1 %1697, label %1698, label %1699, !dbg !458

1698:                                             ; preds = %1693
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1456), !dbg !458
  br label %1700, !dbg !458

1699:                                             ; preds = %1693
  store i16 1, i16* %1694, align 2, !dbg !458
  br label %1700, !dbg !458

1700:                                             ; preds = %1698, %1699, %1569, %1549, %1588, %1599, %1517, %1518
  call void @llvm.stackrestore(i8* %1445), !dbg !459
  br label %1701, !dbg !74

1701:                                             ; preds = %1700, %14
  %1702 = call i8* @llvm.stacksave(), !dbg !167
  %1703 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1704 = load i8, i8* %1703, align 1, !dbg !171
  %1705 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1705, align 4, !dbg !173
  %1706 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1707 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1708 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1706, align 8, !dbg !176
  store %struct.VdbeCursor* %1708, %struct.VdbeCursor** %1707, align 8, !dbg !177
  %1709 = alloca i8*, align 8, !dbg !178
  %1710 = alloca i32, align 4, !dbg !179
  %1711 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1707, i32* %1705), !dbg !180
  %1712 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1707, align 8, !dbg !181
  %1713 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !182
  %1714 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 16, !dbg !183
  %1715 = load i16, i16* %1714, align 2, !dbg !184
  %1716 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 19, !dbg !185
  %1717 = load i32*, i32** %1716, align 8, !dbg !186
  %1718 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 0, !dbg !187
  %1719 = load i8, i8* %1718, align 1, !dbg !188
  %1720 = icmp ne i8 %1719, 3, !dbg !189
  %1721 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 2, !dbg !190
  %1722 = load i8, i8* %1721, align 1, !dbg !191
  %1723 = icmp ne i8 %1722, 0, !dbg !192
  %1724 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 14, !dbg !193
  %1725 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 21, !dbg !194
  %1726 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 22, !dbg !195
  %1727 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 20, !dbg !196
  %1728 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 17, !dbg !197
  %1729 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 9, !dbg !198
  %1730 = load i32, i32* %1729, align 4, !dbg !199
  %1731 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1732 = load i32, i32* %1731, align 4, !dbg !201
  %1733 = icmp ne i32 %1730, %1732, !dbg !202
  br i1 %1733, label %1734, label %1776, !dbg !203

1734:                                             ; preds = %1701
  br i1 %1723, label %1756, label %1751, !dbg !204

1735:                                             ; preds = %1751, %1758
  %1736 = load i32, i32* %1731, align 4, !dbg !205
  store i32 %1736, i32* %1729, align 4, !dbg !206
  %1737 = load i8*, i8** %1727, align 8, !dbg !207
  %1738 = load i8, i8* %1737, align 1, !dbg !208
  %1739 = icmp sgt i8 %1738, -1, !dbg !211
  br i1 %1739, label %1740, label %1742, !dbg !212

1740:                                             ; preds = %1735
  %1741 = zext i8 %1738 to i32, !dbg !213
  store i32 %1741, i32* %1717, align 4, !dbg !214
  store i32 1, i32* %1724, align 4, !dbg !215
  br label %1745, !dbg !216

1742:                                             ; preds = %1735
  %1743 = call i8 @sqlite3GetVarint32(i8* %1737, i32* %1717), !dbg !217
  %1744 = zext i8 %1743 to i32, !dbg !218
  store i32 %1744, i32* %1724, align 4, !dbg !219
  br label %1745, !dbg !220

1745:                                             ; preds = %1742, %1740
  store i16 0, i16* %1728, align 2, !dbg !221
  %1746 = load i32, i32* %1726, align 4, !dbg !222
  %1747 = load i32, i32* %1717, align 4, !dbg !223
  %1748 = icmp ult i32 %1746, %1747, !dbg !224
  br i1 %1748, label %1750, label %1749, !dbg !225

1749:                                             ; preds = %1745
  store i8* %1737, i8** %1709, align 8, !dbg !226
  br label %1869, !dbg !227

1750:                                             ; preds = %1745
  store i8* null, i8** %1727, align 8, !dbg !228
  store i32 0, i32* %1726, align 4, !dbg !229
  br label %1776, !dbg !230

1751:                                             ; preds = %1734
  %1752 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 12, i32 0, !dbg !231
  %1753 = load %struct.BtCursor*, %struct.BtCursor** %1752, align 8, !dbg !232
  %1754 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1753), !dbg !233
  store i32 %1754, i32* %1725, align 4, !dbg !234
  %1755 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1753, i32* %1726), !dbg !235
  store i8* %1755, i8** %1727, align 8, !dbg !236
  br label %1735, !dbg !237

1756:                                             ; preds = %1734
  %1757 = icmp eq i8 %1719, 3, !dbg !238
  br i1 %1757, label %1758, label %1769, !dbg !239

1758:                                             ; preds = %1756
  %1759 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 10, !dbg !240
  %1760 = load i32, i32* %1759, align 4, !dbg !241
  %1761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1760, !dbg !242
  %1762 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1761, i32 0, i32 1, !dbg !243
  %1763 = load i16, i16* %1762, align 2, !dbg !244
  %1764 = and i16 %1763, 16, !dbg !245
  %1765 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1761, i32 0, i32 4, !dbg !246
  %1766 = load i32, i32* %1765, align 4, !dbg !247
  store i32 %1766, i32* %1725, align 4, !dbg !248
  store i32 %1766, i32* %1726, align 4, !dbg !249
  %1767 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1761, i32 0, i32 5, !dbg !250
  %1768 = load i8*, i8** %1767, align 8, !dbg !251
  store i8* %1768, i8** %1727, align 8, !dbg !252
  br label %1735, !dbg !253

1769:                                             ; preds = %1756
  %1770 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 1, !dbg !254
  %1771 = load i16, i16* %1770, align 2, !dbg !254
  %1772 = and i16 %1771, 9216, !dbg !254
  %1773 = icmp ne i16 %1772, 0, !dbg !254
  br i1 %1773, label %1774, label %1775, !dbg !254

1774:                                             ; preds = %1769
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1713), !dbg !254
  br label %1957, !dbg !254

1775:                                             ; preds = %1769
  store i16 1, i16* %1770, align 2, !dbg !254
  br label %1957, !dbg !254

1776:                                             ; preds = %1750, %1701
  %1777 = load i16, i16* %1728, align 2, !dbg !255
  %1778 = icmp ule i16 %1777, 5, !dbg !256
  br i1 %1778, label %1861, label %1858, !dbg !257

1779:                                             ; preds = %1858, %1947
  %1780 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 1, !dbg !258
  %1781 = load i16, i16* %1780, align 2, !dbg !259
  %1782 = and i16 9216, %1781, !dbg !260
  %1783 = icmp eq i16 0, %1782, !dbg !261
  br i1 %1783, label %1784, label %1788, !dbg !262

1784:                                             ; preds = %1779
  %1785 = icmp ne i16 %1782, 0, !dbg !263
  br i1 %1785, label %1786, label %1787, !dbg !263

1786:                                             ; preds = %1784
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1713), !dbg !263
  br label %1788, !dbg !263

1787:                                             ; preds = %1784
  store i16 1, i16* %1780, align 2, !dbg !263
  br label %1788, !dbg !263

1788:                                             ; preds = %1786, %1787, %1779
  %1789 = load i32, i32* %1710, align 4, !dbg !264
  %1790 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 23, i32 5, !dbg !265
  %1791 = load i32, i32* %1790, align 4, !dbg !266
  %1792 = load i32, i32* %1726, align 4, !dbg !267
  %1793 = getelementptr i32, i32* %1717, i32 6, !dbg !268
  %1794 = load i32, i32* %1793, align 4, !dbg !269
  %1795 = icmp sge i32 %1792, %1794, !dbg !270
  br i1 %1795, label %1796, label %1836, !dbg !271

1796:                                             ; preds = %1788
  %1797 = load i8*, i8** %1727, align 8, !dbg !272
  %1798 = ptrtoint i8* %1797 to i64, !dbg !273
  %1799 = getelementptr i32, i32* %1717, i32 5, !dbg !274
  %1800 = load i32, i32* %1799, align 4, !dbg !275
  %1801 = zext i32 %1800 to i64, !dbg !276
  %1802 = add i64 %1798, %1801, !dbg !277
  %1803 = inttoptr i64 %1802 to i8*, !dbg !278
  store i8* %1803, i8** %1709, align 8, !dbg !279
  %1804 = load i32, i32* %1710, align 4, !dbg !280
  %1805 = icmp ult i32 %1804, 12, !dbg !281
  br i1 %1805, label %1806, label %1808, !dbg !282

1806:                                             ; preds = %1796
  %1807 = call i32 @sqlite3VdbeSerialGet(i8* %1803, i32 %1804, %struct.sqlite3_value* %1713), !dbg !283
  br label %1957, !dbg !284

1808:                                             ; preds = %1796
  %1809 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1809, align 2, !dbg !286
  %1810 = getelementptr i16, i16* %1809, i32 1, !dbg !287
  store i16 514, i16* %1810, align 2, !dbg !288
  %1811 = load i32, i32* %1710, align 4, !dbg !289
  %1812 = sub i32 %1811, 12, !dbg !290
  %1813 = lshr i32 %1812, 1, !dbg !291
  %1814 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 4, !dbg !292
  store i32 %1813, i32* %1814, align 4, !dbg !293
  %1815 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 2, !dbg !294
  store i8 %1704, i8* %1815, align 1, !dbg !295
  %1816 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 5, !dbg !296
  %1817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 7, !dbg !297
  %1818 = load i32, i32* %1817, align 4, !dbg !298
  %1819 = add i32 %1813, 2, !dbg !299
  %1820 = icmp slt i32 %1818, %1819, !dbg !300
  br i1 %1820, label %1821, label %1823, !dbg !301

1821:                                             ; preds = %1808
  store i16 1, i16* %1780, align 2, !dbg !302
  %1822 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1713, i32 %1819, i32 0), !dbg !303
  br label %1826, !dbg !304

1823:                                             ; preds = %1808
  %1824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 6, !dbg !305
  %1825 = load i8*, i8** %1824, align 8, !dbg !306
  store i8* %1825, i8** %1816, align 8, !dbg !307
  br label %1826, !dbg !308

1826:                                             ; preds = %1823, %1821
  %1827 = zext i32 %1813 to i64, !dbg !309
  %1828 = load i8*, i8** %1816, align 8, !dbg !310
  %1829 = load i8*, i8** %1709, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1828, i8* %1829, i64 %1827, i1 false), !dbg !312
  %1830 = getelementptr i8, i8* %1828, i32 %1813, !dbg !313
  store i8 0, i8* %1830, align 1, !dbg !314
  %1831 = add i32 %1813, 1, !dbg !315
  %1832 = getelementptr i8, i8* %1828, i32 %1831, !dbg !316
  store i8 0, i8* %1832, align 1, !dbg !317
  %1833 = and i32 %1811, 1, !dbg !318
  %1834 = getelementptr i16, i16* %1809, i32 %1833, !dbg !319
  %1835 = load i16, i16* %1834, align 2, !dbg !320
  store i16 %1835, i16* %1780, align 2, !dbg !321
  br label %1957, !dbg !322

1836:                                             ; preds = %1788
  %1837 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 2, !dbg !323
  store i8 %1704, i8* %1837, align 1, !dbg !324
  %1838 = load i32, i32* %1710, align 4, !dbg !325
  %1839 = and i32 %1838, 1, !dbg !326
  %1840 = icmp eq i32 %1839, 0, !dbg !327
  %1841 = icmp sge i32 %1838, 12, !dbg !328
  %1842 = and i1 %1841, %1840, !dbg !329
  %1843 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1838), !dbg !330
  %1844 = icmp eq i32 %1843, 0, !dbg !331
  br i1 %1844, label %1856, label %1845, !dbg !332

1845:                                             ; preds = %1836
  %1846 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 12, i32 0, !dbg !333
  %1847 = load %struct.BtCursor*, %struct.BtCursor** %1846, align 8, !dbg !334
  %1848 = getelementptr i32, i32* %1717, i32 5, !dbg !335
  %1849 = load i32, i32* %1848, align 4, !dbg !336
  %1850 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1847, i32 %1849, i32 %1843, %struct.sqlite3_value* %1713), !dbg !337
  %1851 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 5, !dbg !338
  %1852 = load i8*, i8** %1851, align 8, !dbg !339
  %1853 = call i32 @sqlite3VdbeSerialGet(i8* %1852, i32 %1838, %struct.sqlite3_value* %1713), !dbg !340
  %1854 = load i16, i16* %1780, align 2, !dbg !341
  %1855 = and i16 %1854, -4097, !dbg !342
  store i16 %1855, i16* %1780, align 2, !dbg !343
  br label %1957, !dbg !344

1856:                                             ; preds = %1836
  %1857 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1838, %struct.sqlite3_value* %1713), !dbg !345
  br label %1957, !dbg !346

1858:                                             ; preds = %1776
  %1859 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 23, i32 5, !dbg !347
  %1860 = load i32, i32* %1859, align 4, !dbg !348
  store i32 %1860, i32* %1710, align 4, !dbg !349
  br label %1779, !dbg !350

1861:                                             ; preds = %1776
  %1862 = load i32, i32* %1724, align 4, !dbg !351
  %1863 = load i32, i32* %1717, align 4, !dbg !352
  %1864 = icmp ult i32 %1862, %1863, !dbg !353
  br i1 %1864, label %1865, label %1946, !dbg !354

1865:                                             ; preds = %1861
  %1866 = load i8*, i8** %1727, align 8, !dbg !355
  %1867 = icmp eq i8* %1866, null, !dbg !356
  br i1 %1867, label %1869, label %1868, !dbg !357

1868:                                             ; preds = %1865
  store i8* %1866, i8** %1709, align 8, !dbg !358
  br label %1869, !dbg !359

1869:                                             ; preds = %1868, %1865, %1749
  %1870 = alloca i32, align 4, !dbg !360
  %1871 = load i16, i16* %1728, align 2, !dbg !361
  %1872 = zext i16 %1871 to i32, !dbg !362
  store i32 %1872, i32* %1870, align 4, !dbg !363
  %1873 = alloca i64, align 8, !dbg !364
  %1874 = getelementptr i32, i32* %1717, i32 %1872, !dbg !365
  %1875 = load i32, i32* %1874, align 4, !dbg !366
  %1876 = zext i32 %1875 to i64, !dbg !367
  store i64 %1876, i64* %1873, align 4, !dbg !368
  %1877 = load i8*, i8** %1709, align 8, !dbg !369
  %1878 = load i32, i32* %1724, align 4, !dbg !370
  %1879 = alloca i8*, align 8, !dbg !371
  %1880 = getelementptr i8, i8* %1877, i32 %1878, !dbg !372
  store i8* %1880, i8** %1879, align 8, !dbg !373
  %1881 = load i32, i32* %1717, align 4, !dbg !374
  %1882 = getelementptr i8, i8* %1877, i32 %1881, !dbg !375
  br label %1883, !dbg !376

1883:                                             ; preds = %1890, %1869
  %1884 = load i32, i32* %1870, align 4, !dbg !377
  %1885 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1712, i32 0, i32 23, i32 %1884, !dbg !378
  %1886 = load i8*, i8** %1879, align 8, !dbg !379
  %1887 = load i8, i8* %1886, align 1, !dbg !380
  %1888 = zext i8 %1887 to i32, !dbg !381
  store i32 %1888, i32* %1710, align 4, !dbg !382
  store i32 %1888, i32* %1885, align 4, !dbg !383
  %1889 = icmp sgt i8 %1887, -1, !dbg !384
  br i1 %1889, label %1913, label %1904, !dbg !385

1890:                                             ; preds = %1904, %1913
  %1891 = load i32, i32* %1870, align 4, !dbg !386
  %1892 = add i32 %1891, 1, !dbg !387
  store i32 %1892, i32* %1870, align 4, !dbg !388
  %1893 = load i64, i64* %1873, align 4, !dbg !389
  %1894 = and i64 4294967295, %1893, !dbg !390
  %1895 = trunc i64 %1894 to i32, !dbg !391
  %1896 = getelementptr i32, i32* %1717, i32 %1892, !dbg !392
  store i32 %1895, i32* %1896, align 4, !dbg !393
  %1897 = load i32, i32* %1870, align 4, !dbg !394
  %1898 = icmp sle i32 %1897, 5, !dbg !395
  %1899 = load i8*, i8** %1879, align 8, !dbg !396
  %1900 = ptrtoint i8* %1899 to i64, !dbg !397
  %1901 = ptrtoint i8* %1882 to i64, !dbg !398
  %1902 = icmp ult i64 %1900, %1901, !dbg !399
  %1903 = and i1 %1898, %1902, !dbg !400
  br i1 %1903, label %1883, label %1922, !dbg !401

1904:                                             ; preds = %1883
  %1905 = load i8*, i8** %1879, align 8, !dbg !402
  %1906 = call i8 @sqlite3GetVarint32(i8* %1905, i32* %1710), !dbg !403
  %1907 = getelementptr i8, i8* %1905, i8 %1906, !dbg !404
  store i8* %1907, i8** %1879, align 8, !dbg !405
  %1908 = load i32, i32* %1710, align 4, !dbg !406
  store i32 %1908, i32* %1885, align 4, !dbg !407
  %1909 = load i64, i64* %1873, align 4, !dbg !408
  %1910 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1908), !dbg !409
  %1911 = zext i32 %1910 to i64, !dbg !410
  %1912 = add i64 %1909, %1911, !dbg !411
  store i64 %1912, i64* %1873, align 4, !dbg !412
  br label %1890, !dbg !413

1913:                                             ; preds = %1883
  %1914 = getelementptr i8, i8* %1886, i32 1, !dbg !414
  store i8* %1914, i8** %1879, align 8, !dbg !415
  %1915 = load i32, i32* %1710, align 4, !dbg !416
  %1916 = trunc i32 %1915 to i8, !dbg !417
  %1917 = getelementptr i8, i8* %4, i8 %1916, !dbg !418
  %1918 = load i8, i8* %1917, align 1, !dbg !419
  %1919 = zext i8 %1918 to i64, !dbg !420
  %1920 = load i64, i64* %1873, align 4, !dbg !421
  %1921 = add i64 %1920, %1919, !dbg !422
  store i64 %1921, i64* %1873, align 4, !dbg !423
  br label %1890, !dbg !424

1922:                                             ; preds = %1890
  %1923 = load i64, i64* %1873, align 4, !dbg !425
  %1924 = load i32, i32* %1725, align 4, !dbg !426
  %1925 = zext i32 %1924 to i64, !dbg !427
  %1926 = icmp uge i64 %1900, %1901, !dbg !428
  %1927 = icmp ugt i64 %1900, %1901, !dbg !429
  %1928 = icmp ne i64 %1923, %1925, !dbg !430
  %1929 = icmp ugt i64 %1923, %1925, !dbg !431
  %1930 = or i1 %1927, %1928, !dbg !432
  %1931 = and i1 %1926, %1930, !dbg !433
  %1932 = or i1 %1931, %1929, !dbg !434
  br i1 %1932, label %1933, label %1937, !dbg !435

1933:                                             ; preds = %1922
  %1934 = load i32, i32* %1717, align 4, !dbg !436
  %1935 = icmp eq i32 %1934, 0, !dbg !437
  br i1 %1935, label %1936, label %1937, !dbg !438

1936:                                             ; preds = %1933
  store i32 0, i32* %1870, align 4, !dbg !439
  store i8* %1882, i8** %1879, align 8, !dbg !440
  br label %1937, !dbg !441

1937:                                             ; preds = %1936, %1933, %1922
  %1938 = load i32, i32* %1870, align 4, !dbg !442
  %1939 = trunc i32 %1938 to i16, !dbg !443
  store i16 %1939, i16* %1728, align 2, !dbg !444
  %1940 = load i8*, i8** %1879, align 8, !dbg !445
  %1941 = ptrtoint i8* %1940 to i64, !dbg !446
  %1942 = load i8*, i8** %1709, align 8, !dbg !447
  %1943 = ptrtoint i8* %1942 to i64, !dbg !448
  %1944 = sub i64 %1941, %1943, !dbg !449
  %1945 = trunc i64 %1944 to i32, !dbg !450
  store i32 %1945, i32* %1724, align 4, !dbg !451
  br label %1947, !dbg !452

1946:                                             ; preds = %1861
  store i32 0, i32* %1710, align 4, !dbg !453
  br label %1947, !dbg !454

1947:                                             ; preds = %1937, %1946
  %1948 = load i16, i16* %1728, align 2, !dbg !455
  %1949 = icmp sle i16 %1948, 5, !dbg !456
  br i1 %1949, label %1950, label %1779, !dbg !457

1950:                                             ; preds = %1947
  %1951 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1713, i32 0, i32 1, !dbg !458
  %1952 = load i16, i16* %1951, align 2, !dbg !458
  %1953 = and i16 %1952, 9216, !dbg !458
  %1954 = icmp ne i16 %1953, 0, !dbg !458
  br i1 %1954, label %1955, label %1956, !dbg !458

1955:                                             ; preds = %1950
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1713), !dbg !458
  br label %1957, !dbg !458

1956:                                             ; preds = %1950
  store i16 1, i16* %1951, align 2, !dbg !458
  br label %1957, !dbg !458

1957:                                             ; preds = %1955, %1956, %1826, %1806, %1845, %1856, %1774, %1775
  call void @llvm.stackrestore(i8* %1702), !dbg !459
  br label %1958, !dbg !74

1958:                                             ; preds = %1957, %14
  %1959 = call i8* @llvm.stacksave(), !dbg !167
  %1960 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1961 = load i8, i8* %1960, align 1, !dbg !171
  %1962 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1962, align 4, !dbg !173
  %1963 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1964 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1965 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1963, align 8, !dbg !176
  store %struct.VdbeCursor* %1965, %struct.VdbeCursor** %1964, align 8, !dbg !177
  %1966 = alloca i8*, align 8, !dbg !178
  %1967 = alloca i32, align 4, !dbg !179
  %1968 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1964, i32* %1962), !dbg !180
  %1969 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1964, align 8, !dbg !181
  %1970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !182
  %1971 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 16, !dbg !183
  %1972 = load i16, i16* %1971, align 2, !dbg !184
  %1973 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 19, !dbg !185
  %1974 = load i32*, i32** %1973, align 8, !dbg !186
  %1975 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 0, !dbg !187
  %1976 = load i8, i8* %1975, align 1, !dbg !188
  %1977 = icmp ne i8 %1976, 3, !dbg !189
  %1978 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 2, !dbg !190
  %1979 = load i8, i8* %1978, align 1, !dbg !191
  %1980 = icmp ne i8 %1979, 0, !dbg !192
  %1981 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 14, !dbg !193
  %1982 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 21, !dbg !194
  %1983 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 22, !dbg !195
  %1984 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 20, !dbg !196
  %1985 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 17, !dbg !197
  %1986 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 9, !dbg !198
  %1987 = load i32, i32* %1986, align 4, !dbg !199
  %1988 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1989 = load i32, i32* %1988, align 4, !dbg !201
  %1990 = icmp ne i32 %1987, %1989, !dbg !202
  br i1 %1990, label %1991, label %2033, !dbg !203

1991:                                             ; preds = %1958
  br i1 %1980, label %2013, label %2008, !dbg !204

1992:                                             ; preds = %2008, %2015
  %1993 = load i32, i32* %1988, align 4, !dbg !205
  store i32 %1993, i32* %1986, align 4, !dbg !206
  %1994 = load i8*, i8** %1984, align 8, !dbg !207
  %1995 = load i8, i8* %1994, align 1, !dbg !208
  %1996 = icmp sgt i8 %1995, -1, !dbg !211
  br i1 %1996, label %1997, label %1999, !dbg !212

1997:                                             ; preds = %1992
  %1998 = zext i8 %1995 to i32, !dbg !213
  store i32 %1998, i32* %1974, align 4, !dbg !214
  store i32 1, i32* %1981, align 4, !dbg !215
  br label %2002, !dbg !216

1999:                                             ; preds = %1992
  %2000 = call i8 @sqlite3GetVarint32(i8* %1994, i32* %1974), !dbg !217
  %2001 = zext i8 %2000 to i32, !dbg !218
  store i32 %2001, i32* %1981, align 4, !dbg !219
  br label %2002, !dbg !220

2002:                                             ; preds = %1999, %1997
  store i16 0, i16* %1985, align 2, !dbg !221
  %2003 = load i32, i32* %1983, align 4, !dbg !222
  %2004 = load i32, i32* %1974, align 4, !dbg !223
  %2005 = icmp ult i32 %2003, %2004, !dbg !224
  br i1 %2005, label %2007, label %2006, !dbg !225

2006:                                             ; preds = %2002
  store i8* %1994, i8** %1966, align 8, !dbg !226
  br label %2126, !dbg !227

2007:                                             ; preds = %2002
  store i8* null, i8** %1984, align 8, !dbg !228
  store i32 0, i32* %1983, align 4, !dbg !229
  br label %2033, !dbg !230

2008:                                             ; preds = %1991
  %2009 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 12, i32 0, !dbg !231
  %2010 = load %struct.BtCursor*, %struct.BtCursor** %2009, align 8, !dbg !232
  %2011 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2010), !dbg !233
  store i32 %2011, i32* %1982, align 4, !dbg !234
  %2012 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2010, i32* %1983), !dbg !235
  store i8* %2012, i8** %1984, align 8, !dbg !236
  br label %1992, !dbg !237

2013:                                             ; preds = %1991
  %2014 = icmp eq i8 %1976, 3, !dbg !238
  br i1 %2014, label %2015, label %2026, !dbg !239

2015:                                             ; preds = %2013
  %2016 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 10, !dbg !240
  %2017 = load i32, i32* %2016, align 4, !dbg !241
  %2018 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2017, !dbg !242
  %2019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2018, i32 0, i32 1, !dbg !243
  %2020 = load i16, i16* %2019, align 2, !dbg !244
  %2021 = and i16 %2020, 16, !dbg !245
  %2022 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2018, i32 0, i32 4, !dbg !246
  %2023 = load i32, i32* %2022, align 4, !dbg !247
  store i32 %2023, i32* %1982, align 4, !dbg !248
  store i32 %2023, i32* %1983, align 4, !dbg !249
  %2024 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2018, i32 0, i32 5, !dbg !250
  %2025 = load i8*, i8** %2024, align 8, !dbg !251
  store i8* %2025, i8** %1984, align 8, !dbg !252
  br label %1992, !dbg !253

2026:                                             ; preds = %2013
  %2027 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 1, !dbg !254
  %2028 = load i16, i16* %2027, align 2, !dbg !254
  %2029 = and i16 %2028, 9216, !dbg !254
  %2030 = icmp ne i16 %2029, 0, !dbg !254
  br i1 %2030, label %2031, label %2032, !dbg !254

2031:                                             ; preds = %2026
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1970), !dbg !254
  br label %2214, !dbg !254

2032:                                             ; preds = %2026
  store i16 1, i16* %2027, align 2, !dbg !254
  br label %2214, !dbg !254

2033:                                             ; preds = %2007, %1958
  %2034 = load i16, i16* %1985, align 2, !dbg !255
  %2035 = icmp ule i16 %2034, 12, !dbg !256
  br i1 %2035, label %2118, label %2115, !dbg !257

2036:                                             ; preds = %2115, %2204
  %2037 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 1, !dbg !258
  %2038 = load i16, i16* %2037, align 2, !dbg !259
  %2039 = and i16 9216, %2038, !dbg !260
  %2040 = icmp eq i16 0, %2039, !dbg !261
  br i1 %2040, label %2041, label %2045, !dbg !262

2041:                                             ; preds = %2036
  %2042 = icmp ne i16 %2039, 0, !dbg !263
  br i1 %2042, label %2043, label %2044, !dbg !263

2043:                                             ; preds = %2041
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1970), !dbg !263
  br label %2045, !dbg !263

2044:                                             ; preds = %2041
  store i16 1, i16* %2037, align 2, !dbg !263
  br label %2045, !dbg !263

2045:                                             ; preds = %2043, %2044, %2036
  %2046 = load i32, i32* %1967, align 4, !dbg !264
  %2047 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 23, i32 12, !dbg !265
  %2048 = load i32, i32* %2047, align 4, !dbg !266
  %2049 = load i32, i32* %1983, align 4, !dbg !267
  %2050 = getelementptr i32, i32* %1974, i32 13, !dbg !268
  %2051 = load i32, i32* %2050, align 4, !dbg !269
  %2052 = icmp sge i32 %2049, %2051, !dbg !270
  br i1 %2052, label %2053, label %2093, !dbg !271

2053:                                             ; preds = %2045
  %2054 = load i8*, i8** %1984, align 8, !dbg !272
  %2055 = ptrtoint i8* %2054 to i64, !dbg !273
  %2056 = getelementptr i32, i32* %1974, i32 12, !dbg !274
  %2057 = load i32, i32* %2056, align 4, !dbg !275
  %2058 = zext i32 %2057 to i64, !dbg !276
  %2059 = add i64 %2055, %2058, !dbg !277
  %2060 = inttoptr i64 %2059 to i8*, !dbg !278
  store i8* %2060, i8** %1966, align 8, !dbg !279
  %2061 = load i32, i32* %1967, align 4, !dbg !280
  %2062 = icmp ult i32 %2061, 12, !dbg !281
  br i1 %2062, label %2063, label %2065, !dbg !282

2063:                                             ; preds = %2053
  %2064 = call i32 @sqlite3VdbeSerialGet(i8* %2060, i32 %2061, %struct.sqlite3_value* %1970), !dbg !283
  br label %2214, !dbg !284

2065:                                             ; preds = %2053
  %2066 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %2066, align 2, !dbg !286
  %2067 = getelementptr i16, i16* %2066, i32 1, !dbg !287
  store i16 514, i16* %2067, align 2, !dbg !288
  %2068 = load i32, i32* %1967, align 4, !dbg !289
  %2069 = sub i32 %2068, 12, !dbg !290
  %2070 = lshr i32 %2069, 1, !dbg !291
  %2071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 4, !dbg !292
  store i32 %2070, i32* %2071, align 4, !dbg !293
  %2072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 2, !dbg !294
  store i8 %1961, i8* %2072, align 1, !dbg !295
  %2073 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 5, !dbg !296
  %2074 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 7, !dbg !297
  %2075 = load i32, i32* %2074, align 4, !dbg !298
  %2076 = add i32 %2070, 2, !dbg !299
  %2077 = icmp slt i32 %2075, %2076, !dbg !300
  br i1 %2077, label %2078, label %2080, !dbg !301

2078:                                             ; preds = %2065
  store i16 1, i16* %2037, align 2, !dbg !302
  %2079 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1970, i32 %2076, i32 0), !dbg !303
  br label %2083, !dbg !304

2080:                                             ; preds = %2065
  %2081 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 6, !dbg !305
  %2082 = load i8*, i8** %2081, align 8, !dbg !306
  store i8* %2082, i8** %2073, align 8, !dbg !307
  br label %2083, !dbg !308

2083:                                             ; preds = %2080, %2078
  %2084 = zext i32 %2070 to i64, !dbg !309
  %2085 = load i8*, i8** %2073, align 8, !dbg !310
  %2086 = load i8*, i8** %1966, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2085, i8* %2086, i64 %2084, i1 false), !dbg !312
  %2087 = getelementptr i8, i8* %2085, i32 %2070, !dbg !313
  store i8 0, i8* %2087, align 1, !dbg !314
  %2088 = add i32 %2070, 1, !dbg !315
  %2089 = getelementptr i8, i8* %2085, i32 %2088, !dbg !316
  store i8 0, i8* %2089, align 1, !dbg !317
  %2090 = and i32 %2068, 1, !dbg !318
  %2091 = getelementptr i16, i16* %2066, i32 %2090, !dbg !319
  %2092 = load i16, i16* %2091, align 2, !dbg !320
  store i16 %2092, i16* %2037, align 2, !dbg !321
  br label %2214, !dbg !322

2093:                                             ; preds = %2045
  %2094 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 2, !dbg !323
  store i8 %1961, i8* %2094, align 1, !dbg !324
  %2095 = load i32, i32* %1967, align 4, !dbg !325
  %2096 = and i32 %2095, 1, !dbg !326
  %2097 = icmp eq i32 %2096, 0, !dbg !327
  %2098 = icmp sge i32 %2095, 12, !dbg !328
  %2099 = and i1 %2098, %2097, !dbg !329
  %2100 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2095), !dbg !330
  %2101 = icmp eq i32 %2100, 0, !dbg !331
  br i1 %2101, label %2113, label %2102, !dbg !332

2102:                                             ; preds = %2093
  %2103 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 12, i32 0, !dbg !333
  %2104 = load %struct.BtCursor*, %struct.BtCursor** %2103, align 8, !dbg !334
  %2105 = getelementptr i32, i32* %1974, i32 12, !dbg !335
  %2106 = load i32, i32* %2105, align 4, !dbg !336
  %2107 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2104, i32 %2106, i32 %2100, %struct.sqlite3_value* %1970), !dbg !337
  %2108 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 5, !dbg !338
  %2109 = load i8*, i8** %2108, align 8, !dbg !339
  %2110 = call i32 @sqlite3VdbeSerialGet(i8* %2109, i32 %2095, %struct.sqlite3_value* %1970), !dbg !340
  %2111 = load i16, i16* %2037, align 2, !dbg !341
  %2112 = and i16 %2111, -4097, !dbg !342
  store i16 %2112, i16* %2037, align 2, !dbg !343
  br label %2214, !dbg !344

2113:                                             ; preds = %2093
  %2114 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2095, %struct.sqlite3_value* %1970), !dbg !345
  br label %2214, !dbg !346

2115:                                             ; preds = %2033
  %2116 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 23, i32 12, !dbg !347
  %2117 = load i32, i32* %2116, align 4, !dbg !348
  store i32 %2117, i32* %1967, align 4, !dbg !349
  br label %2036, !dbg !350

2118:                                             ; preds = %2033
  %2119 = load i32, i32* %1981, align 4, !dbg !351
  %2120 = load i32, i32* %1974, align 4, !dbg !352
  %2121 = icmp ult i32 %2119, %2120, !dbg !353
  br i1 %2121, label %2122, label %2203, !dbg !354

2122:                                             ; preds = %2118
  %2123 = load i8*, i8** %1984, align 8, !dbg !355
  %2124 = icmp eq i8* %2123, null, !dbg !356
  br i1 %2124, label %2126, label %2125, !dbg !357

2125:                                             ; preds = %2122
  store i8* %2123, i8** %1966, align 8, !dbg !358
  br label %2126, !dbg !359

2126:                                             ; preds = %2125, %2122, %2006
  %2127 = alloca i32, align 4, !dbg !360
  %2128 = load i16, i16* %1985, align 2, !dbg !361
  %2129 = zext i16 %2128 to i32, !dbg !362
  store i32 %2129, i32* %2127, align 4, !dbg !363
  %2130 = alloca i64, align 8, !dbg !364
  %2131 = getelementptr i32, i32* %1974, i32 %2129, !dbg !365
  %2132 = load i32, i32* %2131, align 4, !dbg !366
  %2133 = zext i32 %2132 to i64, !dbg !367
  store i64 %2133, i64* %2130, align 4, !dbg !368
  %2134 = load i8*, i8** %1966, align 8, !dbg !369
  %2135 = load i32, i32* %1981, align 4, !dbg !370
  %2136 = alloca i8*, align 8, !dbg !371
  %2137 = getelementptr i8, i8* %2134, i32 %2135, !dbg !372
  store i8* %2137, i8** %2136, align 8, !dbg !373
  %2138 = load i32, i32* %1974, align 4, !dbg !374
  %2139 = getelementptr i8, i8* %2134, i32 %2138, !dbg !375
  br label %2140, !dbg !376

2140:                                             ; preds = %2147, %2126
  %2141 = load i32, i32* %2127, align 4, !dbg !377
  %2142 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1969, i32 0, i32 23, i32 %2141, !dbg !378
  %2143 = load i8*, i8** %2136, align 8, !dbg !379
  %2144 = load i8, i8* %2143, align 1, !dbg !380
  %2145 = zext i8 %2144 to i32, !dbg !381
  store i32 %2145, i32* %1967, align 4, !dbg !382
  store i32 %2145, i32* %2142, align 4, !dbg !383
  %2146 = icmp sgt i8 %2144, -1, !dbg !384
  br i1 %2146, label %2170, label %2161, !dbg !385

2147:                                             ; preds = %2161, %2170
  %2148 = load i32, i32* %2127, align 4, !dbg !386
  %2149 = add i32 %2148, 1, !dbg !387
  store i32 %2149, i32* %2127, align 4, !dbg !388
  %2150 = load i64, i64* %2130, align 4, !dbg !389
  %2151 = and i64 4294967295, %2150, !dbg !390
  %2152 = trunc i64 %2151 to i32, !dbg !391
  %2153 = getelementptr i32, i32* %1974, i32 %2149, !dbg !392
  store i32 %2152, i32* %2153, align 4, !dbg !393
  %2154 = load i32, i32* %2127, align 4, !dbg !394
  %2155 = icmp sle i32 %2154, 12, !dbg !395
  %2156 = load i8*, i8** %2136, align 8, !dbg !396
  %2157 = ptrtoint i8* %2156 to i64, !dbg !397
  %2158 = ptrtoint i8* %2139 to i64, !dbg !398
  %2159 = icmp ult i64 %2157, %2158, !dbg !399
  %2160 = and i1 %2155, %2159, !dbg !400
  br i1 %2160, label %2140, label %2179, !dbg !401

2161:                                             ; preds = %2140
  %2162 = load i8*, i8** %2136, align 8, !dbg !402
  %2163 = call i8 @sqlite3GetVarint32(i8* %2162, i32* %1967), !dbg !403
  %2164 = getelementptr i8, i8* %2162, i8 %2163, !dbg !404
  store i8* %2164, i8** %2136, align 8, !dbg !405
  %2165 = load i32, i32* %1967, align 4, !dbg !406
  store i32 %2165, i32* %2142, align 4, !dbg !407
  %2166 = load i64, i64* %2130, align 4, !dbg !408
  %2167 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2165), !dbg !409
  %2168 = zext i32 %2167 to i64, !dbg !410
  %2169 = add i64 %2166, %2168, !dbg !411
  store i64 %2169, i64* %2130, align 4, !dbg !412
  br label %2147, !dbg !413

2170:                                             ; preds = %2140
  %2171 = getelementptr i8, i8* %2143, i32 1, !dbg !414
  store i8* %2171, i8** %2136, align 8, !dbg !415
  %2172 = load i32, i32* %1967, align 4, !dbg !416
  %2173 = trunc i32 %2172 to i8, !dbg !417
  %2174 = getelementptr i8, i8* %4, i8 %2173, !dbg !418
  %2175 = load i8, i8* %2174, align 1, !dbg !419
  %2176 = zext i8 %2175 to i64, !dbg !420
  %2177 = load i64, i64* %2130, align 4, !dbg !421
  %2178 = add i64 %2177, %2176, !dbg !422
  store i64 %2178, i64* %2130, align 4, !dbg !423
  br label %2147, !dbg !424

2179:                                             ; preds = %2147
  %2180 = load i64, i64* %2130, align 4, !dbg !425
  %2181 = load i32, i32* %1982, align 4, !dbg !426
  %2182 = zext i32 %2181 to i64, !dbg !427
  %2183 = icmp uge i64 %2157, %2158, !dbg !428
  %2184 = icmp ugt i64 %2157, %2158, !dbg !429
  %2185 = icmp ne i64 %2180, %2182, !dbg !430
  %2186 = icmp ugt i64 %2180, %2182, !dbg !431
  %2187 = or i1 %2184, %2185, !dbg !432
  %2188 = and i1 %2183, %2187, !dbg !433
  %2189 = or i1 %2188, %2186, !dbg !434
  br i1 %2189, label %2190, label %2194, !dbg !435

2190:                                             ; preds = %2179
  %2191 = load i32, i32* %1974, align 4, !dbg !436
  %2192 = icmp eq i32 %2191, 0, !dbg !437
  br i1 %2192, label %2193, label %2194, !dbg !438

2193:                                             ; preds = %2190
  store i32 0, i32* %2127, align 4, !dbg !439
  store i8* %2139, i8** %2136, align 8, !dbg !440
  br label %2194, !dbg !441

2194:                                             ; preds = %2193, %2190, %2179
  %2195 = load i32, i32* %2127, align 4, !dbg !442
  %2196 = trunc i32 %2195 to i16, !dbg !443
  store i16 %2196, i16* %1985, align 2, !dbg !444
  %2197 = load i8*, i8** %2136, align 8, !dbg !445
  %2198 = ptrtoint i8* %2197 to i64, !dbg !446
  %2199 = load i8*, i8** %1966, align 8, !dbg !447
  %2200 = ptrtoint i8* %2199 to i64, !dbg !448
  %2201 = sub i64 %2198, %2200, !dbg !449
  %2202 = trunc i64 %2201 to i32, !dbg !450
  store i32 %2202, i32* %1981, align 4, !dbg !451
  br label %2204, !dbg !452

2203:                                             ; preds = %2118
  store i32 0, i32* %1967, align 4, !dbg !453
  br label %2204, !dbg !454

2204:                                             ; preds = %2194, %2203
  %2205 = load i16, i16* %1985, align 2, !dbg !455
  %2206 = icmp sle i16 %2205, 12, !dbg !456
  br i1 %2206, label %2207, label %2036, !dbg !457

2207:                                             ; preds = %2204
  %2208 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 1, !dbg !458
  %2209 = load i16, i16* %2208, align 2, !dbg !458
  %2210 = and i16 %2209, 9216, !dbg !458
  %2211 = icmp ne i16 %2210, 0, !dbg !458
  br i1 %2211, label %2212, label %2213, !dbg !458

2212:                                             ; preds = %2207
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1970), !dbg !458
  br label %2214, !dbg !458

2213:                                             ; preds = %2207
  store i16 1, i16* %2208, align 2, !dbg !458
  br label %2214, !dbg !458

2214:                                             ; preds = %2212, %2213, %2083, %2063, %2102, %2113, %2031, %2032
  call void @llvm.stackrestore(i8* %1959), !dbg !459
  br label %2215, !dbg !74

2215:                                             ; preds = %14, %2214, %14
  %2216 = call i8* @llvm.stacksave(), !dbg !167
  %2217 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %2218 = load i8, i8* %2217, align 1, !dbg !171
  %2219 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %2219, align 4, !dbg !173
  %2220 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %2221 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %2222 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2220, align 8, !dbg !176
  store %struct.VdbeCursor* %2222, %struct.VdbeCursor** %2221, align 8, !dbg !177
  %2223 = alloca i8*, align 8, !dbg !178
  %2224 = alloca i32, align 4, !dbg !179
  %2225 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2221, i32* %2219), !dbg !180
  %2226 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2221, align 8, !dbg !181
  %2227 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !182
  %2228 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 16, !dbg !183
  %2229 = load i16, i16* %2228, align 2, !dbg !184
  %2230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 19, !dbg !185
  %2231 = load i32*, i32** %2230, align 8, !dbg !186
  %2232 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 0, !dbg !187
  %2233 = load i8, i8* %2232, align 1, !dbg !188
  %2234 = icmp ne i8 %2233, 3, !dbg !189
  %2235 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 2, !dbg !190
  %2236 = load i8, i8* %2235, align 1, !dbg !191
  %2237 = icmp ne i8 %2236, 0, !dbg !192
  %2238 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 14, !dbg !193
  %2239 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 21, !dbg !194
  %2240 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 22, !dbg !195
  %2241 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 20, !dbg !196
  %2242 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 17, !dbg !197
  %2243 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 9, !dbg !198
  %2244 = load i32, i32* %2243, align 4, !dbg !199
  %2245 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %2246 = load i32, i32* %2245, align 4, !dbg !201
  %2247 = icmp ne i32 %2244, %2246, !dbg !202
  br i1 %2247, label %2248, label %2290, !dbg !203

2248:                                             ; preds = %2215
  br i1 %2237, label %2270, label %2265, !dbg !204

2249:                                             ; preds = %2265, %2272
  %2250 = load i32, i32* %2245, align 4, !dbg !205
  store i32 %2250, i32* %2243, align 4, !dbg !206
  %2251 = load i8*, i8** %2241, align 8, !dbg !207
  %2252 = load i8, i8* %2251, align 1, !dbg !208
  %2253 = icmp sgt i8 %2252, -1, !dbg !211
  br i1 %2253, label %2254, label %2256, !dbg !212

2254:                                             ; preds = %2249
  %2255 = zext i8 %2252 to i32, !dbg !213
  store i32 %2255, i32* %2231, align 4, !dbg !214
  store i32 1, i32* %2238, align 4, !dbg !215
  br label %2259, !dbg !216

2256:                                             ; preds = %2249
  %2257 = call i8 @sqlite3GetVarint32(i8* %2251, i32* %2231), !dbg !217
  %2258 = zext i8 %2257 to i32, !dbg !218
  store i32 %2258, i32* %2238, align 4, !dbg !219
  br label %2259, !dbg !220

2259:                                             ; preds = %2256, %2254
  store i16 0, i16* %2242, align 2, !dbg !221
  %2260 = load i32, i32* %2240, align 4, !dbg !222
  %2261 = load i32, i32* %2231, align 4, !dbg !223
  %2262 = icmp ult i32 %2260, %2261, !dbg !224
  br i1 %2262, label %2264, label %2263, !dbg !225

2263:                                             ; preds = %2259
  store i8* %2251, i8** %2223, align 8, !dbg !226
  br label %2383, !dbg !227

2264:                                             ; preds = %2259
  store i8* null, i8** %2241, align 8, !dbg !228
  store i32 0, i32* %2240, align 4, !dbg !229
  br label %2290, !dbg !230

2265:                                             ; preds = %2248
  %2266 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 12, i32 0, !dbg !231
  %2267 = load %struct.BtCursor*, %struct.BtCursor** %2266, align 8, !dbg !232
  %2268 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2267), !dbg !233
  store i32 %2268, i32* %2239, align 4, !dbg !234
  %2269 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2267, i32* %2240), !dbg !235
  store i8* %2269, i8** %2241, align 8, !dbg !236
  br label %2249, !dbg !237

2270:                                             ; preds = %2248
  %2271 = icmp eq i8 %2233, 3, !dbg !238
  br i1 %2271, label %2272, label %2283, !dbg !239

2272:                                             ; preds = %2270
  %2273 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 10, !dbg !240
  %2274 = load i32, i32* %2273, align 4, !dbg !241
  %2275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2274, !dbg !242
  %2276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2275, i32 0, i32 1, !dbg !243
  %2277 = load i16, i16* %2276, align 2, !dbg !244
  %2278 = and i16 %2277, 16, !dbg !245
  %2279 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2275, i32 0, i32 4, !dbg !246
  %2280 = load i32, i32* %2279, align 4, !dbg !247
  store i32 %2280, i32* %2239, align 4, !dbg !248
  store i32 %2280, i32* %2240, align 4, !dbg !249
  %2281 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2275, i32 0, i32 5, !dbg !250
  %2282 = load i8*, i8** %2281, align 8, !dbg !251
  store i8* %2282, i8** %2241, align 8, !dbg !252
  br label %2249, !dbg !253

2283:                                             ; preds = %2270
  %2284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 1, !dbg !254
  %2285 = load i16, i16* %2284, align 2, !dbg !254
  %2286 = and i16 %2285, 9216, !dbg !254
  %2287 = icmp ne i16 %2286, 0, !dbg !254
  br i1 %2287, label %2288, label %2289, !dbg !254

2288:                                             ; preds = %2283
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2227), !dbg !254
  br label %2471, !dbg !254

2289:                                             ; preds = %2283
  store i16 1, i16* %2284, align 2, !dbg !254
  br label %2471, !dbg !254

2290:                                             ; preds = %2264, %2215
  %2291 = load i16, i16* %2242, align 2, !dbg !255
  %2292 = icmp ule i16 %2291, 13, !dbg !256
  br i1 %2292, label %2375, label %2372, !dbg !257

2293:                                             ; preds = %2372, %2461
  %2294 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 1, !dbg !258
  %2295 = load i16, i16* %2294, align 2, !dbg !259
  %2296 = and i16 9216, %2295, !dbg !260
  %2297 = icmp eq i16 0, %2296, !dbg !261
  br i1 %2297, label %2298, label %2302, !dbg !262

2298:                                             ; preds = %2293
  %2299 = icmp ne i16 %2296, 0, !dbg !263
  br i1 %2299, label %2300, label %2301, !dbg !263

2300:                                             ; preds = %2298
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2227), !dbg !263
  br label %2302, !dbg !263

2301:                                             ; preds = %2298
  store i16 1, i16* %2294, align 2, !dbg !263
  br label %2302, !dbg !263

2302:                                             ; preds = %2300, %2301, %2293
  %2303 = load i32, i32* %2224, align 4, !dbg !264
  %2304 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 23, i32 13, !dbg !265
  %2305 = load i32, i32* %2304, align 4, !dbg !266
  %2306 = load i32, i32* %2240, align 4, !dbg !267
  %2307 = getelementptr i32, i32* %2231, i32 14, !dbg !268
  %2308 = load i32, i32* %2307, align 4, !dbg !269
  %2309 = icmp sge i32 %2306, %2308, !dbg !270
  br i1 %2309, label %2310, label %2350, !dbg !271

2310:                                             ; preds = %2302
  %2311 = load i8*, i8** %2241, align 8, !dbg !272
  %2312 = ptrtoint i8* %2311 to i64, !dbg !273
  %2313 = getelementptr i32, i32* %2231, i32 13, !dbg !274
  %2314 = load i32, i32* %2313, align 4, !dbg !275
  %2315 = zext i32 %2314 to i64, !dbg !276
  %2316 = add i64 %2312, %2315, !dbg !277
  %2317 = inttoptr i64 %2316 to i8*, !dbg !278
  store i8* %2317, i8** %2223, align 8, !dbg !279
  %2318 = load i32, i32* %2224, align 4, !dbg !280
  %2319 = icmp ult i32 %2318, 12, !dbg !281
  br i1 %2319, label %2320, label %2322, !dbg !282

2320:                                             ; preds = %2310
  %2321 = call i32 @sqlite3VdbeSerialGet(i8* %2317, i32 %2318, %struct.sqlite3_value* %2227), !dbg !283
  br label %2471, !dbg !284

2322:                                             ; preds = %2310
  %2323 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %2323, align 2, !dbg !286
  %2324 = getelementptr i16, i16* %2323, i32 1, !dbg !287
  store i16 514, i16* %2324, align 2, !dbg !288
  %2325 = load i32, i32* %2224, align 4, !dbg !289
  %2326 = sub i32 %2325, 12, !dbg !290
  %2327 = lshr i32 %2326, 1, !dbg !291
  %2328 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 4, !dbg !292
  store i32 %2327, i32* %2328, align 4, !dbg !293
  %2329 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 2, !dbg !294
  store i8 %2218, i8* %2329, align 1, !dbg !295
  %2330 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 5, !dbg !296
  %2331 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 7, !dbg !297
  %2332 = load i32, i32* %2331, align 4, !dbg !298
  %2333 = add i32 %2327, 2, !dbg !299
  %2334 = icmp slt i32 %2332, %2333, !dbg !300
  br i1 %2334, label %2335, label %2337, !dbg !301

2335:                                             ; preds = %2322
  store i16 1, i16* %2294, align 2, !dbg !302
  %2336 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2227, i32 %2333, i32 0), !dbg !303
  br label %2340, !dbg !304

2337:                                             ; preds = %2322
  %2338 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 6, !dbg !305
  %2339 = load i8*, i8** %2338, align 8, !dbg !306
  store i8* %2339, i8** %2330, align 8, !dbg !307
  br label %2340, !dbg !308

2340:                                             ; preds = %2337, %2335
  %2341 = zext i32 %2327 to i64, !dbg !309
  %2342 = load i8*, i8** %2330, align 8, !dbg !310
  %2343 = load i8*, i8** %2223, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2342, i8* %2343, i64 %2341, i1 false), !dbg !312
  %2344 = getelementptr i8, i8* %2342, i32 %2327, !dbg !313
  store i8 0, i8* %2344, align 1, !dbg !314
  %2345 = add i32 %2327, 1, !dbg !315
  %2346 = getelementptr i8, i8* %2342, i32 %2345, !dbg !316
  store i8 0, i8* %2346, align 1, !dbg !317
  %2347 = and i32 %2325, 1, !dbg !318
  %2348 = getelementptr i16, i16* %2323, i32 %2347, !dbg !319
  %2349 = load i16, i16* %2348, align 2, !dbg !320
  store i16 %2349, i16* %2294, align 2, !dbg !321
  br label %2471, !dbg !322

2350:                                             ; preds = %2302
  %2351 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 2, !dbg !323
  store i8 %2218, i8* %2351, align 1, !dbg !324
  %2352 = load i32, i32* %2224, align 4, !dbg !325
  %2353 = and i32 %2352, 1, !dbg !326
  %2354 = icmp eq i32 %2353, 0, !dbg !327
  %2355 = icmp sge i32 %2352, 12, !dbg !328
  %2356 = and i1 %2355, %2354, !dbg !329
  %2357 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2352), !dbg !330
  %2358 = icmp eq i32 %2357, 0, !dbg !331
  br i1 %2358, label %2370, label %2359, !dbg !332

2359:                                             ; preds = %2350
  %2360 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 12, i32 0, !dbg !333
  %2361 = load %struct.BtCursor*, %struct.BtCursor** %2360, align 8, !dbg !334
  %2362 = getelementptr i32, i32* %2231, i32 13, !dbg !335
  %2363 = load i32, i32* %2362, align 4, !dbg !336
  %2364 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2361, i32 %2363, i32 %2357, %struct.sqlite3_value* %2227), !dbg !337
  %2365 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 5, !dbg !338
  %2366 = load i8*, i8** %2365, align 8, !dbg !339
  %2367 = call i32 @sqlite3VdbeSerialGet(i8* %2366, i32 %2352, %struct.sqlite3_value* %2227), !dbg !340
  %2368 = load i16, i16* %2294, align 2, !dbg !341
  %2369 = and i16 %2368, -4097, !dbg !342
  store i16 %2369, i16* %2294, align 2, !dbg !343
  br label %2471, !dbg !344

2370:                                             ; preds = %2350
  %2371 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2352, %struct.sqlite3_value* %2227), !dbg !345
  br label %2471, !dbg !346

2372:                                             ; preds = %2290
  %2373 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 23, i32 13, !dbg !347
  %2374 = load i32, i32* %2373, align 4, !dbg !348
  store i32 %2374, i32* %2224, align 4, !dbg !349
  br label %2293, !dbg !350

2375:                                             ; preds = %2290
  %2376 = load i32, i32* %2238, align 4, !dbg !351
  %2377 = load i32, i32* %2231, align 4, !dbg !352
  %2378 = icmp ult i32 %2376, %2377, !dbg !353
  br i1 %2378, label %2379, label %2460, !dbg !354

2379:                                             ; preds = %2375
  %2380 = load i8*, i8** %2241, align 8, !dbg !355
  %2381 = icmp eq i8* %2380, null, !dbg !356
  br i1 %2381, label %2383, label %2382, !dbg !357

2382:                                             ; preds = %2379
  store i8* %2380, i8** %2223, align 8, !dbg !358
  br label %2383, !dbg !359

2383:                                             ; preds = %2382, %2379, %2263
  %2384 = alloca i32, align 4, !dbg !360
  %2385 = load i16, i16* %2242, align 2, !dbg !361
  %2386 = zext i16 %2385 to i32, !dbg !362
  store i32 %2386, i32* %2384, align 4, !dbg !363
  %2387 = alloca i64, align 8, !dbg !364
  %2388 = getelementptr i32, i32* %2231, i32 %2386, !dbg !365
  %2389 = load i32, i32* %2388, align 4, !dbg !366
  %2390 = zext i32 %2389 to i64, !dbg !367
  store i64 %2390, i64* %2387, align 4, !dbg !368
  %2391 = load i8*, i8** %2223, align 8, !dbg !369
  %2392 = load i32, i32* %2238, align 4, !dbg !370
  %2393 = alloca i8*, align 8, !dbg !371
  %2394 = getelementptr i8, i8* %2391, i32 %2392, !dbg !372
  store i8* %2394, i8** %2393, align 8, !dbg !373
  %2395 = load i32, i32* %2231, align 4, !dbg !374
  %2396 = getelementptr i8, i8* %2391, i32 %2395, !dbg !375
  br label %2397, !dbg !376

2397:                                             ; preds = %2404, %2383
  %2398 = load i32, i32* %2384, align 4, !dbg !377
  %2399 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2226, i32 0, i32 23, i32 %2398, !dbg !378
  %2400 = load i8*, i8** %2393, align 8, !dbg !379
  %2401 = load i8, i8* %2400, align 1, !dbg !380
  %2402 = zext i8 %2401 to i32, !dbg !381
  store i32 %2402, i32* %2224, align 4, !dbg !382
  store i32 %2402, i32* %2399, align 4, !dbg !383
  %2403 = icmp sgt i8 %2401, -1, !dbg !384
  br i1 %2403, label %2427, label %2418, !dbg !385

2404:                                             ; preds = %2418, %2427
  %2405 = load i32, i32* %2384, align 4, !dbg !386
  %2406 = add i32 %2405, 1, !dbg !387
  store i32 %2406, i32* %2384, align 4, !dbg !388
  %2407 = load i64, i64* %2387, align 4, !dbg !389
  %2408 = and i64 4294967295, %2407, !dbg !390
  %2409 = trunc i64 %2408 to i32, !dbg !391
  %2410 = getelementptr i32, i32* %2231, i32 %2406, !dbg !392
  store i32 %2409, i32* %2410, align 4, !dbg !393
  %2411 = load i32, i32* %2384, align 4, !dbg !394
  %2412 = icmp sle i32 %2411, 13, !dbg !395
  %2413 = load i8*, i8** %2393, align 8, !dbg !396
  %2414 = ptrtoint i8* %2413 to i64, !dbg !397
  %2415 = ptrtoint i8* %2396 to i64, !dbg !398
  %2416 = icmp ult i64 %2414, %2415, !dbg !399
  %2417 = and i1 %2412, %2416, !dbg !400
  br i1 %2417, label %2397, label %2436, !dbg !401

2418:                                             ; preds = %2397
  %2419 = load i8*, i8** %2393, align 8, !dbg !402
  %2420 = call i8 @sqlite3GetVarint32(i8* %2419, i32* %2224), !dbg !403
  %2421 = getelementptr i8, i8* %2419, i8 %2420, !dbg !404
  store i8* %2421, i8** %2393, align 8, !dbg !405
  %2422 = load i32, i32* %2224, align 4, !dbg !406
  store i32 %2422, i32* %2399, align 4, !dbg !407
  %2423 = load i64, i64* %2387, align 4, !dbg !408
  %2424 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2422), !dbg !409
  %2425 = zext i32 %2424 to i64, !dbg !410
  %2426 = add i64 %2423, %2425, !dbg !411
  store i64 %2426, i64* %2387, align 4, !dbg !412
  br label %2404, !dbg !413

2427:                                             ; preds = %2397
  %2428 = getelementptr i8, i8* %2400, i32 1, !dbg !414
  store i8* %2428, i8** %2393, align 8, !dbg !415
  %2429 = load i32, i32* %2224, align 4, !dbg !416
  %2430 = trunc i32 %2429 to i8, !dbg !417
  %2431 = getelementptr i8, i8* %4, i8 %2430, !dbg !418
  %2432 = load i8, i8* %2431, align 1, !dbg !419
  %2433 = zext i8 %2432 to i64, !dbg !420
  %2434 = load i64, i64* %2387, align 4, !dbg !421
  %2435 = add i64 %2434, %2433, !dbg !422
  store i64 %2435, i64* %2387, align 4, !dbg !423
  br label %2404, !dbg !424

2436:                                             ; preds = %2404
  %2437 = load i64, i64* %2387, align 4, !dbg !425
  %2438 = load i32, i32* %2239, align 4, !dbg !426
  %2439 = zext i32 %2438 to i64, !dbg !427
  %2440 = icmp uge i64 %2414, %2415, !dbg !428
  %2441 = icmp ugt i64 %2414, %2415, !dbg !429
  %2442 = icmp ne i64 %2437, %2439, !dbg !430
  %2443 = icmp ugt i64 %2437, %2439, !dbg !431
  %2444 = or i1 %2441, %2442, !dbg !432
  %2445 = and i1 %2440, %2444, !dbg !433
  %2446 = or i1 %2445, %2443, !dbg !434
  br i1 %2446, label %2447, label %2451, !dbg !435

2447:                                             ; preds = %2436
  %2448 = load i32, i32* %2231, align 4, !dbg !436
  %2449 = icmp eq i32 %2448, 0, !dbg !437
  br i1 %2449, label %2450, label %2451, !dbg !438

2450:                                             ; preds = %2447
  store i32 0, i32* %2384, align 4, !dbg !439
  store i8* %2396, i8** %2393, align 8, !dbg !440
  br label %2451, !dbg !441

2451:                                             ; preds = %2450, %2447, %2436
  %2452 = load i32, i32* %2384, align 4, !dbg !442
  %2453 = trunc i32 %2452 to i16, !dbg !443
  store i16 %2453, i16* %2242, align 2, !dbg !444
  %2454 = load i8*, i8** %2393, align 8, !dbg !445
  %2455 = ptrtoint i8* %2454 to i64, !dbg !446
  %2456 = load i8*, i8** %2223, align 8, !dbg !447
  %2457 = ptrtoint i8* %2456 to i64, !dbg !448
  %2458 = sub i64 %2455, %2457, !dbg !449
  %2459 = trunc i64 %2458 to i32, !dbg !450
  store i32 %2459, i32* %2238, align 4, !dbg !451
  br label %2461, !dbg !452

2460:                                             ; preds = %2375
  store i32 0, i32* %2224, align 4, !dbg !453
  br label %2461, !dbg !454

2461:                                             ; preds = %2451, %2460
  %2462 = load i16, i16* %2242, align 2, !dbg !455
  %2463 = icmp sle i16 %2462, 13, !dbg !456
  br i1 %2463, label %2464, label %2293, !dbg !457

2464:                                             ; preds = %2461
  %2465 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 1, !dbg !458
  %2466 = load i16, i16* %2465, align 2, !dbg !458
  %2467 = and i16 %2466, 9216, !dbg !458
  %2468 = icmp ne i16 %2467, 0, !dbg !458
  br i1 %2468, label %2469, label %2470, !dbg !458

2469:                                             ; preds = %2464
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2227), !dbg !458
  br label %2471, !dbg !458

2470:                                             ; preds = %2464
  store i16 1, i16* %2465, align 2, !dbg !458
  br label %2471, !dbg !458

2471:                                             ; preds = %2469, %2470, %2340, %2320, %2359, %2370, %2288, %2289
  call void @llvm.stackrestore(i8* %2216), !dbg !459
  br label %2472, !dbg !74

2472:                                             ; preds = %14, %2471, %14
  %2473 = call i8* @llvm.stacksave(), !dbg !634
  %2474 = alloca i64, align 8, !dbg !637
  %2475 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 27, !dbg !638
  %2476 = call i8* @llvm.stacksave(), !dbg !639
  %2477 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2475, i32 0, i32 4, !dbg !79
  %2478 = load i32, i32* %2477, align 4, !dbg !82
  %2479 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2478, !dbg !83
  %2480 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2479, i32 0, i32 1, !dbg !639
  %2481 = load i16, i16* %2480, align 2, !dbg !639
  %2482 = and i16 %2481, 9216, !dbg !639
  %2483 = icmp ne i16 %2482, 0, !dbg !639
  %2484 = alloca %struct.sqlite3_value*, align 8, !dbg !639
  br i1 %2483, label %2485, label %2487, !dbg !639

2485:                                             ; preds = %2472
  %2486 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %2479), !dbg !639
  store %struct.sqlite3_value* %2486, %struct.sqlite3_value** %2484, align 8, !dbg !639
  br label %2488, !dbg !639

2487:                                             ; preds = %2472
  store i16 4, i16* %2480, align 2, !dbg !639
  store %struct.sqlite3_value* %2479, %struct.sqlite3_value** %2484, align 8, !dbg !639
  br label %2488, !dbg !639

2488:                                             ; preds = %2487, %2485
  %2489 = load %struct.sqlite3_value*, %struct.sqlite3_value** %2484, align 8, !dbg !639
  call void @llvm.stackrestore(i8* %2476), !dbg !639
  %2490 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !640
  %2491 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2490, align 8, !dbg !641
  %2492 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2491, i32 0, i32 2, !dbg !642
  %2493 = load i8, i8* %2492, align 1, !dbg !643
  %2494 = icmp ne i8 %2493, 0, !dbg !644
  br i1 %2494, label %2495, label %2497, !dbg !645

2495:                                             ; preds = %2488
  %2496 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2489, i32 0, i32 1, !dbg !646
  store i16 1, i16* %2496, align 2, !dbg !647
  br label %2522, !dbg !648

2497:                                             ; preds = %2488
  %2498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2491, i32 0, i32 3, !dbg !649
  %2499 = load i8, i8* %2498, align 1, !dbg !650
  %2500 = icmp ne i8 %2499, 0, !dbg !651
  br i1 %2500, label %2501, label %2504, !dbg !652

2501:                                             ; preds = %2497
  %2502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2491, i32 0, i32 18, !dbg !653
  %2503 = load i64, i64* %2502, align 4, !dbg !654
  store i64 %2503, i64* %2474, align 4, !dbg !655
  br label %2518, !dbg !656

2504:                                             ; preds = %2497
  %2505 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2491, i32 0, i32 0, !dbg !657
  %2506 = load i8, i8* %2505, align 1, !dbg !658
  %2507 = icmp eq i8 %2506, 2, !dbg !659
  br i1 %2507, label %2518, label %2508, !dbg !660

2508:                                             ; preds = %2504
  %2509 = call i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor* %2491), !dbg !661
  %2510 = load i8, i8* %2492, align 1, !dbg !662
  %2511 = icmp ne i8 %2510, 0, !dbg !663
  br i1 %2511, label %2512, label %2514, !dbg !664

2512:                                             ; preds = %2508
  %2513 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2489, i32 0, i32 1, !dbg !665
  store i16 1, i16* %2513, align 2, !dbg !666
  br label %2522, !dbg !667

2514:                                             ; preds = %2508
  %2515 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2491, i32 0, i32 12, i32 0, !dbg !668
  %2516 = load %struct.BtCursor*, %struct.BtCursor** %2515, align 8, !dbg !669
  %2517 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %2516), !dbg !670
  store i64 %2517, i64* %2474, align 4, !dbg !671
  br label %2518, !dbg !672

2518:                                             ; preds = %2504, %2514, %2501
  %2519 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2489, i32 0, i32 0, i32 0, !dbg !673
  %2520 = bitcast double* %2519 to i64*, !dbg !674
  %2521 = load i64, i64* %2474, align 4, !dbg !675
  store i64 %2521, i64* %2520, align 4, !dbg !676
  br label %2522, !dbg !677

2522:                                             ; preds = %2512, %2518, %2495
  call void @llvm.stackrestore(i8* %2473), !dbg !678
  br label %2523, !dbg !74

2523:                                             ; preds = %2522, %14
  %2524 = call i8* @llvm.stacksave(), !dbg !679
  %2525 = alloca i64, align 8, !dbg !682
  store i64 0, i64* %2525, align 4, !dbg !683
  %2526 = alloca i32, align 8, !dbg !684
  store i32 0, i32* %2526, align 4, !dbg !685
  %2527 = alloca i64, align 8, !dbg !686
  store i64 0, i64* %2527, align 4, !dbg !687
  %2528 = alloca i8*, align 8, !dbg !688
  %2529 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 28, !dbg !689
  %2530 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2529, i32 0, i32 6, !dbg !690
  %2531 = bitcast %union.p4union* %2530 to i8**, !dbg !691
  %2532 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !692
  %2533 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2532, i32 6, !dbg !693
  %2534 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !694
  %2535 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 0, i32 1, !dbg !695
  %2536 = load i16, i16* %2535, align 2, !dbg !696
  %2537 = and i16 %2536, 1, !dbg !697
  %2538 = icmp ne i16 %2537, 0, !dbg !697
  %2539 = and i16 %2536, 36, !dbg !698
  %2540 = icmp ne i16 %2539, 0, !dbg !698
  %2541 = and i16 %2536, 8, !dbg !699
  %2542 = icmp ne i16 %2541, 0, !dbg !699
  %2543 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 0, i32 8, !dbg !700
  br i1 %2538, label %2544, label %2552, !dbg !701

2544:                                             ; preds = %2523
  %2545 = and i16 %2536, 16384, !dbg !702
  %2546 = icmp ne i16 %2545, 0, !dbg !702
  br i1 %2546, label %2547, label %2548, !dbg !703

2547:                                             ; preds = %2544
  store i32 10, i32* %2543, align 4, !dbg !704
  br label %2549, !dbg !705

2548:                                             ; preds = %2544
  store i32 0, i32* %2543, align 4, !dbg !706
  br label %2549, !dbg !707

2549:                                             ; preds = %2548, %2547
  %2550 = load i32, i32* %2526, align 4, !dbg !708
  %2551 = add i32 %2550, 1, !dbg !708
  store i32 %2551, i32* %2526, align 4, !dbg !708
  br label %2642, !dbg !709

2552:                                             ; preds = %2523
  br i1 %2540, label %2553, label %2597, !dbg !710

2553:                                             ; preds = %2552
  %2554 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 0, i32 0, !dbg !711
  %2555 = bitcast %union.MemValue* %2554 to i64*, !dbg !712
  %2556 = load i64, i64* %2555, align 4, !dbg !713
  %2557 = alloca i64, align 8, !dbg !714
  %2558 = icmp slt i64 %2556, 0, !dbg !715
  br i1 %2558, label %2559, label %2561, !dbg !716

2559:                                             ; preds = %2553
  %2560 = xor i64 %2556, -1, !dbg !717
  store i64 %2560, i64* %2557, align 4, !dbg !718
  br label %2562, !dbg !719

2561:                                             ; preds = %2553
  store i64 %2556, i64* %2557, align 4, !dbg !720
  br label %2562, !dbg !721

2562:                                             ; preds = %2561, %2559
  %2563 = load i32, i32* %2526, align 4, !dbg !722
  %2564 = add i32 %2563, 1, !dbg !722
  store i32 %2564, i32* %2526, align 4, !dbg !722
  %2565 = load i64, i64* %2557, align 4, !dbg !723
  %2566 = icmp slt i64 %2565, 127, !dbg !724
  %2567 = icmp slt i64 %2565, 32767, !dbg !725
  %2568 = icmp slt i64 %2565, 8388607, !dbg !726
  %2569 = icmp slt i64 %2565, 2147483647, !dbg !727
  br i1 %2566, label %2570, label %2579, !dbg !728

2570:                                             ; preds = %2562
  %2571 = and i64 %2556, 1, !dbg !729
  %2572 = icmp eq i64 %2571, %2556, !dbg !730
  br i1 %2572, label %2573, label %2576, !dbg !731

2573:                                             ; preds = %2570
  %2574 = trunc i64 %2565 to i32, !dbg !732
  %2575 = add i32 %2574, 8, !dbg !733
  store i32 %2575, i32* %2543, align 4, !dbg !734
  br label %2642, !dbg !735

2576:                                             ; preds = %2570
  %2577 = load i64, i64* %2525, align 4, !dbg !736
  %2578 = add i64 %2577, 1, !dbg !736
  store i64 %2578, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %2543, align 4, !dbg !737
  br label %2642, !dbg !738

2579:                                             ; preds = %2562
  %2580 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %2567, label %2581, label %2583, !dbg !740

2581:                                             ; preds = %2579
  %2582 = add i64 %2580, 2, !dbg !741
  store i64 %2582, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %2543, align 4, !dbg !742
  br label %2642, !dbg !743

2583:                                             ; preds = %2579
  br i1 %2568, label %2584, label %2586, !dbg !744

2584:                                             ; preds = %2583
  %2585 = add i64 %2580, 3, !dbg !745
  store i64 %2585, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %2543, align 4, !dbg !746
  br label %2642, !dbg !747

2586:                                             ; preds = %2583
  br i1 %2569, label %2587, label %2589, !dbg !748

2587:                                             ; preds = %2586
  %2588 = add i64 %2580, 4, !dbg !749
  store i64 %2588, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %2543, align 4, !dbg !750
  br label %2642, !dbg !751

2589:                                             ; preds = %2586
  %2590 = add i64 %2580, 8, !dbg !752
  store i64 %2590, i64* %2525, align 4, !dbg !752
  %2591 = and i16 %2536, 32, !dbg !753
  %2592 = icmp ne i16 %2591, 0, !dbg !753
  br i1 %2592, label %2593, label %2596, !dbg !754

2593:                                             ; preds = %2589
  %2594 = and i16 %2536, -33, !dbg !755
  %2595 = or i16 %2594, 8, !dbg !756
  store i16 %2595, i16* %2535, align 2, !dbg !757
  store i32 7, i32* %2543, align 4, !dbg !758
  br label %2642, !dbg !759

2596:                                             ; preds = %2589
  store i32 6, i32* %2543, align 4, !dbg !760
  br label %2642, !dbg !761

2597:                                             ; preds = %2552
  br i1 %2542, label %2598, label %2603, !dbg !762

2598:                                             ; preds = %2597
  %2599 = load i32, i32* %2526, align 4, !dbg !763
  %2600 = add i32 %2599, 1, !dbg !763
  store i32 %2600, i32* %2526, align 4, !dbg !763
  %2601 = load i64, i64* %2525, align 4, !dbg !764
  %2602 = add i64 %2601, 8, !dbg !764
  store i64 %2602, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %2543, align 4, !dbg !765
  br label %2642, !dbg !766

2603:                                             ; preds = %2597
  %2604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 0, i32 4, !dbg !767
  %2605 = load i32, i32* %2604, align 4, !dbg !768
  %2606 = alloca i32, align 8, !dbg !769
  store i32 %2605, i32* %2606, align 4, !dbg !770
  %2607 = alloca i32, align 8, !dbg !771
  %2608 = add i32 %2605, %2605, !dbg !772
  %2609 = add i32 %2608, 12, !dbg !773
  %2610 = and i16 %2536, 2, !dbg !774
  %2611 = icmp ne i16 %2610, 0, !dbg !775
  %2612 = zext i1 %2611 to i32, !dbg !776
  %2613 = add i32 %2609, %2612, !dbg !777
  store i32 %2613, i32* %2607, align 4, !dbg !778
  %2614 = and i16 %2536, 16384, !dbg !779
  %2615 = icmp ne i16 %2614, 0, !dbg !780
  br i1 %2615, label %2616, label %2632, !dbg !781

2616:                                             ; preds = %2603
  %2617 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 0, i32 0, !dbg !782
  %2618 = bitcast %union.MemValue* %2617 to i32*, !dbg !783
  %2619 = load i32, i32* %2618, align 4, !dbg !784
  %2620 = add i32 %2619, %2619, !dbg !785
  %2621 = add i32 %2613, %2620, !dbg !786
  store i32 %2621, i32* %2607, align 4, !dbg !786
  %2622 = load i64, i64* %2525, align 4, !dbg !787
  %2623 = icmp ne i64 %2622, 0, !dbg !787
  br i1 %2623, label %2628, label %2624, !dbg !788

2624:                                             ; preds = %2616
  %2625 = zext i32 %2619 to i64, !dbg !789
  %2626 = load i64, i64* %2527, align 4, !dbg !790
  %2627 = add i64 %2626, %2625, !dbg !790
  store i64 %2627, i64* %2527, align 4, !dbg !790
  br label %2632, !dbg !791

2628:                                             ; preds = %2616
  %2629 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2533), !dbg !792
  %2630 = load i32, i32* %2606, align 4, !dbg !793
  %2631 = add i32 %2630, %2619, !dbg !793
  store i32 %2631, i32* %2606, align 4, !dbg !793
  br label %2632, !dbg !794

2632:                                             ; preds = %2624, %2628, %2603
  %2633 = load i32, i32* %2606, align 4, !dbg !795
  %2634 = zext i32 %2633 to i64, !dbg !796
  %2635 = load i64, i64* %2525, align 4, !dbg !797
  %2636 = add i64 %2635, %2634, !dbg !797
  store i64 %2636, i64* %2525, align 4, !dbg !797
  %2637 = load i32, i32* %2607, align 4, !dbg !798
  %2638 = zext i32 %2637 to i64, !dbg !799
  %2639 = call i32 @sqlite3VarintLen(i64 %2638), !dbg !800
  %2640 = load i32, i32* %2526, align 4, !dbg !801
  %2641 = add i32 %2640, %2639, !dbg !801
  store i32 %2641, i32* %2526, align 4, !dbg !801
  store i32 %2637, i32* %2543, align 4, !dbg !802
  br label %2642, !dbg !803

2642:                                             ; preds = %2581, %2584, %2587, %2593, %2596, %2576, %2573, %2632, %2598, %2549
  %2643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2533, i32 -1, !dbg !804
  %2644 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 0, i32 1, !dbg !695
  %2645 = load i16, i16* %2644, align 2, !dbg !696
  %2646 = and i16 %2645, 1, !dbg !697
  %2647 = icmp ne i16 %2646, 0, !dbg !697
  %2648 = and i16 %2645, 36, !dbg !698
  %2649 = icmp ne i16 %2648, 0, !dbg !698
  %2650 = and i16 %2645, 8, !dbg !699
  %2651 = icmp ne i16 %2650, 0, !dbg !699
  %2652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 0, i32 8, !dbg !700
  br i1 %2647, label %2653, label %2661, !dbg !701

2653:                                             ; preds = %2642
  %2654 = and i16 %2645, 16384, !dbg !702
  %2655 = icmp ne i16 %2654, 0, !dbg !702
  br i1 %2655, label %2656, label %2657, !dbg !703

2656:                                             ; preds = %2653
  store i32 10, i32* %2652, align 4, !dbg !704
  br label %2658, !dbg !705

2657:                                             ; preds = %2653
  store i32 0, i32* %2652, align 4, !dbg !706
  br label %2658, !dbg !707

2658:                                             ; preds = %2657, %2656
  %2659 = load i32, i32* %2526, align 4, !dbg !708
  %2660 = add i32 %2659, 1, !dbg !708
  store i32 %2660, i32* %2526, align 4, !dbg !708
  br label %2751, !dbg !709

2661:                                             ; preds = %2642
  br i1 %2649, label %2662, label %2706, !dbg !710

2662:                                             ; preds = %2661
  %2663 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 0, i32 0, !dbg !711
  %2664 = bitcast %union.MemValue* %2663 to i64*, !dbg !712
  %2665 = load i64, i64* %2664, align 4, !dbg !713
  %2666 = alloca i64, align 8, !dbg !714
  %2667 = icmp slt i64 %2665, 0, !dbg !715
  br i1 %2667, label %2668, label %2670, !dbg !716

2668:                                             ; preds = %2662
  %2669 = xor i64 %2665, -1, !dbg !717
  store i64 %2669, i64* %2666, align 4, !dbg !718
  br label %2671, !dbg !719

2670:                                             ; preds = %2662
  store i64 %2665, i64* %2666, align 4, !dbg !720
  br label %2671, !dbg !721

2671:                                             ; preds = %2670, %2668
  %2672 = load i32, i32* %2526, align 4, !dbg !722
  %2673 = add i32 %2672, 1, !dbg !722
  store i32 %2673, i32* %2526, align 4, !dbg !722
  %2674 = load i64, i64* %2666, align 4, !dbg !723
  %2675 = icmp slt i64 %2674, 127, !dbg !724
  %2676 = icmp slt i64 %2674, 32767, !dbg !725
  %2677 = icmp slt i64 %2674, 8388607, !dbg !726
  %2678 = icmp slt i64 %2674, 2147483647, !dbg !727
  br i1 %2675, label %2679, label %2688, !dbg !728

2679:                                             ; preds = %2671
  %2680 = and i64 %2665, 1, !dbg !729
  %2681 = icmp eq i64 %2680, %2665, !dbg !730
  br i1 %2681, label %2682, label %2685, !dbg !731

2682:                                             ; preds = %2679
  %2683 = trunc i64 %2674 to i32, !dbg !732
  %2684 = add i32 %2683, 8, !dbg !733
  store i32 %2684, i32* %2652, align 4, !dbg !734
  br label %2751, !dbg !735

2685:                                             ; preds = %2679
  %2686 = load i64, i64* %2525, align 4, !dbg !736
  %2687 = add i64 %2686, 1, !dbg !736
  store i64 %2687, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %2652, align 4, !dbg !737
  br label %2751, !dbg !738

2688:                                             ; preds = %2671
  %2689 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %2676, label %2690, label %2692, !dbg !740

2690:                                             ; preds = %2688
  %2691 = add i64 %2689, 2, !dbg !741
  store i64 %2691, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %2652, align 4, !dbg !742
  br label %2751, !dbg !743

2692:                                             ; preds = %2688
  br i1 %2677, label %2693, label %2695, !dbg !744

2693:                                             ; preds = %2692
  %2694 = add i64 %2689, 3, !dbg !745
  store i64 %2694, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %2652, align 4, !dbg !746
  br label %2751, !dbg !747

2695:                                             ; preds = %2692
  br i1 %2678, label %2696, label %2698, !dbg !748

2696:                                             ; preds = %2695
  %2697 = add i64 %2689, 4, !dbg !749
  store i64 %2697, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %2652, align 4, !dbg !750
  br label %2751, !dbg !751

2698:                                             ; preds = %2695
  %2699 = add i64 %2689, 8, !dbg !752
  store i64 %2699, i64* %2525, align 4, !dbg !752
  %2700 = and i16 %2645, 32, !dbg !753
  %2701 = icmp ne i16 %2700, 0, !dbg !753
  br i1 %2701, label %2702, label %2705, !dbg !754

2702:                                             ; preds = %2698
  %2703 = and i16 %2645, -33, !dbg !755
  %2704 = or i16 %2703, 8, !dbg !756
  store i16 %2704, i16* %2644, align 2, !dbg !757
  store i32 7, i32* %2652, align 4, !dbg !758
  br label %2751, !dbg !759

2705:                                             ; preds = %2698
  store i32 6, i32* %2652, align 4, !dbg !760
  br label %2751, !dbg !761

2706:                                             ; preds = %2661
  br i1 %2651, label %2707, label %2712, !dbg !762

2707:                                             ; preds = %2706
  %2708 = load i32, i32* %2526, align 4, !dbg !763
  %2709 = add i32 %2708, 1, !dbg !763
  store i32 %2709, i32* %2526, align 4, !dbg !763
  %2710 = load i64, i64* %2525, align 4, !dbg !764
  %2711 = add i64 %2710, 8, !dbg !764
  store i64 %2711, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %2652, align 4, !dbg !765
  br label %2751, !dbg !766

2712:                                             ; preds = %2706
  %2713 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 0, i32 4, !dbg !767
  %2714 = load i32, i32* %2713, align 4, !dbg !768
  %2715 = alloca i32, align 8, !dbg !769
  store i32 %2714, i32* %2715, align 4, !dbg !770
  %2716 = alloca i32, align 8, !dbg !771
  %2717 = add i32 %2714, %2714, !dbg !772
  %2718 = add i32 %2717, 12, !dbg !773
  %2719 = and i16 %2645, 2, !dbg !774
  %2720 = icmp ne i16 %2719, 0, !dbg !775
  %2721 = zext i1 %2720 to i32, !dbg !776
  %2722 = add i32 %2718, %2721, !dbg !777
  store i32 %2722, i32* %2716, align 4, !dbg !778
  %2723 = and i16 %2645, 16384, !dbg !779
  %2724 = icmp ne i16 %2723, 0, !dbg !780
  br i1 %2724, label %2725, label %2741, !dbg !781

2725:                                             ; preds = %2712
  %2726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 0, i32 0, !dbg !782
  %2727 = bitcast %union.MemValue* %2726 to i32*, !dbg !783
  %2728 = load i32, i32* %2727, align 4, !dbg !784
  %2729 = add i32 %2728, %2728, !dbg !785
  %2730 = add i32 %2722, %2729, !dbg !786
  store i32 %2730, i32* %2716, align 4, !dbg !786
  %2731 = load i64, i64* %2525, align 4, !dbg !787
  %2732 = icmp ne i64 %2731, 0, !dbg !787
  br i1 %2732, label %2737, label %2733, !dbg !788

2733:                                             ; preds = %2725
  %2734 = zext i32 %2728 to i64, !dbg !789
  %2735 = load i64, i64* %2527, align 4, !dbg !790
  %2736 = add i64 %2735, %2734, !dbg !790
  store i64 %2736, i64* %2527, align 4, !dbg !790
  br label %2741, !dbg !791

2737:                                             ; preds = %2725
  %2738 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2643), !dbg !792
  %2739 = load i32, i32* %2715, align 4, !dbg !793
  %2740 = add i32 %2739, %2728, !dbg !793
  store i32 %2740, i32* %2715, align 4, !dbg !793
  br label %2741, !dbg !794

2741:                                             ; preds = %2733, %2737, %2712
  %2742 = load i32, i32* %2715, align 4, !dbg !795
  %2743 = zext i32 %2742 to i64, !dbg !796
  %2744 = load i64, i64* %2525, align 4, !dbg !797
  %2745 = add i64 %2744, %2743, !dbg !797
  store i64 %2745, i64* %2525, align 4, !dbg !797
  %2746 = load i32, i32* %2716, align 4, !dbg !798
  %2747 = zext i32 %2746 to i64, !dbg !799
  %2748 = call i32 @sqlite3VarintLen(i64 %2747), !dbg !800
  %2749 = load i32, i32* %2526, align 4, !dbg !801
  %2750 = add i32 %2749, %2748, !dbg !801
  store i32 %2750, i32* %2526, align 4, !dbg !801
  store i32 %2746, i32* %2652, align 4, !dbg !802
  br label %2751, !dbg !803

2751:                                             ; preds = %2690, %2693, %2696, %2702, %2705, %2685, %2682, %2741, %2707, %2658
  %2752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2643, i32 -1, !dbg !804
  %2753 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 0, i32 1, !dbg !695
  %2754 = load i16, i16* %2753, align 2, !dbg !696
  %2755 = and i16 %2754, 1, !dbg !697
  %2756 = icmp ne i16 %2755, 0, !dbg !697
  %2757 = and i16 %2754, 36, !dbg !698
  %2758 = icmp ne i16 %2757, 0, !dbg !698
  %2759 = and i16 %2754, 8, !dbg !699
  %2760 = icmp ne i16 %2759, 0, !dbg !699
  %2761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 0, i32 8, !dbg !700
  br i1 %2756, label %2762, label %2770, !dbg !701

2762:                                             ; preds = %2751
  %2763 = and i16 %2754, 16384, !dbg !702
  %2764 = icmp ne i16 %2763, 0, !dbg !702
  br i1 %2764, label %2765, label %2766, !dbg !703

2765:                                             ; preds = %2762
  store i32 10, i32* %2761, align 4, !dbg !704
  br label %2767, !dbg !705

2766:                                             ; preds = %2762
  store i32 0, i32* %2761, align 4, !dbg !706
  br label %2767, !dbg !707

2767:                                             ; preds = %2766, %2765
  %2768 = load i32, i32* %2526, align 4, !dbg !708
  %2769 = add i32 %2768, 1, !dbg !708
  store i32 %2769, i32* %2526, align 4, !dbg !708
  br label %2860, !dbg !709

2770:                                             ; preds = %2751
  br i1 %2758, label %2771, label %2815, !dbg !710

2771:                                             ; preds = %2770
  %2772 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 0, i32 0, !dbg !711
  %2773 = bitcast %union.MemValue* %2772 to i64*, !dbg !712
  %2774 = load i64, i64* %2773, align 4, !dbg !713
  %2775 = alloca i64, align 8, !dbg !714
  %2776 = icmp slt i64 %2774, 0, !dbg !715
  br i1 %2776, label %2777, label %2779, !dbg !716

2777:                                             ; preds = %2771
  %2778 = xor i64 %2774, -1, !dbg !717
  store i64 %2778, i64* %2775, align 4, !dbg !718
  br label %2780, !dbg !719

2779:                                             ; preds = %2771
  store i64 %2774, i64* %2775, align 4, !dbg !720
  br label %2780, !dbg !721

2780:                                             ; preds = %2779, %2777
  %2781 = load i32, i32* %2526, align 4, !dbg !722
  %2782 = add i32 %2781, 1, !dbg !722
  store i32 %2782, i32* %2526, align 4, !dbg !722
  %2783 = load i64, i64* %2775, align 4, !dbg !723
  %2784 = icmp slt i64 %2783, 127, !dbg !724
  %2785 = icmp slt i64 %2783, 32767, !dbg !725
  %2786 = icmp slt i64 %2783, 8388607, !dbg !726
  %2787 = icmp slt i64 %2783, 2147483647, !dbg !727
  br i1 %2784, label %2788, label %2797, !dbg !728

2788:                                             ; preds = %2780
  %2789 = and i64 %2774, 1, !dbg !729
  %2790 = icmp eq i64 %2789, %2774, !dbg !730
  br i1 %2790, label %2791, label %2794, !dbg !731

2791:                                             ; preds = %2788
  %2792 = trunc i64 %2783 to i32, !dbg !732
  %2793 = add i32 %2792, 8, !dbg !733
  store i32 %2793, i32* %2761, align 4, !dbg !734
  br label %2860, !dbg !735

2794:                                             ; preds = %2788
  %2795 = load i64, i64* %2525, align 4, !dbg !736
  %2796 = add i64 %2795, 1, !dbg !736
  store i64 %2796, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %2761, align 4, !dbg !737
  br label %2860, !dbg !738

2797:                                             ; preds = %2780
  %2798 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %2785, label %2799, label %2801, !dbg !740

2799:                                             ; preds = %2797
  %2800 = add i64 %2798, 2, !dbg !741
  store i64 %2800, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %2761, align 4, !dbg !742
  br label %2860, !dbg !743

2801:                                             ; preds = %2797
  br i1 %2786, label %2802, label %2804, !dbg !744

2802:                                             ; preds = %2801
  %2803 = add i64 %2798, 3, !dbg !745
  store i64 %2803, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %2761, align 4, !dbg !746
  br label %2860, !dbg !747

2804:                                             ; preds = %2801
  br i1 %2787, label %2805, label %2807, !dbg !748

2805:                                             ; preds = %2804
  %2806 = add i64 %2798, 4, !dbg !749
  store i64 %2806, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %2761, align 4, !dbg !750
  br label %2860, !dbg !751

2807:                                             ; preds = %2804
  %2808 = add i64 %2798, 8, !dbg !752
  store i64 %2808, i64* %2525, align 4, !dbg !752
  %2809 = and i16 %2754, 32, !dbg !753
  %2810 = icmp ne i16 %2809, 0, !dbg !753
  br i1 %2810, label %2811, label %2814, !dbg !754

2811:                                             ; preds = %2807
  %2812 = and i16 %2754, -33, !dbg !755
  %2813 = or i16 %2812, 8, !dbg !756
  store i16 %2813, i16* %2753, align 2, !dbg !757
  store i32 7, i32* %2761, align 4, !dbg !758
  br label %2860, !dbg !759

2814:                                             ; preds = %2807
  store i32 6, i32* %2761, align 4, !dbg !760
  br label %2860, !dbg !761

2815:                                             ; preds = %2770
  br i1 %2760, label %2816, label %2821, !dbg !762

2816:                                             ; preds = %2815
  %2817 = load i32, i32* %2526, align 4, !dbg !763
  %2818 = add i32 %2817, 1, !dbg !763
  store i32 %2818, i32* %2526, align 4, !dbg !763
  %2819 = load i64, i64* %2525, align 4, !dbg !764
  %2820 = add i64 %2819, 8, !dbg !764
  store i64 %2820, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %2761, align 4, !dbg !765
  br label %2860, !dbg !766

2821:                                             ; preds = %2815
  %2822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 0, i32 4, !dbg !767
  %2823 = load i32, i32* %2822, align 4, !dbg !768
  %2824 = alloca i32, align 8, !dbg !769
  store i32 %2823, i32* %2824, align 4, !dbg !770
  %2825 = alloca i32, align 8, !dbg !771
  %2826 = add i32 %2823, %2823, !dbg !772
  %2827 = add i32 %2826, 12, !dbg !773
  %2828 = and i16 %2754, 2, !dbg !774
  %2829 = icmp ne i16 %2828, 0, !dbg !775
  %2830 = zext i1 %2829 to i32, !dbg !776
  %2831 = add i32 %2827, %2830, !dbg !777
  store i32 %2831, i32* %2825, align 4, !dbg !778
  %2832 = and i16 %2754, 16384, !dbg !779
  %2833 = icmp ne i16 %2832, 0, !dbg !780
  br i1 %2833, label %2834, label %2850, !dbg !781

2834:                                             ; preds = %2821
  %2835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 0, i32 0, !dbg !782
  %2836 = bitcast %union.MemValue* %2835 to i32*, !dbg !783
  %2837 = load i32, i32* %2836, align 4, !dbg !784
  %2838 = add i32 %2837, %2837, !dbg !785
  %2839 = add i32 %2831, %2838, !dbg !786
  store i32 %2839, i32* %2825, align 4, !dbg !786
  %2840 = load i64, i64* %2525, align 4, !dbg !787
  %2841 = icmp ne i64 %2840, 0, !dbg !787
  br i1 %2841, label %2846, label %2842, !dbg !788

2842:                                             ; preds = %2834
  %2843 = zext i32 %2837 to i64, !dbg !789
  %2844 = load i64, i64* %2527, align 4, !dbg !790
  %2845 = add i64 %2844, %2843, !dbg !790
  store i64 %2845, i64* %2527, align 4, !dbg !790
  br label %2850, !dbg !791

2846:                                             ; preds = %2834
  %2847 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2752), !dbg !792
  %2848 = load i32, i32* %2824, align 4, !dbg !793
  %2849 = add i32 %2848, %2837, !dbg !793
  store i32 %2849, i32* %2824, align 4, !dbg !793
  br label %2850, !dbg !794

2850:                                             ; preds = %2842, %2846, %2821
  %2851 = load i32, i32* %2824, align 4, !dbg !795
  %2852 = zext i32 %2851 to i64, !dbg !796
  %2853 = load i64, i64* %2525, align 4, !dbg !797
  %2854 = add i64 %2853, %2852, !dbg !797
  store i64 %2854, i64* %2525, align 4, !dbg !797
  %2855 = load i32, i32* %2825, align 4, !dbg !798
  %2856 = zext i32 %2855 to i64, !dbg !799
  %2857 = call i32 @sqlite3VarintLen(i64 %2856), !dbg !800
  %2858 = load i32, i32* %2526, align 4, !dbg !801
  %2859 = add i32 %2858, %2857, !dbg !801
  store i32 %2859, i32* %2526, align 4, !dbg !801
  store i32 %2855, i32* %2761, align 4, !dbg !802
  br label %2860, !dbg !803

2860:                                             ; preds = %2799, %2802, %2805, %2811, %2814, %2794, %2791, %2850, %2816, %2767
  %2861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2752, i32 -1, !dbg !804
  %2862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 0, i32 1, !dbg !695
  %2863 = load i16, i16* %2862, align 2, !dbg !696
  %2864 = and i16 %2863, 1, !dbg !697
  %2865 = icmp ne i16 %2864, 0, !dbg !697
  %2866 = and i16 %2863, 36, !dbg !698
  %2867 = icmp ne i16 %2866, 0, !dbg !698
  %2868 = and i16 %2863, 8, !dbg !699
  %2869 = icmp ne i16 %2868, 0, !dbg !699
  %2870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 0, i32 8, !dbg !700
  br i1 %2865, label %2871, label %2879, !dbg !701

2871:                                             ; preds = %2860
  %2872 = and i16 %2863, 16384, !dbg !702
  %2873 = icmp ne i16 %2872, 0, !dbg !702
  br i1 %2873, label %2874, label %2875, !dbg !703

2874:                                             ; preds = %2871
  store i32 10, i32* %2870, align 4, !dbg !704
  br label %2876, !dbg !705

2875:                                             ; preds = %2871
  store i32 0, i32* %2870, align 4, !dbg !706
  br label %2876, !dbg !707

2876:                                             ; preds = %2875, %2874
  %2877 = load i32, i32* %2526, align 4, !dbg !708
  %2878 = add i32 %2877, 1, !dbg !708
  store i32 %2878, i32* %2526, align 4, !dbg !708
  br label %2969, !dbg !709

2879:                                             ; preds = %2860
  br i1 %2867, label %2880, label %2924, !dbg !710

2880:                                             ; preds = %2879
  %2881 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 0, i32 0, !dbg !711
  %2882 = bitcast %union.MemValue* %2881 to i64*, !dbg !712
  %2883 = load i64, i64* %2882, align 4, !dbg !713
  %2884 = alloca i64, align 8, !dbg !714
  %2885 = icmp slt i64 %2883, 0, !dbg !715
  br i1 %2885, label %2886, label %2888, !dbg !716

2886:                                             ; preds = %2880
  %2887 = xor i64 %2883, -1, !dbg !717
  store i64 %2887, i64* %2884, align 4, !dbg !718
  br label %2889, !dbg !719

2888:                                             ; preds = %2880
  store i64 %2883, i64* %2884, align 4, !dbg !720
  br label %2889, !dbg !721

2889:                                             ; preds = %2888, %2886
  %2890 = load i32, i32* %2526, align 4, !dbg !722
  %2891 = add i32 %2890, 1, !dbg !722
  store i32 %2891, i32* %2526, align 4, !dbg !722
  %2892 = load i64, i64* %2884, align 4, !dbg !723
  %2893 = icmp slt i64 %2892, 127, !dbg !724
  %2894 = icmp slt i64 %2892, 32767, !dbg !725
  %2895 = icmp slt i64 %2892, 8388607, !dbg !726
  %2896 = icmp slt i64 %2892, 2147483647, !dbg !727
  br i1 %2893, label %2897, label %2906, !dbg !728

2897:                                             ; preds = %2889
  %2898 = and i64 %2883, 1, !dbg !729
  %2899 = icmp eq i64 %2898, %2883, !dbg !730
  br i1 %2899, label %2900, label %2903, !dbg !731

2900:                                             ; preds = %2897
  %2901 = trunc i64 %2892 to i32, !dbg !732
  %2902 = add i32 %2901, 8, !dbg !733
  store i32 %2902, i32* %2870, align 4, !dbg !734
  br label %2969, !dbg !735

2903:                                             ; preds = %2897
  %2904 = load i64, i64* %2525, align 4, !dbg !736
  %2905 = add i64 %2904, 1, !dbg !736
  store i64 %2905, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %2870, align 4, !dbg !737
  br label %2969, !dbg !738

2906:                                             ; preds = %2889
  %2907 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %2894, label %2908, label %2910, !dbg !740

2908:                                             ; preds = %2906
  %2909 = add i64 %2907, 2, !dbg !741
  store i64 %2909, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %2870, align 4, !dbg !742
  br label %2969, !dbg !743

2910:                                             ; preds = %2906
  br i1 %2895, label %2911, label %2913, !dbg !744

2911:                                             ; preds = %2910
  %2912 = add i64 %2907, 3, !dbg !745
  store i64 %2912, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %2870, align 4, !dbg !746
  br label %2969, !dbg !747

2913:                                             ; preds = %2910
  br i1 %2896, label %2914, label %2916, !dbg !748

2914:                                             ; preds = %2913
  %2915 = add i64 %2907, 4, !dbg !749
  store i64 %2915, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %2870, align 4, !dbg !750
  br label %2969, !dbg !751

2916:                                             ; preds = %2913
  %2917 = add i64 %2907, 8, !dbg !752
  store i64 %2917, i64* %2525, align 4, !dbg !752
  %2918 = and i16 %2863, 32, !dbg !753
  %2919 = icmp ne i16 %2918, 0, !dbg !753
  br i1 %2919, label %2920, label %2923, !dbg !754

2920:                                             ; preds = %2916
  %2921 = and i16 %2863, -33, !dbg !755
  %2922 = or i16 %2921, 8, !dbg !756
  store i16 %2922, i16* %2862, align 2, !dbg !757
  store i32 7, i32* %2870, align 4, !dbg !758
  br label %2969, !dbg !759

2923:                                             ; preds = %2916
  store i32 6, i32* %2870, align 4, !dbg !760
  br label %2969, !dbg !761

2924:                                             ; preds = %2879
  br i1 %2869, label %2925, label %2930, !dbg !762

2925:                                             ; preds = %2924
  %2926 = load i32, i32* %2526, align 4, !dbg !763
  %2927 = add i32 %2926, 1, !dbg !763
  store i32 %2927, i32* %2526, align 4, !dbg !763
  %2928 = load i64, i64* %2525, align 4, !dbg !764
  %2929 = add i64 %2928, 8, !dbg !764
  store i64 %2929, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %2870, align 4, !dbg !765
  br label %2969, !dbg !766

2930:                                             ; preds = %2924
  %2931 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 0, i32 4, !dbg !767
  %2932 = load i32, i32* %2931, align 4, !dbg !768
  %2933 = alloca i32, align 8, !dbg !769
  store i32 %2932, i32* %2933, align 4, !dbg !770
  %2934 = alloca i32, align 8, !dbg !771
  %2935 = add i32 %2932, %2932, !dbg !772
  %2936 = add i32 %2935, 12, !dbg !773
  %2937 = and i16 %2863, 2, !dbg !774
  %2938 = icmp ne i16 %2937, 0, !dbg !775
  %2939 = zext i1 %2938 to i32, !dbg !776
  %2940 = add i32 %2936, %2939, !dbg !777
  store i32 %2940, i32* %2934, align 4, !dbg !778
  %2941 = and i16 %2863, 16384, !dbg !779
  %2942 = icmp ne i16 %2941, 0, !dbg !780
  br i1 %2942, label %2943, label %2959, !dbg !781

2943:                                             ; preds = %2930
  %2944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 0, i32 0, !dbg !782
  %2945 = bitcast %union.MemValue* %2944 to i32*, !dbg !783
  %2946 = load i32, i32* %2945, align 4, !dbg !784
  %2947 = add i32 %2946, %2946, !dbg !785
  %2948 = add i32 %2940, %2947, !dbg !786
  store i32 %2948, i32* %2934, align 4, !dbg !786
  %2949 = load i64, i64* %2525, align 4, !dbg !787
  %2950 = icmp ne i64 %2949, 0, !dbg !787
  br i1 %2950, label %2955, label %2951, !dbg !788

2951:                                             ; preds = %2943
  %2952 = zext i32 %2946 to i64, !dbg !789
  %2953 = load i64, i64* %2527, align 4, !dbg !790
  %2954 = add i64 %2953, %2952, !dbg !790
  store i64 %2954, i64* %2527, align 4, !dbg !790
  br label %2959, !dbg !791

2955:                                             ; preds = %2943
  %2956 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2861), !dbg !792
  %2957 = load i32, i32* %2933, align 4, !dbg !793
  %2958 = add i32 %2957, %2946, !dbg !793
  store i32 %2958, i32* %2933, align 4, !dbg !793
  br label %2959, !dbg !794

2959:                                             ; preds = %2951, %2955, %2930
  %2960 = load i32, i32* %2933, align 4, !dbg !795
  %2961 = zext i32 %2960 to i64, !dbg !796
  %2962 = load i64, i64* %2525, align 4, !dbg !797
  %2963 = add i64 %2962, %2961, !dbg !797
  store i64 %2963, i64* %2525, align 4, !dbg !797
  %2964 = load i32, i32* %2934, align 4, !dbg !798
  %2965 = zext i32 %2964 to i64, !dbg !799
  %2966 = call i32 @sqlite3VarintLen(i64 %2965), !dbg !800
  %2967 = load i32, i32* %2526, align 4, !dbg !801
  %2968 = add i32 %2967, %2966, !dbg !801
  store i32 %2968, i32* %2526, align 4, !dbg !801
  store i32 %2964, i32* %2870, align 4, !dbg !802
  br label %2969, !dbg !803

2969:                                             ; preds = %2908, %2911, %2914, %2920, %2923, %2903, %2900, %2959, %2925, %2876
  %2970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2861, i32 -1, !dbg !804
  %2971 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 0, i32 1, !dbg !695
  %2972 = load i16, i16* %2971, align 2, !dbg !696
  %2973 = and i16 %2972, 1, !dbg !697
  %2974 = icmp ne i16 %2973, 0, !dbg !697
  %2975 = and i16 %2972, 36, !dbg !698
  %2976 = icmp ne i16 %2975, 0, !dbg !698
  %2977 = and i16 %2972, 8, !dbg !699
  %2978 = icmp ne i16 %2977, 0, !dbg !699
  %2979 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 0, i32 8, !dbg !700
  br i1 %2974, label %2980, label %2988, !dbg !701

2980:                                             ; preds = %2969
  %2981 = and i16 %2972, 16384, !dbg !702
  %2982 = icmp ne i16 %2981, 0, !dbg !702
  br i1 %2982, label %2983, label %2984, !dbg !703

2983:                                             ; preds = %2980
  store i32 10, i32* %2979, align 4, !dbg !704
  br label %2985, !dbg !705

2984:                                             ; preds = %2980
  store i32 0, i32* %2979, align 4, !dbg !706
  br label %2985, !dbg !707

2985:                                             ; preds = %2984, %2983
  %2986 = load i32, i32* %2526, align 4, !dbg !708
  %2987 = add i32 %2986, 1, !dbg !708
  store i32 %2987, i32* %2526, align 4, !dbg !708
  br label %3078, !dbg !709

2988:                                             ; preds = %2969
  br i1 %2976, label %2989, label %3033, !dbg !710

2989:                                             ; preds = %2988
  %2990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 0, i32 0, !dbg !711
  %2991 = bitcast %union.MemValue* %2990 to i64*, !dbg !712
  %2992 = load i64, i64* %2991, align 4, !dbg !713
  %2993 = alloca i64, align 8, !dbg !714
  %2994 = icmp slt i64 %2992, 0, !dbg !715
  br i1 %2994, label %2995, label %2997, !dbg !716

2995:                                             ; preds = %2989
  %2996 = xor i64 %2992, -1, !dbg !717
  store i64 %2996, i64* %2993, align 4, !dbg !718
  br label %2998, !dbg !719

2997:                                             ; preds = %2989
  store i64 %2992, i64* %2993, align 4, !dbg !720
  br label %2998, !dbg !721

2998:                                             ; preds = %2997, %2995
  %2999 = load i32, i32* %2526, align 4, !dbg !722
  %3000 = add i32 %2999, 1, !dbg !722
  store i32 %3000, i32* %2526, align 4, !dbg !722
  %3001 = load i64, i64* %2993, align 4, !dbg !723
  %3002 = icmp slt i64 %3001, 127, !dbg !724
  %3003 = icmp slt i64 %3001, 32767, !dbg !725
  %3004 = icmp slt i64 %3001, 8388607, !dbg !726
  %3005 = icmp slt i64 %3001, 2147483647, !dbg !727
  br i1 %3002, label %3006, label %3015, !dbg !728

3006:                                             ; preds = %2998
  %3007 = and i64 %2992, 1, !dbg !729
  %3008 = icmp eq i64 %3007, %2992, !dbg !730
  br i1 %3008, label %3009, label %3012, !dbg !731

3009:                                             ; preds = %3006
  %3010 = trunc i64 %3001 to i32, !dbg !732
  %3011 = add i32 %3010, 8, !dbg !733
  store i32 %3011, i32* %2979, align 4, !dbg !734
  br label %3078, !dbg !735

3012:                                             ; preds = %3006
  %3013 = load i64, i64* %2525, align 4, !dbg !736
  %3014 = add i64 %3013, 1, !dbg !736
  store i64 %3014, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %2979, align 4, !dbg !737
  br label %3078, !dbg !738

3015:                                             ; preds = %2998
  %3016 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %3003, label %3017, label %3019, !dbg !740

3017:                                             ; preds = %3015
  %3018 = add i64 %3016, 2, !dbg !741
  store i64 %3018, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %2979, align 4, !dbg !742
  br label %3078, !dbg !743

3019:                                             ; preds = %3015
  br i1 %3004, label %3020, label %3022, !dbg !744

3020:                                             ; preds = %3019
  %3021 = add i64 %3016, 3, !dbg !745
  store i64 %3021, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %2979, align 4, !dbg !746
  br label %3078, !dbg !747

3022:                                             ; preds = %3019
  br i1 %3005, label %3023, label %3025, !dbg !748

3023:                                             ; preds = %3022
  %3024 = add i64 %3016, 4, !dbg !749
  store i64 %3024, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %2979, align 4, !dbg !750
  br label %3078, !dbg !751

3025:                                             ; preds = %3022
  %3026 = add i64 %3016, 8, !dbg !752
  store i64 %3026, i64* %2525, align 4, !dbg !752
  %3027 = and i16 %2972, 32, !dbg !753
  %3028 = icmp ne i16 %3027, 0, !dbg !753
  br i1 %3028, label %3029, label %3032, !dbg !754

3029:                                             ; preds = %3025
  %3030 = and i16 %2972, -33, !dbg !755
  %3031 = or i16 %3030, 8, !dbg !756
  store i16 %3031, i16* %2971, align 2, !dbg !757
  store i32 7, i32* %2979, align 4, !dbg !758
  br label %3078, !dbg !759

3032:                                             ; preds = %3025
  store i32 6, i32* %2979, align 4, !dbg !760
  br label %3078, !dbg !761

3033:                                             ; preds = %2988
  br i1 %2978, label %3034, label %3039, !dbg !762

3034:                                             ; preds = %3033
  %3035 = load i32, i32* %2526, align 4, !dbg !763
  %3036 = add i32 %3035, 1, !dbg !763
  store i32 %3036, i32* %2526, align 4, !dbg !763
  %3037 = load i64, i64* %2525, align 4, !dbg !764
  %3038 = add i64 %3037, 8, !dbg !764
  store i64 %3038, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %2979, align 4, !dbg !765
  br label %3078, !dbg !766

3039:                                             ; preds = %3033
  %3040 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 0, i32 4, !dbg !767
  %3041 = load i32, i32* %3040, align 4, !dbg !768
  %3042 = alloca i32, align 8, !dbg !769
  store i32 %3041, i32* %3042, align 4, !dbg !770
  %3043 = alloca i32, align 8, !dbg !771
  %3044 = add i32 %3041, %3041, !dbg !772
  %3045 = add i32 %3044, 12, !dbg !773
  %3046 = and i16 %2972, 2, !dbg !774
  %3047 = icmp ne i16 %3046, 0, !dbg !775
  %3048 = zext i1 %3047 to i32, !dbg !776
  %3049 = add i32 %3045, %3048, !dbg !777
  store i32 %3049, i32* %3043, align 4, !dbg !778
  %3050 = and i16 %2972, 16384, !dbg !779
  %3051 = icmp ne i16 %3050, 0, !dbg !780
  br i1 %3051, label %3052, label %3068, !dbg !781

3052:                                             ; preds = %3039
  %3053 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 0, i32 0, !dbg !782
  %3054 = bitcast %union.MemValue* %3053 to i32*, !dbg !783
  %3055 = load i32, i32* %3054, align 4, !dbg !784
  %3056 = add i32 %3055, %3055, !dbg !785
  %3057 = add i32 %3049, %3056, !dbg !786
  store i32 %3057, i32* %3043, align 4, !dbg !786
  %3058 = load i64, i64* %2525, align 4, !dbg !787
  %3059 = icmp ne i64 %3058, 0, !dbg !787
  br i1 %3059, label %3064, label %3060, !dbg !788

3060:                                             ; preds = %3052
  %3061 = zext i32 %3055 to i64, !dbg !789
  %3062 = load i64, i64* %2527, align 4, !dbg !790
  %3063 = add i64 %3062, %3061, !dbg !790
  store i64 %3063, i64* %2527, align 4, !dbg !790
  br label %3068, !dbg !791

3064:                                             ; preds = %3052
  %3065 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2970), !dbg !792
  %3066 = load i32, i32* %3042, align 4, !dbg !793
  %3067 = add i32 %3066, %3055, !dbg !793
  store i32 %3067, i32* %3042, align 4, !dbg !793
  br label %3068, !dbg !794

3068:                                             ; preds = %3060, %3064, %3039
  %3069 = load i32, i32* %3042, align 4, !dbg !795
  %3070 = zext i32 %3069 to i64, !dbg !796
  %3071 = load i64, i64* %2525, align 4, !dbg !797
  %3072 = add i64 %3071, %3070, !dbg !797
  store i64 %3072, i64* %2525, align 4, !dbg !797
  %3073 = load i32, i32* %3043, align 4, !dbg !798
  %3074 = zext i32 %3073 to i64, !dbg !799
  %3075 = call i32 @sqlite3VarintLen(i64 %3074), !dbg !800
  %3076 = load i32, i32* %2526, align 4, !dbg !801
  %3077 = add i32 %3076, %3075, !dbg !801
  store i32 %3077, i32* %2526, align 4, !dbg !801
  store i32 %3073, i32* %2979, align 4, !dbg !802
  br label %3078, !dbg !803

3078:                                             ; preds = %3017, %3020, %3023, %3029, %3032, %3012, %3009, %3068, %3034, %2985
  %3079 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2970, i32 -1, !dbg !804
  %3080 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 0, i32 1, !dbg !695
  %3081 = load i16, i16* %3080, align 2, !dbg !696
  %3082 = and i16 %3081, 1, !dbg !697
  %3083 = icmp ne i16 %3082, 0, !dbg !697
  %3084 = and i16 %3081, 36, !dbg !698
  %3085 = icmp ne i16 %3084, 0, !dbg !698
  %3086 = and i16 %3081, 8, !dbg !699
  %3087 = icmp ne i16 %3086, 0, !dbg !699
  %3088 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 0, i32 8, !dbg !700
  br i1 %3083, label %3089, label %3097, !dbg !701

3089:                                             ; preds = %3078
  %3090 = and i16 %3081, 16384, !dbg !702
  %3091 = icmp ne i16 %3090, 0, !dbg !702
  br i1 %3091, label %3092, label %3093, !dbg !703

3092:                                             ; preds = %3089
  store i32 10, i32* %3088, align 4, !dbg !704
  br label %3094, !dbg !705

3093:                                             ; preds = %3089
  store i32 0, i32* %3088, align 4, !dbg !706
  br label %3094, !dbg !707

3094:                                             ; preds = %3093, %3092
  %3095 = load i32, i32* %2526, align 4, !dbg !708
  %3096 = add i32 %3095, 1, !dbg !708
  store i32 %3096, i32* %2526, align 4, !dbg !708
  br label %3187, !dbg !709

3097:                                             ; preds = %3078
  br i1 %3085, label %3098, label %3142, !dbg !710

3098:                                             ; preds = %3097
  %3099 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 0, i32 0, !dbg !711
  %3100 = bitcast %union.MemValue* %3099 to i64*, !dbg !712
  %3101 = load i64, i64* %3100, align 4, !dbg !713
  %3102 = alloca i64, align 8, !dbg !714
  %3103 = icmp slt i64 %3101, 0, !dbg !715
  br i1 %3103, label %3104, label %3106, !dbg !716

3104:                                             ; preds = %3098
  %3105 = xor i64 %3101, -1, !dbg !717
  store i64 %3105, i64* %3102, align 4, !dbg !718
  br label %3107, !dbg !719

3106:                                             ; preds = %3098
  store i64 %3101, i64* %3102, align 4, !dbg !720
  br label %3107, !dbg !721

3107:                                             ; preds = %3106, %3104
  %3108 = load i32, i32* %2526, align 4, !dbg !722
  %3109 = add i32 %3108, 1, !dbg !722
  store i32 %3109, i32* %2526, align 4, !dbg !722
  %3110 = load i64, i64* %3102, align 4, !dbg !723
  %3111 = icmp slt i64 %3110, 127, !dbg !724
  %3112 = icmp slt i64 %3110, 32767, !dbg !725
  %3113 = icmp slt i64 %3110, 8388607, !dbg !726
  %3114 = icmp slt i64 %3110, 2147483647, !dbg !727
  br i1 %3111, label %3115, label %3124, !dbg !728

3115:                                             ; preds = %3107
  %3116 = and i64 %3101, 1, !dbg !729
  %3117 = icmp eq i64 %3116, %3101, !dbg !730
  br i1 %3117, label %3118, label %3121, !dbg !731

3118:                                             ; preds = %3115
  %3119 = trunc i64 %3110 to i32, !dbg !732
  %3120 = add i32 %3119, 8, !dbg !733
  store i32 %3120, i32* %3088, align 4, !dbg !734
  br label %3187, !dbg !735

3121:                                             ; preds = %3115
  %3122 = load i64, i64* %2525, align 4, !dbg !736
  %3123 = add i64 %3122, 1, !dbg !736
  store i64 %3123, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %3088, align 4, !dbg !737
  br label %3187, !dbg !738

3124:                                             ; preds = %3107
  %3125 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %3112, label %3126, label %3128, !dbg !740

3126:                                             ; preds = %3124
  %3127 = add i64 %3125, 2, !dbg !741
  store i64 %3127, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %3088, align 4, !dbg !742
  br label %3187, !dbg !743

3128:                                             ; preds = %3124
  br i1 %3113, label %3129, label %3131, !dbg !744

3129:                                             ; preds = %3128
  %3130 = add i64 %3125, 3, !dbg !745
  store i64 %3130, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %3088, align 4, !dbg !746
  br label %3187, !dbg !747

3131:                                             ; preds = %3128
  br i1 %3114, label %3132, label %3134, !dbg !748

3132:                                             ; preds = %3131
  %3133 = add i64 %3125, 4, !dbg !749
  store i64 %3133, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %3088, align 4, !dbg !750
  br label %3187, !dbg !751

3134:                                             ; preds = %3131
  %3135 = add i64 %3125, 8, !dbg !752
  store i64 %3135, i64* %2525, align 4, !dbg !752
  %3136 = and i16 %3081, 32, !dbg !753
  %3137 = icmp ne i16 %3136, 0, !dbg !753
  br i1 %3137, label %3138, label %3141, !dbg !754

3138:                                             ; preds = %3134
  %3139 = and i16 %3081, -33, !dbg !755
  %3140 = or i16 %3139, 8, !dbg !756
  store i16 %3140, i16* %3080, align 2, !dbg !757
  store i32 7, i32* %3088, align 4, !dbg !758
  br label %3187, !dbg !759

3141:                                             ; preds = %3134
  store i32 6, i32* %3088, align 4, !dbg !760
  br label %3187, !dbg !761

3142:                                             ; preds = %3097
  br i1 %3087, label %3143, label %3148, !dbg !762

3143:                                             ; preds = %3142
  %3144 = load i32, i32* %2526, align 4, !dbg !763
  %3145 = add i32 %3144, 1, !dbg !763
  store i32 %3145, i32* %2526, align 4, !dbg !763
  %3146 = load i64, i64* %2525, align 4, !dbg !764
  %3147 = add i64 %3146, 8, !dbg !764
  store i64 %3147, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %3088, align 4, !dbg !765
  br label %3187, !dbg !766

3148:                                             ; preds = %3142
  %3149 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 0, i32 4, !dbg !767
  %3150 = load i32, i32* %3149, align 4, !dbg !768
  %3151 = alloca i32, align 8, !dbg !769
  store i32 %3150, i32* %3151, align 4, !dbg !770
  %3152 = alloca i32, align 8, !dbg !771
  %3153 = add i32 %3150, %3150, !dbg !772
  %3154 = add i32 %3153, 12, !dbg !773
  %3155 = and i16 %3081, 2, !dbg !774
  %3156 = icmp ne i16 %3155, 0, !dbg !775
  %3157 = zext i1 %3156 to i32, !dbg !776
  %3158 = add i32 %3154, %3157, !dbg !777
  store i32 %3158, i32* %3152, align 4, !dbg !778
  %3159 = and i16 %3081, 16384, !dbg !779
  %3160 = icmp ne i16 %3159, 0, !dbg !780
  br i1 %3160, label %3161, label %3177, !dbg !781

3161:                                             ; preds = %3148
  %3162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 0, i32 0, !dbg !782
  %3163 = bitcast %union.MemValue* %3162 to i32*, !dbg !783
  %3164 = load i32, i32* %3163, align 4, !dbg !784
  %3165 = add i32 %3164, %3164, !dbg !785
  %3166 = add i32 %3158, %3165, !dbg !786
  store i32 %3166, i32* %3152, align 4, !dbg !786
  %3167 = load i64, i64* %2525, align 4, !dbg !787
  %3168 = icmp ne i64 %3167, 0, !dbg !787
  br i1 %3168, label %3173, label %3169, !dbg !788

3169:                                             ; preds = %3161
  %3170 = zext i32 %3164 to i64, !dbg !789
  %3171 = load i64, i64* %2527, align 4, !dbg !790
  %3172 = add i64 %3171, %3170, !dbg !790
  store i64 %3172, i64* %2527, align 4, !dbg !790
  br label %3177, !dbg !791

3173:                                             ; preds = %3161
  %3174 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3079), !dbg !792
  %3175 = load i32, i32* %3151, align 4, !dbg !793
  %3176 = add i32 %3175, %3164, !dbg !793
  store i32 %3176, i32* %3151, align 4, !dbg !793
  br label %3177, !dbg !794

3177:                                             ; preds = %3169, %3173, %3148
  %3178 = load i32, i32* %3151, align 4, !dbg !795
  %3179 = zext i32 %3178 to i64, !dbg !796
  %3180 = load i64, i64* %2525, align 4, !dbg !797
  %3181 = add i64 %3180, %3179, !dbg !797
  store i64 %3181, i64* %2525, align 4, !dbg !797
  %3182 = load i32, i32* %3152, align 4, !dbg !798
  %3183 = zext i32 %3182 to i64, !dbg !799
  %3184 = call i32 @sqlite3VarintLen(i64 %3183), !dbg !800
  %3185 = load i32, i32* %2526, align 4, !dbg !801
  %3186 = add i32 %3185, %3184, !dbg !801
  store i32 %3186, i32* %2526, align 4, !dbg !801
  store i32 %3182, i32* %3088, align 4, !dbg !802
  br label %3187, !dbg !803

3187:                                             ; preds = %3126, %3129, %3132, %3138, %3141, %3121, %3118, %3177, %3143, %3094
  %3188 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3079, i32 -1, !dbg !804
  %3189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3188, i32 0, i32 1, !dbg !695
  %3190 = load i16, i16* %3189, align 2, !dbg !696
  %3191 = and i16 %3190, 1, !dbg !697
  %3192 = icmp ne i16 %3191, 0, !dbg !697
  %3193 = and i16 %3190, 36, !dbg !698
  %3194 = icmp ne i16 %3193, 0, !dbg !698
  %3195 = and i16 %3190, 8, !dbg !699
  %3196 = icmp ne i16 %3195, 0, !dbg !699
  %3197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3188, i32 0, i32 8, !dbg !700
  br i1 %3192, label %3198, label %3206, !dbg !701

3198:                                             ; preds = %3187
  %3199 = and i16 %3190, 16384, !dbg !702
  %3200 = icmp ne i16 %3199, 0, !dbg !702
  br i1 %3200, label %3201, label %3202, !dbg !703

3201:                                             ; preds = %3198
  store i32 10, i32* %3197, align 4, !dbg !704
  br label %3203, !dbg !705

3202:                                             ; preds = %3198
  store i32 0, i32* %3197, align 4, !dbg !706
  br label %3203, !dbg !707

3203:                                             ; preds = %3202, %3201
  %3204 = load i32, i32* %2526, align 4, !dbg !708
  %3205 = add i32 %3204, 1, !dbg !708
  store i32 %3205, i32* %2526, align 4, !dbg !708
  br label %3296, !dbg !709

3206:                                             ; preds = %3187
  br i1 %3194, label %3207, label %3251, !dbg !710

3207:                                             ; preds = %3206
  %3208 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3188, i32 0, i32 0, !dbg !711
  %3209 = bitcast %union.MemValue* %3208 to i64*, !dbg !712
  %3210 = load i64, i64* %3209, align 4, !dbg !713
  %3211 = alloca i64, align 8, !dbg !714
  %3212 = icmp slt i64 %3210, 0, !dbg !715
  br i1 %3212, label %3213, label %3215, !dbg !716

3213:                                             ; preds = %3207
  %3214 = xor i64 %3210, -1, !dbg !717
  store i64 %3214, i64* %3211, align 4, !dbg !718
  br label %3216, !dbg !719

3215:                                             ; preds = %3207
  store i64 %3210, i64* %3211, align 4, !dbg !720
  br label %3216, !dbg !721

3216:                                             ; preds = %3215, %3213
  %3217 = load i32, i32* %2526, align 4, !dbg !722
  %3218 = add i32 %3217, 1, !dbg !722
  store i32 %3218, i32* %2526, align 4, !dbg !722
  %3219 = load i64, i64* %3211, align 4, !dbg !723
  %3220 = icmp slt i64 %3219, 127, !dbg !724
  %3221 = icmp slt i64 %3219, 32767, !dbg !725
  %3222 = icmp slt i64 %3219, 8388607, !dbg !726
  %3223 = icmp slt i64 %3219, 2147483647, !dbg !727
  br i1 %3220, label %3224, label %3233, !dbg !728

3224:                                             ; preds = %3216
  %3225 = and i64 %3210, 1, !dbg !729
  %3226 = icmp eq i64 %3225, %3210, !dbg !730
  br i1 %3226, label %3227, label %3230, !dbg !731

3227:                                             ; preds = %3224
  %3228 = trunc i64 %3219 to i32, !dbg !732
  %3229 = add i32 %3228, 8, !dbg !733
  store i32 %3229, i32* %3197, align 4, !dbg !734
  br label %3296, !dbg !735

3230:                                             ; preds = %3224
  %3231 = load i64, i64* %2525, align 4, !dbg !736
  %3232 = add i64 %3231, 1, !dbg !736
  store i64 %3232, i64* %2525, align 4, !dbg !736
  store i32 1, i32* %3197, align 4, !dbg !737
  br label %3296, !dbg !738

3233:                                             ; preds = %3216
  %3234 = load i64, i64* %2525, align 4, !dbg !739
  br i1 %3221, label %3235, label %3237, !dbg !740

3235:                                             ; preds = %3233
  %3236 = add i64 %3234, 2, !dbg !741
  store i64 %3236, i64* %2525, align 4, !dbg !741
  store i32 2, i32* %3197, align 4, !dbg !742
  br label %3296, !dbg !743

3237:                                             ; preds = %3233
  br i1 %3222, label %3238, label %3240, !dbg !744

3238:                                             ; preds = %3237
  %3239 = add i64 %3234, 3, !dbg !745
  store i64 %3239, i64* %2525, align 4, !dbg !745
  store i32 3, i32* %3197, align 4, !dbg !746
  br label %3296, !dbg !747

3240:                                             ; preds = %3237
  br i1 %3223, label %3241, label %3243, !dbg !748

3241:                                             ; preds = %3240
  %3242 = add i64 %3234, 4, !dbg !749
  store i64 %3242, i64* %2525, align 4, !dbg !749
  store i32 4, i32* %3197, align 4, !dbg !750
  br label %3296, !dbg !751

3243:                                             ; preds = %3240
  %3244 = add i64 %3234, 8, !dbg !752
  store i64 %3244, i64* %2525, align 4, !dbg !752
  %3245 = and i16 %3190, 32, !dbg !753
  %3246 = icmp ne i16 %3245, 0, !dbg !753
  br i1 %3246, label %3247, label %3250, !dbg !754

3247:                                             ; preds = %3243
  %3248 = and i16 %3190, -33, !dbg !755
  %3249 = or i16 %3248, 8, !dbg !756
  store i16 %3249, i16* %3189, align 2, !dbg !757
  store i32 7, i32* %3197, align 4, !dbg !758
  br label %3296, !dbg !759

3250:                                             ; preds = %3243
  store i32 6, i32* %3197, align 4, !dbg !760
  br label %3296, !dbg !761

3251:                                             ; preds = %3206
  br i1 %3196, label %3252, label %3257, !dbg !762

3252:                                             ; preds = %3251
  %3253 = load i32, i32* %2526, align 4, !dbg !763
  %3254 = add i32 %3253, 1, !dbg !763
  store i32 %3254, i32* %2526, align 4, !dbg !763
  %3255 = load i64, i64* %2525, align 4, !dbg !764
  %3256 = add i64 %3255, 8, !dbg !764
  store i64 %3256, i64* %2525, align 4, !dbg !764
  store i32 7, i32* %3197, align 4, !dbg !765
  br label %3296, !dbg !766

3257:                                             ; preds = %3251
  %3258 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3188, i32 0, i32 4, !dbg !767
  %3259 = load i32, i32* %3258, align 4, !dbg !768
  %3260 = alloca i32, align 8, !dbg !769
  store i32 %3259, i32* %3260, align 4, !dbg !770
  %3261 = alloca i32, align 8, !dbg !771
  %3262 = add i32 %3259, %3259, !dbg !772
  %3263 = add i32 %3262, 12, !dbg !773
  %3264 = and i16 %3190, 2, !dbg !774
  %3265 = icmp ne i16 %3264, 0, !dbg !775
  %3266 = zext i1 %3265 to i32, !dbg !776
  %3267 = add i32 %3263, %3266, !dbg !777
  store i32 %3267, i32* %3261, align 4, !dbg !778
  %3268 = and i16 %3190, 16384, !dbg !779
  %3269 = icmp ne i16 %3268, 0, !dbg !780
  br i1 %3269, label %3270, label %3286, !dbg !781

3270:                                             ; preds = %3257
  %3271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3188, i32 0, i32 0, !dbg !782
  %3272 = bitcast %union.MemValue* %3271 to i32*, !dbg !783
  %3273 = load i32, i32* %3272, align 4, !dbg !784
  %3274 = add i32 %3273, %3273, !dbg !785
  %3275 = add i32 %3267, %3274, !dbg !786
  store i32 %3275, i32* %3261, align 4, !dbg !786
  %3276 = load i64, i64* %2525, align 4, !dbg !787
  %3277 = icmp ne i64 %3276, 0, !dbg !787
  br i1 %3277, label %3282, label %3278, !dbg !788

3278:                                             ; preds = %3270
  %3279 = zext i32 %3273 to i64, !dbg !789
  %3280 = load i64, i64* %2527, align 4, !dbg !790
  %3281 = add i64 %3280, %3279, !dbg !790
  store i64 %3281, i64* %2527, align 4, !dbg !790
  br label %3286, !dbg !791

3282:                                             ; preds = %3270
  %3283 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3188), !dbg !792
  %3284 = load i32, i32* %3260, align 4, !dbg !793
  %3285 = add i32 %3284, %3273, !dbg !793
  store i32 %3285, i32* %3260, align 4, !dbg !793
  br label %3286, !dbg !794

3286:                                             ; preds = %3278, %3282, %3257
  %3287 = load i32, i32* %3260, align 4, !dbg !795
  %3288 = zext i32 %3287 to i64, !dbg !796
  %3289 = load i64, i64* %2525, align 4, !dbg !797
  %3290 = add i64 %3289, %3288, !dbg !797
  store i64 %3290, i64* %2525, align 4, !dbg !797
  %3291 = load i32, i32* %3261, align 4, !dbg !798
  %3292 = zext i32 %3291 to i64, !dbg !799
  %3293 = call i32 @sqlite3VarintLen(i64 %3292), !dbg !800
  %3294 = load i32, i32* %2526, align 4, !dbg !801
  %3295 = add i32 %3294, %3293, !dbg !801
  store i32 %3295, i32* %2526, align 4, !dbg !801
  store i32 %3291, i32* %3197, align 4, !dbg !802
  br label %3296, !dbg !803

3296:                                             ; preds = %3235, %3238, %3241, %3247, %3250, %3230, %3227, %3286, %3252, %3203
  %3297 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 5, !dbg !805
  %3298 = load i32, i32* %2526, align 4, !dbg !806
  %3299 = zext i32 %3298 to i64, !dbg !807
  %3300 = icmp slt i32 %3298, 126, !dbg !808
  br i1 %3300, label %3301, label %3303, !dbg !809

3301:                                             ; preds = %3296
  %3302 = add i32 %3298, 1, !dbg !810
  store i32 %3302, i32* %2526, align 4, !dbg !810
  br label %3312, !dbg !811

3303:                                             ; preds = %3296
  %3304 = call i32 @sqlite3VarintLen(i64 %3299), !dbg !812
  %3305 = load i32, i32* %2526, align 4, !dbg !813
  %3306 = add i32 %3305, %3304, !dbg !813
  store i32 %3306, i32* %2526, align 4, !dbg !813
  %3307 = call i32 @sqlite3VarintLen(i64 %3299), !dbg !814
  %3308 = icmp slt i32 %3304, %3307, !dbg !815
  br i1 %3308, label %3309, label %3312, !dbg !816

3309:                                             ; preds = %3303
  %3310 = load i32, i32* %2526, align 4, !dbg !817
  %3311 = add i32 %3310, 1, !dbg !817
  store i32 %3311, i32* %2526, align 4, !dbg !817
  br label %3312, !dbg !818

3312:                                             ; preds = %3309, %3303, %3301
  %3313 = load i32, i32* %2526, align 4, !dbg !819
  %3314 = zext i32 %3313 to i64, !dbg !819
  %3315 = load i64, i64* %2525, align 4, !dbg !820
  %3316 = add i64 %3314, %3315, !dbg !820
  %3317 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 7, !dbg !821
  %3318 = load i32, i32* %3317, align 4, !dbg !822
  %3319 = zext i32 %3318 to i64, !dbg !823
  %3320 = load i64, i64* %2527, align 4, !dbg !824
  %3321 = add i64 %3316, %3320, !dbg !825
  %3322 = icmp sle i64 %3321, %3319, !dbg !826
  br i1 %3322, label %3323, label %3326, !dbg !827

3323:                                             ; preds = %3312
  %3324 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 6, !dbg !828
  %3325 = load i8*, i8** %3324, align 8, !dbg !829
  store i8* %3325, i8** %3297, align 8, !dbg !830
  br label %3329, !dbg !831

3326:                                             ; preds = %3312
  %3327 = trunc i64 %3316 to i32, !dbg !832
  %3328 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %2534, i32 %3327), !dbg !833
  br label %3329, !dbg !834

3329:                                             ; preds = %3326, %3323
  %3330 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 4, !dbg !835
  %3331 = trunc i64 %3316 to i32, !dbg !836
  store i32 %3331, i32* %3330, align 4, !dbg !837
  %3332 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 1, !dbg !838
  store i16 16, i16* %3332, align 2, !dbg !839
  %3333 = load i64, i64* %2527, align 4, !dbg !840
  %3334 = icmp ne i64 %3333, 0, !dbg !841
  br i1 %3334, label %3335, label %3341, !dbg !842

3335:                                             ; preds = %3329
  %3336 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2534, i32 0, i32 0, i32 0, !dbg !843
  %3337 = bitcast double* %3336 to i32*, !dbg !844
  %3338 = trunc i64 %3333 to i32, !dbg !845
  store i32 %3338, i32* %3337, align 4, !dbg !846
  %3339 = load i16, i16* %3332, align 2, !dbg !847
  %3340 = or i16 %3339, 16384, !dbg !848
  store i16 %3340, i16* %3332, align 2, !dbg !849
  br label %3341, !dbg !850

3341:                                             ; preds = %3335, %3329
  %3342 = alloca i8*, align 8, !dbg !851
  %3343 = load i8*, i8** %3297, align 8, !dbg !852
  store i8* %3343, i8** %3342, align 8, !dbg !853
  %3344 = load i32, i32* %2526, align 4, !dbg !854
  %3345 = zext i32 %3344 to i64, !dbg !855
  %3346 = getelementptr i8, i8* %3343, i32 %3344, !dbg !856
  store i8* %3346, i8** %2528, align 8, !dbg !857
  %3347 = call i32 @sqlite3PutVarint(i8* %3343, i64 %3345), !dbg !858
  %3348 = getelementptr i8, i8* %3343, i32 %3347, !dbg !859
  store i8* %3348, i8** %3342, align 8, !dbg !860
  %3349 = load i8*, i8** %2528, align 8, !dbg !861
  %3350 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2532, i32 0, i32 8, !dbg !862
  %3351 = load i32, i32* %3350, align 4, !dbg !863
  %3352 = zext i32 %3351 to i64, !dbg !864
  %3353 = call i32 @sqlite3PutVarint(i8* %3348, i64 %3352), !dbg !865
  %3354 = getelementptr i8, i8* %3348, i32 %3353, !dbg !866
  store i8* %3354, i8** %3342, align 8, !dbg !867
  %3355 = call i32 @sqlite3VdbeSerialPut(i8* %3349, %struct.sqlite3_value* %2532, i32 %3351), !dbg !868
  %3356 = getelementptr i8, i8* %3349, i32 %3355, !dbg !869
  %3357 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2532, i32 1, !dbg !870
  %3358 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3357, i32 0, i32 8, !dbg !862
  %3359 = load i32, i32* %3358, align 4, !dbg !863
  %3360 = zext i32 %3359 to i64, !dbg !864
  %3361 = call i32 @sqlite3PutVarint(i8* %3354, i64 %3360), !dbg !865
  %3362 = getelementptr i8, i8* %3354, i32 %3361, !dbg !866
  store i8* %3362, i8** %3342, align 8, !dbg !867
  %3363 = call i32 @sqlite3VdbeSerialPut(i8* %3356, %struct.sqlite3_value* %3357, i32 %3359), !dbg !868
  %3364 = getelementptr i8, i8* %3356, i32 %3363, !dbg !869
  %3365 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3357, i32 1, !dbg !870
  %3366 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3365, i32 0, i32 8, !dbg !862
  %3367 = load i32, i32* %3366, align 4, !dbg !863
  %3368 = zext i32 %3367 to i64, !dbg !864
  %3369 = call i32 @sqlite3PutVarint(i8* %3362, i64 %3368), !dbg !865
  %3370 = getelementptr i8, i8* %3362, i32 %3369, !dbg !866
  store i8* %3370, i8** %3342, align 8, !dbg !867
  %3371 = call i32 @sqlite3VdbeSerialPut(i8* %3364, %struct.sqlite3_value* %3365, i32 %3367), !dbg !868
  %3372 = getelementptr i8, i8* %3364, i32 %3371, !dbg !869
  %3373 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3365, i32 1, !dbg !870
  %3374 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3373, i32 0, i32 8, !dbg !862
  %3375 = load i32, i32* %3374, align 4, !dbg !863
  %3376 = zext i32 %3375 to i64, !dbg !864
  %3377 = call i32 @sqlite3PutVarint(i8* %3370, i64 %3376), !dbg !865
  %3378 = getelementptr i8, i8* %3370, i32 %3377, !dbg !866
  store i8* %3378, i8** %3342, align 8, !dbg !867
  %3379 = call i32 @sqlite3VdbeSerialPut(i8* %3372, %struct.sqlite3_value* %3373, i32 %3375), !dbg !868
  %3380 = getelementptr i8, i8* %3372, i32 %3379, !dbg !869
  %3381 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3373, i32 1, !dbg !870
  %3382 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3381, i32 0, i32 8, !dbg !862
  %3383 = load i32, i32* %3382, align 4, !dbg !863
  %3384 = zext i32 %3383 to i64, !dbg !864
  %3385 = call i32 @sqlite3PutVarint(i8* %3378, i64 %3384), !dbg !865
  %3386 = getelementptr i8, i8* %3378, i32 %3385, !dbg !866
  store i8* %3386, i8** %3342, align 8, !dbg !867
  %3387 = call i32 @sqlite3VdbeSerialPut(i8* %3380, %struct.sqlite3_value* %3381, i32 %3383), !dbg !868
  %3388 = getelementptr i8, i8* %3380, i32 %3387, !dbg !869
  %3389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3381, i32 1, !dbg !870
  %3390 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3389, i32 0, i32 8, !dbg !862
  %3391 = load i32, i32* %3390, align 4, !dbg !863
  %3392 = zext i32 %3391 to i64, !dbg !864
  %3393 = call i32 @sqlite3PutVarint(i8* %3386, i64 %3392), !dbg !865
  %3394 = getelementptr i8, i8* %3386, i32 %3393, !dbg !866
  store i8* %3394, i8** %3342, align 8, !dbg !867
  %3395 = call i32 @sqlite3VdbeSerialPut(i8* %3388, %struct.sqlite3_value* %3389, i32 %3391), !dbg !868
  %3396 = getelementptr i8, i8* %3388, i32 %3395, !dbg !869
  %3397 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3389, i32 1, !dbg !870
  %3398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 8, !dbg !862
  %3399 = load i32, i32* %3398, align 4, !dbg !863
  %3400 = zext i32 %3399 to i64, !dbg !864
  %3401 = call i32 @sqlite3PutVarint(i8* %3394, i64 %3400), !dbg !865
  %3402 = getelementptr i8, i8* %3394, i32 %3401, !dbg !866
  store i8* %3402, i8** %3342, align 8, !dbg !867
  %3403 = call i32 @sqlite3VdbeSerialPut(i8* %3396, %struct.sqlite3_value* %3397, i32 %3399), !dbg !868
  call void @llvm.stackrestore(i8* %2524), !dbg !871
  br label %3404, !dbg !74

3404:                                             ; preds = %3341, %14
  %3405 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !872
  %3406 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3405, align 8, !dbg !875
  %3407 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !876
  %3408 = call i8* @llvm.stacksave(), !dbg !877
  %3409 = alloca i32, align 8, !dbg !878
  store i32 0, i32* %3409, align 4, !dbg !877
  %3410 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3407, i32 0, i32 1, !dbg !877
  %3411 = load i16, i16* %3410, align 2, !dbg !877
  %3412 = and i16 %3411, 16384, !dbg !877
  %3413 = icmp ne i16 %3412, 0, !dbg !877
  br i1 %3413, label %3414, label %3416, !dbg !877

3414:                                             ; preds = %3404
  %3415 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3407), !dbg !877
  store i32 %3415, i32* %3409, align 4, !dbg !877
  br label %3416, !dbg !878

3416:                                             ; preds = %3414, %3404
  call void @llvm.stackrestore(i8* %3408), !dbg !877
  %3417 = load i32, i32* %3409, align 4, !dbg !877
  %3418 = call i8* @llvm.stacksave(), !dbg !879
  %3419 = alloca %struct.BtreePayload, align 8, !dbg !880
  %3420 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3419, i32 0, i32 1, !dbg !881
  %3421 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3407, i32 0, i32 4, !dbg !882
  %3422 = load i32, i32* %3421, align 4, !dbg !883
  %3423 = zext i32 %3422 to i64, !dbg !884
  store i64 %3423, i64* %3420, align 4, !dbg !885
  %3424 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3419, i32 0, i32 0, !dbg !886
  %3425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3407, i32 0, i32 5, !dbg !887
  %3426 = load i8*, i8** %3425, align 8, !dbg !888
  store i8* %3426, i8** %3424, align 8, !dbg !889
  %3427 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3419, i32 0, i32 3, !dbg !890
  store %struct.sqlite3_value* %7, %struct.sqlite3_value** %3427, align 8, !dbg !891
  %3428 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3419, i32 0, i32 4, !dbg !892
  store i16 0, i16* %3428, align 2, !dbg !893
  %3429 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3406, i32 0, i32 12, i32 0, !dbg !894
  %3430 = load %struct.BtCursor*, %struct.BtCursor** %3429, align 8, !dbg !895
  %3431 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3406, i32 0, i32 10, !dbg !896
  %3432 = load i32, i32* %3431, align 4, !dbg !896
  %3433 = call i32 @sqlite3BtreeInsert(%struct.BtCursor* %3430, %struct.BtreePayload* %3419, i32 0, i32 %3432), !dbg !897
  %3434 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3406, i32 0, i32 9, !dbg !898
  store i32 0, i32* %3434, align 4, !dbg !899
  call void @llvm.stackrestore(i8* %3418), !dbg !900
  br label %3435, !dbg !74

3435:                                             ; preds = %3416, %14
  %3436 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !901
  %3437 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3436, align 8, !dbg !904
  %3438 = ptrtoint %struct.VdbeCursor* %3437 to i64, !dbg !905
  %3439 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3437, i32 0, i32 12, i32 0, !dbg !906
  %3440 = load %struct.BtCursor*, %struct.BtCursor** %3439, align 8, !dbg !907
  %3441 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %3440, i32 0), !dbg !908
  %3442 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3437, i32 0, i32 2, !dbg !909
  %3443 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3437, i32 0, i32 9, !dbg !910
  store i32 0, i32* %3443, align 4, !dbg !911
  %3444 = icmp eq i32 %3441, 0, !dbg !912
  br i1 %3444, label %3445, label %3446, !dbg !913

3445:                                             ; preds = %3435
  store i8 0, i8* %3442, align 1, !dbg !914
  br label %930, !dbg !915

3446:                                             ; preds = %3435
  store i8 1, i8* %3442, align 1, !dbg !916
  br label %3447, !dbg !917

3447:                                             ; preds = %836, %3446, %924, %14
  %3448 = call i8* @llvm.stacksave(), !dbg !167
  %3449 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %3450 = load i8, i8* %3449, align 1, !dbg !171
  %3451 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %3451, align 4, !dbg !173
  %3452 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %3453 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %3454 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3452, align 8, !dbg !176
  store %struct.VdbeCursor* %3454, %struct.VdbeCursor** %3453, align 8, !dbg !177
  %3455 = alloca i8*, align 8, !dbg !178
  %3456 = alloca i32, align 4, !dbg !179
  %3457 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3453, i32* %3451), !dbg !180
  %3458 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3453, align 8, !dbg !181
  %3459 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !182
  %3460 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 16, !dbg !183
  %3461 = load i16, i16* %3460, align 2, !dbg !184
  %3462 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 19, !dbg !185
  %3463 = load i32*, i32** %3462, align 8, !dbg !186
  %3464 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 0, !dbg !187
  %3465 = load i8, i8* %3464, align 1, !dbg !188
  %3466 = icmp ne i8 %3465, 3, !dbg !189
  %3467 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 2, !dbg !190
  %3468 = load i8, i8* %3467, align 1, !dbg !191
  %3469 = icmp ne i8 %3468, 0, !dbg !192
  %3470 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 14, !dbg !193
  %3471 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 21, !dbg !194
  %3472 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 22, !dbg !195
  %3473 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 20, !dbg !196
  %3474 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 17, !dbg !197
  %3475 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 9, !dbg !198
  %3476 = load i32, i32* %3475, align 4, !dbg !199
  %3477 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %3478 = load i32, i32* %3477, align 4, !dbg !201
  %3479 = icmp ne i32 %3476, %3478, !dbg !202
  br i1 %3479, label %3480, label %3522, !dbg !203

3480:                                             ; preds = %3447
  br i1 %3469, label %3502, label %3497, !dbg !204

3481:                                             ; preds = %3497, %3504
  %3482 = load i32, i32* %3477, align 4, !dbg !205
  store i32 %3482, i32* %3475, align 4, !dbg !206
  %3483 = load i8*, i8** %3473, align 8, !dbg !207
  %3484 = load i8, i8* %3483, align 1, !dbg !208
  %3485 = icmp sgt i8 %3484, -1, !dbg !211
  br i1 %3485, label %3486, label %3488, !dbg !212

3486:                                             ; preds = %3481
  %3487 = zext i8 %3484 to i32, !dbg !213
  store i32 %3487, i32* %3463, align 4, !dbg !214
  store i32 1, i32* %3470, align 4, !dbg !215
  br label %3491, !dbg !216

3488:                                             ; preds = %3481
  %3489 = call i8 @sqlite3GetVarint32(i8* %3483, i32* %3463), !dbg !217
  %3490 = zext i8 %3489 to i32, !dbg !218
  store i32 %3490, i32* %3470, align 4, !dbg !219
  br label %3491, !dbg !220

3491:                                             ; preds = %3488, %3486
  store i16 0, i16* %3474, align 2, !dbg !221
  %3492 = load i32, i32* %3472, align 4, !dbg !222
  %3493 = load i32, i32* %3463, align 4, !dbg !223
  %3494 = icmp ult i32 %3492, %3493, !dbg !224
  br i1 %3494, label %3496, label %3495, !dbg !225

3495:                                             ; preds = %3491
  store i8* %3483, i8** %3455, align 8, !dbg !226
  br label %3613, !dbg !227

3496:                                             ; preds = %3491
  store i8* null, i8** %3473, align 8, !dbg !228
  store i32 0, i32* %3472, align 4, !dbg !229
  br label %3522, !dbg !230

3497:                                             ; preds = %3480
  %3498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 12, i32 0, !dbg !231
  %3499 = load %struct.BtCursor*, %struct.BtCursor** %3498, align 8, !dbg !232
  %3500 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3499), !dbg !233
  store i32 %3500, i32* %3471, align 4, !dbg !234
  %3501 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3499, i32* %3472), !dbg !235
  store i8* %3501, i8** %3473, align 8, !dbg !236
  br label %3481, !dbg !237

3502:                                             ; preds = %3480
  %3503 = icmp eq i8 %3465, 3, !dbg !238
  br i1 %3503, label %3504, label %3515, !dbg !239

3504:                                             ; preds = %3502
  %3505 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 10, !dbg !240
  %3506 = load i32, i32* %3505, align 4, !dbg !241
  %3507 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3506, !dbg !242
  %3508 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3507, i32 0, i32 1, !dbg !243
  %3509 = load i16, i16* %3508, align 2, !dbg !244
  %3510 = and i16 %3509, 16, !dbg !245
  %3511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3507, i32 0, i32 4, !dbg !246
  %3512 = load i32, i32* %3511, align 4, !dbg !247
  store i32 %3512, i32* %3471, align 4, !dbg !248
  store i32 %3512, i32* %3472, align 4, !dbg !249
  %3513 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3507, i32 0, i32 5, !dbg !250
  %3514 = load i8*, i8** %3513, align 8, !dbg !251
  store i8* %3514, i8** %3473, align 8, !dbg !252
  br label %3481, !dbg !253

3515:                                             ; preds = %3502
  %3516 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 1, !dbg !254
  %3517 = load i16, i16* %3516, align 2, !dbg !254
  %3518 = and i16 %3517, 9216, !dbg !254
  %3519 = icmp ne i16 %3518, 0, !dbg !254
  br i1 %3519, label %3520, label %3521, !dbg !254

3520:                                             ; preds = %3515
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3459), !dbg !254
  br label %3701, !dbg !254

3521:                                             ; preds = %3515
  store i16 1, i16* %3516, align 2, !dbg !254
  br label %3701, !dbg !254

3522:                                             ; preds = %3496, %3447
  %3523 = load i16, i16* %3474, align 2, !dbg !255
  %3524 = icmp ule i16 %3523, 0, !dbg !256
  br i1 %3524, label %3605, label %3602, !dbg !257

3525:                                             ; preds = %3602, %3691
  %3526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 1, !dbg !258
  %3527 = load i16, i16* %3526, align 2, !dbg !259
  %3528 = and i16 9216, %3527, !dbg !260
  %3529 = icmp eq i16 0, %3528, !dbg !261
  br i1 %3529, label %3530, label %3534, !dbg !262

3530:                                             ; preds = %3525
  %3531 = icmp ne i16 %3528, 0, !dbg !263
  br i1 %3531, label %3532, label %3533, !dbg !263

3532:                                             ; preds = %3530
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3459), !dbg !263
  br label %3534, !dbg !263

3533:                                             ; preds = %3530
  store i16 1, i16* %3526, align 2, !dbg !263
  br label %3534, !dbg !263

3534:                                             ; preds = %3532, %3533, %3525
  %3535 = load i32, i32* %3456, align 4, !dbg !264
  %3536 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 23, i32 0, !dbg !265
  %3537 = load i32, i32* %3536, align 4, !dbg !266
  %3538 = load i32, i32* %3472, align 4, !dbg !267
  %3539 = getelementptr i32, i32* %3463, i32 1, !dbg !268
  %3540 = load i32, i32* %3539, align 4, !dbg !269
  %3541 = icmp sge i32 %3538, %3540, !dbg !270
  br i1 %3541, label %3542, label %3581, !dbg !271

3542:                                             ; preds = %3534
  %3543 = load i8*, i8** %3473, align 8, !dbg !272
  %3544 = ptrtoint i8* %3543 to i64, !dbg !273
  %3545 = load i32, i32* %3463, align 4, !dbg !275
  %3546 = zext i32 %3545 to i64, !dbg !276
  %3547 = add i64 %3544, %3546, !dbg !277
  %3548 = inttoptr i64 %3547 to i8*, !dbg !278
  store i8* %3548, i8** %3455, align 8, !dbg !279
  %3549 = load i32, i32* %3456, align 4, !dbg !280
  %3550 = icmp ult i32 %3549, 12, !dbg !281
  br i1 %3550, label %3551, label %3553, !dbg !282

3551:                                             ; preds = %3542
  %3552 = call i32 @sqlite3VdbeSerialGet(i8* %3548, i32 %3549, %struct.sqlite3_value* %3459), !dbg !283
  br label %3701, !dbg !284

3553:                                             ; preds = %3542
  %3554 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %3554, align 2, !dbg !286
  %3555 = getelementptr i16, i16* %3554, i32 1, !dbg !287
  store i16 514, i16* %3555, align 2, !dbg !288
  %3556 = load i32, i32* %3456, align 4, !dbg !289
  %3557 = sub i32 %3556, 12, !dbg !290
  %3558 = lshr i32 %3557, 1, !dbg !291
  %3559 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 4, !dbg !292
  store i32 %3558, i32* %3559, align 4, !dbg !293
  %3560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 2, !dbg !294
  store i8 %3450, i8* %3560, align 1, !dbg !295
  %3561 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 5, !dbg !296
  %3562 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 7, !dbg !297
  %3563 = load i32, i32* %3562, align 4, !dbg !298
  %3564 = add i32 %3558, 2, !dbg !299
  %3565 = icmp slt i32 %3563, %3564, !dbg !300
  br i1 %3565, label %3566, label %3568, !dbg !301

3566:                                             ; preds = %3553
  store i16 1, i16* %3526, align 2, !dbg !302
  %3567 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3459, i32 %3564, i32 0), !dbg !303
  br label %3571, !dbg !304

3568:                                             ; preds = %3553
  %3569 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 6, !dbg !305
  %3570 = load i8*, i8** %3569, align 8, !dbg !306
  store i8* %3570, i8** %3561, align 8, !dbg !307
  br label %3571, !dbg !308

3571:                                             ; preds = %3568, %3566
  %3572 = zext i32 %3558 to i64, !dbg !309
  %3573 = load i8*, i8** %3561, align 8, !dbg !310
  %3574 = load i8*, i8** %3455, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3573, i8* %3574, i64 %3572, i1 false), !dbg !312
  %3575 = getelementptr i8, i8* %3573, i32 %3558, !dbg !313
  store i8 0, i8* %3575, align 1, !dbg !314
  %3576 = add i32 %3558, 1, !dbg !315
  %3577 = getelementptr i8, i8* %3573, i32 %3576, !dbg !316
  store i8 0, i8* %3577, align 1, !dbg !317
  %3578 = and i32 %3556, 1, !dbg !318
  %3579 = getelementptr i16, i16* %3554, i32 %3578, !dbg !319
  %3580 = load i16, i16* %3579, align 2, !dbg !320
  store i16 %3580, i16* %3526, align 2, !dbg !321
  br label %3701, !dbg !322

3581:                                             ; preds = %3534
  %3582 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 2, !dbg !323
  store i8 %3450, i8* %3582, align 1, !dbg !324
  %3583 = load i32, i32* %3456, align 4, !dbg !325
  %3584 = and i32 %3583, 1, !dbg !326
  %3585 = icmp eq i32 %3584, 0, !dbg !327
  %3586 = icmp sge i32 %3583, 12, !dbg !328
  %3587 = and i1 %3586, %3585, !dbg !329
  %3588 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3583), !dbg !330
  %3589 = icmp eq i32 %3588, 0, !dbg !331
  br i1 %3589, label %3600, label %3590, !dbg !332

3590:                                             ; preds = %3581
  %3591 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 12, i32 0, !dbg !333
  %3592 = load %struct.BtCursor*, %struct.BtCursor** %3591, align 8, !dbg !334
  %3593 = load i32, i32* %3463, align 4, !dbg !336
  %3594 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3592, i32 %3593, i32 %3588, %struct.sqlite3_value* %3459), !dbg !337
  %3595 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 5, !dbg !338
  %3596 = load i8*, i8** %3595, align 8, !dbg !339
  %3597 = call i32 @sqlite3VdbeSerialGet(i8* %3596, i32 %3583, %struct.sqlite3_value* %3459), !dbg !340
  %3598 = load i16, i16* %3526, align 2, !dbg !341
  %3599 = and i16 %3598, -4097, !dbg !342
  store i16 %3599, i16* %3526, align 2, !dbg !343
  br label %3701, !dbg !344

3600:                                             ; preds = %3581
  %3601 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3583, %struct.sqlite3_value* %3459), !dbg !345
  br label %3701, !dbg !346

3602:                                             ; preds = %3522
  %3603 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 23, i32 0, !dbg !347
  %3604 = load i32, i32* %3603, align 4, !dbg !348
  store i32 %3604, i32* %3456, align 4, !dbg !349
  br label %3525, !dbg !350

3605:                                             ; preds = %3522
  %3606 = load i32, i32* %3470, align 4, !dbg !351
  %3607 = load i32, i32* %3463, align 4, !dbg !352
  %3608 = icmp ult i32 %3606, %3607, !dbg !353
  br i1 %3608, label %3609, label %3690, !dbg !354

3609:                                             ; preds = %3605
  %3610 = load i8*, i8** %3473, align 8, !dbg !355
  %3611 = icmp eq i8* %3610, null, !dbg !356
  br i1 %3611, label %3613, label %3612, !dbg !357

3612:                                             ; preds = %3609
  store i8* %3610, i8** %3455, align 8, !dbg !358
  br label %3613, !dbg !359

3613:                                             ; preds = %3612, %3609, %3495
  %3614 = alloca i32, align 4, !dbg !360
  %3615 = load i16, i16* %3474, align 2, !dbg !361
  %3616 = zext i16 %3615 to i32, !dbg !362
  store i32 %3616, i32* %3614, align 4, !dbg !363
  %3617 = alloca i64, align 8, !dbg !364
  %3618 = getelementptr i32, i32* %3463, i32 %3616, !dbg !365
  %3619 = load i32, i32* %3618, align 4, !dbg !366
  %3620 = zext i32 %3619 to i64, !dbg !367
  store i64 %3620, i64* %3617, align 4, !dbg !368
  %3621 = load i8*, i8** %3455, align 8, !dbg !369
  %3622 = load i32, i32* %3470, align 4, !dbg !370
  %3623 = alloca i8*, align 8, !dbg !371
  %3624 = getelementptr i8, i8* %3621, i32 %3622, !dbg !372
  store i8* %3624, i8** %3623, align 8, !dbg !373
  %3625 = load i32, i32* %3463, align 4, !dbg !374
  %3626 = getelementptr i8, i8* %3621, i32 %3625, !dbg !375
  br label %3627, !dbg !376

3627:                                             ; preds = %3634, %3613
  %3628 = load i32, i32* %3614, align 4, !dbg !377
  %3629 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3458, i32 0, i32 23, i32 %3628, !dbg !378
  %3630 = load i8*, i8** %3623, align 8, !dbg !379
  %3631 = load i8, i8* %3630, align 1, !dbg !380
  %3632 = zext i8 %3631 to i32, !dbg !381
  store i32 %3632, i32* %3456, align 4, !dbg !382
  store i32 %3632, i32* %3629, align 4, !dbg !383
  %3633 = icmp sgt i8 %3631, -1, !dbg !384
  br i1 %3633, label %3657, label %3648, !dbg !385

3634:                                             ; preds = %3648, %3657
  %3635 = load i32, i32* %3614, align 4, !dbg !386
  %3636 = add i32 %3635, 1, !dbg !387
  store i32 %3636, i32* %3614, align 4, !dbg !388
  %3637 = load i64, i64* %3617, align 4, !dbg !389
  %3638 = and i64 4294967295, %3637, !dbg !390
  %3639 = trunc i64 %3638 to i32, !dbg !391
  %3640 = getelementptr i32, i32* %3463, i32 %3636, !dbg !392
  store i32 %3639, i32* %3640, align 4, !dbg !393
  %3641 = load i32, i32* %3614, align 4, !dbg !394
  %3642 = icmp sle i32 %3641, 0, !dbg !395
  %3643 = load i8*, i8** %3623, align 8, !dbg !396
  %3644 = ptrtoint i8* %3643 to i64, !dbg !397
  %3645 = ptrtoint i8* %3626 to i64, !dbg !398
  %3646 = icmp ult i64 %3644, %3645, !dbg !399
  %3647 = and i1 %3642, %3646, !dbg !400
  br i1 %3647, label %3627, label %3666, !dbg !401

3648:                                             ; preds = %3627
  %3649 = load i8*, i8** %3623, align 8, !dbg !402
  %3650 = call i8 @sqlite3GetVarint32(i8* %3649, i32* %3456), !dbg !403
  %3651 = getelementptr i8, i8* %3649, i8 %3650, !dbg !404
  store i8* %3651, i8** %3623, align 8, !dbg !405
  %3652 = load i32, i32* %3456, align 4, !dbg !406
  store i32 %3652, i32* %3629, align 4, !dbg !407
  %3653 = load i64, i64* %3617, align 4, !dbg !408
  %3654 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3652), !dbg !409
  %3655 = zext i32 %3654 to i64, !dbg !410
  %3656 = add i64 %3653, %3655, !dbg !411
  store i64 %3656, i64* %3617, align 4, !dbg !412
  br label %3634, !dbg !413

3657:                                             ; preds = %3627
  %3658 = getelementptr i8, i8* %3630, i32 1, !dbg !414
  store i8* %3658, i8** %3623, align 8, !dbg !415
  %3659 = load i32, i32* %3456, align 4, !dbg !416
  %3660 = trunc i32 %3659 to i8, !dbg !417
  %3661 = getelementptr i8, i8* %4, i8 %3660, !dbg !418
  %3662 = load i8, i8* %3661, align 1, !dbg !419
  %3663 = zext i8 %3662 to i64, !dbg !420
  %3664 = load i64, i64* %3617, align 4, !dbg !421
  %3665 = add i64 %3664, %3663, !dbg !422
  store i64 %3665, i64* %3617, align 4, !dbg !423
  br label %3634, !dbg !424

3666:                                             ; preds = %3634
  %3667 = load i64, i64* %3617, align 4, !dbg !425
  %3668 = load i32, i32* %3471, align 4, !dbg !426
  %3669 = zext i32 %3668 to i64, !dbg !427
  %3670 = icmp uge i64 %3644, %3645, !dbg !428
  %3671 = icmp ugt i64 %3644, %3645, !dbg !429
  %3672 = icmp ne i64 %3667, %3669, !dbg !430
  %3673 = icmp ugt i64 %3667, %3669, !dbg !431
  %3674 = or i1 %3671, %3672, !dbg !432
  %3675 = and i1 %3670, %3674, !dbg !433
  %3676 = or i1 %3675, %3673, !dbg !434
  br i1 %3676, label %3677, label %3681, !dbg !435

3677:                                             ; preds = %3666
  %3678 = load i32, i32* %3463, align 4, !dbg !436
  %3679 = icmp eq i32 %3678, 0, !dbg !437
  br i1 %3679, label %3680, label %3681, !dbg !438

3680:                                             ; preds = %3677
  store i32 0, i32* %3614, align 4, !dbg !439
  store i8* %3626, i8** %3623, align 8, !dbg !440
  br label %3681, !dbg !441

3681:                                             ; preds = %3680, %3677, %3666
  %3682 = load i32, i32* %3614, align 4, !dbg !442
  %3683 = trunc i32 %3682 to i16, !dbg !443
  store i16 %3683, i16* %3474, align 2, !dbg !444
  %3684 = load i8*, i8** %3623, align 8, !dbg !445
  %3685 = ptrtoint i8* %3684 to i64, !dbg !446
  %3686 = load i8*, i8** %3455, align 8, !dbg !447
  %3687 = ptrtoint i8* %3686 to i64, !dbg !448
  %3688 = sub i64 %3685, %3687, !dbg !449
  %3689 = trunc i64 %3688 to i32, !dbg !450
  store i32 %3689, i32* %3470, align 4, !dbg !451
  br label %3691, !dbg !452

3690:                                             ; preds = %3605
  store i32 0, i32* %3456, align 4, !dbg !453
  br label %3691, !dbg !454

3691:                                             ; preds = %3681, %3690
  %3692 = load i16, i16* %3474, align 2, !dbg !455
  %3693 = icmp sle i16 %3692, 0, !dbg !456
  br i1 %3693, label %3694, label %3525, !dbg !457

3694:                                             ; preds = %3691
  %3695 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3459, i32 0, i32 1, !dbg !458
  %3696 = load i16, i16* %3695, align 2, !dbg !458
  %3697 = and i16 %3696, 9216, !dbg !458
  %3698 = icmp ne i16 %3697, 0, !dbg !458
  br i1 %3698, label %3699, label %3700, !dbg !458

3699:                                             ; preds = %3694
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3459), !dbg !458
  br label %3701, !dbg !458

3700:                                             ; preds = %3694
  store i16 1, i16* %3695, align 2, !dbg !458
  br label %3701, !dbg !458

3701:                                             ; preds = %3699, %3700, %3571, %3551, %3590, %3600, %3520, %3521
  call void @llvm.stackrestore(i8* %3448), !dbg !459
  br label %3702, !dbg !74

3702:                                             ; preds = %3701, %14
  %3703 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !918
  %3704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3703, i32 0, i32 1, !dbg !921
  %3705 = load i16, i16* %3704, align 2, !dbg !922
  %3706 = and i16 %3705, 1, !dbg !923
  %3707 = icmp ne i16 %3706, 0, !dbg !924
  br i1 %3707, label %8078, label %3708, !dbg !925

3708:                                             ; preds = %3702, %14
  %3709 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !926
  call void @applyAffinity(%struct.sqlite3_value* %3709, i8 67, i8 1), !dbg !929
  br label %3710, !dbg !74

3710:                                             ; preds = %3708, %14
  %3711 = call i8* @llvm.stacksave(), !dbg !930
  %3712 = alloca i32, align 8, !dbg !933
  store i32 0, i32* %3712, align 4, !dbg !934
  %3713 = alloca i32, align 8, !dbg !935
  store i32 0, i32* %3713, align 4, !dbg !936
  %3714 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !937
  %3715 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3714, align 8, !dbg !938
  %3716 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 12, i32 0, !dbg !939
  %3717 = load %struct.BtCursor*, %struct.BtCursor** %3716, align 8, !dbg !940
  %3718 = alloca i32, align 8, !dbg !941
  store i32 24, i32* %3718, align 4, !dbg !942
  %3719 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 2, !dbg !943
  store i8 0, i8* %3719, align 1, !dbg !944
  %3720 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 3, !dbg !945
  store i8 0, i8* %3720, align 1, !dbg !946
  %3721 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 9, !dbg !947
  store i32 0, i32* %3721, align 4, !dbg !948
  %3722 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 4, !dbg !949
  %3723 = load i8, i8* %3722, align 1, !dbg !950
  %3724 = icmp ne i8 %3723, 0, !dbg !951
  br i1 %3724, label %3725, label %3788, !dbg !952

3725:                                             ; preds = %3710
  %3726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !953
  %3727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 1, !dbg !954
  %3728 = load i16, i16* %3727, align 2, !dbg !955
  %3729 = and i16 %3728, 46, !dbg !956
  %3730 = icmp eq i16 %3729, 2, !dbg !957
  br i1 %3730, label %3731, label %3756, !dbg !958

3731:                                             ; preds = %3725
  %3732 = call i8* @llvm.stacksave(), !dbg !959
  %3733 = alloca double, align 8, !dbg !960
  %3734 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 0, i32 0, !dbg !959
  %3735 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 2, !dbg !959
  %3736 = load i8, i8* %3735, align 1, !dbg !959
  %3737 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 5, !dbg !959
  %3738 = load i8*, i8** %3737, align 8, !dbg !959
  %3739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 4, !dbg !959
  %3740 = load i32, i32* %3739, align 4, !dbg !959
  %3741 = call i32 @sqlite3AtoF(i8* %3738, double* %3733, i32 %3740, i8 %3736), !dbg !959
  %3742 = icmp sle i32 %3741, 0, !dbg !959
  br i1 %3742, label %3755, label %3743, !dbg !959

3743:                                             ; preds = %3731
  %3744 = icmp eq i32 %3741, 1, !dbg !959
  %3745 = load double, double* %3733, align 8, !dbg !959
  br i1 %3744, label %3746, label %3749, !dbg !959

3746:                                             ; preds = %3743
  %3747 = load i16, i16* %3727, align 2, !dbg !959
  %3748 = or i16 %3747, 4, !dbg !959
  store i16 %3748, i16* %3727, align 2, !dbg !959
  br label %3752, !dbg !959

3749:                                             ; preds = %3743
  store double %3745, double* %3734, align 8, !dbg !959
  %3750 = load i16, i16* %3727, align 2, !dbg !959
  %3751 = or i16 %3750, 8, !dbg !959
  store i16 %3751, i16* %3727, align 2, !dbg !959
  br label %3752, !dbg !959

3752:                                             ; preds = %3749, %3746
  %3753 = load i16, i16* %3727, align 2, !dbg !959
  %3754 = and i16 %3753, -3, !dbg !959
  store i16 %3754, i16* %3727, align 2, !dbg !959
  br label %3755, !dbg !959

3755:                                             ; preds = %3752, %3731
  call void @llvm.stackrestore(i8* %3732), !dbg !959
  br label %3756, !dbg !963

3756:                                             ; preds = %3755, %3725
  %3757 = call i64 @sqlite3VdbeIntValue(%struct.sqlite3_value* %3726), !dbg !964
  %3758 = load i16, i16* %3727, align 2, !dbg !965
  store i16 %3728, i16* %3727, align 2, !dbg !966
  %3759 = and i16 %3758, 36, !dbg !967
  %3760 = icmp eq i16 %3759, 0, !dbg !968
  br i1 %3760, label %3761, label %3784, !dbg !969

3761:                                             ; preds = %3756
  %3762 = and i16 %3758, 8, !dbg !970
  %3763 = icmp eq i16 %3762, 0, !dbg !971
  br i1 %3763, label %3764, label %3765, !dbg !972

3764:                                             ; preds = %3761
  br label %8078, !dbg !973

3765:                                             ; preds = %3761
  %3766 = sitofp i64 %3757 to double, !dbg !974
  %3767 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3726, i32 0, i32 0, i32 0, !dbg !975
  %3768 = load double, double* %3767, align 8, !dbg !976
  %3769 = fcmp olt double %3768, %3766, !dbg !977
  br i1 %3769, label %3770, label %3776, !dbg !978

3770:                                             ; preds = %3765
  %3771 = load i32, i32* %3718, align 4, !dbg !979
  %3772 = and i32 %3771, 1, !dbg !980
  %3773 = icmp eq i32 %3772, 1, !dbg !981
  br i1 %3773, label %3774, label %3776, !dbg !982

3774:                                             ; preds = %3770
  %3775 = sub i32 %3771, -1, !dbg !983
  store i32 %3775, i32* %3718, align 4, !dbg !984
  br label %3776, !dbg !985

3776:                                             ; preds = %3770, %3774, %3765
  %3777 = fcmp ogt double %3768, %3766, !dbg !986
  br i1 %3777, label %3778, label %3784, !dbg !987

3778:                                             ; preds = %3776
  %3779 = load i32, i32* %3718, align 4, !dbg !988
  %3780 = and i32 %3779, 1, !dbg !989
  %3781 = icmp eq i32 %3780, 0, !dbg !990
  br i1 %3781, label %3782, label %3784, !dbg !991

3782:                                             ; preds = %3778
  %3783 = add i32 %3779, 1, !dbg !992
  store i32 %3783, i32* %3718, align 4, !dbg !993
  br label %3784, !dbg !994

3784:                                             ; preds = %3778, %3782, %3776, %3756
  %3785 = load %struct.BtCursor*, %struct.BtCursor** %3716, align 8, !dbg !995
  %3786 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %3785, %struct.UnpackedRecord* null, i64 %3757, i32 0, i32* %3712), !dbg !996
  %3787 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 18, !dbg !997
  store i64 %3757, i64* %3787, align 4, !dbg !998
  br label %3811, !dbg !999

3788:                                             ; preds = %3710
  %3789 = load %struct.BtCursor*, %struct.BtCursor** %3716, align 8, !dbg !1000
  %3790 = getelementptr %struct.BtCursor, %struct.BtCursor* %3789, i32 0, i32 3, !dbg !1001
  %3791 = load i8, i8* %3790, align 1, !dbg !1002
  %3792 = and i8 %3791, 2, !dbg !1003
  %3793 = icmp ne i8 %3792, 0, !dbg !1004
  br i1 %3793, label %3794, label %3795, !dbg !1005

3794:                                             ; preds = %3788
  store i32 1, i32* %3713, align 4, !dbg !1006
  br label %3795, !dbg !1007

3795:                                             ; preds = %3794, %3788
  %3796 = alloca %struct.UnpackedRecord, align 8, !dbg !1008
  %3797 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3796, i32 0, i32 0, !dbg !1009
  %3798 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3715, i32 0, i32 13, !dbg !1010
  %3799 = load %struct.KeyInfo*, %struct.KeyInfo** %3798, align 8, !dbg !1011
  store %struct.KeyInfo* %3799, %struct.KeyInfo** %3797, align 8, !dbg !1012
  %3800 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3796, i32 0, i32 2, !dbg !1013
  store i16 1, i16* %3800, align 2, !dbg !1014
  %3801 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3796, i32 0, i32 3, !dbg !1015
  store i8 1, i8* %3801, align 1, !dbg !1016
  %3802 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3796, i32 0, i32 1, !dbg !1017
  %3803 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !1018
  store %struct.sqlite3_value* %3803, %struct.sqlite3_value** %3802, align 8, !dbg !1019
  %3804 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3796, i32 0, i32 7, !dbg !1020
  store i8 0, i8* %3804, align 1, !dbg !1021
  %3805 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %3789, %struct.UnpackedRecord* %3796, i64 0, i32 0, i32* %3712), !dbg !1022
  %3806 = load i32, i32* %3713, align 4, !dbg !1023
  %3807 = icmp ne i32 %3806, 0, !dbg !1024
  %3808 = load i8, i8* %3804, align 1, !dbg !1025
  %3809 = icmp eq i8 %3808, 0, !dbg !1026
  %3810 = and i1 %3807, %3809, !dbg !1027
  br i1 %3810, label %3824, label %3811, !dbg !1028

3811:                                             ; preds = %3795, %3784
  %3812 = load i32, i32* %3712, align 4, !dbg !1029
  %3813 = icmp eq i32 %3812, 0, !dbg !1030
  %3814 = load i32, i32* %3718, align 4, !dbg !1031
  %3815 = icmp slt i32 %3812, 0, !dbg !1032
  %3816 = icmp eq i32 %3814, 25, !dbg !1033
  %3817 = and i1 %3813, %3816, !dbg !1034
  %3818 = or i1 %3815, %3817, !dbg !1035
  store i32 0, i32* %3712, align 4, !dbg !1036
  br i1 %3818, label %3819, label %3824, !dbg !1037

3819:                                             ; preds = %3811
  %3820 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %3717, i32 0), !dbg !1038
  %3821 = icmp eq i32 %3820, 0, !dbg !1039
  %3822 = icmp eq i32 %3820, 101, !dbg !1040
  br i1 %3822, label %3823, label %3824, !dbg !1041

3823:                                             ; preds = %3819
  store i32 1, i32* %3712, align 4, !dbg !1042
  br label %3824, !dbg !1043

3824:                                             ; preds = %3795, %3823, %3819, %3811
  %3825 = load i32, i32* %3712, align 4, !dbg !1044
  %3826 = icmp ne i32 %3825, 0, !dbg !1045
  br i1 %3826, label %8078, label %3827, !dbg !1046

3827:                                             ; preds = %3824
  %3828 = load i32, i32* %3713, align 4, !dbg !1047
  %3829 = icmp ne i32 %3828, 0, !dbg !1048
  call void @llvm.stackrestore(i8* %3711), !dbg !1049
  br i1 %3829, label %3849, label %3830, !dbg !1050

3830:                                             ; preds = %8076, %3827, %14
  %3831 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !1051
  %3832 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3831, align 8, !dbg !1054
  %3833 = call i8* @llvm.stacksave(), !dbg !1055
  %3834 = alloca %struct.UnpackedRecord, align 8, !dbg !1056
  %3835 = alloca i32, align 8, !dbg !1057
  %3836 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3834, i32 0, i32 0, !dbg !1058
  %3837 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3832, i32 0, i32 13, !dbg !1059
  %3838 = load %struct.KeyInfo*, %struct.KeyInfo** %3837, align 8, !dbg !1060
  store %struct.KeyInfo* %3838, %struct.KeyInfo** %3836, align 8, !dbg !1061
  %3839 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3834, i32 0, i32 2, !dbg !1062
  store i16 1, i16* %3839, align 2, !dbg !1063
  %3840 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3834, i32 0, i32 3, !dbg !1064
  store i8 -1, i8* %3840, align 1, !dbg !1065
  %3841 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3834, i32 0, i32 1, !dbg !1066
  %3842 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !1067
  store %struct.sqlite3_value* %3842, %struct.sqlite3_value** %3841, align 8, !dbg !1068
  %3843 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1069
  %3844 = call i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3* %3843, %struct.VdbeCursor* %3832, %struct.UnpackedRecord* %3834, i32* %3835), !dbg !1070
  %3845 = load i32, i32* %3835, align 4, !dbg !1071
  %3846 = add i32 %3845, 1, !dbg !1071
  store i32 %3846, i32* %3835, align 4, !dbg !1071
  call void @llvm.stackrestore(i8* %3833), !dbg !1072
  %3847 = load i32, i32* %3835, align 4, !dbg !1073
  %3848 = icmp sgt i32 %3847, 0, !dbg !1074
  br i1 %3848, label %8078, label %3849, !dbg !1075

3849:                                             ; preds = %3830, %3827, %14
  %3850 = call i8* @llvm.stacksave(), !dbg !167
  %3851 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %3852 = load i8, i8* %3851, align 1, !dbg !171
  %3853 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %3853, align 4, !dbg !173
  %3854 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %3855 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %3856 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3854, align 8, !dbg !176
  store %struct.VdbeCursor* %3856, %struct.VdbeCursor** %3855, align 8, !dbg !177
  %3857 = alloca i8*, align 8, !dbg !178
  %3858 = alloca i32, align 4, !dbg !179
  %3859 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3855, i32* %3853), !dbg !180
  %3860 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3855, align 8, !dbg !181
  %3861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !182
  %3862 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 16, !dbg !183
  %3863 = load i16, i16* %3862, align 2, !dbg !184
  %3864 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 19, !dbg !185
  %3865 = load i32*, i32** %3864, align 8, !dbg !186
  %3866 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 0, !dbg !187
  %3867 = load i8, i8* %3866, align 1, !dbg !188
  %3868 = icmp ne i8 %3867, 3, !dbg !189
  %3869 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 2, !dbg !190
  %3870 = load i8, i8* %3869, align 1, !dbg !191
  %3871 = icmp ne i8 %3870, 0, !dbg !192
  %3872 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 14, !dbg !193
  %3873 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 21, !dbg !194
  %3874 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 22, !dbg !195
  %3875 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 20, !dbg !196
  %3876 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 17, !dbg !197
  %3877 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 9, !dbg !198
  %3878 = load i32, i32* %3877, align 4, !dbg !199
  %3879 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %3880 = load i32, i32* %3879, align 4, !dbg !201
  %3881 = icmp ne i32 %3878, %3880, !dbg !202
  br i1 %3881, label %3882, label %3924, !dbg !203

3882:                                             ; preds = %3849
  br i1 %3871, label %3904, label %3899, !dbg !204

3883:                                             ; preds = %3899, %3906
  %3884 = load i32, i32* %3879, align 4, !dbg !205
  store i32 %3884, i32* %3877, align 4, !dbg !206
  %3885 = load i8*, i8** %3875, align 8, !dbg !207
  %3886 = load i8, i8* %3885, align 1, !dbg !208
  %3887 = icmp sgt i8 %3886, -1, !dbg !211
  br i1 %3887, label %3888, label %3890, !dbg !212

3888:                                             ; preds = %3883
  %3889 = zext i8 %3886 to i32, !dbg !213
  store i32 %3889, i32* %3865, align 4, !dbg !214
  store i32 1, i32* %3872, align 4, !dbg !215
  br label %3893, !dbg !216

3890:                                             ; preds = %3883
  %3891 = call i8 @sqlite3GetVarint32(i8* %3885, i32* %3865), !dbg !217
  %3892 = zext i8 %3891 to i32, !dbg !218
  store i32 %3892, i32* %3872, align 4, !dbg !219
  br label %3893, !dbg !220

3893:                                             ; preds = %3890, %3888
  store i16 0, i16* %3876, align 2, !dbg !221
  %3894 = load i32, i32* %3874, align 4, !dbg !222
  %3895 = load i32, i32* %3865, align 4, !dbg !223
  %3896 = icmp ult i32 %3894, %3895, !dbg !224
  br i1 %3896, label %3898, label %3897, !dbg !225

3897:                                             ; preds = %3893
  store i8* %3885, i8** %3857, align 8, !dbg !226
  br label %4017, !dbg !227

3898:                                             ; preds = %3893
  store i8* null, i8** %3875, align 8, !dbg !228
  store i32 0, i32* %3874, align 4, !dbg !229
  br label %3924, !dbg !230

3899:                                             ; preds = %3882
  %3900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 12, i32 0, !dbg !231
  %3901 = load %struct.BtCursor*, %struct.BtCursor** %3900, align 8, !dbg !232
  %3902 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3901), !dbg !233
  store i32 %3902, i32* %3873, align 4, !dbg !234
  %3903 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3901, i32* %3874), !dbg !235
  store i8* %3903, i8** %3875, align 8, !dbg !236
  br label %3883, !dbg !237

3904:                                             ; preds = %3882
  %3905 = icmp eq i8 %3867, 3, !dbg !238
  br i1 %3905, label %3906, label %3917, !dbg !239

3906:                                             ; preds = %3904
  %3907 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 10, !dbg !240
  %3908 = load i32, i32* %3907, align 4, !dbg !241
  %3909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3908, !dbg !242
  %3910 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3909, i32 0, i32 1, !dbg !243
  %3911 = load i16, i16* %3910, align 2, !dbg !244
  %3912 = and i16 %3911, 16, !dbg !245
  %3913 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3909, i32 0, i32 4, !dbg !246
  %3914 = load i32, i32* %3913, align 4, !dbg !247
  store i32 %3914, i32* %3873, align 4, !dbg !248
  store i32 %3914, i32* %3874, align 4, !dbg !249
  %3915 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3909, i32 0, i32 5, !dbg !250
  %3916 = load i8*, i8** %3915, align 8, !dbg !251
  store i8* %3916, i8** %3875, align 8, !dbg !252
  br label %3883, !dbg !253

3917:                                             ; preds = %3904
  %3918 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 1, !dbg !254
  %3919 = load i16, i16* %3918, align 2, !dbg !254
  %3920 = and i16 %3919, 9216, !dbg !254
  %3921 = icmp ne i16 %3920, 0, !dbg !254
  br i1 %3921, label %3922, label %3923, !dbg !254

3922:                                             ; preds = %3917
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3861), !dbg !254
  br label %4105, !dbg !254

3923:                                             ; preds = %3917
  store i16 1, i16* %3918, align 2, !dbg !254
  br label %4105, !dbg !254

3924:                                             ; preds = %3898, %3849
  %3925 = load i16, i16* %3876, align 2, !dbg !255
  %3926 = icmp ule i16 %3925, 3, !dbg !256
  br i1 %3926, label %4009, label %4006, !dbg !257

3927:                                             ; preds = %4006, %4095
  %3928 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 1, !dbg !258
  %3929 = load i16, i16* %3928, align 2, !dbg !259
  %3930 = and i16 9216, %3929, !dbg !260
  %3931 = icmp eq i16 0, %3930, !dbg !261
  br i1 %3931, label %3932, label %3936, !dbg !262

3932:                                             ; preds = %3927
  %3933 = icmp ne i16 %3930, 0, !dbg !263
  br i1 %3933, label %3934, label %3935, !dbg !263

3934:                                             ; preds = %3932
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3861), !dbg !263
  br label %3936, !dbg !263

3935:                                             ; preds = %3932
  store i16 1, i16* %3928, align 2, !dbg !263
  br label %3936, !dbg !263

3936:                                             ; preds = %3934, %3935, %3927
  %3937 = load i32, i32* %3858, align 4, !dbg !264
  %3938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 23, i32 3, !dbg !265
  %3939 = load i32, i32* %3938, align 4, !dbg !266
  %3940 = load i32, i32* %3874, align 4, !dbg !267
  %3941 = getelementptr i32, i32* %3865, i32 4, !dbg !268
  %3942 = load i32, i32* %3941, align 4, !dbg !269
  %3943 = icmp sge i32 %3940, %3942, !dbg !270
  br i1 %3943, label %3944, label %3984, !dbg !271

3944:                                             ; preds = %3936
  %3945 = load i8*, i8** %3875, align 8, !dbg !272
  %3946 = ptrtoint i8* %3945 to i64, !dbg !273
  %3947 = getelementptr i32, i32* %3865, i32 3, !dbg !274
  %3948 = load i32, i32* %3947, align 4, !dbg !275
  %3949 = zext i32 %3948 to i64, !dbg !276
  %3950 = add i64 %3946, %3949, !dbg !277
  %3951 = inttoptr i64 %3950 to i8*, !dbg !278
  store i8* %3951, i8** %3857, align 8, !dbg !279
  %3952 = load i32, i32* %3858, align 4, !dbg !280
  %3953 = icmp ult i32 %3952, 12, !dbg !281
  br i1 %3953, label %3954, label %3956, !dbg !282

3954:                                             ; preds = %3944
  %3955 = call i32 @sqlite3VdbeSerialGet(i8* %3951, i32 %3952, %struct.sqlite3_value* %3861), !dbg !283
  br label %4105, !dbg !284

3956:                                             ; preds = %3944
  %3957 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %3957, align 2, !dbg !286
  %3958 = getelementptr i16, i16* %3957, i32 1, !dbg !287
  store i16 514, i16* %3958, align 2, !dbg !288
  %3959 = load i32, i32* %3858, align 4, !dbg !289
  %3960 = sub i32 %3959, 12, !dbg !290
  %3961 = lshr i32 %3960, 1, !dbg !291
  %3962 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 4, !dbg !292
  store i32 %3961, i32* %3962, align 4, !dbg !293
  %3963 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 2, !dbg !294
  store i8 %3852, i8* %3963, align 1, !dbg !295
  %3964 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 5, !dbg !296
  %3965 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 7, !dbg !297
  %3966 = load i32, i32* %3965, align 4, !dbg !298
  %3967 = add i32 %3961, 2, !dbg !299
  %3968 = icmp slt i32 %3966, %3967, !dbg !300
  br i1 %3968, label %3969, label %3971, !dbg !301

3969:                                             ; preds = %3956
  store i16 1, i16* %3928, align 2, !dbg !302
  %3970 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3861, i32 %3967, i32 0), !dbg !303
  br label %3974, !dbg !304

3971:                                             ; preds = %3956
  %3972 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 6, !dbg !305
  %3973 = load i8*, i8** %3972, align 8, !dbg !306
  store i8* %3973, i8** %3964, align 8, !dbg !307
  br label %3974, !dbg !308

3974:                                             ; preds = %3971, %3969
  %3975 = zext i32 %3961 to i64, !dbg !309
  %3976 = load i8*, i8** %3964, align 8, !dbg !310
  %3977 = load i8*, i8** %3857, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3976, i8* %3977, i64 %3975, i1 false), !dbg !312
  %3978 = getelementptr i8, i8* %3976, i32 %3961, !dbg !313
  store i8 0, i8* %3978, align 1, !dbg !314
  %3979 = add i32 %3961, 1, !dbg !315
  %3980 = getelementptr i8, i8* %3976, i32 %3979, !dbg !316
  store i8 0, i8* %3980, align 1, !dbg !317
  %3981 = and i32 %3959, 1, !dbg !318
  %3982 = getelementptr i16, i16* %3957, i32 %3981, !dbg !319
  %3983 = load i16, i16* %3982, align 2, !dbg !320
  store i16 %3983, i16* %3928, align 2, !dbg !321
  br label %4105, !dbg !322

3984:                                             ; preds = %3936
  %3985 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 2, !dbg !323
  store i8 %3852, i8* %3985, align 1, !dbg !324
  %3986 = load i32, i32* %3858, align 4, !dbg !325
  %3987 = and i32 %3986, 1, !dbg !326
  %3988 = icmp eq i32 %3987, 0, !dbg !327
  %3989 = icmp sge i32 %3986, 12, !dbg !328
  %3990 = and i1 %3989, %3988, !dbg !329
  %3991 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3986), !dbg !330
  %3992 = icmp eq i32 %3991, 0, !dbg !331
  br i1 %3992, label %4004, label %3993, !dbg !332

3993:                                             ; preds = %3984
  %3994 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 12, i32 0, !dbg !333
  %3995 = load %struct.BtCursor*, %struct.BtCursor** %3994, align 8, !dbg !334
  %3996 = getelementptr i32, i32* %3865, i32 3, !dbg !335
  %3997 = load i32, i32* %3996, align 4, !dbg !336
  %3998 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3995, i32 %3997, i32 %3991, %struct.sqlite3_value* %3861), !dbg !337
  %3999 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 5, !dbg !338
  %4000 = load i8*, i8** %3999, align 8, !dbg !339
  %4001 = call i32 @sqlite3VdbeSerialGet(i8* %4000, i32 %3986, %struct.sqlite3_value* %3861), !dbg !340
  %4002 = load i16, i16* %3928, align 2, !dbg !341
  %4003 = and i16 %4002, -4097, !dbg !342
  store i16 %4003, i16* %3928, align 2, !dbg !343
  br label %4105, !dbg !344

4004:                                             ; preds = %3984
  %4005 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3986, %struct.sqlite3_value* %3861), !dbg !345
  br label %4105, !dbg !346

4006:                                             ; preds = %3924
  %4007 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 23, i32 3, !dbg !347
  %4008 = load i32, i32* %4007, align 4, !dbg !348
  store i32 %4008, i32* %3858, align 4, !dbg !349
  br label %3927, !dbg !350

4009:                                             ; preds = %3924
  %4010 = load i32, i32* %3872, align 4, !dbg !351
  %4011 = load i32, i32* %3865, align 4, !dbg !352
  %4012 = icmp ult i32 %4010, %4011, !dbg !353
  br i1 %4012, label %4013, label %4094, !dbg !354

4013:                                             ; preds = %4009
  %4014 = load i8*, i8** %3875, align 8, !dbg !355
  %4015 = icmp eq i8* %4014, null, !dbg !356
  br i1 %4015, label %4017, label %4016, !dbg !357

4016:                                             ; preds = %4013
  store i8* %4014, i8** %3857, align 8, !dbg !358
  br label %4017, !dbg !359

4017:                                             ; preds = %4016, %4013, %3897
  %4018 = alloca i32, align 4, !dbg !360
  %4019 = load i16, i16* %3876, align 2, !dbg !361
  %4020 = zext i16 %4019 to i32, !dbg !362
  store i32 %4020, i32* %4018, align 4, !dbg !363
  %4021 = alloca i64, align 8, !dbg !364
  %4022 = getelementptr i32, i32* %3865, i32 %4020, !dbg !365
  %4023 = load i32, i32* %4022, align 4, !dbg !366
  %4024 = zext i32 %4023 to i64, !dbg !367
  store i64 %4024, i64* %4021, align 4, !dbg !368
  %4025 = load i8*, i8** %3857, align 8, !dbg !369
  %4026 = load i32, i32* %3872, align 4, !dbg !370
  %4027 = alloca i8*, align 8, !dbg !371
  %4028 = getelementptr i8, i8* %4025, i32 %4026, !dbg !372
  store i8* %4028, i8** %4027, align 8, !dbg !373
  %4029 = load i32, i32* %3865, align 4, !dbg !374
  %4030 = getelementptr i8, i8* %4025, i32 %4029, !dbg !375
  br label %4031, !dbg !376

4031:                                             ; preds = %4038, %4017
  %4032 = load i32, i32* %4018, align 4, !dbg !377
  %4033 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3860, i32 0, i32 23, i32 %4032, !dbg !378
  %4034 = load i8*, i8** %4027, align 8, !dbg !379
  %4035 = load i8, i8* %4034, align 1, !dbg !380
  %4036 = zext i8 %4035 to i32, !dbg !381
  store i32 %4036, i32* %3858, align 4, !dbg !382
  store i32 %4036, i32* %4033, align 4, !dbg !383
  %4037 = icmp sgt i8 %4035, -1, !dbg !384
  br i1 %4037, label %4061, label %4052, !dbg !385

4038:                                             ; preds = %4052, %4061
  %4039 = load i32, i32* %4018, align 4, !dbg !386
  %4040 = add i32 %4039, 1, !dbg !387
  store i32 %4040, i32* %4018, align 4, !dbg !388
  %4041 = load i64, i64* %4021, align 4, !dbg !389
  %4042 = and i64 4294967295, %4041, !dbg !390
  %4043 = trunc i64 %4042 to i32, !dbg !391
  %4044 = getelementptr i32, i32* %3865, i32 %4040, !dbg !392
  store i32 %4043, i32* %4044, align 4, !dbg !393
  %4045 = load i32, i32* %4018, align 4, !dbg !394
  %4046 = icmp sle i32 %4045, 3, !dbg !395
  %4047 = load i8*, i8** %4027, align 8, !dbg !396
  %4048 = ptrtoint i8* %4047 to i64, !dbg !397
  %4049 = ptrtoint i8* %4030 to i64, !dbg !398
  %4050 = icmp ult i64 %4048, %4049, !dbg !399
  %4051 = and i1 %4046, %4050, !dbg !400
  br i1 %4051, label %4031, label %4070, !dbg !401

4052:                                             ; preds = %4031
  %4053 = load i8*, i8** %4027, align 8, !dbg !402
  %4054 = call i8 @sqlite3GetVarint32(i8* %4053, i32* %3858), !dbg !403
  %4055 = getelementptr i8, i8* %4053, i8 %4054, !dbg !404
  store i8* %4055, i8** %4027, align 8, !dbg !405
  %4056 = load i32, i32* %3858, align 4, !dbg !406
  store i32 %4056, i32* %4033, align 4, !dbg !407
  %4057 = load i64, i64* %4021, align 4, !dbg !408
  %4058 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4056), !dbg !409
  %4059 = zext i32 %4058 to i64, !dbg !410
  %4060 = add i64 %4057, %4059, !dbg !411
  store i64 %4060, i64* %4021, align 4, !dbg !412
  br label %4038, !dbg !413

4061:                                             ; preds = %4031
  %4062 = getelementptr i8, i8* %4034, i32 1, !dbg !414
  store i8* %4062, i8** %4027, align 8, !dbg !415
  %4063 = load i32, i32* %3858, align 4, !dbg !416
  %4064 = trunc i32 %4063 to i8, !dbg !417
  %4065 = getelementptr i8, i8* %4, i8 %4064, !dbg !418
  %4066 = load i8, i8* %4065, align 1, !dbg !419
  %4067 = zext i8 %4066 to i64, !dbg !420
  %4068 = load i64, i64* %4021, align 4, !dbg !421
  %4069 = add i64 %4068, %4067, !dbg !422
  store i64 %4069, i64* %4021, align 4, !dbg !423
  br label %4038, !dbg !424

4070:                                             ; preds = %4038
  %4071 = load i64, i64* %4021, align 4, !dbg !425
  %4072 = load i32, i32* %3873, align 4, !dbg !426
  %4073 = zext i32 %4072 to i64, !dbg !427
  %4074 = icmp uge i64 %4048, %4049, !dbg !428
  %4075 = icmp ugt i64 %4048, %4049, !dbg !429
  %4076 = icmp ne i64 %4071, %4073, !dbg !430
  %4077 = icmp ugt i64 %4071, %4073, !dbg !431
  %4078 = or i1 %4075, %4076, !dbg !432
  %4079 = and i1 %4074, %4078, !dbg !433
  %4080 = or i1 %4079, %4077, !dbg !434
  br i1 %4080, label %4081, label %4085, !dbg !435

4081:                                             ; preds = %4070
  %4082 = load i32, i32* %3865, align 4, !dbg !436
  %4083 = icmp eq i32 %4082, 0, !dbg !437
  br i1 %4083, label %4084, label %4085, !dbg !438

4084:                                             ; preds = %4081
  store i32 0, i32* %4018, align 4, !dbg !439
  store i8* %4030, i8** %4027, align 8, !dbg !440
  br label %4085, !dbg !441

4085:                                             ; preds = %4084, %4081, %4070
  %4086 = load i32, i32* %4018, align 4, !dbg !442
  %4087 = trunc i32 %4086 to i16, !dbg !443
  store i16 %4087, i16* %3876, align 2, !dbg !444
  %4088 = load i8*, i8** %4027, align 8, !dbg !445
  %4089 = ptrtoint i8* %4088 to i64, !dbg !446
  %4090 = load i8*, i8** %3857, align 8, !dbg !447
  %4091 = ptrtoint i8* %4090 to i64, !dbg !448
  %4092 = sub i64 %4089, %4091, !dbg !449
  %4093 = trunc i64 %4092 to i32, !dbg !450
  store i32 %4093, i32* %3872, align 4, !dbg !451
  br label %4095, !dbg !452

4094:                                             ; preds = %4009
  store i32 0, i32* %3858, align 4, !dbg !453
  br label %4095, !dbg !454

4095:                                             ; preds = %4085, %4094
  %4096 = load i16, i16* %3876, align 2, !dbg !455
  %4097 = icmp sle i16 %4096, 3, !dbg !456
  br i1 %4097, label %4098, label %3927, !dbg !457

4098:                                             ; preds = %4095
  %4099 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3861, i32 0, i32 1, !dbg !458
  %4100 = load i16, i16* %4099, align 2, !dbg !458
  %4101 = and i16 %4100, 9216, !dbg !458
  %4102 = icmp ne i16 %4101, 0, !dbg !458
  br i1 %4102, label %4103, label %4104, !dbg !458

4103:                                             ; preds = %4098
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3861), !dbg !458
  br label %4105, !dbg !458

4104:                                             ; preds = %4098
  store i16 1, i16* %4099, align 2, !dbg !458
  br label %4105, !dbg !458

4105:                                             ; preds = %4103, %4104, %3974, %3954, %3993, %4004, %3922, %3923
  call void @llvm.stackrestore(i8* %3850), !dbg !459
  br label %4106, !dbg !74

4106:                                             ; preds = %4105, %14
  %4107 = call i8* @llvm.stacksave(), !dbg !1076
  %4108 = alloca i32, align 8, !dbg !1079
  %4109 = alloca i64, align 8, !dbg !1080
  %4110 = alloca i32, align 8, !dbg !1081
  %4111 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !1082
  %4112 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4111, i32 0, i32 1, !dbg !1083
  %4113 = load i16, i16* %4112, align 2, !dbg !1084
  %4114 = and i16 %4113, 36, !dbg !1085
  %4115 = icmp eq i16 %4114, 0, !dbg !1086
  br i1 %4115, label %4116, label %4127, !dbg !1087

4116:                                             ; preds = %4106
  %4117 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %4118 = load %struct.sqlite3_value, %struct.sqlite3_value* %4111, align 8, !dbg !1089
  store %struct.sqlite3_value %4118, %struct.sqlite3_value* %4117, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %4117, i8 67, i8 1), !dbg !1090
  %4119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4117, i32 0, i32 1, !dbg !1091
  %4120 = load i16, i16* %4119, align 2, !dbg !1092
  %4121 = and i16 %4120, 4, !dbg !1093
  %4122 = icmp eq i16 %4121, 0, !dbg !1094
  br i1 %4122, label %8066, label %4123, !dbg !1095

4123:                                             ; preds = %4116
  %4124 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4117, i32 0, i32 0, !dbg !1096
  %4125 = bitcast %union.MemValue* %4124 to i64*, !dbg !1097
  %4126 = load i64, i64* %4125, align 4, !dbg !1098
  store i64 %4126, i64* %4109, align 4, !dbg !1099
  br label %4131, !dbg !1100

4127:                                             ; preds = %4106
  %4128 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4111, i32 0, i32 0, !dbg !1101
  %4129 = bitcast %union.MemValue* %4128 to i64*, !dbg !1102
  %4130 = load i64, i64* %4129, align 4, !dbg !1103
  store i64 %4130, i64* %4109, align 4, !dbg !1104
  br label %4131, !dbg !1105

4131:                                             ; preds = %4127, %4123
  %4132 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !1106
  %4133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 12, i32 0, !dbg !1107
  %4134 = load %struct.BtCursor*, %struct.BtCursor** %4133, align 8, !dbg !1108
  store i32 0, i32* %4108, align 4, !dbg !1109
  %4135 = load i64, i64* %4109, align 4, !dbg !1110
  %4136 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %4134, %struct.UnpackedRecord* null, i64 %4135, i32 0, i32* %4108), !dbg !1111
  store i32 %4136, i32* %4110, align 4, !dbg !1112
  %4137 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 18, !dbg !1113
  store i64 %4135, i64* %4137, align 4, !dbg !1114
  %4138 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 2, !dbg !1115
  store i8 0, i8* %4138, align 1, !dbg !1116
  %4139 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 9, !dbg !1117
  store i32 0, i32* %4139, align 4, !dbg !1118
  %4140 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 3, !dbg !1119
  store i8 0, i8* %4140, align 1, !dbg !1120
  %4141 = load i32, i32* %4108, align 4, !dbg !1121
  %4142 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4132, i32 0, i32 10, !dbg !1122
  store i32 %4141, i32* %4142, align 4, !dbg !1123
  %4143 = icmp ne i32 %4141, 0, !dbg !1124
  br i1 %4143, label %4144, label %4145, !dbg !1125

4144:                                             ; preds = %4131
  call void @llvm.stackrestore(i8* %4107), !dbg !1126
  br label %8066, !dbg !1127

4145:                                             ; preds = %4131
  %4146 = load i32, i32* %4110, align 4, !dbg !1128
  call void @llvm.stackrestore(i8* %4107), !dbg !1129
  br label %4147, !dbg !1130

4147:                                             ; preds = %4145, %14
  %4148 = call i8* @llvm.stacksave(), !dbg !167
  %4149 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4150 = load i8, i8* %4149, align 1, !dbg !171
  %4151 = alloca i32, align 4, !dbg !172
  store i32 0, i32* %4151, align 4, !dbg !173
  %4152 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4153 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !176
  store %struct.VdbeCursor* %4153, %struct.VdbeCursor** %4152, align 8, !dbg !177
  %4154 = alloca i8*, align 8, !dbg !178
  %4155 = alloca i32, align 4, !dbg !179
  %4156 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4152, i32* %4151), !dbg !180
  %4157 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4152, align 8, !dbg !181
  %4158 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %4159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 16, !dbg !183
  %4160 = load i16, i16* %4159, align 2, !dbg !184
  %4161 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 19, !dbg !185
  %4162 = load i32*, i32** %4161, align 8, !dbg !186
  %4163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 0, !dbg !187
  %4164 = load i8, i8* %4163, align 1, !dbg !188
  %4165 = icmp ne i8 %4164, 3, !dbg !189
  %4166 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 2, !dbg !190
  %4167 = load i8, i8* %4166, align 1, !dbg !191
  %4168 = icmp ne i8 %4167, 0, !dbg !192
  %4169 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 14, !dbg !193
  %4170 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 21, !dbg !194
  %4171 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 22, !dbg !195
  %4172 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 20, !dbg !196
  %4173 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 17, !dbg !197
  %4174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 9, !dbg !198
  %4175 = load i32, i32* %4174, align 4, !dbg !199
  %4176 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4177 = load i32, i32* %4176, align 4, !dbg !201
  %4178 = icmp ne i32 %4175, %4177, !dbg !202
  br i1 %4178, label %4179, label %4221, !dbg !203

4179:                                             ; preds = %4147
  br i1 %4168, label %4201, label %4196, !dbg !204

4180:                                             ; preds = %4196, %4203
  %4181 = load i32, i32* %4176, align 4, !dbg !205
  store i32 %4181, i32* %4174, align 4, !dbg !206
  %4182 = load i8*, i8** %4172, align 8, !dbg !207
  %4183 = load i8, i8* %4182, align 1, !dbg !208
  %4184 = icmp sgt i8 %4183, -1, !dbg !211
  br i1 %4184, label %4185, label %4187, !dbg !212

4185:                                             ; preds = %4180
  %4186 = zext i8 %4183 to i32, !dbg !213
  store i32 %4186, i32* %4162, align 4, !dbg !214
  store i32 1, i32* %4169, align 4, !dbg !215
  br label %4190, !dbg !216

4187:                                             ; preds = %4180
  %4188 = call i8 @sqlite3GetVarint32(i8* %4182, i32* %4162), !dbg !217
  %4189 = zext i8 %4188 to i32, !dbg !218
  store i32 %4189, i32* %4169, align 4, !dbg !219
  br label %4190, !dbg !220

4190:                                             ; preds = %4187, %4185
  store i16 0, i16* %4173, align 2, !dbg !221
  %4191 = load i32, i32* %4171, align 4, !dbg !222
  %4192 = load i32, i32* %4162, align 4, !dbg !223
  %4193 = icmp ult i32 %4191, %4192, !dbg !224
  br i1 %4193, label %4195, label %4194, !dbg !225

4194:                                             ; preds = %4190
  store i8* %4182, i8** %4154, align 8, !dbg !226
  br label %4314, !dbg !227

4195:                                             ; preds = %4190
  store i8* null, i8** %4172, align 8, !dbg !228
  store i32 0, i32* %4171, align 4, !dbg !229
  br label %4221, !dbg !230

4196:                                             ; preds = %4179
  %4197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 12, i32 0, !dbg !231
  %4198 = load %struct.BtCursor*, %struct.BtCursor** %4197, align 8, !dbg !232
  %4199 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4198), !dbg !233
  store i32 %4199, i32* %4170, align 4, !dbg !234
  %4200 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4198, i32* %4171), !dbg !235
  store i8* %4200, i8** %4172, align 8, !dbg !236
  br label %4180, !dbg !237

4201:                                             ; preds = %4179
  %4202 = icmp eq i8 %4164, 3, !dbg !238
  br i1 %4202, label %4203, label %4214, !dbg !239

4203:                                             ; preds = %4201
  %4204 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 10, !dbg !240
  %4205 = load i32, i32* %4204, align 4, !dbg !241
  %4206 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4205, !dbg !242
  %4207 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4206, i32 0, i32 1, !dbg !243
  %4208 = load i16, i16* %4207, align 2, !dbg !244
  %4209 = and i16 %4208, 16, !dbg !245
  %4210 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4206, i32 0, i32 4, !dbg !246
  %4211 = load i32, i32* %4210, align 4, !dbg !247
  store i32 %4211, i32* %4170, align 4, !dbg !248
  store i32 %4211, i32* %4171, align 4, !dbg !249
  %4212 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4206, i32 0, i32 5, !dbg !250
  %4213 = load i8*, i8** %4212, align 8, !dbg !251
  store i8* %4213, i8** %4172, align 8, !dbg !252
  br label %4180, !dbg !253

4214:                                             ; preds = %4201
  %4215 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 1, !dbg !254
  %4216 = load i16, i16* %4215, align 2, !dbg !254
  %4217 = and i16 %4216, 9216, !dbg !254
  %4218 = icmp ne i16 %4217, 0, !dbg !254
  br i1 %4218, label %4219, label %4220, !dbg !254

4219:                                             ; preds = %4214
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4158), !dbg !254
  br label %4402, !dbg !254

4220:                                             ; preds = %4214
  store i16 1, i16* %4215, align 2, !dbg !254
  br label %4402, !dbg !254

4221:                                             ; preds = %4195, %4147
  %4222 = load i16, i16* %4173, align 2, !dbg !255
  %4223 = icmp ule i16 %4222, 4, !dbg !256
  br i1 %4223, label %4306, label %4303, !dbg !257

4224:                                             ; preds = %4303, %4392
  %4225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 1, !dbg !258
  %4226 = load i16, i16* %4225, align 2, !dbg !259
  %4227 = and i16 9216, %4226, !dbg !260
  %4228 = icmp eq i16 0, %4227, !dbg !261
  br i1 %4228, label %4229, label %4233, !dbg !262

4229:                                             ; preds = %4224
  %4230 = icmp ne i16 %4227, 0, !dbg !263
  br i1 %4230, label %4231, label %4232, !dbg !263

4231:                                             ; preds = %4229
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4158), !dbg !263
  br label %4233, !dbg !263

4232:                                             ; preds = %4229
  store i16 1, i16* %4225, align 2, !dbg !263
  br label %4233, !dbg !263

4233:                                             ; preds = %4231, %4232, %4224
  %4234 = load i32, i32* %4155, align 4, !dbg !264
  %4235 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 23, i32 4, !dbg !265
  %4236 = load i32, i32* %4235, align 4, !dbg !266
  %4237 = load i32, i32* %4171, align 4, !dbg !267
  %4238 = getelementptr i32, i32* %4162, i32 5, !dbg !268
  %4239 = load i32, i32* %4238, align 4, !dbg !269
  %4240 = icmp sge i32 %4237, %4239, !dbg !270
  br i1 %4240, label %4241, label %4281, !dbg !271

4241:                                             ; preds = %4233
  %4242 = load i8*, i8** %4172, align 8, !dbg !272
  %4243 = ptrtoint i8* %4242 to i64, !dbg !273
  %4244 = getelementptr i32, i32* %4162, i32 4, !dbg !274
  %4245 = load i32, i32* %4244, align 4, !dbg !275
  %4246 = zext i32 %4245 to i64, !dbg !276
  %4247 = add i64 %4243, %4246, !dbg !277
  %4248 = inttoptr i64 %4247 to i8*, !dbg !278
  store i8* %4248, i8** %4154, align 8, !dbg !279
  %4249 = load i32, i32* %4155, align 4, !dbg !280
  %4250 = icmp ult i32 %4249, 12, !dbg !281
  br i1 %4250, label %4251, label %4253, !dbg !282

4251:                                             ; preds = %4241
  %4252 = call i32 @sqlite3VdbeSerialGet(i8* %4248, i32 %4249, %struct.sqlite3_value* %4158), !dbg !283
  br label %4402, !dbg !284

4253:                                             ; preds = %4241
  %4254 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4254, align 2, !dbg !286
  %4255 = getelementptr i16, i16* %4254, i32 1, !dbg !287
  store i16 514, i16* %4255, align 2, !dbg !288
  %4256 = load i32, i32* %4155, align 4, !dbg !289
  %4257 = sub i32 %4256, 12, !dbg !290
  %4258 = lshr i32 %4257, 1, !dbg !291
  %4259 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 4, !dbg !292
  store i32 %4258, i32* %4259, align 4, !dbg !293
  %4260 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 2, !dbg !294
  store i8 %4150, i8* %4260, align 1, !dbg !295
  %4261 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 5, !dbg !296
  %4262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 7, !dbg !297
  %4263 = load i32, i32* %4262, align 4, !dbg !298
  %4264 = add i32 %4258, 2, !dbg !299
  %4265 = icmp slt i32 %4263, %4264, !dbg !300
  br i1 %4265, label %4266, label %4268, !dbg !301

4266:                                             ; preds = %4253
  store i16 1, i16* %4225, align 2, !dbg !302
  %4267 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4158, i32 %4264, i32 0), !dbg !303
  br label %4271, !dbg !304

4268:                                             ; preds = %4253
  %4269 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 6, !dbg !305
  %4270 = load i8*, i8** %4269, align 8, !dbg !306
  store i8* %4270, i8** %4261, align 8, !dbg !307
  br label %4271, !dbg !308

4271:                                             ; preds = %4268, %4266
  %4272 = zext i32 %4258 to i64, !dbg !309
  %4273 = load i8*, i8** %4261, align 8, !dbg !310
  %4274 = load i8*, i8** %4154, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4273, i8* %4274, i64 %4272, i1 false), !dbg !312
  %4275 = getelementptr i8, i8* %4273, i32 %4258, !dbg !313
  store i8 0, i8* %4275, align 1, !dbg !314
  %4276 = add i32 %4258, 1, !dbg !315
  %4277 = getelementptr i8, i8* %4273, i32 %4276, !dbg !316
  store i8 0, i8* %4277, align 1, !dbg !317
  %4278 = and i32 %4256, 1, !dbg !318
  %4279 = getelementptr i16, i16* %4254, i32 %4278, !dbg !319
  %4280 = load i16, i16* %4279, align 2, !dbg !320
  store i16 %4280, i16* %4225, align 2, !dbg !321
  br label %4402, !dbg !322

4281:                                             ; preds = %4233
  %4282 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 2, !dbg !323
  store i8 %4150, i8* %4282, align 1, !dbg !324
  %4283 = load i32, i32* %4155, align 4, !dbg !325
  %4284 = and i32 %4283, 1, !dbg !326
  %4285 = icmp eq i32 %4284, 0, !dbg !327
  %4286 = icmp sge i32 %4283, 12, !dbg !328
  %4287 = and i1 %4286, %4285, !dbg !329
  %4288 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4283), !dbg !330
  %4289 = icmp eq i32 %4288, 0, !dbg !331
  br i1 %4289, label %4301, label %4290, !dbg !332

4290:                                             ; preds = %4281
  %4291 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 12, i32 0, !dbg !333
  %4292 = load %struct.BtCursor*, %struct.BtCursor** %4291, align 8, !dbg !334
  %4293 = getelementptr i32, i32* %4162, i32 4, !dbg !335
  %4294 = load i32, i32* %4293, align 4, !dbg !336
  %4295 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4292, i32 %4294, i32 %4288, %struct.sqlite3_value* %4158), !dbg !337
  %4296 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 5, !dbg !338
  %4297 = load i8*, i8** %4296, align 8, !dbg !339
  %4298 = call i32 @sqlite3VdbeSerialGet(i8* %4297, i32 %4283, %struct.sqlite3_value* %4158), !dbg !340
  %4299 = load i16, i16* %4225, align 2, !dbg !341
  %4300 = and i16 %4299, -4097, !dbg !342
  store i16 %4300, i16* %4225, align 2, !dbg !343
  br label %4402, !dbg !344

4301:                                             ; preds = %4281
  %4302 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4283, %struct.sqlite3_value* %4158), !dbg !345
  br label %4402, !dbg !346

4303:                                             ; preds = %4221
  %4304 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 23, i32 4, !dbg !347
  %4305 = load i32, i32* %4304, align 4, !dbg !348
  store i32 %4305, i32* %4155, align 4, !dbg !349
  br label %4224, !dbg !350

4306:                                             ; preds = %4221
  %4307 = load i32, i32* %4169, align 4, !dbg !351
  %4308 = load i32, i32* %4162, align 4, !dbg !352
  %4309 = icmp ult i32 %4307, %4308, !dbg !353
  br i1 %4309, label %4310, label %4391, !dbg !354

4310:                                             ; preds = %4306
  %4311 = load i8*, i8** %4172, align 8, !dbg !355
  %4312 = icmp eq i8* %4311, null, !dbg !356
  br i1 %4312, label %4314, label %4313, !dbg !357

4313:                                             ; preds = %4310
  store i8* %4311, i8** %4154, align 8, !dbg !358
  br label %4314, !dbg !359

4314:                                             ; preds = %4313, %4310, %4194
  %4315 = alloca i32, align 4, !dbg !360
  %4316 = load i16, i16* %4173, align 2, !dbg !361
  %4317 = zext i16 %4316 to i32, !dbg !362
  store i32 %4317, i32* %4315, align 4, !dbg !363
  %4318 = alloca i64, align 8, !dbg !364
  %4319 = getelementptr i32, i32* %4162, i32 %4317, !dbg !365
  %4320 = load i32, i32* %4319, align 4, !dbg !366
  %4321 = zext i32 %4320 to i64, !dbg !367
  store i64 %4321, i64* %4318, align 4, !dbg !368
  %4322 = load i8*, i8** %4154, align 8, !dbg !369
  %4323 = load i32, i32* %4169, align 4, !dbg !370
  %4324 = alloca i8*, align 8, !dbg !371
  %4325 = getelementptr i8, i8* %4322, i32 %4323, !dbg !372
  store i8* %4325, i8** %4324, align 8, !dbg !373
  %4326 = load i32, i32* %4162, align 4, !dbg !374
  %4327 = getelementptr i8, i8* %4322, i32 %4326, !dbg !375
  br label %4328, !dbg !376

4328:                                             ; preds = %4335, %4314
  %4329 = load i32, i32* %4315, align 4, !dbg !377
  %4330 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4157, i32 0, i32 23, i32 %4329, !dbg !378
  %4331 = load i8*, i8** %4324, align 8, !dbg !379
  %4332 = load i8, i8* %4331, align 1, !dbg !380
  %4333 = zext i8 %4332 to i32, !dbg !381
  store i32 %4333, i32* %4155, align 4, !dbg !382
  store i32 %4333, i32* %4330, align 4, !dbg !383
  %4334 = icmp sgt i8 %4332, -1, !dbg !384
  br i1 %4334, label %4358, label %4349, !dbg !385

4335:                                             ; preds = %4349, %4358
  %4336 = load i32, i32* %4315, align 4, !dbg !386
  %4337 = add i32 %4336, 1, !dbg !387
  store i32 %4337, i32* %4315, align 4, !dbg !388
  %4338 = load i64, i64* %4318, align 4, !dbg !389
  %4339 = and i64 4294967295, %4338, !dbg !390
  %4340 = trunc i64 %4339 to i32, !dbg !391
  %4341 = getelementptr i32, i32* %4162, i32 %4337, !dbg !392
  store i32 %4340, i32* %4341, align 4, !dbg !393
  %4342 = load i32, i32* %4315, align 4, !dbg !394
  %4343 = icmp sle i32 %4342, 4, !dbg !395
  %4344 = load i8*, i8** %4324, align 8, !dbg !396
  %4345 = ptrtoint i8* %4344 to i64, !dbg !397
  %4346 = ptrtoint i8* %4327 to i64, !dbg !398
  %4347 = icmp ult i64 %4345, %4346, !dbg !399
  %4348 = and i1 %4343, %4347, !dbg !400
  br i1 %4348, label %4328, label %4367, !dbg !401

4349:                                             ; preds = %4328
  %4350 = load i8*, i8** %4324, align 8, !dbg !402
  %4351 = call i8 @sqlite3GetVarint32(i8* %4350, i32* %4155), !dbg !403
  %4352 = getelementptr i8, i8* %4350, i8 %4351, !dbg !404
  store i8* %4352, i8** %4324, align 8, !dbg !405
  %4353 = load i32, i32* %4155, align 4, !dbg !406
  store i32 %4353, i32* %4330, align 4, !dbg !407
  %4354 = load i64, i64* %4318, align 4, !dbg !408
  %4355 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4353), !dbg !409
  %4356 = zext i32 %4355 to i64, !dbg !410
  %4357 = add i64 %4354, %4356, !dbg !411
  store i64 %4357, i64* %4318, align 4, !dbg !412
  br label %4335, !dbg !413

4358:                                             ; preds = %4328
  %4359 = getelementptr i8, i8* %4331, i32 1, !dbg !414
  store i8* %4359, i8** %4324, align 8, !dbg !415
  %4360 = load i32, i32* %4155, align 4, !dbg !416
  %4361 = trunc i32 %4360 to i8, !dbg !417
  %4362 = getelementptr i8, i8* %4, i8 %4361, !dbg !418
  %4363 = load i8, i8* %4362, align 1, !dbg !419
  %4364 = zext i8 %4363 to i64, !dbg !420
  %4365 = load i64, i64* %4318, align 4, !dbg !421
  %4366 = add i64 %4365, %4364, !dbg !422
  store i64 %4366, i64* %4318, align 4, !dbg !423
  br label %4335, !dbg !424

4367:                                             ; preds = %4335
  %4368 = load i64, i64* %4318, align 4, !dbg !425
  %4369 = load i32, i32* %4170, align 4, !dbg !426
  %4370 = zext i32 %4369 to i64, !dbg !427
  %4371 = icmp uge i64 %4345, %4346, !dbg !428
  %4372 = icmp ugt i64 %4345, %4346, !dbg !429
  %4373 = icmp ne i64 %4368, %4370, !dbg !430
  %4374 = icmp ugt i64 %4368, %4370, !dbg !431
  %4375 = or i1 %4372, %4373, !dbg !432
  %4376 = and i1 %4371, %4375, !dbg !433
  %4377 = or i1 %4376, %4374, !dbg !434
  br i1 %4377, label %4378, label %4382, !dbg !435

4378:                                             ; preds = %4367
  %4379 = load i32, i32* %4162, align 4, !dbg !436
  %4380 = icmp eq i32 %4379, 0, !dbg !437
  br i1 %4380, label %4381, label %4382, !dbg !438

4381:                                             ; preds = %4378
  store i32 0, i32* %4315, align 4, !dbg !439
  store i8* %4327, i8** %4324, align 8, !dbg !440
  br label %4382, !dbg !441

4382:                                             ; preds = %4381, %4378, %4367
  %4383 = load i32, i32* %4315, align 4, !dbg !442
  %4384 = trunc i32 %4383 to i16, !dbg !443
  store i16 %4384, i16* %4173, align 2, !dbg !444
  %4385 = load i8*, i8** %4324, align 8, !dbg !445
  %4386 = ptrtoint i8* %4385 to i64, !dbg !446
  %4387 = load i8*, i8** %4154, align 8, !dbg !447
  %4388 = ptrtoint i8* %4387 to i64, !dbg !448
  %4389 = sub i64 %4386, %4388, !dbg !449
  %4390 = trunc i64 %4389 to i32, !dbg !450
  store i32 %4390, i32* %4169, align 4, !dbg !451
  br label %4392, !dbg !452

4391:                                             ; preds = %4306
  store i32 0, i32* %4155, align 4, !dbg !453
  br label %4392, !dbg !454

4392:                                             ; preds = %4382, %4391
  %4393 = load i16, i16* %4173, align 2, !dbg !455
  %4394 = icmp sle i16 %4393, 4, !dbg !456
  br i1 %4394, label %4395, label %4224, !dbg !457

4395:                                             ; preds = %4392
  %4396 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4158, i32 0, i32 1, !dbg !458
  %4397 = load i16, i16* %4396, align 2, !dbg !458
  %4398 = and i16 %4397, 9216, !dbg !458
  %4399 = icmp ne i16 %4398, 0, !dbg !458
  br i1 %4399, label %4400, label %4401, !dbg !458

4400:                                             ; preds = %4395
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4158), !dbg !458
  br label %4402, !dbg !458

4401:                                             ; preds = %4395
  store i16 1, i16* %4396, align 2, !dbg !458
  br label %4402, !dbg !458

4402:                                             ; preds = %4400, %4401, %4271, %4251, %4290, %4301, %4219, %4220
  call void @llvm.stackrestore(i8* %4148), !dbg !459
  br label %4403, !dbg !74

4403:                                             ; preds = %4402, %14
  %4404 = call i8* @llvm.stacksave(), !dbg !460
  %4405 = alloca i32, align 8, !dbg !463
  %4406 = alloca i32, align 8, !dbg !464
  %4407 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 29, !dbg !465
  %4408 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %4409 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 1, !dbg !467
  %4410 = load i16, i16* %4409, align 2, !dbg !468
  %4411 = alloca i16, align 8, !dbg !469
  store i16 %4410, i16* %4411, align 2, !dbg !470
  %4412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 1, !dbg !471
  %4413 = load i16, i16* %4412, align 2, !dbg !472
  %4414 = alloca i16, align 8, !dbg !473
  store i16 %4413, i16* %4414, align 2, !dbg !474
  %4415 = or i16 %4410, %4413, !dbg !475
  %4416 = and i16 %4415, 1, !dbg !476
  %4417 = icmp ne i16 %4416, 0, !dbg !477
  br i1 %4417, label %4418, label %4419, !dbg !478

4418:                                             ; preds = %4403
  call void @llvm.stackrestore(i8* %4404), !dbg !479
  call void @llvm.stackrestore(i8* %4404), !dbg !480
  br label %4883, !dbg !481

4419:                                             ; preds = %4403
  %4420 = and i16 %4415, 2, !dbg !1131
  %4421 = icmp ne i16 %4420, 0, !dbg !1132
  br i1 %4421, label %4422, label %4479, !dbg !1133

4422:                                             ; preds = %4419
  %4423 = and i16 %4410, 46, !dbg !1134
  %4424 = icmp eq i16 %4423, 2, !dbg !1135
  br i1 %4424, label %4425, label %4451, !dbg !1136

4425:                                             ; preds = %4422
  %4426 = call i8* @llvm.stacksave(), !dbg !1137
  %4427 = alloca double, align 8, !dbg !960
  %4428 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 0, i32 0, !dbg !1137
  %4429 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 2, !dbg !1137
  %4430 = load i8, i8* %4429, align 1, !dbg !1137
  %4431 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 5, !dbg !1137
  %4432 = load i8*, i8** %4431, align 8, !dbg !1137
  %4433 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 4, !dbg !1137
  %4434 = load i32, i32* %4433, align 4, !dbg !1137
  %4435 = call i32 @sqlite3AtoF(i8* %4432, double* %4427, i32 %4434, i8 %4430), !dbg !1137
  %4436 = icmp sle i32 %4435, 0, !dbg !1137
  br i1 %4436, label %4449, label %4437, !dbg !1137

4437:                                             ; preds = %4425
  %4438 = icmp eq i32 %4435, 1, !dbg !1137
  %4439 = load double, double* %4427, align 8, !dbg !1137
  br i1 %4438, label %4440, label %4443, !dbg !1137

4440:                                             ; preds = %4437
  %4441 = load i16, i16* %4409, align 2, !dbg !1137
  %4442 = or i16 %4441, 4, !dbg !1137
  store i16 %4442, i16* %4409, align 2, !dbg !1137
  br label %4446, !dbg !1137

4443:                                             ; preds = %4437
  store double %4439, double* %4428, align 8, !dbg !1137
  %4444 = load i16, i16* %4409, align 2, !dbg !1137
  %4445 = or i16 %4444, 8, !dbg !1137
  store i16 %4445, i16* %4409, align 2, !dbg !1137
  br label %4446, !dbg !1137

4446:                                             ; preds = %4443, %4440
  %4447 = load i16, i16* %4409, align 2, !dbg !1137
  %4448 = and i16 %4447, -3, !dbg !1137
  store i16 %4448, i16* %4409, align 2, !dbg !1137
  br label %4449, !dbg !1137

4449:                                             ; preds = %4446, %4425
  call void @llvm.stackrestore(i8* %4426), !dbg !1137
  %4450 = load i16, i16* %4412, align 2, !dbg !1138
  store i16 %4450, i16* %4414, align 2, !dbg !1139
  br label %4451, !dbg !1140

4451:                                             ; preds = %4449, %4422
  %4452 = and i16 %4413, 46, !dbg !1141
  %4453 = icmp eq i16 %4452, 2, !dbg !1142
  br i1 %4453, label %4454, label %4479, !dbg !1143

4454:                                             ; preds = %4451
  %4455 = call i8* @llvm.stacksave(), !dbg !1144
  %4456 = alloca double, align 8, !dbg !960
  %4457 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 0, i32 0, !dbg !1144
  %4458 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 2, !dbg !1144
  %4459 = load i8, i8* %4458, align 1, !dbg !1144
  %4460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 5, !dbg !1144
  %4461 = load i8*, i8** %4460, align 8, !dbg !1144
  %4462 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 4, !dbg !1144
  %4463 = load i32, i32* %4462, align 4, !dbg !1144
  %4464 = call i32 @sqlite3AtoF(i8* %4461, double* %4456, i32 %4463, i8 %4459), !dbg !1144
  %4465 = icmp sle i32 %4464, 0, !dbg !1144
  br i1 %4465, label %4478, label %4466, !dbg !1144

4466:                                             ; preds = %4454
  %4467 = icmp eq i32 %4464, 1, !dbg !1144
  %4468 = load double, double* %4456, align 8, !dbg !1144
  br i1 %4467, label %4469, label %4472, !dbg !1144

4469:                                             ; preds = %4466
  %4470 = load i16, i16* %4412, align 2, !dbg !1144
  %4471 = or i16 %4470, 4, !dbg !1144
  store i16 %4471, i16* %4412, align 2, !dbg !1144
  br label %4475, !dbg !1144

4472:                                             ; preds = %4466
  store double %4468, double* %4457, align 8, !dbg !1144
  %4473 = load i16, i16* %4412, align 2, !dbg !1144
  %4474 = or i16 %4473, 8, !dbg !1144
  store i16 %4474, i16* %4412, align 2, !dbg !1144
  br label %4475, !dbg !1144

4475:                                             ; preds = %4472, %4469
  %4476 = load i16, i16* %4412, align 2, !dbg !1144
  %4477 = and i16 %4476, -3, !dbg !1144
  store i16 %4477, i16* %4412, align 2, !dbg !1144
  br label %4478, !dbg !1144

4478:                                             ; preds = %4475, %4454
  call void @llvm.stackrestore(i8* %4455), !dbg !1144
  br label %4479, !dbg !1145

4479:                                             ; preds = %4451, %4478, %4419
  %4480 = load i16, i16* %4409, align 2, !dbg !1146
  %4481 = load i16, i16* %4412, align 2, !dbg !1147
  %4482 = and i16 %4480, %4481, !dbg !1148
  %4483 = and i16 %4482, 4, !dbg !1149
  %4484 = icmp ne i16 %4483, 0, !dbg !1150
  br i1 %4484, label %4485, label %4498, !dbg !1151

4485:                                             ; preds = %4479
  %4486 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4407, i32 0, i32 0, !dbg !1152
  %4487 = bitcast %union.MemValue* %4486 to i64*, !dbg !1153
  %4488 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4408, i32 0, i32 0, !dbg !1154
  %4489 = bitcast %union.MemValue* %4488 to i64*, !dbg !1155
  %4490 = load i64, i64* %4487, align 4, !dbg !1156
  %4491 = load i64, i64* %4489, align 4, !dbg !1157
  %4492 = icmp sgt i64 %4491, %4490, !dbg !1158
  br i1 %4492, label %4493, label %4494, !dbg !1159

4493:                                             ; preds = %4485
  store i32 1, i32* %4405, align 4, !dbg !1160
  br label %4504, !dbg !1161

4494:                                             ; preds = %4485
  %4495 = icmp slt i64 %4491, %4490, !dbg !1162
  br i1 %4495, label %4496, label %4497, !dbg !1163

4496:                                             ; preds = %4494
  store i32 -1, i32* %4405, align 4, !dbg !1164
  br label %4504, !dbg !1165

4497:                                             ; preds = %4494
  store i32 0, i32* %4405, align 4, !dbg !1166
  br label %4504, !dbg !1167

4498:                                             ; preds = %4479
  %4499 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 39, !dbg !506
  %4500 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4499, i32 0, i32 6, !dbg !507
  %4501 = bitcast %union.p4union* %4500 to %struct.CollSeq**, !dbg !508
  %4502 = load %struct.CollSeq*, %struct.CollSeq** %4501, align 8, !dbg !509
  %4503 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %4408, %struct.sqlite3_value* %4407, %struct.CollSeq* %4502), !dbg !510
  store i32 %4503, i32* %4405, align 4, !dbg !511
  br label %4504, !dbg !1168

4504:                                             ; preds = %4496, %4497, %4498, %4493
  %4505 = load i32, i32* %4405, align 4, !dbg !1169
  %4506 = icmp slt i32 %4505, 0, !dbg !512
  br i1 %4506, label %4507, label %4508, !dbg !513

4507:                                             ; preds = %4504
  store i32 0, i32* %4406, align 4, !dbg !514
  br label %4512, !dbg !515

4508:                                             ; preds = %4504
  %4509 = icmp eq i32 %4505, 0, !dbg !516
  br i1 %4509, label %4510, label %4511, !dbg !517

4510:                                             ; preds = %4508
  store i32 1, i32* %4406, align 4, !dbg !518
  br label %4512, !dbg !519

4511:                                             ; preds = %4508
  store i32 0, i32* %4406, align 4, !dbg !520
  br label %4512, !dbg !521

4512:                                             ; preds = %4511, %4510, %4507
  store i16 %4413, i16* %4414, align 2, !dbg !522
  store i16 %4410, i16* %4411, align 2, !dbg !523
  %4513 = load i32, i32* %4406, align 4, !dbg !524
  %4514 = icmp ne i32 %4513, 0, !dbg !525
  call void @llvm.stackrestore(i8* %4404), !dbg !526
  br i1 %4514, label %4883, label %4515, !dbg !527

4515:                                             ; preds = %4512, %14
  %4516 = call i8* @llvm.stacksave(), !dbg !167
  %4517 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4518 = load i8, i8* %4517, align 1, !dbg !171
  %4519 = alloca i32, align 4, !dbg !172
  store i32 0, i32* %4519, align 4, !dbg !173
  %4520 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4521 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !176
  store %struct.VdbeCursor* %4521, %struct.VdbeCursor** %4520, align 8, !dbg !177
  %4522 = alloca i8*, align 8, !dbg !178
  %4523 = alloca i32, align 4, !dbg !179
  %4524 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4520, i32* %4519), !dbg !180
  %4525 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4520, align 8, !dbg !181
  %4526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %4527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 16, !dbg !183
  %4528 = load i16, i16* %4527, align 2, !dbg !184
  %4529 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 19, !dbg !185
  %4530 = load i32*, i32** %4529, align 8, !dbg !186
  %4531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 0, !dbg !187
  %4532 = load i8, i8* %4531, align 1, !dbg !188
  %4533 = icmp ne i8 %4532, 3, !dbg !189
  %4534 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 2, !dbg !190
  %4535 = load i8, i8* %4534, align 1, !dbg !191
  %4536 = icmp ne i8 %4535, 0, !dbg !192
  %4537 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 14, !dbg !193
  %4538 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 21, !dbg !194
  %4539 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 22, !dbg !195
  %4540 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 20, !dbg !196
  %4541 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 17, !dbg !197
  %4542 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 9, !dbg !198
  %4543 = load i32, i32* %4542, align 4, !dbg !199
  %4544 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4545 = load i32, i32* %4544, align 4, !dbg !201
  %4546 = icmp ne i32 %4543, %4545, !dbg !202
  br i1 %4546, label %4547, label %4589, !dbg !203

4547:                                             ; preds = %4515
  br i1 %4536, label %4569, label %4564, !dbg !204

4548:                                             ; preds = %4564, %4571
  %4549 = load i32, i32* %4544, align 4, !dbg !205
  store i32 %4549, i32* %4542, align 4, !dbg !206
  %4550 = load i8*, i8** %4540, align 8, !dbg !207
  %4551 = load i8, i8* %4550, align 1, !dbg !208
  %4552 = icmp sgt i8 %4551, -1, !dbg !211
  br i1 %4552, label %4553, label %4555, !dbg !212

4553:                                             ; preds = %4548
  %4554 = zext i8 %4551 to i32, !dbg !213
  store i32 %4554, i32* %4530, align 4, !dbg !214
  store i32 1, i32* %4537, align 4, !dbg !215
  br label %4558, !dbg !216

4555:                                             ; preds = %4548
  %4556 = call i8 @sqlite3GetVarint32(i8* %4550, i32* %4530), !dbg !217
  %4557 = zext i8 %4556 to i32, !dbg !218
  store i32 %4557, i32* %4537, align 4, !dbg !219
  br label %4558, !dbg !220

4558:                                             ; preds = %4555, %4553
  store i16 0, i16* %4541, align 2, !dbg !221
  %4559 = load i32, i32* %4539, align 4, !dbg !222
  %4560 = load i32, i32* %4530, align 4, !dbg !223
  %4561 = icmp ult i32 %4559, %4560, !dbg !224
  br i1 %4561, label %4563, label %4562, !dbg !225

4562:                                             ; preds = %4558
  store i8* %4550, i8** %4522, align 8, !dbg !226
  br label %4682, !dbg !227

4563:                                             ; preds = %4558
  store i8* null, i8** %4540, align 8, !dbg !228
  store i32 0, i32* %4539, align 4, !dbg !229
  br label %4589, !dbg !230

4564:                                             ; preds = %4547
  %4565 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 12, i32 0, !dbg !231
  %4566 = load %struct.BtCursor*, %struct.BtCursor** %4565, align 8, !dbg !232
  %4567 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4566), !dbg !233
  store i32 %4567, i32* %4538, align 4, !dbg !234
  %4568 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4566, i32* %4539), !dbg !235
  store i8* %4568, i8** %4540, align 8, !dbg !236
  br label %4548, !dbg !237

4569:                                             ; preds = %4547
  %4570 = icmp eq i8 %4532, 3, !dbg !238
  br i1 %4570, label %4571, label %4582, !dbg !239

4571:                                             ; preds = %4569
  %4572 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 10, !dbg !240
  %4573 = load i32, i32* %4572, align 4, !dbg !241
  %4574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4573, !dbg !242
  %4575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4574, i32 0, i32 1, !dbg !243
  %4576 = load i16, i16* %4575, align 2, !dbg !244
  %4577 = and i16 %4576, 16, !dbg !245
  %4578 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4574, i32 0, i32 4, !dbg !246
  %4579 = load i32, i32* %4578, align 4, !dbg !247
  store i32 %4579, i32* %4538, align 4, !dbg !248
  store i32 %4579, i32* %4539, align 4, !dbg !249
  %4580 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4574, i32 0, i32 5, !dbg !250
  %4581 = load i8*, i8** %4580, align 8, !dbg !251
  store i8* %4581, i8** %4540, align 8, !dbg !252
  br label %4548, !dbg !253

4582:                                             ; preds = %4569
  %4583 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 1, !dbg !254
  %4584 = load i16, i16* %4583, align 2, !dbg !254
  %4585 = and i16 %4584, 9216, !dbg !254
  %4586 = icmp ne i16 %4585, 0, !dbg !254
  br i1 %4586, label %4587, label %4588, !dbg !254

4587:                                             ; preds = %4582
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4526), !dbg !254
  br label %4770, !dbg !254

4588:                                             ; preds = %4582
  store i16 1, i16* %4583, align 2, !dbg !254
  br label %4770, !dbg !254

4589:                                             ; preds = %4563, %4515
  %4590 = load i16, i16* %4541, align 2, !dbg !255
  %4591 = icmp ule i16 %4590, 4, !dbg !256
  br i1 %4591, label %4674, label %4671, !dbg !257

4592:                                             ; preds = %4671, %4760
  %4593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 1, !dbg !258
  %4594 = load i16, i16* %4593, align 2, !dbg !259
  %4595 = and i16 9216, %4594, !dbg !260
  %4596 = icmp eq i16 0, %4595, !dbg !261
  br i1 %4596, label %4597, label %4601, !dbg !262

4597:                                             ; preds = %4592
  %4598 = icmp ne i16 %4595, 0, !dbg !263
  br i1 %4598, label %4599, label %4600, !dbg !263

4599:                                             ; preds = %4597
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4526), !dbg !263
  br label %4601, !dbg !263

4600:                                             ; preds = %4597
  store i16 1, i16* %4593, align 2, !dbg !263
  br label %4601, !dbg !263

4601:                                             ; preds = %4599, %4600, %4592
  %4602 = load i32, i32* %4523, align 4, !dbg !264
  %4603 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 23, i32 4, !dbg !265
  %4604 = load i32, i32* %4603, align 4, !dbg !266
  %4605 = load i32, i32* %4539, align 4, !dbg !267
  %4606 = getelementptr i32, i32* %4530, i32 5, !dbg !268
  %4607 = load i32, i32* %4606, align 4, !dbg !269
  %4608 = icmp sge i32 %4605, %4607, !dbg !270
  br i1 %4608, label %4609, label %4649, !dbg !271

4609:                                             ; preds = %4601
  %4610 = load i8*, i8** %4540, align 8, !dbg !272
  %4611 = ptrtoint i8* %4610 to i64, !dbg !273
  %4612 = getelementptr i32, i32* %4530, i32 4, !dbg !274
  %4613 = load i32, i32* %4612, align 4, !dbg !275
  %4614 = zext i32 %4613 to i64, !dbg !276
  %4615 = add i64 %4611, %4614, !dbg !277
  %4616 = inttoptr i64 %4615 to i8*, !dbg !278
  store i8* %4616, i8** %4522, align 8, !dbg !279
  %4617 = load i32, i32* %4523, align 4, !dbg !280
  %4618 = icmp ult i32 %4617, 12, !dbg !281
  br i1 %4618, label %4619, label %4621, !dbg !282

4619:                                             ; preds = %4609
  %4620 = call i32 @sqlite3VdbeSerialGet(i8* %4616, i32 %4617, %struct.sqlite3_value* %4526), !dbg !283
  br label %4770, !dbg !284

4621:                                             ; preds = %4609
  %4622 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4622, align 2, !dbg !286
  %4623 = getelementptr i16, i16* %4622, i32 1, !dbg !287
  store i16 514, i16* %4623, align 2, !dbg !288
  %4624 = load i32, i32* %4523, align 4, !dbg !289
  %4625 = sub i32 %4624, 12, !dbg !290
  %4626 = lshr i32 %4625, 1, !dbg !291
  %4627 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 4, !dbg !292
  store i32 %4626, i32* %4627, align 4, !dbg !293
  %4628 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 2, !dbg !294
  store i8 %4518, i8* %4628, align 1, !dbg !295
  %4629 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 5, !dbg !296
  %4630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 7, !dbg !297
  %4631 = load i32, i32* %4630, align 4, !dbg !298
  %4632 = add i32 %4626, 2, !dbg !299
  %4633 = icmp slt i32 %4631, %4632, !dbg !300
  br i1 %4633, label %4634, label %4636, !dbg !301

4634:                                             ; preds = %4621
  store i16 1, i16* %4593, align 2, !dbg !302
  %4635 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4526, i32 %4632, i32 0), !dbg !303
  br label %4639, !dbg !304

4636:                                             ; preds = %4621
  %4637 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 6, !dbg !305
  %4638 = load i8*, i8** %4637, align 8, !dbg !306
  store i8* %4638, i8** %4629, align 8, !dbg !307
  br label %4639, !dbg !308

4639:                                             ; preds = %4636, %4634
  %4640 = zext i32 %4626 to i64, !dbg !309
  %4641 = load i8*, i8** %4629, align 8, !dbg !310
  %4642 = load i8*, i8** %4522, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4641, i8* %4642, i64 %4640, i1 false), !dbg !312
  %4643 = getelementptr i8, i8* %4641, i32 %4626, !dbg !313
  store i8 0, i8* %4643, align 1, !dbg !314
  %4644 = add i32 %4626, 1, !dbg !315
  %4645 = getelementptr i8, i8* %4641, i32 %4644, !dbg !316
  store i8 0, i8* %4645, align 1, !dbg !317
  %4646 = and i32 %4624, 1, !dbg !318
  %4647 = getelementptr i16, i16* %4622, i32 %4646, !dbg !319
  %4648 = load i16, i16* %4647, align 2, !dbg !320
  store i16 %4648, i16* %4593, align 2, !dbg !321
  br label %4770, !dbg !322

4649:                                             ; preds = %4601
  %4650 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 2, !dbg !323
  store i8 %4518, i8* %4650, align 1, !dbg !324
  %4651 = load i32, i32* %4523, align 4, !dbg !325
  %4652 = and i32 %4651, 1, !dbg !326
  %4653 = icmp eq i32 %4652, 0, !dbg !327
  %4654 = icmp sge i32 %4651, 12, !dbg !328
  %4655 = and i1 %4654, %4653, !dbg !329
  %4656 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4651), !dbg !330
  %4657 = icmp eq i32 %4656, 0, !dbg !331
  br i1 %4657, label %4669, label %4658, !dbg !332

4658:                                             ; preds = %4649
  %4659 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 12, i32 0, !dbg !333
  %4660 = load %struct.BtCursor*, %struct.BtCursor** %4659, align 8, !dbg !334
  %4661 = getelementptr i32, i32* %4530, i32 4, !dbg !335
  %4662 = load i32, i32* %4661, align 4, !dbg !336
  %4663 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4660, i32 %4662, i32 %4656, %struct.sqlite3_value* %4526), !dbg !337
  %4664 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 5, !dbg !338
  %4665 = load i8*, i8** %4664, align 8, !dbg !339
  %4666 = call i32 @sqlite3VdbeSerialGet(i8* %4665, i32 %4651, %struct.sqlite3_value* %4526), !dbg !340
  %4667 = load i16, i16* %4593, align 2, !dbg !341
  %4668 = and i16 %4667, -4097, !dbg !342
  store i16 %4668, i16* %4593, align 2, !dbg !343
  br label %4770, !dbg !344

4669:                                             ; preds = %4649
  %4670 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4651, %struct.sqlite3_value* %4526), !dbg !345
  br label %4770, !dbg !346

4671:                                             ; preds = %4589
  %4672 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 23, i32 4, !dbg !347
  %4673 = load i32, i32* %4672, align 4, !dbg !348
  store i32 %4673, i32* %4523, align 4, !dbg !349
  br label %4592, !dbg !350

4674:                                             ; preds = %4589
  %4675 = load i32, i32* %4537, align 4, !dbg !351
  %4676 = load i32, i32* %4530, align 4, !dbg !352
  %4677 = icmp ult i32 %4675, %4676, !dbg !353
  br i1 %4677, label %4678, label %4759, !dbg !354

4678:                                             ; preds = %4674
  %4679 = load i8*, i8** %4540, align 8, !dbg !355
  %4680 = icmp eq i8* %4679, null, !dbg !356
  br i1 %4680, label %4682, label %4681, !dbg !357

4681:                                             ; preds = %4678
  store i8* %4679, i8** %4522, align 8, !dbg !358
  br label %4682, !dbg !359

4682:                                             ; preds = %4681, %4678, %4562
  %4683 = alloca i32, align 4, !dbg !360
  %4684 = load i16, i16* %4541, align 2, !dbg !361
  %4685 = zext i16 %4684 to i32, !dbg !362
  store i32 %4685, i32* %4683, align 4, !dbg !363
  %4686 = alloca i64, align 8, !dbg !364
  %4687 = getelementptr i32, i32* %4530, i32 %4685, !dbg !365
  %4688 = load i32, i32* %4687, align 4, !dbg !366
  %4689 = zext i32 %4688 to i64, !dbg !367
  store i64 %4689, i64* %4686, align 4, !dbg !368
  %4690 = load i8*, i8** %4522, align 8, !dbg !369
  %4691 = load i32, i32* %4537, align 4, !dbg !370
  %4692 = alloca i8*, align 8, !dbg !371
  %4693 = getelementptr i8, i8* %4690, i32 %4691, !dbg !372
  store i8* %4693, i8** %4692, align 8, !dbg !373
  %4694 = load i32, i32* %4530, align 4, !dbg !374
  %4695 = getelementptr i8, i8* %4690, i32 %4694, !dbg !375
  br label %4696, !dbg !376

4696:                                             ; preds = %4703, %4682
  %4697 = load i32, i32* %4683, align 4, !dbg !377
  %4698 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4525, i32 0, i32 23, i32 %4697, !dbg !378
  %4699 = load i8*, i8** %4692, align 8, !dbg !379
  %4700 = load i8, i8* %4699, align 1, !dbg !380
  %4701 = zext i8 %4700 to i32, !dbg !381
  store i32 %4701, i32* %4523, align 4, !dbg !382
  store i32 %4701, i32* %4698, align 4, !dbg !383
  %4702 = icmp sgt i8 %4700, -1, !dbg !384
  br i1 %4702, label %4726, label %4717, !dbg !385

4703:                                             ; preds = %4717, %4726
  %4704 = load i32, i32* %4683, align 4, !dbg !386
  %4705 = add i32 %4704, 1, !dbg !387
  store i32 %4705, i32* %4683, align 4, !dbg !388
  %4706 = load i64, i64* %4686, align 4, !dbg !389
  %4707 = and i64 4294967295, %4706, !dbg !390
  %4708 = trunc i64 %4707 to i32, !dbg !391
  %4709 = getelementptr i32, i32* %4530, i32 %4705, !dbg !392
  store i32 %4708, i32* %4709, align 4, !dbg !393
  %4710 = load i32, i32* %4683, align 4, !dbg !394
  %4711 = icmp sle i32 %4710, 4, !dbg !395
  %4712 = load i8*, i8** %4692, align 8, !dbg !396
  %4713 = ptrtoint i8* %4712 to i64, !dbg !397
  %4714 = ptrtoint i8* %4695 to i64, !dbg !398
  %4715 = icmp ult i64 %4713, %4714, !dbg !399
  %4716 = and i1 %4711, %4715, !dbg !400
  br i1 %4716, label %4696, label %4735, !dbg !401

4717:                                             ; preds = %4696
  %4718 = load i8*, i8** %4692, align 8, !dbg !402
  %4719 = call i8 @sqlite3GetVarint32(i8* %4718, i32* %4523), !dbg !403
  %4720 = getelementptr i8, i8* %4718, i8 %4719, !dbg !404
  store i8* %4720, i8** %4692, align 8, !dbg !405
  %4721 = load i32, i32* %4523, align 4, !dbg !406
  store i32 %4721, i32* %4698, align 4, !dbg !407
  %4722 = load i64, i64* %4686, align 4, !dbg !408
  %4723 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4721), !dbg !409
  %4724 = zext i32 %4723 to i64, !dbg !410
  %4725 = add i64 %4722, %4724, !dbg !411
  store i64 %4725, i64* %4686, align 4, !dbg !412
  br label %4703, !dbg !413

4726:                                             ; preds = %4696
  %4727 = getelementptr i8, i8* %4699, i32 1, !dbg !414
  store i8* %4727, i8** %4692, align 8, !dbg !415
  %4728 = load i32, i32* %4523, align 4, !dbg !416
  %4729 = trunc i32 %4728 to i8, !dbg !417
  %4730 = getelementptr i8, i8* %4, i8 %4729, !dbg !418
  %4731 = load i8, i8* %4730, align 1, !dbg !419
  %4732 = zext i8 %4731 to i64, !dbg !420
  %4733 = load i64, i64* %4686, align 4, !dbg !421
  %4734 = add i64 %4733, %4732, !dbg !422
  store i64 %4734, i64* %4686, align 4, !dbg !423
  br label %4703, !dbg !424

4735:                                             ; preds = %4703
  %4736 = load i64, i64* %4686, align 4, !dbg !425
  %4737 = load i32, i32* %4538, align 4, !dbg !426
  %4738 = zext i32 %4737 to i64, !dbg !427
  %4739 = icmp uge i64 %4713, %4714, !dbg !428
  %4740 = icmp ugt i64 %4713, %4714, !dbg !429
  %4741 = icmp ne i64 %4736, %4738, !dbg !430
  %4742 = icmp ugt i64 %4736, %4738, !dbg !431
  %4743 = or i1 %4740, %4741, !dbg !432
  %4744 = and i1 %4739, %4743, !dbg !433
  %4745 = or i1 %4744, %4742, !dbg !434
  br i1 %4745, label %4746, label %4750, !dbg !435

4746:                                             ; preds = %4735
  %4747 = load i32, i32* %4530, align 4, !dbg !436
  %4748 = icmp eq i32 %4747, 0, !dbg !437
  br i1 %4748, label %4749, label %4750, !dbg !438

4749:                                             ; preds = %4746
  store i32 0, i32* %4683, align 4, !dbg !439
  store i8* %4695, i8** %4692, align 8, !dbg !440
  br label %4750, !dbg !441

4750:                                             ; preds = %4749, %4746, %4735
  %4751 = load i32, i32* %4683, align 4, !dbg !442
  %4752 = trunc i32 %4751 to i16, !dbg !443
  store i16 %4752, i16* %4541, align 2, !dbg !444
  %4753 = load i8*, i8** %4692, align 8, !dbg !445
  %4754 = ptrtoint i8* %4753 to i64, !dbg !446
  %4755 = load i8*, i8** %4522, align 8, !dbg !447
  %4756 = ptrtoint i8* %4755 to i64, !dbg !448
  %4757 = sub i64 %4754, %4756, !dbg !449
  %4758 = trunc i64 %4757 to i32, !dbg !450
  store i32 %4758, i32* %4537, align 4, !dbg !451
  br label %4760, !dbg !452

4759:                                             ; preds = %4674
  store i32 0, i32* %4523, align 4, !dbg !453
  br label %4760, !dbg !454

4760:                                             ; preds = %4750, %4759
  %4761 = load i16, i16* %4541, align 2, !dbg !455
  %4762 = icmp sle i16 %4761, 4, !dbg !456
  br i1 %4762, label %4763, label %4592, !dbg !457

4763:                                             ; preds = %4760
  %4764 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4526, i32 0, i32 1, !dbg !458
  %4765 = load i16, i16* %4764, align 2, !dbg !458
  %4766 = and i16 %4765, 9216, !dbg !458
  %4767 = icmp ne i16 %4766, 0, !dbg !458
  br i1 %4767, label %4768, label %4769, !dbg !458

4768:                                             ; preds = %4763
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4526), !dbg !458
  br label %4770, !dbg !458

4769:                                             ; preds = %4763
  store i16 1, i16* %4764, align 2, !dbg !458
  br label %4770, !dbg !458

4770:                                             ; preds = %4768, %4769, %4639, %4619, %4658, %4669, %4587, %4588
  call void @llvm.stackrestore(i8* %4516), !dbg !459
  br label %4771, !dbg !74

4771:                                             ; preds = %4770, %14
  %4772 = call i8* @llvm.stacksave(), !dbg !460
  %4773 = alloca i32, align 8, !dbg !463
  %4774 = alloca i32, align 8, !dbg !464
  %4775 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !465
  %4776 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %4777 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 1, !dbg !467
  %4778 = load i16, i16* %4777, align 2, !dbg !468
  %4779 = alloca i16, align 8, !dbg !469
  store i16 %4778, i16* %4779, align 2, !dbg !470
  %4780 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 1, !dbg !471
  %4781 = load i16, i16* %4780, align 2, !dbg !472
  %4782 = alloca i16, align 8, !dbg !473
  store i16 %4781, i16* %4782, align 2, !dbg !474
  %4783 = or i16 %4778, %4781, !dbg !475
  %4784 = and i16 %4783, 1, !dbg !476
  %4785 = icmp ne i16 %4784, 0, !dbg !477
  br i1 %4785, label %4786, label %4787, !dbg !478

4786:                                             ; preds = %4771
  call void @llvm.stackrestore(i8* %4772), !dbg !479
  br label %8066, !dbg !528

4787:                                             ; preds = %4771
  %4788 = and i16 %4783, 2, !dbg !1131
  %4789 = icmp ne i16 %4788, 0, !dbg !1132
  br i1 %4789, label %4790, label %4847, !dbg !1133

4790:                                             ; preds = %4787
  %4791 = and i16 %4778, 46, !dbg !1134
  %4792 = icmp eq i16 %4791, 2, !dbg !1135
  br i1 %4792, label %4793, label %4819, !dbg !1136

4793:                                             ; preds = %4790
  %4794 = call i8* @llvm.stacksave(), !dbg !1137
  %4795 = alloca double, align 8, !dbg !960
  %4796 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 0, i32 0, !dbg !1137
  %4797 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 2, !dbg !1137
  %4798 = load i8, i8* %4797, align 1, !dbg !1137
  %4799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 5, !dbg !1137
  %4800 = load i8*, i8** %4799, align 8, !dbg !1137
  %4801 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 4, !dbg !1137
  %4802 = load i32, i32* %4801, align 4, !dbg !1137
  %4803 = call i32 @sqlite3AtoF(i8* %4800, double* %4795, i32 %4802, i8 %4798), !dbg !1137
  %4804 = icmp sle i32 %4803, 0, !dbg !1137
  br i1 %4804, label %4817, label %4805, !dbg !1137

4805:                                             ; preds = %4793
  %4806 = icmp eq i32 %4803, 1, !dbg !1137
  %4807 = load double, double* %4795, align 8, !dbg !1137
  br i1 %4806, label %4808, label %4811, !dbg !1137

4808:                                             ; preds = %4805
  %4809 = load i16, i16* %4777, align 2, !dbg !1137
  %4810 = or i16 %4809, 4, !dbg !1137
  store i16 %4810, i16* %4777, align 2, !dbg !1137
  br label %4814, !dbg !1137

4811:                                             ; preds = %4805
  store double %4807, double* %4796, align 8, !dbg !1137
  %4812 = load i16, i16* %4777, align 2, !dbg !1137
  %4813 = or i16 %4812, 8, !dbg !1137
  store i16 %4813, i16* %4777, align 2, !dbg !1137
  br label %4814, !dbg !1137

4814:                                             ; preds = %4811, %4808
  %4815 = load i16, i16* %4777, align 2, !dbg !1137
  %4816 = and i16 %4815, -3, !dbg !1137
  store i16 %4816, i16* %4777, align 2, !dbg !1137
  br label %4817, !dbg !1137

4817:                                             ; preds = %4814, %4793
  call void @llvm.stackrestore(i8* %4794), !dbg !1137
  %4818 = load i16, i16* %4780, align 2, !dbg !1138
  store i16 %4818, i16* %4782, align 2, !dbg !1139
  br label %4819, !dbg !1140

4819:                                             ; preds = %4817, %4790
  %4820 = and i16 %4781, 46, !dbg !1141
  %4821 = icmp eq i16 %4820, 2, !dbg !1142
  br i1 %4821, label %4822, label %4847, !dbg !1143

4822:                                             ; preds = %4819
  %4823 = call i8* @llvm.stacksave(), !dbg !1144
  %4824 = alloca double, align 8, !dbg !960
  %4825 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 0, i32 0, !dbg !1144
  %4826 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 2, !dbg !1144
  %4827 = load i8, i8* %4826, align 1, !dbg !1144
  %4828 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 5, !dbg !1144
  %4829 = load i8*, i8** %4828, align 8, !dbg !1144
  %4830 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 4, !dbg !1144
  %4831 = load i32, i32* %4830, align 4, !dbg !1144
  %4832 = call i32 @sqlite3AtoF(i8* %4829, double* %4824, i32 %4831, i8 %4827), !dbg !1144
  %4833 = icmp sle i32 %4832, 0, !dbg !1144
  br i1 %4833, label %4846, label %4834, !dbg !1144

4834:                                             ; preds = %4822
  %4835 = icmp eq i32 %4832, 1, !dbg !1144
  %4836 = load double, double* %4824, align 8, !dbg !1144
  br i1 %4835, label %4837, label %4840, !dbg !1144

4837:                                             ; preds = %4834
  %4838 = load i16, i16* %4780, align 2, !dbg !1144
  %4839 = or i16 %4838, 4, !dbg !1144
  store i16 %4839, i16* %4780, align 2, !dbg !1144
  br label %4843, !dbg !1144

4840:                                             ; preds = %4834
  store double %4836, double* %4825, align 8, !dbg !1144
  %4841 = load i16, i16* %4780, align 2, !dbg !1144
  %4842 = or i16 %4841, 8, !dbg !1144
  store i16 %4842, i16* %4780, align 2, !dbg !1144
  br label %4843, !dbg !1144

4843:                                             ; preds = %4840, %4837
  %4844 = load i16, i16* %4780, align 2, !dbg !1144
  %4845 = and i16 %4844, -3, !dbg !1144
  store i16 %4845, i16* %4780, align 2, !dbg !1144
  br label %4846, !dbg !1144

4846:                                             ; preds = %4843, %4822
  call void @llvm.stackrestore(i8* %4823), !dbg !1144
  br label %4847, !dbg !1145

4847:                                             ; preds = %4819, %4846, %4787
  %4848 = load i16, i16* %4777, align 2, !dbg !1146
  %4849 = load i16, i16* %4780, align 2, !dbg !1147
  %4850 = and i16 %4848, %4849, !dbg !1148
  %4851 = and i16 %4850, 4, !dbg !1149
  %4852 = icmp ne i16 %4851, 0, !dbg !1150
  br i1 %4852, label %4853, label %4866, !dbg !1151

4853:                                             ; preds = %4847
  %4854 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4775, i32 0, i32 0, !dbg !1152
  %4855 = bitcast %union.MemValue* %4854 to i64*, !dbg !1153
  %4856 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4776, i32 0, i32 0, !dbg !1154
  %4857 = bitcast %union.MemValue* %4856 to i64*, !dbg !1155
  %4858 = load i64, i64* %4855, align 4, !dbg !1156
  %4859 = load i64, i64* %4857, align 4, !dbg !1157
  %4860 = icmp sgt i64 %4859, %4858, !dbg !1158
  br i1 %4860, label %4861, label %4862, !dbg !1159

4861:                                             ; preds = %4853
  store i32 1, i32* %4773, align 4, !dbg !1160
  br label %4872, !dbg !1161

4862:                                             ; preds = %4853
  %4863 = icmp slt i64 %4859, %4858, !dbg !1162
  br i1 %4863, label %4864, label %4865, !dbg !1163

4864:                                             ; preds = %4862
  store i32 -1, i32* %4773, align 4, !dbg !1164
  br label %4872, !dbg !1165

4865:                                             ; preds = %4862
  store i32 0, i32* %4773, align 4, !dbg !1166
  br label %4872, !dbg !1167

4866:                                             ; preds = %4847
  %4867 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 41, !dbg !506
  %4868 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4867, i32 0, i32 6, !dbg !507
  %4869 = bitcast %union.p4union* %4868 to %struct.CollSeq**, !dbg !508
  %4870 = load %struct.CollSeq*, %struct.CollSeq** %4869, align 8, !dbg !509
  %4871 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %4776, %struct.sqlite3_value* %4775, %struct.CollSeq* %4870), !dbg !510
  store i32 %4871, i32* %4773, align 4, !dbg !511
  br label %4872, !dbg !1168

4872:                                             ; preds = %4864, %4865, %4866, %4861
  %4873 = load i32, i32* %4773, align 4, !dbg !1169
  %4874 = icmp slt i32 %4873, 0, !dbg !512
  br i1 %4874, label %4875, label %4876, !dbg !513

4875:                                             ; preds = %4872
  store i32 1, i32* %4774, align 4, !dbg !514
  br label %4880, !dbg !515

4876:                                             ; preds = %4872
  %4877 = icmp eq i32 %4873, 0, !dbg !516
  br i1 %4877, label %4878, label %4879, !dbg !517

4878:                                             ; preds = %4876
  store i32 0, i32* %4774, align 4, !dbg !518
  br label %4880, !dbg !519

4879:                                             ; preds = %4876
  store i32 1, i32* %4774, align 4, !dbg !520
  br label %4880, !dbg !521

4880:                                             ; preds = %4879, %4878, %4875
  store i16 %4781, i16* %4782, align 2, !dbg !522
  store i16 %4778, i16* %4779, align 2, !dbg !523
  %4881 = load i32, i32* %4774, align 4, !dbg !524
  %4882 = icmp ne i32 %4881, 0, !dbg !525
  call void @llvm.stackrestore(i8* %4772), !dbg !526
  br i1 %4882, label %8066, label %4883, !dbg !527

4883:                                             ; preds = %4880, %4512, %4418, %14
  %4884 = call i8* @llvm.stacksave(), !dbg !167
  %4885 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4886 = load i8, i8* %4885, align 1, !dbg !171
  %4887 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %4887, align 4, !dbg !173
  %4888 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %4889 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4890 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4888, align 8, !dbg !176
  store %struct.VdbeCursor* %4890, %struct.VdbeCursor** %4889, align 8, !dbg !177
  %4891 = alloca i8*, align 8, !dbg !178
  %4892 = alloca i32, align 4, !dbg !179
  %4893 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4889, i32* %4887), !dbg !180
  %4894 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4889, align 8, !dbg !181
  %4895 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !182
  %4896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 16, !dbg !183
  %4897 = load i16, i16* %4896, align 2, !dbg !184
  %4898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 19, !dbg !185
  %4899 = load i32*, i32** %4898, align 8, !dbg !186
  %4900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 0, !dbg !187
  %4901 = load i8, i8* %4900, align 1, !dbg !188
  %4902 = icmp ne i8 %4901, 3, !dbg !189
  %4903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 2, !dbg !190
  %4904 = load i8, i8* %4903, align 1, !dbg !191
  %4905 = icmp ne i8 %4904, 0, !dbg !192
  %4906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 14, !dbg !193
  %4907 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 21, !dbg !194
  %4908 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 22, !dbg !195
  %4909 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 20, !dbg !196
  %4910 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 17, !dbg !197
  %4911 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 9, !dbg !198
  %4912 = load i32, i32* %4911, align 4, !dbg !199
  %4913 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4914 = load i32, i32* %4913, align 4, !dbg !201
  %4915 = icmp ne i32 %4912, %4914, !dbg !202
  br i1 %4915, label %4916, label %4958, !dbg !203

4916:                                             ; preds = %4883
  br i1 %4905, label %4938, label %4933, !dbg !204

4917:                                             ; preds = %4933, %4940
  %4918 = load i32, i32* %4913, align 4, !dbg !205
  store i32 %4918, i32* %4911, align 4, !dbg !206
  %4919 = load i8*, i8** %4909, align 8, !dbg !207
  %4920 = load i8, i8* %4919, align 1, !dbg !208
  %4921 = icmp sgt i8 %4920, -1, !dbg !211
  br i1 %4921, label %4922, label %4924, !dbg !212

4922:                                             ; preds = %4917
  %4923 = zext i8 %4920 to i32, !dbg !213
  store i32 %4923, i32* %4899, align 4, !dbg !214
  store i32 1, i32* %4906, align 4, !dbg !215
  br label %4927, !dbg !216

4924:                                             ; preds = %4917
  %4925 = call i8 @sqlite3GetVarint32(i8* %4919, i32* %4899), !dbg !217
  %4926 = zext i8 %4925 to i32, !dbg !218
  store i32 %4926, i32* %4906, align 4, !dbg !219
  br label %4927, !dbg !220

4927:                                             ; preds = %4924, %4922
  store i16 0, i16* %4910, align 2, !dbg !221
  %4928 = load i32, i32* %4908, align 4, !dbg !222
  %4929 = load i32, i32* %4899, align 4, !dbg !223
  %4930 = icmp ult i32 %4928, %4929, !dbg !224
  br i1 %4930, label %4932, label %4931, !dbg !225

4931:                                             ; preds = %4927
  store i8* %4919, i8** %4891, align 8, !dbg !226
  br label %5051, !dbg !227

4932:                                             ; preds = %4927
  store i8* null, i8** %4909, align 8, !dbg !228
  store i32 0, i32* %4908, align 4, !dbg !229
  br label %4958, !dbg !230

4933:                                             ; preds = %4916
  %4934 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 12, i32 0, !dbg !231
  %4935 = load %struct.BtCursor*, %struct.BtCursor** %4934, align 8, !dbg !232
  %4936 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4935), !dbg !233
  store i32 %4936, i32* %4907, align 4, !dbg !234
  %4937 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4935, i32* %4908), !dbg !235
  store i8* %4937, i8** %4909, align 8, !dbg !236
  br label %4917, !dbg !237

4938:                                             ; preds = %4916
  %4939 = icmp eq i8 %4901, 3, !dbg !238
  br i1 %4939, label %4940, label %4951, !dbg !239

4940:                                             ; preds = %4938
  %4941 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 10, !dbg !240
  %4942 = load i32, i32* %4941, align 4, !dbg !241
  %4943 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4942, !dbg !242
  %4944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4943, i32 0, i32 1, !dbg !243
  %4945 = load i16, i16* %4944, align 2, !dbg !244
  %4946 = and i16 %4945, 16, !dbg !245
  %4947 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4943, i32 0, i32 4, !dbg !246
  %4948 = load i32, i32* %4947, align 4, !dbg !247
  store i32 %4948, i32* %4907, align 4, !dbg !248
  store i32 %4948, i32* %4908, align 4, !dbg !249
  %4949 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4943, i32 0, i32 5, !dbg !250
  %4950 = load i8*, i8** %4949, align 8, !dbg !251
  store i8* %4950, i8** %4909, align 8, !dbg !252
  br label %4917, !dbg !253

4951:                                             ; preds = %4938
  %4952 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 1, !dbg !254
  %4953 = load i16, i16* %4952, align 2, !dbg !254
  %4954 = and i16 %4953, 9216, !dbg !254
  %4955 = icmp ne i16 %4954, 0, !dbg !254
  br i1 %4955, label %4956, label %4957, !dbg !254

4956:                                             ; preds = %4951
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4895), !dbg !254
  br label %5139, !dbg !254

4957:                                             ; preds = %4951
  store i16 1, i16* %4952, align 2, !dbg !254
  br label %5139, !dbg !254

4958:                                             ; preds = %4932, %4883
  %4959 = load i16, i16* %4910, align 2, !dbg !255
  %4960 = icmp ule i16 %4959, 1, !dbg !256
  br i1 %4960, label %5043, label %5040, !dbg !257

4961:                                             ; preds = %5040, %5129
  %4962 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 1, !dbg !258
  %4963 = load i16, i16* %4962, align 2, !dbg !259
  %4964 = and i16 9216, %4963, !dbg !260
  %4965 = icmp eq i16 0, %4964, !dbg !261
  br i1 %4965, label %4966, label %4970, !dbg !262

4966:                                             ; preds = %4961
  %4967 = icmp ne i16 %4964, 0, !dbg !263
  br i1 %4967, label %4968, label %4969, !dbg !263

4968:                                             ; preds = %4966
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4895), !dbg !263
  br label %4970, !dbg !263

4969:                                             ; preds = %4966
  store i16 1, i16* %4962, align 2, !dbg !263
  br label %4970, !dbg !263

4970:                                             ; preds = %4968, %4969, %4961
  %4971 = load i32, i32* %4892, align 4, !dbg !264
  %4972 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 23, i32 1, !dbg !265
  %4973 = load i32, i32* %4972, align 4, !dbg !266
  %4974 = load i32, i32* %4908, align 4, !dbg !267
  %4975 = getelementptr i32, i32* %4899, i32 2, !dbg !268
  %4976 = load i32, i32* %4975, align 4, !dbg !269
  %4977 = icmp sge i32 %4974, %4976, !dbg !270
  br i1 %4977, label %4978, label %5018, !dbg !271

4978:                                             ; preds = %4970
  %4979 = load i8*, i8** %4909, align 8, !dbg !272
  %4980 = ptrtoint i8* %4979 to i64, !dbg !273
  %4981 = getelementptr i32, i32* %4899, i32 1, !dbg !274
  %4982 = load i32, i32* %4981, align 4, !dbg !275
  %4983 = zext i32 %4982 to i64, !dbg !276
  %4984 = add i64 %4980, %4983, !dbg !277
  %4985 = inttoptr i64 %4984 to i8*, !dbg !278
  store i8* %4985, i8** %4891, align 8, !dbg !279
  %4986 = load i32, i32* %4892, align 4, !dbg !280
  %4987 = icmp ult i32 %4986, 12, !dbg !281
  br i1 %4987, label %4988, label %4990, !dbg !282

4988:                                             ; preds = %4978
  %4989 = call i32 @sqlite3VdbeSerialGet(i8* %4985, i32 %4986, %struct.sqlite3_value* %4895), !dbg !283
  br label %5139, !dbg !284

4990:                                             ; preds = %4978
  %4991 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4991, align 2, !dbg !286
  %4992 = getelementptr i16, i16* %4991, i32 1, !dbg !287
  store i16 514, i16* %4992, align 2, !dbg !288
  %4993 = load i32, i32* %4892, align 4, !dbg !289
  %4994 = sub i32 %4993, 12, !dbg !290
  %4995 = lshr i32 %4994, 1, !dbg !291
  %4996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 4, !dbg !292
  store i32 %4995, i32* %4996, align 4, !dbg !293
  %4997 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 2, !dbg !294
  store i8 %4886, i8* %4997, align 1, !dbg !295
  %4998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 5, !dbg !296
  %4999 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 7, !dbg !297
  %5000 = load i32, i32* %4999, align 4, !dbg !298
  %5001 = add i32 %4995, 2, !dbg !299
  %5002 = icmp slt i32 %5000, %5001, !dbg !300
  br i1 %5002, label %5003, label %5005, !dbg !301

5003:                                             ; preds = %4990
  store i16 1, i16* %4962, align 2, !dbg !302
  %5004 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4895, i32 %5001, i32 0), !dbg !303
  br label %5008, !dbg !304

5005:                                             ; preds = %4990
  %5006 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 6, !dbg !305
  %5007 = load i8*, i8** %5006, align 8, !dbg !306
  store i8* %5007, i8** %4998, align 8, !dbg !307
  br label %5008, !dbg !308

5008:                                             ; preds = %5005, %5003
  %5009 = zext i32 %4995 to i64, !dbg !309
  %5010 = load i8*, i8** %4998, align 8, !dbg !310
  %5011 = load i8*, i8** %4891, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5010, i8* %5011, i64 %5009, i1 false), !dbg !312
  %5012 = getelementptr i8, i8* %5010, i32 %4995, !dbg !313
  store i8 0, i8* %5012, align 1, !dbg !314
  %5013 = add i32 %4995, 1, !dbg !315
  %5014 = getelementptr i8, i8* %5010, i32 %5013, !dbg !316
  store i8 0, i8* %5014, align 1, !dbg !317
  %5015 = and i32 %4993, 1, !dbg !318
  %5016 = getelementptr i16, i16* %4991, i32 %5015, !dbg !319
  %5017 = load i16, i16* %5016, align 2, !dbg !320
  store i16 %5017, i16* %4962, align 2, !dbg !321
  br label %5139, !dbg !322

5018:                                             ; preds = %4970
  %5019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 2, !dbg !323
  store i8 %4886, i8* %5019, align 1, !dbg !324
  %5020 = load i32, i32* %4892, align 4, !dbg !325
  %5021 = and i32 %5020, 1, !dbg !326
  %5022 = icmp eq i32 %5021, 0, !dbg !327
  %5023 = icmp sge i32 %5020, 12, !dbg !328
  %5024 = and i1 %5023, %5022, !dbg !329
  %5025 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5020), !dbg !330
  %5026 = icmp eq i32 %5025, 0, !dbg !331
  br i1 %5026, label %5038, label %5027, !dbg !332

5027:                                             ; preds = %5018
  %5028 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 12, i32 0, !dbg !333
  %5029 = load %struct.BtCursor*, %struct.BtCursor** %5028, align 8, !dbg !334
  %5030 = getelementptr i32, i32* %4899, i32 1, !dbg !335
  %5031 = load i32, i32* %5030, align 4, !dbg !336
  %5032 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5029, i32 %5031, i32 %5025, %struct.sqlite3_value* %4895), !dbg !337
  %5033 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 5, !dbg !338
  %5034 = load i8*, i8** %5033, align 8, !dbg !339
  %5035 = call i32 @sqlite3VdbeSerialGet(i8* %5034, i32 %5020, %struct.sqlite3_value* %4895), !dbg !340
  %5036 = load i16, i16* %4962, align 2, !dbg !341
  %5037 = and i16 %5036, -4097, !dbg !342
  store i16 %5037, i16* %4962, align 2, !dbg !343
  br label %5139, !dbg !344

5038:                                             ; preds = %5018
  %5039 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5020, %struct.sqlite3_value* %4895), !dbg !345
  br label %5139, !dbg !346

5040:                                             ; preds = %4958
  %5041 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 23, i32 1, !dbg !347
  %5042 = load i32, i32* %5041, align 4, !dbg !348
  store i32 %5042, i32* %4892, align 4, !dbg !349
  br label %4961, !dbg !350

5043:                                             ; preds = %4958
  %5044 = load i32, i32* %4906, align 4, !dbg !351
  %5045 = load i32, i32* %4899, align 4, !dbg !352
  %5046 = icmp ult i32 %5044, %5045, !dbg !353
  br i1 %5046, label %5047, label %5128, !dbg !354

5047:                                             ; preds = %5043
  %5048 = load i8*, i8** %4909, align 8, !dbg !355
  %5049 = icmp eq i8* %5048, null, !dbg !356
  br i1 %5049, label %5051, label %5050, !dbg !357

5050:                                             ; preds = %5047
  store i8* %5048, i8** %4891, align 8, !dbg !358
  br label %5051, !dbg !359

5051:                                             ; preds = %5050, %5047, %4931
  %5052 = alloca i32, align 4, !dbg !360
  %5053 = load i16, i16* %4910, align 2, !dbg !361
  %5054 = zext i16 %5053 to i32, !dbg !362
  store i32 %5054, i32* %5052, align 4, !dbg !363
  %5055 = alloca i64, align 8, !dbg !364
  %5056 = getelementptr i32, i32* %4899, i32 %5054, !dbg !365
  %5057 = load i32, i32* %5056, align 4, !dbg !366
  %5058 = zext i32 %5057 to i64, !dbg !367
  store i64 %5058, i64* %5055, align 4, !dbg !368
  %5059 = load i8*, i8** %4891, align 8, !dbg !369
  %5060 = load i32, i32* %4906, align 4, !dbg !370
  %5061 = alloca i8*, align 8, !dbg !371
  %5062 = getelementptr i8, i8* %5059, i32 %5060, !dbg !372
  store i8* %5062, i8** %5061, align 8, !dbg !373
  %5063 = load i32, i32* %4899, align 4, !dbg !374
  %5064 = getelementptr i8, i8* %5059, i32 %5063, !dbg !375
  br label %5065, !dbg !376

5065:                                             ; preds = %5072, %5051
  %5066 = load i32, i32* %5052, align 4, !dbg !377
  %5067 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4894, i32 0, i32 23, i32 %5066, !dbg !378
  %5068 = load i8*, i8** %5061, align 8, !dbg !379
  %5069 = load i8, i8* %5068, align 1, !dbg !380
  %5070 = zext i8 %5069 to i32, !dbg !381
  store i32 %5070, i32* %4892, align 4, !dbg !382
  store i32 %5070, i32* %5067, align 4, !dbg !383
  %5071 = icmp sgt i8 %5069, -1, !dbg !384
  br i1 %5071, label %5095, label %5086, !dbg !385

5072:                                             ; preds = %5086, %5095
  %5073 = load i32, i32* %5052, align 4, !dbg !386
  %5074 = add i32 %5073, 1, !dbg !387
  store i32 %5074, i32* %5052, align 4, !dbg !388
  %5075 = load i64, i64* %5055, align 4, !dbg !389
  %5076 = and i64 4294967295, %5075, !dbg !390
  %5077 = trunc i64 %5076 to i32, !dbg !391
  %5078 = getelementptr i32, i32* %4899, i32 %5074, !dbg !392
  store i32 %5077, i32* %5078, align 4, !dbg !393
  %5079 = load i32, i32* %5052, align 4, !dbg !394
  %5080 = icmp sle i32 %5079, 1, !dbg !395
  %5081 = load i8*, i8** %5061, align 8, !dbg !396
  %5082 = ptrtoint i8* %5081 to i64, !dbg !397
  %5083 = ptrtoint i8* %5064 to i64, !dbg !398
  %5084 = icmp ult i64 %5082, %5083, !dbg !399
  %5085 = and i1 %5080, %5084, !dbg !400
  br i1 %5085, label %5065, label %5104, !dbg !401

5086:                                             ; preds = %5065
  %5087 = load i8*, i8** %5061, align 8, !dbg !402
  %5088 = call i8 @sqlite3GetVarint32(i8* %5087, i32* %4892), !dbg !403
  %5089 = getelementptr i8, i8* %5087, i8 %5088, !dbg !404
  store i8* %5089, i8** %5061, align 8, !dbg !405
  %5090 = load i32, i32* %4892, align 4, !dbg !406
  store i32 %5090, i32* %5067, align 4, !dbg !407
  %5091 = load i64, i64* %5055, align 4, !dbg !408
  %5092 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5090), !dbg !409
  %5093 = zext i32 %5092 to i64, !dbg !410
  %5094 = add i64 %5091, %5093, !dbg !411
  store i64 %5094, i64* %5055, align 4, !dbg !412
  br label %5072, !dbg !413

5095:                                             ; preds = %5065
  %5096 = getelementptr i8, i8* %5068, i32 1, !dbg !414
  store i8* %5096, i8** %5061, align 8, !dbg !415
  %5097 = load i32, i32* %4892, align 4, !dbg !416
  %5098 = trunc i32 %5097 to i8, !dbg !417
  %5099 = getelementptr i8, i8* %4, i8 %5098, !dbg !418
  %5100 = load i8, i8* %5099, align 1, !dbg !419
  %5101 = zext i8 %5100 to i64, !dbg !420
  %5102 = load i64, i64* %5055, align 4, !dbg !421
  %5103 = add i64 %5102, %5101, !dbg !422
  store i64 %5103, i64* %5055, align 4, !dbg !423
  br label %5072, !dbg !424

5104:                                             ; preds = %5072
  %5105 = load i64, i64* %5055, align 4, !dbg !425
  %5106 = load i32, i32* %4907, align 4, !dbg !426
  %5107 = zext i32 %5106 to i64, !dbg !427
  %5108 = icmp uge i64 %5082, %5083, !dbg !428
  %5109 = icmp ugt i64 %5082, %5083, !dbg !429
  %5110 = icmp ne i64 %5105, %5107, !dbg !430
  %5111 = icmp ugt i64 %5105, %5107, !dbg !431
  %5112 = or i1 %5109, %5110, !dbg !432
  %5113 = and i1 %5108, %5112, !dbg !433
  %5114 = or i1 %5113, %5111, !dbg !434
  br i1 %5114, label %5115, label %5119, !dbg !435

5115:                                             ; preds = %5104
  %5116 = load i32, i32* %4899, align 4, !dbg !436
  %5117 = icmp eq i32 %5116, 0, !dbg !437
  br i1 %5117, label %5118, label %5119, !dbg !438

5118:                                             ; preds = %5115
  store i32 0, i32* %5052, align 4, !dbg !439
  store i8* %5064, i8** %5061, align 8, !dbg !440
  br label %5119, !dbg !441

5119:                                             ; preds = %5118, %5115, %5104
  %5120 = load i32, i32* %5052, align 4, !dbg !442
  %5121 = trunc i32 %5120 to i16, !dbg !443
  store i16 %5121, i16* %4910, align 2, !dbg !444
  %5122 = load i8*, i8** %5061, align 8, !dbg !445
  %5123 = ptrtoint i8* %5122 to i64, !dbg !446
  %5124 = load i8*, i8** %4891, align 8, !dbg !447
  %5125 = ptrtoint i8* %5124 to i64, !dbg !448
  %5126 = sub i64 %5123, %5125, !dbg !449
  %5127 = trunc i64 %5126 to i32, !dbg !450
  store i32 %5127, i32* %4906, align 4, !dbg !451
  br label %5129, !dbg !452

5128:                                             ; preds = %5043
  store i32 0, i32* %4892, align 4, !dbg !453
  br label %5129, !dbg !454

5129:                                             ; preds = %5119, %5128
  %5130 = load i16, i16* %4910, align 2, !dbg !455
  %5131 = icmp sle i16 %5130, 1, !dbg !456
  br i1 %5131, label %5132, label %4961, !dbg !457

5132:                                             ; preds = %5129
  %5133 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4895, i32 0, i32 1, !dbg !458
  %5134 = load i16, i16* %5133, align 2, !dbg !458
  %5135 = and i16 %5134, 9216, !dbg !458
  %5136 = icmp ne i16 %5135, 0, !dbg !458
  br i1 %5136, label %5137, label %5138, !dbg !458

5137:                                             ; preds = %5132
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4895), !dbg !458
  br label %5139, !dbg !458

5138:                                             ; preds = %5132
  store i16 1, i16* %5133, align 2, !dbg !458
  br label %5139, !dbg !458

5139:                                             ; preds = %5137, %5138, %5008, %4988, %5027, %5038, %4956, %4957
  call void @llvm.stackrestore(i8* %4884), !dbg !459
  br label %5140, !dbg !74

5140:                                             ; preds = %5139, %14
  %5141 = call i8* @llvm.stacksave(), !dbg !1076
  %5142 = alloca i32, align 8, !dbg !1079
  %5143 = alloca i64, align 8, !dbg !1080
  %5144 = alloca i32, align 8, !dbg !1081
  %5145 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1082
  %5146 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5145, i32 0, i32 1, !dbg !1083
  %5147 = load i16, i16* %5146, align 2, !dbg !1084
  %5148 = and i16 %5147, 36, !dbg !1085
  %5149 = icmp eq i16 %5148, 0, !dbg !1086
  br i1 %5149, label %5150, label %5161, !dbg !1087

5150:                                             ; preds = %5140
  %5151 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %5152 = load %struct.sqlite3_value, %struct.sqlite3_value* %5145, align 8, !dbg !1089
  store %struct.sqlite3_value %5152, %struct.sqlite3_value* %5151, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %5151, i8 67, i8 1), !dbg !1090
  %5153 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5151, i32 0, i32 1, !dbg !1091
  %5154 = load i16, i16* %5153, align 2, !dbg !1092
  %5155 = and i16 %5154, 4, !dbg !1093
  %5156 = icmp eq i16 %5155, 0, !dbg !1094
  br i1 %5156, label %8066, label %5157, !dbg !1095

5157:                                             ; preds = %5150
  %5158 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5151, i32 0, i32 0, !dbg !1096
  %5159 = bitcast %union.MemValue* %5158 to i64*, !dbg !1097
  %5160 = load i64, i64* %5159, align 4, !dbg !1098
  store i64 %5160, i64* %5143, align 4, !dbg !1099
  br label %5165, !dbg !1100

5161:                                             ; preds = %5140
  %5162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5145, i32 0, i32 0, !dbg !1101
  %5163 = bitcast %union.MemValue* %5162 to i64*, !dbg !1102
  %5164 = load i64, i64* %5163, align 4, !dbg !1103
  store i64 %5164, i64* %5143, align 4, !dbg !1104
  br label %5165, !dbg !1105

5165:                                             ; preds = %5161, %5157
  %5166 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !1170
  %5167 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5166, align 8, !dbg !1106
  %5168 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 12, i32 0, !dbg !1107
  %5169 = load %struct.BtCursor*, %struct.BtCursor** %5168, align 8, !dbg !1108
  store i32 0, i32* %5142, align 4, !dbg !1109
  %5170 = load i64, i64* %5143, align 4, !dbg !1110
  %5171 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %5169, %struct.UnpackedRecord* null, i64 %5170, i32 0, i32* %5142), !dbg !1111
  store i32 %5171, i32* %5144, align 4, !dbg !1112
  %5172 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 18, !dbg !1113
  store i64 %5170, i64* %5172, align 4, !dbg !1114
  %5173 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 2, !dbg !1115
  store i8 0, i8* %5173, align 1, !dbg !1116
  %5174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 9, !dbg !1117
  store i32 0, i32* %5174, align 4, !dbg !1118
  %5175 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 3, !dbg !1119
  store i8 0, i8* %5175, align 1, !dbg !1120
  %5176 = load i32, i32* %5142, align 4, !dbg !1121
  %5177 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5167, i32 0, i32 10, !dbg !1122
  store i32 %5176, i32* %5177, align 4, !dbg !1123
  %5178 = icmp ne i32 %5176, 0, !dbg !1124
  br i1 %5178, label %5179, label %5180, !dbg !1125

5179:                                             ; preds = %5165
  call void @llvm.stackrestore(i8* %5141), !dbg !1126
  br label %8066, !dbg !1127

5180:                                             ; preds = %5165
  %5181 = load i32, i32* %5144, align 4, !dbg !1128
  call void @llvm.stackrestore(i8* %5141), !dbg !1129
  br label %5182, !dbg !1130

5182:                                             ; preds = %5180, %14
  %5183 = call i8* @llvm.stacksave(), !dbg !167
  %5184 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5185 = load i8, i8* %5184, align 1, !dbg !171
  %5186 = alloca i32, align 4, !dbg !172
  store i32 1, i32* %5186, align 4, !dbg !173
  %5187 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !174
  %5188 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5189 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5187, align 8, !dbg !176
  store %struct.VdbeCursor* %5189, %struct.VdbeCursor** %5188, align 8, !dbg !177
  %5190 = alloca i8*, align 8, !dbg !178
  %5191 = alloca i32, align 4, !dbg !179
  %5192 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5188, i32* %5186), !dbg !180
  %5193 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5188, align 8, !dbg !181
  %5194 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %5195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 16, !dbg !183
  %5196 = load i16, i16* %5195, align 2, !dbg !184
  %5197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 19, !dbg !185
  %5198 = load i32*, i32** %5197, align 8, !dbg !186
  %5199 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 0, !dbg !187
  %5200 = load i8, i8* %5199, align 1, !dbg !188
  %5201 = icmp ne i8 %5200, 3, !dbg !189
  %5202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 2, !dbg !190
  %5203 = load i8, i8* %5202, align 1, !dbg !191
  %5204 = icmp ne i8 %5203, 0, !dbg !192
  %5205 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 14, !dbg !193
  %5206 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 21, !dbg !194
  %5207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 22, !dbg !195
  %5208 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 20, !dbg !196
  %5209 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 17, !dbg !197
  %5210 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 9, !dbg !198
  %5211 = load i32, i32* %5210, align 4, !dbg !199
  %5212 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5213 = load i32, i32* %5212, align 4, !dbg !201
  %5214 = icmp ne i32 %5211, %5213, !dbg !202
  br i1 %5214, label %5215, label %5257, !dbg !203

5215:                                             ; preds = %5182
  br i1 %5204, label %5237, label %5232, !dbg !204

5216:                                             ; preds = %5232, %5239
  %5217 = load i32, i32* %5212, align 4, !dbg !205
  store i32 %5217, i32* %5210, align 4, !dbg !206
  %5218 = load i8*, i8** %5208, align 8, !dbg !207
  %5219 = load i8, i8* %5218, align 1, !dbg !208
  %5220 = icmp sgt i8 %5219, -1, !dbg !211
  br i1 %5220, label %5221, label %5223, !dbg !212

5221:                                             ; preds = %5216
  %5222 = zext i8 %5219 to i32, !dbg !213
  store i32 %5222, i32* %5198, align 4, !dbg !214
  store i32 1, i32* %5205, align 4, !dbg !215
  br label %5226, !dbg !216

5223:                                             ; preds = %5216
  %5224 = call i8 @sqlite3GetVarint32(i8* %5218, i32* %5198), !dbg !217
  %5225 = zext i8 %5224 to i32, !dbg !218
  store i32 %5225, i32* %5205, align 4, !dbg !219
  br label %5226, !dbg !220

5226:                                             ; preds = %5223, %5221
  store i16 0, i16* %5209, align 2, !dbg !221
  %5227 = load i32, i32* %5207, align 4, !dbg !222
  %5228 = load i32, i32* %5198, align 4, !dbg !223
  %5229 = icmp ult i32 %5227, %5228, !dbg !224
  br i1 %5229, label %5231, label %5230, !dbg !225

5230:                                             ; preds = %5226
  store i8* %5218, i8** %5190, align 8, !dbg !226
  br label %5350, !dbg !227

5231:                                             ; preds = %5226
  store i8* null, i8** %5208, align 8, !dbg !228
  store i32 0, i32* %5207, align 4, !dbg !229
  br label %5257, !dbg !230

5232:                                             ; preds = %5215
  %5233 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 12, i32 0, !dbg !231
  %5234 = load %struct.BtCursor*, %struct.BtCursor** %5233, align 8, !dbg !232
  %5235 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5234), !dbg !233
  store i32 %5235, i32* %5206, align 4, !dbg !234
  %5236 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5234, i32* %5207), !dbg !235
  store i8* %5236, i8** %5208, align 8, !dbg !236
  br label %5216, !dbg !237

5237:                                             ; preds = %5215
  %5238 = icmp eq i8 %5200, 3, !dbg !238
  br i1 %5238, label %5239, label %5250, !dbg !239

5239:                                             ; preds = %5237
  %5240 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 10, !dbg !240
  %5241 = load i32, i32* %5240, align 4, !dbg !241
  %5242 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5241, !dbg !242
  %5243 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5242, i32 0, i32 1, !dbg !243
  %5244 = load i16, i16* %5243, align 2, !dbg !244
  %5245 = and i16 %5244, 16, !dbg !245
  %5246 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5242, i32 0, i32 4, !dbg !246
  %5247 = load i32, i32* %5246, align 4, !dbg !247
  store i32 %5247, i32* %5206, align 4, !dbg !248
  store i32 %5247, i32* %5207, align 4, !dbg !249
  %5248 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5242, i32 0, i32 5, !dbg !250
  %5249 = load i8*, i8** %5248, align 8, !dbg !251
  store i8* %5249, i8** %5208, align 8, !dbg !252
  br label %5216, !dbg !253

5250:                                             ; preds = %5237
  %5251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 1, !dbg !254
  %5252 = load i16, i16* %5251, align 2, !dbg !254
  %5253 = and i16 %5252, 9216, !dbg !254
  %5254 = icmp ne i16 %5253, 0, !dbg !254
  br i1 %5254, label %5255, label %5256, !dbg !254

5255:                                             ; preds = %5250
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5194), !dbg !254
  br label %5438, !dbg !254

5256:                                             ; preds = %5250
  store i16 1, i16* %5251, align 2, !dbg !254
  br label %5438, !dbg !254

5257:                                             ; preds = %5231, %5182
  %5258 = load i16, i16* %5209, align 2, !dbg !255
  %5259 = icmp ule i16 %5258, 5, !dbg !256
  br i1 %5259, label %5342, label %5339, !dbg !257

5260:                                             ; preds = %5339, %5428
  %5261 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 1, !dbg !258
  %5262 = load i16, i16* %5261, align 2, !dbg !259
  %5263 = and i16 9216, %5262, !dbg !260
  %5264 = icmp eq i16 0, %5263, !dbg !261
  br i1 %5264, label %5265, label %5269, !dbg !262

5265:                                             ; preds = %5260
  %5266 = icmp ne i16 %5263, 0, !dbg !263
  br i1 %5266, label %5267, label %5268, !dbg !263

5267:                                             ; preds = %5265
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5194), !dbg !263
  br label %5269, !dbg !263

5268:                                             ; preds = %5265
  store i16 1, i16* %5261, align 2, !dbg !263
  br label %5269, !dbg !263

5269:                                             ; preds = %5267, %5268, %5260
  %5270 = load i32, i32* %5191, align 4, !dbg !264
  %5271 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 23, i32 5, !dbg !265
  %5272 = load i32, i32* %5271, align 4, !dbg !266
  %5273 = load i32, i32* %5207, align 4, !dbg !267
  %5274 = getelementptr i32, i32* %5198, i32 6, !dbg !268
  %5275 = load i32, i32* %5274, align 4, !dbg !269
  %5276 = icmp sge i32 %5273, %5275, !dbg !270
  br i1 %5276, label %5277, label %5317, !dbg !271

5277:                                             ; preds = %5269
  %5278 = load i8*, i8** %5208, align 8, !dbg !272
  %5279 = ptrtoint i8* %5278 to i64, !dbg !273
  %5280 = getelementptr i32, i32* %5198, i32 5, !dbg !274
  %5281 = load i32, i32* %5280, align 4, !dbg !275
  %5282 = zext i32 %5281 to i64, !dbg !276
  %5283 = add i64 %5279, %5282, !dbg !277
  %5284 = inttoptr i64 %5283 to i8*, !dbg !278
  store i8* %5284, i8** %5190, align 8, !dbg !279
  %5285 = load i32, i32* %5191, align 4, !dbg !280
  %5286 = icmp ult i32 %5285, 12, !dbg !281
  br i1 %5286, label %5287, label %5289, !dbg !282

5287:                                             ; preds = %5277
  %5288 = call i32 @sqlite3VdbeSerialGet(i8* %5284, i32 %5285, %struct.sqlite3_value* %5194), !dbg !283
  br label %5438, !dbg !284

5289:                                             ; preds = %5277
  %5290 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5290, align 2, !dbg !286
  %5291 = getelementptr i16, i16* %5290, i32 1, !dbg !287
  store i16 514, i16* %5291, align 2, !dbg !288
  %5292 = load i32, i32* %5191, align 4, !dbg !289
  %5293 = sub i32 %5292, 12, !dbg !290
  %5294 = lshr i32 %5293, 1, !dbg !291
  %5295 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 4, !dbg !292
  store i32 %5294, i32* %5295, align 4, !dbg !293
  %5296 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 2, !dbg !294
  store i8 %5185, i8* %5296, align 1, !dbg !295
  %5297 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 5, !dbg !296
  %5298 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 7, !dbg !297
  %5299 = load i32, i32* %5298, align 4, !dbg !298
  %5300 = add i32 %5294, 2, !dbg !299
  %5301 = icmp slt i32 %5299, %5300, !dbg !300
  br i1 %5301, label %5302, label %5304, !dbg !301

5302:                                             ; preds = %5289
  store i16 1, i16* %5261, align 2, !dbg !302
  %5303 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5194, i32 %5300, i32 0), !dbg !303
  br label %5307, !dbg !304

5304:                                             ; preds = %5289
  %5305 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 6, !dbg !305
  %5306 = load i8*, i8** %5305, align 8, !dbg !306
  store i8* %5306, i8** %5297, align 8, !dbg !307
  br label %5307, !dbg !308

5307:                                             ; preds = %5304, %5302
  %5308 = zext i32 %5294 to i64, !dbg !309
  %5309 = load i8*, i8** %5297, align 8, !dbg !310
  %5310 = load i8*, i8** %5190, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5309, i8* %5310, i64 %5308, i1 false), !dbg !312
  %5311 = getelementptr i8, i8* %5309, i32 %5294, !dbg !313
  store i8 0, i8* %5311, align 1, !dbg !314
  %5312 = add i32 %5294, 1, !dbg !315
  %5313 = getelementptr i8, i8* %5309, i32 %5312, !dbg !316
  store i8 0, i8* %5313, align 1, !dbg !317
  %5314 = and i32 %5292, 1, !dbg !318
  %5315 = getelementptr i16, i16* %5290, i32 %5314, !dbg !319
  %5316 = load i16, i16* %5315, align 2, !dbg !320
  store i16 %5316, i16* %5261, align 2, !dbg !321
  br label %5438, !dbg !322

5317:                                             ; preds = %5269
  %5318 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 2, !dbg !323
  store i8 %5185, i8* %5318, align 1, !dbg !324
  %5319 = load i32, i32* %5191, align 4, !dbg !325
  %5320 = and i32 %5319, 1, !dbg !326
  %5321 = icmp eq i32 %5320, 0, !dbg !327
  %5322 = icmp sge i32 %5319, 12, !dbg !328
  %5323 = and i1 %5322, %5321, !dbg !329
  %5324 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5319), !dbg !330
  %5325 = icmp eq i32 %5324, 0, !dbg !331
  br i1 %5325, label %5337, label %5326, !dbg !332

5326:                                             ; preds = %5317
  %5327 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 12, i32 0, !dbg !333
  %5328 = load %struct.BtCursor*, %struct.BtCursor** %5327, align 8, !dbg !334
  %5329 = getelementptr i32, i32* %5198, i32 5, !dbg !335
  %5330 = load i32, i32* %5329, align 4, !dbg !336
  %5331 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5328, i32 %5330, i32 %5324, %struct.sqlite3_value* %5194), !dbg !337
  %5332 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 5, !dbg !338
  %5333 = load i8*, i8** %5332, align 8, !dbg !339
  %5334 = call i32 @sqlite3VdbeSerialGet(i8* %5333, i32 %5319, %struct.sqlite3_value* %5194), !dbg !340
  %5335 = load i16, i16* %5261, align 2, !dbg !341
  %5336 = and i16 %5335, -4097, !dbg !342
  store i16 %5336, i16* %5261, align 2, !dbg !343
  br label %5438, !dbg !344

5337:                                             ; preds = %5317
  %5338 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5319, %struct.sqlite3_value* %5194), !dbg !345
  br label %5438, !dbg !346

5339:                                             ; preds = %5257
  %5340 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 23, i32 5, !dbg !347
  %5341 = load i32, i32* %5340, align 4, !dbg !348
  store i32 %5341, i32* %5191, align 4, !dbg !349
  br label %5260, !dbg !350

5342:                                             ; preds = %5257
  %5343 = load i32, i32* %5205, align 4, !dbg !351
  %5344 = load i32, i32* %5198, align 4, !dbg !352
  %5345 = icmp ult i32 %5343, %5344, !dbg !353
  br i1 %5345, label %5346, label %5427, !dbg !354

5346:                                             ; preds = %5342
  %5347 = load i8*, i8** %5208, align 8, !dbg !355
  %5348 = icmp eq i8* %5347, null, !dbg !356
  br i1 %5348, label %5350, label %5349, !dbg !357

5349:                                             ; preds = %5346
  store i8* %5347, i8** %5190, align 8, !dbg !358
  br label %5350, !dbg !359

5350:                                             ; preds = %5349, %5346, %5230
  %5351 = alloca i32, align 4, !dbg !360
  %5352 = load i16, i16* %5209, align 2, !dbg !361
  %5353 = zext i16 %5352 to i32, !dbg !362
  store i32 %5353, i32* %5351, align 4, !dbg !363
  %5354 = alloca i64, align 8, !dbg !364
  %5355 = getelementptr i32, i32* %5198, i32 %5353, !dbg !365
  %5356 = load i32, i32* %5355, align 4, !dbg !366
  %5357 = zext i32 %5356 to i64, !dbg !367
  store i64 %5357, i64* %5354, align 4, !dbg !368
  %5358 = load i8*, i8** %5190, align 8, !dbg !369
  %5359 = load i32, i32* %5205, align 4, !dbg !370
  %5360 = alloca i8*, align 8, !dbg !371
  %5361 = getelementptr i8, i8* %5358, i32 %5359, !dbg !372
  store i8* %5361, i8** %5360, align 8, !dbg !373
  %5362 = load i32, i32* %5198, align 4, !dbg !374
  %5363 = getelementptr i8, i8* %5358, i32 %5362, !dbg !375
  br label %5364, !dbg !376

5364:                                             ; preds = %5371, %5350
  %5365 = load i32, i32* %5351, align 4, !dbg !377
  %5366 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5193, i32 0, i32 23, i32 %5365, !dbg !378
  %5367 = load i8*, i8** %5360, align 8, !dbg !379
  %5368 = load i8, i8* %5367, align 1, !dbg !380
  %5369 = zext i8 %5368 to i32, !dbg !381
  store i32 %5369, i32* %5191, align 4, !dbg !382
  store i32 %5369, i32* %5366, align 4, !dbg !383
  %5370 = icmp sgt i8 %5368, -1, !dbg !384
  br i1 %5370, label %5394, label %5385, !dbg !385

5371:                                             ; preds = %5385, %5394
  %5372 = load i32, i32* %5351, align 4, !dbg !386
  %5373 = add i32 %5372, 1, !dbg !387
  store i32 %5373, i32* %5351, align 4, !dbg !388
  %5374 = load i64, i64* %5354, align 4, !dbg !389
  %5375 = and i64 4294967295, %5374, !dbg !390
  %5376 = trunc i64 %5375 to i32, !dbg !391
  %5377 = getelementptr i32, i32* %5198, i32 %5373, !dbg !392
  store i32 %5376, i32* %5377, align 4, !dbg !393
  %5378 = load i32, i32* %5351, align 4, !dbg !394
  %5379 = icmp sle i32 %5378, 5, !dbg !395
  %5380 = load i8*, i8** %5360, align 8, !dbg !396
  %5381 = ptrtoint i8* %5380 to i64, !dbg !397
  %5382 = ptrtoint i8* %5363 to i64, !dbg !398
  %5383 = icmp ult i64 %5381, %5382, !dbg !399
  %5384 = and i1 %5379, %5383, !dbg !400
  br i1 %5384, label %5364, label %5403, !dbg !401

5385:                                             ; preds = %5364
  %5386 = load i8*, i8** %5360, align 8, !dbg !402
  %5387 = call i8 @sqlite3GetVarint32(i8* %5386, i32* %5191), !dbg !403
  %5388 = getelementptr i8, i8* %5386, i8 %5387, !dbg !404
  store i8* %5388, i8** %5360, align 8, !dbg !405
  %5389 = load i32, i32* %5191, align 4, !dbg !406
  store i32 %5389, i32* %5366, align 4, !dbg !407
  %5390 = load i64, i64* %5354, align 4, !dbg !408
  %5391 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5389), !dbg !409
  %5392 = zext i32 %5391 to i64, !dbg !410
  %5393 = add i64 %5390, %5392, !dbg !411
  store i64 %5393, i64* %5354, align 4, !dbg !412
  br label %5371, !dbg !413

5394:                                             ; preds = %5364
  %5395 = getelementptr i8, i8* %5367, i32 1, !dbg !414
  store i8* %5395, i8** %5360, align 8, !dbg !415
  %5396 = load i32, i32* %5191, align 4, !dbg !416
  %5397 = trunc i32 %5396 to i8, !dbg !417
  %5398 = getelementptr i8, i8* %4, i8 %5397, !dbg !418
  %5399 = load i8, i8* %5398, align 1, !dbg !419
  %5400 = zext i8 %5399 to i64, !dbg !420
  %5401 = load i64, i64* %5354, align 4, !dbg !421
  %5402 = add i64 %5401, %5400, !dbg !422
  store i64 %5402, i64* %5354, align 4, !dbg !423
  br label %5371, !dbg !424

5403:                                             ; preds = %5371
  %5404 = load i64, i64* %5354, align 4, !dbg !425
  %5405 = load i32, i32* %5206, align 4, !dbg !426
  %5406 = zext i32 %5405 to i64, !dbg !427
  %5407 = icmp uge i64 %5381, %5382, !dbg !428
  %5408 = icmp ugt i64 %5381, %5382, !dbg !429
  %5409 = icmp ne i64 %5404, %5406, !dbg !430
  %5410 = icmp ugt i64 %5404, %5406, !dbg !431
  %5411 = or i1 %5408, %5409, !dbg !432
  %5412 = and i1 %5407, %5411, !dbg !433
  %5413 = or i1 %5412, %5410, !dbg !434
  br i1 %5413, label %5414, label %5418, !dbg !435

5414:                                             ; preds = %5403
  %5415 = load i32, i32* %5198, align 4, !dbg !436
  %5416 = icmp eq i32 %5415, 0, !dbg !437
  br i1 %5416, label %5417, label %5418, !dbg !438

5417:                                             ; preds = %5414
  store i32 0, i32* %5351, align 4, !dbg !439
  store i8* %5363, i8** %5360, align 8, !dbg !440
  br label %5418, !dbg !441

5418:                                             ; preds = %5417, %5414, %5403
  %5419 = load i32, i32* %5351, align 4, !dbg !442
  %5420 = trunc i32 %5419 to i16, !dbg !443
  store i16 %5420, i16* %5209, align 2, !dbg !444
  %5421 = load i8*, i8** %5360, align 8, !dbg !445
  %5422 = ptrtoint i8* %5421 to i64, !dbg !446
  %5423 = load i8*, i8** %5190, align 8, !dbg !447
  %5424 = ptrtoint i8* %5423 to i64, !dbg !448
  %5425 = sub i64 %5422, %5424, !dbg !449
  %5426 = trunc i64 %5425 to i32, !dbg !450
  store i32 %5426, i32* %5205, align 4, !dbg !451
  br label %5428, !dbg !452

5427:                                             ; preds = %5342
  store i32 0, i32* %5191, align 4, !dbg !453
  br label %5428, !dbg !454

5428:                                             ; preds = %5418, %5427
  %5429 = load i16, i16* %5209, align 2, !dbg !455
  %5430 = icmp sle i16 %5429, 5, !dbg !456
  br i1 %5430, label %5431, label %5260, !dbg !457

5431:                                             ; preds = %5428
  %5432 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5194, i32 0, i32 1, !dbg !458
  %5433 = load i16, i16* %5432, align 2, !dbg !458
  %5434 = and i16 %5433, 9216, !dbg !458
  %5435 = icmp ne i16 %5434, 0, !dbg !458
  br i1 %5435, label %5436, label %5437, !dbg !458

5436:                                             ; preds = %5431
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5194), !dbg !458
  br label %5438, !dbg !458

5437:                                             ; preds = %5431
  store i16 1, i16* %5432, align 2, !dbg !458
  br label %5438, !dbg !458

5438:                                             ; preds = %5436, %5437, %5307, %5287, %5326, %5337, %5255, %5256
  call void @llvm.stackrestore(i8* %5183), !dbg !459
  br label %5439, !dbg !74

5439:                                             ; preds = %5438, %14
  %5440 = call i8* @llvm.stacksave(), !dbg !460
  %5441 = alloca i32, align 8, !dbg !463
  %5442 = alloca i32, align 8, !dbg !464
  %5443 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !465
  %5444 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %5445 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5443, i32 0, i32 1, !dbg !467
  %5446 = load i16, i16* %5445, align 2, !dbg !468
  %5447 = alloca i16, align 8, !dbg !469
  store i16 %5446, i16* %5447, align 2, !dbg !470
  %5448 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5444, i32 0, i32 1, !dbg !471
  %5449 = load i16, i16* %5448, align 2, !dbg !472
  %5450 = alloca i16, align 8, !dbg !473
  store i16 %5449, i16* %5450, align 2, !dbg !474
  %5451 = or i16 %5446, %5449, !dbg !475
  %5452 = and i16 %5451, 1, !dbg !476
  %5453 = icmp ne i16 %5452, 0, !dbg !477
  br i1 %5453, label %5454, label %5455, !dbg !478

5454:                                             ; preds = %5439
  call void @llvm.stackrestore(i8* %5440), !dbg !479
  br label %8066, !dbg !528

5455:                                             ; preds = %5439
  %5456 = and i16 %5446, 2, !dbg !482
  %5457 = and i16 %5446, 44, !dbg !483
  %5458 = icmp eq i16 %5456, 0, !dbg !484
  %5459 = icmp ne i16 %5457, 0, !dbg !485
  %5460 = and i16 %5449, 2, !dbg !486
  %5461 = and i16 %5449, 44, !dbg !487
  %5462 = icmp eq i16 %5460, 0, !dbg !488
  %5463 = icmp ne i16 %5461, 0, !dbg !489
  %5464 = and i1 %5458, %5459, !dbg !490
  br i1 %5464, label %5465, label %5471, !dbg !491

5465:                                             ; preds = %5455
  %5466 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5443, i8 1, i8 1), !dbg !492
  %5467 = load i16, i16* %5445, align 2, !dbg !493
  %5468 = and i16 %5467, 15936, !dbg !493
  %5469 = and i16 %5446, -15937, !dbg !494
  %5470 = or i16 %5468, %5469, !dbg !495
  store i16 %5470, i16* %5447, align 2, !dbg !496
  br label %5471, !dbg !497

5471:                                             ; preds = %5465, %5455
  %5472 = and i1 %5462, %5463, !dbg !498
  br i1 %5472, label %5473, label %5479, !dbg !499

5473:                                             ; preds = %5471
  %5474 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5444, i8 1, i8 1), !dbg !500
  %5475 = load i16, i16* %5448, align 2, !dbg !501
  %5476 = and i16 %5475, 15936, !dbg !501
  %5477 = and i16 %5449, -15937, !dbg !502
  %5478 = or i16 %5476, %5477, !dbg !503
  store i16 %5478, i16* %5450, align 2, !dbg !504
  br label %5479, !dbg !505

5479:                                             ; preds = %5473, %5471
  %5480 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, !dbg !506
  %5481 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5480, i32 0, i32 6, !dbg !507
  %5482 = bitcast %union.p4union* %5481 to %struct.CollSeq**, !dbg !508
  %5483 = load %struct.CollSeq*, %struct.CollSeq** %5482, align 8, !dbg !509
  %5484 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5444, %struct.sqlite3_value* %5443, %struct.CollSeq* %5483), !dbg !510
  store i32 %5484, i32* %5441, align 4, !dbg !511
  %5485 = icmp slt i32 %5484, 0, !dbg !512
  br i1 %5485, label %5486, label %5487, !dbg !513

5486:                                             ; preds = %5479
  store i32 1, i32* %5442, align 4, !dbg !514
  br label %5491, !dbg !515

5487:                                             ; preds = %5479
  %5488 = icmp eq i32 %5484, 0, !dbg !516
  br i1 %5488, label %5489, label %5490, !dbg !517

5489:                                             ; preds = %5487
  store i32 0, i32* %5442, align 4, !dbg !518
  br label %5491, !dbg !519

5490:                                             ; preds = %5487
  store i32 1, i32* %5442, align 4, !dbg !520
  br label %5491, !dbg !521

5491:                                             ; preds = %5490, %5489, %5486
  store i16 %5449, i16* %5450, align 2, !dbg !522
  store i16 %5446, i16* %5447, align 2, !dbg !523
  %5492 = load i32, i32* %5442, align 4, !dbg !524
  %5493 = icmp ne i32 %5492, 0, !dbg !525
  call void @llvm.stackrestore(i8* %5440), !dbg !526
  br i1 %5493, label %8066, label %5494, !dbg !527

5494:                                             ; preds = %5491, %14
  %5495 = call i8* @llvm.stacksave(), !dbg !167
  %5496 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5497 = load i8, i8* %5496, align 1, !dbg !171
  %5498 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %5498, align 4, !dbg !173
  %5499 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %5500 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5501 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5499, align 8, !dbg !176
  store %struct.VdbeCursor* %5501, %struct.VdbeCursor** %5500, align 8, !dbg !177
  %5502 = alloca i8*, align 8, !dbg !178
  %5503 = alloca i32, align 4, !dbg !179
  %5504 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5500, i32* %5498), !dbg !180
  %5505 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5500, align 8, !dbg !181
  %5506 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !182
  %5507 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 16, !dbg !183
  %5508 = load i16, i16* %5507, align 2, !dbg !184
  %5509 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 19, !dbg !185
  %5510 = load i32*, i32** %5509, align 8, !dbg !186
  %5511 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 0, !dbg !187
  %5512 = load i8, i8* %5511, align 1, !dbg !188
  %5513 = icmp ne i8 %5512, 3, !dbg !189
  %5514 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 2, !dbg !190
  %5515 = load i8, i8* %5514, align 1, !dbg !191
  %5516 = icmp ne i8 %5515, 0, !dbg !192
  %5517 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 14, !dbg !193
  %5518 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 21, !dbg !194
  %5519 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 22, !dbg !195
  %5520 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 20, !dbg !196
  %5521 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 17, !dbg !197
  %5522 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 9, !dbg !198
  %5523 = load i32, i32* %5522, align 4, !dbg !199
  %5524 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5525 = load i32, i32* %5524, align 4, !dbg !201
  %5526 = icmp ne i32 %5523, %5525, !dbg !202
  br i1 %5526, label %5527, label %5569, !dbg !203

5527:                                             ; preds = %5494
  br i1 %5516, label %5549, label %5544, !dbg !204

5528:                                             ; preds = %5544, %5551
  %5529 = load i32, i32* %5524, align 4, !dbg !205
  store i32 %5529, i32* %5522, align 4, !dbg !206
  %5530 = load i8*, i8** %5520, align 8, !dbg !207
  %5531 = load i8, i8* %5530, align 1, !dbg !208
  %5532 = icmp sgt i8 %5531, -1, !dbg !211
  br i1 %5532, label %5533, label %5535, !dbg !212

5533:                                             ; preds = %5528
  %5534 = zext i8 %5531 to i32, !dbg !213
  store i32 %5534, i32* %5510, align 4, !dbg !214
  store i32 1, i32* %5517, align 4, !dbg !215
  br label %5538, !dbg !216

5535:                                             ; preds = %5528
  %5536 = call i8 @sqlite3GetVarint32(i8* %5530, i32* %5510), !dbg !217
  %5537 = zext i8 %5536 to i32, !dbg !218
  store i32 %5537, i32* %5517, align 4, !dbg !219
  br label %5538, !dbg !220

5538:                                             ; preds = %5535, %5533
  store i16 0, i16* %5521, align 2, !dbg !221
  %5539 = load i32, i32* %5519, align 4, !dbg !222
  %5540 = load i32, i32* %5510, align 4, !dbg !223
  %5541 = icmp ult i32 %5539, %5540, !dbg !224
  br i1 %5541, label %5543, label %5542, !dbg !225

5542:                                             ; preds = %5538
  store i8* %5530, i8** %5502, align 8, !dbg !226
  br label %5662, !dbg !227

5543:                                             ; preds = %5538
  store i8* null, i8** %5520, align 8, !dbg !228
  store i32 0, i32* %5519, align 4, !dbg !229
  br label %5569, !dbg !230

5544:                                             ; preds = %5527
  %5545 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 12, i32 0, !dbg !231
  %5546 = load %struct.BtCursor*, %struct.BtCursor** %5545, align 8, !dbg !232
  %5547 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5546), !dbg !233
  store i32 %5547, i32* %5518, align 4, !dbg !234
  %5548 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5546, i32* %5519), !dbg !235
  store i8* %5548, i8** %5520, align 8, !dbg !236
  br label %5528, !dbg !237

5549:                                             ; preds = %5527
  %5550 = icmp eq i8 %5512, 3, !dbg !238
  br i1 %5550, label %5551, label %5562, !dbg !239

5551:                                             ; preds = %5549
  %5552 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 10, !dbg !240
  %5553 = load i32, i32* %5552, align 4, !dbg !241
  %5554 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5553, !dbg !242
  %5555 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5554, i32 0, i32 1, !dbg !243
  %5556 = load i16, i16* %5555, align 2, !dbg !244
  %5557 = and i16 %5556, 16, !dbg !245
  %5558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5554, i32 0, i32 4, !dbg !246
  %5559 = load i32, i32* %5558, align 4, !dbg !247
  store i32 %5559, i32* %5518, align 4, !dbg !248
  store i32 %5559, i32* %5519, align 4, !dbg !249
  %5560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5554, i32 0, i32 5, !dbg !250
  %5561 = load i8*, i8** %5560, align 8, !dbg !251
  store i8* %5561, i8** %5520, align 8, !dbg !252
  br label %5528, !dbg !253

5562:                                             ; preds = %5549
  %5563 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 1, !dbg !254
  %5564 = load i16, i16* %5563, align 2, !dbg !254
  %5565 = and i16 %5564, 9216, !dbg !254
  %5566 = icmp ne i16 %5565, 0, !dbg !254
  br i1 %5566, label %5567, label %5568, !dbg !254

5567:                                             ; preds = %5562
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5506), !dbg !254
  br label %5750, !dbg !254

5568:                                             ; preds = %5562
  store i16 1, i16* %5563, align 2, !dbg !254
  br label %5750, !dbg !254

5569:                                             ; preds = %5543, %5494
  %5570 = load i16, i16* %5521, align 2, !dbg !255
  %5571 = icmp ule i16 %5570, 2, !dbg !256
  br i1 %5571, label %5654, label %5651, !dbg !257

5572:                                             ; preds = %5651, %5740
  %5573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 1, !dbg !258
  %5574 = load i16, i16* %5573, align 2, !dbg !259
  %5575 = and i16 9216, %5574, !dbg !260
  %5576 = icmp eq i16 0, %5575, !dbg !261
  br i1 %5576, label %5577, label %5581, !dbg !262

5577:                                             ; preds = %5572
  %5578 = icmp ne i16 %5575, 0, !dbg !263
  br i1 %5578, label %5579, label %5580, !dbg !263

5579:                                             ; preds = %5577
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5506), !dbg !263
  br label %5581, !dbg !263

5580:                                             ; preds = %5577
  store i16 1, i16* %5573, align 2, !dbg !263
  br label %5581, !dbg !263

5581:                                             ; preds = %5579, %5580, %5572
  %5582 = load i32, i32* %5503, align 4, !dbg !264
  %5583 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 23, i32 2, !dbg !265
  %5584 = load i32, i32* %5583, align 4, !dbg !266
  %5585 = load i32, i32* %5519, align 4, !dbg !267
  %5586 = getelementptr i32, i32* %5510, i32 3, !dbg !268
  %5587 = load i32, i32* %5586, align 4, !dbg !269
  %5588 = icmp sge i32 %5585, %5587, !dbg !270
  br i1 %5588, label %5589, label %5629, !dbg !271

5589:                                             ; preds = %5581
  %5590 = load i8*, i8** %5520, align 8, !dbg !272
  %5591 = ptrtoint i8* %5590 to i64, !dbg !273
  %5592 = getelementptr i32, i32* %5510, i32 2, !dbg !274
  %5593 = load i32, i32* %5592, align 4, !dbg !275
  %5594 = zext i32 %5593 to i64, !dbg !276
  %5595 = add i64 %5591, %5594, !dbg !277
  %5596 = inttoptr i64 %5595 to i8*, !dbg !278
  store i8* %5596, i8** %5502, align 8, !dbg !279
  %5597 = load i32, i32* %5503, align 4, !dbg !280
  %5598 = icmp ult i32 %5597, 12, !dbg !281
  br i1 %5598, label %5599, label %5601, !dbg !282

5599:                                             ; preds = %5589
  %5600 = call i32 @sqlite3VdbeSerialGet(i8* %5596, i32 %5597, %struct.sqlite3_value* %5506), !dbg !283
  br label %5750, !dbg !284

5601:                                             ; preds = %5589
  %5602 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5602, align 2, !dbg !286
  %5603 = getelementptr i16, i16* %5602, i32 1, !dbg !287
  store i16 514, i16* %5603, align 2, !dbg !288
  %5604 = load i32, i32* %5503, align 4, !dbg !289
  %5605 = sub i32 %5604, 12, !dbg !290
  %5606 = lshr i32 %5605, 1, !dbg !291
  %5607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 4, !dbg !292
  store i32 %5606, i32* %5607, align 4, !dbg !293
  %5608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 2, !dbg !294
  store i8 %5497, i8* %5608, align 1, !dbg !295
  %5609 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 5, !dbg !296
  %5610 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 7, !dbg !297
  %5611 = load i32, i32* %5610, align 4, !dbg !298
  %5612 = add i32 %5606, 2, !dbg !299
  %5613 = icmp slt i32 %5611, %5612, !dbg !300
  br i1 %5613, label %5614, label %5616, !dbg !301

5614:                                             ; preds = %5601
  store i16 1, i16* %5573, align 2, !dbg !302
  %5615 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5506, i32 %5612, i32 0), !dbg !303
  br label %5619, !dbg !304

5616:                                             ; preds = %5601
  %5617 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 6, !dbg !305
  %5618 = load i8*, i8** %5617, align 8, !dbg !306
  store i8* %5618, i8** %5609, align 8, !dbg !307
  br label %5619, !dbg !308

5619:                                             ; preds = %5616, %5614
  %5620 = zext i32 %5606 to i64, !dbg !309
  %5621 = load i8*, i8** %5609, align 8, !dbg !310
  %5622 = load i8*, i8** %5502, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5621, i8* %5622, i64 %5620, i1 false), !dbg !312
  %5623 = getelementptr i8, i8* %5621, i32 %5606, !dbg !313
  store i8 0, i8* %5623, align 1, !dbg !314
  %5624 = add i32 %5606, 1, !dbg !315
  %5625 = getelementptr i8, i8* %5621, i32 %5624, !dbg !316
  store i8 0, i8* %5625, align 1, !dbg !317
  %5626 = and i32 %5604, 1, !dbg !318
  %5627 = getelementptr i16, i16* %5602, i32 %5626, !dbg !319
  %5628 = load i16, i16* %5627, align 2, !dbg !320
  store i16 %5628, i16* %5573, align 2, !dbg !321
  br label %5750, !dbg !322

5629:                                             ; preds = %5581
  %5630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 2, !dbg !323
  store i8 %5497, i8* %5630, align 1, !dbg !324
  %5631 = load i32, i32* %5503, align 4, !dbg !325
  %5632 = and i32 %5631, 1, !dbg !326
  %5633 = icmp eq i32 %5632, 0, !dbg !327
  %5634 = icmp sge i32 %5631, 12, !dbg !328
  %5635 = and i1 %5634, %5633, !dbg !329
  %5636 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5631), !dbg !330
  %5637 = icmp eq i32 %5636, 0, !dbg !331
  br i1 %5637, label %5649, label %5638, !dbg !332

5638:                                             ; preds = %5629
  %5639 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 12, i32 0, !dbg !333
  %5640 = load %struct.BtCursor*, %struct.BtCursor** %5639, align 8, !dbg !334
  %5641 = getelementptr i32, i32* %5510, i32 2, !dbg !335
  %5642 = load i32, i32* %5641, align 4, !dbg !336
  %5643 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5640, i32 %5642, i32 %5636, %struct.sqlite3_value* %5506), !dbg !337
  %5644 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 5, !dbg !338
  %5645 = load i8*, i8** %5644, align 8, !dbg !339
  %5646 = call i32 @sqlite3VdbeSerialGet(i8* %5645, i32 %5631, %struct.sqlite3_value* %5506), !dbg !340
  %5647 = load i16, i16* %5573, align 2, !dbg !341
  %5648 = and i16 %5647, -4097, !dbg !342
  store i16 %5648, i16* %5573, align 2, !dbg !343
  br label %5750, !dbg !344

5649:                                             ; preds = %5629
  %5650 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5631, %struct.sqlite3_value* %5506), !dbg !345
  br label %5750, !dbg !346

5651:                                             ; preds = %5569
  %5652 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 23, i32 2, !dbg !347
  %5653 = load i32, i32* %5652, align 4, !dbg !348
  store i32 %5653, i32* %5503, align 4, !dbg !349
  br label %5572, !dbg !350

5654:                                             ; preds = %5569
  %5655 = load i32, i32* %5517, align 4, !dbg !351
  %5656 = load i32, i32* %5510, align 4, !dbg !352
  %5657 = icmp ult i32 %5655, %5656, !dbg !353
  br i1 %5657, label %5658, label %5739, !dbg !354

5658:                                             ; preds = %5654
  %5659 = load i8*, i8** %5520, align 8, !dbg !355
  %5660 = icmp eq i8* %5659, null, !dbg !356
  br i1 %5660, label %5662, label %5661, !dbg !357

5661:                                             ; preds = %5658
  store i8* %5659, i8** %5502, align 8, !dbg !358
  br label %5662, !dbg !359

5662:                                             ; preds = %5661, %5658, %5542
  %5663 = alloca i32, align 4, !dbg !360
  %5664 = load i16, i16* %5521, align 2, !dbg !361
  %5665 = zext i16 %5664 to i32, !dbg !362
  store i32 %5665, i32* %5663, align 4, !dbg !363
  %5666 = alloca i64, align 8, !dbg !364
  %5667 = getelementptr i32, i32* %5510, i32 %5665, !dbg !365
  %5668 = load i32, i32* %5667, align 4, !dbg !366
  %5669 = zext i32 %5668 to i64, !dbg !367
  store i64 %5669, i64* %5666, align 4, !dbg !368
  %5670 = load i8*, i8** %5502, align 8, !dbg !369
  %5671 = load i32, i32* %5517, align 4, !dbg !370
  %5672 = alloca i8*, align 8, !dbg !371
  %5673 = getelementptr i8, i8* %5670, i32 %5671, !dbg !372
  store i8* %5673, i8** %5672, align 8, !dbg !373
  %5674 = load i32, i32* %5510, align 4, !dbg !374
  %5675 = getelementptr i8, i8* %5670, i32 %5674, !dbg !375
  br label %5676, !dbg !376

5676:                                             ; preds = %5683, %5662
  %5677 = load i32, i32* %5663, align 4, !dbg !377
  %5678 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5505, i32 0, i32 23, i32 %5677, !dbg !378
  %5679 = load i8*, i8** %5672, align 8, !dbg !379
  %5680 = load i8, i8* %5679, align 1, !dbg !380
  %5681 = zext i8 %5680 to i32, !dbg !381
  store i32 %5681, i32* %5503, align 4, !dbg !382
  store i32 %5681, i32* %5678, align 4, !dbg !383
  %5682 = icmp sgt i8 %5680, -1, !dbg !384
  br i1 %5682, label %5706, label %5697, !dbg !385

5683:                                             ; preds = %5697, %5706
  %5684 = load i32, i32* %5663, align 4, !dbg !386
  %5685 = add i32 %5684, 1, !dbg !387
  store i32 %5685, i32* %5663, align 4, !dbg !388
  %5686 = load i64, i64* %5666, align 4, !dbg !389
  %5687 = and i64 4294967295, %5686, !dbg !390
  %5688 = trunc i64 %5687 to i32, !dbg !391
  %5689 = getelementptr i32, i32* %5510, i32 %5685, !dbg !392
  store i32 %5688, i32* %5689, align 4, !dbg !393
  %5690 = load i32, i32* %5663, align 4, !dbg !394
  %5691 = icmp sle i32 %5690, 2, !dbg !395
  %5692 = load i8*, i8** %5672, align 8, !dbg !396
  %5693 = ptrtoint i8* %5692 to i64, !dbg !397
  %5694 = ptrtoint i8* %5675 to i64, !dbg !398
  %5695 = icmp ult i64 %5693, %5694, !dbg !399
  %5696 = and i1 %5691, %5695, !dbg !400
  br i1 %5696, label %5676, label %5715, !dbg !401

5697:                                             ; preds = %5676
  %5698 = load i8*, i8** %5672, align 8, !dbg !402
  %5699 = call i8 @sqlite3GetVarint32(i8* %5698, i32* %5503), !dbg !403
  %5700 = getelementptr i8, i8* %5698, i8 %5699, !dbg !404
  store i8* %5700, i8** %5672, align 8, !dbg !405
  %5701 = load i32, i32* %5503, align 4, !dbg !406
  store i32 %5701, i32* %5678, align 4, !dbg !407
  %5702 = load i64, i64* %5666, align 4, !dbg !408
  %5703 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5701), !dbg !409
  %5704 = zext i32 %5703 to i64, !dbg !410
  %5705 = add i64 %5702, %5704, !dbg !411
  store i64 %5705, i64* %5666, align 4, !dbg !412
  br label %5683, !dbg !413

5706:                                             ; preds = %5676
  %5707 = getelementptr i8, i8* %5679, i32 1, !dbg !414
  store i8* %5707, i8** %5672, align 8, !dbg !415
  %5708 = load i32, i32* %5503, align 4, !dbg !416
  %5709 = trunc i32 %5708 to i8, !dbg !417
  %5710 = getelementptr i8, i8* %4, i8 %5709, !dbg !418
  %5711 = load i8, i8* %5710, align 1, !dbg !419
  %5712 = zext i8 %5711 to i64, !dbg !420
  %5713 = load i64, i64* %5666, align 4, !dbg !421
  %5714 = add i64 %5713, %5712, !dbg !422
  store i64 %5714, i64* %5666, align 4, !dbg !423
  br label %5683, !dbg !424

5715:                                             ; preds = %5683
  %5716 = load i64, i64* %5666, align 4, !dbg !425
  %5717 = load i32, i32* %5518, align 4, !dbg !426
  %5718 = zext i32 %5717 to i64, !dbg !427
  %5719 = icmp uge i64 %5693, %5694, !dbg !428
  %5720 = icmp ugt i64 %5693, %5694, !dbg !429
  %5721 = icmp ne i64 %5716, %5718, !dbg !430
  %5722 = icmp ugt i64 %5716, %5718, !dbg !431
  %5723 = or i1 %5720, %5721, !dbg !432
  %5724 = and i1 %5719, %5723, !dbg !433
  %5725 = or i1 %5724, %5722, !dbg !434
  br i1 %5725, label %5726, label %5730, !dbg !435

5726:                                             ; preds = %5715
  %5727 = load i32, i32* %5510, align 4, !dbg !436
  %5728 = icmp eq i32 %5727, 0, !dbg !437
  br i1 %5728, label %5729, label %5730, !dbg !438

5729:                                             ; preds = %5726
  store i32 0, i32* %5663, align 4, !dbg !439
  store i8* %5675, i8** %5672, align 8, !dbg !440
  br label %5730, !dbg !441

5730:                                             ; preds = %5729, %5726, %5715
  %5731 = load i32, i32* %5663, align 4, !dbg !442
  %5732 = trunc i32 %5731 to i16, !dbg !443
  store i16 %5732, i16* %5521, align 2, !dbg !444
  %5733 = load i8*, i8** %5672, align 8, !dbg !445
  %5734 = ptrtoint i8* %5733 to i64, !dbg !446
  %5735 = load i8*, i8** %5502, align 8, !dbg !447
  %5736 = ptrtoint i8* %5735 to i64, !dbg !448
  %5737 = sub i64 %5734, %5736, !dbg !449
  %5738 = trunc i64 %5737 to i32, !dbg !450
  store i32 %5738, i32* %5517, align 4, !dbg !451
  br label %5740, !dbg !452

5739:                                             ; preds = %5654
  store i32 0, i32* %5503, align 4, !dbg !453
  br label %5740, !dbg !454

5740:                                             ; preds = %5730, %5739
  %5741 = load i16, i16* %5521, align 2, !dbg !455
  %5742 = icmp sle i16 %5741, 2, !dbg !456
  br i1 %5742, label %5743, label %5572, !dbg !457

5743:                                             ; preds = %5740
  %5744 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5506, i32 0, i32 1, !dbg !458
  %5745 = load i16, i16* %5744, align 2, !dbg !458
  %5746 = and i16 %5745, 9216, !dbg !458
  %5747 = icmp ne i16 %5746, 0, !dbg !458
  br i1 %5747, label %5748, label %5749, !dbg !458

5748:                                             ; preds = %5743
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5506), !dbg !458
  br label %5750, !dbg !458

5749:                                             ; preds = %5743
  store i16 1, i16* %5744, align 2, !dbg !458
  br label %5750, !dbg !458

5750:                                             ; preds = %5748, %5749, %5619, %5599, %5638, %5649, %5567, %5568
  call void @llvm.stackrestore(i8* %5495), !dbg !459
  br label %5751, !dbg !74

5751:                                             ; preds = %5750, %14
  %5752 = call i8* @llvm.stacksave(), !dbg !1076
  %5753 = alloca i32, align 8, !dbg !1079
  %5754 = alloca i64, align 8, !dbg !1080
  %5755 = alloca i32, align 8, !dbg !1081
  %5756 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !1082
  %5757 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5756, i32 0, i32 1, !dbg !1083
  %5758 = load i16, i16* %5757, align 2, !dbg !1084
  %5759 = and i16 %5758, 36, !dbg !1085
  %5760 = icmp eq i16 %5759, 0, !dbg !1086
  br i1 %5760, label %5761, label %5772, !dbg !1087

5761:                                             ; preds = %5751
  %5762 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %5763 = load %struct.sqlite3_value, %struct.sqlite3_value* %5756, align 8, !dbg !1089
  store %struct.sqlite3_value %5763, %struct.sqlite3_value* %5762, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %5762, i8 67, i8 1), !dbg !1090
  %5764 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5762, i32 0, i32 1, !dbg !1091
  %5765 = load i16, i16* %5764, align 2, !dbg !1092
  %5766 = and i16 %5765, 4, !dbg !1093
  %5767 = icmp eq i16 %5766, 0, !dbg !1094
  br i1 %5767, label %8066, label %5768, !dbg !1095

5768:                                             ; preds = %5761
  %5769 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5762, i32 0, i32 0, !dbg !1096
  %5770 = bitcast %union.MemValue* %5769 to i64*, !dbg !1097
  %5771 = load i64, i64* %5770, align 4, !dbg !1098
  store i64 %5771, i64* %5754, align 4, !dbg !1099
  br label %5776, !dbg !1100

5772:                                             ; preds = %5751
  %5773 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5756, i32 0, i32 0, !dbg !1101
  %5774 = bitcast %union.MemValue* %5773 to i64*, !dbg !1102
  %5775 = load i64, i64* %5774, align 4, !dbg !1103
  store i64 %5775, i64* %5754, align 4, !dbg !1104
  br label %5776, !dbg !1105

5776:                                             ; preds = %5772, %5768
  %5777 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !1170
  %5778 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5777, align 8, !dbg !1106
  %5779 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 12, i32 0, !dbg !1107
  %5780 = load %struct.BtCursor*, %struct.BtCursor** %5779, align 8, !dbg !1108
  store i32 0, i32* %5753, align 4, !dbg !1109
  %5781 = load i64, i64* %5754, align 4, !dbg !1110
  %5782 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %5780, %struct.UnpackedRecord* null, i64 %5781, i32 0, i32* %5753), !dbg !1111
  store i32 %5782, i32* %5755, align 4, !dbg !1112
  %5783 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 18, !dbg !1113
  store i64 %5781, i64* %5783, align 4, !dbg !1114
  %5784 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 2, !dbg !1115
  store i8 0, i8* %5784, align 1, !dbg !1116
  %5785 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 9, !dbg !1117
  store i32 0, i32* %5785, align 4, !dbg !1118
  %5786 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 3, !dbg !1119
  store i8 0, i8* %5786, align 1, !dbg !1120
  %5787 = load i32, i32* %5753, align 4, !dbg !1121
  %5788 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5778, i32 0, i32 10, !dbg !1122
  store i32 %5787, i32* %5788, align 4, !dbg !1123
  %5789 = icmp ne i32 %5787, 0, !dbg !1124
  br i1 %5789, label %5790, label %5791, !dbg !1125

5790:                                             ; preds = %5776
  call void @llvm.stackrestore(i8* %5752), !dbg !1126
  br label %8066, !dbg !1127

5791:                                             ; preds = %5776
  %5792 = load i32, i32* %5755, align 4, !dbg !1128
  call void @llvm.stackrestore(i8* %5752), !dbg !1129
  br label %5793, !dbg !1130

5793:                                             ; preds = %5791, %14
  %5794 = call i8* @llvm.stacksave(), !dbg !167
  %5795 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5796 = load i8, i8* %5795, align 1, !dbg !171
  %5797 = alloca i32, align 4, !dbg !172
  store i32 2, i32* %5797, align 4, !dbg !173
  %5798 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !174
  %5799 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5800 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5798, align 8, !dbg !176
  store %struct.VdbeCursor* %5800, %struct.VdbeCursor** %5799, align 8, !dbg !177
  %5801 = alloca i8*, align 8, !dbg !178
  %5802 = alloca i32, align 4, !dbg !179
  %5803 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5799, i32* %5797), !dbg !180
  %5804 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5799, align 8, !dbg !181
  %5805 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %5806 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 16, !dbg !183
  %5807 = load i16, i16* %5806, align 2, !dbg !184
  %5808 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 19, !dbg !185
  %5809 = load i32*, i32** %5808, align 8, !dbg !186
  %5810 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 0, !dbg !187
  %5811 = load i8, i8* %5810, align 1, !dbg !188
  %5812 = icmp ne i8 %5811, 3, !dbg !189
  %5813 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 2, !dbg !190
  %5814 = load i8, i8* %5813, align 1, !dbg !191
  %5815 = icmp ne i8 %5814, 0, !dbg !192
  %5816 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 14, !dbg !193
  %5817 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 21, !dbg !194
  %5818 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 22, !dbg !195
  %5819 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 20, !dbg !196
  %5820 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 17, !dbg !197
  %5821 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 9, !dbg !198
  %5822 = load i32, i32* %5821, align 4, !dbg !199
  %5823 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5824 = load i32, i32* %5823, align 4, !dbg !201
  %5825 = icmp ne i32 %5822, %5824, !dbg !202
  br i1 %5825, label %5826, label %5868, !dbg !203

5826:                                             ; preds = %5793
  br i1 %5815, label %5848, label %5843, !dbg !204

5827:                                             ; preds = %5843, %5850
  %5828 = load i32, i32* %5823, align 4, !dbg !205
  store i32 %5828, i32* %5821, align 4, !dbg !206
  %5829 = load i8*, i8** %5819, align 8, !dbg !207
  %5830 = load i8, i8* %5829, align 1, !dbg !208
  %5831 = icmp sgt i8 %5830, -1, !dbg !211
  br i1 %5831, label %5832, label %5834, !dbg !212

5832:                                             ; preds = %5827
  %5833 = zext i8 %5830 to i32, !dbg !213
  store i32 %5833, i32* %5809, align 4, !dbg !214
  store i32 1, i32* %5816, align 4, !dbg !215
  br label %5837, !dbg !216

5834:                                             ; preds = %5827
  %5835 = call i8 @sqlite3GetVarint32(i8* %5829, i32* %5809), !dbg !217
  %5836 = zext i8 %5835 to i32, !dbg !218
  store i32 %5836, i32* %5816, align 4, !dbg !219
  br label %5837, !dbg !220

5837:                                             ; preds = %5834, %5832
  store i16 0, i16* %5820, align 2, !dbg !221
  %5838 = load i32, i32* %5818, align 4, !dbg !222
  %5839 = load i32, i32* %5809, align 4, !dbg !223
  %5840 = icmp ult i32 %5838, %5839, !dbg !224
  br i1 %5840, label %5842, label %5841, !dbg !225

5841:                                             ; preds = %5837
  store i8* %5829, i8** %5801, align 8, !dbg !226
  br label %5961, !dbg !227

5842:                                             ; preds = %5837
  store i8* null, i8** %5819, align 8, !dbg !228
  store i32 0, i32* %5818, align 4, !dbg !229
  br label %5868, !dbg !230

5843:                                             ; preds = %5826
  %5844 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 12, i32 0, !dbg !231
  %5845 = load %struct.BtCursor*, %struct.BtCursor** %5844, align 8, !dbg !232
  %5846 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5845), !dbg !233
  store i32 %5846, i32* %5817, align 4, !dbg !234
  %5847 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5845, i32* %5818), !dbg !235
  store i8* %5847, i8** %5819, align 8, !dbg !236
  br label %5827, !dbg !237

5848:                                             ; preds = %5826
  %5849 = icmp eq i8 %5811, 3, !dbg !238
  br i1 %5849, label %5850, label %5861, !dbg !239

5850:                                             ; preds = %5848
  %5851 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 10, !dbg !240
  %5852 = load i32, i32* %5851, align 4, !dbg !241
  %5853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5852, !dbg !242
  %5854 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5853, i32 0, i32 1, !dbg !243
  %5855 = load i16, i16* %5854, align 2, !dbg !244
  %5856 = and i16 %5855, 16, !dbg !245
  %5857 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5853, i32 0, i32 4, !dbg !246
  %5858 = load i32, i32* %5857, align 4, !dbg !247
  store i32 %5858, i32* %5817, align 4, !dbg !248
  store i32 %5858, i32* %5818, align 4, !dbg !249
  %5859 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5853, i32 0, i32 5, !dbg !250
  %5860 = load i8*, i8** %5859, align 8, !dbg !251
  store i8* %5860, i8** %5819, align 8, !dbg !252
  br label %5827, !dbg !253

5861:                                             ; preds = %5848
  %5862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 1, !dbg !254
  %5863 = load i16, i16* %5862, align 2, !dbg !254
  %5864 = and i16 %5863, 9216, !dbg !254
  %5865 = icmp ne i16 %5864, 0, !dbg !254
  br i1 %5865, label %5866, label %5867, !dbg !254

5866:                                             ; preds = %5861
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5805), !dbg !254
  br label %6049, !dbg !254

5867:                                             ; preds = %5861
  store i16 1, i16* %5862, align 2, !dbg !254
  br label %6049, !dbg !254

5868:                                             ; preds = %5842, %5793
  %5869 = load i16, i16* %5820, align 2, !dbg !255
  %5870 = icmp ule i16 %5869, 5, !dbg !256
  br i1 %5870, label %5953, label %5950, !dbg !257

5871:                                             ; preds = %5950, %6039
  %5872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 1, !dbg !258
  %5873 = load i16, i16* %5872, align 2, !dbg !259
  %5874 = and i16 9216, %5873, !dbg !260
  %5875 = icmp eq i16 0, %5874, !dbg !261
  br i1 %5875, label %5876, label %5880, !dbg !262

5876:                                             ; preds = %5871
  %5877 = icmp ne i16 %5874, 0, !dbg !263
  br i1 %5877, label %5878, label %5879, !dbg !263

5878:                                             ; preds = %5876
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5805), !dbg !263
  br label %5880, !dbg !263

5879:                                             ; preds = %5876
  store i16 1, i16* %5872, align 2, !dbg !263
  br label %5880, !dbg !263

5880:                                             ; preds = %5878, %5879, %5871
  %5881 = load i32, i32* %5802, align 4, !dbg !264
  %5882 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 23, i32 5, !dbg !265
  %5883 = load i32, i32* %5882, align 4, !dbg !266
  %5884 = load i32, i32* %5818, align 4, !dbg !267
  %5885 = getelementptr i32, i32* %5809, i32 6, !dbg !268
  %5886 = load i32, i32* %5885, align 4, !dbg !269
  %5887 = icmp sge i32 %5884, %5886, !dbg !270
  br i1 %5887, label %5888, label %5928, !dbg !271

5888:                                             ; preds = %5880
  %5889 = load i8*, i8** %5819, align 8, !dbg !272
  %5890 = ptrtoint i8* %5889 to i64, !dbg !273
  %5891 = getelementptr i32, i32* %5809, i32 5, !dbg !274
  %5892 = load i32, i32* %5891, align 4, !dbg !275
  %5893 = zext i32 %5892 to i64, !dbg !276
  %5894 = add i64 %5890, %5893, !dbg !277
  %5895 = inttoptr i64 %5894 to i8*, !dbg !278
  store i8* %5895, i8** %5801, align 8, !dbg !279
  %5896 = load i32, i32* %5802, align 4, !dbg !280
  %5897 = icmp ult i32 %5896, 12, !dbg !281
  br i1 %5897, label %5898, label %5900, !dbg !282

5898:                                             ; preds = %5888
  %5899 = call i32 @sqlite3VdbeSerialGet(i8* %5895, i32 %5896, %struct.sqlite3_value* %5805), !dbg !283
  br label %6049, !dbg !284

5900:                                             ; preds = %5888
  %5901 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5901, align 2, !dbg !286
  %5902 = getelementptr i16, i16* %5901, i32 1, !dbg !287
  store i16 514, i16* %5902, align 2, !dbg !288
  %5903 = load i32, i32* %5802, align 4, !dbg !289
  %5904 = sub i32 %5903, 12, !dbg !290
  %5905 = lshr i32 %5904, 1, !dbg !291
  %5906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 4, !dbg !292
  store i32 %5905, i32* %5906, align 4, !dbg !293
  %5907 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 2, !dbg !294
  store i8 %5796, i8* %5907, align 1, !dbg !295
  %5908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 5, !dbg !296
  %5909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 7, !dbg !297
  %5910 = load i32, i32* %5909, align 4, !dbg !298
  %5911 = add i32 %5905, 2, !dbg !299
  %5912 = icmp slt i32 %5910, %5911, !dbg !300
  br i1 %5912, label %5913, label %5915, !dbg !301

5913:                                             ; preds = %5900
  store i16 1, i16* %5872, align 2, !dbg !302
  %5914 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5805, i32 %5911, i32 0), !dbg !303
  br label %5918, !dbg !304

5915:                                             ; preds = %5900
  %5916 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 6, !dbg !305
  %5917 = load i8*, i8** %5916, align 8, !dbg !306
  store i8* %5917, i8** %5908, align 8, !dbg !307
  br label %5918, !dbg !308

5918:                                             ; preds = %5915, %5913
  %5919 = zext i32 %5905 to i64, !dbg !309
  %5920 = load i8*, i8** %5908, align 8, !dbg !310
  %5921 = load i8*, i8** %5801, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5920, i8* %5921, i64 %5919, i1 false), !dbg !312
  %5922 = getelementptr i8, i8* %5920, i32 %5905, !dbg !313
  store i8 0, i8* %5922, align 1, !dbg !314
  %5923 = add i32 %5905, 1, !dbg !315
  %5924 = getelementptr i8, i8* %5920, i32 %5923, !dbg !316
  store i8 0, i8* %5924, align 1, !dbg !317
  %5925 = and i32 %5903, 1, !dbg !318
  %5926 = getelementptr i16, i16* %5901, i32 %5925, !dbg !319
  %5927 = load i16, i16* %5926, align 2, !dbg !320
  store i16 %5927, i16* %5872, align 2, !dbg !321
  br label %6049, !dbg !322

5928:                                             ; preds = %5880
  %5929 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 2, !dbg !323
  store i8 %5796, i8* %5929, align 1, !dbg !324
  %5930 = load i32, i32* %5802, align 4, !dbg !325
  %5931 = and i32 %5930, 1, !dbg !326
  %5932 = icmp eq i32 %5931, 0, !dbg !327
  %5933 = icmp sge i32 %5930, 12, !dbg !328
  %5934 = and i1 %5933, %5932, !dbg !329
  %5935 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5930), !dbg !330
  %5936 = icmp eq i32 %5935, 0, !dbg !331
  br i1 %5936, label %5948, label %5937, !dbg !332

5937:                                             ; preds = %5928
  %5938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 12, i32 0, !dbg !333
  %5939 = load %struct.BtCursor*, %struct.BtCursor** %5938, align 8, !dbg !334
  %5940 = getelementptr i32, i32* %5809, i32 5, !dbg !335
  %5941 = load i32, i32* %5940, align 4, !dbg !336
  %5942 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5939, i32 %5941, i32 %5935, %struct.sqlite3_value* %5805), !dbg !337
  %5943 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 5, !dbg !338
  %5944 = load i8*, i8** %5943, align 8, !dbg !339
  %5945 = call i32 @sqlite3VdbeSerialGet(i8* %5944, i32 %5930, %struct.sqlite3_value* %5805), !dbg !340
  %5946 = load i16, i16* %5872, align 2, !dbg !341
  %5947 = and i16 %5946, -4097, !dbg !342
  store i16 %5947, i16* %5872, align 2, !dbg !343
  br label %6049, !dbg !344

5948:                                             ; preds = %5928
  %5949 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5930, %struct.sqlite3_value* %5805), !dbg !345
  br label %6049, !dbg !346

5950:                                             ; preds = %5868
  %5951 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 23, i32 5, !dbg !347
  %5952 = load i32, i32* %5951, align 4, !dbg !348
  store i32 %5952, i32* %5802, align 4, !dbg !349
  br label %5871, !dbg !350

5953:                                             ; preds = %5868
  %5954 = load i32, i32* %5816, align 4, !dbg !351
  %5955 = load i32, i32* %5809, align 4, !dbg !352
  %5956 = icmp ult i32 %5954, %5955, !dbg !353
  br i1 %5956, label %5957, label %6038, !dbg !354

5957:                                             ; preds = %5953
  %5958 = load i8*, i8** %5819, align 8, !dbg !355
  %5959 = icmp eq i8* %5958, null, !dbg !356
  br i1 %5959, label %5961, label %5960, !dbg !357

5960:                                             ; preds = %5957
  store i8* %5958, i8** %5801, align 8, !dbg !358
  br label %5961, !dbg !359

5961:                                             ; preds = %5960, %5957, %5841
  %5962 = alloca i32, align 4, !dbg !360
  %5963 = load i16, i16* %5820, align 2, !dbg !361
  %5964 = zext i16 %5963 to i32, !dbg !362
  store i32 %5964, i32* %5962, align 4, !dbg !363
  %5965 = alloca i64, align 8, !dbg !364
  %5966 = getelementptr i32, i32* %5809, i32 %5964, !dbg !365
  %5967 = load i32, i32* %5966, align 4, !dbg !366
  %5968 = zext i32 %5967 to i64, !dbg !367
  store i64 %5968, i64* %5965, align 4, !dbg !368
  %5969 = load i8*, i8** %5801, align 8, !dbg !369
  %5970 = load i32, i32* %5816, align 4, !dbg !370
  %5971 = alloca i8*, align 8, !dbg !371
  %5972 = getelementptr i8, i8* %5969, i32 %5970, !dbg !372
  store i8* %5972, i8** %5971, align 8, !dbg !373
  %5973 = load i32, i32* %5809, align 4, !dbg !374
  %5974 = getelementptr i8, i8* %5969, i32 %5973, !dbg !375
  br label %5975, !dbg !376

5975:                                             ; preds = %5982, %5961
  %5976 = load i32, i32* %5962, align 4, !dbg !377
  %5977 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5804, i32 0, i32 23, i32 %5976, !dbg !378
  %5978 = load i8*, i8** %5971, align 8, !dbg !379
  %5979 = load i8, i8* %5978, align 1, !dbg !380
  %5980 = zext i8 %5979 to i32, !dbg !381
  store i32 %5980, i32* %5802, align 4, !dbg !382
  store i32 %5980, i32* %5977, align 4, !dbg !383
  %5981 = icmp sgt i8 %5979, -1, !dbg !384
  br i1 %5981, label %6005, label %5996, !dbg !385

5982:                                             ; preds = %5996, %6005
  %5983 = load i32, i32* %5962, align 4, !dbg !386
  %5984 = add i32 %5983, 1, !dbg !387
  store i32 %5984, i32* %5962, align 4, !dbg !388
  %5985 = load i64, i64* %5965, align 4, !dbg !389
  %5986 = and i64 4294967295, %5985, !dbg !390
  %5987 = trunc i64 %5986 to i32, !dbg !391
  %5988 = getelementptr i32, i32* %5809, i32 %5984, !dbg !392
  store i32 %5987, i32* %5988, align 4, !dbg !393
  %5989 = load i32, i32* %5962, align 4, !dbg !394
  %5990 = icmp sle i32 %5989, 5, !dbg !395
  %5991 = load i8*, i8** %5971, align 8, !dbg !396
  %5992 = ptrtoint i8* %5991 to i64, !dbg !397
  %5993 = ptrtoint i8* %5974 to i64, !dbg !398
  %5994 = icmp ult i64 %5992, %5993, !dbg !399
  %5995 = and i1 %5990, %5994, !dbg !400
  br i1 %5995, label %5975, label %6014, !dbg !401

5996:                                             ; preds = %5975
  %5997 = load i8*, i8** %5971, align 8, !dbg !402
  %5998 = call i8 @sqlite3GetVarint32(i8* %5997, i32* %5802), !dbg !403
  %5999 = getelementptr i8, i8* %5997, i8 %5998, !dbg !404
  store i8* %5999, i8** %5971, align 8, !dbg !405
  %6000 = load i32, i32* %5802, align 4, !dbg !406
  store i32 %6000, i32* %5977, align 4, !dbg !407
  %6001 = load i64, i64* %5965, align 4, !dbg !408
  %6002 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6000), !dbg !409
  %6003 = zext i32 %6002 to i64, !dbg !410
  %6004 = add i64 %6001, %6003, !dbg !411
  store i64 %6004, i64* %5965, align 4, !dbg !412
  br label %5982, !dbg !413

6005:                                             ; preds = %5975
  %6006 = getelementptr i8, i8* %5978, i32 1, !dbg !414
  store i8* %6006, i8** %5971, align 8, !dbg !415
  %6007 = load i32, i32* %5802, align 4, !dbg !416
  %6008 = trunc i32 %6007 to i8, !dbg !417
  %6009 = getelementptr i8, i8* %4, i8 %6008, !dbg !418
  %6010 = load i8, i8* %6009, align 1, !dbg !419
  %6011 = zext i8 %6010 to i64, !dbg !420
  %6012 = load i64, i64* %5965, align 4, !dbg !421
  %6013 = add i64 %6012, %6011, !dbg !422
  store i64 %6013, i64* %5965, align 4, !dbg !423
  br label %5982, !dbg !424

6014:                                             ; preds = %5982
  %6015 = load i64, i64* %5965, align 4, !dbg !425
  %6016 = load i32, i32* %5817, align 4, !dbg !426
  %6017 = zext i32 %6016 to i64, !dbg !427
  %6018 = icmp uge i64 %5992, %5993, !dbg !428
  %6019 = icmp ugt i64 %5992, %5993, !dbg !429
  %6020 = icmp ne i64 %6015, %6017, !dbg !430
  %6021 = icmp ugt i64 %6015, %6017, !dbg !431
  %6022 = or i1 %6019, %6020, !dbg !432
  %6023 = and i1 %6018, %6022, !dbg !433
  %6024 = or i1 %6023, %6021, !dbg !434
  br i1 %6024, label %6025, label %6029, !dbg !435

6025:                                             ; preds = %6014
  %6026 = load i32, i32* %5809, align 4, !dbg !436
  %6027 = icmp eq i32 %6026, 0, !dbg !437
  br i1 %6027, label %6028, label %6029, !dbg !438

6028:                                             ; preds = %6025
  store i32 0, i32* %5962, align 4, !dbg !439
  store i8* %5974, i8** %5971, align 8, !dbg !440
  br label %6029, !dbg !441

6029:                                             ; preds = %6028, %6025, %6014
  %6030 = load i32, i32* %5962, align 4, !dbg !442
  %6031 = trunc i32 %6030 to i16, !dbg !443
  store i16 %6031, i16* %5820, align 2, !dbg !444
  %6032 = load i8*, i8** %5971, align 8, !dbg !445
  %6033 = ptrtoint i8* %6032 to i64, !dbg !446
  %6034 = load i8*, i8** %5801, align 8, !dbg !447
  %6035 = ptrtoint i8* %6034 to i64, !dbg !448
  %6036 = sub i64 %6033, %6035, !dbg !449
  %6037 = trunc i64 %6036 to i32, !dbg !450
  store i32 %6037, i32* %5816, align 4, !dbg !451
  br label %6039, !dbg !452

6038:                                             ; preds = %5953
  store i32 0, i32* %5802, align 4, !dbg !453
  br label %6039, !dbg !454

6039:                                             ; preds = %6029, %6038
  %6040 = load i16, i16* %5820, align 2, !dbg !455
  %6041 = icmp sle i16 %6040, 5, !dbg !456
  br i1 %6041, label %6042, label %5871, !dbg !457

6042:                                             ; preds = %6039
  %6043 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5805, i32 0, i32 1, !dbg !458
  %6044 = load i16, i16* %6043, align 2, !dbg !458
  %6045 = and i16 %6044, 9216, !dbg !458
  %6046 = icmp ne i16 %6045, 0, !dbg !458
  br i1 %6046, label %6047, label %6048, !dbg !458

6047:                                             ; preds = %6042
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5805), !dbg !458
  br label %6049, !dbg !458

6048:                                             ; preds = %6042
  store i16 1, i16* %6043, align 2, !dbg !458
  br label %6049, !dbg !458

6049:                                             ; preds = %6047, %6048, %5918, %5898, %5937, %5948, %5866, %5867
  call void @llvm.stackrestore(i8* %5794), !dbg !459
  br label %6050, !dbg !74

6050:                                             ; preds = %6049, %14
  %6051 = call i8* @llvm.stacksave(), !dbg !460
  %6052 = alloca i32, align 8, !dbg !463
  %6053 = alloca i32, align 8, !dbg !464
  %6054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !465
  %6055 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !466
  %6056 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6054, i32 0, i32 1, !dbg !467
  %6057 = load i16, i16* %6056, align 2, !dbg !468
  %6058 = alloca i16, align 8, !dbg !469
  store i16 %6057, i16* %6058, align 2, !dbg !470
  %6059 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6055, i32 0, i32 1, !dbg !471
  %6060 = load i16, i16* %6059, align 2, !dbg !472
  %6061 = alloca i16, align 8, !dbg !473
  store i16 %6060, i16* %6061, align 2, !dbg !474
  %6062 = or i16 %6057, %6060, !dbg !475
  %6063 = and i16 %6062, 1, !dbg !476
  %6064 = icmp ne i16 %6063, 0, !dbg !477
  br i1 %6064, label %6065, label %6066, !dbg !478

6065:                                             ; preds = %6050
  call void @llvm.stackrestore(i8* %6051), !dbg !479
  br label %8066, !dbg !528

6066:                                             ; preds = %6050
  %6067 = and i16 %6057, 2, !dbg !482
  %6068 = and i16 %6057, 44, !dbg !483
  %6069 = icmp eq i16 %6067, 0, !dbg !484
  %6070 = icmp ne i16 %6068, 0, !dbg !485
  %6071 = and i16 %6060, 2, !dbg !486
  %6072 = and i16 %6060, 44, !dbg !487
  %6073 = icmp eq i16 %6071, 0, !dbg !488
  %6074 = icmp ne i16 %6072, 0, !dbg !489
  %6075 = and i1 %6069, %6070, !dbg !490
  br i1 %6075, label %6076, label %6082, !dbg !491

6076:                                             ; preds = %6066
  %6077 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %6054, i8 1, i8 1), !dbg !492
  %6078 = load i16, i16* %6056, align 2, !dbg !493
  %6079 = and i16 %6078, 15936, !dbg !493
  %6080 = and i16 %6057, -15937, !dbg !494
  %6081 = or i16 %6079, %6080, !dbg !495
  store i16 %6081, i16* %6058, align 2, !dbg !496
  br label %6082, !dbg !497

6082:                                             ; preds = %6076, %6066
  %6083 = and i1 %6073, %6074, !dbg !498
  br i1 %6083, label %6084, label %6090, !dbg !499

6084:                                             ; preds = %6082
  %6085 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %6055, i8 1, i8 1), !dbg !500
  %6086 = load i16, i16* %6059, align 2, !dbg !501
  %6087 = and i16 %6086, 15936, !dbg !501
  %6088 = and i16 %6060, -15937, !dbg !502
  %6089 = or i16 %6087, %6088, !dbg !503
  store i16 %6089, i16* %6061, align 2, !dbg !504
  br label %6090, !dbg !505

6090:                                             ; preds = %6084, %6082
  %6091 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 49, !dbg !506
  %6092 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6091, i32 0, i32 6, !dbg !507
  %6093 = bitcast %union.p4union* %6092 to %struct.CollSeq**, !dbg !508
  %6094 = load %struct.CollSeq*, %struct.CollSeq** %6093, align 8, !dbg !509
  %6095 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %6055, %struct.sqlite3_value* %6054, %struct.CollSeq* %6094), !dbg !510
  store i32 %6095, i32* %6052, align 4, !dbg !511
  %6096 = icmp slt i32 %6095, 0, !dbg !512
  br i1 %6096, label %6097, label %6098, !dbg !513

6097:                                             ; preds = %6090
  store i32 1, i32* %6053, align 4, !dbg !514
  br label %6102, !dbg !515

6098:                                             ; preds = %6090
  %6099 = icmp eq i32 %6095, 0, !dbg !516
  br i1 %6099, label %6100, label %6101, !dbg !517

6100:                                             ; preds = %6098
  store i32 0, i32* %6053, align 4, !dbg !518
  br label %6102, !dbg !519

6101:                                             ; preds = %6098
  store i32 1, i32* %6053, align 4, !dbg !520
  br label %6102, !dbg !521

6102:                                             ; preds = %6101, %6100, %6097
  store i16 %6060, i16* %6061, align 2, !dbg !522
  store i16 %6057, i16* %6058, align 2, !dbg !523
  %6103 = load i32, i32* %6053, align 4, !dbg !524
  %6104 = icmp ne i32 %6103, 0, !dbg !525
  call void @llvm.stackrestore(i8* %6051), !dbg !526
  br i1 %6104, label %8066, label %6105, !dbg !527

6105:                                             ; preds = %6102, %14
  %6106 = call i8* @llvm.stacksave(), !dbg !167
  %6107 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %6108 = load i8, i8* %6107, align 1, !dbg !171
  %6109 = alloca i32, align 4, !dbg !172
  store i32 0, i32* %6109, align 4, !dbg !173
  %6110 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %6111 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !176
  store %struct.VdbeCursor* %6111, %struct.VdbeCursor** %6110, align 8, !dbg !177
  %6112 = alloca i8*, align 8, !dbg !178
  %6113 = alloca i32, align 4, !dbg !179
  %6114 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6110, i32* %6109), !dbg !180
  %6115 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6110, align 8, !dbg !181
  %6116 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !182
  %6117 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 16, !dbg !183
  %6118 = load i16, i16* %6117, align 2, !dbg !184
  %6119 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 19, !dbg !185
  %6120 = load i32*, i32** %6119, align 8, !dbg !186
  %6121 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 0, !dbg !187
  %6122 = load i8, i8* %6121, align 1, !dbg !188
  %6123 = icmp ne i8 %6122, 3, !dbg !189
  %6124 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 2, !dbg !190
  %6125 = load i8, i8* %6124, align 1, !dbg !191
  %6126 = icmp ne i8 %6125, 0, !dbg !192
  %6127 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 14, !dbg !193
  %6128 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 21, !dbg !194
  %6129 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 22, !dbg !195
  %6130 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 20, !dbg !196
  %6131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 17, !dbg !197
  %6132 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 9, !dbg !198
  %6133 = load i32, i32* %6132, align 4, !dbg !199
  %6134 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %6135 = load i32, i32* %6134, align 4, !dbg !201
  %6136 = icmp ne i32 %6133, %6135, !dbg !202
  br i1 %6136, label %6137, label %6179, !dbg !203

6137:                                             ; preds = %6105
  br i1 %6126, label %6159, label %6154, !dbg !204

6138:                                             ; preds = %6154, %6161
  %6139 = load i32, i32* %6134, align 4, !dbg !205
  store i32 %6139, i32* %6132, align 4, !dbg !206
  %6140 = load i8*, i8** %6130, align 8, !dbg !207
  %6141 = load i8, i8* %6140, align 1, !dbg !208
  %6142 = icmp sgt i8 %6141, -1, !dbg !211
  br i1 %6142, label %6143, label %6145, !dbg !212

6143:                                             ; preds = %6138
  %6144 = zext i8 %6141 to i32, !dbg !213
  store i32 %6144, i32* %6120, align 4, !dbg !214
  store i32 1, i32* %6127, align 4, !dbg !215
  br label %6148, !dbg !216

6145:                                             ; preds = %6138
  %6146 = call i8 @sqlite3GetVarint32(i8* %6140, i32* %6120), !dbg !217
  %6147 = zext i8 %6146 to i32, !dbg !218
  store i32 %6147, i32* %6127, align 4, !dbg !219
  br label %6148, !dbg !220

6148:                                             ; preds = %6145, %6143
  store i16 0, i16* %6131, align 2, !dbg !221
  %6149 = load i32, i32* %6129, align 4, !dbg !222
  %6150 = load i32, i32* %6120, align 4, !dbg !223
  %6151 = icmp ult i32 %6149, %6150, !dbg !224
  br i1 %6151, label %6153, label %6152, !dbg !225

6152:                                             ; preds = %6148
  store i8* %6140, i8** %6112, align 8, !dbg !226
  br label %6272, !dbg !227

6153:                                             ; preds = %6148
  store i8* null, i8** %6130, align 8, !dbg !228
  store i32 0, i32* %6129, align 4, !dbg !229
  br label %6179, !dbg !230

6154:                                             ; preds = %6137
  %6155 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 12, i32 0, !dbg !231
  %6156 = load %struct.BtCursor*, %struct.BtCursor** %6155, align 8, !dbg !232
  %6157 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6156), !dbg !233
  store i32 %6157, i32* %6128, align 4, !dbg !234
  %6158 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6156, i32* %6129), !dbg !235
  store i8* %6158, i8** %6130, align 8, !dbg !236
  br label %6138, !dbg !237

6159:                                             ; preds = %6137
  %6160 = icmp eq i8 %6122, 3, !dbg !238
  br i1 %6160, label %6161, label %6172, !dbg !239

6161:                                             ; preds = %6159
  %6162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 10, !dbg !240
  %6163 = load i32, i32* %6162, align 4, !dbg !241
  %6164 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6163, !dbg !242
  %6165 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6164, i32 0, i32 1, !dbg !243
  %6166 = load i16, i16* %6165, align 2, !dbg !244
  %6167 = and i16 %6166, 16, !dbg !245
  %6168 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6164, i32 0, i32 4, !dbg !246
  %6169 = load i32, i32* %6168, align 4, !dbg !247
  store i32 %6169, i32* %6128, align 4, !dbg !248
  store i32 %6169, i32* %6129, align 4, !dbg !249
  %6170 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6164, i32 0, i32 5, !dbg !250
  %6171 = load i8*, i8** %6170, align 8, !dbg !251
  store i8* %6171, i8** %6130, align 8, !dbg !252
  br label %6138, !dbg !253

6172:                                             ; preds = %6159
  %6173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 1, !dbg !254
  %6174 = load i16, i16* %6173, align 2, !dbg !254
  %6175 = and i16 %6174, 9216, !dbg !254
  %6176 = icmp ne i16 %6175, 0, !dbg !254
  br i1 %6176, label %6177, label %6178, !dbg !254

6177:                                             ; preds = %6172
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6116), !dbg !254
  br label %6360, !dbg !254

6178:                                             ; preds = %6172
  store i16 1, i16* %6173, align 2, !dbg !254
  br label %6360, !dbg !254

6179:                                             ; preds = %6153, %6105
  %6180 = load i16, i16* %6131, align 2, !dbg !255
  %6181 = icmp ule i16 %6180, 4, !dbg !256
  br i1 %6181, label %6264, label %6261, !dbg !257

6182:                                             ; preds = %6261, %6350
  %6183 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 1, !dbg !258
  %6184 = load i16, i16* %6183, align 2, !dbg !259
  %6185 = and i16 9216, %6184, !dbg !260
  %6186 = icmp eq i16 0, %6185, !dbg !261
  br i1 %6186, label %6187, label %6191, !dbg !262

6187:                                             ; preds = %6182
  %6188 = icmp ne i16 %6185, 0, !dbg !263
  br i1 %6188, label %6189, label %6190, !dbg !263

6189:                                             ; preds = %6187
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6116), !dbg !263
  br label %6191, !dbg !263

6190:                                             ; preds = %6187
  store i16 1, i16* %6183, align 2, !dbg !263
  br label %6191, !dbg !263

6191:                                             ; preds = %6189, %6190, %6182
  %6192 = load i32, i32* %6113, align 4, !dbg !264
  %6193 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 23, i32 4, !dbg !265
  %6194 = load i32, i32* %6193, align 4, !dbg !266
  %6195 = load i32, i32* %6129, align 4, !dbg !267
  %6196 = getelementptr i32, i32* %6120, i32 5, !dbg !268
  %6197 = load i32, i32* %6196, align 4, !dbg !269
  %6198 = icmp sge i32 %6195, %6197, !dbg !270
  br i1 %6198, label %6199, label %6239, !dbg !271

6199:                                             ; preds = %6191
  %6200 = load i8*, i8** %6130, align 8, !dbg !272
  %6201 = ptrtoint i8* %6200 to i64, !dbg !273
  %6202 = getelementptr i32, i32* %6120, i32 4, !dbg !274
  %6203 = load i32, i32* %6202, align 4, !dbg !275
  %6204 = zext i32 %6203 to i64, !dbg !276
  %6205 = add i64 %6201, %6204, !dbg !277
  %6206 = inttoptr i64 %6205 to i8*, !dbg !278
  store i8* %6206, i8** %6112, align 8, !dbg !279
  %6207 = load i32, i32* %6113, align 4, !dbg !280
  %6208 = icmp ult i32 %6207, 12, !dbg !281
  br i1 %6208, label %6209, label %6211, !dbg !282

6209:                                             ; preds = %6199
  %6210 = call i32 @sqlite3VdbeSerialGet(i8* %6206, i32 %6207, %struct.sqlite3_value* %6116), !dbg !283
  br label %6360, !dbg !284

6211:                                             ; preds = %6199
  %6212 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %6212, align 2, !dbg !286
  %6213 = getelementptr i16, i16* %6212, i32 1, !dbg !287
  store i16 514, i16* %6213, align 2, !dbg !288
  %6214 = load i32, i32* %6113, align 4, !dbg !289
  %6215 = sub i32 %6214, 12, !dbg !290
  %6216 = lshr i32 %6215, 1, !dbg !291
  %6217 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 4, !dbg !292
  store i32 %6216, i32* %6217, align 4, !dbg !293
  %6218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 2, !dbg !294
  store i8 %6108, i8* %6218, align 1, !dbg !295
  %6219 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 5, !dbg !296
  %6220 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 7, !dbg !297
  %6221 = load i32, i32* %6220, align 4, !dbg !298
  %6222 = add i32 %6216, 2, !dbg !299
  %6223 = icmp slt i32 %6221, %6222, !dbg !300
  br i1 %6223, label %6224, label %6226, !dbg !301

6224:                                             ; preds = %6211
  store i16 1, i16* %6183, align 2, !dbg !302
  %6225 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6116, i32 %6222, i32 0), !dbg !303
  br label %6229, !dbg !304

6226:                                             ; preds = %6211
  %6227 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 6, !dbg !305
  %6228 = load i8*, i8** %6227, align 8, !dbg !306
  store i8* %6228, i8** %6219, align 8, !dbg !307
  br label %6229, !dbg !308

6229:                                             ; preds = %6226, %6224
  %6230 = zext i32 %6216 to i64, !dbg !309
  %6231 = load i8*, i8** %6219, align 8, !dbg !310
  %6232 = load i8*, i8** %6112, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6231, i8* %6232, i64 %6230, i1 false), !dbg !312
  %6233 = getelementptr i8, i8* %6231, i32 %6216, !dbg !313
  store i8 0, i8* %6233, align 1, !dbg !314
  %6234 = add i32 %6216, 1, !dbg !315
  %6235 = getelementptr i8, i8* %6231, i32 %6234, !dbg !316
  store i8 0, i8* %6235, align 1, !dbg !317
  %6236 = and i32 %6214, 1, !dbg !318
  %6237 = getelementptr i16, i16* %6212, i32 %6236, !dbg !319
  %6238 = load i16, i16* %6237, align 2, !dbg !320
  store i16 %6238, i16* %6183, align 2, !dbg !321
  br label %6360, !dbg !322

6239:                                             ; preds = %6191
  %6240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 2, !dbg !323
  store i8 %6108, i8* %6240, align 1, !dbg !324
  %6241 = load i32, i32* %6113, align 4, !dbg !325
  %6242 = and i32 %6241, 1, !dbg !326
  %6243 = icmp eq i32 %6242, 0, !dbg !327
  %6244 = icmp sge i32 %6241, 12, !dbg !328
  %6245 = and i1 %6244, %6243, !dbg !329
  %6246 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6241), !dbg !330
  %6247 = icmp eq i32 %6246, 0, !dbg !331
  br i1 %6247, label %6259, label %6248, !dbg !332

6248:                                             ; preds = %6239
  %6249 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 12, i32 0, !dbg !333
  %6250 = load %struct.BtCursor*, %struct.BtCursor** %6249, align 8, !dbg !334
  %6251 = getelementptr i32, i32* %6120, i32 4, !dbg !335
  %6252 = load i32, i32* %6251, align 4, !dbg !336
  %6253 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6250, i32 %6252, i32 %6246, %struct.sqlite3_value* %6116), !dbg !337
  %6254 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 5, !dbg !338
  %6255 = load i8*, i8** %6254, align 8, !dbg !339
  %6256 = call i32 @sqlite3VdbeSerialGet(i8* %6255, i32 %6241, %struct.sqlite3_value* %6116), !dbg !340
  %6257 = load i16, i16* %6183, align 2, !dbg !341
  %6258 = and i16 %6257, -4097, !dbg !342
  store i16 %6258, i16* %6183, align 2, !dbg !343
  br label %6360, !dbg !344

6259:                                             ; preds = %6239
  %6260 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6241, %struct.sqlite3_value* %6116), !dbg !345
  br label %6360, !dbg !346

6261:                                             ; preds = %6179
  %6262 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 23, i32 4, !dbg !347
  %6263 = load i32, i32* %6262, align 4, !dbg !348
  store i32 %6263, i32* %6113, align 4, !dbg !349
  br label %6182, !dbg !350

6264:                                             ; preds = %6179
  %6265 = load i32, i32* %6127, align 4, !dbg !351
  %6266 = load i32, i32* %6120, align 4, !dbg !352
  %6267 = icmp ult i32 %6265, %6266, !dbg !353
  br i1 %6267, label %6268, label %6349, !dbg !354

6268:                                             ; preds = %6264
  %6269 = load i8*, i8** %6130, align 8, !dbg !355
  %6270 = icmp eq i8* %6269, null, !dbg !356
  br i1 %6270, label %6272, label %6271, !dbg !357

6271:                                             ; preds = %6268
  store i8* %6269, i8** %6112, align 8, !dbg !358
  br label %6272, !dbg !359

6272:                                             ; preds = %6271, %6268, %6152
  %6273 = alloca i32, align 4, !dbg !360
  %6274 = load i16, i16* %6131, align 2, !dbg !361
  %6275 = zext i16 %6274 to i32, !dbg !362
  store i32 %6275, i32* %6273, align 4, !dbg !363
  %6276 = alloca i64, align 8, !dbg !364
  %6277 = getelementptr i32, i32* %6120, i32 %6275, !dbg !365
  %6278 = load i32, i32* %6277, align 4, !dbg !366
  %6279 = zext i32 %6278 to i64, !dbg !367
  store i64 %6279, i64* %6276, align 4, !dbg !368
  %6280 = load i8*, i8** %6112, align 8, !dbg !369
  %6281 = load i32, i32* %6127, align 4, !dbg !370
  %6282 = alloca i8*, align 8, !dbg !371
  %6283 = getelementptr i8, i8* %6280, i32 %6281, !dbg !372
  store i8* %6283, i8** %6282, align 8, !dbg !373
  %6284 = load i32, i32* %6120, align 4, !dbg !374
  %6285 = getelementptr i8, i8* %6280, i32 %6284, !dbg !375
  br label %6286, !dbg !376

6286:                                             ; preds = %6293, %6272
  %6287 = load i32, i32* %6273, align 4, !dbg !377
  %6288 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6115, i32 0, i32 23, i32 %6287, !dbg !378
  %6289 = load i8*, i8** %6282, align 8, !dbg !379
  %6290 = load i8, i8* %6289, align 1, !dbg !380
  %6291 = zext i8 %6290 to i32, !dbg !381
  store i32 %6291, i32* %6113, align 4, !dbg !382
  store i32 %6291, i32* %6288, align 4, !dbg !383
  %6292 = icmp sgt i8 %6290, -1, !dbg !384
  br i1 %6292, label %6316, label %6307, !dbg !385

6293:                                             ; preds = %6307, %6316
  %6294 = load i32, i32* %6273, align 4, !dbg !386
  %6295 = add i32 %6294, 1, !dbg !387
  store i32 %6295, i32* %6273, align 4, !dbg !388
  %6296 = load i64, i64* %6276, align 4, !dbg !389
  %6297 = and i64 4294967295, %6296, !dbg !390
  %6298 = trunc i64 %6297 to i32, !dbg !391
  %6299 = getelementptr i32, i32* %6120, i32 %6295, !dbg !392
  store i32 %6298, i32* %6299, align 4, !dbg !393
  %6300 = load i32, i32* %6273, align 4, !dbg !394
  %6301 = icmp sle i32 %6300, 4, !dbg !395
  %6302 = load i8*, i8** %6282, align 8, !dbg !396
  %6303 = ptrtoint i8* %6302 to i64, !dbg !397
  %6304 = ptrtoint i8* %6285 to i64, !dbg !398
  %6305 = icmp ult i64 %6303, %6304, !dbg !399
  %6306 = and i1 %6301, %6305, !dbg !400
  br i1 %6306, label %6286, label %6325, !dbg !401

6307:                                             ; preds = %6286
  %6308 = load i8*, i8** %6282, align 8, !dbg !402
  %6309 = call i8 @sqlite3GetVarint32(i8* %6308, i32* %6113), !dbg !403
  %6310 = getelementptr i8, i8* %6308, i8 %6309, !dbg !404
  store i8* %6310, i8** %6282, align 8, !dbg !405
  %6311 = load i32, i32* %6113, align 4, !dbg !406
  store i32 %6311, i32* %6288, align 4, !dbg !407
  %6312 = load i64, i64* %6276, align 4, !dbg !408
  %6313 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6311), !dbg !409
  %6314 = zext i32 %6313 to i64, !dbg !410
  %6315 = add i64 %6312, %6314, !dbg !411
  store i64 %6315, i64* %6276, align 4, !dbg !412
  br label %6293, !dbg !413

6316:                                             ; preds = %6286
  %6317 = getelementptr i8, i8* %6289, i32 1, !dbg !414
  store i8* %6317, i8** %6282, align 8, !dbg !415
  %6318 = load i32, i32* %6113, align 4, !dbg !416
  %6319 = trunc i32 %6318 to i8, !dbg !417
  %6320 = getelementptr i8, i8* %4, i8 %6319, !dbg !418
  %6321 = load i8, i8* %6320, align 1, !dbg !419
  %6322 = zext i8 %6321 to i64, !dbg !420
  %6323 = load i64, i64* %6276, align 4, !dbg !421
  %6324 = add i64 %6323, %6322, !dbg !422
  store i64 %6324, i64* %6276, align 4, !dbg !423
  br label %6293, !dbg !424

6325:                                             ; preds = %6293
  %6326 = load i64, i64* %6276, align 4, !dbg !425
  %6327 = load i32, i32* %6128, align 4, !dbg !426
  %6328 = zext i32 %6327 to i64, !dbg !427
  %6329 = icmp uge i64 %6303, %6304, !dbg !428
  %6330 = icmp ugt i64 %6303, %6304, !dbg !429
  %6331 = icmp ne i64 %6326, %6328, !dbg !430
  %6332 = icmp ugt i64 %6326, %6328, !dbg !431
  %6333 = or i1 %6330, %6331, !dbg !432
  %6334 = and i1 %6329, %6333, !dbg !433
  %6335 = or i1 %6334, %6332, !dbg !434
  br i1 %6335, label %6336, label %6340, !dbg !435

6336:                                             ; preds = %6325
  %6337 = load i32, i32* %6120, align 4, !dbg !436
  %6338 = icmp eq i32 %6337, 0, !dbg !437
  br i1 %6338, label %6339, label %6340, !dbg !438

6339:                                             ; preds = %6336
  store i32 0, i32* %6273, align 4, !dbg !439
  store i8* %6285, i8** %6282, align 8, !dbg !440
  br label %6340, !dbg !441

6340:                                             ; preds = %6339, %6336, %6325
  %6341 = load i32, i32* %6273, align 4, !dbg !442
  %6342 = trunc i32 %6341 to i16, !dbg !443
  store i16 %6342, i16* %6131, align 2, !dbg !444
  %6343 = load i8*, i8** %6282, align 8, !dbg !445
  %6344 = ptrtoint i8* %6343 to i64, !dbg !446
  %6345 = load i8*, i8** %6112, align 8, !dbg !447
  %6346 = ptrtoint i8* %6345 to i64, !dbg !448
  %6347 = sub i64 %6344, %6346, !dbg !449
  %6348 = trunc i64 %6347 to i32, !dbg !450
  store i32 %6348, i32* %6127, align 4, !dbg !451
  br label %6350, !dbg !452

6349:                                             ; preds = %6264
  store i32 0, i32* %6113, align 4, !dbg !453
  br label %6350, !dbg !454

6350:                                             ; preds = %6340, %6349
  %6351 = load i16, i16* %6131, align 2, !dbg !455
  %6352 = icmp sle i16 %6351, 4, !dbg !456
  br i1 %6352, label %6353, label %6182, !dbg !457

6353:                                             ; preds = %6350
  %6354 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6116, i32 0, i32 1, !dbg !458
  %6355 = load i16, i16* %6354, align 2, !dbg !458
  %6356 = and i16 %6355, 9216, !dbg !458
  %6357 = icmp ne i16 %6356, 0, !dbg !458
  br i1 %6357, label %6358, label %6359, !dbg !458

6358:                                             ; preds = %6353
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6116), !dbg !458
  br label %6360, !dbg !458

6359:                                             ; preds = %6353
  store i16 1, i16* %6354, align 2, !dbg !458
  br label %6360, !dbg !458

6360:                                             ; preds = %6358, %6359, %6229, %6209, %6248, %6259, %6177, %6178
  call void @llvm.stackrestore(i8* %6106), !dbg !459
  br label %6361, !dbg !74

6361:                                             ; preds = %6360, %14
  %6362 = call i8* @llvm.stacksave(), !dbg !167
  %6363 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %6364 = load i8, i8* %6363, align 1, !dbg !171
  %6365 = alloca i32, align 4, !dbg !172
  store i32 2, i32* %6365, align 4, !dbg !173
  %6366 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !174
  %6367 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %6368 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6366, align 8, !dbg !176
  store %struct.VdbeCursor* %6368, %struct.VdbeCursor** %6367, align 8, !dbg !177
  %6369 = alloca i8*, align 8, !dbg !178
  %6370 = alloca i32, align 4, !dbg !179
  %6371 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6367, i32* %6365), !dbg !180
  %6372 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6367, align 8, !dbg !181
  %6373 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !182
  %6374 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 16, !dbg !183
  %6375 = load i16, i16* %6374, align 2, !dbg !184
  %6376 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 19, !dbg !185
  %6377 = load i32*, i32** %6376, align 8, !dbg !186
  %6378 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 0, !dbg !187
  %6379 = load i8, i8* %6378, align 1, !dbg !188
  %6380 = icmp ne i8 %6379, 3, !dbg !189
  %6381 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 2, !dbg !190
  %6382 = load i8, i8* %6381, align 1, !dbg !191
  %6383 = icmp ne i8 %6382, 0, !dbg !192
  %6384 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 14, !dbg !193
  %6385 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 21, !dbg !194
  %6386 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 22, !dbg !195
  %6387 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 20, !dbg !196
  %6388 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 17, !dbg !197
  %6389 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 9, !dbg !198
  %6390 = load i32, i32* %6389, align 4, !dbg !199
  %6391 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %6392 = load i32, i32* %6391, align 4, !dbg !201
  %6393 = icmp ne i32 %6390, %6392, !dbg !202
  br i1 %6393, label %6394, label %6436, !dbg !203

6394:                                             ; preds = %6361
  br i1 %6383, label %6416, label %6411, !dbg !204

6395:                                             ; preds = %6411, %6418
  %6396 = load i32, i32* %6391, align 4, !dbg !205
  store i32 %6396, i32* %6389, align 4, !dbg !206
  %6397 = load i8*, i8** %6387, align 8, !dbg !207
  %6398 = load i8, i8* %6397, align 1, !dbg !208
  %6399 = icmp sgt i8 %6398, -1, !dbg !211
  br i1 %6399, label %6400, label %6402, !dbg !212

6400:                                             ; preds = %6395
  %6401 = zext i8 %6398 to i32, !dbg !213
  store i32 %6401, i32* %6377, align 4, !dbg !214
  store i32 1, i32* %6384, align 4, !dbg !215
  br label %6405, !dbg !216

6402:                                             ; preds = %6395
  %6403 = call i8 @sqlite3GetVarint32(i8* %6397, i32* %6377), !dbg !217
  %6404 = zext i8 %6403 to i32, !dbg !218
  store i32 %6404, i32* %6384, align 4, !dbg !219
  br label %6405, !dbg !220

6405:                                             ; preds = %6402, %6400
  store i16 0, i16* %6388, align 2, !dbg !221
  %6406 = load i32, i32* %6386, align 4, !dbg !222
  %6407 = load i32, i32* %6377, align 4, !dbg !223
  %6408 = icmp ult i32 %6406, %6407, !dbg !224
  br i1 %6408, label %6410, label %6409, !dbg !225

6409:                                             ; preds = %6405
  store i8* %6397, i8** %6369, align 8, !dbg !226
  br label %6529, !dbg !227

6410:                                             ; preds = %6405
  store i8* null, i8** %6387, align 8, !dbg !228
  store i32 0, i32* %6386, align 4, !dbg !229
  br label %6436, !dbg !230

6411:                                             ; preds = %6394
  %6412 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 12, i32 0, !dbg !231
  %6413 = load %struct.BtCursor*, %struct.BtCursor** %6412, align 8, !dbg !232
  %6414 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6413), !dbg !233
  store i32 %6414, i32* %6385, align 4, !dbg !234
  %6415 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6413, i32* %6386), !dbg !235
  store i8* %6415, i8** %6387, align 8, !dbg !236
  br label %6395, !dbg !237

6416:                                             ; preds = %6394
  %6417 = icmp eq i8 %6379, 3, !dbg !238
  br i1 %6417, label %6418, label %6429, !dbg !239

6418:                                             ; preds = %6416
  %6419 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 10, !dbg !240
  %6420 = load i32, i32* %6419, align 4, !dbg !241
  %6421 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6420, !dbg !242
  %6422 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6421, i32 0, i32 1, !dbg !243
  %6423 = load i16, i16* %6422, align 2, !dbg !244
  %6424 = and i16 %6423, 16, !dbg !245
  %6425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6421, i32 0, i32 4, !dbg !246
  %6426 = load i32, i32* %6425, align 4, !dbg !247
  store i32 %6426, i32* %6385, align 4, !dbg !248
  store i32 %6426, i32* %6386, align 4, !dbg !249
  %6427 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6421, i32 0, i32 5, !dbg !250
  %6428 = load i8*, i8** %6427, align 8, !dbg !251
  store i8* %6428, i8** %6387, align 8, !dbg !252
  br label %6395, !dbg !253

6429:                                             ; preds = %6416
  %6430 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 1, !dbg !254
  %6431 = load i16, i16* %6430, align 2, !dbg !254
  %6432 = and i16 %6431, 9216, !dbg !254
  %6433 = icmp ne i16 %6432, 0, !dbg !254
  br i1 %6433, label %6434, label %6435, !dbg !254

6434:                                             ; preds = %6429
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6373), !dbg !254
  br label %6617, !dbg !254

6435:                                             ; preds = %6429
  store i16 1, i16* %6430, align 2, !dbg !254
  br label %6617, !dbg !254

6436:                                             ; preds = %6410, %6361
  %6437 = load i16, i16* %6388, align 2, !dbg !255
  %6438 = icmp ule i16 %6437, 4, !dbg !256
  br i1 %6438, label %6521, label %6518, !dbg !257

6439:                                             ; preds = %6518, %6607
  %6440 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 1, !dbg !258
  %6441 = load i16, i16* %6440, align 2, !dbg !259
  %6442 = and i16 9216, %6441, !dbg !260
  %6443 = icmp eq i16 0, %6442, !dbg !261
  br i1 %6443, label %6444, label %6448, !dbg !262

6444:                                             ; preds = %6439
  %6445 = icmp ne i16 %6442, 0, !dbg !263
  br i1 %6445, label %6446, label %6447, !dbg !263

6446:                                             ; preds = %6444
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6373), !dbg !263
  br label %6448, !dbg !263

6447:                                             ; preds = %6444
  store i16 1, i16* %6440, align 2, !dbg !263
  br label %6448, !dbg !263

6448:                                             ; preds = %6446, %6447, %6439
  %6449 = load i32, i32* %6370, align 4, !dbg !264
  %6450 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 23, i32 4, !dbg !265
  %6451 = load i32, i32* %6450, align 4, !dbg !266
  %6452 = load i32, i32* %6386, align 4, !dbg !267
  %6453 = getelementptr i32, i32* %6377, i32 5, !dbg !268
  %6454 = load i32, i32* %6453, align 4, !dbg !269
  %6455 = icmp sge i32 %6452, %6454, !dbg !270
  br i1 %6455, label %6456, label %6496, !dbg !271

6456:                                             ; preds = %6448
  %6457 = load i8*, i8** %6387, align 8, !dbg !272
  %6458 = ptrtoint i8* %6457 to i64, !dbg !273
  %6459 = getelementptr i32, i32* %6377, i32 4, !dbg !274
  %6460 = load i32, i32* %6459, align 4, !dbg !275
  %6461 = zext i32 %6460 to i64, !dbg !276
  %6462 = add i64 %6458, %6461, !dbg !277
  %6463 = inttoptr i64 %6462 to i8*, !dbg !278
  store i8* %6463, i8** %6369, align 8, !dbg !279
  %6464 = load i32, i32* %6370, align 4, !dbg !280
  %6465 = icmp ult i32 %6464, 12, !dbg !281
  br i1 %6465, label %6466, label %6468, !dbg !282

6466:                                             ; preds = %6456
  %6467 = call i32 @sqlite3VdbeSerialGet(i8* %6463, i32 %6464, %struct.sqlite3_value* %6373), !dbg !283
  br label %6617, !dbg !284

6468:                                             ; preds = %6456
  %6469 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %6469, align 2, !dbg !286
  %6470 = getelementptr i16, i16* %6469, i32 1, !dbg !287
  store i16 514, i16* %6470, align 2, !dbg !288
  %6471 = load i32, i32* %6370, align 4, !dbg !289
  %6472 = sub i32 %6471, 12, !dbg !290
  %6473 = lshr i32 %6472, 1, !dbg !291
  %6474 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 4, !dbg !292
  store i32 %6473, i32* %6474, align 4, !dbg !293
  %6475 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 2, !dbg !294
  store i8 %6364, i8* %6475, align 1, !dbg !295
  %6476 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 5, !dbg !296
  %6477 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 7, !dbg !297
  %6478 = load i32, i32* %6477, align 4, !dbg !298
  %6479 = add i32 %6473, 2, !dbg !299
  %6480 = icmp slt i32 %6478, %6479, !dbg !300
  br i1 %6480, label %6481, label %6483, !dbg !301

6481:                                             ; preds = %6468
  store i16 1, i16* %6440, align 2, !dbg !302
  %6482 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6373, i32 %6479, i32 0), !dbg !303
  br label %6486, !dbg !304

6483:                                             ; preds = %6468
  %6484 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 6, !dbg !305
  %6485 = load i8*, i8** %6484, align 8, !dbg !306
  store i8* %6485, i8** %6476, align 8, !dbg !307
  br label %6486, !dbg !308

6486:                                             ; preds = %6483, %6481
  %6487 = zext i32 %6473 to i64, !dbg !309
  %6488 = load i8*, i8** %6476, align 8, !dbg !310
  %6489 = load i8*, i8** %6369, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6488, i8* %6489, i64 %6487, i1 false), !dbg !312
  %6490 = getelementptr i8, i8* %6488, i32 %6473, !dbg !313
  store i8 0, i8* %6490, align 1, !dbg !314
  %6491 = add i32 %6473, 1, !dbg !315
  %6492 = getelementptr i8, i8* %6488, i32 %6491, !dbg !316
  store i8 0, i8* %6492, align 1, !dbg !317
  %6493 = and i32 %6471, 1, !dbg !318
  %6494 = getelementptr i16, i16* %6469, i32 %6493, !dbg !319
  %6495 = load i16, i16* %6494, align 2, !dbg !320
  store i16 %6495, i16* %6440, align 2, !dbg !321
  br label %6617, !dbg !322

6496:                                             ; preds = %6448
  %6497 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 2, !dbg !323
  store i8 %6364, i8* %6497, align 1, !dbg !324
  %6498 = load i32, i32* %6370, align 4, !dbg !325
  %6499 = and i32 %6498, 1, !dbg !326
  %6500 = icmp eq i32 %6499, 0, !dbg !327
  %6501 = icmp sge i32 %6498, 12, !dbg !328
  %6502 = and i1 %6501, %6500, !dbg !329
  %6503 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6498), !dbg !330
  %6504 = icmp eq i32 %6503, 0, !dbg !331
  br i1 %6504, label %6516, label %6505, !dbg !332

6505:                                             ; preds = %6496
  %6506 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 12, i32 0, !dbg !333
  %6507 = load %struct.BtCursor*, %struct.BtCursor** %6506, align 8, !dbg !334
  %6508 = getelementptr i32, i32* %6377, i32 4, !dbg !335
  %6509 = load i32, i32* %6508, align 4, !dbg !336
  %6510 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6507, i32 %6509, i32 %6503, %struct.sqlite3_value* %6373), !dbg !337
  %6511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 5, !dbg !338
  %6512 = load i8*, i8** %6511, align 8, !dbg !339
  %6513 = call i32 @sqlite3VdbeSerialGet(i8* %6512, i32 %6498, %struct.sqlite3_value* %6373), !dbg !340
  %6514 = load i16, i16* %6440, align 2, !dbg !341
  %6515 = and i16 %6514, -4097, !dbg !342
  store i16 %6515, i16* %6440, align 2, !dbg !343
  br label %6617, !dbg !344

6516:                                             ; preds = %6496
  %6517 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6498, %struct.sqlite3_value* %6373), !dbg !345
  br label %6617, !dbg !346

6518:                                             ; preds = %6436
  %6519 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 23, i32 4, !dbg !347
  %6520 = load i32, i32* %6519, align 4, !dbg !348
  store i32 %6520, i32* %6370, align 4, !dbg !349
  br label %6439, !dbg !350

6521:                                             ; preds = %6436
  %6522 = load i32, i32* %6384, align 4, !dbg !351
  %6523 = load i32, i32* %6377, align 4, !dbg !352
  %6524 = icmp ult i32 %6522, %6523, !dbg !353
  br i1 %6524, label %6525, label %6606, !dbg !354

6525:                                             ; preds = %6521
  %6526 = load i8*, i8** %6387, align 8, !dbg !355
  %6527 = icmp eq i8* %6526, null, !dbg !356
  br i1 %6527, label %6529, label %6528, !dbg !357

6528:                                             ; preds = %6525
  store i8* %6526, i8** %6369, align 8, !dbg !358
  br label %6529, !dbg !359

6529:                                             ; preds = %6528, %6525, %6409
  %6530 = alloca i32, align 4, !dbg !360
  %6531 = load i16, i16* %6388, align 2, !dbg !361
  %6532 = zext i16 %6531 to i32, !dbg !362
  store i32 %6532, i32* %6530, align 4, !dbg !363
  %6533 = alloca i64, align 8, !dbg !364
  %6534 = getelementptr i32, i32* %6377, i32 %6532, !dbg !365
  %6535 = load i32, i32* %6534, align 4, !dbg !366
  %6536 = zext i32 %6535 to i64, !dbg !367
  store i64 %6536, i64* %6533, align 4, !dbg !368
  %6537 = load i8*, i8** %6369, align 8, !dbg !369
  %6538 = load i32, i32* %6384, align 4, !dbg !370
  %6539 = alloca i8*, align 8, !dbg !371
  %6540 = getelementptr i8, i8* %6537, i32 %6538, !dbg !372
  store i8* %6540, i8** %6539, align 8, !dbg !373
  %6541 = load i32, i32* %6377, align 4, !dbg !374
  %6542 = getelementptr i8, i8* %6537, i32 %6541, !dbg !375
  br label %6543, !dbg !376

6543:                                             ; preds = %6550, %6529
  %6544 = load i32, i32* %6530, align 4, !dbg !377
  %6545 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6372, i32 0, i32 23, i32 %6544, !dbg !378
  %6546 = load i8*, i8** %6539, align 8, !dbg !379
  %6547 = load i8, i8* %6546, align 1, !dbg !380
  %6548 = zext i8 %6547 to i32, !dbg !381
  store i32 %6548, i32* %6370, align 4, !dbg !382
  store i32 %6548, i32* %6545, align 4, !dbg !383
  %6549 = icmp sgt i8 %6547, -1, !dbg !384
  br i1 %6549, label %6573, label %6564, !dbg !385

6550:                                             ; preds = %6564, %6573
  %6551 = load i32, i32* %6530, align 4, !dbg !386
  %6552 = add i32 %6551, 1, !dbg !387
  store i32 %6552, i32* %6530, align 4, !dbg !388
  %6553 = load i64, i64* %6533, align 4, !dbg !389
  %6554 = and i64 4294967295, %6553, !dbg !390
  %6555 = trunc i64 %6554 to i32, !dbg !391
  %6556 = getelementptr i32, i32* %6377, i32 %6552, !dbg !392
  store i32 %6555, i32* %6556, align 4, !dbg !393
  %6557 = load i32, i32* %6530, align 4, !dbg !394
  %6558 = icmp sle i32 %6557, 4, !dbg !395
  %6559 = load i8*, i8** %6539, align 8, !dbg !396
  %6560 = ptrtoint i8* %6559 to i64, !dbg !397
  %6561 = ptrtoint i8* %6542 to i64, !dbg !398
  %6562 = icmp ult i64 %6560, %6561, !dbg !399
  %6563 = and i1 %6558, %6562, !dbg !400
  br i1 %6563, label %6543, label %6582, !dbg !401

6564:                                             ; preds = %6543
  %6565 = load i8*, i8** %6539, align 8, !dbg !402
  %6566 = call i8 @sqlite3GetVarint32(i8* %6565, i32* %6370), !dbg !403
  %6567 = getelementptr i8, i8* %6565, i8 %6566, !dbg !404
  store i8* %6567, i8** %6539, align 8, !dbg !405
  %6568 = load i32, i32* %6370, align 4, !dbg !406
  store i32 %6568, i32* %6545, align 4, !dbg !407
  %6569 = load i64, i64* %6533, align 4, !dbg !408
  %6570 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6568), !dbg !409
  %6571 = zext i32 %6570 to i64, !dbg !410
  %6572 = add i64 %6569, %6571, !dbg !411
  store i64 %6572, i64* %6533, align 4, !dbg !412
  br label %6550, !dbg !413

6573:                                             ; preds = %6543
  %6574 = getelementptr i8, i8* %6546, i32 1, !dbg !414
  store i8* %6574, i8** %6539, align 8, !dbg !415
  %6575 = load i32, i32* %6370, align 4, !dbg !416
  %6576 = trunc i32 %6575 to i8, !dbg !417
  %6577 = getelementptr i8, i8* %4, i8 %6576, !dbg !418
  %6578 = load i8, i8* %6577, align 1, !dbg !419
  %6579 = zext i8 %6578 to i64, !dbg !420
  %6580 = load i64, i64* %6533, align 4, !dbg !421
  %6581 = add i64 %6580, %6579, !dbg !422
  store i64 %6581, i64* %6533, align 4, !dbg !423
  br label %6550, !dbg !424

6582:                                             ; preds = %6550
  %6583 = load i64, i64* %6533, align 4, !dbg !425
  %6584 = load i32, i32* %6385, align 4, !dbg !426
  %6585 = zext i32 %6584 to i64, !dbg !427
  %6586 = icmp uge i64 %6560, %6561, !dbg !428
  %6587 = icmp ugt i64 %6560, %6561, !dbg !429
  %6588 = icmp ne i64 %6583, %6585, !dbg !430
  %6589 = icmp ugt i64 %6583, %6585, !dbg !431
  %6590 = or i1 %6587, %6588, !dbg !432
  %6591 = and i1 %6586, %6590, !dbg !433
  %6592 = or i1 %6591, %6589, !dbg !434
  br i1 %6592, label %6593, label %6597, !dbg !435

6593:                                             ; preds = %6582
  %6594 = load i32, i32* %6377, align 4, !dbg !436
  %6595 = icmp eq i32 %6594, 0, !dbg !437
  br i1 %6595, label %6596, label %6597, !dbg !438

6596:                                             ; preds = %6593
  store i32 0, i32* %6530, align 4, !dbg !439
  store i8* %6542, i8** %6539, align 8, !dbg !440
  br label %6597, !dbg !441

6597:                                             ; preds = %6596, %6593, %6582
  %6598 = load i32, i32* %6530, align 4, !dbg !442
  %6599 = trunc i32 %6598 to i16, !dbg !443
  store i16 %6599, i16* %6388, align 2, !dbg !444
  %6600 = load i8*, i8** %6539, align 8, !dbg !445
  %6601 = ptrtoint i8* %6600 to i64, !dbg !446
  %6602 = load i8*, i8** %6369, align 8, !dbg !447
  %6603 = ptrtoint i8* %6602 to i64, !dbg !448
  %6604 = sub i64 %6601, %6603, !dbg !449
  %6605 = trunc i64 %6604 to i32, !dbg !450
  store i32 %6605, i32* %6384, align 4, !dbg !451
  br label %6607, !dbg !452

6606:                                             ; preds = %6521
  store i32 0, i32* %6370, align 4, !dbg !453
  br label %6607, !dbg !454

6607:                                             ; preds = %6597, %6606
  %6608 = load i16, i16* %6388, align 2, !dbg !455
  %6609 = icmp sle i16 %6608, 4, !dbg !456
  br i1 %6609, label %6610, label %6439, !dbg !457

6610:                                             ; preds = %6607
  %6611 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6373, i32 0, i32 1, !dbg !458
  %6612 = load i16, i16* %6611, align 2, !dbg !458
  %6613 = and i16 %6612, 9216, !dbg !458
  %6614 = icmp ne i16 %6613, 0, !dbg !458
  br i1 %6614, label %6615, label %6616, !dbg !458

6615:                                             ; preds = %6610
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6373), !dbg !458
  br label %6617, !dbg !458

6616:                                             ; preds = %6610
  store i16 1, i16* %6611, align 2, !dbg !458
  br label %6617, !dbg !458

6617:                                             ; preds = %6615, %6616, %6486, %6466, %6505, %6516, %6434, %6435
  call void @llvm.stackrestore(i8* %6362), !dbg !459
  br label %6618, !dbg !74

6618:                                             ; preds = %6617, %14
  %6619 = call i8* @llvm.stacksave(), !dbg !167
  %6620 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %6621 = load i8, i8* %6620, align 1, !dbg !171
  %6622 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %6622, align 4, !dbg !173
  %6623 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %6624 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %6625 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6623, align 8, !dbg !176
  store %struct.VdbeCursor* %6625, %struct.VdbeCursor** %6624, align 8, !dbg !177
  %6626 = alloca i8*, align 8, !dbg !178
  %6627 = alloca i32, align 4, !dbg !179
  %6628 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6624, i32* %6622), !dbg !180
  %6629 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6624, align 8, !dbg !181
  %6630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !182
  %6631 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 16, !dbg !183
  %6632 = load i16, i16* %6631, align 2, !dbg !184
  %6633 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 19, !dbg !185
  %6634 = load i32*, i32** %6633, align 8, !dbg !186
  %6635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 0, !dbg !187
  %6636 = load i8, i8* %6635, align 1, !dbg !188
  %6637 = icmp ne i8 %6636, 3, !dbg !189
  %6638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 2, !dbg !190
  %6639 = load i8, i8* %6638, align 1, !dbg !191
  %6640 = icmp ne i8 %6639, 0, !dbg !192
  %6641 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 14, !dbg !193
  %6642 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 21, !dbg !194
  %6643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 22, !dbg !195
  %6644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 20, !dbg !196
  %6645 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 17, !dbg !197
  %6646 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 9, !dbg !198
  %6647 = load i32, i32* %6646, align 4, !dbg !199
  %6648 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %6649 = load i32, i32* %6648, align 4, !dbg !201
  %6650 = icmp ne i32 %6647, %6649, !dbg !202
  br i1 %6650, label %6651, label %6693, !dbg !203

6651:                                             ; preds = %6618
  br i1 %6640, label %6673, label %6668, !dbg !204

6652:                                             ; preds = %6668, %6675
  %6653 = load i32, i32* %6648, align 4, !dbg !205
  store i32 %6653, i32* %6646, align 4, !dbg !206
  %6654 = load i8*, i8** %6644, align 8, !dbg !207
  %6655 = load i8, i8* %6654, align 1, !dbg !208
  %6656 = icmp sgt i8 %6655, -1, !dbg !211
  br i1 %6656, label %6657, label %6659, !dbg !212

6657:                                             ; preds = %6652
  %6658 = zext i8 %6655 to i32, !dbg !213
  store i32 %6658, i32* %6634, align 4, !dbg !214
  store i32 1, i32* %6641, align 4, !dbg !215
  br label %6662, !dbg !216

6659:                                             ; preds = %6652
  %6660 = call i8 @sqlite3GetVarint32(i8* %6654, i32* %6634), !dbg !217
  %6661 = zext i8 %6660 to i32, !dbg !218
  store i32 %6661, i32* %6641, align 4, !dbg !219
  br label %6662, !dbg !220

6662:                                             ; preds = %6659, %6657
  store i16 0, i16* %6645, align 2, !dbg !221
  %6663 = load i32, i32* %6643, align 4, !dbg !222
  %6664 = load i32, i32* %6634, align 4, !dbg !223
  %6665 = icmp ult i32 %6663, %6664, !dbg !224
  br i1 %6665, label %6667, label %6666, !dbg !225

6666:                                             ; preds = %6662
  store i8* %6654, i8** %6626, align 8, !dbg !226
  br label %6786, !dbg !227

6667:                                             ; preds = %6662
  store i8* null, i8** %6644, align 8, !dbg !228
  store i32 0, i32* %6643, align 4, !dbg !229
  br label %6693, !dbg !230

6668:                                             ; preds = %6651
  %6669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 12, i32 0, !dbg !231
  %6670 = load %struct.BtCursor*, %struct.BtCursor** %6669, align 8, !dbg !232
  %6671 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6670), !dbg !233
  store i32 %6671, i32* %6642, align 4, !dbg !234
  %6672 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6670, i32* %6643), !dbg !235
  store i8* %6672, i8** %6644, align 8, !dbg !236
  br label %6652, !dbg !237

6673:                                             ; preds = %6651
  %6674 = icmp eq i8 %6636, 3, !dbg !238
  br i1 %6674, label %6675, label %6686, !dbg !239

6675:                                             ; preds = %6673
  %6676 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 10, !dbg !240
  %6677 = load i32, i32* %6676, align 4, !dbg !241
  %6678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6677, !dbg !242
  %6679 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 1, !dbg !243
  %6680 = load i16, i16* %6679, align 2, !dbg !244
  %6681 = and i16 %6680, 16, !dbg !245
  %6682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 4, !dbg !246
  %6683 = load i32, i32* %6682, align 4, !dbg !247
  store i32 %6683, i32* %6642, align 4, !dbg !248
  store i32 %6683, i32* %6643, align 4, !dbg !249
  %6684 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 5, !dbg !250
  %6685 = load i8*, i8** %6684, align 8, !dbg !251
  store i8* %6685, i8** %6644, align 8, !dbg !252
  br label %6652, !dbg !253

6686:                                             ; preds = %6673
  %6687 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 1, !dbg !254
  %6688 = load i16, i16* %6687, align 2, !dbg !254
  %6689 = and i16 %6688, 9216, !dbg !254
  %6690 = icmp ne i16 %6689, 0, !dbg !254
  br i1 %6690, label %6691, label %6692, !dbg !254

6691:                                             ; preds = %6686
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6630), !dbg !254
  br label %6874, !dbg !254

6692:                                             ; preds = %6686
  store i16 1, i16* %6687, align 2, !dbg !254
  br label %6874, !dbg !254

6693:                                             ; preds = %6667, %6618
  %6694 = load i16, i16* %6645, align 2, !dbg !255
  %6695 = icmp ule i16 %6694, 3, !dbg !256
  br i1 %6695, label %6778, label %6775, !dbg !257

6696:                                             ; preds = %6775, %6864
  %6697 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 1, !dbg !258
  %6698 = load i16, i16* %6697, align 2, !dbg !259
  %6699 = and i16 9216, %6698, !dbg !260
  %6700 = icmp eq i16 0, %6699, !dbg !261
  br i1 %6700, label %6701, label %6705, !dbg !262

6701:                                             ; preds = %6696
  %6702 = icmp ne i16 %6699, 0, !dbg !263
  br i1 %6702, label %6703, label %6704, !dbg !263

6703:                                             ; preds = %6701
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6630), !dbg !263
  br label %6705, !dbg !263

6704:                                             ; preds = %6701
  store i16 1, i16* %6697, align 2, !dbg !263
  br label %6705, !dbg !263

6705:                                             ; preds = %6703, %6704, %6696
  %6706 = load i32, i32* %6627, align 4, !dbg !264
  %6707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 23, i32 3, !dbg !265
  %6708 = load i32, i32* %6707, align 4, !dbg !266
  %6709 = load i32, i32* %6643, align 4, !dbg !267
  %6710 = getelementptr i32, i32* %6634, i32 4, !dbg !268
  %6711 = load i32, i32* %6710, align 4, !dbg !269
  %6712 = icmp sge i32 %6709, %6711, !dbg !270
  br i1 %6712, label %6713, label %6753, !dbg !271

6713:                                             ; preds = %6705
  %6714 = load i8*, i8** %6644, align 8, !dbg !272
  %6715 = ptrtoint i8* %6714 to i64, !dbg !273
  %6716 = getelementptr i32, i32* %6634, i32 3, !dbg !274
  %6717 = load i32, i32* %6716, align 4, !dbg !275
  %6718 = zext i32 %6717 to i64, !dbg !276
  %6719 = add i64 %6715, %6718, !dbg !277
  %6720 = inttoptr i64 %6719 to i8*, !dbg !278
  store i8* %6720, i8** %6626, align 8, !dbg !279
  %6721 = load i32, i32* %6627, align 4, !dbg !280
  %6722 = icmp ult i32 %6721, 12, !dbg !281
  br i1 %6722, label %6723, label %6725, !dbg !282

6723:                                             ; preds = %6713
  %6724 = call i32 @sqlite3VdbeSerialGet(i8* %6720, i32 %6721, %struct.sqlite3_value* %6630), !dbg !283
  br label %6874, !dbg !284

6725:                                             ; preds = %6713
  %6726 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %6726, align 2, !dbg !286
  %6727 = getelementptr i16, i16* %6726, i32 1, !dbg !287
  store i16 514, i16* %6727, align 2, !dbg !288
  %6728 = load i32, i32* %6627, align 4, !dbg !289
  %6729 = sub i32 %6728, 12, !dbg !290
  %6730 = lshr i32 %6729, 1, !dbg !291
  %6731 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 4, !dbg !292
  store i32 %6730, i32* %6731, align 4, !dbg !293
  %6732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 2, !dbg !294
  store i8 %6621, i8* %6732, align 1, !dbg !295
  %6733 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 5, !dbg !296
  %6734 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 7, !dbg !297
  %6735 = load i32, i32* %6734, align 4, !dbg !298
  %6736 = add i32 %6730, 2, !dbg !299
  %6737 = icmp slt i32 %6735, %6736, !dbg !300
  br i1 %6737, label %6738, label %6740, !dbg !301

6738:                                             ; preds = %6725
  store i16 1, i16* %6697, align 2, !dbg !302
  %6739 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6630, i32 %6736, i32 0), !dbg !303
  br label %6743, !dbg !304

6740:                                             ; preds = %6725
  %6741 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 6, !dbg !305
  %6742 = load i8*, i8** %6741, align 8, !dbg !306
  store i8* %6742, i8** %6733, align 8, !dbg !307
  br label %6743, !dbg !308

6743:                                             ; preds = %6740, %6738
  %6744 = zext i32 %6730 to i64, !dbg !309
  %6745 = load i8*, i8** %6733, align 8, !dbg !310
  %6746 = load i8*, i8** %6626, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6745, i8* %6746, i64 %6744, i1 false), !dbg !312
  %6747 = getelementptr i8, i8* %6745, i32 %6730, !dbg !313
  store i8 0, i8* %6747, align 1, !dbg !314
  %6748 = add i32 %6730, 1, !dbg !315
  %6749 = getelementptr i8, i8* %6745, i32 %6748, !dbg !316
  store i8 0, i8* %6749, align 1, !dbg !317
  %6750 = and i32 %6728, 1, !dbg !318
  %6751 = getelementptr i16, i16* %6726, i32 %6750, !dbg !319
  %6752 = load i16, i16* %6751, align 2, !dbg !320
  store i16 %6752, i16* %6697, align 2, !dbg !321
  br label %6874, !dbg !322

6753:                                             ; preds = %6705
  %6754 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 2, !dbg !323
  store i8 %6621, i8* %6754, align 1, !dbg !324
  %6755 = load i32, i32* %6627, align 4, !dbg !325
  %6756 = and i32 %6755, 1, !dbg !326
  %6757 = icmp eq i32 %6756, 0, !dbg !327
  %6758 = icmp sge i32 %6755, 12, !dbg !328
  %6759 = and i1 %6758, %6757, !dbg !329
  %6760 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6755), !dbg !330
  %6761 = icmp eq i32 %6760, 0, !dbg !331
  br i1 %6761, label %6773, label %6762, !dbg !332

6762:                                             ; preds = %6753
  %6763 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 12, i32 0, !dbg !333
  %6764 = load %struct.BtCursor*, %struct.BtCursor** %6763, align 8, !dbg !334
  %6765 = getelementptr i32, i32* %6634, i32 3, !dbg !335
  %6766 = load i32, i32* %6765, align 4, !dbg !336
  %6767 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6764, i32 %6766, i32 %6760, %struct.sqlite3_value* %6630), !dbg !337
  %6768 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 5, !dbg !338
  %6769 = load i8*, i8** %6768, align 8, !dbg !339
  %6770 = call i32 @sqlite3VdbeSerialGet(i8* %6769, i32 %6755, %struct.sqlite3_value* %6630), !dbg !340
  %6771 = load i16, i16* %6697, align 2, !dbg !341
  %6772 = and i16 %6771, -4097, !dbg !342
  store i16 %6772, i16* %6697, align 2, !dbg !343
  br label %6874, !dbg !344

6773:                                             ; preds = %6753
  %6774 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6755, %struct.sqlite3_value* %6630), !dbg !345
  br label %6874, !dbg !346

6775:                                             ; preds = %6693
  %6776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 23, i32 3, !dbg !347
  %6777 = load i32, i32* %6776, align 4, !dbg !348
  store i32 %6777, i32* %6627, align 4, !dbg !349
  br label %6696, !dbg !350

6778:                                             ; preds = %6693
  %6779 = load i32, i32* %6641, align 4, !dbg !351
  %6780 = load i32, i32* %6634, align 4, !dbg !352
  %6781 = icmp ult i32 %6779, %6780, !dbg !353
  br i1 %6781, label %6782, label %6863, !dbg !354

6782:                                             ; preds = %6778
  %6783 = load i8*, i8** %6644, align 8, !dbg !355
  %6784 = icmp eq i8* %6783, null, !dbg !356
  br i1 %6784, label %6786, label %6785, !dbg !357

6785:                                             ; preds = %6782
  store i8* %6783, i8** %6626, align 8, !dbg !358
  br label %6786, !dbg !359

6786:                                             ; preds = %6785, %6782, %6666
  %6787 = alloca i32, align 4, !dbg !360
  %6788 = load i16, i16* %6645, align 2, !dbg !361
  %6789 = zext i16 %6788 to i32, !dbg !362
  store i32 %6789, i32* %6787, align 4, !dbg !363
  %6790 = alloca i64, align 8, !dbg !364
  %6791 = getelementptr i32, i32* %6634, i32 %6789, !dbg !365
  %6792 = load i32, i32* %6791, align 4, !dbg !366
  %6793 = zext i32 %6792 to i64, !dbg !367
  store i64 %6793, i64* %6790, align 4, !dbg !368
  %6794 = load i8*, i8** %6626, align 8, !dbg !369
  %6795 = load i32, i32* %6641, align 4, !dbg !370
  %6796 = alloca i8*, align 8, !dbg !371
  %6797 = getelementptr i8, i8* %6794, i32 %6795, !dbg !372
  store i8* %6797, i8** %6796, align 8, !dbg !373
  %6798 = load i32, i32* %6634, align 4, !dbg !374
  %6799 = getelementptr i8, i8* %6794, i32 %6798, !dbg !375
  br label %6800, !dbg !376

6800:                                             ; preds = %6807, %6786
  %6801 = load i32, i32* %6787, align 4, !dbg !377
  %6802 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6629, i32 0, i32 23, i32 %6801, !dbg !378
  %6803 = load i8*, i8** %6796, align 8, !dbg !379
  %6804 = load i8, i8* %6803, align 1, !dbg !380
  %6805 = zext i8 %6804 to i32, !dbg !381
  store i32 %6805, i32* %6627, align 4, !dbg !382
  store i32 %6805, i32* %6802, align 4, !dbg !383
  %6806 = icmp sgt i8 %6804, -1, !dbg !384
  br i1 %6806, label %6830, label %6821, !dbg !385

6807:                                             ; preds = %6821, %6830
  %6808 = load i32, i32* %6787, align 4, !dbg !386
  %6809 = add i32 %6808, 1, !dbg !387
  store i32 %6809, i32* %6787, align 4, !dbg !388
  %6810 = load i64, i64* %6790, align 4, !dbg !389
  %6811 = and i64 4294967295, %6810, !dbg !390
  %6812 = trunc i64 %6811 to i32, !dbg !391
  %6813 = getelementptr i32, i32* %6634, i32 %6809, !dbg !392
  store i32 %6812, i32* %6813, align 4, !dbg !393
  %6814 = load i32, i32* %6787, align 4, !dbg !394
  %6815 = icmp sle i32 %6814, 3, !dbg !395
  %6816 = load i8*, i8** %6796, align 8, !dbg !396
  %6817 = ptrtoint i8* %6816 to i64, !dbg !397
  %6818 = ptrtoint i8* %6799 to i64, !dbg !398
  %6819 = icmp ult i64 %6817, %6818, !dbg !399
  %6820 = and i1 %6815, %6819, !dbg !400
  br i1 %6820, label %6800, label %6839, !dbg !401

6821:                                             ; preds = %6800
  %6822 = load i8*, i8** %6796, align 8, !dbg !402
  %6823 = call i8 @sqlite3GetVarint32(i8* %6822, i32* %6627), !dbg !403
  %6824 = getelementptr i8, i8* %6822, i8 %6823, !dbg !404
  store i8* %6824, i8** %6796, align 8, !dbg !405
  %6825 = load i32, i32* %6627, align 4, !dbg !406
  store i32 %6825, i32* %6802, align 4, !dbg !407
  %6826 = load i64, i64* %6790, align 4, !dbg !408
  %6827 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6825), !dbg !409
  %6828 = zext i32 %6827 to i64, !dbg !410
  %6829 = add i64 %6826, %6828, !dbg !411
  store i64 %6829, i64* %6790, align 4, !dbg !412
  br label %6807, !dbg !413

6830:                                             ; preds = %6800
  %6831 = getelementptr i8, i8* %6803, i32 1, !dbg !414
  store i8* %6831, i8** %6796, align 8, !dbg !415
  %6832 = load i32, i32* %6627, align 4, !dbg !416
  %6833 = trunc i32 %6832 to i8, !dbg !417
  %6834 = getelementptr i8, i8* %4, i8 %6833, !dbg !418
  %6835 = load i8, i8* %6834, align 1, !dbg !419
  %6836 = zext i8 %6835 to i64, !dbg !420
  %6837 = load i64, i64* %6790, align 4, !dbg !421
  %6838 = add i64 %6837, %6836, !dbg !422
  store i64 %6838, i64* %6790, align 4, !dbg !423
  br label %6807, !dbg !424

6839:                                             ; preds = %6807
  %6840 = load i64, i64* %6790, align 4, !dbg !425
  %6841 = load i32, i32* %6642, align 4, !dbg !426
  %6842 = zext i32 %6841 to i64, !dbg !427
  %6843 = icmp uge i64 %6817, %6818, !dbg !428
  %6844 = icmp ugt i64 %6817, %6818, !dbg !429
  %6845 = icmp ne i64 %6840, %6842, !dbg !430
  %6846 = icmp ugt i64 %6840, %6842, !dbg !431
  %6847 = or i1 %6844, %6845, !dbg !432
  %6848 = and i1 %6843, %6847, !dbg !433
  %6849 = or i1 %6848, %6846, !dbg !434
  br i1 %6849, label %6850, label %6854, !dbg !435

6850:                                             ; preds = %6839
  %6851 = load i32, i32* %6634, align 4, !dbg !436
  %6852 = icmp eq i32 %6851, 0, !dbg !437
  br i1 %6852, label %6853, label %6854, !dbg !438

6853:                                             ; preds = %6850
  store i32 0, i32* %6787, align 4, !dbg !439
  store i8* %6799, i8** %6796, align 8, !dbg !440
  br label %6854, !dbg !441

6854:                                             ; preds = %6853, %6850, %6839
  %6855 = load i32, i32* %6787, align 4, !dbg !442
  %6856 = trunc i32 %6855 to i16, !dbg !443
  store i16 %6856, i16* %6645, align 2, !dbg !444
  %6857 = load i8*, i8** %6796, align 8, !dbg !445
  %6858 = ptrtoint i8* %6857 to i64, !dbg !446
  %6859 = load i8*, i8** %6626, align 8, !dbg !447
  %6860 = ptrtoint i8* %6859 to i64, !dbg !448
  %6861 = sub i64 %6858, %6860, !dbg !449
  %6862 = trunc i64 %6861 to i32, !dbg !450
  store i32 %6862, i32* %6641, align 4, !dbg !451
  br label %6864, !dbg !452

6863:                                             ; preds = %6778
  store i32 0, i32* %6627, align 4, !dbg !453
  br label %6864, !dbg !454

6864:                                             ; preds = %6854, %6863
  %6865 = load i16, i16* %6645, align 2, !dbg !455
  %6866 = icmp sle i16 %6865, 3, !dbg !456
  br i1 %6866, label %6867, label %6696, !dbg !457

6867:                                             ; preds = %6864
  %6868 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 1, !dbg !458
  %6869 = load i16, i16* %6868, align 2, !dbg !458
  %6870 = and i16 %6869, 9216, !dbg !458
  %6871 = icmp ne i16 %6870, 0, !dbg !458
  br i1 %6871, label %6872, label %6873, !dbg !458

6872:                                             ; preds = %6867
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6630), !dbg !458
  br label %6874, !dbg !458

6873:                                             ; preds = %6867
  store i16 1, i16* %6868, align 2, !dbg !458
  br label %6874, !dbg !458

6874:                                             ; preds = %6872, %6873, %6743, %6723, %6762, %6773, %6691, %6692
  call void @llvm.stackrestore(i8* %6619), !dbg !459
  br label %6875, !dbg !74

6875:                                             ; preds = %6874, %14
  %6876 = call i8* @llvm.stacksave(), !dbg !167
  %6877 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %6878 = load i8, i8* %6877, align 1, !dbg !171
  %6879 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %6879, align 4, !dbg !173
  %6880 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %6881 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %6882 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6880, align 8, !dbg !176
  store %struct.VdbeCursor* %6882, %struct.VdbeCursor** %6881, align 8, !dbg !177
  %6883 = alloca i8*, align 8, !dbg !178
  %6884 = alloca i32, align 4, !dbg !179
  %6885 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6881, i32* %6879), !dbg !180
  %6886 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6881, align 8, !dbg !181
  %6887 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !182
  %6888 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 16, !dbg !183
  %6889 = load i16, i16* %6888, align 2, !dbg !184
  %6890 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 19, !dbg !185
  %6891 = load i32*, i32** %6890, align 8, !dbg !186
  %6892 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 0, !dbg !187
  %6893 = load i8, i8* %6892, align 1, !dbg !188
  %6894 = icmp ne i8 %6893, 3, !dbg !189
  %6895 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 2, !dbg !190
  %6896 = load i8, i8* %6895, align 1, !dbg !191
  %6897 = icmp ne i8 %6896, 0, !dbg !192
  %6898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 14, !dbg !193
  %6899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 21, !dbg !194
  %6900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 22, !dbg !195
  %6901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 20, !dbg !196
  %6902 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 17, !dbg !197
  %6903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 9, !dbg !198
  %6904 = load i32, i32* %6903, align 4, !dbg !199
  %6905 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %6906 = load i32, i32* %6905, align 4, !dbg !201
  %6907 = icmp ne i32 %6904, %6906, !dbg !202
  br i1 %6907, label %6908, label %6950, !dbg !203

6908:                                             ; preds = %6875
  br i1 %6897, label %6930, label %6925, !dbg !204

6909:                                             ; preds = %6925, %6932
  %6910 = load i32, i32* %6905, align 4, !dbg !205
  store i32 %6910, i32* %6903, align 4, !dbg !206
  %6911 = load i8*, i8** %6901, align 8, !dbg !207
  %6912 = load i8, i8* %6911, align 1, !dbg !208
  %6913 = icmp sgt i8 %6912, -1, !dbg !211
  br i1 %6913, label %6914, label %6916, !dbg !212

6914:                                             ; preds = %6909
  %6915 = zext i8 %6912 to i32, !dbg !213
  store i32 %6915, i32* %6891, align 4, !dbg !214
  store i32 1, i32* %6898, align 4, !dbg !215
  br label %6919, !dbg !216

6916:                                             ; preds = %6909
  %6917 = call i8 @sqlite3GetVarint32(i8* %6911, i32* %6891), !dbg !217
  %6918 = zext i8 %6917 to i32, !dbg !218
  store i32 %6918, i32* %6898, align 4, !dbg !219
  br label %6919, !dbg !220

6919:                                             ; preds = %6916, %6914
  store i16 0, i16* %6902, align 2, !dbg !221
  %6920 = load i32, i32* %6900, align 4, !dbg !222
  %6921 = load i32, i32* %6891, align 4, !dbg !223
  %6922 = icmp ult i32 %6920, %6921, !dbg !224
  br i1 %6922, label %6924, label %6923, !dbg !225

6923:                                             ; preds = %6919
  store i8* %6911, i8** %6883, align 8, !dbg !226
  br label %7043, !dbg !227

6924:                                             ; preds = %6919
  store i8* null, i8** %6901, align 8, !dbg !228
  store i32 0, i32* %6900, align 4, !dbg !229
  br label %6950, !dbg !230

6925:                                             ; preds = %6908
  %6926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 12, i32 0, !dbg !231
  %6927 = load %struct.BtCursor*, %struct.BtCursor** %6926, align 8, !dbg !232
  %6928 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6927), !dbg !233
  store i32 %6928, i32* %6899, align 4, !dbg !234
  %6929 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6927, i32* %6900), !dbg !235
  store i8* %6929, i8** %6901, align 8, !dbg !236
  br label %6909, !dbg !237

6930:                                             ; preds = %6908
  %6931 = icmp eq i8 %6893, 3, !dbg !238
  br i1 %6931, label %6932, label %6943, !dbg !239

6932:                                             ; preds = %6930
  %6933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 10, !dbg !240
  %6934 = load i32, i32* %6933, align 4, !dbg !241
  %6935 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6934, !dbg !242
  %6936 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6935, i32 0, i32 1, !dbg !243
  %6937 = load i16, i16* %6936, align 2, !dbg !244
  %6938 = and i16 %6937, 16, !dbg !245
  %6939 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6935, i32 0, i32 4, !dbg !246
  %6940 = load i32, i32* %6939, align 4, !dbg !247
  store i32 %6940, i32* %6899, align 4, !dbg !248
  store i32 %6940, i32* %6900, align 4, !dbg !249
  %6941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6935, i32 0, i32 5, !dbg !250
  %6942 = load i8*, i8** %6941, align 8, !dbg !251
  store i8* %6942, i8** %6901, align 8, !dbg !252
  br label %6909, !dbg !253

6943:                                             ; preds = %6930
  %6944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 1, !dbg !254
  %6945 = load i16, i16* %6944, align 2, !dbg !254
  %6946 = and i16 %6945, 9216, !dbg !254
  %6947 = icmp ne i16 %6946, 0, !dbg !254
  br i1 %6947, label %6948, label %6949, !dbg !254

6948:                                             ; preds = %6943
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6887), !dbg !254
  br label %7131, !dbg !254

6949:                                             ; preds = %6943
  store i16 1, i16* %6944, align 2, !dbg !254
  br label %7131, !dbg !254

6950:                                             ; preds = %6924, %6875
  %6951 = load i16, i16* %6902, align 2, !dbg !255
  %6952 = icmp ule i16 %6951, 4, !dbg !256
  br i1 %6952, label %7035, label %7032, !dbg !257

6953:                                             ; preds = %7032, %7121
  %6954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 1, !dbg !258
  %6955 = load i16, i16* %6954, align 2, !dbg !259
  %6956 = and i16 9216, %6955, !dbg !260
  %6957 = icmp eq i16 0, %6956, !dbg !261
  br i1 %6957, label %6958, label %6962, !dbg !262

6958:                                             ; preds = %6953
  %6959 = icmp ne i16 %6956, 0, !dbg !263
  br i1 %6959, label %6960, label %6961, !dbg !263

6960:                                             ; preds = %6958
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6887), !dbg !263
  br label %6962, !dbg !263

6961:                                             ; preds = %6958
  store i16 1, i16* %6954, align 2, !dbg !263
  br label %6962, !dbg !263

6962:                                             ; preds = %6960, %6961, %6953
  %6963 = load i32, i32* %6884, align 4, !dbg !264
  %6964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 23, i32 4, !dbg !265
  %6965 = load i32, i32* %6964, align 4, !dbg !266
  %6966 = load i32, i32* %6900, align 4, !dbg !267
  %6967 = getelementptr i32, i32* %6891, i32 5, !dbg !268
  %6968 = load i32, i32* %6967, align 4, !dbg !269
  %6969 = icmp sge i32 %6966, %6968, !dbg !270
  br i1 %6969, label %6970, label %7010, !dbg !271

6970:                                             ; preds = %6962
  %6971 = load i8*, i8** %6901, align 8, !dbg !272
  %6972 = ptrtoint i8* %6971 to i64, !dbg !273
  %6973 = getelementptr i32, i32* %6891, i32 4, !dbg !274
  %6974 = load i32, i32* %6973, align 4, !dbg !275
  %6975 = zext i32 %6974 to i64, !dbg !276
  %6976 = add i64 %6972, %6975, !dbg !277
  %6977 = inttoptr i64 %6976 to i8*, !dbg !278
  store i8* %6977, i8** %6883, align 8, !dbg !279
  %6978 = load i32, i32* %6884, align 4, !dbg !280
  %6979 = icmp ult i32 %6978, 12, !dbg !281
  br i1 %6979, label %6980, label %6982, !dbg !282

6980:                                             ; preds = %6970
  %6981 = call i32 @sqlite3VdbeSerialGet(i8* %6977, i32 %6978, %struct.sqlite3_value* %6887), !dbg !283
  br label %7131, !dbg !284

6982:                                             ; preds = %6970
  %6983 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %6983, align 2, !dbg !286
  %6984 = getelementptr i16, i16* %6983, i32 1, !dbg !287
  store i16 514, i16* %6984, align 2, !dbg !288
  %6985 = load i32, i32* %6884, align 4, !dbg !289
  %6986 = sub i32 %6985, 12, !dbg !290
  %6987 = lshr i32 %6986, 1, !dbg !291
  %6988 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 4, !dbg !292
  store i32 %6987, i32* %6988, align 4, !dbg !293
  %6989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 2, !dbg !294
  store i8 %6878, i8* %6989, align 1, !dbg !295
  %6990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 5, !dbg !296
  %6991 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 7, !dbg !297
  %6992 = load i32, i32* %6991, align 4, !dbg !298
  %6993 = add i32 %6987, 2, !dbg !299
  %6994 = icmp slt i32 %6992, %6993, !dbg !300
  br i1 %6994, label %6995, label %6997, !dbg !301

6995:                                             ; preds = %6982
  store i16 1, i16* %6954, align 2, !dbg !302
  %6996 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6887, i32 %6993, i32 0), !dbg !303
  br label %7000, !dbg !304

6997:                                             ; preds = %6982
  %6998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 6, !dbg !305
  %6999 = load i8*, i8** %6998, align 8, !dbg !306
  store i8* %6999, i8** %6990, align 8, !dbg !307
  br label %7000, !dbg !308

7000:                                             ; preds = %6997, %6995
  %7001 = zext i32 %6987 to i64, !dbg !309
  %7002 = load i8*, i8** %6990, align 8, !dbg !310
  %7003 = load i8*, i8** %6883, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7002, i8* %7003, i64 %7001, i1 false), !dbg !312
  %7004 = getelementptr i8, i8* %7002, i32 %6987, !dbg !313
  store i8 0, i8* %7004, align 1, !dbg !314
  %7005 = add i32 %6987, 1, !dbg !315
  %7006 = getelementptr i8, i8* %7002, i32 %7005, !dbg !316
  store i8 0, i8* %7006, align 1, !dbg !317
  %7007 = and i32 %6985, 1, !dbg !318
  %7008 = getelementptr i16, i16* %6983, i32 %7007, !dbg !319
  %7009 = load i16, i16* %7008, align 2, !dbg !320
  store i16 %7009, i16* %6954, align 2, !dbg !321
  br label %7131, !dbg !322

7010:                                             ; preds = %6962
  %7011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 2, !dbg !323
  store i8 %6878, i8* %7011, align 1, !dbg !324
  %7012 = load i32, i32* %6884, align 4, !dbg !325
  %7013 = and i32 %7012, 1, !dbg !326
  %7014 = icmp eq i32 %7013, 0, !dbg !327
  %7015 = icmp sge i32 %7012, 12, !dbg !328
  %7016 = and i1 %7015, %7014, !dbg !329
  %7017 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7012), !dbg !330
  %7018 = icmp eq i32 %7017, 0, !dbg !331
  br i1 %7018, label %7030, label %7019, !dbg !332

7019:                                             ; preds = %7010
  %7020 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 12, i32 0, !dbg !333
  %7021 = load %struct.BtCursor*, %struct.BtCursor** %7020, align 8, !dbg !334
  %7022 = getelementptr i32, i32* %6891, i32 4, !dbg !335
  %7023 = load i32, i32* %7022, align 4, !dbg !336
  %7024 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7021, i32 %7023, i32 %7017, %struct.sqlite3_value* %6887), !dbg !337
  %7025 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 5, !dbg !338
  %7026 = load i8*, i8** %7025, align 8, !dbg !339
  %7027 = call i32 @sqlite3VdbeSerialGet(i8* %7026, i32 %7012, %struct.sqlite3_value* %6887), !dbg !340
  %7028 = load i16, i16* %6954, align 2, !dbg !341
  %7029 = and i16 %7028, -4097, !dbg !342
  store i16 %7029, i16* %6954, align 2, !dbg !343
  br label %7131, !dbg !344

7030:                                             ; preds = %7010
  %7031 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7012, %struct.sqlite3_value* %6887), !dbg !345
  br label %7131, !dbg !346

7032:                                             ; preds = %6950
  %7033 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 23, i32 4, !dbg !347
  %7034 = load i32, i32* %7033, align 4, !dbg !348
  store i32 %7034, i32* %6884, align 4, !dbg !349
  br label %6953, !dbg !350

7035:                                             ; preds = %6950
  %7036 = load i32, i32* %6898, align 4, !dbg !351
  %7037 = load i32, i32* %6891, align 4, !dbg !352
  %7038 = icmp ult i32 %7036, %7037, !dbg !353
  br i1 %7038, label %7039, label %7120, !dbg !354

7039:                                             ; preds = %7035
  %7040 = load i8*, i8** %6901, align 8, !dbg !355
  %7041 = icmp eq i8* %7040, null, !dbg !356
  br i1 %7041, label %7043, label %7042, !dbg !357

7042:                                             ; preds = %7039
  store i8* %7040, i8** %6883, align 8, !dbg !358
  br label %7043, !dbg !359

7043:                                             ; preds = %7042, %7039, %6923
  %7044 = alloca i32, align 4, !dbg !360
  %7045 = load i16, i16* %6902, align 2, !dbg !361
  %7046 = zext i16 %7045 to i32, !dbg !362
  store i32 %7046, i32* %7044, align 4, !dbg !363
  %7047 = alloca i64, align 8, !dbg !364
  %7048 = getelementptr i32, i32* %6891, i32 %7046, !dbg !365
  %7049 = load i32, i32* %7048, align 4, !dbg !366
  %7050 = zext i32 %7049 to i64, !dbg !367
  store i64 %7050, i64* %7047, align 4, !dbg !368
  %7051 = load i8*, i8** %6883, align 8, !dbg !369
  %7052 = load i32, i32* %6898, align 4, !dbg !370
  %7053 = alloca i8*, align 8, !dbg !371
  %7054 = getelementptr i8, i8* %7051, i32 %7052, !dbg !372
  store i8* %7054, i8** %7053, align 8, !dbg !373
  %7055 = load i32, i32* %6891, align 4, !dbg !374
  %7056 = getelementptr i8, i8* %7051, i32 %7055, !dbg !375
  br label %7057, !dbg !376

7057:                                             ; preds = %7064, %7043
  %7058 = load i32, i32* %7044, align 4, !dbg !377
  %7059 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6886, i32 0, i32 23, i32 %7058, !dbg !378
  %7060 = load i8*, i8** %7053, align 8, !dbg !379
  %7061 = load i8, i8* %7060, align 1, !dbg !380
  %7062 = zext i8 %7061 to i32, !dbg !381
  store i32 %7062, i32* %6884, align 4, !dbg !382
  store i32 %7062, i32* %7059, align 4, !dbg !383
  %7063 = icmp sgt i8 %7061, -1, !dbg !384
  br i1 %7063, label %7087, label %7078, !dbg !385

7064:                                             ; preds = %7078, %7087
  %7065 = load i32, i32* %7044, align 4, !dbg !386
  %7066 = add i32 %7065, 1, !dbg !387
  store i32 %7066, i32* %7044, align 4, !dbg !388
  %7067 = load i64, i64* %7047, align 4, !dbg !389
  %7068 = and i64 4294967295, %7067, !dbg !390
  %7069 = trunc i64 %7068 to i32, !dbg !391
  %7070 = getelementptr i32, i32* %6891, i32 %7066, !dbg !392
  store i32 %7069, i32* %7070, align 4, !dbg !393
  %7071 = load i32, i32* %7044, align 4, !dbg !394
  %7072 = icmp sle i32 %7071, 4, !dbg !395
  %7073 = load i8*, i8** %7053, align 8, !dbg !396
  %7074 = ptrtoint i8* %7073 to i64, !dbg !397
  %7075 = ptrtoint i8* %7056 to i64, !dbg !398
  %7076 = icmp ult i64 %7074, %7075, !dbg !399
  %7077 = and i1 %7072, %7076, !dbg !400
  br i1 %7077, label %7057, label %7096, !dbg !401

7078:                                             ; preds = %7057
  %7079 = load i8*, i8** %7053, align 8, !dbg !402
  %7080 = call i8 @sqlite3GetVarint32(i8* %7079, i32* %6884), !dbg !403
  %7081 = getelementptr i8, i8* %7079, i8 %7080, !dbg !404
  store i8* %7081, i8** %7053, align 8, !dbg !405
  %7082 = load i32, i32* %6884, align 4, !dbg !406
  store i32 %7082, i32* %7059, align 4, !dbg !407
  %7083 = load i64, i64* %7047, align 4, !dbg !408
  %7084 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7082), !dbg !409
  %7085 = zext i32 %7084 to i64, !dbg !410
  %7086 = add i64 %7083, %7085, !dbg !411
  store i64 %7086, i64* %7047, align 4, !dbg !412
  br label %7064, !dbg !413

7087:                                             ; preds = %7057
  %7088 = getelementptr i8, i8* %7060, i32 1, !dbg !414
  store i8* %7088, i8** %7053, align 8, !dbg !415
  %7089 = load i32, i32* %6884, align 4, !dbg !416
  %7090 = trunc i32 %7089 to i8, !dbg !417
  %7091 = getelementptr i8, i8* %4, i8 %7090, !dbg !418
  %7092 = load i8, i8* %7091, align 1, !dbg !419
  %7093 = zext i8 %7092 to i64, !dbg !420
  %7094 = load i64, i64* %7047, align 4, !dbg !421
  %7095 = add i64 %7094, %7093, !dbg !422
  store i64 %7095, i64* %7047, align 4, !dbg !423
  br label %7064, !dbg !424

7096:                                             ; preds = %7064
  %7097 = load i64, i64* %7047, align 4, !dbg !425
  %7098 = load i32, i32* %6899, align 4, !dbg !426
  %7099 = zext i32 %7098 to i64, !dbg !427
  %7100 = icmp uge i64 %7074, %7075, !dbg !428
  %7101 = icmp ugt i64 %7074, %7075, !dbg !429
  %7102 = icmp ne i64 %7097, %7099, !dbg !430
  %7103 = icmp ugt i64 %7097, %7099, !dbg !431
  %7104 = or i1 %7101, %7102, !dbg !432
  %7105 = and i1 %7100, %7104, !dbg !433
  %7106 = or i1 %7105, %7103, !dbg !434
  br i1 %7106, label %7107, label %7111, !dbg !435

7107:                                             ; preds = %7096
  %7108 = load i32, i32* %6891, align 4, !dbg !436
  %7109 = icmp eq i32 %7108, 0, !dbg !437
  br i1 %7109, label %7110, label %7111, !dbg !438

7110:                                             ; preds = %7107
  store i32 0, i32* %7044, align 4, !dbg !439
  store i8* %7056, i8** %7053, align 8, !dbg !440
  br label %7111, !dbg !441

7111:                                             ; preds = %7110, %7107, %7096
  %7112 = load i32, i32* %7044, align 4, !dbg !442
  %7113 = trunc i32 %7112 to i16, !dbg !443
  store i16 %7113, i16* %6902, align 2, !dbg !444
  %7114 = load i8*, i8** %7053, align 8, !dbg !445
  %7115 = ptrtoint i8* %7114 to i64, !dbg !446
  %7116 = load i8*, i8** %6883, align 8, !dbg !447
  %7117 = ptrtoint i8* %7116 to i64, !dbg !448
  %7118 = sub i64 %7115, %7117, !dbg !449
  %7119 = trunc i64 %7118 to i32, !dbg !450
  store i32 %7119, i32* %6898, align 4, !dbg !451
  br label %7121, !dbg !452

7120:                                             ; preds = %7035
  store i32 0, i32* %6884, align 4, !dbg !453
  br label %7121, !dbg !454

7121:                                             ; preds = %7111, %7120
  %7122 = load i16, i16* %6902, align 2, !dbg !455
  %7123 = icmp sle i16 %7122, 4, !dbg !456
  br i1 %7123, label %7124, label %6953, !dbg !457

7124:                                             ; preds = %7121
  %7125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6887, i32 0, i32 1, !dbg !458
  %7126 = load i16, i16* %7125, align 2, !dbg !458
  %7127 = and i16 %7126, 9216, !dbg !458
  %7128 = icmp ne i16 %7127, 0, !dbg !458
  br i1 %7128, label %7129, label %7130, !dbg !458

7129:                                             ; preds = %7124
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6887), !dbg !458
  br label %7131, !dbg !458

7130:                                             ; preds = %7124
  store i16 1, i16* %7125, align 2, !dbg !458
  br label %7131, !dbg !458

7131:                                             ; preds = %7129, %7130, %7000, %6980, %7019, %7030, %6948, %6949
  call void @llvm.stackrestore(i8* %6876), !dbg !459
  br label %7132, !dbg !74

7132:                                             ; preds = %7131, %14
  %7133 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1171
  %7134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7133, i32 0, i32 1, !dbg !1174
  %7135 = load i16, i16* %7134, align 2, !dbg !1175
  %7136 = and i16 %7135, 36, !dbg !1176
  %7137 = icmp ne i16 %7136, 0, !dbg !1177
  br i1 %7137, label %7138, label %7139, !dbg !1178

7138:                                             ; preds = %7132
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %7133), !dbg !1179
  br label %7139, !dbg !1180

7139:                                             ; preds = %7138, %7132, %14
  %7140 = call i8* @llvm.stacksave(), !dbg !167
  %7141 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %7142 = load i8, i8* %7141, align 1, !dbg !171
  %7143 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %7143, align 4, !dbg !173
  %7144 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %7145 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %7146 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7144, align 8, !dbg !176
  store %struct.VdbeCursor* %7146, %struct.VdbeCursor** %7145, align 8, !dbg !177
  %7147 = alloca i8*, align 8, !dbg !178
  %7148 = alloca i32, align 4, !dbg !179
  %7149 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7145, i32* %7143), !dbg !180
  %7150 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7145, align 8, !dbg !181
  %7151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !182
  %7152 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 16, !dbg !183
  %7153 = load i16, i16* %7152, align 2, !dbg !184
  %7154 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 19, !dbg !185
  %7155 = load i32*, i32** %7154, align 8, !dbg !186
  %7156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 0, !dbg !187
  %7157 = load i8, i8* %7156, align 1, !dbg !188
  %7158 = icmp ne i8 %7157, 3, !dbg !189
  %7159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 2, !dbg !190
  %7160 = load i8, i8* %7159, align 1, !dbg !191
  %7161 = icmp ne i8 %7160, 0, !dbg !192
  %7162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 14, !dbg !193
  %7163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 21, !dbg !194
  %7164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 22, !dbg !195
  %7165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 20, !dbg !196
  %7166 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 17, !dbg !197
  %7167 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 9, !dbg !198
  %7168 = load i32, i32* %7167, align 4, !dbg !199
  %7169 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %7170 = load i32, i32* %7169, align 4, !dbg !201
  %7171 = icmp ne i32 %7168, %7170, !dbg !202
  br i1 %7171, label %7172, label %7214, !dbg !203

7172:                                             ; preds = %7139
  br i1 %7161, label %7194, label %7189, !dbg !204

7173:                                             ; preds = %7189, %7196
  %7174 = load i32, i32* %7169, align 4, !dbg !205
  store i32 %7174, i32* %7167, align 4, !dbg !206
  %7175 = load i8*, i8** %7165, align 8, !dbg !207
  %7176 = load i8, i8* %7175, align 1, !dbg !208
  %7177 = icmp sgt i8 %7176, -1, !dbg !211
  br i1 %7177, label %7178, label %7180, !dbg !212

7178:                                             ; preds = %7173
  %7179 = zext i8 %7176 to i32, !dbg !213
  store i32 %7179, i32* %7155, align 4, !dbg !214
  store i32 1, i32* %7162, align 4, !dbg !215
  br label %7183, !dbg !216

7180:                                             ; preds = %7173
  %7181 = call i8 @sqlite3GetVarint32(i8* %7175, i32* %7155), !dbg !217
  %7182 = zext i8 %7181 to i32, !dbg !218
  store i32 %7182, i32* %7162, align 4, !dbg !219
  br label %7183, !dbg !220

7183:                                             ; preds = %7180, %7178
  store i16 0, i16* %7166, align 2, !dbg !221
  %7184 = load i32, i32* %7164, align 4, !dbg !222
  %7185 = load i32, i32* %7155, align 4, !dbg !223
  %7186 = icmp ult i32 %7184, %7185, !dbg !224
  br i1 %7186, label %7188, label %7187, !dbg !225

7187:                                             ; preds = %7183
  store i8* %7175, i8** %7147, align 8, !dbg !226
  br label %7307, !dbg !227

7188:                                             ; preds = %7183
  store i8* null, i8** %7165, align 8, !dbg !228
  store i32 0, i32* %7164, align 4, !dbg !229
  br label %7214, !dbg !230

7189:                                             ; preds = %7172
  %7190 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 12, i32 0, !dbg !231
  %7191 = load %struct.BtCursor*, %struct.BtCursor** %7190, align 8, !dbg !232
  %7192 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7191), !dbg !233
  store i32 %7192, i32* %7163, align 4, !dbg !234
  %7193 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7191, i32* %7164), !dbg !235
  store i8* %7193, i8** %7165, align 8, !dbg !236
  br label %7173, !dbg !237

7194:                                             ; preds = %7172
  %7195 = icmp eq i8 %7157, 3, !dbg !238
  br i1 %7195, label %7196, label %7207, !dbg !239

7196:                                             ; preds = %7194
  %7197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 10, !dbg !240
  %7198 = load i32, i32* %7197, align 4, !dbg !241
  %7199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7198, !dbg !242
  %7200 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7199, i32 0, i32 1, !dbg !243
  %7201 = load i16, i16* %7200, align 2, !dbg !244
  %7202 = and i16 %7201, 16, !dbg !245
  %7203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7199, i32 0, i32 4, !dbg !246
  %7204 = load i32, i32* %7203, align 4, !dbg !247
  store i32 %7204, i32* %7163, align 4, !dbg !248
  store i32 %7204, i32* %7164, align 4, !dbg !249
  %7205 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7199, i32 0, i32 5, !dbg !250
  %7206 = load i8*, i8** %7205, align 8, !dbg !251
  store i8* %7206, i8** %7165, align 8, !dbg !252
  br label %7173, !dbg !253

7207:                                             ; preds = %7194
  %7208 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 1, !dbg !254
  %7209 = load i16, i16* %7208, align 2, !dbg !254
  %7210 = and i16 %7209, 9216, !dbg !254
  %7211 = icmp ne i16 %7210, 0, !dbg !254
  br i1 %7211, label %7212, label %7213, !dbg !254

7212:                                             ; preds = %7207
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7151), !dbg !254
  br label %7395, !dbg !254

7213:                                             ; preds = %7207
  store i16 1, i16* %7208, align 2, !dbg !254
  br label %7395, !dbg !254

7214:                                             ; preds = %7188, %7139
  %7215 = load i16, i16* %7166, align 2, !dbg !255
  %7216 = icmp ule i16 %7215, 5, !dbg !256
  br i1 %7216, label %7299, label %7296, !dbg !257

7217:                                             ; preds = %7296, %7385
  %7218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 1, !dbg !258
  %7219 = load i16, i16* %7218, align 2, !dbg !259
  %7220 = and i16 9216, %7219, !dbg !260
  %7221 = icmp eq i16 0, %7220, !dbg !261
  br i1 %7221, label %7222, label %7226, !dbg !262

7222:                                             ; preds = %7217
  %7223 = icmp ne i16 %7220, 0, !dbg !263
  br i1 %7223, label %7224, label %7225, !dbg !263

7224:                                             ; preds = %7222
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7151), !dbg !263
  br label %7226, !dbg !263

7225:                                             ; preds = %7222
  store i16 1, i16* %7218, align 2, !dbg !263
  br label %7226, !dbg !263

7226:                                             ; preds = %7224, %7225, %7217
  %7227 = load i32, i32* %7148, align 4, !dbg !264
  %7228 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 23, i32 5, !dbg !265
  %7229 = load i32, i32* %7228, align 4, !dbg !266
  %7230 = load i32, i32* %7164, align 4, !dbg !267
  %7231 = getelementptr i32, i32* %7155, i32 6, !dbg !268
  %7232 = load i32, i32* %7231, align 4, !dbg !269
  %7233 = icmp sge i32 %7230, %7232, !dbg !270
  br i1 %7233, label %7234, label %7274, !dbg !271

7234:                                             ; preds = %7226
  %7235 = load i8*, i8** %7165, align 8, !dbg !272
  %7236 = ptrtoint i8* %7235 to i64, !dbg !273
  %7237 = getelementptr i32, i32* %7155, i32 5, !dbg !274
  %7238 = load i32, i32* %7237, align 4, !dbg !275
  %7239 = zext i32 %7238 to i64, !dbg !276
  %7240 = add i64 %7236, %7239, !dbg !277
  %7241 = inttoptr i64 %7240 to i8*, !dbg !278
  store i8* %7241, i8** %7147, align 8, !dbg !279
  %7242 = load i32, i32* %7148, align 4, !dbg !280
  %7243 = icmp ult i32 %7242, 12, !dbg !281
  br i1 %7243, label %7244, label %7246, !dbg !282

7244:                                             ; preds = %7234
  %7245 = call i32 @sqlite3VdbeSerialGet(i8* %7241, i32 %7242, %struct.sqlite3_value* %7151), !dbg !283
  br label %7395, !dbg !284

7246:                                             ; preds = %7234
  %7247 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %7247, align 2, !dbg !286
  %7248 = getelementptr i16, i16* %7247, i32 1, !dbg !287
  store i16 514, i16* %7248, align 2, !dbg !288
  %7249 = load i32, i32* %7148, align 4, !dbg !289
  %7250 = sub i32 %7249, 12, !dbg !290
  %7251 = lshr i32 %7250, 1, !dbg !291
  %7252 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 4, !dbg !292
  store i32 %7251, i32* %7252, align 4, !dbg !293
  %7253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 2, !dbg !294
  store i8 %7142, i8* %7253, align 1, !dbg !295
  %7254 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 5, !dbg !296
  %7255 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 7, !dbg !297
  %7256 = load i32, i32* %7255, align 4, !dbg !298
  %7257 = add i32 %7251, 2, !dbg !299
  %7258 = icmp slt i32 %7256, %7257, !dbg !300
  br i1 %7258, label %7259, label %7261, !dbg !301

7259:                                             ; preds = %7246
  store i16 1, i16* %7218, align 2, !dbg !302
  %7260 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7151, i32 %7257, i32 0), !dbg !303
  br label %7264, !dbg !304

7261:                                             ; preds = %7246
  %7262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 6, !dbg !305
  %7263 = load i8*, i8** %7262, align 8, !dbg !306
  store i8* %7263, i8** %7254, align 8, !dbg !307
  br label %7264, !dbg !308

7264:                                             ; preds = %7261, %7259
  %7265 = zext i32 %7251 to i64, !dbg !309
  %7266 = load i8*, i8** %7254, align 8, !dbg !310
  %7267 = load i8*, i8** %7147, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7266, i8* %7267, i64 %7265, i1 false), !dbg !312
  %7268 = getelementptr i8, i8* %7266, i32 %7251, !dbg !313
  store i8 0, i8* %7268, align 1, !dbg !314
  %7269 = add i32 %7251, 1, !dbg !315
  %7270 = getelementptr i8, i8* %7266, i32 %7269, !dbg !316
  store i8 0, i8* %7270, align 1, !dbg !317
  %7271 = and i32 %7249, 1, !dbg !318
  %7272 = getelementptr i16, i16* %7247, i32 %7271, !dbg !319
  %7273 = load i16, i16* %7272, align 2, !dbg !320
  store i16 %7273, i16* %7218, align 2, !dbg !321
  br label %7395, !dbg !322

7274:                                             ; preds = %7226
  %7275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 2, !dbg !323
  store i8 %7142, i8* %7275, align 1, !dbg !324
  %7276 = load i32, i32* %7148, align 4, !dbg !325
  %7277 = and i32 %7276, 1, !dbg !326
  %7278 = icmp eq i32 %7277, 0, !dbg !327
  %7279 = icmp sge i32 %7276, 12, !dbg !328
  %7280 = and i1 %7279, %7278, !dbg !329
  %7281 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7276), !dbg !330
  %7282 = icmp eq i32 %7281, 0, !dbg !331
  br i1 %7282, label %7294, label %7283, !dbg !332

7283:                                             ; preds = %7274
  %7284 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 12, i32 0, !dbg !333
  %7285 = load %struct.BtCursor*, %struct.BtCursor** %7284, align 8, !dbg !334
  %7286 = getelementptr i32, i32* %7155, i32 5, !dbg !335
  %7287 = load i32, i32* %7286, align 4, !dbg !336
  %7288 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7285, i32 %7287, i32 %7281, %struct.sqlite3_value* %7151), !dbg !337
  %7289 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 5, !dbg !338
  %7290 = load i8*, i8** %7289, align 8, !dbg !339
  %7291 = call i32 @sqlite3VdbeSerialGet(i8* %7290, i32 %7276, %struct.sqlite3_value* %7151), !dbg !340
  %7292 = load i16, i16* %7218, align 2, !dbg !341
  %7293 = and i16 %7292, -4097, !dbg !342
  store i16 %7293, i16* %7218, align 2, !dbg !343
  br label %7395, !dbg !344

7294:                                             ; preds = %7274
  %7295 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7276, %struct.sqlite3_value* %7151), !dbg !345
  br label %7395, !dbg !346

7296:                                             ; preds = %7214
  %7297 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 23, i32 5, !dbg !347
  %7298 = load i32, i32* %7297, align 4, !dbg !348
  store i32 %7298, i32* %7148, align 4, !dbg !349
  br label %7217, !dbg !350

7299:                                             ; preds = %7214
  %7300 = load i32, i32* %7162, align 4, !dbg !351
  %7301 = load i32, i32* %7155, align 4, !dbg !352
  %7302 = icmp ult i32 %7300, %7301, !dbg !353
  br i1 %7302, label %7303, label %7384, !dbg !354

7303:                                             ; preds = %7299
  %7304 = load i8*, i8** %7165, align 8, !dbg !355
  %7305 = icmp eq i8* %7304, null, !dbg !356
  br i1 %7305, label %7307, label %7306, !dbg !357

7306:                                             ; preds = %7303
  store i8* %7304, i8** %7147, align 8, !dbg !358
  br label %7307, !dbg !359

7307:                                             ; preds = %7306, %7303, %7187
  %7308 = alloca i32, align 4, !dbg !360
  %7309 = load i16, i16* %7166, align 2, !dbg !361
  %7310 = zext i16 %7309 to i32, !dbg !362
  store i32 %7310, i32* %7308, align 4, !dbg !363
  %7311 = alloca i64, align 8, !dbg !364
  %7312 = getelementptr i32, i32* %7155, i32 %7310, !dbg !365
  %7313 = load i32, i32* %7312, align 4, !dbg !366
  %7314 = zext i32 %7313 to i64, !dbg !367
  store i64 %7314, i64* %7311, align 4, !dbg !368
  %7315 = load i8*, i8** %7147, align 8, !dbg !369
  %7316 = load i32, i32* %7162, align 4, !dbg !370
  %7317 = alloca i8*, align 8, !dbg !371
  %7318 = getelementptr i8, i8* %7315, i32 %7316, !dbg !372
  store i8* %7318, i8** %7317, align 8, !dbg !373
  %7319 = load i32, i32* %7155, align 4, !dbg !374
  %7320 = getelementptr i8, i8* %7315, i32 %7319, !dbg !375
  br label %7321, !dbg !376

7321:                                             ; preds = %7328, %7307
  %7322 = load i32, i32* %7308, align 4, !dbg !377
  %7323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7150, i32 0, i32 23, i32 %7322, !dbg !378
  %7324 = load i8*, i8** %7317, align 8, !dbg !379
  %7325 = load i8, i8* %7324, align 1, !dbg !380
  %7326 = zext i8 %7325 to i32, !dbg !381
  store i32 %7326, i32* %7148, align 4, !dbg !382
  store i32 %7326, i32* %7323, align 4, !dbg !383
  %7327 = icmp sgt i8 %7325, -1, !dbg !384
  br i1 %7327, label %7351, label %7342, !dbg !385

7328:                                             ; preds = %7342, %7351
  %7329 = load i32, i32* %7308, align 4, !dbg !386
  %7330 = add i32 %7329, 1, !dbg !387
  store i32 %7330, i32* %7308, align 4, !dbg !388
  %7331 = load i64, i64* %7311, align 4, !dbg !389
  %7332 = and i64 4294967295, %7331, !dbg !390
  %7333 = trunc i64 %7332 to i32, !dbg !391
  %7334 = getelementptr i32, i32* %7155, i32 %7330, !dbg !392
  store i32 %7333, i32* %7334, align 4, !dbg !393
  %7335 = load i32, i32* %7308, align 4, !dbg !394
  %7336 = icmp sle i32 %7335, 5, !dbg !395
  %7337 = load i8*, i8** %7317, align 8, !dbg !396
  %7338 = ptrtoint i8* %7337 to i64, !dbg !397
  %7339 = ptrtoint i8* %7320 to i64, !dbg !398
  %7340 = icmp ult i64 %7338, %7339, !dbg !399
  %7341 = and i1 %7336, %7340, !dbg !400
  br i1 %7341, label %7321, label %7360, !dbg !401

7342:                                             ; preds = %7321
  %7343 = load i8*, i8** %7317, align 8, !dbg !402
  %7344 = call i8 @sqlite3GetVarint32(i8* %7343, i32* %7148), !dbg !403
  %7345 = getelementptr i8, i8* %7343, i8 %7344, !dbg !404
  store i8* %7345, i8** %7317, align 8, !dbg !405
  %7346 = load i32, i32* %7148, align 4, !dbg !406
  store i32 %7346, i32* %7323, align 4, !dbg !407
  %7347 = load i64, i64* %7311, align 4, !dbg !408
  %7348 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7346), !dbg !409
  %7349 = zext i32 %7348 to i64, !dbg !410
  %7350 = add i64 %7347, %7349, !dbg !411
  store i64 %7350, i64* %7311, align 4, !dbg !412
  br label %7328, !dbg !413

7351:                                             ; preds = %7321
  %7352 = getelementptr i8, i8* %7324, i32 1, !dbg !414
  store i8* %7352, i8** %7317, align 8, !dbg !415
  %7353 = load i32, i32* %7148, align 4, !dbg !416
  %7354 = trunc i32 %7353 to i8, !dbg !417
  %7355 = getelementptr i8, i8* %4, i8 %7354, !dbg !418
  %7356 = load i8, i8* %7355, align 1, !dbg !419
  %7357 = zext i8 %7356 to i64, !dbg !420
  %7358 = load i64, i64* %7311, align 4, !dbg !421
  %7359 = add i64 %7358, %7357, !dbg !422
  store i64 %7359, i64* %7311, align 4, !dbg !423
  br label %7328, !dbg !424

7360:                                             ; preds = %7328
  %7361 = load i64, i64* %7311, align 4, !dbg !425
  %7362 = load i32, i32* %7163, align 4, !dbg !426
  %7363 = zext i32 %7362 to i64, !dbg !427
  %7364 = icmp uge i64 %7338, %7339, !dbg !428
  %7365 = icmp ugt i64 %7338, %7339, !dbg !429
  %7366 = icmp ne i64 %7361, %7363, !dbg !430
  %7367 = icmp ugt i64 %7361, %7363, !dbg !431
  %7368 = or i1 %7365, %7366, !dbg !432
  %7369 = and i1 %7364, %7368, !dbg !433
  %7370 = or i1 %7369, %7367, !dbg !434
  br i1 %7370, label %7371, label %7375, !dbg !435

7371:                                             ; preds = %7360
  %7372 = load i32, i32* %7155, align 4, !dbg !436
  %7373 = icmp eq i32 %7372, 0, !dbg !437
  br i1 %7373, label %7374, label %7375, !dbg !438

7374:                                             ; preds = %7371
  store i32 0, i32* %7308, align 4, !dbg !439
  store i8* %7320, i8** %7317, align 8, !dbg !440
  br label %7375, !dbg !441

7375:                                             ; preds = %7374, %7371, %7360
  %7376 = load i32, i32* %7308, align 4, !dbg !442
  %7377 = trunc i32 %7376 to i16, !dbg !443
  store i16 %7377, i16* %7166, align 2, !dbg !444
  %7378 = load i8*, i8** %7317, align 8, !dbg !445
  %7379 = ptrtoint i8* %7378 to i64, !dbg !446
  %7380 = load i8*, i8** %7147, align 8, !dbg !447
  %7381 = ptrtoint i8* %7380 to i64, !dbg !448
  %7382 = sub i64 %7379, %7381, !dbg !449
  %7383 = trunc i64 %7382 to i32, !dbg !450
  store i32 %7383, i32* %7162, align 4, !dbg !451
  br label %7385, !dbg !452

7384:                                             ; preds = %7299
  store i32 0, i32* %7148, align 4, !dbg !453
  br label %7385, !dbg !454

7385:                                             ; preds = %7375, %7384
  %7386 = load i16, i16* %7166, align 2, !dbg !455
  %7387 = icmp sle i16 %7386, 5, !dbg !456
  br i1 %7387, label %7388, label %7217, !dbg !457

7388:                                             ; preds = %7385
  %7389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7151, i32 0, i32 1, !dbg !458
  %7390 = load i16, i16* %7389, align 2, !dbg !458
  %7391 = and i16 %7390, 9216, !dbg !458
  %7392 = icmp ne i16 %7391, 0, !dbg !458
  br i1 %7392, label %7393, label %7394, !dbg !458

7393:                                             ; preds = %7388
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7151), !dbg !458
  br label %7395, !dbg !458

7394:                                             ; preds = %7388
  store i16 1, i16* %7389, align 2, !dbg !458
  br label %7395, !dbg !458

7395:                                             ; preds = %7393, %7394, %7264, %7244, %7283, %7294, %7212, %7213
  call void @llvm.stackrestore(i8* %7140), !dbg !459
  br label %7396, !dbg !74

7396:                                             ; preds = %7395, %14
  %7397 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1171
  %7398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7397, i32 0, i32 1, !dbg !1174
  %7399 = load i16, i16* %7398, align 2, !dbg !1175
  %7400 = and i16 %7399, 36, !dbg !1176
  %7401 = icmp ne i16 %7400, 0, !dbg !1177
  br i1 %7401, label %7402, label %7403, !dbg !1178

7402:                                             ; preds = %7396
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %7397), !dbg !1179
  br label %7403, !dbg !1180

7403:                                             ; preds = %7402, %7396, %14
  %7404 = call i8* @llvm.stacksave(), !dbg !679
  %7405 = alloca i64, align 8, !dbg !682
  store i64 0, i64* %7405, align 4, !dbg !683
  %7406 = alloca i32, align 8, !dbg !684
  store i32 0, i32* %7406, align 4, !dbg !685
  %7407 = alloca i64, align 8, !dbg !686
  store i64 0, i64* %7407, align 4, !dbg !687
  %7408 = alloca i8*, align 8, !dbg !688
  %7409 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 57, !dbg !689
  %7410 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7409, i32 0, i32 6, !dbg !690
  %7411 = bitcast %union.p4union* %7410 to i8**, !dbg !691
  %7412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !692
  %7413 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7412, i32 4, !dbg !693
  %7414 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !694
  %7415 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 0, i32 1, !dbg !695
  %7416 = load i16, i16* %7415, align 2, !dbg !696
  %7417 = and i16 %7416, 1, !dbg !697
  %7418 = icmp ne i16 %7417, 0, !dbg !697
  %7419 = and i16 %7416, 36, !dbg !698
  %7420 = icmp ne i16 %7419, 0, !dbg !698
  %7421 = and i16 %7416, 8, !dbg !699
  %7422 = icmp ne i16 %7421, 0, !dbg !699
  %7423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 0, i32 8, !dbg !700
  br i1 %7418, label %7424, label %7432, !dbg !701

7424:                                             ; preds = %7403
  %7425 = and i16 %7416, 16384, !dbg !702
  %7426 = icmp ne i16 %7425, 0, !dbg !702
  br i1 %7426, label %7427, label %7428, !dbg !703

7427:                                             ; preds = %7424
  store i32 10, i32* %7423, align 4, !dbg !704
  br label %7429, !dbg !705

7428:                                             ; preds = %7424
  store i32 0, i32* %7423, align 4, !dbg !706
  br label %7429, !dbg !707

7429:                                             ; preds = %7428, %7427
  %7430 = load i32, i32* %7406, align 4, !dbg !708
  %7431 = add i32 %7430, 1, !dbg !708
  store i32 %7431, i32* %7406, align 4, !dbg !708
  br label %7522, !dbg !709

7432:                                             ; preds = %7403
  br i1 %7420, label %7433, label %7477, !dbg !710

7433:                                             ; preds = %7432
  %7434 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 0, i32 0, !dbg !711
  %7435 = bitcast %union.MemValue* %7434 to i64*, !dbg !712
  %7436 = load i64, i64* %7435, align 4, !dbg !713
  %7437 = alloca i64, align 8, !dbg !714
  %7438 = icmp slt i64 %7436, 0, !dbg !715
  br i1 %7438, label %7439, label %7441, !dbg !716

7439:                                             ; preds = %7433
  %7440 = xor i64 %7436, -1, !dbg !717
  store i64 %7440, i64* %7437, align 4, !dbg !718
  br label %7442, !dbg !719

7441:                                             ; preds = %7433
  store i64 %7436, i64* %7437, align 4, !dbg !720
  br label %7442, !dbg !721

7442:                                             ; preds = %7441, %7439
  %7443 = load i32, i32* %7406, align 4, !dbg !722
  %7444 = add i32 %7443, 1, !dbg !722
  store i32 %7444, i32* %7406, align 4, !dbg !722
  %7445 = load i64, i64* %7437, align 4, !dbg !723
  %7446 = icmp slt i64 %7445, 127, !dbg !724
  %7447 = icmp slt i64 %7445, 32767, !dbg !725
  %7448 = icmp slt i64 %7445, 8388607, !dbg !726
  %7449 = icmp slt i64 %7445, 2147483647, !dbg !727
  br i1 %7446, label %7450, label %7459, !dbg !728

7450:                                             ; preds = %7442
  %7451 = and i64 %7436, 1, !dbg !729
  %7452 = icmp eq i64 %7451, %7436, !dbg !730
  br i1 %7452, label %7453, label %7456, !dbg !731

7453:                                             ; preds = %7450
  %7454 = trunc i64 %7445 to i32, !dbg !732
  %7455 = add i32 %7454, 8, !dbg !733
  store i32 %7455, i32* %7423, align 4, !dbg !734
  br label %7522, !dbg !735

7456:                                             ; preds = %7450
  %7457 = load i64, i64* %7405, align 4, !dbg !736
  %7458 = add i64 %7457, 1, !dbg !736
  store i64 %7458, i64* %7405, align 4, !dbg !736
  store i32 1, i32* %7423, align 4, !dbg !737
  br label %7522, !dbg !738

7459:                                             ; preds = %7442
  %7460 = load i64, i64* %7405, align 4, !dbg !739
  br i1 %7447, label %7461, label %7463, !dbg !740

7461:                                             ; preds = %7459
  %7462 = add i64 %7460, 2, !dbg !741
  store i64 %7462, i64* %7405, align 4, !dbg !741
  store i32 2, i32* %7423, align 4, !dbg !742
  br label %7522, !dbg !743

7463:                                             ; preds = %7459
  br i1 %7448, label %7464, label %7466, !dbg !744

7464:                                             ; preds = %7463
  %7465 = add i64 %7460, 3, !dbg !745
  store i64 %7465, i64* %7405, align 4, !dbg !745
  store i32 3, i32* %7423, align 4, !dbg !746
  br label %7522, !dbg !747

7466:                                             ; preds = %7463
  br i1 %7449, label %7467, label %7469, !dbg !748

7467:                                             ; preds = %7466
  %7468 = add i64 %7460, 4, !dbg !749
  store i64 %7468, i64* %7405, align 4, !dbg !749
  store i32 4, i32* %7423, align 4, !dbg !750
  br label %7522, !dbg !751

7469:                                             ; preds = %7466
  %7470 = add i64 %7460, 8, !dbg !752
  store i64 %7470, i64* %7405, align 4, !dbg !752
  %7471 = and i16 %7416, 32, !dbg !753
  %7472 = icmp ne i16 %7471, 0, !dbg !753
  br i1 %7472, label %7473, label %7476, !dbg !754

7473:                                             ; preds = %7469
  %7474 = and i16 %7416, -33, !dbg !755
  %7475 = or i16 %7474, 8, !dbg !756
  store i16 %7475, i16* %7415, align 2, !dbg !757
  store i32 7, i32* %7423, align 4, !dbg !758
  br label %7522, !dbg !759

7476:                                             ; preds = %7469
  store i32 6, i32* %7423, align 4, !dbg !760
  br label %7522, !dbg !761

7477:                                             ; preds = %7432
  br i1 %7422, label %7478, label %7483, !dbg !762

7478:                                             ; preds = %7477
  %7479 = load i32, i32* %7406, align 4, !dbg !763
  %7480 = add i32 %7479, 1, !dbg !763
  store i32 %7480, i32* %7406, align 4, !dbg !763
  %7481 = load i64, i64* %7405, align 4, !dbg !764
  %7482 = add i64 %7481, 8, !dbg !764
  store i64 %7482, i64* %7405, align 4, !dbg !764
  store i32 7, i32* %7423, align 4, !dbg !765
  br label %7522, !dbg !766

7483:                                             ; preds = %7477
  %7484 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 0, i32 4, !dbg !767
  %7485 = load i32, i32* %7484, align 4, !dbg !768
  %7486 = alloca i32, align 8, !dbg !769
  store i32 %7485, i32* %7486, align 4, !dbg !770
  %7487 = alloca i32, align 8, !dbg !771
  %7488 = add i32 %7485, %7485, !dbg !772
  %7489 = add i32 %7488, 12, !dbg !773
  %7490 = and i16 %7416, 2, !dbg !774
  %7491 = icmp ne i16 %7490, 0, !dbg !775
  %7492 = zext i1 %7491 to i32, !dbg !776
  %7493 = add i32 %7489, %7492, !dbg !777
  store i32 %7493, i32* %7487, align 4, !dbg !778
  %7494 = and i16 %7416, 16384, !dbg !779
  %7495 = icmp ne i16 %7494, 0, !dbg !780
  br i1 %7495, label %7496, label %7512, !dbg !781

7496:                                             ; preds = %7483
  %7497 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 0, i32 0, !dbg !782
  %7498 = bitcast %union.MemValue* %7497 to i32*, !dbg !783
  %7499 = load i32, i32* %7498, align 4, !dbg !784
  %7500 = add i32 %7499, %7499, !dbg !785
  %7501 = add i32 %7493, %7500, !dbg !786
  store i32 %7501, i32* %7487, align 4, !dbg !786
  %7502 = load i64, i64* %7405, align 4, !dbg !787
  %7503 = icmp ne i64 %7502, 0, !dbg !787
  br i1 %7503, label %7508, label %7504, !dbg !788

7504:                                             ; preds = %7496
  %7505 = zext i32 %7499 to i64, !dbg !789
  %7506 = load i64, i64* %7407, align 4, !dbg !790
  %7507 = add i64 %7506, %7505, !dbg !790
  store i64 %7507, i64* %7407, align 4, !dbg !790
  br label %7512, !dbg !791

7508:                                             ; preds = %7496
  %7509 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7413), !dbg !792
  %7510 = load i32, i32* %7486, align 4, !dbg !793
  %7511 = add i32 %7510, %7499, !dbg !793
  store i32 %7511, i32* %7486, align 4, !dbg !793
  br label %7512, !dbg !794

7512:                                             ; preds = %7504, %7508, %7483
  %7513 = load i32, i32* %7486, align 4, !dbg !795
  %7514 = zext i32 %7513 to i64, !dbg !796
  %7515 = load i64, i64* %7405, align 4, !dbg !797
  %7516 = add i64 %7515, %7514, !dbg !797
  store i64 %7516, i64* %7405, align 4, !dbg !797
  %7517 = load i32, i32* %7487, align 4, !dbg !798
  %7518 = zext i32 %7517 to i64, !dbg !799
  %7519 = call i32 @sqlite3VarintLen(i64 %7518), !dbg !800
  %7520 = load i32, i32* %7406, align 4, !dbg !801
  %7521 = add i32 %7520, %7519, !dbg !801
  store i32 %7521, i32* %7406, align 4, !dbg !801
  store i32 %7517, i32* %7423, align 4, !dbg !802
  br label %7522, !dbg !803

7522:                                             ; preds = %7461, %7464, %7467, %7473, %7476, %7456, %7453, %7512, %7478, %7429
  %7523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7413, i32 -1, !dbg !804
  %7524 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 0, i32 1, !dbg !695
  %7525 = load i16, i16* %7524, align 2, !dbg !696
  %7526 = and i16 %7525, 1, !dbg !697
  %7527 = icmp ne i16 %7526, 0, !dbg !697
  %7528 = and i16 %7525, 36, !dbg !698
  %7529 = icmp ne i16 %7528, 0, !dbg !698
  %7530 = and i16 %7525, 8, !dbg !699
  %7531 = icmp ne i16 %7530, 0, !dbg !699
  %7532 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 0, i32 8, !dbg !700
  br i1 %7527, label %7533, label %7541, !dbg !701

7533:                                             ; preds = %7522
  %7534 = and i16 %7525, 16384, !dbg !702
  %7535 = icmp ne i16 %7534, 0, !dbg !702
  br i1 %7535, label %7536, label %7537, !dbg !703

7536:                                             ; preds = %7533
  store i32 10, i32* %7532, align 4, !dbg !704
  br label %7538, !dbg !705

7537:                                             ; preds = %7533
  store i32 0, i32* %7532, align 4, !dbg !706
  br label %7538, !dbg !707

7538:                                             ; preds = %7537, %7536
  %7539 = load i32, i32* %7406, align 4, !dbg !708
  %7540 = add i32 %7539, 1, !dbg !708
  store i32 %7540, i32* %7406, align 4, !dbg !708
  br label %7631, !dbg !709

7541:                                             ; preds = %7522
  br i1 %7529, label %7542, label %7586, !dbg !710

7542:                                             ; preds = %7541
  %7543 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 0, i32 0, !dbg !711
  %7544 = bitcast %union.MemValue* %7543 to i64*, !dbg !712
  %7545 = load i64, i64* %7544, align 4, !dbg !713
  %7546 = alloca i64, align 8, !dbg !714
  %7547 = icmp slt i64 %7545, 0, !dbg !715
  br i1 %7547, label %7548, label %7550, !dbg !716

7548:                                             ; preds = %7542
  %7549 = xor i64 %7545, -1, !dbg !717
  store i64 %7549, i64* %7546, align 4, !dbg !718
  br label %7551, !dbg !719

7550:                                             ; preds = %7542
  store i64 %7545, i64* %7546, align 4, !dbg !720
  br label %7551, !dbg !721

7551:                                             ; preds = %7550, %7548
  %7552 = load i32, i32* %7406, align 4, !dbg !722
  %7553 = add i32 %7552, 1, !dbg !722
  store i32 %7553, i32* %7406, align 4, !dbg !722
  %7554 = load i64, i64* %7546, align 4, !dbg !723
  %7555 = icmp slt i64 %7554, 127, !dbg !724
  %7556 = icmp slt i64 %7554, 32767, !dbg !725
  %7557 = icmp slt i64 %7554, 8388607, !dbg !726
  %7558 = icmp slt i64 %7554, 2147483647, !dbg !727
  br i1 %7555, label %7559, label %7568, !dbg !728

7559:                                             ; preds = %7551
  %7560 = and i64 %7545, 1, !dbg !729
  %7561 = icmp eq i64 %7560, %7545, !dbg !730
  br i1 %7561, label %7562, label %7565, !dbg !731

7562:                                             ; preds = %7559
  %7563 = trunc i64 %7554 to i32, !dbg !732
  %7564 = add i32 %7563, 8, !dbg !733
  store i32 %7564, i32* %7532, align 4, !dbg !734
  br label %7631, !dbg !735

7565:                                             ; preds = %7559
  %7566 = load i64, i64* %7405, align 4, !dbg !736
  %7567 = add i64 %7566, 1, !dbg !736
  store i64 %7567, i64* %7405, align 4, !dbg !736
  store i32 1, i32* %7532, align 4, !dbg !737
  br label %7631, !dbg !738

7568:                                             ; preds = %7551
  %7569 = load i64, i64* %7405, align 4, !dbg !739
  br i1 %7556, label %7570, label %7572, !dbg !740

7570:                                             ; preds = %7568
  %7571 = add i64 %7569, 2, !dbg !741
  store i64 %7571, i64* %7405, align 4, !dbg !741
  store i32 2, i32* %7532, align 4, !dbg !742
  br label %7631, !dbg !743

7572:                                             ; preds = %7568
  br i1 %7557, label %7573, label %7575, !dbg !744

7573:                                             ; preds = %7572
  %7574 = add i64 %7569, 3, !dbg !745
  store i64 %7574, i64* %7405, align 4, !dbg !745
  store i32 3, i32* %7532, align 4, !dbg !746
  br label %7631, !dbg !747

7575:                                             ; preds = %7572
  br i1 %7558, label %7576, label %7578, !dbg !748

7576:                                             ; preds = %7575
  %7577 = add i64 %7569, 4, !dbg !749
  store i64 %7577, i64* %7405, align 4, !dbg !749
  store i32 4, i32* %7532, align 4, !dbg !750
  br label %7631, !dbg !751

7578:                                             ; preds = %7575
  %7579 = add i64 %7569, 8, !dbg !752
  store i64 %7579, i64* %7405, align 4, !dbg !752
  %7580 = and i16 %7525, 32, !dbg !753
  %7581 = icmp ne i16 %7580, 0, !dbg !753
  br i1 %7581, label %7582, label %7585, !dbg !754

7582:                                             ; preds = %7578
  %7583 = and i16 %7525, -33, !dbg !755
  %7584 = or i16 %7583, 8, !dbg !756
  store i16 %7584, i16* %7524, align 2, !dbg !757
  store i32 7, i32* %7532, align 4, !dbg !758
  br label %7631, !dbg !759

7585:                                             ; preds = %7578
  store i32 6, i32* %7532, align 4, !dbg !760
  br label %7631, !dbg !761

7586:                                             ; preds = %7541
  br i1 %7531, label %7587, label %7592, !dbg !762

7587:                                             ; preds = %7586
  %7588 = load i32, i32* %7406, align 4, !dbg !763
  %7589 = add i32 %7588, 1, !dbg !763
  store i32 %7589, i32* %7406, align 4, !dbg !763
  %7590 = load i64, i64* %7405, align 4, !dbg !764
  %7591 = add i64 %7590, 8, !dbg !764
  store i64 %7591, i64* %7405, align 4, !dbg !764
  store i32 7, i32* %7532, align 4, !dbg !765
  br label %7631, !dbg !766

7592:                                             ; preds = %7586
  %7593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 0, i32 4, !dbg !767
  %7594 = load i32, i32* %7593, align 4, !dbg !768
  %7595 = alloca i32, align 8, !dbg !769
  store i32 %7594, i32* %7595, align 4, !dbg !770
  %7596 = alloca i32, align 8, !dbg !771
  %7597 = add i32 %7594, %7594, !dbg !772
  %7598 = add i32 %7597, 12, !dbg !773
  %7599 = and i16 %7525, 2, !dbg !774
  %7600 = icmp ne i16 %7599, 0, !dbg !775
  %7601 = zext i1 %7600 to i32, !dbg !776
  %7602 = add i32 %7598, %7601, !dbg !777
  store i32 %7602, i32* %7596, align 4, !dbg !778
  %7603 = and i16 %7525, 16384, !dbg !779
  %7604 = icmp ne i16 %7603, 0, !dbg !780
  br i1 %7604, label %7605, label %7621, !dbg !781

7605:                                             ; preds = %7592
  %7606 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 0, i32 0, !dbg !782
  %7607 = bitcast %union.MemValue* %7606 to i32*, !dbg !783
  %7608 = load i32, i32* %7607, align 4, !dbg !784
  %7609 = add i32 %7608, %7608, !dbg !785
  %7610 = add i32 %7602, %7609, !dbg !786
  store i32 %7610, i32* %7596, align 4, !dbg !786
  %7611 = load i64, i64* %7405, align 4, !dbg !787
  %7612 = icmp ne i64 %7611, 0, !dbg !787
  br i1 %7612, label %7617, label %7613, !dbg !788

7613:                                             ; preds = %7605
  %7614 = zext i32 %7608 to i64, !dbg !789
  %7615 = load i64, i64* %7407, align 4, !dbg !790
  %7616 = add i64 %7615, %7614, !dbg !790
  store i64 %7616, i64* %7407, align 4, !dbg !790
  br label %7621, !dbg !791

7617:                                             ; preds = %7605
  %7618 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7523), !dbg !792
  %7619 = load i32, i32* %7595, align 4, !dbg !793
  %7620 = add i32 %7619, %7608, !dbg !793
  store i32 %7620, i32* %7595, align 4, !dbg !793
  br label %7621, !dbg !794

7621:                                             ; preds = %7613, %7617, %7592
  %7622 = load i32, i32* %7595, align 4, !dbg !795
  %7623 = zext i32 %7622 to i64, !dbg !796
  %7624 = load i64, i64* %7405, align 4, !dbg !797
  %7625 = add i64 %7624, %7623, !dbg !797
  store i64 %7625, i64* %7405, align 4, !dbg !797
  %7626 = load i32, i32* %7596, align 4, !dbg !798
  %7627 = zext i32 %7626 to i64, !dbg !799
  %7628 = call i32 @sqlite3VarintLen(i64 %7627), !dbg !800
  %7629 = load i32, i32* %7406, align 4, !dbg !801
  %7630 = add i32 %7629, %7628, !dbg !801
  store i32 %7630, i32* %7406, align 4, !dbg !801
  store i32 %7626, i32* %7532, align 4, !dbg !802
  br label %7631, !dbg !803

7631:                                             ; preds = %7570, %7573, %7576, %7582, %7585, %7565, %7562, %7621, %7587, %7538
  %7632 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7523, i32 -1, !dbg !804
  %7633 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 0, i32 1, !dbg !695
  %7634 = load i16, i16* %7633, align 2, !dbg !696
  %7635 = and i16 %7634, 1, !dbg !697
  %7636 = icmp ne i16 %7635, 0, !dbg !697
  %7637 = and i16 %7634, 36, !dbg !698
  %7638 = icmp ne i16 %7637, 0, !dbg !698
  %7639 = and i16 %7634, 8, !dbg !699
  %7640 = icmp ne i16 %7639, 0, !dbg !699
  %7641 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 0, i32 8, !dbg !700
  br i1 %7636, label %7642, label %7650, !dbg !701

7642:                                             ; preds = %7631
  %7643 = and i16 %7634, 16384, !dbg !702
  %7644 = icmp ne i16 %7643, 0, !dbg !702
  br i1 %7644, label %7645, label %7646, !dbg !703

7645:                                             ; preds = %7642
  store i32 10, i32* %7641, align 4, !dbg !704
  br label %7647, !dbg !705

7646:                                             ; preds = %7642
  store i32 0, i32* %7641, align 4, !dbg !706
  br label %7647, !dbg !707

7647:                                             ; preds = %7646, %7645
  %7648 = load i32, i32* %7406, align 4, !dbg !708
  %7649 = add i32 %7648, 1, !dbg !708
  store i32 %7649, i32* %7406, align 4, !dbg !708
  br label %7740, !dbg !709

7650:                                             ; preds = %7631
  br i1 %7638, label %7651, label %7695, !dbg !710

7651:                                             ; preds = %7650
  %7652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 0, i32 0, !dbg !711
  %7653 = bitcast %union.MemValue* %7652 to i64*, !dbg !712
  %7654 = load i64, i64* %7653, align 4, !dbg !713
  %7655 = alloca i64, align 8, !dbg !714
  %7656 = icmp slt i64 %7654, 0, !dbg !715
  br i1 %7656, label %7657, label %7659, !dbg !716

7657:                                             ; preds = %7651
  %7658 = xor i64 %7654, -1, !dbg !717
  store i64 %7658, i64* %7655, align 4, !dbg !718
  br label %7660, !dbg !719

7659:                                             ; preds = %7651
  store i64 %7654, i64* %7655, align 4, !dbg !720
  br label %7660, !dbg !721

7660:                                             ; preds = %7659, %7657
  %7661 = load i32, i32* %7406, align 4, !dbg !722
  %7662 = add i32 %7661, 1, !dbg !722
  store i32 %7662, i32* %7406, align 4, !dbg !722
  %7663 = load i64, i64* %7655, align 4, !dbg !723
  %7664 = icmp slt i64 %7663, 127, !dbg !724
  %7665 = icmp slt i64 %7663, 32767, !dbg !725
  %7666 = icmp slt i64 %7663, 8388607, !dbg !726
  %7667 = icmp slt i64 %7663, 2147483647, !dbg !727
  br i1 %7664, label %7668, label %7677, !dbg !728

7668:                                             ; preds = %7660
  %7669 = and i64 %7654, 1, !dbg !729
  %7670 = icmp eq i64 %7669, %7654, !dbg !730
  br i1 %7670, label %7671, label %7674, !dbg !731

7671:                                             ; preds = %7668
  %7672 = trunc i64 %7663 to i32, !dbg !732
  %7673 = add i32 %7672, 8, !dbg !733
  store i32 %7673, i32* %7641, align 4, !dbg !734
  br label %7740, !dbg !735

7674:                                             ; preds = %7668
  %7675 = load i64, i64* %7405, align 4, !dbg !736
  %7676 = add i64 %7675, 1, !dbg !736
  store i64 %7676, i64* %7405, align 4, !dbg !736
  store i32 1, i32* %7641, align 4, !dbg !737
  br label %7740, !dbg !738

7677:                                             ; preds = %7660
  %7678 = load i64, i64* %7405, align 4, !dbg !739
  br i1 %7665, label %7679, label %7681, !dbg !740

7679:                                             ; preds = %7677
  %7680 = add i64 %7678, 2, !dbg !741
  store i64 %7680, i64* %7405, align 4, !dbg !741
  store i32 2, i32* %7641, align 4, !dbg !742
  br label %7740, !dbg !743

7681:                                             ; preds = %7677
  br i1 %7666, label %7682, label %7684, !dbg !744

7682:                                             ; preds = %7681
  %7683 = add i64 %7678, 3, !dbg !745
  store i64 %7683, i64* %7405, align 4, !dbg !745
  store i32 3, i32* %7641, align 4, !dbg !746
  br label %7740, !dbg !747

7684:                                             ; preds = %7681
  br i1 %7667, label %7685, label %7687, !dbg !748

7685:                                             ; preds = %7684
  %7686 = add i64 %7678, 4, !dbg !749
  store i64 %7686, i64* %7405, align 4, !dbg !749
  store i32 4, i32* %7641, align 4, !dbg !750
  br label %7740, !dbg !751

7687:                                             ; preds = %7684
  %7688 = add i64 %7678, 8, !dbg !752
  store i64 %7688, i64* %7405, align 4, !dbg !752
  %7689 = and i16 %7634, 32, !dbg !753
  %7690 = icmp ne i16 %7689, 0, !dbg !753
  br i1 %7690, label %7691, label %7694, !dbg !754

7691:                                             ; preds = %7687
  %7692 = and i16 %7634, -33, !dbg !755
  %7693 = or i16 %7692, 8, !dbg !756
  store i16 %7693, i16* %7633, align 2, !dbg !757
  store i32 7, i32* %7641, align 4, !dbg !758
  br label %7740, !dbg !759

7694:                                             ; preds = %7687
  store i32 6, i32* %7641, align 4, !dbg !760
  br label %7740, !dbg !761

7695:                                             ; preds = %7650
  br i1 %7640, label %7696, label %7701, !dbg !762

7696:                                             ; preds = %7695
  %7697 = load i32, i32* %7406, align 4, !dbg !763
  %7698 = add i32 %7697, 1, !dbg !763
  store i32 %7698, i32* %7406, align 4, !dbg !763
  %7699 = load i64, i64* %7405, align 4, !dbg !764
  %7700 = add i64 %7699, 8, !dbg !764
  store i64 %7700, i64* %7405, align 4, !dbg !764
  store i32 7, i32* %7641, align 4, !dbg !765
  br label %7740, !dbg !766

7701:                                             ; preds = %7695
  %7702 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 0, i32 4, !dbg !767
  %7703 = load i32, i32* %7702, align 4, !dbg !768
  %7704 = alloca i32, align 8, !dbg !769
  store i32 %7703, i32* %7704, align 4, !dbg !770
  %7705 = alloca i32, align 8, !dbg !771
  %7706 = add i32 %7703, %7703, !dbg !772
  %7707 = add i32 %7706, 12, !dbg !773
  %7708 = and i16 %7634, 2, !dbg !774
  %7709 = icmp ne i16 %7708, 0, !dbg !775
  %7710 = zext i1 %7709 to i32, !dbg !776
  %7711 = add i32 %7707, %7710, !dbg !777
  store i32 %7711, i32* %7705, align 4, !dbg !778
  %7712 = and i16 %7634, 16384, !dbg !779
  %7713 = icmp ne i16 %7712, 0, !dbg !780
  br i1 %7713, label %7714, label %7730, !dbg !781

7714:                                             ; preds = %7701
  %7715 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 0, i32 0, !dbg !782
  %7716 = bitcast %union.MemValue* %7715 to i32*, !dbg !783
  %7717 = load i32, i32* %7716, align 4, !dbg !784
  %7718 = add i32 %7717, %7717, !dbg !785
  %7719 = add i32 %7711, %7718, !dbg !786
  store i32 %7719, i32* %7705, align 4, !dbg !786
  %7720 = load i64, i64* %7405, align 4, !dbg !787
  %7721 = icmp ne i64 %7720, 0, !dbg !787
  br i1 %7721, label %7726, label %7722, !dbg !788

7722:                                             ; preds = %7714
  %7723 = zext i32 %7717 to i64, !dbg !789
  %7724 = load i64, i64* %7407, align 4, !dbg !790
  %7725 = add i64 %7724, %7723, !dbg !790
  store i64 %7725, i64* %7407, align 4, !dbg !790
  br label %7730, !dbg !791

7726:                                             ; preds = %7714
  %7727 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7632), !dbg !792
  %7728 = load i32, i32* %7704, align 4, !dbg !793
  %7729 = add i32 %7728, %7717, !dbg !793
  store i32 %7729, i32* %7704, align 4, !dbg !793
  br label %7730, !dbg !794

7730:                                             ; preds = %7722, %7726, %7701
  %7731 = load i32, i32* %7704, align 4, !dbg !795
  %7732 = zext i32 %7731 to i64, !dbg !796
  %7733 = load i64, i64* %7405, align 4, !dbg !797
  %7734 = add i64 %7733, %7732, !dbg !797
  store i64 %7734, i64* %7405, align 4, !dbg !797
  %7735 = load i32, i32* %7705, align 4, !dbg !798
  %7736 = zext i32 %7735 to i64, !dbg !799
  %7737 = call i32 @sqlite3VarintLen(i64 %7736), !dbg !800
  %7738 = load i32, i32* %7406, align 4, !dbg !801
  %7739 = add i32 %7738, %7737, !dbg !801
  store i32 %7739, i32* %7406, align 4, !dbg !801
  store i32 %7735, i32* %7641, align 4, !dbg !802
  br label %7740, !dbg !803

7740:                                             ; preds = %7679, %7682, %7685, %7691, %7694, %7674, %7671, %7730, %7696, %7647
  %7741 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7632, i32 -1, !dbg !804
  %7742 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 0, i32 1, !dbg !695
  %7743 = load i16, i16* %7742, align 2, !dbg !696
  %7744 = and i16 %7743, 1, !dbg !697
  %7745 = icmp ne i16 %7744, 0, !dbg !697
  %7746 = and i16 %7743, 36, !dbg !698
  %7747 = icmp ne i16 %7746, 0, !dbg !698
  %7748 = and i16 %7743, 8, !dbg !699
  %7749 = icmp ne i16 %7748, 0, !dbg !699
  %7750 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 0, i32 8, !dbg !700
  br i1 %7745, label %7751, label %7759, !dbg !701

7751:                                             ; preds = %7740
  %7752 = and i16 %7743, 16384, !dbg !702
  %7753 = icmp ne i16 %7752, 0, !dbg !702
  br i1 %7753, label %7754, label %7755, !dbg !703

7754:                                             ; preds = %7751
  store i32 10, i32* %7750, align 4, !dbg !704
  br label %7756, !dbg !705

7755:                                             ; preds = %7751
  store i32 0, i32* %7750, align 4, !dbg !706
  br label %7756, !dbg !707

7756:                                             ; preds = %7755, %7754
  %7757 = load i32, i32* %7406, align 4, !dbg !708
  %7758 = add i32 %7757, 1, !dbg !708
  store i32 %7758, i32* %7406, align 4, !dbg !708
  br label %7849, !dbg !709

7759:                                             ; preds = %7740
  br i1 %7747, label %7760, label %7804, !dbg !710

7760:                                             ; preds = %7759
  %7761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 0, i32 0, !dbg !711
  %7762 = bitcast %union.MemValue* %7761 to i64*, !dbg !712
  %7763 = load i64, i64* %7762, align 4, !dbg !713
  %7764 = alloca i64, align 8, !dbg !714
  %7765 = icmp slt i64 %7763, 0, !dbg !715
  br i1 %7765, label %7766, label %7768, !dbg !716

7766:                                             ; preds = %7760
  %7767 = xor i64 %7763, -1, !dbg !717
  store i64 %7767, i64* %7764, align 4, !dbg !718
  br label %7769, !dbg !719

7768:                                             ; preds = %7760
  store i64 %7763, i64* %7764, align 4, !dbg !720
  br label %7769, !dbg !721

7769:                                             ; preds = %7768, %7766
  %7770 = load i32, i32* %7406, align 4, !dbg !722
  %7771 = add i32 %7770, 1, !dbg !722
  store i32 %7771, i32* %7406, align 4, !dbg !722
  %7772 = load i64, i64* %7764, align 4, !dbg !723
  %7773 = icmp slt i64 %7772, 127, !dbg !724
  %7774 = icmp slt i64 %7772, 32767, !dbg !725
  %7775 = icmp slt i64 %7772, 8388607, !dbg !726
  %7776 = icmp slt i64 %7772, 2147483647, !dbg !727
  br i1 %7773, label %7777, label %7786, !dbg !728

7777:                                             ; preds = %7769
  %7778 = and i64 %7763, 1, !dbg !729
  %7779 = icmp eq i64 %7778, %7763, !dbg !730
  br i1 %7779, label %7780, label %7783, !dbg !731

7780:                                             ; preds = %7777
  %7781 = trunc i64 %7772 to i32, !dbg !732
  %7782 = add i32 %7781, 8, !dbg !733
  store i32 %7782, i32* %7750, align 4, !dbg !734
  br label %7849, !dbg !735

7783:                                             ; preds = %7777
  %7784 = load i64, i64* %7405, align 4, !dbg !736
  %7785 = add i64 %7784, 1, !dbg !736
  store i64 %7785, i64* %7405, align 4, !dbg !736
  store i32 1, i32* %7750, align 4, !dbg !737
  br label %7849, !dbg !738

7786:                                             ; preds = %7769
  %7787 = load i64, i64* %7405, align 4, !dbg !739
  br i1 %7774, label %7788, label %7790, !dbg !740

7788:                                             ; preds = %7786
  %7789 = add i64 %7787, 2, !dbg !741
  store i64 %7789, i64* %7405, align 4, !dbg !741
  store i32 2, i32* %7750, align 4, !dbg !742
  br label %7849, !dbg !743

7790:                                             ; preds = %7786
  br i1 %7775, label %7791, label %7793, !dbg !744

7791:                                             ; preds = %7790
  %7792 = add i64 %7787, 3, !dbg !745
  store i64 %7792, i64* %7405, align 4, !dbg !745
  store i32 3, i32* %7750, align 4, !dbg !746
  br label %7849, !dbg !747

7793:                                             ; preds = %7790
  br i1 %7776, label %7794, label %7796, !dbg !748

7794:                                             ; preds = %7793
  %7795 = add i64 %7787, 4, !dbg !749
  store i64 %7795, i64* %7405, align 4, !dbg !749
  store i32 4, i32* %7750, align 4, !dbg !750
  br label %7849, !dbg !751

7796:                                             ; preds = %7793
  %7797 = add i64 %7787, 8, !dbg !752
  store i64 %7797, i64* %7405, align 4, !dbg !752
  %7798 = and i16 %7743, 32, !dbg !753
  %7799 = icmp ne i16 %7798, 0, !dbg !753
  br i1 %7799, label %7800, label %7803, !dbg !754

7800:                                             ; preds = %7796
  %7801 = and i16 %7743, -33, !dbg !755
  %7802 = or i16 %7801, 8, !dbg !756
  store i16 %7802, i16* %7742, align 2, !dbg !757
  store i32 7, i32* %7750, align 4, !dbg !758
  br label %7849, !dbg !759

7803:                                             ; preds = %7796
  store i32 6, i32* %7750, align 4, !dbg !760
  br label %7849, !dbg !761

7804:                                             ; preds = %7759
  br i1 %7749, label %7805, label %7810, !dbg !762

7805:                                             ; preds = %7804
  %7806 = load i32, i32* %7406, align 4, !dbg !763
  %7807 = add i32 %7806, 1, !dbg !763
  store i32 %7807, i32* %7406, align 4, !dbg !763
  %7808 = load i64, i64* %7405, align 4, !dbg !764
  %7809 = add i64 %7808, 8, !dbg !764
  store i64 %7809, i64* %7405, align 4, !dbg !764
  store i32 7, i32* %7750, align 4, !dbg !765
  br label %7849, !dbg !766

7810:                                             ; preds = %7804
  %7811 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 0, i32 4, !dbg !767
  %7812 = load i32, i32* %7811, align 4, !dbg !768
  %7813 = alloca i32, align 8, !dbg !769
  store i32 %7812, i32* %7813, align 4, !dbg !770
  %7814 = alloca i32, align 8, !dbg !771
  %7815 = add i32 %7812, %7812, !dbg !772
  %7816 = add i32 %7815, 12, !dbg !773
  %7817 = and i16 %7743, 2, !dbg !774
  %7818 = icmp ne i16 %7817, 0, !dbg !775
  %7819 = zext i1 %7818 to i32, !dbg !776
  %7820 = add i32 %7816, %7819, !dbg !777
  store i32 %7820, i32* %7814, align 4, !dbg !778
  %7821 = and i16 %7743, 16384, !dbg !779
  %7822 = icmp ne i16 %7821, 0, !dbg !780
  br i1 %7822, label %7823, label %7839, !dbg !781

7823:                                             ; preds = %7810
  %7824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 0, i32 0, !dbg !782
  %7825 = bitcast %union.MemValue* %7824 to i32*, !dbg !783
  %7826 = load i32, i32* %7825, align 4, !dbg !784
  %7827 = add i32 %7826, %7826, !dbg !785
  %7828 = add i32 %7820, %7827, !dbg !786
  store i32 %7828, i32* %7814, align 4, !dbg !786
  %7829 = load i64, i64* %7405, align 4, !dbg !787
  %7830 = icmp ne i64 %7829, 0, !dbg !787
  br i1 %7830, label %7835, label %7831, !dbg !788

7831:                                             ; preds = %7823
  %7832 = zext i32 %7826 to i64, !dbg !789
  %7833 = load i64, i64* %7407, align 4, !dbg !790
  %7834 = add i64 %7833, %7832, !dbg !790
  store i64 %7834, i64* %7407, align 4, !dbg !790
  br label %7839, !dbg !791

7835:                                             ; preds = %7823
  %7836 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7741), !dbg !792
  %7837 = load i32, i32* %7813, align 4, !dbg !793
  %7838 = add i32 %7837, %7826, !dbg !793
  store i32 %7838, i32* %7813, align 4, !dbg !793
  br label %7839, !dbg !794

7839:                                             ; preds = %7831, %7835, %7810
  %7840 = load i32, i32* %7813, align 4, !dbg !795
  %7841 = zext i32 %7840 to i64, !dbg !796
  %7842 = load i64, i64* %7405, align 4, !dbg !797
  %7843 = add i64 %7842, %7841, !dbg !797
  store i64 %7843, i64* %7405, align 4, !dbg !797
  %7844 = load i32, i32* %7814, align 4, !dbg !798
  %7845 = zext i32 %7844 to i64, !dbg !799
  %7846 = call i32 @sqlite3VarintLen(i64 %7845), !dbg !800
  %7847 = load i32, i32* %7406, align 4, !dbg !801
  %7848 = add i32 %7847, %7846, !dbg !801
  store i32 %7848, i32* %7406, align 4, !dbg !801
  store i32 %7844, i32* %7750, align 4, !dbg !802
  br label %7849, !dbg !803

7849:                                             ; preds = %7788, %7791, %7794, %7800, %7803, %7783, %7780, %7839, %7805, %7756
  %7850 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7741, i32 -1, !dbg !804
  %7851 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7850, i32 0, i32 1, !dbg !695
  %7852 = load i16, i16* %7851, align 2, !dbg !696
  %7853 = and i16 %7852, 1, !dbg !697
  %7854 = icmp ne i16 %7853, 0, !dbg !697
  %7855 = and i16 %7852, 36, !dbg !698
  %7856 = icmp ne i16 %7855, 0, !dbg !698
  %7857 = and i16 %7852, 8, !dbg !699
  %7858 = icmp ne i16 %7857, 0, !dbg !699
  %7859 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7850, i32 0, i32 8, !dbg !700
  br i1 %7854, label %7860, label %7868, !dbg !701

7860:                                             ; preds = %7849
  %7861 = and i16 %7852, 16384, !dbg !702
  %7862 = icmp ne i16 %7861, 0, !dbg !702
  br i1 %7862, label %7863, label %7864, !dbg !703

7863:                                             ; preds = %7860
  store i32 10, i32* %7859, align 4, !dbg !704
  br label %7865, !dbg !705

7864:                                             ; preds = %7860
  store i32 0, i32* %7859, align 4, !dbg !706
  br label %7865, !dbg !707

7865:                                             ; preds = %7864, %7863
  %7866 = load i32, i32* %7406, align 4, !dbg !708
  %7867 = add i32 %7866, 1, !dbg !708
  store i32 %7867, i32* %7406, align 4, !dbg !708
  br label %7958, !dbg !709

7868:                                             ; preds = %7849
  br i1 %7856, label %7869, label %7913, !dbg !710

7869:                                             ; preds = %7868
  %7870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7850, i32 0, i32 0, !dbg !711
  %7871 = bitcast %union.MemValue* %7870 to i64*, !dbg !712
  %7872 = load i64, i64* %7871, align 4, !dbg !713
  %7873 = alloca i64, align 8, !dbg !714
  %7874 = icmp slt i64 %7872, 0, !dbg !715
  br i1 %7874, label %7875, label %7877, !dbg !716

7875:                                             ; preds = %7869
  %7876 = xor i64 %7872, -1, !dbg !717
  store i64 %7876, i64* %7873, align 4, !dbg !718
  br label %7878, !dbg !719

7877:                                             ; preds = %7869
  store i64 %7872, i64* %7873, align 4, !dbg !720
  br label %7878, !dbg !721

7878:                                             ; preds = %7877, %7875
  %7879 = load i32, i32* %7406, align 4, !dbg !722
  %7880 = add i32 %7879, 1, !dbg !722
  store i32 %7880, i32* %7406, align 4, !dbg !722
  %7881 = load i64, i64* %7873, align 4, !dbg !723
  %7882 = icmp slt i64 %7881, 127, !dbg !724
  %7883 = icmp slt i64 %7881, 32767, !dbg !725
  %7884 = icmp slt i64 %7881, 8388607, !dbg !726
  %7885 = icmp slt i64 %7881, 2147483647, !dbg !727
  br i1 %7882, label %7886, label %7895, !dbg !728

7886:                                             ; preds = %7878
  %7887 = and i64 %7872, 1, !dbg !729
  %7888 = icmp eq i64 %7887, %7872, !dbg !730
  br i1 %7888, label %7889, label %7892, !dbg !731

7889:                                             ; preds = %7886
  %7890 = trunc i64 %7881 to i32, !dbg !732
  %7891 = add i32 %7890, 8, !dbg !733
  store i32 %7891, i32* %7859, align 4, !dbg !734
  br label %7958, !dbg !735

7892:                                             ; preds = %7886
  %7893 = load i64, i64* %7405, align 4, !dbg !736
  %7894 = add i64 %7893, 1, !dbg !736
  store i64 %7894, i64* %7405, align 4, !dbg !736
  store i32 1, i32* %7859, align 4, !dbg !737
  br label %7958, !dbg !738

7895:                                             ; preds = %7878
  %7896 = load i64, i64* %7405, align 4, !dbg !739
  br i1 %7883, label %7897, label %7899, !dbg !740

7897:                                             ; preds = %7895
  %7898 = add i64 %7896, 2, !dbg !741
  store i64 %7898, i64* %7405, align 4, !dbg !741
  store i32 2, i32* %7859, align 4, !dbg !742
  br label %7958, !dbg !743

7899:                                             ; preds = %7895
  br i1 %7884, label %7900, label %7902, !dbg !744

7900:                                             ; preds = %7899
  %7901 = add i64 %7896, 3, !dbg !745
  store i64 %7901, i64* %7405, align 4, !dbg !745
  store i32 3, i32* %7859, align 4, !dbg !746
  br label %7958, !dbg !747

7902:                                             ; preds = %7899
  br i1 %7885, label %7903, label %7905, !dbg !748

7903:                                             ; preds = %7902
  %7904 = add i64 %7896, 4, !dbg !749
  store i64 %7904, i64* %7405, align 4, !dbg !749
  store i32 4, i32* %7859, align 4, !dbg !750
  br label %7958, !dbg !751

7905:                                             ; preds = %7902
  %7906 = add i64 %7896, 8, !dbg !752
  store i64 %7906, i64* %7405, align 4, !dbg !752
  %7907 = and i16 %7852, 32, !dbg !753
  %7908 = icmp ne i16 %7907, 0, !dbg !753
  br i1 %7908, label %7909, label %7912, !dbg !754

7909:                                             ; preds = %7905
  %7910 = and i16 %7852, -33, !dbg !755
  %7911 = or i16 %7910, 8, !dbg !756
  store i16 %7911, i16* %7851, align 2, !dbg !757
  store i32 7, i32* %7859, align 4, !dbg !758
  br label %7958, !dbg !759

7912:                                             ; preds = %7905
  store i32 6, i32* %7859, align 4, !dbg !760
  br label %7958, !dbg !761

7913:                                             ; preds = %7868
  br i1 %7858, label %7914, label %7919, !dbg !762

7914:                                             ; preds = %7913
  %7915 = load i32, i32* %7406, align 4, !dbg !763
  %7916 = add i32 %7915, 1, !dbg !763
  store i32 %7916, i32* %7406, align 4, !dbg !763
  %7917 = load i64, i64* %7405, align 4, !dbg !764
  %7918 = add i64 %7917, 8, !dbg !764
  store i64 %7918, i64* %7405, align 4, !dbg !764
  store i32 7, i32* %7859, align 4, !dbg !765
  br label %7958, !dbg !766

7919:                                             ; preds = %7913
  %7920 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7850, i32 0, i32 4, !dbg !767
  %7921 = load i32, i32* %7920, align 4, !dbg !768
  %7922 = alloca i32, align 8, !dbg !769
  store i32 %7921, i32* %7922, align 4, !dbg !770
  %7923 = alloca i32, align 8, !dbg !771
  %7924 = add i32 %7921, %7921, !dbg !772
  %7925 = add i32 %7924, 12, !dbg !773
  %7926 = and i16 %7852, 2, !dbg !774
  %7927 = icmp ne i16 %7926, 0, !dbg !775
  %7928 = zext i1 %7927 to i32, !dbg !776
  %7929 = add i32 %7925, %7928, !dbg !777
  store i32 %7929, i32* %7923, align 4, !dbg !778
  %7930 = and i16 %7852, 16384, !dbg !779
  %7931 = icmp ne i16 %7930, 0, !dbg !780
  br i1 %7931, label %7932, label %7948, !dbg !781

7932:                                             ; preds = %7919
  %7933 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7850, i32 0, i32 0, !dbg !782
  %7934 = bitcast %union.MemValue* %7933 to i32*, !dbg !783
  %7935 = load i32, i32* %7934, align 4, !dbg !784
  %7936 = add i32 %7935, %7935, !dbg !785
  %7937 = add i32 %7929, %7936, !dbg !786
  store i32 %7937, i32* %7923, align 4, !dbg !786
  %7938 = load i64, i64* %7405, align 4, !dbg !787
  %7939 = icmp ne i64 %7938, 0, !dbg !787
  br i1 %7939, label %7944, label %7940, !dbg !788

7940:                                             ; preds = %7932
  %7941 = zext i32 %7935 to i64, !dbg !789
  %7942 = load i64, i64* %7407, align 4, !dbg !790
  %7943 = add i64 %7942, %7941, !dbg !790
  store i64 %7943, i64* %7407, align 4, !dbg !790
  br label %7948, !dbg !791

7944:                                             ; preds = %7932
  %7945 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7850), !dbg !792
  %7946 = load i32, i32* %7922, align 4, !dbg !793
  %7947 = add i32 %7946, %7935, !dbg !793
  store i32 %7947, i32* %7922, align 4, !dbg !793
  br label %7948, !dbg !794

7948:                                             ; preds = %7940, %7944, %7919
  %7949 = load i32, i32* %7922, align 4, !dbg !795
  %7950 = zext i32 %7949 to i64, !dbg !796
  %7951 = load i64, i64* %7405, align 4, !dbg !797
  %7952 = add i64 %7951, %7950, !dbg !797
  store i64 %7952, i64* %7405, align 4, !dbg !797
  %7953 = load i32, i32* %7923, align 4, !dbg !798
  %7954 = zext i32 %7953 to i64, !dbg !799
  %7955 = call i32 @sqlite3VarintLen(i64 %7954), !dbg !800
  %7956 = load i32, i32* %7406, align 4, !dbg !801
  %7957 = add i32 %7956, %7955, !dbg !801
  store i32 %7957, i32* %7406, align 4, !dbg !801
  store i32 %7953, i32* %7859, align 4, !dbg !802
  br label %7958, !dbg !803

7958:                                             ; preds = %7897, %7900, %7903, %7909, %7912, %7892, %7889, %7948, %7914, %7865
  %7959 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 5, !dbg !805
  %7960 = load i32, i32* %7406, align 4, !dbg !806
  %7961 = zext i32 %7960 to i64, !dbg !807
  %7962 = icmp slt i32 %7960, 126, !dbg !808
  br i1 %7962, label %7963, label %7965, !dbg !809

7963:                                             ; preds = %7958
  %7964 = add i32 %7960, 1, !dbg !810
  store i32 %7964, i32* %7406, align 4, !dbg !810
  br label %7974, !dbg !811

7965:                                             ; preds = %7958
  %7966 = call i32 @sqlite3VarintLen(i64 %7961), !dbg !812
  %7967 = load i32, i32* %7406, align 4, !dbg !813
  %7968 = add i32 %7967, %7966, !dbg !813
  store i32 %7968, i32* %7406, align 4, !dbg !813
  %7969 = call i32 @sqlite3VarintLen(i64 %7961), !dbg !814
  %7970 = icmp slt i32 %7966, %7969, !dbg !815
  br i1 %7970, label %7971, label %7974, !dbg !816

7971:                                             ; preds = %7965
  %7972 = load i32, i32* %7406, align 4, !dbg !817
  %7973 = add i32 %7972, 1, !dbg !817
  store i32 %7973, i32* %7406, align 4, !dbg !817
  br label %7974, !dbg !818

7974:                                             ; preds = %7971, %7965, %7963
  %7975 = load i32, i32* %7406, align 4, !dbg !819
  %7976 = zext i32 %7975 to i64, !dbg !819
  %7977 = load i64, i64* %7405, align 4, !dbg !820
  %7978 = add i64 %7976, %7977, !dbg !820
  %7979 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 7, !dbg !821
  %7980 = load i32, i32* %7979, align 4, !dbg !822
  %7981 = zext i32 %7980 to i64, !dbg !823
  %7982 = load i64, i64* %7407, align 4, !dbg !824
  %7983 = add i64 %7978, %7982, !dbg !825
  %7984 = icmp sle i64 %7983, %7981, !dbg !826
  br i1 %7984, label %7985, label %7988, !dbg !827

7985:                                             ; preds = %7974
  %7986 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 6, !dbg !828
  %7987 = load i8*, i8** %7986, align 8, !dbg !829
  store i8* %7987, i8** %7959, align 8, !dbg !830
  br label %7991, !dbg !831

7988:                                             ; preds = %7974
  %7989 = trunc i64 %7978 to i32, !dbg !832
  %7990 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %7414, i32 %7989), !dbg !833
  br label %7991, !dbg !834

7991:                                             ; preds = %7988, %7985
  %7992 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 4, !dbg !835
  %7993 = trunc i64 %7978 to i32, !dbg !836
  store i32 %7993, i32* %7992, align 4, !dbg !837
  %7994 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 1, !dbg !838
  store i16 16, i16* %7994, align 2, !dbg !839
  %7995 = load i64, i64* %7407, align 4, !dbg !840
  %7996 = icmp ne i64 %7995, 0, !dbg !841
  br i1 %7996, label %7997, label %8003, !dbg !842

7997:                                             ; preds = %7991
  %7998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7414, i32 0, i32 0, i32 0, !dbg !843
  %7999 = bitcast double* %7998 to i32*, !dbg !844
  %8000 = trunc i64 %7995 to i32, !dbg !845
  store i32 %8000, i32* %7999, align 4, !dbg !846
  %8001 = load i16, i16* %7994, align 2, !dbg !847
  %8002 = or i16 %8001, 16384, !dbg !848
  store i16 %8002, i16* %7994, align 2, !dbg !849
  br label %8003, !dbg !850

8003:                                             ; preds = %7997, %7991
  %8004 = alloca i8*, align 8, !dbg !851
  %8005 = load i8*, i8** %7959, align 8, !dbg !852
  store i8* %8005, i8** %8004, align 8, !dbg !853
  %8006 = load i32, i32* %7406, align 4, !dbg !854
  %8007 = zext i32 %8006 to i64, !dbg !855
  %8008 = getelementptr i8, i8* %8005, i32 %8006, !dbg !856
  store i8* %8008, i8** %7408, align 8, !dbg !857
  %8009 = call i32 @sqlite3PutVarint(i8* %8005, i64 %8007), !dbg !858
  %8010 = getelementptr i8, i8* %8005, i32 %8009, !dbg !859
  store i8* %8010, i8** %8004, align 8, !dbg !860
  %8011 = load i8*, i8** %7408, align 8, !dbg !861
  %8012 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7412, i32 0, i32 8, !dbg !862
  %8013 = load i32, i32* %8012, align 4, !dbg !863
  %8014 = zext i32 %8013 to i64, !dbg !864
  %8015 = call i32 @sqlite3PutVarint(i8* %8010, i64 %8014), !dbg !865
  %8016 = getelementptr i8, i8* %8010, i32 %8015, !dbg !866
  store i8* %8016, i8** %8004, align 8, !dbg !867
  %8017 = call i32 @sqlite3VdbeSerialPut(i8* %8011, %struct.sqlite3_value* %7412, i32 %8013), !dbg !868
  %8018 = getelementptr i8, i8* %8011, i32 %8017, !dbg !869
  %8019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7412, i32 1, !dbg !870
  %8020 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8019, i32 0, i32 8, !dbg !862
  %8021 = load i32, i32* %8020, align 4, !dbg !863
  %8022 = zext i32 %8021 to i64, !dbg !864
  %8023 = call i32 @sqlite3PutVarint(i8* %8016, i64 %8022), !dbg !865
  %8024 = getelementptr i8, i8* %8016, i32 %8023, !dbg !866
  store i8* %8024, i8** %8004, align 8, !dbg !867
  %8025 = call i32 @sqlite3VdbeSerialPut(i8* %8018, %struct.sqlite3_value* %8019, i32 %8021), !dbg !868
  %8026 = getelementptr i8, i8* %8018, i32 %8025, !dbg !869
  %8027 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8019, i32 1, !dbg !870
  %8028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8027, i32 0, i32 8, !dbg !862
  %8029 = load i32, i32* %8028, align 4, !dbg !863
  %8030 = zext i32 %8029 to i64, !dbg !864
  %8031 = call i32 @sqlite3PutVarint(i8* %8024, i64 %8030), !dbg !865
  %8032 = getelementptr i8, i8* %8024, i32 %8031, !dbg !866
  store i8* %8032, i8** %8004, align 8, !dbg !867
  %8033 = call i32 @sqlite3VdbeSerialPut(i8* %8026, %struct.sqlite3_value* %8027, i32 %8029), !dbg !868
  %8034 = getelementptr i8, i8* %8026, i32 %8033, !dbg !869
  %8035 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8027, i32 1, !dbg !870
  %8036 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8035, i32 0, i32 8, !dbg !862
  %8037 = load i32, i32* %8036, align 4, !dbg !863
  %8038 = zext i32 %8037 to i64, !dbg !864
  %8039 = call i32 @sqlite3PutVarint(i8* %8032, i64 %8038), !dbg !865
  %8040 = getelementptr i8, i8* %8032, i32 %8039, !dbg !866
  store i8* %8040, i8** %8004, align 8, !dbg !867
  %8041 = call i32 @sqlite3VdbeSerialPut(i8* %8034, %struct.sqlite3_value* %8035, i32 %8037), !dbg !868
  %8042 = getelementptr i8, i8* %8034, i32 %8041, !dbg !869
  %8043 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8035, i32 1, !dbg !870
  %8044 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8043, i32 0, i32 8, !dbg !862
  %8045 = load i32, i32* %8044, align 4, !dbg !863
  %8046 = zext i32 %8045 to i64, !dbg !864
  %8047 = call i32 @sqlite3PutVarint(i8* %8040, i64 %8046), !dbg !865
  %8048 = getelementptr i8, i8* %8040, i32 %8047, !dbg !866
  store i8* %8048, i8** %8004, align 8, !dbg !867
  %8049 = call i32 @sqlite3VdbeSerialPut(i8* %8042, %struct.sqlite3_value* %8043, i32 %8045), !dbg !868
  call void @llvm.stackrestore(i8* %7404), !dbg !871
  br label %8050, !dbg !74

8050:                                             ; preds = %8003, %14
  %8051 = call i8* @llvm.stacksave(), !dbg !1181
  %8052 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1184
  %8053 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8052, align 8, !dbg !1185
  %8054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !1186
  %8055 = call i8* @llvm.stacksave(), !dbg !1187
  %8056 = alloca i32, align 8, !dbg !1188
  store i32 0, i32* %8056, align 4, !dbg !1187
  %8057 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8054, i32 0, i32 1, !dbg !1187
  %8058 = load i16, i16* %8057, align 2, !dbg !1187
  %8059 = and i16 %8058, 16384, !dbg !1187
  %8060 = icmp ne i16 %8059, 0, !dbg !1187
  br i1 %8060, label %8061, label %8063, !dbg !1187

8061:                                             ; preds = %8050
  %8062 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %8054), !dbg !1187
  store i32 %8062, i32* %8056, align 4, !dbg !1187
  br label %8063, !dbg !1188

8063:                                             ; preds = %8061, %8050
  call void @llvm.stackrestore(i8* %8055), !dbg !1187
  %8064 = load i32, i32* %8056, align 4, !dbg !1187
  %8065 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %8053, %struct.sqlite3_value* %8054), !dbg !1189
  call void @llvm.stackrestore(i8* %8051), !dbg !1190
  br label %8066, !dbg !74

8066:                                             ; preds = %4880, %4786, %8063, %6102, %6065, %5790, %5761, %5491, %5454, %5179, %5150, %4144, %4116, %14
  %8067 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !901
  %8068 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8067, align 8, !dbg !904
  %8069 = ptrtoint %struct.VdbeCursor* %8068 to i64, !dbg !905
  %8070 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8068, i32 0, i32 12, i32 0, !dbg !906
  %8071 = load %struct.BtCursor*, %struct.BtCursor** %8070, align 8, !dbg !907
  %8072 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %8071, i32 0), !dbg !908
  %8073 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8068, i32 0, i32 2, !dbg !909
  %8074 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8068, i32 0, i32 9, !dbg !910
  store i32 0, i32* %8074, align 4, !dbg !911
  %8075 = icmp eq i32 %8072, 0, !dbg !912
  br i1 %8075, label %8076, label %8077, !dbg !913

8076:                                             ; preds = %8066
  store i8 0, i8* %8073, align 1, !dbg !914
  br label %3830, !dbg !915

8077:                                             ; preds = %8066
  store i8 1, i8* %8073, align 1, !dbg !916
  br label %8078, !dbg !917

8078:                                             ; preds = %3764, %820, %783, %8077, %3830, %3824, %3702, %14
  %8079 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !901
  %8080 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8079, align 8, !dbg !904
  %8081 = ptrtoint %struct.VdbeCursor* %8080 to i64, !dbg !905
  %8082 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8080, i32 0, i32 12, i32 0, !dbg !906
  %8083 = load %struct.BtCursor*, %struct.BtCursor** %8082, align 8, !dbg !907
  %8084 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %8083, i32 0), !dbg !908
  %8085 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8080, i32 0, i32 2, !dbg !909
  %8086 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8080, i32 0, i32 9, !dbg !910
  store i32 0, i32* %8086, align 4, !dbg !911
  %8087 = icmp eq i32 %8084, 0, !dbg !912
  br i1 %8087, label %8088, label %8089, !dbg !913

8088:                                             ; preds = %8078
  store i8 0, i8* %8085, align 1, !dbg !914
  br label %199, !dbg !915

8089:                                             ; preds = %8078
  store i8 1, i8* %8085, align 1, !dbg !916
  br label %8090, !dbg !917

8090:                                             ; preds = %8089, %193, %14
  %8091 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 8, i32 5, i32 -1, i8 3), !dbg !1191
  %8092 = ptrtoint %struct.VdbeCursor* %8091 to i64, !dbg !1194
  %8093 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8091, i32 0, i32 2, !dbg !1195
  store i8 1, i8* %8093, align 1, !dbg !1196
  %8094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8091, i32 0, i32 10, !dbg !1197
  store i32 17, i32* %8094, align 4, !dbg !1198
  %8095 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8091, i32 0, i32 4, !dbg !1199
  store i8 1, i8* %8095, align 1, !dbg !1200
  %8096 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !1201
  %8097 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8091, i32 0, i32 12, i32 0, !dbg !1202
  store %struct.BtCursor* %8096, %struct.BtCursor** %8097, align 8, !dbg !1203
  br label %8098, !dbg !74

8098:                                             ; preds = %8090, %14
  %8099 = call i8* @llvm.stacksave(), !dbg !133
  %8100 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %8101 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %8100, i32 6, !dbg !137
  %8102 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8101, align 8, !dbg !138
  %8103 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %8103, align 4, !dbg !140
  %8104 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8102, i32 0, i32 0, !dbg !141
  %8105 = load i8, i8* %8104, align 1, !dbg !142
  %8106 = icmp eq i8 %8105, 1, !dbg !143
  %8107 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %8107, align 4, !dbg !145
  br i1 %8106, label %8108, label %8110, !dbg !146

8108:                                             ; preds = %8098
  %8109 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %8102, i32* %8103), !dbg !147
  store i32 %8109, i32* %8107, align 4, !dbg !148
  br label %8116, !dbg !149

8110:                                             ; preds = %8098
  %8111 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8102, i32 0, i32 12, i32 0, !dbg !150
  %8112 = load %struct.BtCursor*, %struct.BtCursor** %8111, align 8, !dbg !151
  %8113 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %8112, i32* %8103), !dbg !152
  store i32 %8113, i32* %8107, align 4, !dbg !153
  %8114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8102, i32 0, i32 3, !dbg !154
  store i8 0, i8* %8114, align 1, !dbg !155
  %8115 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8102, i32 0, i32 9, !dbg !156
  store i32 0, i32* %8115, align 4, !dbg !157
  br label %8116, !dbg !158

8116:                                             ; preds = %8110, %8108
  %8117 = load i32, i32* %8107, align 4, !dbg !159
  %8118 = load i32, i32* %8103, align 4, !dbg !160
  %8119 = trunc i32 %8118 to i8, !dbg !161
  %8120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8102, i32 0, i32 2, !dbg !162
  store i8 %8119, i8* %8120, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %8099), !dbg !164
  %8121 = icmp ne i32 %8118, 0, !dbg !165
  br i1 %8121, label %10713, label %8122, !dbg !166

8122:                                             ; preds = %10514, %8116, %14
  %8123 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !1204
  %8124 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !1207
  %8125 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %8124, i32 6, !dbg !1208
  %8126 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8125, align 8, !dbg !1209
  %8127 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %8126, %struct.sqlite3_value* %8123), !dbg !1210
  %8128 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %8124, i32 8, !dbg !1211
  %8129 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8128, align 8, !dbg !1212
  %8130 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8129, i32 0, i32 9, !dbg !1213
  store i32 0, i32* %8130, align 4, !dbg !1214
  br label %8131, !dbg !74

8131:                                             ; preds = %8122, %14
  %8132 = call i8* @llvm.stacksave(), !dbg !167
  %8133 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %8134 = load i8, i8* %8133, align 1, !dbg !171
  %8135 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %8135, align 4, !dbg !173
  %8136 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %8137 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %8138 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8136, align 8, !dbg !176
  store %struct.VdbeCursor* %8138, %struct.VdbeCursor** %8137, align 8, !dbg !177
  %8139 = alloca i8*, align 8, !dbg !178
  %8140 = alloca i32, align 4, !dbg !179
  %8141 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8137, i32* %8135), !dbg !180
  %8142 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8137, align 8, !dbg !181
  %8143 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !182
  %8144 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 16, !dbg !183
  %8145 = load i16, i16* %8144, align 2, !dbg !184
  %8146 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 19, !dbg !185
  %8147 = load i32*, i32** %8146, align 8, !dbg !186
  %8148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 0, !dbg !187
  %8149 = load i8, i8* %8148, align 1, !dbg !188
  %8150 = icmp ne i8 %8149, 3, !dbg !189
  %8151 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 2, !dbg !190
  %8152 = load i8, i8* %8151, align 1, !dbg !191
  %8153 = icmp ne i8 %8152, 0, !dbg !192
  %8154 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 14, !dbg !193
  %8155 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 21, !dbg !194
  %8156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 22, !dbg !195
  %8157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 20, !dbg !196
  %8158 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 17, !dbg !197
  %8159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 9, !dbg !198
  %8160 = load i32, i32* %8159, align 4, !dbg !199
  %8161 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %8162 = load i32, i32* %8161, align 4, !dbg !201
  %8163 = icmp ne i32 %8160, %8162, !dbg !202
  br i1 %8163, label %8164, label %8206, !dbg !203

8164:                                             ; preds = %8131
  br i1 %8153, label %8186, label %8181, !dbg !204

8165:                                             ; preds = %8181, %8188
  %8166 = load i32, i32* %8161, align 4, !dbg !205
  store i32 %8166, i32* %8159, align 4, !dbg !206
  %8167 = load i8*, i8** %8157, align 8, !dbg !207
  %8168 = load i8, i8* %8167, align 1, !dbg !208
  %8169 = icmp sgt i8 %8168, -1, !dbg !211
  br i1 %8169, label %8170, label %8172, !dbg !212

8170:                                             ; preds = %8165
  %8171 = zext i8 %8168 to i32, !dbg !213
  store i32 %8171, i32* %8147, align 4, !dbg !214
  store i32 1, i32* %8154, align 4, !dbg !215
  br label %8175, !dbg !216

8172:                                             ; preds = %8165
  %8173 = call i8 @sqlite3GetVarint32(i8* %8167, i32* %8147), !dbg !217
  %8174 = zext i8 %8173 to i32, !dbg !218
  store i32 %8174, i32* %8154, align 4, !dbg !219
  br label %8175, !dbg !220

8175:                                             ; preds = %8172, %8170
  store i16 0, i16* %8158, align 2, !dbg !221
  %8176 = load i32, i32* %8156, align 4, !dbg !222
  %8177 = load i32, i32* %8147, align 4, !dbg !223
  %8178 = icmp ult i32 %8176, %8177, !dbg !224
  br i1 %8178, label %8180, label %8179, !dbg !225

8179:                                             ; preds = %8175
  store i8* %8167, i8** %8139, align 8, !dbg !226
  br label %8297, !dbg !227

8180:                                             ; preds = %8175
  store i8* null, i8** %8157, align 8, !dbg !228
  store i32 0, i32* %8156, align 4, !dbg !229
  br label %8206, !dbg !230

8181:                                             ; preds = %8164
  %8182 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 12, i32 0, !dbg !231
  %8183 = load %struct.BtCursor*, %struct.BtCursor** %8182, align 8, !dbg !232
  %8184 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8183), !dbg !233
  store i32 %8184, i32* %8155, align 4, !dbg !234
  %8185 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8183, i32* %8156), !dbg !235
  store i8* %8185, i8** %8157, align 8, !dbg !236
  br label %8165, !dbg !237

8186:                                             ; preds = %8164
  %8187 = icmp eq i8 %8149, 3, !dbg !238
  br i1 %8187, label %8188, label %8199, !dbg !239

8188:                                             ; preds = %8186
  %8189 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 10, !dbg !240
  %8190 = load i32, i32* %8189, align 4, !dbg !241
  %8191 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8190, !dbg !242
  %8192 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8191, i32 0, i32 1, !dbg !243
  %8193 = load i16, i16* %8192, align 2, !dbg !244
  %8194 = and i16 %8193, 16, !dbg !245
  %8195 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8191, i32 0, i32 4, !dbg !246
  %8196 = load i32, i32* %8195, align 4, !dbg !247
  store i32 %8196, i32* %8155, align 4, !dbg !248
  store i32 %8196, i32* %8156, align 4, !dbg !249
  %8197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8191, i32 0, i32 5, !dbg !250
  %8198 = load i8*, i8** %8197, align 8, !dbg !251
  store i8* %8198, i8** %8157, align 8, !dbg !252
  br label %8165, !dbg !253

8199:                                             ; preds = %8186
  %8200 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 1, !dbg !254
  %8201 = load i16, i16* %8200, align 2, !dbg !254
  %8202 = and i16 %8201, 9216, !dbg !254
  %8203 = icmp ne i16 %8202, 0, !dbg !254
  br i1 %8203, label %8204, label %8205, !dbg !254

8204:                                             ; preds = %8199
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8143), !dbg !254
  br label %8385, !dbg !254

8205:                                             ; preds = %8199
  store i16 1, i16* %8200, align 2, !dbg !254
  br label %8385, !dbg !254

8206:                                             ; preds = %8180, %8131
  %8207 = load i16, i16* %8158, align 2, !dbg !255
  %8208 = icmp ule i16 %8207, 0, !dbg !256
  br i1 %8208, label %8289, label %8286, !dbg !257

8209:                                             ; preds = %8286, %8375
  %8210 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 1, !dbg !258
  %8211 = load i16, i16* %8210, align 2, !dbg !259
  %8212 = and i16 9216, %8211, !dbg !260
  %8213 = icmp eq i16 0, %8212, !dbg !261
  br i1 %8213, label %8214, label %8218, !dbg !262

8214:                                             ; preds = %8209
  %8215 = icmp ne i16 %8212, 0, !dbg !263
  br i1 %8215, label %8216, label %8217, !dbg !263

8216:                                             ; preds = %8214
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8143), !dbg !263
  br label %8218, !dbg !263

8217:                                             ; preds = %8214
  store i16 1, i16* %8210, align 2, !dbg !263
  br label %8218, !dbg !263

8218:                                             ; preds = %8216, %8217, %8209
  %8219 = load i32, i32* %8140, align 4, !dbg !264
  %8220 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 23, i32 0, !dbg !265
  %8221 = load i32, i32* %8220, align 4, !dbg !266
  %8222 = load i32, i32* %8156, align 4, !dbg !267
  %8223 = getelementptr i32, i32* %8147, i32 1, !dbg !268
  %8224 = load i32, i32* %8223, align 4, !dbg !269
  %8225 = icmp sge i32 %8222, %8224, !dbg !270
  br i1 %8225, label %8226, label %8265, !dbg !271

8226:                                             ; preds = %8218
  %8227 = load i8*, i8** %8157, align 8, !dbg !272
  %8228 = ptrtoint i8* %8227 to i64, !dbg !273
  %8229 = load i32, i32* %8147, align 4, !dbg !275
  %8230 = zext i32 %8229 to i64, !dbg !276
  %8231 = add i64 %8228, %8230, !dbg !277
  %8232 = inttoptr i64 %8231 to i8*, !dbg !278
  store i8* %8232, i8** %8139, align 8, !dbg !279
  %8233 = load i32, i32* %8140, align 4, !dbg !280
  %8234 = icmp ult i32 %8233, 12, !dbg !281
  br i1 %8234, label %8235, label %8237, !dbg !282

8235:                                             ; preds = %8226
  %8236 = call i32 @sqlite3VdbeSerialGet(i8* %8232, i32 %8233, %struct.sqlite3_value* %8143), !dbg !283
  br label %8385, !dbg !284

8237:                                             ; preds = %8226
  %8238 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %8238, align 2, !dbg !286
  %8239 = getelementptr i16, i16* %8238, i32 1, !dbg !287
  store i16 514, i16* %8239, align 2, !dbg !288
  %8240 = load i32, i32* %8140, align 4, !dbg !289
  %8241 = sub i32 %8240, 12, !dbg !290
  %8242 = lshr i32 %8241, 1, !dbg !291
  %8243 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 4, !dbg !292
  store i32 %8242, i32* %8243, align 4, !dbg !293
  %8244 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 2, !dbg !294
  store i8 %8134, i8* %8244, align 1, !dbg !295
  %8245 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 5, !dbg !296
  %8246 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 7, !dbg !297
  %8247 = load i32, i32* %8246, align 4, !dbg !298
  %8248 = add i32 %8242, 2, !dbg !299
  %8249 = icmp slt i32 %8247, %8248, !dbg !300
  br i1 %8249, label %8250, label %8252, !dbg !301

8250:                                             ; preds = %8237
  store i16 1, i16* %8210, align 2, !dbg !302
  %8251 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8143, i32 %8248, i32 0), !dbg !303
  br label %8255, !dbg !304

8252:                                             ; preds = %8237
  %8253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 6, !dbg !305
  %8254 = load i8*, i8** %8253, align 8, !dbg !306
  store i8* %8254, i8** %8245, align 8, !dbg !307
  br label %8255, !dbg !308

8255:                                             ; preds = %8252, %8250
  %8256 = zext i32 %8242 to i64, !dbg !309
  %8257 = load i8*, i8** %8245, align 8, !dbg !310
  %8258 = load i8*, i8** %8139, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8257, i8* %8258, i64 %8256, i1 false), !dbg !312
  %8259 = getelementptr i8, i8* %8257, i32 %8242, !dbg !313
  store i8 0, i8* %8259, align 1, !dbg !314
  %8260 = add i32 %8242, 1, !dbg !315
  %8261 = getelementptr i8, i8* %8257, i32 %8260, !dbg !316
  store i8 0, i8* %8261, align 1, !dbg !317
  %8262 = and i32 %8240, 1, !dbg !318
  %8263 = getelementptr i16, i16* %8238, i32 %8262, !dbg !319
  %8264 = load i16, i16* %8263, align 2, !dbg !320
  store i16 %8264, i16* %8210, align 2, !dbg !321
  br label %8385, !dbg !322

8265:                                             ; preds = %8218
  %8266 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 2, !dbg !323
  store i8 %8134, i8* %8266, align 1, !dbg !324
  %8267 = load i32, i32* %8140, align 4, !dbg !325
  %8268 = and i32 %8267, 1, !dbg !326
  %8269 = icmp eq i32 %8268, 0, !dbg !327
  %8270 = icmp sge i32 %8267, 12, !dbg !328
  %8271 = and i1 %8270, %8269, !dbg !329
  %8272 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8267), !dbg !330
  %8273 = icmp eq i32 %8272, 0, !dbg !331
  br i1 %8273, label %8284, label %8274, !dbg !332

8274:                                             ; preds = %8265
  %8275 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 12, i32 0, !dbg !333
  %8276 = load %struct.BtCursor*, %struct.BtCursor** %8275, align 8, !dbg !334
  %8277 = load i32, i32* %8147, align 4, !dbg !336
  %8278 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8276, i32 %8277, i32 %8272, %struct.sqlite3_value* %8143), !dbg !337
  %8279 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 5, !dbg !338
  %8280 = load i8*, i8** %8279, align 8, !dbg !339
  %8281 = call i32 @sqlite3VdbeSerialGet(i8* %8280, i32 %8267, %struct.sqlite3_value* %8143), !dbg !340
  %8282 = load i16, i16* %8210, align 2, !dbg !341
  %8283 = and i16 %8282, -4097, !dbg !342
  store i16 %8283, i16* %8210, align 2, !dbg !343
  br label %8385, !dbg !344

8284:                                             ; preds = %8265
  %8285 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8267, %struct.sqlite3_value* %8143), !dbg !345
  br label %8385, !dbg !346

8286:                                             ; preds = %8206
  %8287 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 23, i32 0, !dbg !347
  %8288 = load i32, i32* %8287, align 4, !dbg !348
  store i32 %8288, i32* %8140, align 4, !dbg !349
  br label %8209, !dbg !350

8289:                                             ; preds = %8206
  %8290 = load i32, i32* %8154, align 4, !dbg !351
  %8291 = load i32, i32* %8147, align 4, !dbg !352
  %8292 = icmp ult i32 %8290, %8291, !dbg !353
  br i1 %8292, label %8293, label %8374, !dbg !354

8293:                                             ; preds = %8289
  %8294 = load i8*, i8** %8157, align 8, !dbg !355
  %8295 = icmp eq i8* %8294, null, !dbg !356
  br i1 %8295, label %8297, label %8296, !dbg !357

8296:                                             ; preds = %8293
  store i8* %8294, i8** %8139, align 8, !dbg !358
  br label %8297, !dbg !359

8297:                                             ; preds = %8296, %8293, %8179
  %8298 = alloca i32, align 4, !dbg !360
  %8299 = load i16, i16* %8158, align 2, !dbg !361
  %8300 = zext i16 %8299 to i32, !dbg !362
  store i32 %8300, i32* %8298, align 4, !dbg !363
  %8301 = alloca i64, align 8, !dbg !364
  %8302 = getelementptr i32, i32* %8147, i32 %8300, !dbg !365
  %8303 = load i32, i32* %8302, align 4, !dbg !366
  %8304 = zext i32 %8303 to i64, !dbg !367
  store i64 %8304, i64* %8301, align 4, !dbg !368
  %8305 = load i8*, i8** %8139, align 8, !dbg !369
  %8306 = load i32, i32* %8154, align 4, !dbg !370
  %8307 = alloca i8*, align 8, !dbg !371
  %8308 = getelementptr i8, i8* %8305, i32 %8306, !dbg !372
  store i8* %8308, i8** %8307, align 8, !dbg !373
  %8309 = load i32, i32* %8147, align 4, !dbg !374
  %8310 = getelementptr i8, i8* %8305, i32 %8309, !dbg !375
  br label %8311, !dbg !376

8311:                                             ; preds = %8318, %8297
  %8312 = load i32, i32* %8298, align 4, !dbg !377
  %8313 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8142, i32 0, i32 23, i32 %8312, !dbg !378
  %8314 = load i8*, i8** %8307, align 8, !dbg !379
  %8315 = load i8, i8* %8314, align 1, !dbg !380
  %8316 = zext i8 %8315 to i32, !dbg !381
  store i32 %8316, i32* %8140, align 4, !dbg !382
  store i32 %8316, i32* %8313, align 4, !dbg !383
  %8317 = icmp sgt i8 %8315, -1, !dbg !384
  br i1 %8317, label %8341, label %8332, !dbg !385

8318:                                             ; preds = %8332, %8341
  %8319 = load i32, i32* %8298, align 4, !dbg !386
  %8320 = add i32 %8319, 1, !dbg !387
  store i32 %8320, i32* %8298, align 4, !dbg !388
  %8321 = load i64, i64* %8301, align 4, !dbg !389
  %8322 = and i64 4294967295, %8321, !dbg !390
  %8323 = trunc i64 %8322 to i32, !dbg !391
  %8324 = getelementptr i32, i32* %8147, i32 %8320, !dbg !392
  store i32 %8323, i32* %8324, align 4, !dbg !393
  %8325 = load i32, i32* %8298, align 4, !dbg !394
  %8326 = icmp sle i32 %8325, 0, !dbg !395
  %8327 = load i8*, i8** %8307, align 8, !dbg !396
  %8328 = ptrtoint i8* %8327 to i64, !dbg !397
  %8329 = ptrtoint i8* %8310 to i64, !dbg !398
  %8330 = icmp ult i64 %8328, %8329, !dbg !399
  %8331 = and i1 %8326, %8330, !dbg !400
  br i1 %8331, label %8311, label %8350, !dbg !401

8332:                                             ; preds = %8311
  %8333 = load i8*, i8** %8307, align 8, !dbg !402
  %8334 = call i8 @sqlite3GetVarint32(i8* %8333, i32* %8140), !dbg !403
  %8335 = getelementptr i8, i8* %8333, i8 %8334, !dbg !404
  store i8* %8335, i8** %8307, align 8, !dbg !405
  %8336 = load i32, i32* %8140, align 4, !dbg !406
  store i32 %8336, i32* %8313, align 4, !dbg !407
  %8337 = load i64, i64* %8301, align 4, !dbg !408
  %8338 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8336), !dbg !409
  %8339 = zext i32 %8338 to i64, !dbg !410
  %8340 = add i64 %8337, %8339, !dbg !411
  store i64 %8340, i64* %8301, align 4, !dbg !412
  br label %8318, !dbg !413

8341:                                             ; preds = %8311
  %8342 = getelementptr i8, i8* %8314, i32 1, !dbg !414
  store i8* %8342, i8** %8307, align 8, !dbg !415
  %8343 = load i32, i32* %8140, align 4, !dbg !416
  %8344 = trunc i32 %8343 to i8, !dbg !417
  %8345 = getelementptr i8, i8* %4, i8 %8344, !dbg !418
  %8346 = load i8, i8* %8345, align 1, !dbg !419
  %8347 = zext i8 %8346 to i64, !dbg !420
  %8348 = load i64, i64* %8301, align 4, !dbg !421
  %8349 = add i64 %8348, %8347, !dbg !422
  store i64 %8349, i64* %8301, align 4, !dbg !423
  br label %8318, !dbg !424

8350:                                             ; preds = %8318
  %8351 = load i64, i64* %8301, align 4, !dbg !425
  %8352 = load i32, i32* %8155, align 4, !dbg !426
  %8353 = zext i32 %8352 to i64, !dbg !427
  %8354 = icmp uge i64 %8328, %8329, !dbg !428
  %8355 = icmp ugt i64 %8328, %8329, !dbg !429
  %8356 = icmp ne i64 %8351, %8353, !dbg !430
  %8357 = icmp ugt i64 %8351, %8353, !dbg !431
  %8358 = or i1 %8355, %8356, !dbg !432
  %8359 = and i1 %8354, %8358, !dbg !433
  %8360 = or i1 %8359, %8357, !dbg !434
  br i1 %8360, label %8361, label %8365, !dbg !435

8361:                                             ; preds = %8350
  %8362 = load i32, i32* %8147, align 4, !dbg !436
  %8363 = icmp eq i32 %8362, 0, !dbg !437
  br i1 %8363, label %8364, label %8365, !dbg !438

8364:                                             ; preds = %8361
  store i32 0, i32* %8298, align 4, !dbg !439
  store i8* %8310, i8** %8307, align 8, !dbg !440
  br label %8365, !dbg !441

8365:                                             ; preds = %8364, %8361, %8350
  %8366 = load i32, i32* %8298, align 4, !dbg !442
  %8367 = trunc i32 %8366 to i16, !dbg !443
  store i16 %8367, i16* %8158, align 2, !dbg !444
  %8368 = load i8*, i8** %8307, align 8, !dbg !445
  %8369 = ptrtoint i8* %8368 to i64, !dbg !446
  %8370 = load i8*, i8** %8139, align 8, !dbg !447
  %8371 = ptrtoint i8* %8370 to i64, !dbg !448
  %8372 = sub i64 %8369, %8371, !dbg !449
  %8373 = trunc i64 %8372 to i32, !dbg !450
  store i32 %8373, i32* %8154, align 4, !dbg !451
  br label %8375, !dbg !452

8374:                                             ; preds = %8289
  store i32 0, i32* %8140, align 4, !dbg !453
  br label %8375, !dbg !454

8375:                                             ; preds = %8365, %8374
  %8376 = load i16, i16* %8158, align 2, !dbg !455
  %8377 = icmp sle i16 %8376, 0, !dbg !456
  br i1 %8377, label %8378, label %8209, !dbg !457

8378:                                             ; preds = %8375
  %8379 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8143, i32 0, i32 1, !dbg !458
  %8380 = load i16, i16* %8379, align 2, !dbg !458
  %8381 = and i16 %8380, 9216, !dbg !458
  %8382 = icmp ne i16 %8381, 0, !dbg !458
  br i1 %8382, label %8383, label %8384, !dbg !458

8383:                                             ; preds = %8378
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8143), !dbg !458
  br label %8385, !dbg !458

8384:                                             ; preds = %8378
  store i16 1, i16* %8379, align 2, !dbg !458
  br label %8385, !dbg !458

8385:                                             ; preds = %8383, %8384, %8255, %8235, %8274, %8284, %8204, %8205
  call void @llvm.stackrestore(i8* %8132), !dbg !459
  br label %8386, !dbg !74

8386:                                             ; preds = %8385, %14
  %8387 = call i8* @llvm.stacksave(), !dbg !167
  %8388 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %8389 = load i8, i8* %8388, align 1, !dbg !171
  %8390 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %8390, align 4, !dbg !173
  %8391 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %8392 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %8393 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8391, align 8, !dbg !176
  store %struct.VdbeCursor* %8393, %struct.VdbeCursor** %8392, align 8, !dbg !177
  %8394 = alloca i8*, align 8, !dbg !178
  %8395 = alloca i32, align 4, !dbg !179
  %8396 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8392, i32* %8390), !dbg !180
  %8397 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8392, align 8, !dbg !181
  %8398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !182
  %8399 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 16, !dbg !183
  %8400 = load i16, i16* %8399, align 2, !dbg !184
  %8401 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 19, !dbg !185
  %8402 = load i32*, i32** %8401, align 8, !dbg !186
  %8403 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 0, !dbg !187
  %8404 = load i8, i8* %8403, align 1, !dbg !188
  %8405 = icmp ne i8 %8404, 3, !dbg !189
  %8406 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 2, !dbg !190
  %8407 = load i8, i8* %8406, align 1, !dbg !191
  %8408 = icmp ne i8 %8407, 0, !dbg !192
  %8409 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 14, !dbg !193
  %8410 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 21, !dbg !194
  %8411 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 22, !dbg !195
  %8412 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 20, !dbg !196
  %8413 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 17, !dbg !197
  %8414 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 9, !dbg !198
  %8415 = load i32, i32* %8414, align 4, !dbg !199
  %8416 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %8417 = load i32, i32* %8416, align 4, !dbg !201
  %8418 = icmp ne i32 %8415, %8417, !dbg !202
  br i1 %8418, label %8419, label %8461, !dbg !203

8419:                                             ; preds = %8386
  br i1 %8408, label %8441, label %8436, !dbg !204

8420:                                             ; preds = %8436, %8443
  %8421 = load i32, i32* %8416, align 4, !dbg !205
  store i32 %8421, i32* %8414, align 4, !dbg !206
  %8422 = load i8*, i8** %8412, align 8, !dbg !207
  %8423 = load i8, i8* %8422, align 1, !dbg !208
  %8424 = icmp sgt i8 %8423, -1, !dbg !211
  br i1 %8424, label %8425, label %8427, !dbg !212

8425:                                             ; preds = %8420
  %8426 = zext i8 %8423 to i32, !dbg !213
  store i32 %8426, i32* %8402, align 4, !dbg !214
  store i32 1, i32* %8409, align 4, !dbg !215
  br label %8430, !dbg !216

8427:                                             ; preds = %8420
  %8428 = call i8 @sqlite3GetVarint32(i8* %8422, i32* %8402), !dbg !217
  %8429 = zext i8 %8428 to i32, !dbg !218
  store i32 %8429, i32* %8409, align 4, !dbg !219
  br label %8430, !dbg !220

8430:                                             ; preds = %8427, %8425
  store i16 0, i16* %8413, align 2, !dbg !221
  %8431 = load i32, i32* %8411, align 4, !dbg !222
  %8432 = load i32, i32* %8402, align 4, !dbg !223
  %8433 = icmp ult i32 %8431, %8432, !dbg !224
  br i1 %8433, label %8435, label %8434, !dbg !225

8434:                                             ; preds = %8430
  store i8* %8422, i8** %8394, align 8, !dbg !226
  br label %8554, !dbg !227

8435:                                             ; preds = %8430
  store i8* null, i8** %8412, align 8, !dbg !228
  store i32 0, i32* %8411, align 4, !dbg !229
  br label %8461, !dbg !230

8436:                                             ; preds = %8419
  %8437 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 12, i32 0, !dbg !231
  %8438 = load %struct.BtCursor*, %struct.BtCursor** %8437, align 8, !dbg !232
  %8439 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8438), !dbg !233
  store i32 %8439, i32* %8410, align 4, !dbg !234
  %8440 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8438, i32* %8411), !dbg !235
  store i8* %8440, i8** %8412, align 8, !dbg !236
  br label %8420, !dbg !237

8441:                                             ; preds = %8419
  %8442 = icmp eq i8 %8404, 3, !dbg !238
  br i1 %8442, label %8443, label %8454, !dbg !239

8443:                                             ; preds = %8441
  %8444 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 10, !dbg !240
  %8445 = load i32, i32* %8444, align 4, !dbg !241
  %8446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8445, !dbg !242
  %8447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8446, i32 0, i32 1, !dbg !243
  %8448 = load i16, i16* %8447, align 2, !dbg !244
  %8449 = and i16 %8448, 16, !dbg !245
  %8450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8446, i32 0, i32 4, !dbg !246
  %8451 = load i32, i32* %8450, align 4, !dbg !247
  store i32 %8451, i32* %8410, align 4, !dbg !248
  store i32 %8451, i32* %8411, align 4, !dbg !249
  %8452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8446, i32 0, i32 5, !dbg !250
  %8453 = load i8*, i8** %8452, align 8, !dbg !251
  store i8* %8453, i8** %8412, align 8, !dbg !252
  br label %8420, !dbg !253

8454:                                             ; preds = %8441
  %8455 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 1, !dbg !254
  %8456 = load i16, i16* %8455, align 2, !dbg !254
  %8457 = and i16 %8456, 9216, !dbg !254
  %8458 = icmp ne i16 %8457, 0, !dbg !254
  br i1 %8458, label %8459, label %8460, !dbg !254

8459:                                             ; preds = %8454
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8398), !dbg !254
  br label %8642, !dbg !254

8460:                                             ; preds = %8454
  store i16 1, i16* %8455, align 2, !dbg !254
  br label %8642, !dbg !254

8461:                                             ; preds = %8435, %8386
  %8462 = load i16, i16* %8413, align 2, !dbg !255
  %8463 = icmp ule i16 %8462, 1, !dbg !256
  br i1 %8463, label %8546, label %8543, !dbg !257

8464:                                             ; preds = %8543, %8632
  %8465 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 1, !dbg !258
  %8466 = load i16, i16* %8465, align 2, !dbg !259
  %8467 = and i16 9216, %8466, !dbg !260
  %8468 = icmp eq i16 0, %8467, !dbg !261
  br i1 %8468, label %8469, label %8473, !dbg !262

8469:                                             ; preds = %8464
  %8470 = icmp ne i16 %8467, 0, !dbg !263
  br i1 %8470, label %8471, label %8472, !dbg !263

8471:                                             ; preds = %8469
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8398), !dbg !263
  br label %8473, !dbg !263

8472:                                             ; preds = %8469
  store i16 1, i16* %8465, align 2, !dbg !263
  br label %8473, !dbg !263

8473:                                             ; preds = %8471, %8472, %8464
  %8474 = load i32, i32* %8395, align 4, !dbg !264
  %8475 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 23, i32 1, !dbg !265
  %8476 = load i32, i32* %8475, align 4, !dbg !266
  %8477 = load i32, i32* %8411, align 4, !dbg !267
  %8478 = getelementptr i32, i32* %8402, i32 2, !dbg !268
  %8479 = load i32, i32* %8478, align 4, !dbg !269
  %8480 = icmp sge i32 %8477, %8479, !dbg !270
  br i1 %8480, label %8481, label %8521, !dbg !271

8481:                                             ; preds = %8473
  %8482 = load i8*, i8** %8412, align 8, !dbg !272
  %8483 = ptrtoint i8* %8482 to i64, !dbg !273
  %8484 = getelementptr i32, i32* %8402, i32 1, !dbg !274
  %8485 = load i32, i32* %8484, align 4, !dbg !275
  %8486 = zext i32 %8485 to i64, !dbg !276
  %8487 = add i64 %8483, %8486, !dbg !277
  %8488 = inttoptr i64 %8487 to i8*, !dbg !278
  store i8* %8488, i8** %8394, align 8, !dbg !279
  %8489 = load i32, i32* %8395, align 4, !dbg !280
  %8490 = icmp ult i32 %8489, 12, !dbg !281
  br i1 %8490, label %8491, label %8493, !dbg !282

8491:                                             ; preds = %8481
  %8492 = call i32 @sqlite3VdbeSerialGet(i8* %8488, i32 %8489, %struct.sqlite3_value* %8398), !dbg !283
  br label %8642, !dbg !284

8493:                                             ; preds = %8481
  %8494 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %8494, align 2, !dbg !286
  %8495 = getelementptr i16, i16* %8494, i32 1, !dbg !287
  store i16 514, i16* %8495, align 2, !dbg !288
  %8496 = load i32, i32* %8395, align 4, !dbg !289
  %8497 = sub i32 %8496, 12, !dbg !290
  %8498 = lshr i32 %8497, 1, !dbg !291
  %8499 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 4, !dbg !292
  store i32 %8498, i32* %8499, align 4, !dbg !293
  %8500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 2, !dbg !294
  store i8 %8389, i8* %8500, align 1, !dbg !295
  %8501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 5, !dbg !296
  %8502 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 7, !dbg !297
  %8503 = load i32, i32* %8502, align 4, !dbg !298
  %8504 = add i32 %8498, 2, !dbg !299
  %8505 = icmp slt i32 %8503, %8504, !dbg !300
  br i1 %8505, label %8506, label %8508, !dbg !301

8506:                                             ; preds = %8493
  store i16 1, i16* %8465, align 2, !dbg !302
  %8507 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8398, i32 %8504, i32 0), !dbg !303
  br label %8511, !dbg !304

8508:                                             ; preds = %8493
  %8509 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 6, !dbg !305
  %8510 = load i8*, i8** %8509, align 8, !dbg !306
  store i8* %8510, i8** %8501, align 8, !dbg !307
  br label %8511, !dbg !308

8511:                                             ; preds = %8508, %8506
  %8512 = zext i32 %8498 to i64, !dbg !309
  %8513 = load i8*, i8** %8501, align 8, !dbg !310
  %8514 = load i8*, i8** %8394, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8513, i8* %8514, i64 %8512, i1 false), !dbg !312
  %8515 = getelementptr i8, i8* %8513, i32 %8498, !dbg !313
  store i8 0, i8* %8515, align 1, !dbg !314
  %8516 = add i32 %8498, 1, !dbg !315
  %8517 = getelementptr i8, i8* %8513, i32 %8516, !dbg !316
  store i8 0, i8* %8517, align 1, !dbg !317
  %8518 = and i32 %8496, 1, !dbg !318
  %8519 = getelementptr i16, i16* %8494, i32 %8518, !dbg !319
  %8520 = load i16, i16* %8519, align 2, !dbg !320
  store i16 %8520, i16* %8465, align 2, !dbg !321
  br label %8642, !dbg !322

8521:                                             ; preds = %8473
  %8522 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 2, !dbg !323
  store i8 %8389, i8* %8522, align 1, !dbg !324
  %8523 = load i32, i32* %8395, align 4, !dbg !325
  %8524 = and i32 %8523, 1, !dbg !326
  %8525 = icmp eq i32 %8524, 0, !dbg !327
  %8526 = icmp sge i32 %8523, 12, !dbg !328
  %8527 = and i1 %8526, %8525, !dbg !329
  %8528 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8523), !dbg !330
  %8529 = icmp eq i32 %8528, 0, !dbg !331
  br i1 %8529, label %8541, label %8530, !dbg !332

8530:                                             ; preds = %8521
  %8531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 12, i32 0, !dbg !333
  %8532 = load %struct.BtCursor*, %struct.BtCursor** %8531, align 8, !dbg !334
  %8533 = getelementptr i32, i32* %8402, i32 1, !dbg !335
  %8534 = load i32, i32* %8533, align 4, !dbg !336
  %8535 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8532, i32 %8534, i32 %8528, %struct.sqlite3_value* %8398), !dbg !337
  %8536 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 5, !dbg !338
  %8537 = load i8*, i8** %8536, align 8, !dbg !339
  %8538 = call i32 @sqlite3VdbeSerialGet(i8* %8537, i32 %8523, %struct.sqlite3_value* %8398), !dbg !340
  %8539 = load i16, i16* %8465, align 2, !dbg !341
  %8540 = and i16 %8539, -4097, !dbg !342
  store i16 %8540, i16* %8465, align 2, !dbg !343
  br label %8642, !dbg !344

8541:                                             ; preds = %8521
  %8542 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8523, %struct.sqlite3_value* %8398), !dbg !345
  br label %8642, !dbg !346

8543:                                             ; preds = %8461
  %8544 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 23, i32 1, !dbg !347
  %8545 = load i32, i32* %8544, align 4, !dbg !348
  store i32 %8545, i32* %8395, align 4, !dbg !349
  br label %8464, !dbg !350

8546:                                             ; preds = %8461
  %8547 = load i32, i32* %8409, align 4, !dbg !351
  %8548 = load i32, i32* %8402, align 4, !dbg !352
  %8549 = icmp ult i32 %8547, %8548, !dbg !353
  br i1 %8549, label %8550, label %8631, !dbg !354

8550:                                             ; preds = %8546
  %8551 = load i8*, i8** %8412, align 8, !dbg !355
  %8552 = icmp eq i8* %8551, null, !dbg !356
  br i1 %8552, label %8554, label %8553, !dbg !357

8553:                                             ; preds = %8550
  store i8* %8551, i8** %8394, align 8, !dbg !358
  br label %8554, !dbg !359

8554:                                             ; preds = %8553, %8550, %8434
  %8555 = alloca i32, align 4, !dbg !360
  %8556 = load i16, i16* %8413, align 2, !dbg !361
  %8557 = zext i16 %8556 to i32, !dbg !362
  store i32 %8557, i32* %8555, align 4, !dbg !363
  %8558 = alloca i64, align 8, !dbg !364
  %8559 = getelementptr i32, i32* %8402, i32 %8557, !dbg !365
  %8560 = load i32, i32* %8559, align 4, !dbg !366
  %8561 = zext i32 %8560 to i64, !dbg !367
  store i64 %8561, i64* %8558, align 4, !dbg !368
  %8562 = load i8*, i8** %8394, align 8, !dbg !369
  %8563 = load i32, i32* %8409, align 4, !dbg !370
  %8564 = alloca i8*, align 8, !dbg !371
  %8565 = getelementptr i8, i8* %8562, i32 %8563, !dbg !372
  store i8* %8565, i8** %8564, align 8, !dbg !373
  %8566 = load i32, i32* %8402, align 4, !dbg !374
  %8567 = getelementptr i8, i8* %8562, i32 %8566, !dbg !375
  br label %8568, !dbg !376

8568:                                             ; preds = %8575, %8554
  %8569 = load i32, i32* %8555, align 4, !dbg !377
  %8570 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8397, i32 0, i32 23, i32 %8569, !dbg !378
  %8571 = load i8*, i8** %8564, align 8, !dbg !379
  %8572 = load i8, i8* %8571, align 1, !dbg !380
  %8573 = zext i8 %8572 to i32, !dbg !381
  store i32 %8573, i32* %8395, align 4, !dbg !382
  store i32 %8573, i32* %8570, align 4, !dbg !383
  %8574 = icmp sgt i8 %8572, -1, !dbg !384
  br i1 %8574, label %8598, label %8589, !dbg !385

8575:                                             ; preds = %8589, %8598
  %8576 = load i32, i32* %8555, align 4, !dbg !386
  %8577 = add i32 %8576, 1, !dbg !387
  store i32 %8577, i32* %8555, align 4, !dbg !388
  %8578 = load i64, i64* %8558, align 4, !dbg !389
  %8579 = and i64 4294967295, %8578, !dbg !390
  %8580 = trunc i64 %8579 to i32, !dbg !391
  %8581 = getelementptr i32, i32* %8402, i32 %8577, !dbg !392
  store i32 %8580, i32* %8581, align 4, !dbg !393
  %8582 = load i32, i32* %8555, align 4, !dbg !394
  %8583 = icmp sle i32 %8582, 1, !dbg !395
  %8584 = load i8*, i8** %8564, align 8, !dbg !396
  %8585 = ptrtoint i8* %8584 to i64, !dbg !397
  %8586 = ptrtoint i8* %8567 to i64, !dbg !398
  %8587 = icmp ult i64 %8585, %8586, !dbg !399
  %8588 = and i1 %8583, %8587, !dbg !400
  br i1 %8588, label %8568, label %8607, !dbg !401

8589:                                             ; preds = %8568
  %8590 = load i8*, i8** %8564, align 8, !dbg !402
  %8591 = call i8 @sqlite3GetVarint32(i8* %8590, i32* %8395), !dbg !403
  %8592 = getelementptr i8, i8* %8590, i8 %8591, !dbg !404
  store i8* %8592, i8** %8564, align 8, !dbg !405
  %8593 = load i32, i32* %8395, align 4, !dbg !406
  store i32 %8593, i32* %8570, align 4, !dbg !407
  %8594 = load i64, i64* %8558, align 4, !dbg !408
  %8595 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8593), !dbg !409
  %8596 = zext i32 %8595 to i64, !dbg !410
  %8597 = add i64 %8594, %8596, !dbg !411
  store i64 %8597, i64* %8558, align 4, !dbg !412
  br label %8575, !dbg !413

8598:                                             ; preds = %8568
  %8599 = getelementptr i8, i8* %8571, i32 1, !dbg !414
  store i8* %8599, i8** %8564, align 8, !dbg !415
  %8600 = load i32, i32* %8395, align 4, !dbg !416
  %8601 = trunc i32 %8600 to i8, !dbg !417
  %8602 = getelementptr i8, i8* %4, i8 %8601, !dbg !418
  %8603 = load i8, i8* %8602, align 1, !dbg !419
  %8604 = zext i8 %8603 to i64, !dbg !420
  %8605 = load i64, i64* %8558, align 4, !dbg !421
  %8606 = add i64 %8605, %8604, !dbg !422
  store i64 %8606, i64* %8558, align 4, !dbg !423
  br label %8575, !dbg !424

8607:                                             ; preds = %8575
  %8608 = load i64, i64* %8558, align 4, !dbg !425
  %8609 = load i32, i32* %8410, align 4, !dbg !426
  %8610 = zext i32 %8609 to i64, !dbg !427
  %8611 = icmp uge i64 %8585, %8586, !dbg !428
  %8612 = icmp ugt i64 %8585, %8586, !dbg !429
  %8613 = icmp ne i64 %8608, %8610, !dbg !430
  %8614 = icmp ugt i64 %8608, %8610, !dbg !431
  %8615 = or i1 %8612, %8613, !dbg !432
  %8616 = and i1 %8611, %8615, !dbg !433
  %8617 = or i1 %8616, %8614, !dbg !434
  br i1 %8617, label %8618, label %8622, !dbg !435

8618:                                             ; preds = %8607
  %8619 = load i32, i32* %8402, align 4, !dbg !436
  %8620 = icmp eq i32 %8619, 0, !dbg !437
  br i1 %8620, label %8621, label %8622, !dbg !438

8621:                                             ; preds = %8618
  store i32 0, i32* %8555, align 4, !dbg !439
  store i8* %8567, i8** %8564, align 8, !dbg !440
  br label %8622, !dbg !441

8622:                                             ; preds = %8621, %8618, %8607
  %8623 = load i32, i32* %8555, align 4, !dbg !442
  %8624 = trunc i32 %8623 to i16, !dbg !443
  store i16 %8624, i16* %8413, align 2, !dbg !444
  %8625 = load i8*, i8** %8564, align 8, !dbg !445
  %8626 = ptrtoint i8* %8625 to i64, !dbg !446
  %8627 = load i8*, i8** %8394, align 8, !dbg !447
  %8628 = ptrtoint i8* %8627 to i64, !dbg !448
  %8629 = sub i64 %8626, %8628, !dbg !449
  %8630 = trunc i64 %8629 to i32, !dbg !450
  store i32 %8630, i32* %8409, align 4, !dbg !451
  br label %8632, !dbg !452

8631:                                             ; preds = %8546
  store i32 0, i32* %8395, align 4, !dbg !453
  br label %8632, !dbg !454

8632:                                             ; preds = %8622, %8631
  %8633 = load i16, i16* %8413, align 2, !dbg !455
  %8634 = icmp sle i16 %8633, 1, !dbg !456
  br i1 %8634, label %8635, label %8464, !dbg !457

8635:                                             ; preds = %8632
  %8636 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8398, i32 0, i32 1, !dbg !458
  %8637 = load i16, i16* %8636, align 2, !dbg !458
  %8638 = and i16 %8637, 9216, !dbg !458
  %8639 = icmp ne i16 %8638, 0, !dbg !458
  br i1 %8639, label %8640, label %8641, !dbg !458

8640:                                             ; preds = %8635
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8398), !dbg !458
  br label %8642, !dbg !458

8641:                                             ; preds = %8635
  store i16 1, i16* %8636, align 2, !dbg !458
  br label %8642, !dbg !458

8642:                                             ; preds = %8640, %8641, %8511, %8491, %8530, %8541, %8459, %8460
  call void @llvm.stackrestore(i8* %8387), !dbg !459
  br label %8643, !dbg !74

8643:                                             ; preds = %8642, %14
  %8644 = call i8* @llvm.stacksave(), !dbg !167
  %8645 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %8646 = load i8, i8* %8645, align 1, !dbg !171
  %8647 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %8647, align 4, !dbg !173
  %8648 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %8649 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %8650 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8648, align 8, !dbg !176
  store %struct.VdbeCursor* %8650, %struct.VdbeCursor** %8649, align 8, !dbg !177
  %8651 = alloca i8*, align 8, !dbg !178
  %8652 = alloca i32, align 4, !dbg !179
  %8653 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8649, i32* %8647), !dbg !180
  %8654 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8649, align 8, !dbg !181
  %8655 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !182
  %8656 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 16, !dbg !183
  %8657 = load i16, i16* %8656, align 2, !dbg !184
  %8658 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 19, !dbg !185
  %8659 = load i32*, i32** %8658, align 8, !dbg !186
  %8660 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 0, !dbg !187
  %8661 = load i8, i8* %8660, align 1, !dbg !188
  %8662 = icmp ne i8 %8661, 3, !dbg !189
  %8663 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 2, !dbg !190
  %8664 = load i8, i8* %8663, align 1, !dbg !191
  %8665 = icmp ne i8 %8664, 0, !dbg !192
  %8666 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 14, !dbg !193
  %8667 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 21, !dbg !194
  %8668 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 22, !dbg !195
  %8669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 20, !dbg !196
  %8670 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 17, !dbg !197
  %8671 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 9, !dbg !198
  %8672 = load i32, i32* %8671, align 4, !dbg !199
  %8673 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %8674 = load i32, i32* %8673, align 4, !dbg !201
  %8675 = icmp ne i32 %8672, %8674, !dbg !202
  br i1 %8675, label %8676, label %8718, !dbg !203

8676:                                             ; preds = %8643
  br i1 %8665, label %8698, label %8693, !dbg !204

8677:                                             ; preds = %8693, %8700
  %8678 = load i32, i32* %8673, align 4, !dbg !205
  store i32 %8678, i32* %8671, align 4, !dbg !206
  %8679 = load i8*, i8** %8669, align 8, !dbg !207
  %8680 = load i8, i8* %8679, align 1, !dbg !208
  %8681 = icmp sgt i8 %8680, -1, !dbg !211
  br i1 %8681, label %8682, label %8684, !dbg !212

8682:                                             ; preds = %8677
  %8683 = zext i8 %8680 to i32, !dbg !213
  store i32 %8683, i32* %8659, align 4, !dbg !214
  store i32 1, i32* %8666, align 4, !dbg !215
  br label %8687, !dbg !216

8684:                                             ; preds = %8677
  %8685 = call i8 @sqlite3GetVarint32(i8* %8679, i32* %8659), !dbg !217
  %8686 = zext i8 %8685 to i32, !dbg !218
  store i32 %8686, i32* %8666, align 4, !dbg !219
  br label %8687, !dbg !220

8687:                                             ; preds = %8684, %8682
  store i16 0, i16* %8670, align 2, !dbg !221
  %8688 = load i32, i32* %8668, align 4, !dbg !222
  %8689 = load i32, i32* %8659, align 4, !dbg !223
  %8690 = icmp ult i32 %8688, %8689, !dbg !224
  br i1 %8690, label %8692, label %8691, !dbg !225

8691:                                             ; preds = %8687
  store i8* %8679, i8** %8651, align 8, !dbg !226
  br label %8811, !dbg !227

8692:                                             ; preds = %8687
  store i8* null, i8** %8669, align 8, !dbg !228
  store i32 0, i32* %8668, align 4, !dbg !229
  br label %8718, !dbg !230

8693:                                             ; preds = %8676
  %8694 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 12, i32 0, !dbg !231
  %8695 = load %struct.BtCursor*, %struct.BtCursor** %8694, align 8, !dbg !232
  %8696 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8695), !dbg !233
  store i32 %8696, i32* %8667, align 4, !dbg !234
  %8697 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8695, i32* %8668), !dbg !235
  store i8* %8697, i8** %8669, align 8, !dbg !236
  br label %8677, !dbg !237

8698:                                             ; preds = %8676
  %8699 = icmp eq i8 %8661, 3, !dbg !238
  br i1 %8699, label %8700, label %8711, !dbg !239

8700:                                             ; preds = %8698
  %8701 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 10, !dbg !240
  %8702 = load i32, i32* %8701, align 4, !dbg !241
  %8703 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8702, !dbg !242
  %8704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8703, i32 0, i32 1, !dbg !243
  %8705 = load i16, i16* %8704, align 2, !dbg !244
  %8706 = and i16 %8705, 16, !dbg !245
  %8707 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8703, i32 0, i32 4, !dbg !246
  %8708 = load i32, i32* %8707, align 4, !dbg !247
  store i32 %8708, i32* %8667, align 4, !dbg !248
  store i32 %8708, i32* %8668, align 4, !dbg !249
  %8709 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8703, i32 0, i32 5, !dbg !250
  %8710 = load i8*, i8** %8709, align 8, !dbg !251
  store i8* %8710, i8** %8669, align 8, !dbg !252
  br label %8677, !dbg !253

8711:                                             ; preds = %8698
  %8712 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 1, !dbg !254
  %8713 = load i16, i16* %8712, align 2, !dbg !254
  %8714 = and i16 %8713, 9216, !dbg !254
  %8715 = icmp ne i16 %8714, 0, !dbg !254
  br i1 %8715, label %8716, label %8717, !dbg !254

8716:                                             ; preds = %8711
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8655), !dbg !254
  br label %8899, !dbg !254

8717:                                             ; preds = %8711
  store i16 1, i16* %8712, align 2, !dbg !254
  br label %8899, !dbg !254

8718:                                             ; preds = %8692, %8643
  %8719 = load i16, i16* %8670, align 2, !dbg !255
  %8720 = icmp ule i16 %8719, 2, !dbg !256
  br i1 %8720, label %8803, label %8800, !dbg !257

8721:                                             ; preds = %8800, %8889
  %8722 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 1, !dbg !258
  %8723 = load i16, i16* %8722, align 2, !dbg !259
  %8724 = and i16 9216, %8723, !dbg !260
  %8725 = icmp eq i16 0, %8724, !dbg !261
  br i1 %8725, label %8726, label %8730, !dbg !262

8726:                                             ; preds = %8721
  %8727 = icmp ne i16 %8724, 0, !dbg !263
  br i1 %8727, label %8728, label %8729, !dbg !263

8728:                                             ; preds = %8726
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8655), !dbg !263
  br label %8730, !dbg !263

8729:                                             ; preds = %8726
  store i16 1, i16* %8722, align 2, !dbg !263
  br label %8730, !dbg !263

8730:                                             ; preds = %8728, %8729, %8721
  %8731 = load i32, i32* %8652, align 4, !dbg !264
  %8732 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 23, i32 2, !dbg !265
  %8733 = load i32, i32* %8732, align 4, !dbg !266
  %8734 = load i32, i32* %8668, align 4, !dbg !267
  %8735 = getelementptr i32, i32* %8659, i32 3, !dbg !268
  %8736 = load i32, i32* %8735, align 4, !dbg !269
  %8737 = icmp sge i32 %8734, %8736, !dbg !270
  br i1 %8737, label %8738, label %8778, !dbg !271

8738:                                             ; preds = %8730
  %8739 = load i8*, i8** %8669, align 8, !dbg !272
  %8740 = ptrtoint i8* %8739 to i64, !dbg !273
  %8741 = getelementptr i32, i32* %8659, i32 2, !dbg !274
  %8742 = load i32, i32* %8741, align 4, !dbg !275
  %8743 = zext i32 %8742 to i64, !dbg !276
  %8744 = add i64 %8740, %8743, !dbg !277
  %8745 = inttoptr i64 %8744 to i8*, !dbg !278
  store i8* %8745, i8** %8651, align 8, !dbg !279
  %8746 = load i32, i32* %8652, align 4, !dbg !280
  %8747 = icmp ult i32 %8746, 12, !dbg !281
  br i1 %8747, label %8748, label %8750, !dbg !282

8748:                                             ; preds = %8738
  %8749 = call i32 @sqlite3VdbeSerialGet(i8* %8745, i32 %8746, %struct.sqlite3_value* %8655), !dbg !283
  br label %8899, !dbg !284

8750:                                             ; preds = %8738
  %8751 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %8751, align 2, !dbg !286
  %8752 = getelementptr i16, i16* %8751, i32 1, !dbg !287
  store i16 514, i16* %8752, align 2, !dbg !288
  %8753 = load i32, i32* %8652, align 4, !dbg !289
  %8754 = sub i32 %8753, 12, !dbg !290
  %8755 = lshr i32 %8754, 1, !dbg !291
  %8756 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 4, !dbg !292
  store i32 %8755, i32* %8756, align 4, !dbg !293
  %8757 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 2, !dbg !294
  store i8 %8646, i8* %8757, align 1, !dbg !295
  %8758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 5, !dbg !296
  %8759 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 7, !dbg !297
  %8760 = load i32, i32* %8759, align 4, !dbg !298
  %8761 = add i32 %8755, 2, !dbg !299
  %8762 = icmp slt i32 %8760, %8761, !dbg !300
  br i1 %8762, label %8763, label %8765, !dbg !301

8763:                                             ; preds = %8750
  store i16 1, i16* %8722, align 2, !dbg !302
  %8764 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8655, i32 %8761, i32 0), !dbg !303
  br label %8768, !dbg !304

8765:                                             ; preds = %8750
  %8766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 6, !dbg !305
  %8767 = load i8*, i8** %8766, align 8, !dbg !306
  store i8* %8767, i8** %8758, align 8, !dbg !307
  br label %8768, !dbg !308

8768:                                             ; preds = %8765, %8763
  %8769 = zext i32 %8755 to i64, !dbg !309
  %8770 = load i8*, i8** %8758, align 8, !dbg !310
  %8771 = load i8*, i8** %8651, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8770, i8* %8771, i64 %8769, i1 false), !dbg !312
  %8772 = getelementptr i8, i8* %8770, i32 %8755, !dbg !313
  store i8 0, i8* %8772, align 1, !dbg !314
  %8773 = add i32 %8755, 1, !dbg !315
  %8774 = getelementptr i8, i8* %8770, i32 %8773, !dbg !316
  store i8 0, i8* %8774, align 1, !dbg !317
  %8775 = and i32 %8753, 1, !dbg !318
  %8776 = getelementptr i16, i16* %8751, i32 %8775, !dbg !319
  %8777 = load i16, i16* %8776, align 2, !dbg !320
  store i16 %8777, i16* %8722, align 2, !dbg !321
  br label %8899, !dbg !322

8778:                                             ; preds = %8730
  %8779 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 2, !dbg !323
  store i8 %8646, i8* %8779, align 1, !dbg !324
  %8780 = load i32, i32* %8652, align 4, !dbg !325
  %8781 = and i32 %8780, 1, !dbg !326
  %8782 = icmp eq i32 %8781, 0, !dbg !327
  %8783 = icmp sge i32 %8780, 12, !dbg !328
  %8784 = and i1 %8783, %8782, !dbg !329
  %8785 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8780), !dbg !330
  %8786 = icmp eq i32 %8785, 0, !dbg !331
  br i1 %8786, label %8798, label %8787, !dbg !332

8787:                                             ; preds = %8778
  %8788 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 12, i32 0, !dbg !333
  %8789 = load %struct.BtCursor*, %struct.BtCursor** %8788, align 8, !dbg !334
  %8790 = getelementptr i32, i32* %8659, i32 2, !dbg !335
  %8791 = load i32, i32* %8790, align 4, !dbg !336
  %8792 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8789, i32 %8791, i32 %8785, %struct.sqlite3_value* %8655), !dbg !337
  %8793 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 5, !dbg !338
  %8794 = load i8*, i8** %8793, align 8, !dbg !339
  %8795 = call i32 @sqlite3VdbeSerialGet(i8* %8794, i32 %8780, %struct.sqlite3_value* %8655), !dbg !340
  %8796 = load i16, i16* %8722, align 2, !dbg !341
  %8797 = and i16 %8796, -4097, !dbg !342
  store i16 %8797, i16* %8722, align 2, !dbg !343
  br label %8899, !dbg !344

8798:                                             ; preds = %8778
  %8799 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8780, %struct.sqlite3_value* %8655), !dbg !345
  br label %8899, !dbg !346

8800:                                             ; preds = %8718
  %8801 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 23, i32 2, !dbg !347
  %8802 = load i32, i32* %8801, align 4, !dbg !348
  store i32 %8802, i32* %8652, align 4, !dbg !349
  br label %8721, !dbg !350

8803:                                             ; preds = %8718
  %8804 = load i32, i32* %8666, align 4, !dbg !351
  %8805 = load i32, i32* %8659, align 4, !dbg !352
  %8806 = icmp ult i32 %8804, %8805, !dbg !353
  br i1 %8806, label %8807, label %8888, !dbg !354

8807:                                             ; preds = %8803
  %8808 = load i8*, i8** %8669, align 8, !dbg !355
  %8809 = icmp eq i8* %8808, null, !dbg !356
  br i1 %8809, label %8811, label %8810, !dbg !357

8810:                                             ; preds = %8807
  store i8* %8808, i8** %8651, align 8, !dbg !358
  br label %8811, !dbg !359

8811:                                             ; preds = %8810, %8807, %8691
  %8812 = alloca i32, align 4, !dbg !360
  %8813 = load i16, i16* %8670, align 2, !dbg !361
  %8814 = zext i16 %8813 to i32, !dbg !362
  store i32 %8814, i32* %8812, align 4, !dbg !363
  %8815 = alloca i64, align 8, !dbg !364
  %8816 = getelementptr i32, i32* %8659, i32 %8814, !dbg !365
  %8817 = load i32, i32* %8816, align 4, !dbg !366
  %8818 = zext i32 %8817 to i64, !dbg !367
  store i64 %8818, i64* %8815, align 4, !dbg !368
  %8819 = load i8*, i8** %8651, align 8, !dbg !369
  %8820 = load i32, i32* %8666, align 4, !dbg !370
  %8821 = alloca i8*, align 8, !dbg !371
  %8822 = getelementptr i8, i8* %8819, i32 %8820, !dbg !372
  store i8* %8822, i8** %8821, align 8, !dbg !373
  %8823 = load i32, i32* %8659, align 4, !dbg !374
  %8824 = getelementptr i8, i8* %8819, i32 %8823, !dbg !375
  br label %8825, !dbg !376

8825:                                             ; preds = %8832, %8811
  %8826 = load i32, i32* %8812, align 4, !dbg !377
  %8827 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8654, i32 0, i32 23, i32 %8826, !dbg !378
  %8828 = load i8*, i8** %8821, align 8, !dbg !379
  %8829 = load i8, i8* %8828, align 1, !dbg !380
  %8830 = zext i8 %8829 to i32, !dbg !381
  store i32 %8830, i32* %8652, align 4, !dbg !382
  store i32 %8830, i32* %8827, align 4, !dbg !383
  %8831 = icmp sgt i8 %8829, -1, !dbg !384
  br i1 %8831, label %8855, label %8846, !dbg !385

8832:                                             ; preds = %8846, %8855
  %8833 = load i32, i32* %8812, align 4, !dbg !386
  %8834 = add i32 %8833, 1, !dbg !387
  store i32 %8834, i32* %8812, align 4, !dbg !388
  %8835 = load i64, i64* %8815, align 4, !dbg !389
  %8836 = and i64 4294967295, %8835, !dbg !390
  %8837 = trunc i64 %8836 to i32, !dbg !391
  %8838 = getelementptr i32, i32* %8659, i32 %8834, !dbg !392
  store i32 %8837, i32* %8838, align 4, !dbg !393
  %8839 = load i32, i32* %8812, align 4, !dbg !394
  %8840 = icmp sle i32 %8839, 2, !dbg !395
  %8841 = load i8*, i8** %8821, align 8, !dbg !396
  %8842 = ptrtoint i8* %8841 to i64, !dbg !397
  %8843 = ptrtoint i8* %8824 to i64, !dbg !398
  %8844 = icmp ult i64 %8842, %8843, !dbg !399
  %8845 = and i1 %8840, %8844, !dbg !400
  br i1 %8845, label %8825, label %8864, !dbg !401

8846:                                             ; preds = %8825
  %8847 = load i8*, i8** %8821, align 8, !dbg !402
  %8848 = call i8 @sqlite3GetVarint32(i8* %8847, i32* %8652), !dbg !403
  %8849 = getelementptr i8, i8* %8847, i8 %8848, !dbg !404
  store i8* %8849, i8** %8821, align 8, !dbg !405
  %8850 = load i32, i32* %8652, align 4, !dbg !406
  store i32 %8850, i32* %8827, align 4, !dbg !407
  %8851 = load i64, i64* %8815, align 4, !dbg !408
  %8852 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8850), !dbg !409
  %8853 = zext i32 %8852 to i64, !dbg !410
  %8854 = add i64 %8851, %8853, !dbg !411
  store i64 %8854, i64* %8815, align 4, !dbg !412
  br label %8832, !dbg !413

8855:                                             ; preds = %8825
  %8856 = getelementptr i8, i8* %8828, i32 1, !dbg !414
  store i8* %8856, i8** %8821, align 8, !dbg !415
  %8857 = load i32, i32* %8652, align 4, !dbg !416
  %8858 = trunc i32 %8857 to i8, !dbg !417
  %8859 = getelementptr i8, i8* %4, i8 %8858, !dbg !418
  %8860 = load i8, i8* %8859, align 1, !dbg !419
  %8861 = zext i8 %8860 to i64, !dbg !420
  %8862 = load i64, i64* %8815, align 4, !dbg !421
  %8863 = add i64 %8862, %8861, !dbg !422
  store i64 %8863, i64* %8815, align 4, !dbg !423
  br label %8832, !dbg !424

8864:                                             ; preds = %8832
  %8865 = load i64, i64* %8815, align 4, !dbg !425
  %8866 = load i32, i32* %8667, align 4, !dbg !426
  %8867 = zext i32 %8866 to i64, !dbg !427
  %8868 = icmp uge i64 %8842, %8843, !dbg !428
  %8869 = icmp ugt i64 %8842, %8843, !dbg !429
  %8870 = icmp ne i64 %8865, %8867, !dbg !430
  %8871 = icmp ugt i64 %8865, %8867, !dbg !431
  %8872 = or i1 %8869, %8870, !dbg !432
  %8873 = and i1 %8868, %8872, !dbg !433
  %8874 = or i1 %8873, %8871, !dbg !434
  br i1 %8874, label %8875, label %8879, !dbg !435

8875:                                             ; preds = %8864
  %8876 = load i32, i32* %8659, align 4, !dbg !436
  %8877 = icmp eq i32 %8876, 0, !dbg !437
  br i1 %8877, label %8878, label %8879, !dbg !438

8878:                                             ; preds = %8875
  store i32 0, i32* %8812, align 4, !dbg !439
  store i8* %8824, i8** %8821, align 8, !dbg !440
  br label %8879, !dbg !441

8879:                                             ; preds = %8878, %8875, %8864
  %8880 = load i32, i32* %8812, align 4, !dbg !442
  %8881 = trunc i32 %8880 to i16, !dbg !443
  store i16 %8881, i16* %8670, align 2, !dbg !444
  %8882 = load i8*, i8** %8821, align 8, !dbg !445
  %8883 = ptrtoint i8* %8882 to i64, !dbg !446
  %8884 = load i8*, i8** %8651, align 8, !dbg !447
  %8885 = ptrtoint i8* %8884 to i64, !dbg !448
  %8886 = sub i64 %8883, %8885, !dbg !449
  %8887 = trunc i64 %8886 to i32, !dbg !450
  store i32 %8887, i32* %8666, align 4, !dbg !451
  br label %8889, !dbg !452

8888:                                             ; preds = %8803
  store i32 0, i32* %8652, align 4, !dbg !453
  br label %8889, !dbg !454

8889:                                             ; preds = %8879, %8888
  %8890 = load i16, i16* %8670, align 2, !dbg !455
  %8891 = icmp sle i16 %8890, 2, !dbg !456
  br i1 %8891, label %8892, label %8721, !dbg !457

8892:                                             ; preds = %8889
  %8893 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8655, i32 0, i32 1, !dbg !458
  %8894 = load i16, i16* %8893, align 2, !dbg !458
  %8895 = and i16 %8894, 9216, !dbg !458
  %8896 = icmp ne i16 %8895, 0, !dbg !458
  br i1 %8896, label %8897, label %8898, !dbg !458

8897:                                             ; preds = %8892
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8655), !dbg !458
  br label %8899, !dbg !458

8898:                                             ; preds = %8892
  store i16 1, i16* %8893, align 2, !dbg !458
  br label %8899, !dbg !458

8899:                                             ; preds = %8897, %8898, %8768, %8748, %8787, %8798, %8716, %8717
  call void @llvm.stackrestore(i8* %8644), !dbg !459
  br label %8900, !dbg !74

8900:                                             ; preds = %8899, %14
  %8901 = call i8* @llvm.stacksave(), !dbg !1215
  %8902 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 67, !dbg !1218
  %8903 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8902, i32 0, i32 6, !dbg !1219
  %8904 = bitcast %union.p4union* %8903 to %struct.KeyInfo**, !dbg !1220
  %8905 = load %struct.KeyInfo*, %struct.KeyInfo** %8904, align 8, !dbg !1221
  %8906 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %8905, i32 0, i32 6, i32 0, !dbg !1222
  %8907 = alloca i32*, align 8, !dbg !1223
  store i32* null, i32** %8907, align 8, !dbg !1224
  %8908 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %8905, i32 0, i32 5, !dbg !1225
  %8909 = load i8*, i8** %8908, align 8, !dbg !1226
  %8910 = load %struct.CollSeq*, %struct.CollSeq** %8906, align 8, !dbg !1227
  %8911 = load i8, i8* %8909, align 1, !dbg !1228
  %8912 = and i8 %8911, 1, !dbg !1229
  %8913 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !1230
  %8914 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !1231
  %8915 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %8913, %struct.sqlite3_value* %8914, %struct.CollSeq* %8910), !dbg !1232
  store i32 %8915, i32* %2, align 4, !dbg !1233
  %8916 = icmp ne i32 %8915, 0, !dbg !1234
  br i1 %8916, label %8917, label %8937, !dbg !1235

8917:                                             ; preds = %8900
  %8918 = and i8 %8911, 2, !dbg !1236
  %8919 = icmp ne i8 %8918, 0, !dbg !1237
  br i1 %8919, label %8920, label %8932, !dbg !1238

8920:                                             ; preds = %8917
  %8921 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, i32 1, !dbg !1239
  %8922 = load i16, i16* %8921, align 2, !dbg !1240
  %8923 = and i16 %8922, 1, !dbg !1241
  %8924 = icmp ne i16 %8923, 0, !dbg !1242
  %8925 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, i32 1, !dbg !1243
  %8926 = load i16, i16* %8925, align 2, !dbg !1244
  %8927 = and i16 %8926, 1, !dbg !1245
  %8928 = icmp ne i16 %8927, 0, !dbg !1246
  %8929 = or i1 %8924, %8928, !dbg !1247
  br i1 %8929, label %8930, label %8932, !dbg !1248

8930:                                             ; preds = %8920
  %8931 = sub i32 0, %8915, !dbg !1249
  store i32 %8931, i32* %2, align 4, !dbg !1250
  br label %8932, !dbg !1251

8932:                                             ; preds = %8920, %8930, %8917
  %8933 = icmp ne i8 %8912, 0, !dbg !1252
  br i1 %8933, label %8934, label %8997, !dbg !1253

8934:                                             ; preds = %8932
  %8935 = load i32, i32* %2, align 4, !dbg !1254
  %8936 = sub i32 0, %8935, !dbg !1255
  store i32 %8936, i32* %2, align 4, !dbg !1256
  br label %8997, !dbg !1257

8937:                                             ; preds = %8900
  %8938 = getelementptr %struct.CollSeq*, %struct.CollSeq** %8906, i32 1, !dbg !1258
  %8939 = load %struct.CollSeq*, %struct.CollSeq** %8938, align 8, !dbg !1227
  %8940 = getelementptr i8, i8* %8909, i32 1, !dbg !1259
  %8941 = load i8, i8* %8940, align 1, !dbg !1228
  %8942 = and i8 %8941, 1, !dbg !1229
  %8943 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !1230
  %8944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !1231
  %8945 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %8943, %struct.sqlite3_value* %8944, %struct.CollSeq* %8939), !dbg !1232
  store i32 %8945, i32* %2, align 4, !dbg !1233
  %8946 = icmp ne i32 %8945, 0, !dbg !1234
  br i1 %8946, label %8947, label %8967, !dbg !1235

8947:                                             ; preds = %8937
  %8948 = and i8 %8941, 2, !dbg !1236
  %8949 = icmp ne i8 %8948, 0, !dbg !1237
  br i1 %8949, label %8950, label %8962, !dbg !1238

8950:                                             ; preds = %8947
  %8951 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, i32 1, !dbg !1239
  %8952 = load i16, i16* %8951, align 2, !dbg !1240
  %8953 = and i16 %8952, 1, !dbg !1241
  %8954 = icmp ne i16 %8953, 0, !dbg !1242
  %8955 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, i32 1, !dbg !1243
  %8956 = load i16, i16* %8955, align 2, !dbg !1244
  %8957 = and i16 %8956, 1, !dbg !1245
  %8958 = icmp ne i16 %8957, 0, !dbg !1246
  %8959 = or i1 %8954, %8958, !dbg !1247
  br i1 %8959, label %8960, label %8962, !dbg !1248

8960:                                             ; preds = %8950
  %8961 = sub i32 0, %8945, !dbg !1249
  store i32 %8961, i32* %2, align 4, !dbg !1250
  br label %8962, !dbg !1251

8962:                                             ; preds = %8950, %8960, %8947
  %8963 = icmp ne i8 %8942, 0, !dbg !1252
  br i1 %8963, label %8964, label %8997, !dbg !1253

8964:                                             ; preds = %8962
  %8965 = load i32, i32* %2, align 4, !dbg !1254
  %8966 = sub i32 0, %8965, !dbg !1255
  store i32 %8966, i32* %2, align 4, !dbg !1256
  br label %8997, !dbg !1257

8967:                                             ; preds = %8937
  %8968 = getelementptr %struct.CollSeq*, %struct.CollSeq** %8906, i32 2, !dbg !1258
  %8969 = load %struct.CollSeq*, %struct.CollSeq** %8968, align 8, !dbg !1227
  %8970 = getelementptr i8, i8* %8909, i32 2, !dbg !1259
  %8971 = load i8, i8* %8970, align 1, !dbg !1228
  %8972 = and i8 %8971, 1, !dbg !1229
  %8973 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !1230
  %8974 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !1231
  %8975 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %8973, %struct.sqlite3_value* %8974, %struct.CollSeq* %8969), !dbg !1232
  store i32 %8975, i32* %2, align 4, !dbg !1233
  %8976 = icmp ne i32 %8975, 0, !dbg !1234
  br i1 %8976, label %8977, label %8997, !dbg !1235

8977:                                             ; preds = %8967
  %8978 = and i8 %8971, 2, !dbg !1236
  %8979 = icmp ne i8 %8978, 0, !dbg !1237
  br i1 %8979, label %8980, label %8992, !dbg !1238

8980:                                             ; preds = %8977
  %8981 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, i32 1, !dbg !1239
  %8982 = load i16, i16* %8981, align 2, !dbg !1240
  %8983 = and i16 %8982, 1, !dbg !1241
  %8984 = icmp ne i16 %8983, 0, !dbg !1242
  %8985 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, i32 1, !dbg !1243
  %8986 = load i16, i16* %8985, align 2, !dbg !1244
  %8987 = and i16 %8986, 1, !dbg !1245
  %8988 = icmp ne i16 %8987, 0, !dbg !1246
  %8989 = or i1 %8984, %8988, !dbg !1247
  br i1 %8989, label %8990, label %8992, !dbg !1248

8990:                                             ; preds = %8980
  %8991 = sub i32 0, %8975, !dbg !1249
  store i32 %8991, i32* %2, align 4, !dbg !1250
  br label %8992, !dbg !1251

8992:                                             ; preds = %8980, %8990, %8977
  %8993 = icmp ne i8 %8972, 0, !dbg !1252
  br i1 %8993, label %8994, label %8997, !dbg !1253

8994:                                             ; preds = %8992
  %8995 = load i32, i32* %2, align 4, !dbg !1254
  %8996 = sub i32 0, %8995, !dbg !1255
  store i32 %8996, i32* %2, align 4, !dbg !1256
  br label %8997, !dbg !1257

8997:                                             ; preds = %8934, %8932, %8964, %8962, %8994, %8992, %8967
  call void @llvm.stackrestore(i8* %8901), !dbg !1260
  br label %8998, !dbg !74

8998:                                             ; preds = %8997, %14
  %8999 = load i32, i32* %2, align 4, !dbg !1261
  %9000 = icmp slt i32 %8999, 0, !dbg !1264
  %9001 = icmp sgt i32 %8999, 0, !dbg !1265
  %or.cond = or i1 %9000, %9001, !dbg !1266
  br i1 %or.cond, label %9002, label %9025, !dbg !1266

9002:                                             ; preds = %8998, %14
  %9003 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !1267
  %9004 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !1270
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %9004, %struct.sqlite3_value* %9003), !dbg !1271
  %9005 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9003, i32 1, !dbg !1272
  %9006 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9004, i32 1, !dbg !1273
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %9006, %struct.sqlite3_value* %9005), !dbg !1271
  %9007 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9005, i32 1, !dbg !1272
  %9008 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9006, i32 1, !dbg !1273
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %9008, %struct.sqlite3_value* %9007), !dbg !1271
  br label %9009, !dbg !74

9009:                                             ; preds = %9002, %14
  %9010 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !100
  %9011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9010, i32 0, i32 1, !dbg !103
  store i16 4, i16* %9011, align 2, !dbg !104
  %9012 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9010, i32 0, i32 0, i32 0, !dbg !105
  %9013 = bitcast double* %9012 to i64*, !dbg !106
  store i64 70, i64* %9013, align 4, !dbg !107
  br label %10546, !dbg !108

9014:                                             ; preds = %14
  %9015 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1274
  %9016 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9015, i32 0, i32 0, i32 0, !dbg !1277
  %9017 = bitcast double* %9016 to i64*, !dbg !1278
  %9018 = load i64, i64* %9017, align 4, !dbg !1279
  %9019 = icmp sgt i64 %9018, 0, !dbg !1280
  br i1 %9019, label %9020, label %.critedge, !dbg !1281

9020:                                             ; preds = %9014
  br label %10713, !dbg !1282

.critedge:                                        ; preds = %9014, %14
  %9021 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !100
  %9022 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9021, i32 0, i32 1, !dbg !103
  store i16 4, i16* %9022, align 2, !dbg !104
  %9023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9021, i32 0, i32 0, i32 0, !dbg !105
  %9024 = bitcast double* %9023 to i64*, !dbg !106
  store i64 72, i64* %9024, align 4, !dbg !107
  br label %10625, !dbg !108

9025:                                             ; preds = %8998, %14
  %9026 = call i8* @llvm.stacksave(), !dbg !167
  %9027 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %9028 = load i8, i8* %9027, align 1, !dbg !171
  %9029 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %9029, align 4, !dbg !173
  %9030 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %9031 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %9032 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9030, align 8, !dbg !176
  store %struct.VdbeCursor* %9032, %struct.VdbeCursor** %9031, align 8, !dbg !177
  %9033 = alloca i8*, align 8, !dbg !178
  %9034 = alloca i32, align 4, !dbg !179
  %9035 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9031, i32* %9029), !dbg !180
  %9036 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9031, align 8, !dbg !181
  %9037 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 35, !dbg !182
  %9038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 16, !dbg !183
  %9039 = load i16, i16* %9038, align 2, !dbg !184
  %9040 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 19, !dbg !185
  %9041 = load i32*, i32** %9040, align 8, !dbg !186
  %9042 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 0, !dbg !187
  %9043 = load i8, i8* %9042, align 1, !dbg !188
  %9044 = icmp ne i8 %9043, 3, !dbg !189
  %9045 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 2, !dbg !190
  %9046 = load i8, i8* %9045, align 1, !dbg !191
  %9047 = icmp ne i8 %9046, 0, !dbg !192
  %9048 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 14, !dbg !193
  %9049 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 21, !dbg !194
  %9050 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 22, !dbg !195
  %9051 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 20, !dbg !196
  %9052 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 17, !dbg !197
  %9053 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 9, !dbg !198
  %9054 = load i32, i32* %9053, align 4, !dbg !199
  %9055 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %9056 = load i32, i32* %9055, align 4, !dbg !201
  %9057 = icmp ne i32 %9054, %9056, !dbg !202
  br i1 %9057, label %9058, label %9100, !dbg !203

9058:                                             ; preds = %9025
  br i1 %9047, label %9080, label %9075, !dbg !204

9059:                                             ; preds = %9075, %9082
  %9060 = load i32, i32* %9055, align 4, !dbg !205
  store i32 %9060, i32* %9053, align 4, !dbg !206
  %9061 = load i8*, i8** %9051, align 8, !dbg !207
  %9062 = load i8, i8* %9061, align 1, !dbg !208
  %9063 = icmp sgt i8 %9062, -1, !dbg !211
  br i1 %9063, label %9064, label %9066, !dbg !212

9064:                                             ; preds = %9059
  %9065 = zext i8 %9062 to i32, !dbg !213
  store i32 %9065, i32* %9041, align 4, !dbg !214
  store i32 1, i32* %9048, align 4, !dbg !215
  br label %9069, !dbg !216

9066:                                             ; preds = %9059
  %9067 = call i8 @sqlite3GetVarint32(i8* %9061, i32* %9041), !dbg !217
  %9068 = zext i8 %9067 to i32, !dbg !218
  store i32 %9068, i32* %9048, align 4, !dbg !219
  br label %9069, !dbg !220

9069:                                             ; preds = %9066, %9064
  store i16 0, i16* %9052, align 2, !dbg !221
  %9070 = load i32, i32* %9050, align 4, !dbg !222
  %9071 = load i32, i32* %9041, align 4, !dbg !223
  %9072 = icmp ult i32 %9070, %9071, !dbg !224
  br i1 %9072, label %9074, label %9073, !dbg !225

9073:                                             ; preds = %9069
  store i8* %9061, i8** %9033, align 8, !dbg !226
  br label %9193, !dbg !227

9074:                                             ; preds = %9069
  store i8* null, i8** %9051, align 8, !dbg !228
  store i32 0, i32* %9050, align 4, !dbg !229
  br label %9100, !dbg !230

9075:                                             ; preds = %9058
  %9076 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 12, i32 0, !dbg !231
  %9077 = load %struct.BtCursor*, %struct.BtCursor** %9076, align 8, !dbg !232
  %9078 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9077), !dbg !233
  store i32 %9078, i32* %9049, align 4, !dbg !234
  %9079 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9077, i32* %9050), !dbg !235
  store i8* %9079, i8** %9051, align 8, !dbg !236
  br label %9059, !dbg !237

9080:                                             ; preds = %9058
  %9081 = icmp eq i8 %9043, 3, !dbg !238
  br i1 %9081, label %9082, label %9093, !dbg !239

9082:                                             ; preds = %9080
  %9083 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 10, !dbg !240
  %9084 = load i32, i32* %9083, align 4, !dbg !241
  %9085 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9084, !dbg !242
  %9086 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9085, i32 0, i32 1, !dbg !243
  %9087 = load i16, i16* %9086, align 2, !dbg !244
  %9088 = and i16 %9087, 16, !dbg !245
  %9089 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9085, i32 0, i32 4, !dbg !246
  %9090 = load i32, i32* %9089, align 4, !dbg !247
  store i32 %9090, i32* %9049, align 4, !dbg !248
  store i32 %9090, i32* %9050, align 4, !dbg !249
  %9091 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9085, i32 0, i32 5, !dbg !250
  %9092 = load i8*, i8** %9091, align 8, !dbg !251
  store i8* %9092, i8** %9051, align 8, !dbg !252
  br label %9059, !dbg !253

9093:                                             ; preds = %9080
  %9094 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 1, !dbg !254
  %9095 = load i16, i16* %9094, align 2, !dbg !254
  %9096 = and i16 %9095, 9216, !dbg !254
  %9097 = icmp ne i16 %9096, 0, !dbg !254
  br i1 %9097, label %9098, label %9099, !dbg !254

9098:                                             ; preds = %9093
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9037), !dbg !254
  br label %9281, !dbg !254

9099:                                             ; preds = %9093
  store i16 1, i16* %9094, align 2, !dbg !254
  br label %9281, !dbg !254

9100:                                             ; preds = %9074, %9025
  %9101 = load i16, i16* %9052, align 2, !dbg !255
  %9102 = icmp ule i16 %9101, 3, !dbg !256
  br i1 %9102, label %9185, label %9182, !dbg !257

9103:                                             ; preds = %9182, %9271
  %9104 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 1, !dbg !258
  %9105 = load i16, i16* %9104, align 2, !dbg !259
  %9106 = and i16 9216, %9105, !dbg !260
  %9107 = icmp eq i16 0, %9106, !dbg !261
  br i1 %9107, label %9108, label %9112, !dbg !262

9108:                                             ; preds = %9103
  %9109 = icmp ne i16 %9106, 0, !dbg !263
  br i1 %9109, label %9110, label %9111, !dbg !263

9110:                                             ; preds = %9108
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9037), !dbg !263
  br label %9112, !dbg !263

9111:                                             ; preds = %9108
  store i16 1, i16* %9104, align 2, !dbg !263
  br label %9112, !dbg !263

9112:                                             ; preds = %9110, %9111, %9103
  %9113 = load i32, i32* %9034, align 4, !dbg !264
  %9114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 23, i32 3, !dbg !265
  %9115 = load i32, i32* %9114, align 4, !dbg !266
  %9116 = load i32, i32* %9050, align 4, !dbg !267
  %9117 = getelementptr i32, i32* %9041, i32 4, !dbg !268
  %9118 = load i32, i32* %9117, align 4, !dbg !269
  %9119 = icmp sge i32 %9116, %9118, !dbg !270
  br i1 %9119, label %9120, label %9160, !dbg !271

9120:                                             ; preds = %9112
  %9121 = load i8*, i8** %9051, align 8, !dbg !272
  %9122 = ptrtoint i8* %9121 to i64, !dbg !273
  %9123 = getelementptr i32, i32* %9041, i32 3, !dbg !274
  %9124 = load i32, i32* %9123, align 4, !dbg !275
  %9125 = zext i32 %9124 to i64, !dbg !276
  %9126 = add i64 %9122, %9125, !dbg !277
  %9127 = inttoptr i64 %9126 to i8*, !dbg !278
  store i8* %9127, i8** %9033, align 8, !dbg !279
  %9128 = load i32, i32* %9034, align 4, !dbg !280
  %9129 = icmp ult i32 %9128, 12, !dbg !281
  br i1 %9129, label %9130, label %9132, !dbg !282

9130:                                             ; preds = %9120
  %9131 = call i32 @sqlite3VdbeSerialGet(i8* %9127, i32 %9128, %struct.sqlite3_value* %9037), !dbg !283
  br label %9281, !dbg !284

9132:                                             ; preds = %9120
  %9133 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %9133, align 2, !dbg !286
  %9134 = getelementptr i16, i16* %9133, i32 1, !dbg !287
  store i16 514, i16* %9134, align 2, !dbg !288
  %9135 = load i32, i32* %9034, align 4, !dbg !289
  %9136 = sub i32 %9135, 12, !dbg !290
  %9137 = lshr i32 %9136, 1, !dbg !291
  %9138 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 4, !dbg !292
  store i32 %9137, i32* %9138, align 4, !dbg !293
  %9139 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 2, !dbg !294
  store i8 %9028, i8* %9139, align 1, !dbg !295
  %9140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 5, !dbg !296
  %9141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 7, !dbg !297
  %9142 = load i32, i32* %9141, align 4, !dbg !298
  %9143 = add i32 %9137, 2, !dbg !299
  %9144 = icmp slt i32 %9142, %9143, !dbg !300
  br i1 %9144, label %9145, label %9147, !dbg !301

9145:                                             ; preds = %9132
  store i16 1, i16* %9104, align 2, !dbg !302
  %9146 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9037, i32 %9143, i32 0), !dbg !303
  br label %9150, !dbg !304

9147:                                             ; preds = %9132
  %9148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 6, !dbg !305
  %9149 = load i8*, i8** %9148, align 8, !dbg !306
  store i8* %9149, i8** %9140, align 8, !dbg !307
  br label %9150, !dbg !308

9150:                                             ; preds = %9147, %9145
  %9151 = zext i32 %9137 to i64, !dbg !309
  %9152 = load i8*, i8** %9140, align 8, !dbg !310
  %9153 = load i8*, i8** %9033, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9152, i8* %9153, i64 %9151, i1 false), !dbg !312
  %9154 = getelementptr i8, i8* %9152, i32 %9137, !dbg !313
  store i8 0, i8* %9154, align 1, !dbg !314
  %9155 = add i32 %9137, 1, !dbg !315
  %9156 = getelementptr i8, i8* %9152, i32 %9155, !dbg !316
  store i8 0, i8* %9156, align 1, !dbg !317
  %9157 = and i32 %9135, 1, !dbg !318
  %9158 = getelementptr i16, i16* %9133, i32 %9157, !dbg !319
  %9159 = load i16, i16* %9158, align 2, !dbg !320
  store i16 %9159, i16* %9104, align 2, !dbg !321
  br label %9281, !dbg !322

9160:                                             ; preds = %9112
  %9161 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 2, !dbg !323
  store i8 %9028, i8* %9161, align 1, !dbg !324
  %9162 = load i32, i32* %9034, align 4, !dbg !325
  %9163 = and i32 %9162, 1, !dbg !326
  %9164 = icmp eq i32 %9163, 0, !dbg !327
  %9165 = icmp sge i32 %9162, 12, !dbg !328
  %9166 = and i1 %9165, %9164, !dbg !329
  %9167 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9162), !dbg !330
  %9168 = icmp eq i32 %9167, 0, !dbg !331
  br i1 %9168, label %9180, label %9169, !dbg !332

9169:                                             ; preds = %9160
  %9170 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 12, i32 0, !dbg !333
  %9171 = load %struct.BtCursor*, %struct.BtCursor** %9170, align 8, !dbg !334
  %9172 = getelementptr i32, i32* %9041, i32 3, !dbg !335
  %9173 = load i32, i32* %9172, align 4, !dbg !336
  %9174 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9171, i32 %9173, i32 %9167, %struct.sqlite3_value* %9037), !dbg !337
  %9175 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 5, !dbg !338
  %9176 = load i8*, i8** %9175, align 8, !dbg !339
  %9177 = call i32 @sqlite3VdbeSerialGet(i8* %9176, i32 %9162, %struct.sqlite3_value* %9037), !dbg !340
  %9178 = load i16, i16* %9104, align 2, !dbg !341
  %9179 = and i16 %9178, -4097, !dbg !342
  store i16 %9179, i16* %9104, align 2, !dbg !343
  br label %9281, !dbg !344

9180:                                             ; preds = %9160
  %9181 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9162, %struct.sqlite3_value* %9037), !dbg !345
  br label %9281, !dbg !346

9182:                                             ; preds = %9100
  %9183 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 23, i32 3, !dbg !347
  %9184 = load i32, i32* %9183, align 4, !dbg !348
  store i32 %9184, i32* %9034, align 4, !dbg !349
  br label %9103, !dbg !350

9185:                                             ; preds = %9100
  %9186 = load i32, i32* %9048, align 4, !dbg !351
  %9187 = load i32, i32* %9041, align 4, !dbg !352
  %9188 = icmp ult i32 %9186, %9187, !dbg !353
  br i1 %9188, label %9189, label %9270, !dbg !354

9189:                                             ; preds = %9185
  %9190 = load i8*, i8** %9051, align 8, !dbg !355
  %9191 = icmp eq i8* %9190, null, !dbg !356
  br i1 %9191, label %9193, label %9192, !dbg !357

9192:                                             ; preds = %9189
  store i8* %9190, i8** %9033, align 8, !dbg !358
  br label %9193, !dbg !359

9193:                                             ; preds = %9192, %9189, %9073
  %9194 = alloca i32, align 4, !dbg !360
  %9195 = load i16, i16* %9052, align 2, !dbg !361
  %9196 = zext i16 %9195 to i32, !dbg !362
  store i32 %9196, i32* %9194, align 4, !dbg !363
  %9197 = alloca i64, align 8, !dbg !364
  %9198 = getelementptr i32, i32* %9041, i32 %9196, !dbg !365
  %9199 = load i32, i32* %9198, align 4, !dbg !366
  %9200 = zext i32 %9199 to i64, !dbg !367
  store i64 %9200, i64* %9197, align 4, !dbg !368
  %9201 = load i8*, i8** %9033, align 8, !dbg !369
  %9202 = load i32, i32* %9048, align 4, !dbg !370
  %9203 = alloca i8*, align 8, !dbg !371
  %9204 = getelementptr i8, i8* %9201, i32 %9202, !dbg !372
  store i8* %9204, i8** %9203, align 8, !dbg !373
  %9205 = load i32, i32* %9041, align 4, !dbg !374
  %9206 = getelementptr i8, i8* %9201, i32 %9205, !dbg !375
  br label %9207, !dbg !376

9207:                                             ; preds = %9214, %9193
  %9208 = load i32, i32* %9194, align 4, !dbg !377
  %9209 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9036, i32 0, i32 23, i32 %9208, !dbg !378
  %9210 = load i8*, i8** %9203, align 8, !dbg !379
  %9211 = load i8, i8* %9210, align 1, !dbg !380
  %9212 = zext i8 %9211 to i32, !dbg !381
  store i32 %9212, i32* %9034, align 4, !dbg !382
  store i32 %9212, i32* %9209, align 4, !dbg !383
  %9213 = icmp sgt i8 %9211, -1, !dbg !384
  br i1 %9213, label %9237, label %9228, !dbg !385

9214:                                             ; preds = %9228, %9237
  %9215 = load i32, i32* %9194, align 4, !dbg !386
  %9216 = add i32 %9215, 1, !dbg !387
  store i32 %9216, i32* %9194, align 4, !dbg !388
  %9217 = load i64, i64* %9197, align 4, !dbg !389
  %9218 = and i64 4294967295, %9217, !dbg !390
  %9219 = trunc i64 %9218 to i32, !dbg !391
  %9220 = getelementptr i32, i32* %9041, i32 %9216, !dbg !392
  store i32 %9219, i32* %9220, align 4, !dbg !393
  %9221 = load i32, i32* %9194, align 4, !dbg !394
  %9222 = icmp sle i32 %9221, 3, !dbg !395
  %9223 = load i8*, i8** %9203, align 8, !dbg !396
  %9224 = ptrtoint i8* %9223 to i64, !dbg !397
  %9225 = ptrtoint i8* %9206 to i64, !dbg !398
  %9226 = icmp ult i64 %9224, %9225, !dbg !399
  %9227 = and i1 %9222, %9226, !dbg !400
  br i1 %9227, label %9207, label %9246, !dbg !401

9228:                                             ; preds = %9207
  %9229 = load i8*, i8** %9203, align 8, !dbg !402
  %9230 = call i8 @sqlite3GetVarint32(i8* %9229, i32* %9034), !dbg !403
  %9231 = getelementptr i8, i8* %9229, i8 %9230, !dbg !404
  store i8* %9231, i8** %9203, align 8, !dbg !405
  %9232 = load i32, i32* %9034, align 4, !dbg !406
  store i32 %9232, i32* %9209, align 4, !dbg !407
  %9233 = load i64, i64* %9197, align 4, !dbg !408
  %9234 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9232), !dbg !409
  %9235 = zext i32 %9234 to i64, !dbg !410
  %9236 = add i64 %9233, %9235, !dbg !411
  store i64 %9236, i64* %9197, align 4, !dbg !412
  br label %9214, !dbg !413

9237:                                             ; preds = %9207
  %9238 = getelementptr i8, i8* %9210, i32 1, !dbg !414
  store i8* %9238, i8** %9203, align 8, !dbg !415
  %9239 = load i32, i32* %9034, align 4, !dbg !416
  %9240 = trunc i32 %9239 to i8, !dbg !417
  %9241 = getelementptr i8, i8* %4, i8 %9240, !dbg !418
  %9242 = load i8, i8* %9241, align 1, !dbg !419
  %9243 = zext i8 %9242 to i64, !dbg !420
  %9244 = load i64, i64* %9197, align 4, !dbg !421
  %9245 = add i64 %9244, %9243, !dbg !422
  store i64 %9245, i64* %9197, align 4, !dbg !423
  br label %9214, !dbg !424

9246:                                             ; preds = %9214
  %9247 = load i64, i64* %9197, align 4, !dbg !425
  %9248 = load i32, i32* %9049, align 4, !dbg !426
  %9249 = zext i32 %9248 to i64, !dbg !427
  %9250 = icmp uge i64 %9224, %9225, !dbg !428
  %9251 = icmp ugt i64 %9224, %9225, !dbg !429
  %9252 = icmp ne i64 %9247, %9249, !dbg !430
  %9253 = icmp ugt i64 %9247, %9249, !dbg !431
  %9254 = or i1 %9251, %9252, !dbg !432
  %9255 = and i1 %9250, %9254, !dbg !433
  %9256 = or i1 %9255, %9253, !dbg !434
  br i1 %9256, label %9257, label %9261, !dbg !435

9257:                                             ; preds = %9246
  %9258 = load i32, i32* %9041, align 4, !dbg !436
  %9259 = icmp eq i32 %9258, 0, !dbg !437
  br i1 %9259, label %9260, label %9261, !dbg !438

9260:                                             ; preds = %9257
  store i32 0, i32* %9194, align 4, !dbg !439
  store i8* %9206, i8** %9203, align 8, !dbg !440
  br label %9261, !dbg !441

9261:                                             ; preds = %9260, %9257, %9246
  %9262 = load i32, i32* %9194, align 4, !dbg !442
  %9263 = trunc i32 %9262 to i16, !dbg !443
  store i16 %9263, i16* %9052, align 2, !dbg !444
  %9264 = load i8*, i8** %9203, align 8, !dbg !445
  %9265 = ptrtoint i8* %9264 to i64, !dbg !446
  %9266 = load i8*, i8** %9033, align 8, !dbg !447
  %9267 = ptrtoint i8* %9266 to i64, !dbg !448
  %9268 = sub i64 %9265, %9267, !dbg !449
  %9269 = trunc i64 %9268 to i32, !dbg !450
  store i32 %9269, i32* %9048, align 4, !dbg !451
  br label %9271, !dbg !452

9270:                                             ; preds = %9185
  store i32 0, i32* %9034, align 4, !dbg !453
  br label %9271, !dbg !454

9271:                                             ; preds = %9261, %9270
  %9272 = load i16, i16* %9052, align 2, !dbg !455
  %9273 = icmp sle i16 %9272, 3, !dbg !456
  br i1 %9273, label %9274, label %9103, !dbg !457

9274:                                             ; preds = %9271
  %9275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9037, i32 0, i32 1, !dbg !458
  %9276 = load i16, i16* %9275, align 2, !dbg !458
  %9277 = and i16 %9276, 9216, !dbg !458
  %9278 = icmp ne i16 %9277, 0, !dbg !458
  br i1 %9278, label %9279, label %9280, !dbg !458

9279:                                             ; preds = %9274
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9037), !dbg !458
  br label %9281, !dbg !458

9280:                                             ; preds = %9274
  store i16 1, i16* %9275, align 2, !dbg !458
  br label %9281, !dbg !458

9281:                                             ; preds = %9279, %9280, %9150, %9130, %9169, %9180, %9098, %9099
  call void @llvm.stackrestore(i8* %9026), !dbg !459
  br label %9282, !dbg !74

9282:                                             ; preds = %9281, %14
  %9283 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 35, !dbg !1171
  %9284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9283, i32 0, i32 1, !dbg !1174
  %9285 = load i16, i16* %9284, align 2, !dbg !1175
  %9286 = and i16 %9285, 36, !dbg !1176
  %9287 = icmp ne i16 %9286, 0, !dbg !1177
  br i1 %9287, label %9288, label %9289, !dbg !1178

9288:                                             ; preds = %9282
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %9283), !dbg !1179
  br label %9289, !dbg !1180

9289:                                             ; preds = %9288, %9282, %14
  %9290 = call i8* @llvm.stacksave(), !dbg !167
  %9291 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %9292 = load i8, i8* %9291, align 1, !dbg !171
  %9293 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %9293, align 4, !dbg !173
  %9294 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %9295 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %9296 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9294, align 8, !dbg !176
  store %struct.VdbeCursor* %9296, %struct.VdbeCursor** %9295, align 8, !dbg !177
  %9297 = alloca i8*, align 8, !dbg !178
  %9298 = alloca i32, align 4, !dbg !179
  %9299 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9295, i32* %9293), !dbg !180
  %9300 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9295, align 8, !dbg !181
  %9301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 36, !dbg !182
  %9302 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 16, !dbg !183
  %9303 = load i16, i16* %9302, align 2, !dbg !184
  %9304 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 19, !dbg !185
  %9305 = load i32*, i32** %9304, align 8, !dbg !186
  %9306 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 0, !dbg !187
  %9307 = load i8, i8* %9306, align 1, !dbg !188
  %9308 = icmp ne i8 %9307, 3, !dbg !189
  %9309 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 2, !dbg !190
  %9310 = load i8, i8* %9309, align 1, !dbg !191
  %9311 = icmp ne i8 %9310, 0, !dbg !192
  %9312 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 14, !dbg !193
  %9313 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 21, !dbg !194
  %9314 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 22, !dbg !195
  %9315 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 20, !dbg !196
  %9316 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 17, !dbg !197
  %9317 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 9, !dbg !198
  %9318 = load i32, i32* %9317, align 4, !dbg !199
  %9319 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %9320 = load i32, i32* %9319, align 4, !dbg !201
  %9321 = icmp ne i32 %9318, %9320, !dbg !202
  br i1 %9321, label %9322, label %9364, !dbg !203

9322:                                             ; preds = %9289
  br i1 %9311, label %9344, label %9339, !dbg !204

9323:                                             ; preds = %9339, %9346
  %9324 = load i32, i32* %9319, align 4, !dbg !205
  store i32 %9324, i32* %9317, align 4, !dbg !206
  %9325 = load i8*, i8** %9315, align 8, !dbg !207
  %9326 = load i8, i8* %9325, align 1, !dbg !208
  %9327 = icmp sgt i8 %9326, -1, !dbg !211
  br i1 %9327, label %9328, label %9330, !dbg !212

9328:                                             ; preds = %9323
  %9329 = zext i8 %9326 to i32, !dbg !213
  store i32 %9329, i32* %9305, align 4, !dbg !214
  store i32 1, i32* %9312, align 4, !dbg !215
  br label %9333, !dbg !216

9330:                                             ; preds = %9323
  %9331 = call i8 @sqlite3GetVarint32(i8* %9325, i32* %9305), !dbg !217
  %9332 = zext i8 %9331 to i32, !dbg !218
  store i32 %9332, i32* %9312, align 4, !dbg !219
  br label %9333, !dbg !220

9333:                                             ; preds = %9330, %9328
  store i16 0, i16* %9316, align 2, !dbg !221
  %9334 = load i32, i32* %9314, align 4, !dbg !222
  %9335 = load i32, i32* %9305, align 4, !dbg !223
  %9336 = icmp ult i32 %9334, %9335, !dbg !224
  br i1 %9336, label %9338, label %9337, !dbg !225

9337:                                             ; preds = %9333
  store i8* %9325, i8** %9297, align 8, !dbg !226
  br label %9457, !dbg !227

9338:                                             ; preds = %9333
  store i8* null, i8** %9315, align 8, !dbg !228
  store i32 0, i32* %9314, align 4, !dbg !229
  br label %9364, !dbg !230

9339:                                             ; preds = %9322
  %9340 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 12, i32 0, !dbg !231
  %9341 = load %struct.BtCursor*, %struct.BtCursor** %9340, align 8, !dbg !232
  %9342 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9341), !dbg !233
  store i32 %9342, i32* %9313, align 4, !dbg !234
  %9343 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9341, i32* %9314), !dbg !235
  store i8* %9343, i8** %9315, align 8, !dbg !236
  br label %9323, !dbg !237

9344:                                             ; preds = %9322
  %9345 = icmp eq i8 %9307, 3, !dbg !238
  br i1 %9345, label %9346, label %9357, !dbg !239

9346:                                             ; preds = %9344
  %9347 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 10, !dbg !240
  %9348 = load i32, i32* %9347, align 4, !dbg !241
  %9349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9348, !dbg !242
  %9350 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9349, i32 0, i32 1, !dbg !243
  %9351 = load i16, i16* %9350, align 2, !dbg !244
  %9352 = and i16 %9351, 16, !dbg !245
  %9353 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9349, i32 0, i32 4, !dbg !246
  %9354 = load i32, i32* %9353, align 4, !dbg !247
  store i32 %9354, i32* %9313, align 4, !dbg !248
  store i32 %9354, i32* %9314, align 4, !dbg !249
  %9355 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9349, i32 0, i32 5, !dbg !250
  %9356 = load i8*, i8** %9355, align 8, !dbg !251
  store i8* %9356, i8** %9315, align 8, !dbg !252
  br label %9323, !dbg !253

9357:                                             ; preds = %9344
  %9358 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 1, !dbg !254
  %9359 = load i16, i16* %9358, align 2, !dbg !254
  %9360 = and i16 %9359, 9216, !dbg !254
  %9361 = icmp ne i16 %9360, 0, !dbg !254
  br i1 %9361, label %9362, label %9363, !dbg !254

9362:                                             ; preds = %9357
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9301), !dbg !254
  br label %9545, !dbg !254

9363:                                             ; preds = %9357
  store i16 1, i16* %9358, align 2, !dbg !254
  br label %9545, !dbg !254

9364:                                             ; preds = %9338, %9289
  %9365 = load i16, i16* %9316, align 2, !dbg !255
  %9366 = icmp ule i16 %9365, 4, !dbg !256
  br i1 %9366, label %9449, label %9446, !dbg !257

9367:                                             ; preds = %9446, %9535
  %9368 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 1, !dbg !258
  %9369 = load i16, i16* %9368, align 2, !dbg !259
  %9370 = and i16 9216, %9369, !dbg !260
  %9371 = icmp eq i16 0, %9370, !dbg !261
  br i1 %9371, label %9372, label %9376, !dbg !262

9372:                                             ; preds = %9367
  %9373 = icmp ne i16 %9370, 0, !dbg !263
  br i1 %9373, label %9374, label %9375, !dbg !263

9374:                                             ; preds = %9372
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9301), !dbg !263
  br label %9376, !dbg !263

9375:                                             ; preds = %9372
  store i16 1, i16* %9368, align 2, !dbg !263
  br label %9376, !dbg !263

9376:                                             ; preds = %9374, %9375, %9367
  %9377 = load i32, i32* %9298, align 4, !dbg !264
  %9378 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 23, i32 4, !dbg !265
  %9379 = load i32, i32* %9378, align 4, !dbg !266
  %9380 = load i32, i32* %9314, align 4, !dbg !267
  %9381 = getelementptr i32, i32* %9305, i32 5, !dbg !268
  %9382 = load i32, i32* %9381, align 4, !dbg !269
  %9383 = icmp sge i32 %9380, %9382, !dbg !270
  br i1 %9383, label %9384, label %9424, !dbg !271

9384:                                             ; preds = %9376
  %9385 = load i8*, i8** %9315, align 8, !dbg !272
  %9386 = ptrtoint i8* %9385 to i64, !dbg !273
  %9387 = getelementptr i32, i32* %9305, i32 4, !dbg !274
  %9388 = load i32, i32* %9387, align 4, !dbg !275
  %9389 = zext i32 %9388 to i64, !dbg !276
  %9390 = add i64 %9386, %9389, !dbg !277
  %9391 = inttoptr i64 %9390 to i8*, !dbg !278
  store i8* %9391, i8** %9297, align 8, !dbg !279
  %9392 = load i32, i32* %9298, align 4, !dbg !280
  %9393 = icmp ult i32 %9392, 12, !dbg !281
  br i1 %9393, label %9394, label %9396, !dbg !282

9394:                                             ; preds = %9384
  %9395 = call i32 @sqlite3VdbeSerialGet(i8* %9391, i32 %9392, %struct.sqlite3_value* %9301), !dbg !283
  br label %9545, !dbg !284

9396:                                             ; preds = %9384
  %9397 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %9397, align 2, !dbg !286
  %9398 = getelementptr i16, i16* %9397, i32 1, !dbg !287
  store i16 514, i16* %9398, align 2, !dbg !288
  %9399 = load i32, i32* %9298, align 4, !dbg !289
  %9400 = sub i32 %9399, 12, !dbg !290
  %9401 = lshr i32 %9400, 1, !dbg !291
  %9402 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 4, !dbg !292
  store i32 %9401, i32* %9402, align 4, !dbg !293
  %9403 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 2, !dbg !294
  store i8 %9292, i8* %9403, align 1, !dbg !295
  %9404 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 5, !dbg !296
  %9405 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 7, !dbg !297
  %9406 = load i32, i32* %9405, align 4, !dbg !298
  %9407 = add i32 %9401, 2, !dbg !299
  %9408 = icmp slt i32 %9406, %9407, !dbg !300
  br i1 %9408, label %9409, label %9411, !dbg !301

9409:                                             ; preds = %9396
  store i16 1, i16* %9368, align 2, !dbg !302
  %9410 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9301, i32 %9407, i32 0), !dbg !303
  br label %9414, !dbg !304

9411:                                             ; preds = %9396
  %9412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 6, !dbg !305
  %9413 = load i8*, i8** %9412, align 8, !dbg !306
  store i8* %9413, i8** %9404, align 8, !dbg !307
  br label %9414, !dbg !308

9414:                                             ; preds = %9411, %9409
  %9415 = zext i32 %9401 to i64, !dbg !309
  %9416 = load i8*, i8** %9404, align 8, !dbg !310
  %9417 = load i8*, i8** %9297, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9416, i8* %9417, i64 %9415, i1 false), !dbg !312
  %9418 = getelementptr i8, i8* %9416, i32 %9401, !dbg !313
  store i8 0, i8* %9418, align 1, !dbg !314
  %9419 = add i32 %9401, 1, !dbg !315
  %9420 = getelementptr i8, i8* %9416, i32 %9419, !dbg !316
  store i8 0, i8* %9420, align 1, !dbg !317
  %9421 = and i32 %9399, 1, !dbg !318
  %9422 = getelementptr i16, i16* %9397, i32 %9421, !dbg !319
  %9423 = load i16, i16* %9422, align 2, !dbg !320
  store i16 %9423, i16* %9368, align 2, !dbg !321
  br label %9545, !dbg !322

9424:                                             ; preds = %9376
  %9425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 2, !dbg !323
  store i8 %9292, i8* %9425, align 1, !dbg !324
  %9426 = load i32, i32* %9298, align 4, !dbg !325
  %9427 = and i32 %9426, 1, !dbg !326
  %9428 = icmp eq i32 %9427, 0, !dbg !327
  %9429 = icmp sge i32 %9426, 12, !dbg !328
  %9430 = and i1 %9429, %9428, !dbg !329
  %9431 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9426), !dbg !330
  %9432 = icmp eq i32 %9431, 0, !dbg !331
  br i1 %9432, label %9444, label %9433, !dbg !332

9433:                                             ; preds = %9424
  %9434 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 12, i32 0, !dbg !333
  %9435 = load %struct.BtCursor*, %struct.BtCursor** %9434, align 8, !dbg !334
  %9436 = getelementptr i32, i32* %9305, i32 4, !dbg !335
  %9437 = load i32, i32* %9436, align 4, !dbg !336
  %9438 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9435, i32 %9437, i32 %9431, %struct.sqlite3_value* %9301), !dbg !337
  %9439 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 5, !dbg !338
  %9440 = load i8*, i8** %9439, align 8, !dbg !339
  %9441 = call i32 @sqlite3VdbeSerialGet(i8* %9440, i32 %9426, %struct.sqlite3_value* %9301), !dbg !340
  %9442 = load i16, i16* %9368, align 2, !dbg !341
  %9443 = and i16 %9442, -4097, !dbg !342
  store i16 %9443, i16* %9368, align 2, !dbg !343
  br label %9545, !dbg !344

9444:                                             ; preds = %9424
  %9445 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9426, %struct.sqlite3_value* %9301), !dbg !345
  br label %9545, !dbg !346

9446:                                             ; preds = %9364
  %9447 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 23, i32 4, !dbg !347
  %9448 = load i32, i32* %9447, align 4, !dbg !348
  store i32 %9448, i32* %9298, align 4, !dbg !349
  br label %9367, !dbg !350

9449:                                             ; preds = %9364
  %9450 = load i32, i32* %9312, align 4, !dbg !351
  %9451 = load i32, i32* %9305, align 4, !dbg !352
  %9452 = icmp ult i32 %9450, %9451, !dbg !353
  br i1 %9452, label %9453, label %9534, !dbg !354

9453:                                             ; preds = %9449
  %9454 = load i8*, i8** %9315, align 8, !dbg !355
  %9455 = icmp eq i8* %9454, null, !dbg !356
  br i1 %9455, label %9457, label %9456, !dbg !357

9456:                                             ; preds = %9453
  store i8* %9454, i8** %9297, align 8, !dbg !358
  br label %9457, !dbg !359

9457:                                             ; preds = %9456, %9453, %9337
  %9458 = alloca i32, align 4, !dbg !360
  %9459 = load i16, i16* %9316, align 2, !dbg !361
  %9460 = zext i16 %9459 to i32, !dbg !362
  store i32 %9460, i32* %9458, align 4, !dbg !363
  %9461 = alloca i64, align 8, !dbg !364
  %9462 = getelementptr i32, i32* %9305, i32 %9460, !dbg !365
  %9463 = load i32, i32* %9462, align 4, !dbg !366
  %9464 = zext i32 %9463 to i64, !dbg !367
  store i64 %9464, i64* %9461, align 4, !dbg !368
  %9465 = load i8*, i8** %9297, align 8, !dbg !369
  %9466 = load i32, i32* %9312, align 4, !dbg !370
  %9467 = alloca i8*, align 8, !dbg !371
  %9468 = getelementptr i8, i8* %9465, i32 %9466, !dbg !372
  store i8* %9468, i8** %9467, align 8, !dbg !373
  %9469 = load i32, i32* %9305, align 4, !dbg !374
  %9470 = getelementptr i8, i8* %9465, i32 %9469, !dbg !375
  br label %9471, !dbg !376

9471:                                             ; preds = %9478, %9457
  %9472 = load i32, i32* %9458, align 4, !dbg !377
  %9473 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9300, i32 0, i32 23, i32 %9472, !dbg !378
  %9474 = load i8*, i8** %9467, align 8, !dbg !379
  %9475 = load i8, i8* %9474, align 1, !dbg !380
  %9476 = zext i8 %9475 to i32, !dbg !381
  store i32 %9476, i32* %9298, align 4, !dbg !382
  store i32 %9476, i32* %9473, align 4, !dbg !383
  %9477 = icmp sgt i8 %9475, -1, !dbg !384
  br i1 %9477, label %9501, label %9492, !dbg !385

9478:                                             ; preds = %9492, %9501
  %9479 = load i32, i32* %9458, align 4, !dbg !386
  %9480 = add i32 %9479, 1, !dbg !387
  store i32 %9480, i32* %9458, align 4, !dbg !388
  %9481 = load i64, i64* %9461, align 4, !dbg !389
  %9482 = and i64 4294967295, %9481, !dbg !390
  %9483 = trunc i64 %9482 to i32, !dbg !391
  %9484 = getelementptr i32, i32* %9305, i32 %9480, !dbg !392
  store i32 %9483, i32* %9484, align 4, !dbg !393
  %9485 = load i32, i32* %9458, align 4, !dbg !394
  %9486 = icmp sle i32 %9485, 4, !dbg !395
  %9487 = load i8*, i8** %9467, align 8, !dbg !396
  %9488 = ptrtoint i8* %9487 to i64, !dbg !397
  %9489 = ptrtoint i8* %9470 to i64, !dbg !398
  %9490 = icmp ult i64 %9488, %9489, !dbg !399
  %9491 = and i1 %9486, %9490, !dbg !400
  br i1 %9491, label %9471, label %9510, !dbg !401

9492:                                             ; preds = %9471
  %9493 = load i8*, i8** %9467, align 8, !dbg !402
  %9494 = call i8 @sqlite3GetVarint32(i8* %9493, i32* %9298), !dbg !403
  %9495 = getelementptr i8, i8* %9493, i8 %9494, !dbg !404
  store i8* %9495, i8** %9467, align 8, !dbg !405
  %9496 = load i32, i32* %9298, align 4, !dbg !406
  store i32 %9496, i32* %9473, align 4, !dbg !407
  %9497 = load i64, i64* %9461, align 4, !dbg !408
  %9498 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9496), !dbg !409
  %9499 = zext i32 %9498 to i64, !dbg !410
  %9500 = add i64 %9497, %9499, !dbg !411
  store i64 %9500, i64* %9461, align 4, !dbg !412
  br label %9478, !dbg !413

9501:                                             ; preds = %9471
  %9502 = getelementptr i8, i8* %9474, i32 1, !dbg !414
  store i8* %9502, i8** %9467, align 8, !dbg !415
  %9503 = load i32, i32* %9298, align 4, !dbg !416
  %9504 = trunc i32 %9503 to i8, !dbg !417
  %9505 = getelementptr i8, i8* %4, i8 %9504, !dbg !418
  %9506 = load i8, i8* %9505, align 1, !dbg !419
  %9507 = zext i8 %9506 to i64, !dbg !420
  %9508 = load i64, i64* %9461, align 4, !dbg !421
  %9509 = add i64 %9508, %9507, !dbg !422
  store i64 %9509, i64* %9461, align 4, !dbg !423
  br label %9478, !dbg !424

9510:                                             ; preds = %9478
  %9511 = load i64, i64* %9461, align 4, !dbg !425
  %9512 = load i32, i32* %9313, align 4, !dbg !426
  %9513 = zext i32 %9512 to i64, !dbg !427
  %9514 = icmp uge i64 %9488, %9489, !dbg !428
  %9515 = icmp ugt i64 %9488, %9489, !dbg !429
  %9516 = icmp ne i64 %9511, %9513, !dbg !430
  %9517 = icmp ugt i64 %9511, %9513, !dbg !431
  %9518 = or i1 %9515, %9516, !dbg !432
  %9519 = and i1 %9514, %9518, !dbg !433
  %9520 = or i1 %9519, %9517, !dbg !434
  br i1 %9520, label %9521, label %9525, !dbg !435

9521:                                             ; preds = %9510
  %9522 = load i32, i32* %9305, align 4, !dbg !436
  %9523 = icmp eq i32 %9522, 0, !dbg !437
  br i1 %9523, label %9524, label %9525, !dbg !438

9524:                                             ; preds = %9521
  store i32 0, i32* %9458, align 4, !dbg !439
  store i8* %9470, i8** %9467, align 8, !dbg !440
  br label %9525, !dbg !441

9525:                                             ; preds = %9524, %9521, %9510
  %9526 = load i32, i32* %9458, align 4, !dbg !442
  %9527 = trunc i32 %9526 to i16, !dbg !443
  store i16 %9527, i16* %9316, align 2, !dbg !444
  %9528 = load i8*, i8** %9467, align 8, !dbg !445
  %9529 = ptrtoint i8* %9528 to i64, !dbg !446
  %9530 = load i8*, i8** %9297, align 8, !dbg !447
  %9531 = ptrtoint i8* %9530 to i64, !dbg !448
  %9532 = sub i64 %9529, %9531, !dbg !449
  %9533 = trunc i64 %9532 to i32, !dbg !450
  store i32 %9533, i32* %9312, align 4, !dbg !451
  br label %9535, !dbg !452

9534:                                             ; preds = %9449
  store i32 0, i32* %9298, align 4, !dbg !453
  br label %9535, !dbg !454

9535:                                             ; preds = %9525, %9534
  %9536 = load i16, i16* %9316, align 2, !dbg !455
  %9537 = icmp sle i16 %9536, 4, !dbg !456
  br i1 %9537, label %9538, label %9367, !dbg !457

9538:                                             ; preds = %9535
  %9539 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9301, i32 0, i32 1, !dbg !458
  %9540 = load i16, i16* %9539, align 2, !dbg !458
  %9541 = and i16 %9540, 9216, !dbg !458
  %9542 = icmp ne i16 %9541, 0, !dbg !458
  br i1 %9542, label %9543, label %9544, !dbg !458

9543:                                             ; preds = %9538
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9301), !dbg !458
  br label %9545, !dbg !458

9544:                                             ; preds = %9538
  store i16 1, i16* %9539, align 2, !dbg !458
  br label %9545, !dbg !458

9545:                                             ; preds = %9543, %9544, %9414, %9394, %9433, %9444, %9362, %9363
  call void @llvm.stackrestore(i8* %9290), !dbg !459
  br label %9546, !dbg !74

9546:                                             ; preds = %9545, %14
  %9547 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 36, !dbg !1171
  %9548 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9547, i32 0, i32 1, !dbg !1174
  %9549 = load i16, i16* %9548, align 2, !dbg !1175
  %9550 = and i16 %9549, 36, !dbg !1176
  %9551 = icmp ne i16 %9550, 0, !dbg !1177
  br i1 %9551, label %9552, label %9553, !dbg !1178

9552:                                             ; preds = %9546
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %9547), !dbg !1179
  br label %9553, !dbg !1180

9553:                                             ; preds = %9552, %9546, %14
  %9554 = call i8* @llvm.stacksave(), !dbg !1283
  %9555 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 36, !dbg !1286
  %9556 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 35, !dbg !1287
  %9557 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !1288
  %9558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9557, i32 0, i32 1, !dbg !1289
  %9559 = alloca i16, align 2, !dbg !1290
  %9560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9555, i32 0, i32 1, !dbg !1291
  %9561 = load i16, i16* %9560, align 2, !dbg !1294
  %9562 = and i16 %9561, 44, !dbg !1295
  %9563 = icmp ne i16 %9562, 0, !dbg !1296
  br i1 %9563, label %9564, label %9565, !dbg !1297

9564:                                             ; preds = %9553
  store i16 %9562, i16* %9559, align 2, !dbg !1290
  br label %9571, !dbg !1298

9565:                                             ; preds = %9553
  %9566 = and i16 %9561, 18, !dbg !1290
  %9567 = icmp ne i16 %9566, 0, !dbg !1299
  br i1 %9567, label %9568, label %9570, !dbg !1300

9568:                                             ; preds = %9565
  %9569 = call i16 @computeNumericType(%struct.sqlite3_value* %9555), !dbg !1301
  br label %9571, !dbg !1302

9570:                                             ; preds = %9565
  store i16 0, i16* %9559, align 2, !dbg !1290
  br label %9571, !dbg !1303

9571:                                             ; preds = %9568, %9570, %9564
  %9572 = load i16, i16* %9559, align 2, !dbg !1290
  %9573 = alloca i16, align 2, !dbg !1304
  %9574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9556, i32 0, i32 1, !dbg !1291
  %9575 = load i16, i16* %9574, align 2, !dbg !1294
  %9576 = and i16 %9575, 44, !dbg !1295
  %9577 = icmp ne i16 %9576, 0, !dbg !1296
  br i1 %9577, label %9578, label %9579, !dbg !1297

9578:                                             ; preds = %9571
  store i16 %9576, i16* %9573, align 2, !dbg !1304
  br label %9585, !dbg !1298

9579:                                             ; preds = %9571
  %9580 = and i16 %9575, 18, !dbg !1304
  %9581 = icmp ne i16 %9580, 0, !dbg !1299
  br i1 %9581, label %9582, label %9584, !dbg !1300

9582:                                             ; preds = %9579
  %9583 = call i16 @computeNumericType(%struct.sqlite3_value* %9556), !dbg !1301
  br label %9585, !dbg !1302

9584:                                             ; preds = %9579
  store i16 0, i16* %9573, align 2, !dbg !1304
  br label %9585, !dbg !1303

9585:                                             ; preds = %9582, %9584, %9578
  %9586 = load i16, i16* %9573, align 2, !dbg !1304
  %9587 = load i16, i16* %9560, align 2, !dbg !1305
  %9588 = load i16, i16* %9574, align 2, !dbg !1306
  %9589 = or i16 %9587, %9588, !dbg !1307
  %9590 = and i16 %9572, %9586, !dbg !1308
  %9591 = and i16 %9590, 4, !dbg !1309
  %9592 = icmp ne i16 %9591, 0, !dbg !1310
  br i1 %9592, label %9593, label %9610, !dbg !1311

9593:                                             ; preds = %9585
  %9594 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9555, i32 0, i32 0, !dbg !1312
  %9595 = bitcast %union.MemValue* %9594 to i64*, !dbg !1313
  %9596 = load i64, i64* %9595, align 4, !dbg !1314
  %9597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9556, i32 0, i32 0, !dbg !1315
  %9598 = bitcast %union.MemValue* %9597 to i64*, !dbg !1316
  %9599 = load i64, i64* %9598, align 4, !dbg !1317
  %9600 = alloca i64, align 8, !dbg !1318
  store i64 %9599, i64* %9600, align 4, !dbg !1319
  %9601 = call i32 @sqlite3SubInt64(i64* %9600, i64 %9596), !dbg !1320
  %9602 = icmp eq i32 %9601, 0, !dbg !1321
  br i1 %9602, label %9603, label %9613, !dbg !1322

9603:                                             ; preds = %9593
  %9604 = load i64, i64* %9600, align 4, !dbg !1323
  %9605 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9557, i32 0, i32 0, !dbg !1324
  %9606 = bitcast %union.MemValue* %9605 to i64*, !dbg !1325
  store i64 %9604, i64* %9606, align 4, !dbg !1326
  %9607 = load i16, i16* %9558, align 2, !dbg !1327
  %9608 = and i16 %9607, 15936, !dbg !1327
  %9609 = or i16 %9608, 4, !dbg !1327
  store i16 %9609, i16* %9558, align 2, !dbg !1327
  br label %9631, !dbg !1328

9610:                                             ; preds = %9585
  %9611 = and i16 %9589, 1, !dbg !1329
  %9612 = icmp ne i16 %9611, 0, !dbg !1330
  br i1 %9612, label %9625, label %9613, !dbg !1331

9613:                                             ; preds = %9610, %9593
  %9614 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %9555), !dbg !1332
  %9615 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %9556), !dbg !1333
  %9616 = fsub double %9615, %9614, !dbg !1334
  %9617 = call i32 @sqlite3IsNaN(double %9616), !dbg !1335
  %9618 = icmp ne i32 %9617, 0, !dbg !1336
  br i1 %9618, label %9625, label %9619, !dbg !1337

9619:                                             ; preds = %9613
  %9620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9557, i32 0, i32 0, !dbg !1338
  %9621 = bitcast %union.MemValue* %9620 to double*, !dbg !1339
  store double %9616, double* %9621, align 8, !dbg !1340
  %9622 = load i16, i16* %9558, align 2, !dbg !1327
  %9623 = and i16 %9622, 15936, !dbg !1327
  %9624 = or i16 %9623, 8, !dbg !1327
  store i16 %9624, i16* %9558, align 2, !dbg !1327
  br label %9631, !dbg !1341

9625:                                             ; preds = %9610, %9613
  %9626 = load i16, i16* %9558, align 2, !dbg !1342
  %9627 = and i16 %9626, 9216, !dbg !1342
  %9628 = icmp ne i16 %9627, 0, !dbg !1342
  br i1 %9628, label %9629, label %9630, !dbg !1342

9629:                                             ; preds = %9625
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9557), !dbg !1342
  br label %9631, !dbg !1342

9630:                                             ; preds = %9625
  store i16 1, i16* %9558, align 2, !dbg !1342
  br label %9631, !dbg !1342

9631:                                             ; preds = %9629, %9630, %9603, %9619
  call void @llvm.stackrestore(i8* %9554), !dbg !1343
  br label %9632, !dbg !74

9632:                                             ; preds = %9631, %14
  %9633 = call i8* @llvm.stacksave(), !dbg !1344
  %9634 = alloca i32, align 8, !dbg !1347
  store i32 0, i32* %9634, align 4, !dbg !1348
  %9635 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 78, i32 1, !dbg !1349
  %9636 = load i8, i8* %9635, align 1, !dbg !1350
  %9637 = icmp eq i8 %9636, -8, !dbg !1351
  br i1 %9637, label %9638, label %9660, !dbg !1352

9638:                                             ; preds = %9632
  %9639 = alloca %struct.sqlite3_context*, align 8, !dbg !1353
  %9640 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1354
  %9641 = bitcast i8* %9640 to %struct.sqlite3_context*, !dbg !1355
  store %struct.sqlite3_context* %9641, %struct.sqlite3_context** %9639, align 8, !dbg !1356
  %9642 = ptrtoint %struct.sqlite3_context* %9641 to i64, !dbg !1357
  %9643 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 0, !dbg !1358
  %9644 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 1, !dbg !1359
  %9645 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 2, !dbg !1360
  %9646 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 3, !dbg !1361
  %9647 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 4, !dbg !1362
  %9648 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 5, !dbg !1363
  %9649 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 6, !dbg !1364
  %9650 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 7, !dbg !1365
  %9651 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9641, i32 0, i32 8, !dbg !1366
  %9652 = bitcast [1 x %struct.sqlite3_value*]* %9651 to %struct.sqlite3_value**, !dbg !1367
  %9653 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 78, i32 6, i32 0, !dbg !1368
  %9654 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %9652, i32 1, !dbg !1369
  %9655 = bitcast %struct.sqlite3_value** %9654 to %struct.sqlite3_value*, !dbg !1370
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %9655, %struct.sqlite3* %13, i16 1), !dbg !1371
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %9645, align 8, !dbg !1372
  store %struct.sqlite3_value* %9655, %struct.sqlite3_value** %9643, align 8, !dbg !1373
  %9656 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 78, !dbg !1374
  %9657 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9656, i32 0, i32 6, !dbg !1375
  %9658 = bitcast %union.p4union* %9657 to %struct.FuncDef**, !dbg !1376
  %9659 = load %struct.FuncDef*, %struct.FuncDef** %9658, align 8, !dbg !1377
  store %struct.FuncDef* %9659, %struct.FuncDef** %9644, align 8, !dbg !1378
  store i32 78, i32* %9647, align 4, !dbg !1379
  store %struct.Vdbe* %0, %struct.Vdbe** %9646, align 8, !dbg !1380
  store i8 0, i8* %9649, align 1, !dbg !1381
  store i32 0, i32* %9648, align 4, !dbg !1382
  store i8 1, i8* %9650, align 1, !dbg !1383
  store i8 -16, i8* %9635, align 1, !dbg !1384
  store i8* %9640, i8** %9653, align 8, !dbg !1385
  br label %9660, !dbg !1386

9660:                                             ; preds = %9638, %9632
  %9661 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 78, i32 6, i32 0, !dbg !1387
  %9662 = bitcast i8** %9661 to %struct.sqlite3_context**, !dbg !1388
  %9663 = load %struct.sqlite3_context*, %struct.sqlite3_context** %9662, align 8, !dbg !1389
  %9664 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 0, !dbg !1390
  %9665 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 1, !dbg !1391
  %9666 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 5, !dbg !1392
  %9667 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 6, !dbg !1393
  %9668 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 7, !dbg !1394
  %9669 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 8, !dbg !1395
  %9670 = bitcast [1 x %struct.sqlite3_value*]* %9669 to %struct.sqlite3_value**, !dbg !1396
  %9671 = alloca i32, align 8, !dbg !1397
  %9672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 4, !dbg !1398
  %9673 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %9663, i32 0, i32 2, !dbg !1399
  %9674 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9673, align 8, !dbg !1400
  %9675 = icmp ne %struct.sqlite3_value* %9674, %9672, !dbg !1401
  br i1 %9675, label %9676, label %9689, !dbg !1402

9676:                                             ; preds = %9660
  store %struct.sqlite3_value* %9672, %struct.sqlite3_value** %9673, align 8, !dbg !1403
  %9677 = load i8, i8* %9668, align 1, !dbg !1404
  %9678 = zext i8 %9677 to i32, !dbg !1405
  %9679 = add i32 %9678, -1, !dbg !1406
  %9680 = alloca i32, align 8, !dbg !1407
  store i32 %9679, i32* %9680, align 4, !dbg !1408
  br label %9686, !dbg !1409

9681:                                             ; preds = %9686
  %9682 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %9670, i32 %9687, !dbg !1410
  %9683 = add i32 %9687, 34, !dbg !1411
  %9684 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9683, !dbg !1412
  store %struct.sqlite3_value* %9684, %struct.sqlite3_value** %9682, align 8, !dbg !1413
  %9685 = add i32 %9687, -1, !dbg !1414
  store i32 %9685, i32* %9680, align 4, !dbg !1415
  br label %9686, !dbg !1416

9686:                                             ; preds = %9681, %9676
  %9687 = load i32, i32* %9680, align 4, !dbg !1417
  %9688 = icmp sge i32 %9687, 0, !dbg !1418
  br i1 %9688, label %9681, label %9689, !dbg !1419

9689:                                             ; preds = %9686, %9660
  %9690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9672, i32 0, i32 4, !dbg !1420
  %9691 = load i32, i32* %9690, align 4, !dbg !1421
  %9692 = add i32 %9691, 1, !dbg !1422
  store i32 %9692, i32* %9690, align 4, !dbg !1423
  %9693 = load %struct.FuncDef*, %struct.FuncDef** %9665, align 8, !dbg !1424
  %9694 = load i8, i8* %9668, align 1, !dbg !1425
  %9695 = zext i8 %9694 to i32, !dbg !1426
  %9696 = getelementptr %struct.FuncDef, %struct.FuncDef* %9693, i32 0, i32 4, !dbg !1427
  %9697 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %9696, align 8, !dbg !1428
  call void %9697(%struct.sqlite3_context* %9663, i32 %9695, %struct.sqlite3_value** %9670), !dbg !1429
  %9698 = load i32, i32* %9666, align 4, !dbg !1430
  %9699 = icmp ne i32 %9698, 0, !dbg !1431
  br i1 %9699, label %9700, label %9715, !dbg !1432

9700:                                             ; preds = %9689
  %9701 = icmp sgt i32 %9698, 0, !dbg !1433
  br i1 %9701, label %9702, label %9706, !dbg !1434

9702:                                             ; preds = %9700
  %9703 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9664, align 8, !dbg !1435
  %9704 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %9703), !dbg !1436
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %9704), !dbg !1437
  %9705 = load i32, i32* %9666, align 4, !dbg !1438
  store i32 %9705, i32* %9634, align 4, !dbg !1439
  br label %9706, !dbg !1440

9706:                                             ; preds = %9702, %9700
  %9707 = load i8, i8* %9667, align 1, !dbg !1441
  %9708 = icmp ne i8 %9707, 0, !dbg !1442
  br i1 %9708, label %9709, label %9711, !dbg !1443

9709:                                             ; preds = %9706
  store i32 36, i32* %9671, align 4, !dbg !1444
  %9710 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 36, !dbg !1445
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %9710, i64 1), !dbg !1446
  store i8 0, i8* %9667, align 1, !dbg !1447
  br label %9711, !dbg !1448

9711:                                             ; preds = %9709, %9706
  %9712 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9664, align 8, !dbg !1449
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %9712), !dbg !1450
  %9713 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9712, i32 0, i32 1, !dbg !1451
  store i16 1, i16* %9713, align 2, !dbg !1452
  store i32 0, i32* %9666, align 4, !dbg !1453
  %9714 = load i32, i32* %9634, align 4, !dbg !1454
  br label %9715, !dbg !1455

9715:                                             ; preds = %9689, %9711
  call void @llvm.stackrestore(i8* %9633), !dbg !1456
  br label %9716, !dbg !74

9716:                                             ; preds = %9715, %14
  %9717 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1457
  %9718 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %9717, i32 0), !dbg !1460
  %9719 = icmp ne i32 %9718, 0, !dbg !1461
  br i1 %9719, label %10489, label %9720, !dbg !1462

9720:                                             ; preds = %9716, %14
  %9721 = call i8* @llvm.stacksave(), !dbg !167
  %9722 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %9723 = load i8, i8* %9722, align 1, !dbg !171
  %9724 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %9724, align 4, !dbg !173
  %9725 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %9726 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %9727 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9725, align 8, !dbg !176
  store %struct.VdbeCursor* %9727, %struct.VdbeCursor** %9726, align 8, !dbg !177
  %9728 = alloca i8*, align 8, !dbg !178
  %9729 = alloca i32, align 4, !dbg !179
  %9730 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9726, i32* %9724), !dbg !180
  %9731 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9726, align 8, !dbg !181
  %9732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !182
  %9733 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 16, !dbg !183
  %9734 = load i16, i16* %9733, align 2, !dbg !184
  %9735 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 19, !dbg !185
  %9736 = load i32*, i32** %9735, align 8, !dbg !186
  %9737 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 0, !dbg !187
  %9738 = load i8, i8* %9737, align 1, !dbg !188
  %9739 = icmp ne i8 %9738, 3, !dbg !189
  %9740 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 2, !dbg !190
  %9741 = load i8, i8* %9740, align 1, !dbg !191
  %9742 = icmp ne i8 %9741, 0, !dbg !192
  %9743 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 14, !dbg !193
  %9744 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 21, !dbg !194
  %9745 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 22, !dbg !195
  %9746 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 20, !dbg !196
  %9747 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 17, !dbg !197
  %9748 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 9, !dbg !198
  %9749 = load i32, i32* %9748, align 4, !dbg !199
  %9750 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %9751 = load i32, i32* %9750, align 4, !dbg !201
  %9752 = icmp ne i32 %9749, %9751, !dbg !202
  br i1 %9752, label %9753, label %9795, !dbg !203

9753:                                             ; preds = %9720
  br i1 %9742, label %9775, label %9770, !dbg !204

9754:                                             ; preds = %9770, %9777
  %9755 = load i32, i32* %9750, align 4, !dbg !205
  store i32 %9755, i32* %9748, align 4, !dbg !206
  %9756 = load i8*, i8** %9746, align 8, !dbg !207
  %9757 = load i8, i8* %9756, align 1, !dbg !208
  %9758 = icmp sgt i8 %9757, -1, !dbg !211
  br i1 %9758, label %9759, label %9761, !dbg !212

9759:                                             ; preds = %9754
  %9760 = zext i8 %9757 to i32, !dbg !213
  store i32 %9760, i32* %9736, align 4, !dbg !214
  store i32 1, i32* %9743, align 4, !dbg !215
  br label %9764, !dbg !216

9761:                                             ; preds = %9754
  %9762 = call i8 @sqlite3GetVarint32(i8* %9756, i32* %9736), !dbg !217
  %9763 = zext i8 %9762 to i32, !dbg !218
  store i32 %9763, i32* %9743, align 4, !dbg !219
  br label %9764, !dbg !220

9764:                                             ; preds = %9761, %9759
  store i16 0, i16* %9747, align 2, !dbg !221
  %9765 = load i32, i32* %9745, align 4, !dbg !222
  %9766 = load i32, i32* %9736, align 4, !dbg !223
  %9767 = icmp ult i32 %9765, %9766, !dbg !224
  br i1 %9767, label %9769, label %9768, !dbg !225

9768:                                             ; preds = %9764
  store i8* %9756, i8** %9728, align 8, !dbg !226
  br label %9886, !dbg !227

9769:                                             ; preds = %9764
  store i8* null, i8** %9746, align 8, !dbg !228
  store i32 0, i32* %9745, align 4, !dbg !229
  br label %9795, !dbg !230

9770:                                             ; preds = %9753
  %9771 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 12, i32 0, !dbg !231
  %9772 = load %struct.BtCursor*, %struct.BtCursor** %9771, align 8, !dbg !232
  %9773 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9772), !dbg !233
  store i32 %9773, i32* %9744, align 4, !dbg !234
  %9774 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9772, i32* %9745), !dbg !235
  store i8* %9774, i8** %9746, align 8, !dbg !236
  br label %9754, !dbg !237

9775:                                             ; preds = %9753
  %9776 = icmp eq i8 %9738, 3, !dbg !238
  br i1 %9776, label %9777, label %9788, !dbg !239

9777:                                             ; preds = %9775
  %9778 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 10, !dbg !240
  %9779 = load i32, i32* %9778, align 4, !dbg !241
  %9780 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9779, !dbg !242
  %9781 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9780, i32 0, i32 1, !dbg !243
  %9782 = load i16, i16* %9781, align 2, !dbg !244
  %9783 = and i16 %9782, 16, !dbg !245
  %9784 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9780, i32 0, i32 4, !dbg !246
  %9785 = load i32, i32* %9784, align 4, !dbg !247
  store i32 %9785, i32* %9744, align 4, !dbg !248
  store i32 %9785, i32* %9745, align 4, !dbg !249
  %9786 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9780, i32 0, i32 5, !dbg !250
  %9787 = load i8*, i8** %9786, align 8, !dbg !251
  store i8* %9787, i8** %9746, align 8, !dbg !252
  br label %9754, !dbg !253

9788:                                             ; preds = %9775
  %9789 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 1, !dbg !254
  %9790 = load i16, i16* %9789, align 2, !dbg !254
  %9791 = and i16 %9790, 9216, !dbg !254
  %9792 = icmp ne i16 %9791, 0, !dbg !254
  br i1 %9792, label %9793, label %9794, !dbg !254

9793:                                             ; preds = %9788
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9732), !dbg !254
  br label %9974, !dbg !254

9794:                                             ; preds = %9788
  store i16 1, i16* %9789, align 2, !dbg !254
  br label %9974, !dbg !254

9795:                                             ; preds = %9769, %9720
  %9796 = load i16, i16* %9747, align 2, !dbg !255
  %9797 = icmp ule i16 %9796, 0, !dbg !256
  br i1 %9797, label %9878, label %9875, !dbg !257

9798:                                             ; preds = %9875, %9964
  %9799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 1, !dbg !258
  %9800 = load i16, i16* %9799, align 2, !dbg !259
  %9801 = and i16 9216, %9800, !dbg !260
  %9802 = icmp eq i16 0, %9801, !dbg !261
  br i1 %9802, label %9803, label %9807, !dbg !262

9803:                                             ; preds = %9798
  %9804 = icmp ne i16 %9801, 0, !dbg !263
  br i1 %9804, label %9805, label %9806, !dbg !263

9805:                                             ; preds = %9803
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9732), !dbg !263
  br label %9807, !dbg !263

9806:                                             ; preds = %9803
  store i16 1, i16* %9799, align 2, !dbg !263
  br label %9807, !dbg !263

9807:                                             ; preds = %9805, %9806, %9798
  %9808 = load i32, i32* %9729, align 4, !dbg !264
  %9809 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 23, i32 0, !dbg !265
  %9810 = load i32, i32* %9809, align 4, !dbg !266
  %9811 = load i32, i32* %9745, align 4, !dbg !267
  %9812 = getelementptr i32, i32* %9736, i32 1, !dbg !268
  %9813 = load i32, i32* %9812, align 4, !dbg !269
  %9814 = icmp sge i32 %9811, %9813, !dbg !270
  br i1 %9814, label %9815, label %9854, !dbg !271

9815:                                             ; preds = %9807
  %9816 = load i8*, i8** %9746, align 8, !dbg !272
  %9817 = ptrtoint i8* %9816 to i64, !dbg !273
  %9818 = load i32, i32* %9736, align 4, !dbg !275
  %9819 = zext i32 %9818 to i64, !dbg !276
  %9820 = add i64 %9817, %9819, !dbg !277
  %9821 = inttoptr i64 %9820 to i8*, !dbg !278
  store i8* %9821, i8** %9728, align 8, !dbg !279
  %9822 = load i32, i32* %9729, align 4, !dbg !280
  %9823 = icmp ult i32 %9822, 12, !dbg !281
  br i1 %9823, label %9824, label %9826, !dbg !282

9824:                                             ; preds = %9815
  %9825 = call i32 @sqlite3VdbeSerialGet(i8* %9821, i32 %9822, %struct.sqlite3_value* %9732), !dbg !283
  br label %9974, !dbg !284

9826:                                             ; preds = %9815
  %9827 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %9827, align 2, !dbg !286
  %9828 = getelementptr i16, i16* %9827, i32 1, !dbg !287
  store i16 514, i16* %9828, align 2, !dbg !288
  %9829 = load i32, i32* %9729, align 4, !dbg !289
  %9830 = sub i32 %9829, 12, !dbg !290
  %9831 = lshr i32 %9830, 1, !dbg !291
  %9832 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 4, !dbg !292
  store i32 %9831, i32* %9832, align 4, !dbg !293
  %9833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 2, !dbg !294
  store i8 %9723, i8* %9833, align 1, !dbg !295
  %9834 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 5, !dbg !296
  %9835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 7, !dbg !297
  %9836 = load i32, i32* %9835, align 4, !dbg !298
  %9837 = add i32 %9831, 2, !dbg !299
  %9838 = icmp slt i32 %9836, %9837, !dbg !300
  br i1 %9838, label %9839, label %9841, !dbg !301

9839:                                             ; preds = %9826
  store i16 1, i16* %9799, align 2, !dbg !302
  %9840 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9732, i32 %9837, i32 0), !dbg !303
  br label %9844, !dbg !304

9841:                                             ; preds = %9826
  %9842 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 6, !dbg !305
  %9843 = load i8*, i8** %9842, align 8, !dbg !306
  store i8* %9843, i8** %9834, align 8, !dbg !307
  br label %9844, !dbg !308

9844:                                             ; preds = %9841, %9839
  %9845 = zext i32 %9831 to i64, !dbg !309
  %9846 = load i8*, i8** %9834, align 8, !dbg !310
  %9847 = load i8*, i8** %9728, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9846, i8* %9847, i64 %9845, i1 false), !dbg !312
  %9848 = getelementptr i8, i8* %9846, i32 %9831, !dbg !313
  store i8 0, i8* %9848, align 1, !dbg !314
  %9849 = add i32 %9831, 1, !dbg !315
  %9850 = getelementptr i8, i8* %9846, i32 %9849, !dbg !316
  store i8 0, i8* %9850, align 1, !dbg !317
  %9851 = and i32 %9829, 1, !dbg !318
  %9852 = getelementptr i16, i16* %9827, i32 %9851, !dbg !319
  %9853 = load i16, i16* %9852, align 2, !dbg !320
  store i16 %9853, i16* %9799, align 2, !dbg !321
  br label %9974, !dbg !322

9854:                                             ; preds = %9807
  %9855 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 2, !dbg !323
  store i8 %9723, i8* %9855, align 1, !dbg !324
  %9856 = load i32, i32* %9729, align 4, !dbg !325
  %9857 = and i32 %9856, 1, !dbg !326
  %9858 = icmp eq i32 %9857, 0, !dbg !327
  %9859 = icmp sge i32 %9856, 12, !dbg !328
  %9860 = and i1 %9859, %9858, !dbg !329
  %9861 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9856), !dbg !330
  %9862 = icmp eq i32 %9861, 0, !dbg !331
  br i1 %9862, label %9873, label %9863, !dbg !332

9863:                                             ; preds = %9854
  %9864 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 12, i32 0, !dbg !333
  %9865 = load %struct.BtCursor*, %struct.BtCursor** %9864, align 8, !dbg !334
  %9866 = load i32, i32* %9736, align 4, !dbg !336
  %9867 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9865, i32 %9866, i32 %9861, %struct.sqlite3_value* %9732), !dbg !337
  %9868 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 5, !dbg !338
  %9869 = load i8*, i8** %9868, align 8, !dbg !339
  %9870 = call i32 @sqlite3VdbeSerialGet(i8* %9869, i32 %9856, %struct.sqlite3_value* %9732), !dbg !340
  %9871 = load i16, i16* %9799, align 2, !dbg !341
  %9872 = and i16 %9871, -4097, !dbg !342
  store i16 %9872, i16* %9799, align 2, !dbg !343
  br label %9974, !dbg !344

9873:                                             ; preds = %9854
  %9874 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9856, %struct.sqlite3_value* %9732), !dbg !345
  br label %9974, !dbg !346

9875:                                             ; preds = %9795
  %9876 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 23, i32 0, !dbg !347
  %9877 = load i32, i32* %9876, align 4, !dbg !348
  store i32 %9877, i32* %9729, align 4, !dbg !349
  br label %9798, !dbg !350

9878:                                             ; preds = %9795
  %9879 = load i32, i32* %9743, align 4, !dbg !351
  %9880 = load i32, i32* %9736, align 4, !dbg !352
  %9881 = icmp ult i32 %9879, %9880, !dbg !353
  br i1 %9881, label %9882, label %9963, !dbg !354

9882:                                             ; preds = %9878
  %9883 = load i8*, i8** %9746, align 8, !dbg !355
  %9884 = icmp eq i8* %9883, null, !dbg !356
  br i1 %9884, label %9886, label %9885, !dbg !357

9885:                                             ; preds = %9882
  store i8* %9883, i8** %9728, align 8, !dbg !358
  br label %9886, !dbg !359

9886:                                             ; preds = %9885, %9882, %9768
  %9887 = alloca i32, align 4, !dbg !360
  %9888 = load i16, i16* %9747, align 2, !dbg !361
  %9889 = zext i16 %9888 to i32, !dbg !362
  store i32 %9889, i32* %9887, align 4, !dbg !363
  %9890 = alloca i64, align 8, !dbg !364
  %9891 = getelementptr i32, i32* %9736, i32 %9889, !dbg !365
  %9892 = load i32, i32* %9891, align 4, !dbg !366
  %9893 = zext i32 %9892 to i64, !dbg !367
  store i64 %9893, i64* %9890, align 4, !dbg !368
  %9894 = load i8*, i8** %9728, align 8, !dbg !369
  %9895 = load i32, i32* %9743, align 4, !dbg !370
  %9896 = alloca i8*, align 8, !dbg !371
  %9897 = getelementptr i8, i8* %9894, i32 %9895, !dbg !372
  store i8* %9897, i8** %9896, align 8, !dbg !373
  %9898 = load i32, i32* %9736, align 4, !dbg !374
  %9899 = getelementptr i8, i8* %9894, i32 %9898, !dbg !375
  br label %9900, !dbg !376

9900:                                             ; preds = %9907, %9886
  %9901 = load i32, i32* %9887, align 4, !dbg !377
  %9902 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9731, i32 0, i32 23, i32 %9901, !dbg !378
  %9903 = load i8*, i8** %9896, align 8, !dbg !379
  %9904 = load i8, i8* %9903, align 1, !dbg !380
  %9905 = zext i8 %9904 to i32, !dbg !381
  store i32 %9905, i32* %9729, align 4, !dbg !382
  store i32 %9905, i32* %9902, align 4, !dbg !383
  %9906 = icmp sgt i8 %9904, -1, !dbg !384
  br i1 %9906, label %9930, label %9921, !dbg !385

9907:                                             ; preds = %9921, %9930
  %9908 = load i32, i32* %9887, align 4, !dbg !386
  %9909 = add i32 %9908, 1, !dbg !387
  store i32 %9909, i32* %9887, align 4, !dbg !388
  %9910 = load i64, i64* %9890, align 4, !dbg !389
  %9911 = and i64 4294967295, %9910, !dbg !390
  %9912 = trunc i64 %9911 to i32, !dbg !391
  %9913 = getelementptr i32, i32* %9736, i32 %9909, !dbg !392
  store i32 %9912, i32* %9913, align 4, !dbg !393
  %9914 = load i32, i32* %9887, align 4, !dbg !394
  %9915 = icmp sle i32 %9914, 0, !dbg !395
  %9916 = load i8*, i8** %9896, align 8, !dbg !396
  %9917 = ptrtoint i8* %9916 to i64, !dbg !397
  %9918 = ptrtoint i8* %9899 to i64, !dbg !398
  %9919 = icmp ult i64 %9917, %9918, !dbg !399
  %9920 = and i1 %9915, %9919, !dbg !400
  br i1 %9920, label %9900, label %9939, !dbg !401

9921:                                             ; preds = %9900
  %9922 = load i8*, i8** %9896, align 8, !dbg !402
  %9923 = call i8 @sqlite3GetVarint32(i8* %9922, i32* %9729), !dbg !403
  %9924 = getelementptr i8, i8* %9922, i8 %9923, !dbg !404
  store i8* %9924, i8** %9896, align 8, !dbg !405
  %9925 = load i32, i32* %9729, align 4, !dbg !406
  store i32 %9925, i32* %9902, align 4, !dbg !407
  %9926 = load i64, i64* %9890, align 4, !dbg !408
  %9927 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9925), !dbg !409
  %9928 = zext i32 %9927 to i64, !dbg !410
  %9929 = add i64 %9926, %9928, !dbg !411
  store i64 %9929, i64* %9890, align 4, !dbg !412
  br label %9907, !dbg !413

9930:                                             ; preds = %9900
  %9931 = getelementptr i8, i8* %9903, i32 1, !dbg !414
  store i8* %9931, i8** %9896, align 8, !dbg !415
  %9932 = load i32, i32* %9729, align 4, !dbg !416
  %9933 = trunc i32 %9932 to i8, !dbg !417
  %9934 = getelementptr i8, i8* %4, i8 %9933, !dbg !418
  %9935 = load i8, i8* %9934, align 1, !dbg !419
  %9936 = zext i8 %9935 to i64, !dbg !420
  %9937 = load i64, i64* %9890, align 4, !dbg !421
  %9938 = add i64 %9937, %9936, !dbg !422
  store i64 %9938, i64* %9890, align 4, !dbg !423
  br label %9907, !dbg !424

9939:                                             ; preds = %9907
  %9940 = load i64, i64* %9890, align 4, !dbg !425
  %9941 = load i32, i32* %9744, align 4, !dbg !426
  %9942 = zext i32 %9941 to i64, !dbg !427
  %9943 = icmp uge i64 %9917, %9918, !dbg !428
  %9944 = icmp ugt i64 %9917, %9918, !dbg !429
  %9945 = icmp ne i64 %9940, %9942, !dbg !430
  %9946 = icmp ugt i64 %9940, %9942, !dbg !431
  %9947 = or i1 %9944, %9945, !dbg !432
  %9948 = and i1 %9943, %9947, !dbg !433
  %9949 = or i1 %9948, %9946, !dbg !434
  br i1 %9949, label %9950, label %9954, !dbg !435

9950:                                             ; preds = %9939
  %9951 = load i32, i32* %9736, align 4, !dbg !436
  %9952 = icmp eq i32 %9951, 0, !dbg !437
  br i1 %9952, label %9953, label %9954, !dbg !438

9953:                                             ; preds = %9950
  store i32 0, i32* %9887, align 4, !dbg !439
  store i8* %9899, i8** %9896, align 8, !dbg !440
  br label %9954, !dbg !441

9954:                                             ; preds = %9953, %9950, %9939
  %9955 = load i32, i32* %9887, align 4, !dbg !442
  %9956 = trunc i32 %9955 to i16, !dbg !443
  store i16 %9956, i16* %9747, align 2, !dbg !444
  %9957 = load i8*, i8** %9896, align 8, !dbg !445
  %9958 = ptrtoint i8* %9957 to i64, !dbg !446
  %9959 = load i8*, i8** %9728, align 8, !dbg !447
  %9960 = ptrtoint i8* %9959 to i64, !dbg !448
  %9961 = sub i64 %9958, %9960, !dbg !449
  %9962 = trunc i64 %9961 to i32, !dbg !450
  store i32 %9962, i32* %9743, align 4, !dbg !451
  br label %9964, !dbg !452

9963:                                             ; preds = %9878
  store i32 0, i32* %9729, align 4, !dbg !453
  br label %9964, !dbg !454

9964:                                             ; preds = %9954, %9963
  %9965 = load i16, i16* %9747, align 2, !dbg !455
  %9966 = icmp sle i16 %9965, 0, !dbg !456
  br i1 %9966, label %9967, label %9798, !dbg !457

9967:                                             ; preds = %9964
  %9968 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9732, i32 0, i32 1, !dbg !458
  %9969 = load i16, i16* %9968, align 2, !dbg !458
  %9970 = and i16 %9969, 9216, !dbg !458
  %9971 = icmp ne i16 %9970, 0, !dbg !458
  br i1 %9971, label %9972, label %9973, !dbg !458

9972:                                             ; preds = %9967
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9732), !dbg !458
  br label %9974, !dbg !458

9973:                                             ; preds = %9967
  store i16 1, i16* %9968, align 2, !dbg !458
  br label %9974, !dbg !458

9974:                                             ; preds = %9972, %9973, %9844, %9824, %9863, %9873, %9793, %9794
  call void @llvm.stackrestore(i8* %9721), !dbg !459
  br label %9975, !dbg !74

9975:                                             ; preds = %9974, %14
  %9976 = call i8* @llvm.stacksave(), !dbg !167
  %9977 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %9978 = load i8, i8* %9977, align 1, !dbg !171
  %9979 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %9979, align 4, !dbg !173
  %9980 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %9981 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %9982 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9980, align 8, !dbg !176
  store %struct.VdbeCursor* %9982, %struct.VdbeCursor** %9981, align 8, !dbg !177
  %9983 = alloca i8*, align 8, !dbg !178
  %9984 = alloca i32, align 4, !dbg !179
  %9985 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9981, i32* %9979), !dbg !180
  %9986 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9981, align 8, !dbg !181
  %9987 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !182
  %9988 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 16, !dbg !183
  %9989 = load i16, i16* %9988, align 2, !dbg !184
  %9990 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 19, !dbg !185
  %9991 = load i32*, i32** %9990, align 8, !dbg !186
  %9992 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 0, !dbg !187
  %9993 = load i8, i8* %9992, align 1, !dbg !188
  %9994 = icmp ne i8 %9993, 3, !dbg !189
  %9995 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 2, !dbg !190
  %9996 = load i8, i8* %9995, align 1, !dbg !191
  %9997 = icmp ne i8 %9996, 0, !dbg !192
  %9998 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 14, !dbg !193
  %9999 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 21, !dbg !194
  %10000 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 22, !dbg !195
  %10001 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 20, !dbg !196
  %10002 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 17, !dbg !197
  %10003 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 9, !dbg !198
  %10004 = load i32, i32* %10003, align 4, !dbg !199
  %10005 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %10006 = load i32, i32* %10005, align 4, !dbg !201
  %10007 = icmp ne i32 %10004, %10006, !dbg !202
  br i1 %10007, label %10008, label %10050, !dbg !203

10008:                                            ; preds = %9975
  br i1 %9997, label %10030, label %10025, !dbg !204

10009:                                            ; preds = %10025, %10032
  %10010 = load i32, i32* %10005, align 4, !dbg !205
  store i32 %10010, i32* %10003, align 4, !dbg !206
  %10011 = load i8*, i8** %10001, align 8, !dbg !207
  %10012 = load i8, i8* %10011, align 1, !dbg !208
  %10013 = icmp sgt i8 %10012, -1, !dbg !211
  br i1 %10013, label %10014, label %10016, !dbg !212

10014:                                            ; preds = %10009
  %10015 = zext i8 %10012 to i32, !dbg !213
  store i32 %10015, i32* %9991, align 4, !dbg !214
  store i32 1, i32* %9998, align 4, !dbg !215
  br label %10019, !dbg !216

10016:                                            ; preds = %10009
  %10017 = call i8 @sqlite3GetVarint32(i8* %10011, i32* %9991), !dbg !217
  %10018 = zext i8 %10017 to i32, !dbg !218
  store i32 %10018, i32* %9998, align 4, !dbg !219
  br label %10019, !dbg !220

10019:                                            ; preds = %10016, %10014
  store i16 0, i16* %10002, align 2, !dbg !221
  %10020 = load i32, i32* %10000, align 4, !dbg !222
  %10021 = load i32, i32* %9991, align 4, !dbg !223
  %10022 = icmp ult i32 %10020, %10021, !dbg !224
  br i1 %10022, label %10024, label %10023, !dbg !225

10023:                                            ; preds = %10019
  store i8* %10011, i8** %9983, align 8, !dbg !226
  br label %10143, !dbg !227

10024:                                            ; preds = %10019
  store i8* null, i8** %10001, align 8, !dbg !228
  store i32 0, i32* %10000, align 4, !dbg !229
  br label %10050, !dbg !230

10025:                                            ; preds = %10008
  %10026 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 12, i32 0, !dbg !231
  %10027 = load %struct.BtCursor*, %struct.BtCursor** %10026, align 8, !dbg !232
  %10028 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %10027), !dbg !233
  store i32 %10028, i32* %9999, align 4, !dbg !234
  %10029 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %10027, i32* %10000), !dbg !235
  store i8* %10029, i8** %10001, align 8, !dbg !236
  br label %10009, !dbg !237

10030:                                            ; preds = %10008
  %10031 = icmp eq i8 %9993, 3, !dbg !238
  br i1 %10031, label %10032, label %10043, !dbg !239

10032:                                            ; preds = %10030
  %10033 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 10, !dbg !240
  %10034 = load i32, i32* %10033, align 4, !dbg !241
  %10035 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10034, !dbg !242
  %10036 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10035, i32 0, i32 1, !dbg !243
  %10037 = load i16, i16* %10036, align 2, !dbg !244
  %10038 = and i16 %10037, 16, !dbg !245
  %10039 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10035, i32 0, i32 4, !dbg !246
  %10040 = load i32, i32* %10039, align 4, !dbg !247
  store i32 %10040, i32* %9999, align 4, !dbg !248
  store i32 %10040, i32* %10000, align 4, !dbg !249
  %10041 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10035, i32 0, i32 5, !dbg !250
  %10042 = load i8*, i8** %10041, align 8, !dbg !251
  store i8* %10042, i8** %10001, align 8, !dbg !252
  br label %10009, !dbg !253

10043:                                            ; preds = %10030
  %10044 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 1, !dbg !254
  %10045 = load i16, i16* %10044, align 2, !dbg !254
  %10046 = and i16 %10045, 9216, !dbg !254
  %10047 = icmp ne i16 %10046, 0, !dbg !254
  br i1 %10047, label %10048, label %10049, !dbg !254

10048:                                            ; preds = %10043
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9987), !dbg !254
  br label %10231, !dbg !254

10049:                                            ; preds = %10043
  store i16 1, i16* %10044, align 2, !dbg !254
  br label %10231, !dbg !254

10050:                                            ; preds = %10024, %9975
  %10051 = load i16, i16* %10002, align 2, !dbg !255
  %10052 = icmp ule i16 %10051, 1, !dbg !256
  br i1 %10052, label %10135, label %10132, !dbg !257

10053:                                            ; preds = %10132, %10221
  %10054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 1, !dbg !258
  %10055 = load i16, i16* %10054, align 2, !dbg !259
  %10056 = and i16 9216, %10055, !dbg !260
  %10057 = icmp eq i16 0, %10056, !dbg !261
  br i1 %10057, label %10058, label %10062, !dbg !262

10058:                                            ; preds = %10053
  %10059 = icmp ne i16 %10056, 0, !dbg !263
  br i1 %10059, label %10060, label %10061, !dbg !263

10060:                                            ; preds = %10058
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9987), !dbg !263
  br label %10062, !dbg !263

10061:                                            ; preds = %10058
  store i16 1, i16* %10054, align 2, !dbg !263
  br label %10062, !dbg !263

10062:                                            ; preds = %10060, %10061, %10053
  %10063 = load i32, i32* %9984, align 4, !dbg !264
  %10064 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 23, i32 1, !dbg !265
  %10065 = load i32, i32* %10064, align 4, !dbg !266
  %10066 = load i32, i32* %10000, align 4, !dbg !267
  %10067 = getelementptr i32, i32* %9991, i32 2, !dbg !268
  %10068 = load i32, i32* %10067, align 4, !dbg !269
  %10069 = icmp sge i32 %10066, %10068, !dbg !270
  br i1 %10069, label %10070, label %10110, !dbg !271

10070:                                            ; preds = %10062
  %10071 = load i8*, i8** %10001, align 8, !dbg !272
  %10072 = ptrtoint i8* %10071 to i64, !dbg !273
  %10073 = getelementptr i32, i32* %9991, i32 1, !dbg !274
  %10074 = load i32, i32* %10073, align 4, !dbg !275
  %10075 = zext i32 %10074 to i64, !dbg !276
  %10076 = add i64 %10072, %10075, !dbg !277
  %10077 = inttoptr i64 %10076 to i8*, !dbg !278
  store i8* %10077, i8** %9983, align 8, !dbg !279
  %10078 = load i32, i32* %9984, align 4, !dbg !280
  %10079 = icmp ult i32 %10078, 12, !dbg !281
  br i1 %10079, label %10080, label %10082, !dbg !282

10080:                                            ; preds = %10070
  %10081 = call i32 @sqlite3VdbeSerialGet(i8* %10077, i32 %10078, %struct.sqlite3_value* %9987), !dbg !283
  br label %10231, !dbg !284

10082:                                            ; preds = %10070
  %10083 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %10083, align 2, !dbg !286
  %10084 = getelementptr i16, i16* %10083, i32 1, !dbg !287
  store i16 514, i16* %10084, align 2, !dbg !288
  %10085 = load i32, i32* %9984, align 4, !dbg !289
  %10086 = sub i32 %10085, 12, !dbg !290
  %10087 = lshr i32 %10086, 1, !dbg !291
  %10088 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 4, !dbg !292
  store i32 %10087, i32* %10088, align 4, !dbg !293
  %10089 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 2, !dbg !294
  store i8 %9978, i8* %10089, align 1, !dbg !295
  %10090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 5, !dbg !296
  %10091 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 7, !dbg !297
  %10092 = load i32, i32* %10091, align 4, !dbg !298
  %10093 = add i32 %10087, 2, !dbg !299
  %10094 = icmp slt i32 %10092, %10093, !dbg !300
  br i1 %10094, label %10095, label %10097, !dbg !301

10095:                                            ; preds = %10082
  store i16 1, i16* %10054, align 2, !dbg !302
  %10096 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9987, i32 %10093, i32 0), !dbg !303
  br label %10100, !dbg !304

10097:                                            ; preds = %10082
  %10098 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 6, !dbg !305
  %10099 = load i8*, i8** %10098, align 8, !dbg !306
  store i8* %10099, i8** %10090, align 8, !dbg !307
  br label %10100, !dbg !308

10100:                                            ; preds = %10097, %10095
  %10101 = zext i32 %10087 to i64, !dbg !309
  %10102 = load i8*, i8** %10090, align 8, !dbg !310
  %10103 = load i8*, i8** %9983, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10102, i8* %10103, i64 %10101, i1 false), !dbg !312
  %10104 = getelementptr i8, i8* %10102, i32 %10087, !dbg !313
  store i8 0, i8* %10104, align 1, !dbg !314
  %10105 = add i32 %10087, 1, !dbg !315
  %10106 = getelementptr i8, i8* %10102, i32 %10105, !dbg !316
  store i8 0, i8* %10106, align 1, !dbg !317
  %10107 = and i32 %10085, 1, !dbg !318
  %10108 = getelementptr i16, i16* %10083, i32 %10107, !dbg !319
  %10109 = load i16, i16* %10108, align 2, !dbg !320
  store i16 %10109, i16* %10054, align 2, !dbg !321
  br label %10231, !dbg !322

10110:                                            ; preds = %10062
  %10111 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 2, !dbg !323
  store i8 %9978, i8* %10111, align 1, !dbg !324
  %10112 = load i32, i32* %9984, align 4, !dbg !325
  %10113 = and i32 %10112, 1, !dbg !326
  %10114 = icmp eq i32 %10113, 0, !dbg !327
  %10115 = icmp sge i32 %10112, 12, !dbg !328
  %10116 = and i1 %10115, %10114, !dbg !329
  %10117 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10112), !dbg !330
  %10118 = icmp eq i32 %10117, 0, !dbg !331
  br i1 %10118, label %10130, label %10119, !dbg !332

10119:                                            ; preds = %10110
  %10120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 12, i32 0, !dbg !333
  %10121 = load %struct.BtCursor*, %struct.BtCursor** %10120, align 8, !dbg !334
  %10122 = getelementptr i32, i32* %9991, i32 1, !dbg !335
  %10123 = load i32, i32* %10122, align 4, !dbg !336
  %10124 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %10121, i32 %10123, i32 %10117, %struct.sqlite3_value* %9987), !dbg !337
  %10125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 5, !dbg !338
  %10126 = load i8*, i8** %10125, align 8, !dbg !339
  %10127 = call i32 @sqlite3VdbeSerialGet(i8* %10126, i32 %10112, %struct.sqlite3_value* %9987), !dbg !340
  %10128 = load i16, i16* %10054, align 2, !dbg !341
  %10129 = and i16 %10128, -4097, !dbg !342
  store i16 %10129, i16* %10054, align 2, !dbg !343
  br label %10231, !dbg !344

10130:                                            ; preds = %10110
  %10131 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %10112, %struct.sqlite3_value* %9987), !dbg !345
  br label %10231, !dbg !346

10132:                                            ; preds = %10050
  %10133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 23, i32 1, !dbg !347
  %10134 = load i32, i32* %10133, align 4, !dbg !348
  store i32 %10134, i32* %9984, align 4, !dbg !349
  br label %10053, !dbg !350

10135:                                            ; preds = %10050
  %10136 = load i32, i32* %9998, align 4, !dbg !351
  %10137 = load i32, i32* %9991, align 4, !dbg !352
  %10138 = icmp ult i32 %10136, %10137, !dbg !353
  br i1 %10138, label %10139, label %10220, !dbg !354

10139:                                            ; preds = %10135
  %10140 = load i8*, i8** %10001, align 8, !dbg !355
  %10141 = icmp eq i8* %10140, null, !dbg !356
  br i1 %10141, label %10143, label %10142, !dbg !357

10142:                                            ; preds = %10139
  store i8* %10140, i8** %9983, align 8, !dbg !358
  br label %10143, !dbg !359

10143:                                            ; preds = %10142, %10139, %10023
  %10144 = alloca i32, align 4, !dbg !360
  %10145 = load i16, i16* %10002, align 2, !dbg !361
  %10146 = zext i16 %10145 to i32, !dbg !362
  store i32 %10146, i32* %10144, align 4, !dbg !363
  %10147 = alloca i64, align 8, !dbg !364
  %10148 = getelementptr i32, i32* %9991, i32 %10146, !dbg !365
  %10149 = load i32, i32* %10148, align 4, !dbg !366
  %10150 = zext i32 %10149 to i64, !dbg !367
  store i64 %10150, i64* %10147, align 4, !dbg !368
  %10151 = load i8*, i8** %9983, align 8, !dbg !369
  %10152 = load i32, i32* %9998, align 4, !dbg !370
  %10153 = alloca i8*, align 8, !dbg !371
  %10154 = getelementptr i8, i8* %10151, i32 %10152, !dbg !372
  store i8* %10154, i8** %10153, align 8, !dbg !373
  %10155 = load i32, i32* %9991, align 4, !dbg !374
  %10156 = getelementptr i8, i8* %10151, i32 %10155, !dbg !375
  br label %10157, !dbg !376

10157:                                            ; preds = %10164, %10143
  %10158 = load i32, i32* %10144, align 4, !dbg !377
  %10159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9986, i32 0, i32 23, i32 %10158, !dbg !378
  %10160 = load i8*, i8** %10153, align 8, !dbg !379
  %10161 = load i8, i8* %10160, align 1, !dbg !380
  %10162 = zext i8 %10161 to i32, !dbg !381
  store i32 %10162, i32* %9984, align 4, !dbg !382
  store i32 %10162, i32* %10159, align 4, !dbg !383
  %10163 = icmp sgt i8 %10161, -1, !dbg !384
  br i1 %10163, label %10187, label %10178, !dbg !385

10164:                                            ; preds = %10178, %10187
  %10165 = load i32, i32* %10144, align 4, !dbg !386
  %10166 = add i32 %10165, 1, !dbg !387
  store i32 %10166, i32* %10144, align 4, !dbg !388
  %10167 = load i64, i64* %10147, align 4, !dbg !389
  %10168 = and i64 4294967295, %10167, !dbg !390
  %10169 = trunc i64 %10168 to i32, !dbg !391
  %10170 = getelementptr i32, i32* %9991, i32 %10166, !dbg !392
  store i32 %10169, i32* %10170, align 4, !dbg !393
  %10171 = load i32, i32* %10144, align 4, !dbg !394
  %10172 = icmp sle i32 %10171, 1, !dbg !395
  %10173 = load i8*, i8** %10153, align 8, !dbg !396
  %10174 = ptrtoint i8* %10173 to i64, !dbg !397
  %10175 = ptrtoint i8* %10156 to i64, !dbg !398
  %10176 = icmp ult i64 %10174, %10175, !dbg !399
  %10177 = and i1 %10172, %10176, !dbg !400
  br i1 %10177, label %10157, label %10196, !dbg !401

10178:                                            ; preds = %10157
  %10179 = load i8*, i8** %10153, align 8, !dbg !402
  %10180 = call i8 @sqlite3GetVarint32(i8* %10179, i32* %9984), !dbg !403
  %10181 = getelementptr i8, i8* %10179, i8 %10180, !dbg !404
  store i8* %10181, i8** %10153, align 8, !dbg !405
  %10182 = load i32, i32* %9984, align 4, !dbg !406
  store i32 %10182, i32* %10159, align 4, !dbg !407
  %10183 = load i64, i64* %10147, align 4, !dbg !408
  %10184 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10182), !dbg !409
  %10185 = zext i32 %10184 to i64, !dbg !410
  %10186 = add i64 %10183, %10185, !dbg !411
  store i64 %10186, i64* %10147, align 4, !dbg !412
  br label %10164, !dbg !413

10187:                                            ; preds = %10157
  %10188 = getelementptr i8, i8* %10160, i32 1, !dbg !414
  store i8* %10188, i8** %10153, align 8, !dbg !415
  %10189 = load i32, i32* %9984, align 4, !dbg !416
  %10190 = trunc i32 %10189 to i8, !dbg !417
  %10191 = getelementptr i8, i8* %4, i8 %10190, !dbg !418
  %10192 = load i8, i8* %10191, align 1, !dbg !419
  %10193 = zext i8 %10192 to i64, !dbg !420
  %10194 = load i64, i64* %10147, align 4, !dbg !421
  %10195 = add i64 %10194, %10193, !dbg !422
  store i64 %10195, i64* %10147, align 4, !dbg !423
  br label %10164, !dbg !424

10196:                                            ; preds = %10164
  %10197 = load i64, i64* %10147, align 4, !dbg !425
  %10198 = load i32, i32* %9999, align 4, !dbg !426
  %10199 = zext i32 %10198 to i64, !dbg !427
  %10200 = icmp uge i64 %10174, %10175, !dbg !428
  %10201 = icmp ugt i64 %10174, %10175, !dbg !429
  %10202 = icmp ne i64 %10197, %10199, !dbg !430
  %10203 = icmp ugt i64 %10197, %10199, !dbg !431
  %10204 = or i1 %10201, %10202, !dbg !432
  %10205 = and i1 %10200, %10204, !dbg !433
  %10206 = or i1 %10205, %10203, !dbg !434
  br i1 %10206, label %10207, label %10211, !dbg !435

10207:                                            ; preds = %10196
  %10208 = load i32, i32* %9991, align 4, !dbg !436
  %10209 = icmp eq i32 %10208, 0, !dbg !437
  br i1 %10209, label %10210, label %10211, !dbg !438

10210:                                            ; preds = %10207
  store i32 0, i32* %10144, align 4, !dbg !439
  store i8* %10156, i8** %10153, align 8, !dbg !440
  br label %10211, !dbg !441

10211:                                            ; preds = %10210, %10207, %10196
  %10212 = load i32, i32* %10144, align 4, !dbg !442
  %10213 = trunc i32 %10212 to i16, !dbg !443
  store i16 %10213, i16* %10002, align 2, !dbg !444
  %10214 = load i8*, i8** %10153, align 8, !dbg !445
  %10215 = ptrtoint i8* %10214 to i64, !dbg !446
  %10216 = load i8*, i8** %9983, align 8, !dbg !447
  %10217 = ptrtoint i8* %10216 to i64, !dbg !448
  %10218 = sub i64 %10215, %10217, !dbg !449
  %10219 = trunc i64 %10218 to i32, !dbg !450
  store i32 %10219, i32* %9998, align 4, !dbg !451
  br label %10221, !dbg !452

10220:                                            ; preds = %10135
  store i32 0, i32* %9984, align 4, !dbg !453
  br label %10221, !dbg !454

10221:                                            ; preds = %10211, %10220
  %10222 = load i16, i16* %10002, align 2, !dbg !455
  %10223 = icmp sle i16 %10222, 1, !dbg !456
  br i1 %10223, label %10224, label %10053, !dbg !457

10224:                                            ; preds = %10221
  %10225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9987, i32 0, i32 1, !dbg !458
  %10226 = load i16, i16* %10225, align 2, !dbg !458
  %10227 = and i16 %10226, 9216, !dbg !458
  %10228 = icmp ne i16 %10227, 0, !dbg !458
  br i1 %10228, label %10229, label %10230, !dbg !458

10229:                                            ; preds = %10224
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9987), !dbg !458
  br label %10231, !dbg !458

10230:                                            ; preds = %10224
  store i16 1, i16* %10225, align 2, !dbg !458
  br label %10231, !dbg !458

10231:                                            ; preds = %10229, %10230, %10100, %10080, %10119, %10130, %10048, %10049
  call void @llvm.stackrestore(i8* %9976), !dbg !459
  br label %10232, !dbg !74

10232:                                            ; preds = %10231, %14
  %10233 = call i8* @llvm.stacksave(), !dbg !167
  %10234 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %10235 = load i8, i8* %10234, align 1, !dbg !171
  %10236 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %10236, align 4, !dbg !173
  %10237 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %10238 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %10239 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10237, align 8, !dbg !176
  store %struct.VdbeCursor* %10239, %struct.VdbeCursor** %10238, align 8, !dbg !177
  %10240 = alloca i8*, align 8, !dbg !178
  %10241 = alloca i32, align 4, !dbg !179
  %10242 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %10238, i32* %10236), !dbg !180
  %10243 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10238, align 8, !dbg !181
  %10244 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !182
  %10245 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 16, !dbg !183
  %10246 = load i16, i16* %10245, align 2, !dbg !184
  %10247 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 19, !dbg !185
  %10248 = load i32*, i32** %10247, align 8, !dbg !186
  %10249 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 0, !dbg !187
  %10250 = load i8, i8* %10249, align 1, !dbg !188
  %10251 = icmp ne i8 %10250, 3, !dbg !189
  %10252 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 2, !dbg !190
  %10253 = load i8, i8* %10252, align 1, !dbg !191
  %10254 = icmp ne i8 %10253, 0, !dbg !192
  %10255 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 14, !dbg !193
  %10256 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 21, !dbg !194
  %10257 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 22, !dbg !195
  %10258 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 20, !dbg !196
  %10259 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 17, !dbg !197
  %10260 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 9, !dbg !198
  %10261 = load i32, i32* %10260, align 4, !dbg !199
  %10262 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %10263 = load i32, i32* %10262, align 4, !dbg !201
  %10264 = icmp ne i32 %10261, %10263, !dbg !202
  br i1 %10264, label %10265, label %10307, !dbg !203

10265:                                            ; preds = %10232
  br i1 %10254, label %10287, label %10282, !dbg !204

10266:                                            ; preds = %10282, %10289
  %10267 = load i32, i32* %10262, align 4, !dbg !205
  store i32 %10267, i32* %10260, align 4, !dbg !206
  %10268 = load i8*, i8** %10258, align 8, !dbg !207
  %10269 = load i8, i8* %10268, align 1, !dbg !208
  %10270 = icmp sgt i8 %10269, -1, !dbg !211
  br i1 %10270, label %10271, label %10273, !dbg !212

10271:                                            ; preds = %10266
  %10272 = zext i8 %10269 to i32, !dbg !213
  store i32 %10272, i32* %10248, align 4, !dbg !214
  store i32 1, i32* %10255, align 4, !dbg !215
  br label %10276, !dbg !216

10273:                                            ; preds = %10266
  %10274 = call i8 @sqlite3GetVarint32(i8* %10268, i32* %10248), !dbg !217
  %10275 = zext i8 %10274 to i32, !dbg !218
  store i32 %10275, i32* %10255, align 4, !dbg !219
  br label %10276, !dbg !220

10276:                                            ; preds = %10273, %10271
  store i16 0, i16* %10259, align 2, !dbg !221
  %10277 = load i32, i32* %10257, align 4, !dbg !222
  %10278 = load i32, i32* %10248, align 4, !dbg !223
  %10279 = icmp ult i32 %10277, %10278, !dbg !224
  br i1 %10279, label %10281, label %10280, !dbg !225

10280:                                            ; preds = %10276
  store i8* %10268, i8** %10240, align 8, !dbg !226
  br label %10400, !dbg !227

10281:                                            ; preds = %10276
  store i8* null, i8** %10258, align 8, !dbg !228
  store i32 0, i32* %10257, align 4, !dbg !229
  br label %10307, !dbg !230

10282:                                            ; preds = %10265
  %10283 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 12, i32 0, !dbg !231
  %10284 = load %struct.BtCursor*, %struct.BtCursor** %10283, align 8, !dbg !232
  %10285 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %10284), !dbg !233
  store i32 %10285, i32* %10256, align 4, !dbg !234
  %10286 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %10284, i32* %10257), !dbg !235
  store i8* %10286, i8** %10258, align 8, !dbg !236
  br label %10266, !dbg !237

10287:                                            ; preds = %10265
  %10288 = icmp eq i8 %10250, 3, !dbg !238
  br i1 %10288, label %10289, label %10300, !dbg !239

10289:                                            ; preds = %10287
  %10290 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 10, !dbg !240
  %10291 = load i32, i32* %10290, align 4, !dbg !241
  %10292 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10291, !dbg !242
  %10293 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10292, i32 0, i32 1, !dbg !243
  %10294 = load i16, i16* %10293, align 2, !dbg !244
  %10295 = and i16 %10294, 16, !dbg !245
  %10296 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10292, i32 0, i32 4, !dbg !246
  %10297 = load i32, i32* %10296, align 4, !dbg !247
  store i32 %10297, i32* %10256, align 4, !dbg !248
  store i32 %10297, i32* %10257, align 4, !dbg !249
  %10298 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10292, i32 0, i32 5, !dbg !250
  %10299 = load i8*, i8** %10298, align 8, !dbg !251
  store i8* %10299, i8** %10258, align 8, !dbg !252
  br label %10266, !dbg !253

10300:                                            ; preds = %10287
  %10301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 1, !dbg !254
  %10302 = load i16, i16* %10301, align 2, !dbg !254
  %10303 = and i16 %10302, 9216, !dbg !254
  %10304 = icmp ne i16 %10303, 0, !dbg !254
  br i1 %10304, label %10305, label %10306, !dbg !254

10305:                                            ; preds = %10300
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10244), !dbg !254
  br label %10488, !dbg !254

10306:                                            ; preds = %10300
  store i16 1, i16* %10301, align 2, !dbg !254
  br label %10488, !dbg !254

10307:                                            ; preds = %10281, %10232
  %10308 = load i16, i16* %10259, align 2, !dbg !255
  %10309 = icmp ule i16 %10308, 2, !dbg !256
  br i1 %10309, label %10392, label %10389, !dbg !257

10310:                                            ; preds = %10389, %10478
  %10311 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 1, !dbg !258
  %10312 = load i16, i16* %10311, align 2, !dbg !259
  %10313 = and i16 9216, %10312, !dbg !260
  %10314 = icmp eq i16 0, %10313, !dbg !261
  br i1 %10314, label %10315, label %10319, !dbg !262

10315:                                            ; preds = %10310
  %10316 = icmp ne i16 %10313, 0, !dbg !263
  br i1 %10316, label %10317, label %10318, !dbg !263

10317:                                            ; preds = %10315
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10244), !dbg !263
  br label %10319, !dbg !263

10318:                                            ; preds = %10315
  store i16 1, i16* %10311, align 2, !dbg !263
  br label %10319, !dbg !263

10319:                                            ; preds = %10317, %10318, %10310
  %10320 = load i32, i32* %10241, align 4, !dbg !264
  %10321 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 23, i32 2, !dbg !265
  %10322 = load i32, i32* %10321, align 4, !dbg !266
  %10323 = load i32, i32* %10257, align 4, !dbg !267
  %10324 = getelementptr i32, i32* %10248, i32 3, !dbg !268
  %10325 = load i32, i32* %10324, align 4, !dbg !269
  %10326 = icmp sge i32 %10323, %10325, !dbg !270
  br i1 %10326, label %10327, label %10367, !dbg !271

10327:                                            ; preds = %10319
  %10328 = load i8*, i8** %10258, align 8, !dbg !272
  %10329 = ptrtoint i8* %10328 to i64, !dbg !273
  %10330 = getelementptr i32, i32* %10248, i32 2, !dbg !274
  %10331 = load i32, i32* %10330, align 4, !dbg !275
  %10332 = zext i32 %10331 to i64, !dbg !276
  %10333 = add i64 %10329, %10332, !dbg !277
  %10334 = inttoptr i64 %10333 to i8*, !dbg !278
  store i8* %10334, i8** %10240, align 8, !dbg !279
  %10335 = load i32, i32* %10241, align 4, !dbg !280
  %10336 = icmp ult i32 %10335, 12, !dbg !281
  br i1 %10336, label %10337, label %10339, !dbg !282

10337:                                            ; preds = %10327
  %10338 = call i32 @sqlite3VdbeSerialGet(i8* %10334, i32 %10335, %struct.sqlite3_value* %10244), !dbg !283
  br label %10488, !dbg !284

10339:                                            ; preds = %10327
  %10340 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %10340, align 2, !dbg !286
  %10341 = getelementptr i16, i16* %10340, i32 1, !dbg !287
  store i16 514, i16* %10341, align 2, !dbg !288
  %10342 = load i32, i32* %10241, align 4, !dbg !289
  %10343 = sub i32 %10342, 12, !dbg !290
  %10344 = lshr i32 %10343, 1, !dbg !291
  %10345 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 4, !dbg !292
  store i32 %10344, i32* %10345, align 4, !dbg !293
  %10346 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 2, !dbg !294
  store i8 %10235, i8* %10346, align 1, !dbg !295
  %10347 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 5, !dbg !296
  %10348 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 7, !dbg !297
  %10349 = load i32, i32* %10348, align 4, !dbg !298
  %10350 = add i32 %10344, 2, !dbg !299
  %10351 = icmp slt i32 %10349, %10350, !dbg !300
  br i1 %10351, label %10352, label %10354, !dbg !301

10352:                                            ; preds = %10339
  store i16 1, i16* %10311, align 2, !dbg !302
  %10353 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %10244, i32 %10350, i32 0), !dbg !303
  br label %10357, !dbg !304

10354:                                            ; preds = %10339
  %10355 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 6, !dbg !305
  %10356 = load i8*, i8** %10355, align 8, !dbg !306
  store i8* %10356, i8** %10347, align 8, !dbg !307
  br label %10357, !dbg !308

10357:                                            ; preds = %10354, %10352
  %10358 = zext i32 %10344 to i64, !dbg !309
  %10359 = load i8*, i8** %10347, align 8, !dbg !310
  %10360 = load i8*, i8** %10240, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10359, i8* %10360, i64 %10358, i1 false), !dbg !312
  %10361 = getelementptr i8, i8* %10359, i32 %10344, !dbg !313
  store i8 0, i8* %10361, align 1, !dbg !314
  %10362 = add i32 %10344, 1, !dbg !315
  %10363 = getelementptr i8, i8* %10359, i32 %10362, !dbg !316
  store i8 0, i8* %10363, align 1, !dbg !317
  %10364 = and i32 %10342, 1, !dbg !318
  %10365 = getelementptr i16, i16* %10340, i32 %10364, !dbg !319
  %10366 = load i16, i16* %10365, align 2, !dbg !320
  store i16 %10366, i16* %10311, align 2, !dbg !321
  br label %10488, !dbg !322

10367:                                            ; preds = %10319
  %10368 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 2, !dbg !323
  store i8 %10235, i8* %10368, align 1, !dbg !324
  %10369 = load i32, i32* %10241, align 4, !dbg !325
  %10370 = and i32 %10369, 1, !dbg !326
  %10371 = icmp eq i32 %10370, 0, !dbg !327
  %10372 = icmp sge i32 %10369, 12, !dbg !328
  %10373 = and i1 %10372, %10371, !dbg !329
  %10374 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10369), !dbg !330
  %10375 = icmp eq i32 %10374, 0, !dbg !331
  br i1 %10375, label %10387, label %10376, !dbg !332

10376:                                            ; preds = %10367
  %10377 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 12, i32 0, !dbg !333
  %10378 = load %struct.BtCursor*, %struct.BtCursor** %10377, align 8, !dbg !334
  %10379 = getelementptr i32, i32* %10248, i32 2, !dbg !335
  %10380 = load i32, i32* %10379, align 4, !dbg !336
  %10381 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %10378, i32 %10380, i32 %10374, %struct.sqlite3_value* %10244), !dbg !337
  %10382 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 5, !dbg !338
  %10383 = load i8*, i8** %10382, align 8, !dbg !339
  %10384 = call i32 @sqlite3VdbeSerialGet(i8* %10383, i32 %10369, %struct.sqlite3_value* %10244), !dbg !340
  %10385 = load i16, i16* %10311, align 2, !dbg !341
  %10386 = and i16 %10385, -4097, !dbg !342
  store i16 %10386, i16* %10311, align 2, !dbg !343
  br label %10488, !dbg !344

10387:                                            ; preds = %10367
  %10388 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %10369, %struct.sqlite3_value* %10244), !dbg !345
  br label %10488, !dbg !346

10389:                                            ; preds = %10307
  %10390 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 23, i32 2, !dbg !347
  %10391 = load i32, i32* %10390, align 4, !dbg !348
  store i32 %10391, i32* %10241, align 4, !dbg !349
  br label %10310, !dbg !350

10392:                                            ; preds = %10307
  %10393 = load i32, i32* %10255, align 4, !dbg !351
  %10394 = load i32, i32* %10248, align 4, !dbg !352
  %10395 = icmp ult i32 %10393, %10394, !dbg !353
  br i1 %10395, label %10396, label %10477, !dbg !354

10396:                                            ; preds = %10392
  %10397 = load i8*, i8** %10258, align 8, !dbg !355
  %10398 = icmp eq i8* %10397, null, !dbg !356
  br i1 %10398, label %10400, label %10399, !dbg !357

10399:                                            ; preds = %10396
  store i8* %10397, i8** %10240, align 8, !dbg !358
  br label %10400, !dbg !359

10400:                                            ; preds = %10399, %10396, %10280
  %10401 = alloca i32, align 4, !dbg !360
  %10402 = load i16, i16* %10259, align 2, !dbg !361
  %10403 = zext i16 %10402 to i32, !dbg !362
  store i32 %10403, i32* %10401, align 4, !dbg !363
  %10404 = alloca i64, align 8, !dbg !364
  %10405 = getelementptr i32, i32* %10248, i32 %10403, !dbg !365
  %10406 = load i32, i32* %10405, align 4, !dbg !366
  %10407 = zext i32 %10406 to i64, !dbg !367
  store i64 %10407, i64* %10404, align 4, !dbg !368
  %10408 = load i8*, i8** %10240, align 8, !dbg !369
  %10409 = load i32, i32* %10255, align 4, !dbg !370
  %10410 = alloca i8*, align 8, !dbg !371
  %10411 = getelementptr i8, i8* %10408, i32 %10409, !dbg !372
  store i8* %10411, i8** %10410, align 8, !dbg !373
  %10412 = load i32, i32* %10248, align 4, !dbg !374
  %10413 = getelementptr i8, i8* %10408, i32 %10412, !dbg !375
  br label %10414, !dbg !376

10414:                                            ; preds = %10421, %10400
  %10415 = load i32, i32* %10401, align 4, !dbg !377
  %10416 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10243, i32 0, i32 23, i32 %10415, !dbg !378
  %10417 = load i8*, i8** %10410, align 8, !dbg !379
  %10418 = load i8, i8* %10417, align 1, !dbg !380
  %10419 = zext i8 %10418 to i32, !dbg !381
  store i32 %10419, i32* %10241, align 4, !dbg !382
  store i32 %10419, i32* %10416, align 4, !dbg !383
  %10420 = icmp sgt i8 %10418, -1, !dbg !384
  br i1 %10420, label %10444, label %10435, !dbg !385

10421:                                            ; preds = %10435, %10444
  %10422 = load i32, i32* %10401, align 4, !dbg !386
  %10423 = add i32 %10422, 1, !dbg !387
  store i32 %10423, i32* %10401, align 4, !dbg !388
  %10424 = load i64, i64* %10404, align 4, !dbg !389
  %10425 = and i64 4294967295, %10424, !dbg !390
  %10426 = trunc i64 %10425 to i32, !dbg !391
  %10427 = getelementptr i32, i32* %10248, i32 %10423, !dbg !392
  store i32 %10426, i32* %10427, align 4, !dbg !393
  %10428 = load i32, i32* %10401, align 4, !dbg !394
  %10429 = icmp sle i32 %10428, 2, !dbg !395
  %10430 = load i8*, i8** %10410, align 8, !dbg !396
  %10431 = ptrtoint i8* %10430 to i64, !dbg !397
  %10432 = ptrtoint i8* %10413 to i64, !dbg !398
  %10433 = icmp ult i64 %10431, %10432, !dbg !399
  %10434 = and i1 %10429, %10433, !dbg !400
  br i1 %10434, label %10414, label %10453, !dbg !401

10435:                                            ; preds = %10414
  %10436 = load i8*, i8** %10410, align 8, !dbg !402
  %10437 = call i8 @sqlite3GetVarint32(i8* %10436, i32* %10241), !dbg !403
  %10438 = getelementptr i8, i8* %10436, i8 %10437, !dbg !404
  store i8* %10438, i8** %10410, align 8, !dbg !405
  %10439 = load i32, i32* %10241, align 4, !dbg !406
  store i32 %10439, i32* %10416, align 4, !dbg !407
  %10440 = load i64, i64* %10404, align 4, !dbg !408
  %10441 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10439), !dbg !409
  %10442 = zext i32 %10441 to i64, !dbg !410
  %10443 = add i64 %10440, %10442, !dbg !411
  store i64 %10443, i64* %10404, align 4, !dbg !412
  br label %10421, !dbg !413

10444:                                            ; preds = %10414
  %10445 = getelementptr i8, i8* %10417, i32 1, !dbg !414
  store i8* %10445, i8** %10410, align 8, !dbg !415
  %10446 = load i32, i32* %10241, align 4, !dbg !416
  %10447 = trunc i32 %10446 to i8, !dbg !417
  %10448 = getelementptr i8, i8* %4, i8 %10447, !dbg !418
  %10449 = load i8, i8* %10448, align 1, !dbg !419
  %10450 = zext i8 %10449 to i64, !dbg !420
  %10451 = load i64, i64* %10404, align 4, !dbg !421
  %10452 = add i64 %10451, %10450, !dbg !422
  store i64 %10452, i64* %10404, align 4, !dbg !423
  br label %10421, !dbg !424

10453:                                            ; preds = %10421
  %10454 = load i64, i64* %10404, align 4, !dbg !425
  %10455 = load i32, i32* %10256, align 4, !dbg !426
  %10456 = zext i32 %10455 to i64, !dbg !427
  %10457 = icmp uge i64 %10431, %10432, !dbg !428
  %10458 = icmp ugt i64 %10431, %10432, !dbg !429
  %10459 = icmp ne i64 %10454, %10456, !dbg !430
  %10460 = icmp ugt i64 %10454, %10456, !dbg !431
  %10461 = or i1 %10458, %10459, !dbg !432
  %10462 = and i1 %10457, %10461, !dbg !433
  %10463 = or i1 %10462, %10460, !dbg !434
  br i1 %10463, label %10464, label %10468, !dbg !435

10464:                                            ; preds = %10453
  %10465 = load i32, i32* %10248, align 4, !dbg !436
  %10466 = icmp eq i32 %10465, 0, !dbg !437
  br i1 %10466, label %10467, label %10468, !dbg !438

10467:                                            ; preds = %10464
  store i32 0, i32* %10401, align 4, !dbg !439
  store i8* %10413, i8** %10410, align 8, !dbg !440
  br label %10468, !dbg !441

10468:                                            ; preds = %10467, %10464, %10453
  %10469 = load i32, i32* %10401, align 4, !dbg !442
  %10470 = trunc i32 %10469 to i16, !dbg !443
  store i16 %10470, i16* %10259, align 2, !dbg !444
  %10471 = load i8*, i8** %10410, align 8, !dbg !445
  %10472 = ptrtoint i8* %10471 to i64, !dbg !446
  %10473 = load i8*, i8** %10240, align 8, !dbg !447
  %10474 = ptrtoint i8* %10473 to i64, !dbg !448
  %10475 = sub i64 %10472, %10474, !dbg !449
  %10476 = trunc i64 %10475 to i32, !dbg !450
  store i32 %10476, i32* %10255, align 4, !dbg !451
  br label %10478, !dbg !452

10477:                                            ; preds = %10392
  store i32 0, i32* %10241, align 4, !dbg !453
  br label %10478, !dbg !454

10478:                                            ; preds = %10468, %10477
  %10479 = load i16, i16* %10259, align 2, !dbg !455
  %10480 = icmp sle i16 %10479, 2, !dbg !456
  br i1 %10480, label %10481, label %10310, !dbg !457

10481:                                            ; preds = %10478
  %10482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10244, i32 0, i32 1, !dbg !458
  %10483 = load i16, i16* %10482, align 2, !dbg !458
  %10484 = and i16 %10483, 9216, !dbg !458
  %10485 = icmp ne i16 %10484, 0, !dbg !458
  br i1 %10485, label %10486, label %10487, !dbg !458

10486:                                            ; preds = %10481
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10244), !dbg !458
  br label %10488, !dbg !458

10487:                                            ; preds = %10481
  store i16 1, i16* %10482, align 2, !dbg !458
  br label %10488, !dbg !458

10488:                                            ; preds = %10486, %10487, %10357, %10337, %10376, %10387, %10305, %10306
  call void @llvm.stackrestore(i8* %10233), !dbg !459
  br label %10489, !dbg !74

10489:                                            ; preds = %10488, %9716, %14
  %10490 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 83, !dbg !75
  %10491 = call i8* @llvm.stacksave(), !dbg !78
  %10492 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10490, i32 0, i32 4, !dbg !79
  %10493 = load i32, i32* %10492, align 4, !dbg !82
  %10494 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10493, !dbg !83
  %10495 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10494, i32 0, i32 1, !dbg !78
  %10496 = load i16, i16* %10495, align 2, !dbg !78
  %10497 = and i16 %10496, 9216, !dbg !78
  %10498 = icmp ne i16 %10497, 0, !dbg !78
  %10499 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %10498, label %10500, label %10502, !dbg !78

10500:                                            ; preds = %10489
  %10501 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10494), !dbg !78
  store %struct.sqlite3_value* %10501, %struct.sqlite3_value** %10499, align 8, !dbg !78
  br label %10503, !dbg !78

10502:                                            ; preds = %10489
  store i16 4, i16* %10495, align 2, !dbg !78
  store %struct.sqlite3_value* %10494, %struct.sqlite3_value** %10499, align 8, !dbg !78
  br label %10503, !dbg !78

10503:                                            ; preds = %10502, %10500
  %10504 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10499, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %10491), !dbg !78
  %10505 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10504, i32 0, i32 0, i32 0, !dbg !84
  %10506 = bitcast double* %10505 to i64*, !dbg !85
  store i64 1, i64* %10506, align 4, !dbg !86
  br label %10507, !dbg !74

10507:                                            ; preds = %10503, %14
  %10508 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1463
  %10509 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10508, align 8, !dbg !1466
  %10510 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %10509), !dbg !1467
  %10511 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10509, i32 0, i32 9, !dbg !1468
  store i32 0, i32* %10511, align 4, !dbg !1469
  %10512 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10509, i32 0, i32 2, !dbg !1470
  %10513 = icmp eq i32 %10510, 0, !dbg !1471
  br i1 %10513, label %10514, label %10515, !dbg !1472

10514:                                            ; preds = %10507
  store i8 0, i8* %10512, align 1, !dbg !1473
  br label %8122, !dbg !1474

10515:                                            ; preds = %10507
  store i8 1, i8* %10512, align 1, !dbg !1475
  br label %10516, !dbg !1476

10516:                                            ; preds = %10515, %14
  %10517 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !100
  %10518 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10517, i32 0, i32 1, !dbg !103
  store i16 4, i16* %10518, align 2, !dbg !104
  %10519 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10517, i32 0, i32 0, i32 0, !dbg !105
  %10520 = bitcast double* %10519 to i64*, !dbg !106
  store i64 85, i64* %10520, align 4, !dbg !107
  br label %10546, !dbg !108

10521:                                            ; preds = %14
  %10522 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 87, !dbg !75
  %10523 = call i8* @llvm.stacksave(), !dbg !78
  %10524 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10522, i32 0, i32 4, !dbg !79
  %10525 = load i32, i32* %10524, align 4, !dbg !82
  %10526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10525, !dbg !83
  %10527 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10526, i32 0, i32 1, !dbg !78
  %10528 = load i16, i16* %10527, align 2, !dbg !78
  %10529 = and i16 %10528, 9216, !dbg !78
  %10530 = icmp ne i16 %10529, 0, !dbg !78
  %10531 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %10530, label %10532, label %10534, !dbg !78

10532:                                            ; preds = %10521
  %10533 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10526), !dbg !78
  store %struct.sqlite3_value* %10533, %struct.sqlite3_value** %10531, align 8, !dbg !78
  br label %10535, !dbg !78

10534:                                            ; preds = %10521
  store i16 4, i16* %10527, align 2, !dbg !78
  store %struct.sqlite3_value* %10526, %struct.sqlite3_value** %10531, align 8, !dbg !78
  br label %10535, !dbg !78

10535:                                            ; preds = %10534, %10532
  %10536 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10531, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %10523), !dbg !78
  %10537 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10536, i32 0, i32 0, i32 0, !dbg !84
  %10538 = bitcast double* %10537 to i64*, !dbg !85
  store i64 1, i64* %10538, align 4, !dbg !86
  br label %10539, !dbg !74

10539:                                            ; preds = %10535, %14
  %10540 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1477
  %10541 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10540, i32 0, i32 0, i32 0, !dbg !1480
  %10542 = bitcast double* %10541 to i64*, !dbg !1481
  %10543 = load i64, i64* %10542, align 4, !dbg !1482
  %10544 = add i64 %10543, 1, !dbg !1483
  %10545 = trunc i64 %10544 to i32, !dbg !1484
  store i32 %10545, i32* %15, align 4, !dbg !1485
  br label %14, !dbg !1486

10546:                                            ; preds = %10516, %9009, %14
  %10547 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1274
  %10548 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10547, i32 0, i32 0, i32 0, !dbg !1277
  %10549 = bitcast double* %10548 to i64*, !dbg !1278
  %10550 = load i64, i64* %10549, align 4, !dbg !1279
  %10551 = icmp sgt i64 %10550, 0, !dbg !1280
  br i1 %10551, label %10552, label %.critedge1, !dbg !1281

10552:                                            ; preds = %10546
  br label %10559, !dbg !1282

.critedge1:                                       ; preds = %10546, %14
  %10553 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1477
  %10554 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10553, i32 0, i32 0, i32 0, !dbg !1480
  %10555 = bitcast double* %10554 to i64*, !dbg !1481
  %10556 = load i64, i64* %10555, align 4, !dbg !1482
  %10557 = add i64 %10556, 1, !dbg !1483
  %10558 = trunc i64 %10557 to i32, !dbg !1484
  store i32 %10558, i32* %15, align 4, !dbg !1485
  br label %14, !dbg !1486

10559:                                            ; preds = %10552, %14
  %10560 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 91, !dbg !1487
  %10561 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10560, i32 0, i32 6, !dbg !1490
  %10562 = bitcast %union.p4union* %10561 to %struct.FuncDef**, !dbg !1491
  %10563 = load %struct.FuncDef*, %struct.FuncDef** %10562, align 8, !dbg !1492
  %10564 = call i8* @llvm.stacksave(), !dbg !1493
  %10565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 4, !dbg !1494
  %10566 = alloca i32, align 8, !dbg !1495
  %10567 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %10565, %struct.FuncDef* %10563), !dbg !1496
  store i32 %10567, i32* %10566, align 4, !dbg !1497
  %10568 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %10565, i32 1), !dbg !1498
  %10569 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %10565), !dbg !1499
  call void @llvm.stackrestore(i8* %10564), !dbg !1500
  br label %10570, !dbg !74

10570:                                            ; preds = %10559, %14
  %10571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1501
  %10572 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 37, !dbg !1504
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %10572, %struct.sqlite3_value* %10571, i32 4096), !dbg !1505
  %10573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1501
  %10574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 38, !dbg !1504
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %10574, %struct.sqlite3_value* %10573, i32 4096), !dbg !1505
  %10575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1501
  %10576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !1504
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %10576, %struct.sqlite3_value* %10575, i32 4096), !dbg !1505
  %10577 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 4, !dbg !1501
  %10578 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 40, !dbg !1504
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %10578, %struct.sqlite3_value* %10577, i32 4096), !dbg !1505
  br label %10579, !dbg !74

10579:                                            ; preds = %10570, %14
  %10580 = call i8* @llvm.stacksave(), !dbg !1506
  %10581 = call i32 @sqlite3VdbeCheckFk(%struct.Vdbe* %0, i32 0), !dbg !1509
  %10582 = call i32 @sqlite3VdbeCloseStatement(%struct.Vdbe* %0, i32 1), !dbg !1510
  %10583 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !1511
  %10584 = load i32, i32* %10583, align 4, !dbg !1512
  %10585 = add i32 %10584, 2, !dbg !1513
  %10586 = or i32 %10585, 1, !dbg !1514
  store i32 %10586, i32* %10583, align 4, !dbg !1515
  %10587 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 37, !dbg !1516
  %10588 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 27, !dbg !1517
  store %struct.sqlite3_value* %10587, %struct.sqlite3_value** %10588, align 8, !dbg !1518
  %10589 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10587, i32 1, !dbg !1519
  %10590 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10589, i32 0, i32 1, !dbg !1520
  %10591 = load i16, i16* %10590, align 2, !dbg !1521
  %10592 = and i16 %10591, 4096, !dbg !1522
  %10593 = icmp ne i16 %10592, 0, !dbg !1523
  br i1 %10593, label %10594, label %10596, !dbg !1524

10594:                                            ; preds = %10579
  %10595 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %10589), !dbg !1525
  br label %10596, !dbg !1526

10596:                                            ; preds = %10594, %10579
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %10589), !dbg !1527
  %10597 = load i16, i16* %10590, align 2, !dbg !1521
  %10598 = and i16 %10597, 4096, !dbg !1522
  %10599 = icmp ne i16 %10598, 0, !dbg !1523
  br i1 %10599, label %10600, label %10602, !dbg !1524

10600:                                            ; preds = %10596
  %10601 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %10589), !dbg !1525
  br label %10602, !dbg !1526

10602:                                            ; preds = %10600, %10596
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %10589), !dbg !1527
  %10603 = load i16, i16* %10590, align 2, !dbg !1521
  %10604 = and i16 %10603, 4096, !dbg !1522
  %10605 = icmp ne i16 %10604, 0, !dbg !1523
  br i1 %10605, label %10606, label %10608, !dbg !1524

10606:                                            ; preds = %10602
  %10607 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %10589), !dbg !1525
  br label %10608, !dbg !1526

10608:                                            ; preds = %10606, %10602
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %10589), !dbg !1527
  %10609 = load i16, i16* %10590, align 2, !dbg !1521
  %10610 = and i16 %10609, 4096, !dbg !1522
  %10611 = icmp ne i16 %10610, 0, !dbg !1523
  br i1 %10611, label %10612, label %10614, !dbg !1524

10612:                                            ; preds = %10608
  %10613 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %10589), !dbg !1525
  br label %10614, !dbg !1526

10614:                                            ; preds = %10612, %10608
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %10589), !dbg !1527
  %10615 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1528
  %10616 = getelementptr %struct.sqlite3, %struct.sqlite3* %10615, i32 0, i32 19, !dbg !1529
  %10617 = load i8, i8* %10616, align 1, !dbg !1530
  store i32 94, i32* %15, align 4, !dbg !1531
  call void @llvm.stackrestore(i8* %10580), !dbg !1532
  ret i32 100, !dbg !1533

10618:                                            ; preds = %14
  %10619 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1477
  %10620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10619, i32 0, i32 0, i32 0, !dbg !1480
  %10621 = bitcast double* %10620 to i64*, !dbg !1481
  %10622 = load i64, i64* %10621, align 4, !dbg !1482
  %10623 = add i64 %10622, 1, !dbg !1483
  %10624 = trunc i64 %10623 to i32, !dbg !1484
  store i32 %10624, i32* %15, align 4, !dbg !1485
  br label %14, !dbg !1486

10625:                                            ; preds = %.critedge, %85, %14
  %10626 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 95, !dbg !87
  %10627 = call i8* @llvm.stacksave(), !dbg !90
  %10628 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10626, i32 0, i32 4, !dbg !79
  %10629 = load i32, i32* %10628, align 4, !dbg !82
  %10630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10629, !dbg !83
  %10631 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10630, i32 0, i32 1, !dbg !90
  %10632 = load i16, i16* %10631, align 2, !dbg !90
  %10633 = and i16 %10632, 9216, !dbg !90
  %10634 = icmp ne i16 %10633, 0, !dbg !90
  %10635 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %10634, label %10636, label %10638, !dbg !90

10636:                                            ; preds = %10625
  %10637 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10630), !dbg !90
  store %struct.sqlite3_value* %10637, %struct.sqlite3_value** %10635, align 8, !dbg !90
  br label %10639, !dbg !90

10638:                                            ; preds = %10625
  store i16 4, i16* %10631, align 2, !dbg !90
  store %struct.sqlite3_value* %10630, %struct.sqlite3_value** %10635, align 8, !dbg !90
  br label %10639, !dbg !90

10639:                                            ; preds = %10638, %10636
  %10640 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10635, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %10627), !dbg !90
  %10641 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10640, i32 0, i32 1, !dbg !91
  store i16 1, i16* %10641, align 2, !dbg !92
  %10642 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10640, i32 0, i32 4, !dbg !93
  store i32 0, i32* %10642, align 4, !dbg !94
  %10643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10640, i32 1, !dbg !95
  %10644 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10643, i32 0, i32 1, !dbg !96
  %10645 = load i16, i16* %10644, align 2, !dbg !96
  %10646 = and i16 %10645, 9216, !dbg !96
  %10647 = icmp ne i16 %10646, 0, !dbg !96
  br i1 %10647, label %10648, label %10649, !dbg !96

10648:                                            ; preds = %10639
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10643), !dbg !96
  br label %10650, !dbg !96

10649:                                            ; preds = %10639
  store i16 1, i16* %10644, align 2, !dbg !96
  br label %10650, !dbg !96

10650:                                            ; preds = %10649, %10648
  store i16 1, i16* %10644, align 2, !dbg !97
  %10651 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10643, i32 0, i32 4, !dbg !98
  store i32 0, i32* %10651, align 4, !dbg !99
  %10652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10643, i32 1, !dbg !95
  %10653 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10652, i32 0, i32 1, !dbg !96
  %10654 = load i16, i16* %10653, align 2, !dbg !96
  %10655 = and i16 %10654, 9216, !dbg !96
  %10656 = icmp ne i16 %10655, 0, !dbg !96
  br i1 %10656, label %10657, label %10658, !dbg !96

10657:                                            ; preds = %10650
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10652), !dbg !96
  br label %10659, !dbg !96

10658:                                            ; preds = %10650
  store i16 1, i16* %10653, align 2, !dbg !96
  br label %10659, !dbg !96

10659:                                            ; preds = %10658, %10657
  store i16 1, i16* %10653, align 2, !dbg !97
  %10660 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10652, i32 0, i32 4, !dbg !98
  store i32 0, i32* %10660, align 4, !dbg !99
  %10661 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10652, i32 1, !dbg !95
  %10662 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10661, i32 0, i32 1, !dbg !96
  %10663 = load i16, i16* %10662, align 2, !dbg !96
  %10664 = and i16 %10663, 9216, !dbg !96
  %10665 = icmp ne i16 %10664, 0, !dbg !96
  br i1 %10665, label %10666, label %10667, !dbg !96

10666:                                            ; preds = %10659
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10661), !dbg !96
  br label %10668, !dbg !96

10667:                                            ; preds = %10659
  store i16 1, i16* %10662, align 2, !dbg !96
  br label %10668, !dbg !96

10668:                                            ; preds = %10667, %10666
  store i16 1, i16* %10662, align 2, !dbg !97
  %10669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10661, i32 0, i32 4, !dbg !98
  store i32 0, i32* %10669, align 4, !dbg !99
  %10670 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10661, i32 1, !dbg !95
  %10671 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10670, i32 0, i32 1, !dbg !96
  %10672 = load i16, i16* %10671, align 2, !dbg !96
  %10673 = and i16 %10672, 9216, !dbg !96
  %10674 = icmp ne i16 %10673, 0, !dbg !96
  br i1 %10674, label %10675, label %10676, !dbg !96

10675:                                            ; preds = %10668
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10670), !dbg !96
  br label %10677, !dbg !96

10676:                                            ; preds = %10668
  store i16 1, i16* %10671, align 2, !dbg !96
  br label %10677, !dbg !96

10677:                                            ; preds = %10676, %10675
  store i16 1, i16* %10671, align 2, !dbg !97
  %10678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10670, i32 0, i32 4, !dbg !98
  store i32 0, i32* %10678, align 4, !dbg !99
  %10679 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10670, i32 1, !dbg !95
  %10680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10679, i32 0, i32 1, !dbg !96
  %10681 = load i16, i16* %10680, align 2, !dbg !96
  %10682 = and i16 %10681, 9216, !dbg !96
  %10683 = icmp ne i16 %10682, 0, !dbg !96
  br i1 %10683, label %10684, label %10685, !dbg !96

10684:                                            ; preds = %10677
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10679), !dbg !96
  br label %10686, !dbg !96

10685:                                            ; preds = %10677
  store i16 1, i16* %10680, align 2, !dbg !96
  br label %10686, !dbg !96

10686:                                            ; preds = %10685, %10684
  store i16 1, i16* %10680, align 2, !dbg !97
  %10687 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10679, i32 0, i32 4, !dbg !98
  store i32 0, i32* %10687, align 4, !dbg !99
  br label %10688, !dbg !74

10688:                                            ; preds = %10686, %14
  %10689 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 96, !dbg !75
  %10690 = call i8* @llvm.stacksave(), !dbg !78
  %10691 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10689, i32 0, i32 4, !dbg !79
  %10692 = load i32, i32* %10691, align 4, !dbg !82
  %10693 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10692, !dbg !83
  %10694 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10693, i32 0, i32 1, !dbg !78
  %10695 = load i16, i16* %10694, align 2, !dbg !78
  %10696 = and i16 %10695, 9216, !dbg !78
  %10697 = icmp ne i16 %10696, 0, !dbg !78
  %10698 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %10697, label %10699, label %10701, !dbg !78

10699:                                            ; preds = %10688
  %10700 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10693), !dbg !78
  store %struct.sqlite3_value* %10700, %struct.sqlite3_value** %10698, align 8, !dbg !78
  br label %10702, !dbg !78

10701:                                            ; preds = %10688
  store i16 4, i16* %10694, align 2, !dbg !78
  store %struct.sqlite3_value* %10693, %struct.sqlite3_value** %10698, align 8, !dbg !78
  br label %10702, !dbg !78

10702:                                            ; preds = %10701, %10699
  %10703 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10698, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %10690), !dbg !78
  %10704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10703, i32 0, i32 0, i32 0, !dbg !84
  %10705 = bitcast double* %10704 to i64*, !dbg !85
  store i64 0, i64* %10705, align 4, !dbg !86
  br label %10706, !dbg !74

10706:                                            ; preds = %10702, %14
  %10707 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1477
  %10708 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10707, i32 0, i32 0, i32 0, !dbg !1480
  %10709 = bitcast double* %10708 to i64*, !dbg !1481
  %10710 = load i64, i64* %10709, align 4, !dbg !1482
  %10711 = add i64 %10710, 1, !dbg !1483
  %10712 = trunc i64 %10711 to i32, !dbg !1484
  store i32 %10712, i32* %15, align 4, !dbg !1485
  br label %14, !dbg !1486

10713:                                            ; preds = %9020, %14, %8116, %14
  %10714 = call i32 @sqlite3VdbeHalt(%struct.Vdbe* %0), !dbg !1534
  ret i32 101, !dbg !1537

10715:                                            ; preds = %17, %14
  %10716 = call i8* @llvm.stacksave(), !dbg !1538
  %10717 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1541
  %10718 = load %struct.Db*, %struct.Db** %10717, align 8, !dbg !1542
  %10719 = getelementptr %struct.Db, %struct.Db* %10718, i32 0, i32 1, !dbg !1543
  %10720 = load %struct.Btree*, %struct.Btree** %10719, align 8, !dbg !1544
  %10721 = ptrtoint %struct.Btree* %10720 to i64, !dbg !1545
  %10722 = alloca i32, align 8, !dbg !1546
  %10723 = alloca i32, align 8, !dbg !1547
  %10724 = icmp ne i64 %10721, 0, !dbg !1548
  br i1 %10724, label %10725, label %10727, !dbg !1549

10725:                                            ; preds = %10715
  %10726 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %10720, i32 0, i32* %10722), !dbg !1550
  store i32 %10726, i32* %10723, align 4, !dbg !1551
  br label %10727, !dbg !1552

10727:                                            ; preds = %10725, %10715
  %10728 = load i32, i32* %10722, align 4, !dbg !1553
  %10729 = icmp ne i32 %10728, 5, !dbg !1554
  %10730 = getelementptr %struct.Db, %struct.Db* %10718, i32 0, i32 4, !dbg !1555
  %10731 = load %struct.Schema*, %struct.Schema** %10730, align 8, !dbg !1556
  %10732 = getelementptr %struct.Schema, %struct.Schema* %10731, i32 0, i32 1, !dbg !1557
  %10733 = load i32, i32* %10732, align 4, !dbg !1558
  %10734 = icmp ne i32 %10733, 0, !dbg !1559
  %10735 = or i1 %10734, %10729, !dbg !1560
  %10736 = load i32, i32* %10723, align 4, !dbg !1561
  call void @llvm.stackrestore(i8* %10716), !dbg !1562
  br label %10737, !dbg !74

10737:                                            ; preds = %10727, %14
  %10738 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 100, !dbg !1563
  %10739 = call i8* @llvm.stacksave(), !dbg !1566
  %10740 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10738, i32 0, i32 4, !dbg !79
  %10741 = load i32, i32* %10740, align 4, !dbg !82
  %10742 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10741, !dbg !83
  %10743 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10742, i32 0, i32 1, !dbg !1566
  %10744 = load i16, i16* %10743, align 2, !dbg !1566
  %10745 = and i16 %10744, 9216, !dbg !1566
  %10746 = icmp ne i16 %10745, 0, !dbg !1566
  %10747 = alloca %struct.sqlite3_value*, align 8, !dbg !1566
  br i1 %10746, label %10748, label %10750, !dbg !1566

10748:                                            ; preds = %10737
  %10749 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10742), !dbg !1566
  store %struct.sqlite3_value* %10749, %struct.sqlite3_value** %10747, align 8, !dbg !1566
  br label %10751, !dbg !1566

10750:                                            ; preds = %10737
  store i16 4, i16* %10743, align 2, !dbg !1566
  store %struct.sqlite3_value* %10742, %struct.sqlite3_value** %10747, align 8, !dbg !1566
  br label %10751, !dbg !1566

10751:                                            ; preds = %10750, %10748
  %10752 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10747, align 8, !dbg !1566
  call void @llvm.stackrestore(i8* %10739), !dbg !1566
  %10753 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10752, i32 0, i32 1, !dbg !1567
  %10754 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10752, i32 0, i32 2, !dbg !1568
  %10755 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10752, i32 0, i32 4, !dbg !1569
  %10756 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10752, i32 0, i32 5, !dbg !1570
  store i16 2562, i16* %10753, align 2, !dbg !1571
  %10757 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10738, i32 0, i32 6, !dbg !1572
  %10758 = bitcast %union.p4union* %10757 to i8**, !dbg !1573
  %10759 = load i8*, i8** %10758, align 8, !dbg !1574
  store i8* %10759, i8** %10756, align 8, !dbg !1575
  store i32 6, i32* %10755, align 4, !dbg !1576
  store i8 1, i8* %10754, align 1, !dbg !1577
  br label %10760, !dbg !74

10760:                                            ; preds = %10751, %14
  %10761 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 101, !dbg !1563
  %10762 = call i8* @llvm.stacksave(), !dbg !1566
  %10763 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10761, i32 0, i32 4, !dbg !79
  %10764 = load i32, i32* %10763, align 4, !dbg !82
  %10765 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10764, !dbg !83
  %10766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10765, i32 0, i32 1, !dbg !1566
  %10767 = load i16, i16* %10766, align 2, !dbg !1566
  %10768 = and i16 %10767, 9216, !dbg !1566
  %10769 = icmp ne i16 %10768, 0, !dbg !1566
  %10770 = alloca %struct.sqlite3_value*, align 8, !dbg !1566
  br i1 %10769, label %10771, label %10773, !dbg !1566

10771:                                            ; preds = %10760
  %10772 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10765), !dbg !1566
  store %struct.sqlite3_value* %10772, %struct.sqlite3_value** %10770, align 8, !dbg !1566
  br label %10774, !dbg !1566

10773:                                            ; preds = %10760
  store i16 4, i16* %10766, align 2, !dbg !1566
  store %struct.sqlite3_value* %10765, %struct.sqlite3_value** %10770, align 8, !dbg !1566
  br label %10774, !dbg !1566

10774:                                            ; preds = %10773, %10771
  %10775 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10770, align 8, !dbg !1566
  call void @llvm.stackrestore(i8* %10762), !dbg !1566
  %10776 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10775, i32 0, i32 1, !dbg !1567
  %10777 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10775, i32 0, i32 2, !dbg !1568
  %10778 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10775, i32 0, i32 4, !dbg !1569
  %10779 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10775, i32 0, i32 5, !dbg !1570
  store i16 2562, i16* %10776, align 2, !dbg !1571
  %10780 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10761, i32 0, i32 6, !dbg !1572
  %10781 = bitcast %union.p4union* %10780 to i8**, !dbg !1573
  %10782 = load i8*, i8** %10781, align 8, !dbg !1574
  store i8* %10782, i8** %10779, align 8, !dbg !1575
  store i32 6, i32* %10778, align 4, !dbg !1576
  store i8 1, i8* %10777, align 1, !dbg !1577
  br label %10783, !dbg !74

10783:                                            ; preds = %10774, %14
  %10784 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 102, !dbg !75
  %10785 = call i8* @llvm.stacksave(), !dbg !78
  %10786 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10784, i32 0, i32 4, !dbg !79
  %10787 = load i32, i32* %10786, align 4, !dbg !82
  %10788 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10787, !dbg !83
  %10789 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10788, i32 0, i32 1, !dbg !78
  %10790 = load i16, i16* %10789, align 2, !dbg !78
  %10791 = and i16 %10790, 9216, !dbg !78
  %10792 = icmp ne i16 %10791, 0, !dbg !78
  %10793 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %10792, label %10794, label %10796, !dbg !78

10794:                                            ; preds = %10783
  %10795 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10788), !dbg !78
  store %struct.sqlite3_value* %10795, %struct.sqlite3_value** %10793, align 8, !dbg !78
  br label %10797, !dbg !78

10796:                                            ; preds = %10783
  store i16 4, i16* %10789, align 2, !dbg !78
  store %struct.sqlite3_value* %10788, %struct.sqlite3_value** %10793, align 8, !dbg !78
  br label %10797, !dbg !78

10797:                                            ; preds = %10796, %10794
  %10798 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10793, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %10785), !dbg !78
  %10799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10798, i32 0, i32 0, i32 0, !dbg !84
  %10800 = bitcast double* %10799 to i64*, !dbg !85
  store i64 1997, i64* %10800, align 4, !dbg !86
  br label %10801, !dbg !74

10801:                                            ; preds = %10797, %14
  %10802 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 103, !dbg !75
  %10803 = call i8* @llvm.stacksave(), !dbg !78
  %10804 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10802, i32 0, i32 4, !dbg !79
  %10805 = load i32, i32* %10804, align 4, !dbg !82
  %10806 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10805, !dbg !83
  %10807 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10806, i32 0, i32 1, !dbg !78
  %10808 = load i16, i16* %10807, align 2, !dbg !78
  %10809 = and i16 %10808, 9216, !dbg !78
  %10810 = icmp ne i16 %10809, 0, !dbg !78
  %10811 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %10810, label %10812, label %10814, !dbg !78

10812:                                            ; preds = %10801
  %10813 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10806), !dbg !78
  store %struct.sqlite3_value* %10813, %struct.sqlite3_value** %10811, align 8, !dbg !78
  br label %10815, !dbg !78

10814:                                            ; preds = %10801
  store i16 4, i16* %10807, align 2, !dbg !78
  store %struct.sqlite3_value* %10806, %struct.sqlite3_value** %10811, align 8, !dbg !78
  br label %10815, !dbg !78

10815:                                            ; preds = %10814, %10812
  %10816 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10811, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %10803), !dbg !78
  %10817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10816, i32 0, i32 0, i32 0, !dbg !84
  %10818 = bitcast double* %10817 to i64*, !dbg !85
  store i64 1998, i64* %10818, align 4, !dbg !86
  br label %10819, !dbg !74

10819:                                            ; preds = %10815, %14
  %10820 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 104, !dbg !1563
  %10821 = call i8* @llvm.stacksave(), !dbg !1566
  %10822 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10820, i32 0, i32 4, !dbg !79
  %10823 = load i32, i32* %10822, align 4, !dbg !82
  %10824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10823, !dbg !83
  %10825 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10824, i32 0, i32 1, !dbg !1566
  %10826 = load i16, i16* %10825, align 2, !dbg !1566
  %10827 = and i16 %10826, 9216, !dbg !1566
  %10828 = icmp ne i16 %10827, 0, !dbg !1566
  %10829 = alloca %struct.sqlite3_value*, align 8, !dbg !1566
  br i1 %10828, label %10830, label %10832, !dbg !1566

10830:                                            ; preds = %10819
  %10831 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %10824), !dbg !1566
  store %struct.sqlite3_value* %10831, %struct.sqlite3_value** %10829, align 8, !dbg !1566
  br label %10833, !dbg !1566

10832:                                            ; preds = %10819
  store i16 4, i16* %10825, align 2, !dbg !1566
  store %struct.sqlite3_value* %10824, %struct.sqlite3_value** %10829, align 8, !dbg !1566
  br label %10833, !dbg !1566

10833:                                            ; preds = %10832, %10830
  %10834 = load %struct.sqlite3_value*, %struct.sqlite3_value** %10829, align 8, !dbg !1566
  call void @llvm.stackrestore(i8* %10821), !dbg !1566
  %10835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10834, i32 0, i32 1, !dbg !1567
  %10836 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10834, i32 0, i32 2, !dbg !1568
  %10837 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10834, i32 0, i32 4, !dbg !1569
  %10838 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10834, i32 0, i32 5, !dbg !1570
  store i16 2562, i16* %10835, align 2, !dbg !1571
  %10839 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %10820, i32 0, i32 6, !dbg !1572
  %10840 = bitcast %union.p4union* %10839 to i8**, !dbg !1573
  %10841 = load i8*, i8** %10840, align 8, !dbg !1574
  store i8* %10841, i8** %10838, align 8, !dbg !1575
  store i32 7, i32* %10837, align 4, !dbg !1576
  store i8 1, i8* %10836, align 1, !dbg !1577
  br label %22, !dbg !74
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status64(i32, i64* nocapture, i64* nocapture, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_enter(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_leave(%struct.sqlite3_mutex*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status(i32, i32* nocapture, i32* nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @countLookasideSlots(%struct.LookasideSlot* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_status(%struct.sqlite3*, i32, i32* nocapture, i32*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_msize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeClearObject(%struct.sqlite3*, %struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFree(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getDigits(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
declare i32 @parseTimezone(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseHhMmSs(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @datetimeError(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeJD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @parseYyyyMmDd(i8* nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDateTimeToCurrent(%struct.sqlite3_context* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @setRawDateNumber(%struct.DateTime* nocapture, double) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @parseDateOrTime(%struct.sqlite3_context* nocapture, i8* readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @validJulianDay(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeHMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD_HMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @clearYMD_HMS_TZ(%struct.DateTime* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @osLocaltime(i64*, %struct.tm* nocapture) local_unnamed_addr #3

declare %struct.tm* @localtime(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i64 @localtimeOffset(%struct.DateTime* nocapture readonly, %struct.sqlite3_context* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseModifier(%struct.sqlite3_context* nocapture, i8* readonly, i32, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stricmp(i8* readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_strnicmp(i8* readonly, i8* readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDate(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_type(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_value_double(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @juliandayFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_double(%struct.sqlite3_context* nocapture readonly, double) #3

; Function Attrs: nounwind ssp uwtable
declare void @datetimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_snprintf(i32, i8* returned, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @timeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @strftimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_context_db_handle(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_toobig(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_nomem(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MallocSize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cdateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimestampFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_vfs* @sqlite3_vfs_find(i8* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_initialize() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vfsUnlink(%struct.sqlite3_vfs* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_register(%struct.sqlite3_vfs*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_unregister(%struct.sqlite3_vfs* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_mutex_alloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_free(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_mutex_try(%struct.sqlite3_mutex*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexEnd() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_mutex* @noopMutexAlloc(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexFree(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexEnter(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexTry(%struct.sqlite3_mutex* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexLeave(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexEnd() #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @pthreadMutexAlloc(i32) #3

declare i32 @pthread_mutexattr_init(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @pthread_mutexattr_settype(%struct._opaque_pthread_mutexattr_t*, i32) local_unnamed_addr #12

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @"\01_pthread_mutexattr_destroy"(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexFree(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexEnter(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @pthreadMutexTry(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_trylock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexLeave(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_release_memory(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_memory_alarm(void (i8*, i64, i32)* nocapture readnone, i8* nocapture readnone, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_soft_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_used() #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_soft_heap_limit(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_hard_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_highwater(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @mallocWithAlarm(i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc64(i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isLookaside(%struct.sqlite3* nocapture readonly, i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @lookasideMallocSize(%struct.sqlite3* nocapture readonly, i8* readnone) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @measureAllocationSize(%struct.sqlite3* readonly, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3Realloc(i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc64(i8*, i64) #3

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbMallocRawFinish(%struct.sqlite3*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3OomFault(%struct.sqlite3*) unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbReallocFinish(%struct.sqlite3*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @apiOomError(%struct.sqlite3*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare signext i8 @et_getdigit(x86_fp80* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @setStrAccumError(%struct.sqlite3_str* nocapture, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_reset(%struct.sqlite3_str* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @getIntArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_value_int64(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare double @getDoubleArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @getTextArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @printfTempBuf(%struct.sqlite3_str*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRaw(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_vappendf(%struct.sqlite3_str*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_append(%struct.sqlite3_str*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendchar(%struct.sqlite3_str*, i32, i8 signext) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendall(%struct.sqlite3_str*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3StrAccumEnlarge(%struct.sqlite3_str*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @enlargeAndAppend(%struct.sqlite3_str*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @strAccumFinishRealloc(%struct.sqlite3_str* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_str_finish(%struct.sqlite3_str*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_errcode(%struct.sqlite3_str* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_length(%struct.sqlite3_str* readonly) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @sqlite3_str_value(%struct.sqlite3_str* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_str* @sqlite3_str_new(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vmprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_mprintf(i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vsnprintf(i32, i8* returned, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @renderLogMsg(i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_log(i32, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendf(%struct.sqlite3_str*, i8*, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @compare2pow63(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable writeonly
declare i32 @putVarint64(i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
declare void @logBadConnection(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @strHash(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @insertElement(%struct.Hash* nocapture, %struct._ht*, %struct.HashElem*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @rehash(%struct.Hash* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.HashElem* @findElementWithHash(%struct.Hash* nocapture readonly, i8* nocapture readonly, i32*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @removeElementGivenHash(%struct.Hash* nocapture, %struct.HashElem*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @posixOpen(i8*, i32, i32) #3

declare i32 @"\01_open"(i8*, i32, ...) local_unnamed_addr #12

declare i32 @"\01_close"(i32) #12

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) #9

declare i8* @getcwd(i8*, i64) #12

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #12

declare i32 @"\01_fstat$INODE64"(i32, %struct.stat*) #12

declare i32 @ftruncate(i32, i64) #12

declare i32 @"\01_fcntl"(i32, i32, ...) #12

declare i64 @"\01_read"(i32, i8*, i64) #12

declare i64 @"\01_pread"(i32, i8*, i64, i64) #12

declare i64 @"\01_write"(i32, i8*, i64) #12

declare i64 @"\01_pwrite"(i32, i8*, i64, i64) #12

declare i32 @"\01_fchmod"(i32, i16 zeroext) #12

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) #9

; Function Attrs: nounwind ssp uwtable
declare i32 @openDirectory(i8*, i32* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i16 zeroext) #9

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) #9

declare i32 @fchown(i32, i32, i32) #12

declare i32 @geteuid() #12

declare i8* @"\01_mmap"(i8*, i64, i32, i32, i32, i64) #12

declare i32 @"\01_munmap"(i8*, i64) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetpagesize() #3

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #9

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @robustFchown(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @unixSetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly, void ()*) #8

; Function Attrs: nounwind readonly ssp uwtable
declare void ()* @unixGetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @unixNextSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_open(i8*, i32, i16 zeroext) local_unnamed_addr #3

declare i32* @__error() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixEnterMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixLeaveMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqliteErrorFromPosixError(i32, i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLogErrorAtLine(i32 returned, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @robust_close(%struct.unixFile* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @storeLastErrno(%struct.unixFile* nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @closePendingFds(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseInodeInfo(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findInodeInfo(%struct.unixFile* nocapture, %struct.unixInodeInfo** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @fileHasMoved(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @verifyDbFile(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileLock(%struct.unixFile* nocapture readonly, %struct.flock*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPendingFd(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @posixUnlock(%struct.sqlite3_file*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @closeUnixFile(%struct.sqlite3_file*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixUnmapfile(%struct.unixFile* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixClose(%struct.sqlite3_file*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @nolockCheckReservedLock(%struct.sqlite3_file* nocapture readnone, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockLock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockUnlock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @nolockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockCheckReservedLock(%struct.sqlite3_file* nocapture readonly, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree nounwind
declare i32 @utimes(i8* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_flock(i32, i32) local_unnamed_addr #3

declare i32 @flock(i32, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @flockCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpSetLock(i8*, %struct.unixFile* nocapture, i64, i64, i32) local_unnamed_addr #3

declare i32 @fsctl(i8*, i64, i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpLock(%struct.sqlite3_file* nocapture, i32) #3

declare i64 @random() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @nfsUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndRead(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWriteFd(i32, i64, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWrite(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixWrite(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @full_fsync(i32, i32, i32) local_unnamed_addr #3

declare i32 @"\01_fsync"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSync(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileSize(%struct.sqlite3_file* nocapture, i64* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fcntlSizeHint(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixMapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @unixModeBit(%struct.unixFile* nocapture, i8 zeroext, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileControl(%struct.sqlite3_file*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetTempname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyFileControl(%struct.sqlite3_file*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDeviceCharacteristics(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixSectorSize(%struct.sqlite3_file* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixDeviceCharacteristics(%struct.sqlite3_file* nocapture) #15

declare i64 @sysconf(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmSystemLock(%struct.unixFile* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmRegionPerMap() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmPurge(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLockSharedMemory(%struct.unixFile* nocapture readonly, %struct.unixShmNode* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpenSharedMemory(%struct.unixFile*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_uri_boolean(i8* readonly, i8* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmMap(%struct.sqlite3_file*, i32, i32, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmLock(%struct.sqlite3_file* nocapture readonly, i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmBarrier(%struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmUnmap(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixRemapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFetch(%struct.sqlite3_file* nocapture, i64, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnfetch(%struct.sqlite3_file* nocapture, i64, i8* readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @posixIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nolockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @dotlockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @flockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @afpIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyLock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCheckReservedLock(%struct.sqlite3_file*, i32*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @proxyIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nfsIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_io_methods* @autolockIoFinderImpl(i8*, %struct.unixFile* nocapture readonly) #3

declare i32 @"\01_statfs$INODE64"(i8*, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInUnixFile(%struct.sqlite3_vfs*, i32, %struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

declare void @srandomdev() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i8* @unixTempFileDir() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare %struct.UnixUnusedFd* @findReusableFd(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getFileMode(i8*, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findCreateFileMode(i8*, i32, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_parameter(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*) #3

declare i32 @getpid() local_unnamed_addr #12

declare i32 @"\01_fstatfs$INODE64"(i32, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTransformUnixFile(%struct.unixFile* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixDelete(%struct.sqlite3_vfs* nocapture readnone, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixAccess(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @mkFullPathname(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFullPathname(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @unixDlOpen(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i8* @dlopen(i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlError(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i8* @dlerror() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void ()* @unixDlSym(%struct.sqlite3_vfs* nocapture readnone, i8*, i8*) #3

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlClose(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i32 @dlclose(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRandomness(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i64 @time(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSleep(%struct.sqlite3_vfs* nocapture readnone, i32) #3

declare i32 @"\01_sleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTimeInt64(%struct.sqlite3_vfs* nocapture readnone, i64* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTime(%struct.sqlite3_vfs* nocapture readnone, double* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetLastError(%struct.sqlite3_vfs* nocapture readnone, i32, i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetLockPath(i8* nocapture readonly, i8*, i64) local_unnamed_addr #3

declare i64 @"\01_confstr"(i32, i8*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateLockPath(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateUnixFile(i8*, %struct.unixFile** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetHostID(i8*, i32*) local_unnamed_addr #3

declare i32 @gethostuuid(i8*, %struct.timespec*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyBreakConchLock(%struct.unixFile* readonly, i8* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @__strlcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyConchLock(%struct.unixFile*, i8* nocapture readonly, i32) local_unnamed_addr #3

declare i32 @"\01_usleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTakeConch(%struct.unixFile*) local_unnamed_addr #3

declare i32 @futimes(i32, %struct.timeval*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbStrDup(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyReleaseConch(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateConchPathname(i8*, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @switchLockProxyPath(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @proxyGetDbPathForUnixFile(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_os_init() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_os_end() local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcacheManageDirtyList(%struct.PgHdr*, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcacheUnpin(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @numberOfCachePages(%struct.PCache* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree noinline nounwind ssp uwtable
declare %struct.PgHdr* @pcacheFetchFinishWithInit(%struct.PCache*, i32, %struct.sqlite3_pcache_page*) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheMergeDirtyList(%struct.PgHdr*, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheSortDirtyList(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1InitBulk(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pcache1Alloc(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1AllocPage(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1FreePage(%struct.PgHdr1*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1UnderMemoryPressure(%struct.PCache1* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pcache1ResizeHash(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1PinPage(%struct.PgHdr1* returned) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1RemoveFromHash(%struct.PgHdr1*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1EnforceMaxPage(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1TruncateUnsafe(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1Init(i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable writeonly
declare void @pcache1Shutdown(i8* nocapture readnone) #20

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache* @pcache1Create(i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Destroy(%struct.sqlite3_pcache*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Cachesize(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Shrink(%struct.sqlite3_pcache* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1Pagecount(%struct.sqlite3_pcache* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchStage2(%struct.PCache1*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchNoMutex(%struct.sqlite3_pcache*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache_page* @pcache1Fetch(%struct.sqlite3_pcache*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Unpin(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcache1Rekey(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Truncate(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryAlloc(%struct.RowSet* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryMerge(%struct.RowSetEntry*, %struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntrySort(%struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @rowSetTreeToList(%struct.RowSetEntry*, %struct.RowSetEntry** nocapture, %struct.RowSetEntry** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetNDeepTree(%struct.RowSetEntry**, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetListToTree(%struct.RowSetEntry*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setGetterMethod(%struct.Pager* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @getPageError(%struct.Pager* nocapture readonly, i32, %struct.PgHdr** nocapture, i32) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageMMap(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageNormal(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @subjRequiresPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @read32bits(%struct.sqlite3_file*, i64, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @write32bits(%struct.sqlite3_file*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUnlockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerLockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @jrnlBufferSize(%struct.Pager* nocapture readnone) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @readMasterJournal(%struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @journalHdrOffset(%struct.Pager* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @zeroJournalHdr(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeJournalHdr(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readJournalHdr(%struct.Pager* nocapture, i32, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetPagesize(%struct.Pager* nocapture, i32* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeMasterJournal(%struct.Pager* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_reset(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseAllSavepoints(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BitvecDestroy(%struct.Bitvec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addToSavepointBitvecs(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BitvecSet(%struct.Bitvec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_unlock(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @pager_error(%struct.Pager* nocapture, i32 returned) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pagerFlushOnCommit(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_end_transaction(%struct.Pager*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_truncate(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockAndRollback(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerRollback(%struct.Pager*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pager_cksum(%struct.Pager* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback_one_page(%struct.Pager*, i64* nocapture, %struct.Bitvec*, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3PcacheRelease(%struct.PgHdr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_delmaster(%struct.Pager* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setSectorSize(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readDbPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalFindFrame(%struct.Wal* nocapture, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pager_write_changecounter(%struct.PgHdr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUndoCallback(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerRollbackWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerWalFrames(%struct.Pager* nocapture, %struct.PgHdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerBeginReadTransaction(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPagecount(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWalIfPresent(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPlaybackSavepoint(%struct.Pager*, %struct.PagerSavepoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFixMaplimit(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpentemp(%struct.Pager* nocapture readonly, %struct.sqlite3_file*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_wait_on_lock(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerSyncHotJournal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerAcquireMapPage(%struct.Pager*, i32, i8*, %struct.PgHdr** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerReleaseMapPage(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFreeMapHdrs(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @databaseIsUnmoved(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @syncJournal(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write_pagelist(%struct.Pager*, %struct.PgHdr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @openSubJournal(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPageIfRequired(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerStress(i8*, %struct.PgHdr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @hasHotJournal(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockIfUnused(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_open_journal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerAddPageToRollbackJournal(%struct.PgHdr* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerWriteLargeSector(%struct.PgHdr* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_incr_changecounter(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerOpenSavepoint(%struct.Pager* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerExclusiveLock(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walIndexPageRealloc(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexPage(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull %struct.WalCkptInfo* @walCkptInfo(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WalIndexHdr* @walIndexHdr(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare void @walChecksumBytes(i32, i8* readonly, i32, i32* readonly, i32* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walShmBarrier(%struct.Wal* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexWriteHdr(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @walEncodeFrame(%struct.Wal*, i32, i32, i8* readonly, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @walDecodeFrame(%struct.Wal* nocapture, i32* nocapture, i32* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walHash(i32) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walNextHash(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @walHashGet(%struct.Wal* nocapture, i32, %struct.WalHashLoc* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walFramePage(i32) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walFramePgno(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @walCleanupHash(%struct.Wal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexAppend(%struct.Wal* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexRecover(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexClose(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walIteratorNext(%struct.WalIterator* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare void @walMerge(i32* nocapture readonly, i16*, i32, i16** nocapture, i32* nocapture, i16*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walMergesort(i32* nocapture readonly, i16*, i16*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIteratorFree(%struct.WalIterator*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIteratorInit(%struct.Wal* nocapture, i32, %struct.WalIterator** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBusyLock(%struct.Wal* nocapture readonly, i32 (i8*)*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @walPagesize(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @walRestartHdr(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walLimitSize(%struct.Wal* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexTryHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexReadHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBeginShmUnreliable(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walTryBeginRead(%struct.Wal*, i32* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRestartLog(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteToLog(%struct.WalWriter* nocapture readonly, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteOneFrame(%struct.WalWriter* nocapture readonly, %struct.PgHdr* nocapture readonly, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRewriteChecksums(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @lockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @unlockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLockCarefully(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeEnterAll(%struct.sqlite3* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLeaveAll(%struct.sqlite3* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_enable_shared_cache(i32) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @querySharedCacheTableLock(%struct.Btree* readonly, i32, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @setSharedCacheTableLock(%struct.Btree*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @clearAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @downgradeAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateAllOverflowCache(%struct.BtShared* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateIncrblobCursors(%struct.Btree* nocapture, i32, i64, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeSetHasContent(%struct.BtShared* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreeGetHasContent(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @btreeClearHasContent(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeReleaseAllCursorPages(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageNotNull(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorKey(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveAllCursors(%struct.BtShared* nocapture readonly, i32, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @saveCursorsOnList(%struct.BtCursor*, i32, %struct.BtCursor* readnone) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeMoveto(%struct.BtCursor*, i8*, i64, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeRestoreCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @ptrmapPageno(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPut(%struct.BtShared* nocapture readonly, i32, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @ptrmapGet(%struct.BtShared* nocapture readonly, i32, i8* nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind ssp uwtable
declare void @btreeParseCellAdjustSizeForOverflow(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) local_unnamed_addr #21

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly, %struct.CellInfo* nocapture) #15

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local zeroext i8 @sqlite3GetVarint(i8* nocapture readonly %p, i64* nocapture %v) unnamed_addr #2 {
entry:
  %0 = load i8, i8* %p, align 1, !tbaa !10
  %cmp = icmp sgt i8 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv2 = zext i8 %0 to i64
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds i8, i8* %p, i64 1
  %1 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %cmp5 = icmp sgt i8 %1, -1
  %conv9 = zext i8 %0 to i32
  br i1 %cmp5, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end
  %and = shl nuw nsw i32 %conv9, 7
  %shl = and i32 %and, 16256
  %conv11 = zext i8 %1 to i32
  %or = or i32 %shl, %conv11
  %conv12 = zext i32 %or to i64
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %shl16 = shl nuw nsw i32 %conv9, 14
  %conv18 = zext i8 %1 to i32
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 2
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv19 = zext i8 %2 to i32
  %or20 = or i32 %shl16, %conv19
  %tobool = icmp slt i8 %2, 0
  %and29 = and i32 %or20, 2080895
  br i1 %tobool, label %if.end28, label %if.then22

if.then22:                                        ; preds = %if.end13
  %and24 = shl nuw nsw i32 %conv18, 7
  %shl25 = and i32 %and24, 16256
  %or26 = or i32 %and29, %shl25
  %conv27 = zext i32 %or26 to i64
  br label %cleanup

if.end28:                                         ; preds = %if.end13
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 3
  %shl30 = shl nuw nsw i32 %conv18, 14
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv31 = zext i8 %3 to i32
  %or32 = or i32 %shl30, %conv31
  %tobool34 = icmp slt i8 %3, 0
  %and41 = and i32 %or32, 2080895
  br i1 %tobool34, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end28
  %shl37 = shl nuw nsw i32 %and29, 7
  %or38 = or i32 %and41, %shl37
  %conv39 = zext i32 %or38 to i64
  br label %cleanup

if.end40:                                         ; preds = %if.end28
  %incdec.ptr42 = getelementptr inbounds i8, i8* %p, i64 4
  %shl43 = shl i32 %and29, 14
  %4 = load i8, i8* %incdec.ptr42, align 1, !tbaa !10
  %conv44 = zext i8 %4 to i32
  %or45 = or i32 %shl43, %conv44
  %tobool47 = icmp slt i8 %4, 0
  br i1 %tobool47, label %if.end55, label %if.then48

if.then48:                                        ; preds = %if.end40
  %shl49 = shl nuw nsw i32 %and41, 7
  %or50 = or i32 %or45, %shl49
  %shr = lshr i32 %and29, 18
  %conv51 = zext i32 %shr to i64
  %shl52 = shl nuw nsw i64 %conv51, 32
  %conv53 = zext i32 %or50 to i64
  %or54 = or i64 %shl52, %conv53
  br label %cleanup

if.end55:                                         ; preds = %if.end40
  %shl56 = shl nuw nsw i32 %and29, 7
  %or57 = or i32 %and41, %shl56
  %incdec.ptr58 = getelementptr inbounds i8, i8* %p, i64 5
  %shl59 = shl i32 %and41, 14
  %5 = load i8, i8* %incdec.ptr58, align 1, !tbaa !10
  %conv60 = zext i8 %5 to i32
  %or61 = or i32 %shl59, %conv60
  %tobool63 = icmp slt i8 %5, 0
  br i1 %tobool63, label %if.end73, label %if.then64

if.then64:                                        ; preds = %if.end55
  %and65 = shl i32 %or45, 7
  %shl66 = and i32 %and65, 266354560
  %or67 = or i32 %or61, %shl66
  %shr68 = lshr i32 %or57, 18
  %conv69 = zext i32 %shr68 to i64
  %shl70 = shl nuw nsw i64 %conv69, 32
  %conv71 = zext i32 %or67 to i64
  %or72 = or i64 %shl70, %conv71
  br label %cleanup

if.end73:                                         ; preds = %if.end55
  %incdec.ptr74 = getelementptr inbounds i8, i8* %p, i64 6
  %shl75 = shl i32 %or45, 14
  %6 = load i8, i8* %incdec.ptr74, align 1, !tbaa !10
  %conv76 = zext i8 %6 to i32
  %or77 = or i32 %shl75, %conv76
  %tobool79 = icmp slt i8 %6, 0
  br i1 %tobool79, label %if.end90, label %if.then80

if.then80:                                        ; preds = %if.end73
  %and81 = and i32 %or77, -266354561
  %and82 = shl i32 %or61, 7
  %shl83 = and i32 %and82, 266354560
  %or84 = or i32 %and81, %shl83
  %shr85 = lshr i32 %or57, 11
  %conv86 = zext i32 %shr85 to i64
  %shl87 = shl nuw nsw i64 %conv86, 32
  %conv88 = zext i32 %or84 to i64
  %or89 = or i64 %shl87, %conv88
  br label %cleanup

if.end90:                                         ; preds = %if.end73
  %and91 = and i32 %or77, 2080895
  %incdec.ptr92 = getelementptr inbounds i8, i8* %p, i64 7
  %shl93 = shl i32 %or61, 14
  %7 = load i8, i8* %incdec.ptr92, align 1, !tbaa !10
  %conv94 = zext i8 %7 to i32
  %or95 = or i32 %shl93, %conv94
  %tobool97 = icmp slt i8 %7, 0
  br i1 %tobool97, label %if.end107, label %if.then98

if.then98:                                        ; preds = %if.end90
  %and99 = and i32 %or95, -266354561
  %shl100 = shl nuw nsw i32 %and91, 7
  %or101 = or i32 %and99, %shl100
  %shr102 = lshr i32 %or57, 4
  %conv103 = zext i32 %shr102 to i64
  %shl104 = shl nuw nsw i64 %conv103, 32
  %conv105 = zext i32 %or101 to i64
  %or106 = or i64 %shl104, %conv105
  br label %cleanup

if.end107:                                        ; preds = %if.end90
  %incdec.ptr108 = getelementptr inbounds i8, i8* %p, i64 8
  %shl109 = shl i32 %and91, 15
  %8 = load i8, i8* %incdec.ptr108, align 1, !tbaa !10
  %conv110 = zext i8 %8 to i32
  %and112 = shl i32 %or95, 8
  %shl113 = and i32 %and112, 532709120
  %or111 = or i32 %shl113, %shl109
  %or114 = or i32 %or111, %conv110
  %shl115 = shl nuw i32 %or57, 4
  %9 = lshr i8 %4, 3
  %10 = and i8 %9, 15
  %shr119 = zext i8 %10 to i32
  %or120 = or i32 %shl115, %shr119
  %conv121 = zext i32 %or120 to i64
  %shl122 = shl nuw i64 %conv121, 32
  %conv123 = zext i32 %or114 to i64
  %or124 = or i64 %shl122, %conv123
  br label %cleanup

cleanup:                                          ; preds = %if.end107, %if.then98, %if.then80, %if.then64, %if.then48, %if.then35, %if.then22, %if.then7, %if.then
  %or124.sink = phi i64 [ %or124, %if.end107 ], [ %or106, %if.then98 ], [ %or89, %if.then80 ], [ %or72, %if.then64 ], [ %or54, %if.then48 ], [ %conv39, %if.then35 ], [ %conv27, %if.then22 ], [ %conv12, %if.then7 ], [ %conv2, %if.then ]
  %retval.0 = phi i8 [ 9, %if.end107 ], [ 8, %if.then98 ], [ 7, %if.then80 ], [ 6, %if.then64 ], [ 5, %if.then48 ], [ 4, %if.then35 ], [ 3, %if.then22 ], [ 2, %if.then7 ], [ 1, %if.then ]
  store i64 %or124.sink, i64* %v, align 8, !tbaa !16
  ret i8 %retval.0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtr(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrIndex(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @btreeParseCell(%struct.MemPage*, i32, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtr(%struct.MemPage* nocapture readonly, i8*) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPutOvflPtr(%struct.MemPage*, %struct.MemPage* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @defragmentPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pageFindSlot(%struct.MemPage* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateSpace(%struct.MemPage*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @freeSpace(%struct.MemPage* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @decodeFlags(%struct.MemPage* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeComputeFreeSpace(%struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeCellSizeCheck(%struct.MemPage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInitPage(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.MemPage* @btreePageFromDbPage(%struct.PgHdr*, i32, %struct.BtShared*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MemPage* @btreePageLookup(%struct.BtShared*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreePagecount(%struct.BtShared* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAndInitPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, %struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePage(%struct.MemPage* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageOne(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetUnusedPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pageReinit(%struct.PgHdr* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInvokeBusyHandler(i8* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @removeFromSharingList(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @allocateTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @lockBtree(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSharedLock(%struct.Pager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unlockBtreeIfUnused(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @newDatabase(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setChildPtrmaps(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @modifyPagePointer(%struct.MemPage*, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @relocatePage(%struct.BtShared*, %struct.MemPage*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @incrVacuumStep(%struct.BtShared*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateBtreePage(%struct.BtShared*, %struct.MemPage** nocapture, i32* nocapture, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @finalDbSize(%struct.BtShared* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @autoVacuumCommit(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeEndTransaction(%struct.Btree*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeSetNPage(%struct.BtShared* nocapture, %struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursorWithLock(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @getCellInfo(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @getOverflowPage(%struct.BtShared*, i32, %struct.MemPage**, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @copyPayload(i8*, i8*, i32, i32, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @accessPayload(%struct.BtCursor*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @accessPayloadChecked(%struct.BtCursor*, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @fetchPayload(%struct.BtCursor* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToChild(%struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @moveToParent(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRoot(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToLeftmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRightmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeNext(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreePrevious(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @freePage2(%struct.BtShared*, %struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freePage(%struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearCell(%struct.MemPage*, i8*, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInCell(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @dropCell(%struct.MemPage* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @insertCell(%struct.MemPage*, i32, i8*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @populateCellCache(%struct.CellArray* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @cachedCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @rebuildPage(%struct.CellArray* nocapture readonly, i32, i32, %struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageInsertArray(%struct.MemPage* nocapture readonly, i8*, i8** nocapture, i8* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageFreeArray(%struct.MemPage* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @editPage(%struct.MemPage*, i32, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_quick(%struct.MemPage*, %struct.MemPage*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @copyNodeContent(%struct.MemPage* nocapture readonly, %struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_nonroot(%struct.MemPage*, i32, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_deeper(%struct.MemPage*, %struct.MemPage** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @anotherValidCursor(%struct.BtCursor* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteContent(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteCell(%struct.BtCursor* nocapture readonly, %struct.BtreePayload* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCreateTable(%struct.Btree* nocapture, i32* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearDatabasePage(%struct.BtShared*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeDropTable(%struct.Btree*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkAppendMsg(%struct.IntegrityCk*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkRef(%struct.IntegrityCk*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkPtrmap(%struct.IntegrityCk*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkList(%struct.IntegrityCk*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeHeapInsert(i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @btreeHeapPull(i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkTreePage(%struct.IntegrityCk*, i32, i64* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Btree* @findBtree(%struct.sqlite3*, %struct.sqlite3*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTempDatabase(%struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorWithMsg(%struct.sqlite3*, i32, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDestPgsz(%struct.sqlite3_backup* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetPageSize(%struct.Btree* nocapture, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @checkReadTransaction(%struct.sqlite3*, %struct.Btree* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_backup* @sqlite3_backup_init(%struct.sqlite3*, i8*, %struct.sqlite3*, i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @isFatalError(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @backupOnePage(%struct.sqlite3_backup* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @backupTruncateFile(%struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @attachBackupObject(%struct.sqlite3_backup*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_step(%struct.sqlite3_backup*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ResetAllSchemasOfConnection(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerCommitPhaseOne(%struct.Pager*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseTwo(%struct.Btree*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseOne(%struct.Btree* nocapture, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_finish(%struct.sqlite3_backup*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeRollback(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3LeaveMutexAndCloseZombie(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_remaining(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_pagecount(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @backupUpdate(%struct.sqlite3_backup* nocapture, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMemRenderNum(i32, i8*, %struct.sqlite3_value* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeMemAddTerminator(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClear(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define i64 @doubleToInt64(double %r) local_unnamed_addr #22 {
entry:
  %cmp = fcmp ugt double %r, 0xC3E0000000000000
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult double %r, 0x43E0000000000000
  br i1 %cmp1, label %if.else3, label %return

if.else3:                                         ; preds = %if.else
  %conv = fptosi double %r to i64
  br label %return

return:                                           ; preds = %if.else3, %if.else, %entry
  %retval.0 = phi i64 [ %conv, %if.else3 ], [ -9223372036854775808, %entry ], [ 9223372036854775807, %if.else ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind ssp uwtable
declare i64 @memIntValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3Atoi64(i8* readonly %zNum, i64* nocapture %pNum, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  %conv = zext i8 %enc to i32
  %cmp = icmp eq i8 %enc, 1
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %sub = sub nsw i32 3, %conv
  %cmp3255 = icmp slt i32 %sub, %length
  br i1 %cmp3255, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %length to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv266 = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next267, %for.inc ]
  %i.0256 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %zNum, i64 %indvars.iv266
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %for.inc, label %for.end.loopexit.split.loop.exit295

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next267 = add i64 %indvars.iv266, 2
  %add = add nsw i32 %i.0256, 2
  %cmp3 = icmp slt i64 %indvars.iv.next267, %1
  br i1 %cmp3, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit295:              ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv266 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit295, %for.inc, %if.else
  %i.0.lcssa = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit295 ], [ %add, %for.inc ]
  %cmp3.lcssa = phi i32 [ 0, %if.else ], [ 1, %for.end.loopexit.split.loop.exit295 ], [ 0, %for.inc ]
  %xor = xor i32 %i.0.lcssa, 1
  %and = and i32 %conv, 1
  %idx.ext13 = zext i32 %and to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext13
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %zNum.addr.0 = phi i8* [ %add.ptr14, %for.end ], [ %zNum, %entry ]
  %incr.0 = phi i32 [ 2, %for.end ], [ 1, %entry ]
  %nonNum.0 = phi i32 [ %cmp3.lcssa, %for.end ], [ 0, %entry ]
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %entry ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext.pn
  %cmp15252 = icmp ult i8* %zNum.addr.0, %zEnd.0
  br i1 %cmp15252, label %land.rhs17.lr.ph, label %if.end43

land.rhs17.lr.ph:                                 ; preds = %if.end
  %idx.ext23 = zext i32 %incr.0 to i64
  br label %land.rhs17

land.rhs17:                                       ; preds = %while.body, %land.rhs17.lr.ph
  %zNum.addr.1253 = phi i8* [ %zNum.addr.0, %land.rhs17.lr.ph ], [ %add.ptr24, %while.body ]
  %4 = load i8, i8* %zNum.addr.1253, align 1, !tbaa !10
  %idxprom18 = zext i8 %4 to i64
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom18
  %5 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %6 = and i8 %5, 1
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.then27, label %while.body

while.body:                                       ; preds = %land.rhs17
  %add.ptr24 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  %cmp15 = icmp ult i8* %add.ptr24, %zEnd.0
  br i1 %cmp15, label %land.rhs17, label %if.end43

if.then27:                                        ; preds = %land.rhs17
  switch i8 %4, label %if.end43 [
    i8 45, label %if.then31
    i8 43, label %if.then38
  ]

if.then31:                                        ; preds = %if.then27
  %add.ptr33 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.then38:                                        ; preds = %if.then27
  %add.ptr40 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.then31, %if.then27, %while.body, %if.end
  %zNum.addr.2 = phi i8* [ %add.ptr33, %if.then31 ], [ %add.ptr40, %if.then38 ], [ %zNum.addr.1253, %if.then27 ], [ %zNum.addr.0, %if.end ], [ %add.ptr24, %while.body ]
  %neg.0 = phi i32 [ 1, %if.then31 ], [ 0, %if.then38 ], [ 0, %if.then27 ], [ 0, %if.end ], [ 0, %while.body ]
  %cmp45248 = icmp ult i8* %zNum.addr.2, %zEnd.0
  br i1 %cmp45248, label %land.rhs47.lr.ph, label %while.end56

land.rhs47.lr.ph:                                 ; preds = %if.end43
  %idx.ext54 = zext i32 %incr.0 to i64
  br label %land.rhs47

land.rhs47:                                       ; preds = %while.body53, %land.rhs47.lr.ph
  %zNum.addr.3249 = phi i8* [ %zNum.addr.2, %land.rhs47.lr.ph ], [ %add.ptr55, %while.body53 ]
  %7 = load i8, i8* %zNum.addr.3249, align 1, !tbaa !10
  %cmp50 = icmp eq i8 %7, 48
  br i1 %cmp50, label %while.body53, label %while.end56

while.body53:                                     ; preds = %land.rhs47
  %add.ptr55 = getelementptr inbounds i8, i8* %zNum.addr.3249, i64 %idx.ext54
  %cmp45 = icmp ult i8* %add.ptr55, %zEnd.0
  br i1 %cmp45, label %land.rhs47, label %while.end56

while.end56:                                      ; preds = %while.body53, %land.rhs47, %if.end43
  %zNum.addr.3.lcssa = phi i8* [ %zNum.addr.2, %if.end43 ], [ %add.ptr55, %while.body53 ], [ %zNum.addr.3249, %land.rhs47 ]
  %cmp60238 = icmp ult i8* %zNum.addr.3.lcssa, %zEnd.0
  br i1 %cmp60238, label %land.end70.preheader, label %for.end77.thread

for.end77.thread:                                 ; preds = %while.end56
  %tobool81272 = icmp eq i32 %neg.0, 0
  br i1 %tobool81272, label %if.end88, label %if.then84

land.end70.preheader:                             ; preds = %while.end56
  %8 = zext i32 %incr.0 to i64
  br label %land.end70

land.end70:                                       ; preds = %for.body71, %land.end70.preheader
  %indvars.iv264 = phi i64 [ 0, %land.end70.preheader ], [ %indvars.iv.next265, %for.body71 ]
  %arrayidx59241 = phi i8* [ %zNum.addr.3.lcssa, %land.end70.preheader ], [ %arrayidx59, %for.body71 ]
  %i.1240 = phi i32 [ 0, %land.end70.preheader ], [ %add76, %for.body71 ]
  %u.0239 = phi i64 [ 0, %land.end70.preheader ], [ %sub74, %for.body71 ]
  %9 = load i8, i8* %arrayidx59241, align 1, !tbaa !10
  %.off = add i8 %9, -48
  %10 = icmp ult i8 %.off, 10
  br i1 %10, label %for.body71, label %for.end77.split.loop.exit

for.body71:                                       ; preds = %land.end70
  %mul = mul i64 %u.0239, 10
  %conv72288 = zext i8 %9 to i64
  %add73 = add i64 %mul, -48
  %sub74 = add i64 %add73, %conv72288
  %indvars.iv.next265 = add i64 %indvars.iv264, %8
  %add76 = add nuw nsw i32 %i.1240, %incr.0
  %arrayidx59 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next265
  %cmp60 = icmp ult i8* %arrayidx59, %zEnd.0
  br i1 %cmp60, label %land.end70, label %for.end77

for.end77.split.loop.exit:                        ; preds = %land.end70
  %11 = trunc i64 %indvars.iv264 to i32
  br label %for.end77

for.end77:                                        ; preds = %for.end77.split.loop.exit, %for.body71
  %u.0.lcssa = phi i64 [ %u.0239, %for.end77.split.loop.exit ], [ %sub74, %for.body71 ]
  %i.1.lcssa = phi i32 [ %11, %for.end77.split.loop.exit ], [ %add76, %for.body71 ]
  %cmp60.lcssa = phi i1 [ true, %for.end77.split.loop.exit ], [ false, %for.body71 ]
  %cmp78 = icmp slt i64 %u.0.lcssa, 0
  %tobool81 = icmp ne i32 %neg.0, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %for.end77
  %cond = select i1 %tobool81, i64 -9223372036854775808, i64 9223372036854775807
  br label %if.end88

if.else82:                                        ; preds = %for.end77
  br i1 %tobool81, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.else82, %for.end77.thread
  %u.0.lcssa273286 = phi i64 [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %i.1.lcssa275284 = phi i32 [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  %cmp60.lcssa277282 = phi i1 [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %sub85 = sub nsw i64 0, %u.0.lcssa273286
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.else82, %if.then80, %for.end77.thread
  %sub85.sink = phi i64 [ %sub85, %if.then84 ], [ %cond, %if.then80 ], [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %tobool81279 = phi i1 [ true, %if.then84 ], [ %tobool81, %if.then80 ], [ false, %for.end77.thread ], [ false, %if.else82 ]
  %cmp60.lcssa276 = phi i1 [ %cmp60.lcssa277282, %if.then84 ], [ %cmp60.lcssa, %if.then80 ], [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %i.1.lcssa274 = phi i32 [ %i.1.lcssa275284, %if.then84 ], [ %i.1.lcssa, %if.then80 ], [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  store i64 %sub85.sink, i64* %pNum, align 8, !tbaa !16
  %cmp89 = icmp eq i32 %i.1.lcssa274, 0
  %cmp92 = icmp eq i8* %zNum.addr.2, %zNum.addr.3.lcssa
  %or.cond = and i1 %cmp92, %cmp89
  br i1 %or.cond, label %if.end120, label %if.else95

if.else95:                                        ; preds = %if.end88
  %tobool96 = icmp ne i32 %nonNum.0, 0
  %cmp60.not = xor i1 %cmp60.lcssa276, true
  %brmerge = or i1 %tobool96, %cmp60.not
  br i1 %brmerge, label %if.end120, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else95
  %12 = zext i32 %i.1.lcssa274 to i64
  %13 = zext i32 %incr.0 to i64
  br label %do.body

do.body:                                          ; preds = %if.end112, %do.body.preheader
  %indvars.iv = phi i64 [ %12, %do.body.preheader ], [ %indvars.iv.next, %if.end112 ]
  %arrayidx105 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %idxprom106 = zext i8 %14 to i64
  %arrayidx107 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom106
  %15 = load i8, i8* %arrayidx107, align 1, !tbaa !10
  %16 = and i8 %15, 1
  %tobool110 = icmp eq i8 %16, 0
  br i1 %tobool110, label %if.end120, label %if.end112

if.end112:                                        ; preds = %do.body
  %indvars.iv.next = add i64 %indvars.iv, %13
  %arrayidx115 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next
  %cmp116 = icmp ult i8* %arrayidx115, %zEnd.0
  br i1 %cmp116, label %do.body, label %if.end120

if.end120:                                        ; preds = %if.end112, %do.body, %if.else95, %if.end88
  %rc.1 = phi i32 [ -1, %if.end88 ], [ %nonNum.0, %if.else95 ], [ 1, %do.body ], [ 0, %if.end112 ]
  %mul121 = mul nuw nsw i32 %incr.0, 19
  %cmp122 = icmp ult i32 %i.1.lcssa274, %mul121
  br i1 %cmp122, label %cleanup, label %if.else125

if.else125:                                       ; preds = %if.end120
  %cmp127 = icmp ugt i32 %i.1.lcssa274, %mul121
  br i1 %cmp127, label %if.else133.thread, label %cond.false

if.else133.thread:                                ; preds = %if.else125
  %cond135233 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135233, i64* %pNum, align 8, !tbaa !16
  br label %cleanup

cond.false:                                       ; preds = %if.else125
  %17 = zext i32 %incr.0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %cond.false
  %indvars.iv.i = phi i64 [ 0, %cond.false ], [ %indvars.iv.next.i, %for.body.i ]
  %18 = mul nuw nsw i64 %indvars.iv.i, %17
  %arrayidx.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %18
  %19 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = sext i8 %19 to i32
  %arrayidx3.i = getelementptr inbounds [19 x i8], [19 x i8]* @.str.33, i64 0, i64 %indvars.iv.i
  %20 = load i8, i8* %arrayidx3.i, align 1, !tbaa !10
  %conv4.i = sext i8 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp eq i32 %sub.i, 0
  %cmp1.i = icmp ult i64 %indvars.iv.i, 17
  %21 = and i1 %cmp1.i, %cmp.i
  br i1 %21, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i
  %mul5.i = mul nsw i32 %sub.i, 10
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %for.end.i
  %mul8.i = mul nuw nsw i32 %incr.0, 18
  %idxprom9.i = zext i32 %mul8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %idxprom9.i
  %22 = load i8, i8* %arrayidx10.i, align 1, !tbaa !10
  %conv11.i = sext i8 %22 to i32
  %sub12.i = add nsw i32 %conv11.i, -56
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %for.end.i
  %cond129 = phi i32 [ %sub12.i, %if.then.i ], [ %mul5.i, %for.end.i ]
  %cmp130 = icmp slt i32 %cond129, 0
  br i1 %cmp130, label %cleanup, label %if.else133

if.else133:                                       ; preds = %cond.end
  %cond135 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135, i64* %pNum, align 8, !tbaa !16
  %cmp136 = icmp eq i32 %cond129, 0
  %cond144 = select i1 %tobool81279, i32 %rc.1, i32 3
  %spec.select236 = select i1 %cmp136, i32 %cond144, i32 2
  ret i32 %spec.select236

cleanup:                                          ; preds = %cond.end, %if.else133.thread, %if.end120
  %23 = phi i32 [ 2, %if.else133.thread ], [ %rc.1, %cond.end ], [ %rc.1, %if.end120 ]
  ret i32 %23
}

; Function Attrs: noinline nounwind ssp uwtable
declare double @memRealValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeReleaseAndSetInt64(%struct.sqlite3_value*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeClrCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @valueToText(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @valueNew(%struct.sqlite3*, %struct.ValueNewStat4Ctx* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @valueFromExpr(%struct.sqlite3*, %struct.Expr* nocapture readonly, i8 zeroext, i8 zeroext, %struct.sqlite3_value** nocapture, %struct.ValueNewStat4Ctx* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MPrintf(%struct.sqlite3*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMemNumerify(%struct.sqlite3_value* nocapture) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @valueBytes(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @growOpArray(%struct.Vdbe* nocapture, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @growOp3(%struct.Vdbe* nocapture, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp3(%struct.Vdbe*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @resizeResolveLabel(%struct.Parse* nocapture, %struct.Vdbe* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @resolveP2Values(%struct.Vdbe* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeEphemeralFunction(%struct.sqlite3*, %struct.FuncDef*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4Mem(%struct.sqlite3*, %struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4FuncCtx(%struct.sqlite3*, %struct.sqlite3_context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @freeP4(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeFreeOpArray(%struct.sqlite3*, %struct.VdbeOp*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeChangeP4Full(%struct.Vdbe* nocapture readonly, %struct.VdbeOp*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeChangeP4(%struct.Vdbe*, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @displayP4(%struct.VdbeOp* nocapture readonly, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeLeave(%struct.Vdbe* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @initMemArray(%struct.sqlite3_value* nocapture, i32, %struct.sqlite3*, i16 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @releaseMemArray(%struct.sqlite3_value*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @allocSpace(%struct.ReusableSpace* nocapture, i8* readnone, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @closeCursorsInFrame(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @closeAllCursors(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFrameRestore(%struct.VdbeFrame* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCommit(%struct.sqlite3*, %struct.Vdbe* nocapture readnone) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeCloseStatement(%struct.Vdbe* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSavepoint(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @handleMovedCursor(%struct.VdbeCursor* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @serialGet(i8* nocapture readonly, i32, %struct.sqlite3_value*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCompareMemString(%struct.sqlite3_value*, %struct.sqlite3_value*, %struct.CollSeq* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isAllZero(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @vdbeRecordDecodeInt(i32, i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareInt(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompare(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompareWithSkip(i32, i8*, %struct.UnpackedRecord*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareString(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_expired(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafety(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafetyNotNull(%struct.Vdbe* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_finalize(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_reset(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeReset(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_clear_bindings(%struct.sqlite3_stmt* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_blob(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_int(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_subtype(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_value_pointer(%struct.sqlite3_value* nocapture readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16be(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16le(%struct.sqlite3_value*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_nochange(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_frombind(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_value_dup(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_value_free(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @setResultStrOrError(%struct.sqlite3_context* nocapture, i8*, i32, i8 zeroext, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @invokeValueDestructor(i8*, void (i8*)*, %struct.sqlite3_context*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error16(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_null(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_pointer(%struct.sqlite3_context* nocapture readonly, i8*, i8*, void (i8*)*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_result_subtype(%struct.sqlite3_context* nocapture readonly, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16be(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16le(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_value(%struct.sqlite3_context* nocapture readonly, %struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_zeroblob(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_result_zeroblob64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_code(%struct.sqlite3_context* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @doWalCallbacks(%struct.sqlite3*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_step(%struct.sqlite3_stmt*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_user_data(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_vtab_nochange(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @createAggContext(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_aggregate_context(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_get_auxdata(%struct.sqlite3_context* nocapture readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_auxdata(%struct.sqlite3_context* nocapture, i32, i8*, void (i8*)*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_aggregate_count(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_column_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_data_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_value* @columnNullValue() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @columnMem(%struct.sqlite3_stmt* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @columnMallocFailure(%struct.sqlite3_stmt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_blob(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_column_double(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_int(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_column_int64(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_column_value(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_type(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @columnName(%struct.sqlite3_stmt* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeUnbind(%struct.Vdbe*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @bindText(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_null(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_pointer(%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_value(%struct.sqlite3_stmt*, i32, %struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_bind_parameter_name(%struct.sqlite3_stmt* readonly, i32) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_index(%struct.sqlite3_stmt* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_transfer_bindings(%struct.sqlite3_stmt* nocapture, %struct.sqlite3_stmt* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_db_handle(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_readonly(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_isexplain(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_busy(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_stmt* @sqlite3_next_stmt(%struct.sqlite3* nocapture readonly, %struct.sqlite3_stmt* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_stmt_status(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_sql(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare noalias i8* @sqlite3_expanded_sql(%struct.sqlite3_stmt* nocapture readnone) #11

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define i32 @alsoAnInt(%struct.sqlite3_value* nocapture readonly %pRec, double %rValue, i64* nocapture %piValue) local_unnamed_addr #2 {
entry:
  %conv = fptosi double %rValue to i64
  %cmp.i = fcmp oeq double %rValue, 0.000000e+00
  br i1 %cmp.i, label %if.then, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %entry
  %conv.i = sitofp i64 %conv to double
  %0 = bitcast double %conv.i to i64
  %1 = bitcast double %rValue to i64
  %2 = icmp ne i64 %1, %0
  %conv.off = add i64 %conv, 2251799813685248
  %3 = icmp ugt i64 %conv.off, 4503599627370495
  %4 = or i1 %3, %2
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.rhs.i, %entry
  store i64 %conv, i64* %piValue, align 8, !tbaa !16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %5 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %6 = load i32, i32* %n, align 4, !tbaa !29
  %enc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %7 = load i8, i8* %enc, align 2, !tbaa !21
  %call1 = call i32 @sqlite3Atoi64(i8* %5, i64* %piValue, i32 %6, i8 zeroext %7)
  %cmp = icmp eq i32 %call1, 0
  %conv2 = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %conv2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_numeric_type(%struct.sqlite3_value* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @out2Prerelease(%struct.Vdbe* nocapture readonly, %struct.VdbeOp* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobSeekToRow(%struct.Incrblob* nocapture, i64, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeExec(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_open(%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorMsg(%struct.Parse* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMakeReady(%struct.Vdbe*, %struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_close(%struct.sqlite3_blob*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobReadWrite(%struct.sqlite3_blob*, i8*, i32, i32, i32 (%struct.BtCursor*, i32, i32, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_read(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePayloadChecked(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_write(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePutData(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_blob_bytes(%struct.sqlite3_blob* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_reopen(%struct.sqlite3_blob*, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaReaderClear(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeIncrFree(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadBlob(%struct.PmaReader* nocapture, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadVarint(%struct.PmaReader* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMapFile(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderSeek(%struct.SortSubtask* nocapture readonly, %struct.PmaReader*, %struct.SorterFile* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderNext(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrSwap(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderInit(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i64, %struct.PmaReader*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareTail(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompare(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareText(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareInt(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterRecordFree(%struct.sqlite3*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSortSubtaskCleanup(%struct.sqlite3*, %struct.SortSubtask*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinThread(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCreateThread(%struct.SortSubtask* nocapture, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinAll(%struct.VdbeSorter* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MergeEngine* @vdbeMergeEngineNew(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineFree(%struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterExtendFile(%struct.sqlite3* nocapture readonly, %struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterOpenTempFile(%struct.sqlite3* nocapture readonly, i64, %struct.sqlite3_file** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSortAllocUnpacked(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SorterRecord* @vdbeSorterMerge(%struct.SortSubtask*, %struct.SorterRecord*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)* @vdbeSorterGetCompare(%struct.VdbeSorter* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSort(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriterInit(%struct.sqlite3_file*, %struct.PmaWriter*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteBlob(%struct.PmaWriter* nocapture, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaWriterFinish(%struct.PmaWriter*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteVarint(%struct.PmaWriter* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterListToPMA(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineStep(%struct.MergeEngine* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeSorterFlushThread(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterFlushPMA(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrPopulate(%struct.IncrMerger* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeIncrPopulateThread(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrBgPopulate(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrMergerNew(%struct.SortSubtask*, %struct.MergeEngine*, %struct.IncrMerger** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vdbeIncrMergerSetThreads(%struct.IncrMerger* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineCompare(%struct.MergeEngine* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineInit(%struct.SortSubtask*, %struct.MergeEngine* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrMergeInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbePmaReaderBgIncrInit(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineLevel0(%struct.SortSubtask* nocapture readonly, i32, i64* nocapture, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @vdbeSorterTreeDepth(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterAddToTree(%struct.SortSubtask*, i32, i32, %struct.MergeEngine* nocapture readonly, %struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMergeTreeBuild(%struct.VdbeSorter*, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSetupMerge(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @vdbeSorterRowkey(%struct.VdbeSorter* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @memjrnlRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #8

; Function Attrs: nounwind ssp uwtable
declare void @memjrnlFreeChunks(%struct.MemJournal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlCreateFile(%struct.MemJournal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlWrite(%struct.sqlite3_file*, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlClose(%struct.sqlite3_file* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @memjrnlSync(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @memjrnlFileSize(%struct.sqlite3_file* nocapture readonly, i64* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @walkWindowList(%struct.Walker*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walkExpr(%struct.Walker*, %struct.Expr*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelect(%struct.Walker*, %struct.Select*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @incrAggDepth(%struct.Walker* nocapture readonly, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @incrAggFunctionDepth(%struct.Expr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveAlias(%struct.Parse* nocapture readonly, %struct.ExprList* nocapture readonly, i32, %struct.Expr*, i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nameInUsingClause(%struct.IdList* readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @areDoubleQuotedStringsEnabled(%struct.sqlite3* nocapture readonly, %struct.NameContext* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @lookupName(%struct.Parse*, i8*, i8*, i8*, %struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3MatchEName(%struct.ExprList_item* nocapture readonly, i8* readonly, i8* readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @notValidImpl(%struct.Parse* nocapture, %struct.NameContext* nocapture readonly, i8*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprProbability(%struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveExprStep(%struct.Walker*, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.FuncDef* @sqlite3FindFunction(%struct.sqlite3*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @resolveAsName(%struct.Parse* nocapture readnone, %struct.ExprList* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderByTermToExprList(%struct.Parse*, %struct.Select* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCompare(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveOutOfRangeError(%struct.Parse* nocapture, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveCompoundOrderBy(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprIsInteger(%struct.Expr* readonly, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @resolveRemoveWindowsCb(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare void @windowRemoveExprFromSelect(%struct.Select*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderGroupBy(%struct.NameContext*, %struct.Select*, %struct.ExprList*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ResolveOrderGroupBy(%struct.Parse* nocapture, %struct.Select* nocapture readonly, %struct.ExprList* readonly, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveSelectStep(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectPrep(%struct.Parse*, %struct.Select*, %struct.NameContext*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare signext i8 @comparisonAffinity(%struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local signext i8 @sqlite3ExprAffinity(%struct.Expr* nocapture readonly) unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare zeroext i8 @binaryCompareP5(%struct.Expr* nocapture readonly, %struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @codeCompare(%struct.Parse* nocapture, %struct.Expr*, %struct.Expr*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp4(%struct.Vdbe*, i32, i32, i32, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeSubselect(%struct.Parse*, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CodeSubselect(%struct.Parse*, %struct.Expr* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprVectorRegister(%struct.Parse*, %struct.Expr*, i32, i32, %struct.Expr** nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTemp(%struct.Parse*, %struct.Expr*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeVectorCompare(%struct.Parse*, %struct.Expr* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExpr(%struct.Expr* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExprList(%struct.ExprList* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfSelect(%struct.Select* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @exprSetHeight(%struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @exprStructSize(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @dupedExprStructSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprNodeSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprSize(%struct.Expr* readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprDup(%struct.sqlite3*, %struct.Expr*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectDup(%struct.sqlite3*, %struct.Select* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListDup(%struct.sqlite3*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowDup(%struct.sqlite3*, %struct.Expr*, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.With* @withDup(%struct.sqlite3*, %struct.With* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @gatherSelectWindowsCallback(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @gatherSelectWindowsSelectCallback(%struct.Walker* nocapture readonly, %struct.Select* readnone) #7

; Function Attrs: nounwind ssp uwtable
declare void @gatherSelectWindows(%struct.Select*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @exprListDeleteNN(%struct.sqlite3*, %struct.ExprList*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsConstant(%struct.Walker* nocapture, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsConst(%struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare dso_local i32 @sqlite3SelectWalkFail(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #10

; Function Attrs: nounwind ssp uwtable
declare i32 @exprNodeIsConstantOrGroupBy(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @isCandidateForInOpt(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i8* @exprINAffinity(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeReal(%struct.Vdbe* nocapture, i8* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeInteger(%struct.Parse* nocapture, %struct.Expr* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3DecOrHexToI64(i8* readonly, i64*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @exprToRegister(%struct.Expr*, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeVector(%struct.Parse*, %struct.Expr*, i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDoNotMergeFlagOnCopy(%struct.Vdbe* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeInlineFunction(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCode(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTarget(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesExpr(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesNonNullRow(%struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprCodeBetween(%struct.Parse*, %struct.Expr* nocapture readonly, i32, void (%struct.Parse*, %struct.Expr*, i32, i32)*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCompareVariable(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprImpliesNotNull(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @impliesNotNullRow(%struct.Walker*, %struct.Expr* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprIdxCover(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprSrcCount(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoColumn(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoFunc(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeAggregate(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @analyzeAggregatesInSelect(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @analyzeAggregatesInSelectEnd(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @isAlterableTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTestSchema(%struct.Parse*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3NestedParse(%struct.Parse*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameReloadSchema(%struct.Parse* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @isRealTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameUnmapExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readnone) #15

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkWith(%struct.Walker*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameUnmapSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTokenFree(%struct.sqlite3*, %struct.RenameToken*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameTokenFind(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, i8* readnone) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameColumnSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameColumnExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.RenameToken* @renameColumnTokenNext(%struct.RenameCtx* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnParseError(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnElistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.ExprList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnIdlistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.IdList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameParseSql(%struct.Parse*, i8* readonly, %struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3RunParser(%struct.Parse*, i8*, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameEditSql(%struct.sqlite3_context* nocapture, %struct.RenameCtx* nocapture, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameResolveTrigger(%struct.Parse*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local %struct.Table* @sqlite3FindTable(%struct.sqlite3* nocapture readonly, i8* nocapture readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ViewGetColumnNames(%struct.Parse*, %struct.Table* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkTrigger(%struct.Walker*, %struct.Trigger* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameParseCleanup(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameTableExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameTableSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableTest(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @openStatTable(%struct.Parse*, i32, i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableLock(%struct.Parse* nocapture, i32, i32, i8 zeroext, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @statAccumDestructor(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @statInit(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statPush(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statGet(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @callStatGet(%struct.Parse* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeOneTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readnone, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strlike(i8* readonly, i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3OpenTable(%struct.Parse*, i32, i32, %struct.Table* nocapture readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @loadAnalysis(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeDatabase(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @decodeIntArray(i8* readonly, i32, i32* nocapture readnone, i16* nocapture, %struct.Index* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strglob(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @analysisLoader(i8* nocapture readonly, i32, i8** readonly, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveAttachExpr(%struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @attachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ParseUri(i8*, i8*, i32* nocapture, %struct.sqlite3_vfs** nocapture, i8** nocapture, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Schema* @sqlite3SchemaGet(%struct.sqlite3*, %struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeSetPagerFlags(%struct.Btree* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_filename(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeClose(%struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @detachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CollapseDatabaseArray(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeAttach(%struct.Parse*, i32, %struct.FuncDef*, %struct.Expr* readonly, %struct.Expr*, %struct.Expr*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_set_authorizer(%struct.sqlite3* nocapture, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteAuthBadReturnCode(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeTableLocks(%struct.Parse*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @deleteTable(%struct.sqlite3*, %struct.Table*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3HashInsert(%struct.Hash* nocapture, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @makeColumnPartOfPrimaryKey(%struct.Parse* nocapture, %struct.Column* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @identLength(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @identPut(i8* nocapture, i32* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @createTableStmt(%struct.sqlite3*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resizeIndexObject(%struct.sqlite3*, %struct.Index* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateTableWidth(%struct.Table* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateIndexWidth(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @hasColumn(i16* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isDupColumn(%struct.Index* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @recomputeColumnsNotIndexed(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @convertToWithoutRowidTable(%struct.Parse*, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppend(%struct.sqlite3*, %struct.ExprList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprAlloc(%struct.sqlite3*, i32, %struct.Token* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateIndex(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.SrcList*, %struct.ExprList*, i32, %struct.Token* readnone, %struct.Expr*, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteViewResetAll(%struct.sqlite3*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyRootPage(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyTable(%struct.Parse*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tableMayNotBeDropped(%struct.sqlite3* nocapture readnone, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @collationMatch(i8* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @reindexTable(%struct.Parse*, %struct.Table* nocapture readonly, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RefillIndex(%struct.Parse*, %struct.Index* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @reindexDatabases(%struct.Parse*, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @callCollNeeded(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @synthCollSeq(%struct.sqlite3* nocapture readonly, %struct.CollSeq*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @findCollSeqEntry(%struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @matchQuality(%struct.FuncDef* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tabIsReadOnly(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @minmaxFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @typeofFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lengthFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @absFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @instrFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @printfFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value**) #3

; Function Attrs: nounwind ssp uwtable
declare void @substrFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @roundFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @contextMalloc(%struct.sqlite3_context* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @upperFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lowerFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomBlob(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_insert_rowid(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @sqlite3_last_insert_rowid(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @total_changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_total_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @patternCompare(i8*, i8*, %struct.compareInfo* readonly, i32) local_unnamed_addr #18

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare void @likeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nullifFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @versionFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_libversion() #11

; Function Attrs: nounwind ssp uwtable
declare void @sourceidFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_sourceid() #11

; Function Attrs: nounwind ssp uwtable
declare void @errlogFunc(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @compileoptionusedFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_compileoption_used(i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare void @compileoptiongetFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readnone ssp uwtable
declare i8* @sqlite3_compileoption_get(i32) #23

; Function Attrs: nounwind ssp uwtable
declare void @quoteFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @unicodeFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @charFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @hexFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroblobFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @replaceFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @trimFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @loadExt(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_load_extension(%struct.sqlite3*, i8*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @avgFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @totalFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minmaxStep(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValueFinalize(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValue(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatValue(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @fkLookupParent(%struct.Parse*, i32, %struct.Table* readonly, %struct.Index*, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3IndexAffinityStr(%struct.sqlite3*, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableRegister(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableColumn(%struct.sqlite3*, %struct.Table*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkScanChildren(%struct.Parse*, %struct.SrcList*, %struct.Table*, %struct.Index* readonly, %struct.FKey* nocapture readonly, i32* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3PExpr(%struct.Parse* nocapture, i32, %struct.Expr*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.WhereInfo* @sqlite3WhereBegin(%struct.Parse*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.ExprList*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereEnd(%struct.WhereInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkTriggerDelete(%struct.sqlite3*, %struct.Trigger*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkChildIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkParentIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isSetNullAction(%struct.Parse* nocapture readonly, %struct.FKey* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.Trigger* @fkActionTrigger(%struct.Parse*, %struct.Table* nocapture readonly, %struct.FKey* nocapture, %struct.ExprList* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkLocateIndex(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, %struct.Index** nocapture, i32**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectNew(%struct.Parse* nocapture, %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, i32, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppend(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token* readonly, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readsTable(%struct.Parse*, i32, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprColumnFlagUnion(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @autoIncBegin(%struct.Parse* nocapture, i32, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @autoIncStep(%struct.Parse* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @autoIncrementEnd(%struct.Parse*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @checkConstraintExprNode(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @xferCompatibleIndex(%struct.Index* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @xferOptimization(%struct.Parse*, %struct.Table*, %struct.Select* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_exec(%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_enable_load_extension(%struct.sqlite3* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_auto_extension(void ()*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_cancel_auto_extension(void ()* readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_reset_auto_extension() #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @getSafetyLevel(i8* readonly, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getLockingMode(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAutoVacuum(i8* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getTempStore(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @invalidateTempStorage(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @changeTempStorage(%struct.Parse* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setPragmaResultColumnNames(%struct.Vdbe* nocapture, %struct.PragmaName* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleInt(%struct.Vdbe*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleText(%struct.Vdbe* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setAllPagerFlags(%struct.sqlite3* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @actionName(i8 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.PragmaName* @pragmaLocate(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pragmaFunclistLine(%struct.Vdbe* nocapture, %struct.FuncDef* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMultiLoad(%struct.Vdbe* nocapture, i32, i8* nocapture readonly, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @integrityCheckResultRow(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @corruptSchema(%struct.InitData* nocapture, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @schemaIsValid(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3LockAndPrepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare16(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @clearSelect(%struct.sqlite3*, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SrcListDelete(%struct.sqlite3*, %struct.SrcList*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @findRightmost(%struct.Select* readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @columnIndex(%struct.Table* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @tableAndColumnIndex(%struct.SrcList* nocapture readonly, i32, i8* nocapture readonly, i32*, i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @addWhereTerm(%struct.Parse* nocapture, %struct.SrcList* nocapture, i32, i32, i32, i32, i32, %struct.Expr** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @unsetJoinExpr(%struct.Expr*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteProcessJoin(%struct.Parse* nocapture, %struct.Select* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SetJoinExpr(%struct.Expr*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @innerLoopLoadRow(%struct.Parse*, %struct.Select* nocapture readonly, %struct.RowLoadInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeExprList(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @makeSorterRecord(%struct.Parse*, %struct.SortCtx* nocapture readonly, %struct.Select* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pushOntoSorter(%struct.Parse*, %struct.SortCtx* nocapture, %struct.Select* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeOffset(%struct.Vdbe* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeDistinct(%struct.Parse* nocapture, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @selectInnerLoop(%struct.Parse*, %struct.Select* nocapture readonly, i32, %struct.SortCtx*, %struct.DistinctCtx* readonly, %struct.SelectDest* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3ExprCollSeq(%struct.Parse* nocapture, %struct.Expr* readonly) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @selectOpName(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @explainTempTable(%struct.Parse* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeExplain(%struct.Parse* nocapture, i8 zeroext, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateSortTail(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SortCtx* nocapture readonly, i32, %struct.SelectDest* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @columnTypeImpl(%struct.NameContext*, %struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnTypes(%struct.Parse*, %struct.SrcList*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnNames(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @computeLimitRegisters(%struct.Parse*, %struct.Select* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @multiSelectCollSeq(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.KeyInfo* @multiSelectOrderByKeyInfo(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateWithRecursiveQuery(%struct.Parse*, %struct.Select*, %struct.SelectDest*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Select(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectValues(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelect(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectOrderBy(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @generateOutputSubroutine(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SelectDest* nocapture readonly, %struct.SelectDest* nocapture, i32, i32, %struct.KeyInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @substExpr(%struct.SubstContext* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substSelect(%struct.SubstContext* nocapture readonly, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substExprList(%struct.SubstContext*, %struct.ExprList*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flattenSubquery(%struct.Parse*, %struct.Select*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListEnlarge(%struct.Parse* nocapture, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @constInsert(%struct.WhereConst* nocapture, %struct.Expr*, %struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @findConstInWhere(%struct.WhereConst*, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstantExprRewrite(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstants(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3SelectWalkNoop(%struct.Walker* nocapture readnone, %struct.Select* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @pushDownWhereTerms(%struct.Parse*, %struct.Select*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @minMaxQuery(%struct.sqlite3*, %struct.Expr* nocapture readonly, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @isSimpleCount(%struct.Select* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @convertCompoundSelectToSubquery(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppendFromTerm(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token*, %struct.Token*, %struct.Token* readonly, %struct.Select*, %struct.Expr*, %struct.IdList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @cannotBeFunction(%struct.Parse* nocapture, %struct.SrcList_item* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.Cte* @searchWith(%struct.With*, %struct.SrcList_item* nocapture readonly, %struct.With** nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @withExpand(%struct.Walker*, %struct.SrcList_item* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ColumnsFromExprList(%struct.sqlite3*, %struct.ExprList* readonly, i16* nocapture, %struct.Column** nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @selectPopWith(%struct.Walker* nocapture readonly, %struct.Select* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @selectExpander(%struct.Walker*, %struct.Select* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SrcListAssignCursors(%struct.Parse* nocapture, %struct.SrcList*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @selectAddSubqueryTypeInfo(%struct.Walker* nocapture readonly, %struct.Select* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectAddColumnTypeAndCollation(%struct.Parse* nocapture, %struct.Table* nocapture, %struct.Select* nocapture readonly, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resetAccumulator(%struct.Parse* nocapture, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @finalizeAggFunctions(%struct.Parse* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @updateAccumulator(%struct.Parse*, i32, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfFalse(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @explainSimpleCount(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @havingToWhereExprCb(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @havingToWhere(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList_item* @isSelfJoinView(%struct.SrcList* readonly, %struct.SrcList_item* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table_cb(i8* nocapture, i32, i8** readonly, i8** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table(%struct.sqlite3*, i8*, i8*** nocapture, i32*, i32*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_table(i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @triggerSpanDup(%struct.sqlite3*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerStep* @triggerStepAllocate(%struct.Parse* nocapture, i8 zeroext, %struct.Token* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @tableOfTrigger(%struct.Trigger* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @checkColumnOverlap(%struct.IdList* readonly, %struct.ExprList* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList* @targetSrcList(%struct.Parse* nocapture readonly, %struct.TriggerStep* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeTriggerProgram(%struct.Parse*, %struct.TriggerStep* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Update(%struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.Expr*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Insert(%struct.Parse*, %struct.SrcList*, %struct.Select*, %struct.IdList*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListDup(%struct.sqlite3*, %struct.IdList* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteFrom(%struct.Parse*, %struct.SrcList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @transferParseError(%struct.Parse* nocapture, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @codeRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeDelete(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @getRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexColumnIsBeingUpdated(%struct.Index* nocapture readonly, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexWhereClauseMightChange(%struct.Index* nocapture readonly, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSql(%struct.sqlite3*, i8** nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSqlF(%struct.sqlite3*, i8** nocapture, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @explainIndexColumnName(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @explainAppendTerm(%struct.sqlite3_str*, %struct.Index* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @explainIndexRange(%struct.sqlite3_str*, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableTerm(%struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeApplyAffinity(%struct.Parse* nocapture readonly, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @updateRangeAffinityStr(%struct.Expr* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @removeUnindexableInClauseTerms(%struct.Parse* nocapture readonly, i32, %struct.WhereLoop* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeEqualityTerm(%struct.Parse*, %struct.WhereTerm* nocapture, %struct.WhereLevel* nocapture, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindInIndex(%struct.Parse*, %struct.Expr*, i32, i32*, i32*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeAllEqualityTerms(%struct.Parse*, %struct.WhereLevel*, i32, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLikeOptimizationStringFixup(%struct.Vdbe* nocapture readonly, %struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeDeferredSeek(%struct.WhereInfo* nocapture, %struct.Index* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeExprOrVector(%struct.Parse*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @preserveExpr(%struct.IdxExprTrans* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransNode(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransColumn(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @whereIndexExprTrans(%struct.Index* nocapture readonly, i32, i32, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereApplyPartialIndexConstraints(%struct.Expr* readonly, i32, %struct.WhereClause* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereOrInfoDelete(%struct.sqlite3*, %struct.WhereOrInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereClauseClear(%struct.WhereClause* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereAndInfoDelete(%struct.sqlite3*, %struct.WhereAndInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereClauseInsert(%struct.WhereClause*, %struct.Expr*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @allowedOp(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @exprCommute(%struct.Parse* nocapture, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @operatorMask(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @isLikeOrGlob(%struct.Parse*, %struct.Expr* nocapture readonly, %struct.Expr** nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @transferJoinMarkings(%struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @markTermAsChild(%struct.WhereClause* nocapture readonly, i32, i32) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereTerm* @whereNthSubterm(%struct.WhereTerm* readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @whereCombineDisjuncts(%struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.WhereTerm* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyze(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyzeOrTerm(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereSplit(%struct.WhereClause*, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @termIsEquivalence(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i64 @exprSelectUsage(%struct.WhereMaskSet* nocapture, %struct.Select* readonly) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @exprMightBeIndexed2(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @exprMightBeIndexed(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCheckIN(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereExprUsageNN(%struct.WhereMaskSet* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @whereOrMove(%struct.WhereOrSet*, %struct.WhereOrSet*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereOrInsert(%struct.WhereOrSet* nocapture, i64, i16 signext, i16 signext) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @createMask(%struct.WhereMaskSet* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanNext(%struct.WhereScan* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInitIndexExpr(%struct.WhereScan* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInit(%struct.WhereScan* nocapture, %struct.WhereClause*, i32, i32, i32, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findIndexCol(%struct.Parse* nocapture, %struct.ExprList* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @indexColumnNotNull(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDistinctRedundant(%struct.Parse* nocapture, %struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare signext i16 @estLog(i16 signext) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @translateColumnToCopy(%struct.Parse* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #15

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @termCanDriveIndex(%struct.WhereTerm* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @constructAutomaticIndex(%struct.Parse*, %struct.WhereClause* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64, %struct.WhereLevel* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopResize(%struct.sqlite3*, %struct.WhereLoop*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GenerateIndexKey(%struct.Parse*, %struct.Index* nocapture, i32, i32, i32, i32*, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereRangeAdjust(%struct.WhereTerm* readonly, i16 signext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereRangeScanEst(%struct.Parse* nocapture readnone, %struct.WhereLoopBuilder* nocapture readnone, %struct.WhereTerm* readonly, %struct.WhereTerm* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @whereLoopInit(%struct.WhereLoop*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClearUnion(%struct.sqlite3*, %struct.WhereLoop* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClear(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopXfer(%struct.sqlite3*, %struct.WhereLoop*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopDelete(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereInfoFree(%struct.sqlite3*, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @whereLoopCheaperProperSubset(%struct.WhereLoop* nocapture readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLoopAdjustCost(%struct.WhereLoop* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereLoop** @whereLoopFindLesser(%struct.WhereLoop** readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopInsert(%struct.WhereLoopBuilder* nocapture, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopOutputAdjust(%struct.WhereClause* nocapture readonly, %struct.WhereLoop* nocapture, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereRangeVectorLen(%struct.Parse* nocapture, i32, %struct.Index* nocapture readonly, i32, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtreeIndex(%struct.WhereLoopBuilder*, %struct.SrcList_item* readonly, %struct.Index* readonly, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexMightHelpWithOrderBy(%struct.WhereLoopBuilder* nocapture readonly, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereUsablePartialIndex(i32, i32, %struct.WhereClause* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtree(%struct.WhereLoopBuilder*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddOr(%struct.WhereLoopBuilder* nocapture, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddAll(%struct.WhereLoopBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare signext i8 @wherePathSatisfiesOrderBy(%struct.WhereInfo*, %struct.ExprList* nocapture readonly, %struct.WherePath* nocapture readonly, i16 zeroext, i16 zeroext, %struct.WhereLoop* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereSortingCost(%struct.WhereInfo* nocapture readonly, i16 signext, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @wherePathSolver(%struct.WhereInfo*, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereShortCut(%struct.WhereLoopBuilder* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsDeterministic(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsDeterministic(%struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopValueFunc(%struct.sqlite3_context* nocapture) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.Window* @windowFind(%struct.Parse* nocapture, %struct.Window*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteExprCb(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteSelectCb(%struct.Walker*, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare void @selectWindowRewriteEList(%struct.Parse*, %struct.Window*, %struct.SrcList*, %struct.ExprList* readonly, %struct.Table*, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.ExprList* @exprListAppendList(%struct.Parse* nocapture readonly, %struct.ExprList*, %struct.ExprList* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCheckValue(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowArgCount(%struct.Window* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowReadPeerValues(%struct.WindowCodeArg* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggStep(%struct.WindowCodeArg* nocapture readonly, %struct.Window* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggFinal(%struct.WindowCodeArg* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowFullScan(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowReturnOneRow(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowInitAccum(%struct.Parse*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowCacheFrame(%struct.Window* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowIfNewPeer(%struct.Parse*, %struct.ExprList* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCodeRangeTest(%struct.WindowCodeArg* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowCodeOp(%struct.WindowCodeArg*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowExprGtZero(%struct.Parse* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableLookaside(%struct.Parse* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @yy_destructor(%struct.yyParser* nocapture readonly, i16 zeroext, %union.YYMINORTYPE* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowDelete(%struct.sqlite3*, %struct.Window*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteTriggerStep(%struct.sqlite3*, %struct.TriggerStep*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_pop_parser_stack(%struct.yyParser* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_shift_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_reduce_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @yyStackOverflow(%struct.yyParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_shift(%struct.yyParser*, i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @yy_reduce(%struct.yyParser*, i32, i32, i8*, i32, %struct.Parse*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3StartTable(%struct.Parse*, %struct.Token*, %struct.Token*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3EndTable(%struct.Parse*, %struct.Token* nocapture readonly, %struct.Token* readonly, i8 zeroext, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddDefaultValue(%struct.Parse*, %struct.Expr*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @tokenExpr(%struct.Parse* nocapture, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddPrimaryKey(%struct.Parse*, %struct.ExprList*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateForeignKey(%struct.Parse* nocapture, %struct.ExprList*, %struct.Token*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddGenerated(%struct.Parse* nocapture, %struct.Expr*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTable(%struct.Parse*, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3JoinType(%struct.Parse* nocapture, %struct.Token*, %struct.Token*, %struct.Token*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppendVector(%struct.Parse*, %struct.ExprList*, %struct.IdList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListAppend(%struct.Parse* nocapture, %struct.IdList*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GetInt32(i8* nocapture readonly, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Vacuum(%struct.Parse*, %struct.Token*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Pragma(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.Token*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Analyze(%struct.Parse*, %struct.Token*, %struct.Token* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.With* @sqlite3WithAdd(%struct.Parse* nocapture, %struct.With*, %struct.Token* readonly, %struct.ExprList*, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowChain(%struct.Parse* nocapture, %struct.Window* nocapture, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowAlloc(%struct.Parse*, i32, i32, %struct.Expr*, i32, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_syntax_error(%struct.yyParser* nocapture, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @yy_accept(%struct.yyParser* nocapture) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @keywordCode(i8* nocapture readonly, i32 returned, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_keyword_name(i32, i8** nocapture, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_keyword_count() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_keyword_check(i8* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getToken(i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local i32 @sqlite3GetToken(i8* readonly, i32*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeWindowKeyword(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeOverKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeFilterKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_complete(i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_complete16(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_libversion_number() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_threadsafe() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_shutdown() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_config(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setupLookaside(%struct.sqlite3*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_db_mutex(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_release_memory(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_cacheflush(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_config(%struct.sqlite3*, i32, ...) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @binCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @rtrimCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nocaseCollatingFunc(i8* nocapture readnone, i32, i8* readonly, i32, i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_last_insert_rowid(%struct.sqlite3* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @functionDestroy(%struct.sqlite3*, %struct.FuncDef* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @disconnectAllVtab(%struct.sqlite3* nocapture) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @connectionIsBusy(%struct.sqlite3* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Close(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close_v2(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteDefaultBusyCallback(i8* nocapture readonly, i32, %struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_handler(%struct.sqlite3* nocapture, i32 (i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_progress_handler(%struct.sqlite3* nocapture, i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_timeout(%struct.sqlite3*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_interrupt(%struct.sqlite3*) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @createFunctionApi(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CreateFunc(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, %struct.FuncDestructor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function_v2(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_window_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function16(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_overload_function(%struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3InvalidFunction(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_commit_hook(%struct.sqlite3* nocapture, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_update_hook(%struct.sqlite3* nocapture, void (i8*, i32, i8*, i8*, i64)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_rollback_hook(%struct.sqlite3* nocapture, void (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_autocheckpoint(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_wal_hook(%struct.sqlite3* nocapture, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalDefaultHook(i8*, %struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint_v2(%struct.sqlite3*, i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Checkpoint(%struct.sqlite3* nocapture readonly, i32, i32, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint(%struct.sqlite3*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg16(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_system_errno(%struct.sqlite3* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_errstr(i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @createCollation(%struct.sqlite3*, i8*, i8 zeroext, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @sqlite3_limit(%struct.sqlite3* nocapture, i32, i32) #15

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @uriParameter(i8* readonly, i8* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @openDatabase(i8*, %struct.sqlite3** nocapture, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open_v2(i8*, %struct.sqlite3** nocapture, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open16(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation_v2(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation16(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed16(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_global_recover() local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_get_autocommit(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @sqlite3_thread_cleanup() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_table_column_metadata(%struct.sqlite3*, i8* readonly, i8*, i8*, i8**, i8**, i32*, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_sleep(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_result_codes(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_file_control(%struct.sqlite3* nocapture readonly, i8* readonly, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_test_control(i32, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @databaseName(i8* readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare nonnull i8* @appendText(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_create_filename(i8*, i8*, i8*, i32, i8** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_key(i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_uri_int64(i8* readonly, i8* readonly, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_filename_database(i8* readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_journal(i8* readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_wal(i8* readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_db_filename(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_db_readonly(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ErrorFinish(%struct.sqlite3* nocapture, i32) unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3BitvecClear(%struct.Bitvec*, i32, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeTripAllCursors(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeCloseCursor(%struct.BtCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeSorterReset(%struct.sqlite3*, %struct.VdbeSorter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeTransferError(%struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RollbackAll(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #24

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3NoopDestructor(i8* nocapture) #11

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFinishMoveto(%struct.VdbeCursor* nocapture) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SchemaClear(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitOne(%struct.sqlite3*, i32, i8**, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitCallback(i8* nocapture, i32, i8**, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AnalysisLoad(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFrameMemDel(i8*) #15

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetJournalMode(%struct.Pager*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3RunVacuum(i8** nocapture, %struct.sqlite3*, i32, %struct.sqlite3_value*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RowSetDelete(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalClose(%struct.Wal*, %struct.sqlite3*, i32, i32, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i32, i8*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetSpillSize(%struct.Btree* nocapture, i32) unnamed_addr #3

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) local_unnamed_addr #12

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelectExpr(%struct.Walker*, %struct.Select* nocapture readonly) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ExprDeleteNN(%struct.sqlite3*, %struct.Expr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListDup(%struct.sqlite3*, %struct.SrcList* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGeneratedColumn(%struct.Parse*, %struct.Column*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeRunJustOnce(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeIN(%struct.Parse*, %struct.Expr*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeCopy(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGetColumnOfTable(%struct.Vdbe* nocapture, %struct.Table* readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3BlobCompare(%struct.sqlite3_value* nocapture readonly, %struct.sqlite3_value* nocapture readonly) unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WindowCompare(%struct.Parse*, %struct.Window* readonly, %struct.Window* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.KeyInfo* @sqlite3KeyInfoOfIndex(%struct.Parse* nocapture, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3PagerClose(%struct.Pager*, %struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AuthReadCol(%struct.Parse* nocapture, i8*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ReadSchema(%struct.Parse*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Table* @sqlite3ResultSetOfSelect(%struct.Parse*, %struct.Select*, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSrcList(%struct.DbFixer* nocapture readonly, %struct.SrcList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CheckObjectName(%struct.Parse* nocapture, i8*, i8* readonly, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindDb(%struct.sqlite3*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSelect(%struct.DbFixer* nocapture readonly, %struct.Select* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixExpr(%struct.DbFixer* nocapture readonly, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UniqueConstraint(%struct.Parse*, i32, %struct.Index* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3GetCollSeq(%struct.Parse* nocapture, i8 zeroext, %struct.CollSeq*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3ExprWalkNoop(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readnone) #11

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprSimplifiedAndOr(%struct.Expr* readonly) unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfTrue(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTableAndIndices(%struct.Parse*, %struct.Table* nocapture readonly, i32, i8 zeroext, i32, i8* readonly, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ComputeGeneratedColumns(%struct.Parse*, i32, %struct.Table*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableAffinity(%struct.Vdbe* nocapture, %struct.Table* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeRowTrigger(%struct.Parse*, %struct.Trigger*, i32, %struct.ExprList* readonly, i32, %struct.Table*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateConstraintChecks(%struct.Parse*, %struct.Table*, i32* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i32, i32* nocapture, i32*, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3FkCheck(%struct.Parse*, %struct.Table*, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CompleteInsertion(%struct.Parse*, %struct.Table*, i32, i32, i32, i32* nocapture readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowDelete(%struct.Parse*, %struct.Table*, %struct.Trigger*, i32, i32, i32, i16 signext, i8 zeroext, i8 zeroext, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowIndexDelete(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UpsertDoUpdate(%struct.Parse*, %struct.Upsert*, %struct.Table* nocapture readonly, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkOldmask(%struct.Parse* nocapture, %struct.Table* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MaterializeView(%struct.Parse*, %struct.Table* nocapture readonly, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SetHasNullFlag(%struct.Vdbe* nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereExplainOneScan(%struct.Parse* nocapture readonly, %struct.SrcList* nocapture readonly, %struct.WhereLevel* nocapture readonly, i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereCodeOneLoopStart(%struct.Parse*, %struct.Vdbe*, %struct.WhereInfo*, i32, %struct.WhereLevel*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeVerifyNamedSchema(%struct.Parse* nocapture, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeDropTable(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTriggerPtr(%struct.Parse*, %struct.Trigger* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3WindowOffsetExpr(%struct.Parse*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemMalloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MemFree(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemRealloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemSize(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3MemRoundup(i32) #11

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemInit(i8* nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3MemShutdown(i8* nocapture) #11

; Function Attrs: allocsize(1)
declare i8* @malloc_zone_malloc(%struct._malloc_zone_t*, i64) local_unnamed_addr #26

declare void @malloc_zone_free(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: allocsize(2)
declare i8* @malloc_zone_realloc(%struct._malloc_zone_t*, i8*, i64) local_unnamed_addr #27

declare i64 @malloc_size(i8*) local_unnamed_addr #12

declare i32 @sysctlbyname(i8*, i8*, i64*, i8*, i64) local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_default_zone() local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_create_zone(i64, i32) local_unnamed_addr #12

declare void @malloc_set_zone_name(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #28

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #28

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) local_unnamed_addr #29

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #28

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #30

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #28

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree
declare i64 @strlcat(i8*, i8*, i64) #31

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) #31

attributes #0 = { norecurse nounwind nonlazybind uwtable willreturn "nonfree" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { alwaysinline nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noinline nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree noinline norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { noinline nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { allocsize(2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { nounwind readnone speculatable willreturn }
attributes #29 = { nofree nounwind }
attributes #30 = { cold noreturn nounwind }
attributes #31 = { nofree }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 7, !"PIC Level", i32 2}
!5 = !{!"clang version 11.0.0 (https://github.com/KowalskiThomas/LLVM 63660cfe7d4c851881497a874a10f82c1b74cd5a)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"double", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"UnpackedRecord", !13, i64 0, !13, i64 8, !14, i64 16, !8, i64 18, !8, i64 19, !8, i64 20, !8, i64 21, !8, i64 22}
!13 = !{!"any pointer", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!12, !8, i64 18}
!16 = !{!17, !17, i64 0}
!17 = !{!"long long", !8, i64 0}
!18 = !{!19, !8, i64 4}
!19 = !{!"KeyInfo", !20, i64 0, !8, i64 4, !14, i64 6, !14, i64 8, !13, i64 16, !13, i64 24, !8, i64 32}
!20 = !{!"int", !8, i64 0}
!21 = !{!22, !8, i64 10}
!22 = !{!"sqlite3_value", !8, i64 0, !14, i64 8, !8, i64 10, !8, i64 11, !20, i64 12, !13, i64 16, !13, i64 24, !20, i64 32, !20, i64 36, !13, i64 40, !13, i64 48}
!23 = !{!19, !13, i64 16}
!24 = !{!22, !13, i64 40}
!25 = !{!22, !20, i64 32}
!26 = !{!22, !13, i64 16}
!27 = !{!12, !14, i64 16}
!28 = !{!22, !14, i64 8}
!29 = !{!22, !20, i64 12}
!30 = !{!22, !13, i64 24}
!31 = !{!32, !13, i64 8}
!32 = !{!"sqlite3_str", !13, i64 0, !13, i64 8, !20, i64 16, !20, i64 20, !20, i64 24, !8, i64 28, !8, i64 29}
!33 = !{!32, !13, i64 0}
!34 = !{!32, !20, i64 16}
!35 = !{!32, !20, i64 24}
!36 = !{!14, !14, i64 0}
!37 = distinct !DISubprogram(name: "jittedFunction", linkageName: "jittedFunction", scope: null, file: !38, line: 1624, type: !39, scopeLine: 1624, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !40)
!38 = !DIFile(filename: "../src/mlir/sqlite_bridge/ModuleWriter.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!39 = !DISubroutineType(types: !40)
!40 = !{}
!41 = !DILocation(line: 100, scope: !42)
!42 = !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!43 = !DILocation(line: 102, scope: !42)
!44 = !DILocation(line: 106, scope: !42)
!45 = !DILocation(line: 107, scope: !42)
!46 = !DILocation(line: 111, scope: !42)
!47 = !DILocation(line: 112, scope: !42)
!48 = !DILocation(line: 116, scope: !42)
!49 = !DILocation(line: 117, scope: !42)
!50 = !DILocation(line: 131, scope: !42)
!51 = !DILocation(line: 135, scope: !42)
!52 = !DILocation(line: 136, scope: !42)
!53 = !DILocation(line: 1582, scope: !42)
!54 = !DILocation(line: 24, scope: !55)
!55 = !DILexicalBlockFile(scope: !37, file: !56, discriminator: 0)
!56 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!57 = !DILocation(line: 28, scope: !55)
!58 = !DILocation(line: 34, scope: !55)
!59 = !DILocation(line: 38, scope: !55)
!60 = !DILocation(line: 39, scope: !55)
!61 = !DILocation(line: 40, scope: !55)
!62 = !DILocation(line: 46, scope: !55)
!63 = !DILocation(line: 37, scope: !64)
!64 = !DILexicalBlockFile(scope: !37, file: !65, discriminator: 0)
!65 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterOpenLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!66 = !DILocation(line: 45, scope: !64)
!67 = !DILocation(line: 50, scope: !64)
!68 = !DILocation(line: 52, scope: !64)
!69 = !DILocation(line: 53, scope: !64)
!70 = !DILocation(line: 54, scope: !64)
!71 = !DILocation(line: 55, scope: !64)
!72 = !DILocation(line: 57, scope: !64)
!73 = !DILocation(line: 59, scope: !64)
!74 = !DILocation(line: 1560, scope: !42)
!75 = !DILocation(line: 30, scope: !76)
!76 = !DILexicalBlockFile(scope: !37, file: !77, discriminator: 0)
!77 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IntegerLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!78 = !DILocation(line: 36, scope: !76)
!79 = !DILocation(line: 34, scope: !80)
!80 = !DILexicalBlockFile(scope: !37, file: !81, discriminator: 0)
!81 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/OutToPrerelease.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!82 = !DILocation(line: 38, scope: !80)
!83 = !DILocation(line: 41, scope: !80)
!84 = !DILocation(line: 39, scope: !76)
!85 = !DILocation(line: 40, scope: !76)
!86 = !DILocation(line: 42, scope: !76)
!87 = !DILocation(line: 42, scope: !88)
!88 = !DILexicalBlockFile(scope: !37, file: !89, discriminator: 0)
!89 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!90 = !DILocation(line: 43, scope: !88)
!91 = !DILocation(line: 52, scope: !88)
!92 = !DILocation(line: 55, scope: !88)
!93 = !DILocation(line: 58, scope: !88)
!94 = !DILocation(line: 59, scope: !88)
!95 = !DILocation(line: 63, scope: !88)
!96 = !DILocation(line: 66, scope: !88)
!97 = !DILocation(line: 71, scope: !88)
!98 = !DILocation(line: 74, scope: !88)
!99 = !DILocation(line: 75, scope: !88)
!100 = !DILocation(line: 35, scope: !101)
!101 = !DILexicalBlockFile(scope: !37, file: !102, discriminator: 0)
!102 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/GosubLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!103 = !DILocation(line: 38, scope: !101)
!104 = !DILocation(line: 39, scope: !101)
!105 = !DILocation(line: 42, scope: !101)
!106 = !DILocation(line: 43, scope: !101)
!107 = !DILocation(line: 45, scope: !101)
!108 = !DILocation(line: 51, scope: !101)
!109 = !DILocation(line: 37, scope: !110)
!110 = !DILexicalBlockFile(scope: !37, file: !111, discriminator: 0)
!111 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenReadLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!112 = !DILocation(line: 38, scope: !110)
!113 = !DILocation(line: 39, scope: !110)
!114 = !DILocation(line: 43, scope: !110)
!115 = !DILocation(line: 45, scope: !110)
!116 = !DILocation(line: 94, scope: !110)
!117 = !DILocation(line: 103, scope: !110)
!118 = !DILocation(line: 104, scope: !110)
!119 = !DILocation(line: 107, scope: !110)
!120 = !DILocation(line: 109, scope: !110)
!121 = !DILocation(line: 111, scope: !110)
!122 = !DILocation(line: 112, scope: !110)
!123 = !DILocation(line: 115, scope: !110)
!124 = !DILocation(line: 117, scope: !110)
!125 = !DILocation(line: 120, scope: !110)
!126 = !DILocation(line: 126, scope: !110)
!127 = !DILocation(line: 129, scope: !110)
!128 = !DILocation(line: 136, scope: !110)
!129 = !DILocation(line: 138, scope: !110)
!130 = !DILocation(line: 141, scope: !110)
!131 = !DILocation(line: 142, scope: !110)
!132 = !DILocation(line: 145, scope: !110)
!133 = !DILocation(line: 28, scope: !134)
!134 = !DILexicalBlockFile(scope: !37, file: !135, discriminator: 0)
!135 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RewindLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!136 = !DILocation(line: 39, scope: !134)
!137 = !DILocation(line: 41, scope: !134)
!138 = !DILocation(line: 43, scope: !134)
!139 = !DILocation(line: 45, scope: !134)
!140 = !DILocation(line: 46, scope: !134)
!141 = !DILocation(line: 49, scope: !134)
!142 = !DILocation(line: 56, scope: !134)
!143 = !DILocation(line: 58, scope: !134)
!144 = !DILocation(line: 73, scope: !134)
!145 = !DILocation(line: 74, scope: !134)
!146 = !DILocation(line: 77, scope: !134)
!147 = !DILocation(line: 85, scope: !134)
!148 = !DILocation(line: 87, scope: !134)
!149 = !DILocation(line: 89, scope: !134)
!150 = !DILocation(line: 100, scope: !134)
!151 = !DILocation(line: 107, scope: !134)
!152 = !DILocation(line: 111, scope: !134)
!153 = !DILocation(line: 115, scope: !134)
!154 = !DILocation(line: 121, scope: !134)
!155 = !DILocation(line: 125, scope: !134)
!156 = !DILocation(line: 129, scope: !134)
!157 = !DILocation(line: 133, scope: !134)
!158 = !DILocation(line: 136, scope: !134)
!159 = !DILocation(line: 142, scope: !134)
!160 = !DILocation(line: 148, scope: !134)
!161 = !DILocation(line: 149, scope: !134)
!162 = !DILocation(line: 151, scope: !134)
!163 = !DILocation(line: 155, scope: !134)
!164 = !DILocation(line: 157, scope: !134)
!165 = !DILocation(line: 159, scope: !134)
!166 = !DILocation(line: 162, scope: !134)
!167 = !DILocation(line: 30, scope: !168)
!168 = !DILexicalBlockFile(scope: !37, file: !169, discriminator: 0)
!169 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ColumnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!170 = !DILocation(line: 42, scope: !168)
!171 = !DILocation(line: 43, scope: !168)
!172 = !DILocation(line: 60, scope: !168)
!173 = !DILocation(line: 61, scope: !168)
!174 = !DILocation(line: 67, scope: !168)
!175 = !DILocation(line: 72, scope: !168)
!176 = !DILocation(line: 73, scope: !168)
!177 = !DILocation(line: 74, scope: !168)
!178 = !DILocation(line: 85, scope: !168)
!179 = !DILocation(line: 88, scope: !168)
!180 = !DILocation(line: 93, scope: !168)
!181 = !DILocation(line: 103, scope: !168)
!182 = !DILocation(line: 120, scope: !168)
!183 = !DILocation(line: 126, scope: !168)
!184 = !DILocation(line: 130, scope: !168)
!185 = !DILocation(line: 142, scope: !168)
!186 = !DILocation(line: 147, scope: !168)
!187 = !DILocation(line: 153, scope: !168)
!188 = !DILocation(line: 159, scope: !168)
!189 = !DILocation(line: 168, scope: !168)
!190 = !DILocation(line: 174, scope: !168)
!191 = !DILocation(line: 179, scope: !168)
!192 = !DILocation(line: 181, scope: !168)
!193 = !DILocation(line: 199, scope: !168)
!194 = !DILocation(line: 206, scope: !168)
!195 = !DILocation(line: 214, scope: !168)
!196 = !DILocation(line: 222, scope: !168)
!197 = !DILocation(line: 230, scope: !168)
!198 = !DILocation(line: 248, scope: !168)
!199 = !DILocation(line: 253, scope: !168)
!200 = !DILocation(line: 257, scope: !168)
!201 = !DILocation(line: 261, scope: !168)
!202 = !DILocation(line: 264, scope: !168)
!203 = !DILocation(line: 268, scope: !168)
!204 = !DILocation(line: 303, scope: !168)
!205 = !DILocation(line: 498, scope: !168)
!206 = !DILocation(line: 499, scope: !168)
!207 = !DILocation(line: 504, scope: !168)
!208 = !DILocation(line: 23, scope: !209)
!209 = !DILexicalBlockFile(scope: !37, file: !210, discriminator: 0)
!210 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/GetVarint32.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!211 = !DILocation(line: 36, scope: !209)
!212 = !DILocation(line: 39, scope: !209)
!213 = !DILocation(line: 47, scope: !209)
!214 = !DILocation(line: 50, scope: !209)
!215 = !DILocation(line: 53, scope: !209)
!216 = !DILocation(line: 55, scope: !209)
!217 = !DILocation(line: 64, scope: !209)
!218 = !DILocation(line: 71, scope: !209)
!219 = !DILocation(line: 72, scope: !209)
!220 = !DILocation(line: 73, scope: !209)
!221 = !DILocation(line: 509, scope: !168)
!222 = !DILocation(line: 517, scope: !168)
!223 = !DILocation(line: 518, scope: !168)
!224 = !DILocation(line: 521, scope: !168)
!225 = !DILocation(line: 524, scope: !168)
!226 = !DILocation(line: 547, scope: !168)
!227 = !DILocation(line: 550, scope: !168)
!228 = !DILocation(line: 533, scope: !168)
!229 = !DILocation(line: 535, scope: !168)
!230 = !DILocation(line: 556, scope: !168)
!231 = !DILocation(line: 425, scope: !168)
!232 = !DILocation(line: 433, scope: !168)
!233 = !DILocation(line: 469, scope: !168)
!234 = !DILocation(line: 474, scope: !168)
!235 = !DILocation(line: 478, scope: !168)
!236 = !DILocation(line: 484, scope: !168)
!237 = !DILocation(line: 491, scope: !168)
!238 = !DILocation(line: 327, scope: !168)
!239 = !DILocation(line: 332, scope: !168)
!240 = !DILocation(line: 343, scope: !168)
!241 = !DILocation(line: 349, scope: !168)
!242 = !DILocation(line: 352, scope: !168)
!243 = !DILocation(line: 358, scope: !168)
!244 = !DILocation(line: 362, scope: !168)
!245 = !DILocation(line: 364, scope: !168)
!246 = !DILocation(line: 372, scope: !168)
!247 = !DILocation(line: 377, scope: !168)
!248 = !DILocation(line: 378, scope: !168)
!249 = !DILocation(line: 379, scope: !168)
!250 = !DILocation(line: 384, scope: !168)
!251 = !DILocation(line: 389, scope: !168)
!252 = !DILocation(line: 390, scope: !168)
!253 = !DILocation(line: 405, scope: !168)
!254 = !DILocation(line: 411, scope: !168)
!255 = !DILocation(line: 563, scope: !168)
!256 = !DILocation(line: 565, scope: !168)
!257 = !DILocation(line: 575, scope: !168)
!258 = !DILocation(line: 1037, scope: !168)
!259 = !DILocation(line: 1041, scope: !168)
!260 = !DILocation(line: 1042, scope: !168)
!261 = !DILocation(line: 1044, scope: !168)
!262 = !DILocation(line: 1057, scope: !168)
!263 = !DILocation(line: 1063, scope: !168)
!264 = !DILocation(line: 1072, scope: !168)
!265 = !DILocation(line: 1077, scope: !168)
!266 = !DILocation(line: 1083, scope: !168)
!267 = !DILocation(line: 1095, scope: !168)
!268 = !DILocation(line: 1097, scope: !168)
!269 = !DILocation(line: 1099, scope: !168)
!270 = !DILocation(line: 1101, scope: !168)
!271 = !DILocation(line: 1103, scope: !168)
!272 = !DILocation(line: 1109, scope: !168)
!273 = !DILocation(line: 1110, scope: !168)
!274 = !DILocation(line: 1111, scope: !168)
!275 = !DILocation(line: 1112, scope: !168)
!276 = !DILocation(line: 1113, scope: !168)
!277 = !DILocation(line: 1114, scope: !168)
!278 = !DILocation(line: 1115, scope: !168)
!279 = !DILocation(line: 1116, scope: !168)
!280 = !DILocation(line: 1123, scope: !168)
!281 = !DILocation(line: 1124, scope: !168)
!282 = !DILocation(line: 1125, scope: !168)
!283 = !DILocation(line: 1130, scope: !168)
!284 = !DILocation(line: 1134, scope: !168)
!285 = !DILocation(line: 1140, scope: !168)
!286 = !DILocation(line: 1141, scope: !168)
!287 = !DILocation(line: 1142, scope: !168)
!288 = !DILocation(line: 1143, scope: !168)
!289 = !DILocation(line: 1145, scope: !168)
!290 = !DILocation(line: 1148, scope: !168)
!291 = !DILocation(line: 1149, scope: !168)
!292 = !DILocation(line: 1152, scope: !168)
!293 = !DILocation(line: 1157, scope: !168)
!294 = !DILocation(line: 1159, scope: !168)
!295 = !DILocation(line: 1163, scope: !168)
!296 = !DILocation(line: 1172, scope: !168)
!297 = !DILocation(line: 1182, scope: !168)
!298 = !DILocation(line: 1188, scope: !168)
!299 = !DILocation(line: 1190, scope: !168)
!300 = !DILocation(line: 1192, scope: !168)
!301 = !DILocation(line: 1194, scope: !168)
!302 = !DILocation(line: 1199, scope: !168)
!303 = !DILocation(line: 1201, scope: !168)
!304 = !DILocation(line: 1210, scope: !168)
!305 = !DILocation(line: 1217, scope: !168)
!306 = !DILocation(line: 1222, scope: !168)
!307 = !DILocation(line: 1225, scope: !168)
!308 = !DILocation(line: 1227, scope: !168)
!309 = !DILocation(line: 1234, scope: !168)
!310 = !DILocation(line: 1235, scope: !168)
!311 = !DILocation(line: 1236, scope: !168)
!312 = !DILocation(line: 1237, scope: !168)
!313 = !DILocation(line: 1242, scope: !168)
!314 = !DILocation(line: 1243, scope: !168)
!315 = !DILocation(line: 1245, scope: !168)
!316 = !DILocation(line: 1246, scope: !168)
!317 = !DILocation(line: 1247, scope: !168)
!318 = !DILocation(line: 1250, scope: !168)
!319 = !DILocation(line: 1252, scope: !168)
!320 = !DILocation(line: 1254, scope: !168)
!321 = !DILocation(line: 1256, scope: !168)
!322 = !DILocation(line: 1258, scope: !168)
!323 = !DILocation(line: 1268, scope: !168)
!324 = !DILocation(line: 1272, scope: !168)
!325 = !DILocation(line: 1281, scope: !168)
!326 = !DILocation(line: 1282, scope: !168)
!327 = !DILocation(line: 1283, scope: !168)
!328 = !DILocation(line: 1285, scope: !168)
!329 = !DILocation(line: 1287, scope: !168)
!330 = !DILocation(line: 1297, scope: !168)
!331 = !DILocation(line: 1300, scope: !168)
!332 = !DILocation(line: 1309, scope: !168)
!333 = !DILocation(line: 1326, scope: !168)
!334 = !DILocation(line: 1334, scope: !168)
!335 = !DILocation(line: 1339, scope: !168)
!336 = !DILocation(line: 1340, scope: !168)
!337 = !DILocation(line: 1343, scope: !168)
!338 = !DILocation(line: 1354, scope: !168)
!339 = !DILocation(line: 1359, scope: !168)
!340 = !DILocation(line: 1363, scope: !168)
!341 = !DILocation(line: 1373, scope: !168)
!342 = !DILocation(line: 1375, scope: !168)
!343 = !DILocation(line: 1376, scope: !168)
!344 = !DILocation(line: 1378, scope: !168)
!345 = !DILocation(line: 1314, scope: !168)
!346 = !DILocation(line: 1318, scope: !168)
!347 = !DILocation(line: 1017, scope: !168)
!348 = !DILocation(line: 1023, scope: !168)
!349 = !DILocation(line: 1025, scope: !168)
!350 = !DILocation(line: 1027, scope: !168)
!351 = !DILocation(line: 584, scope: !168)
!352 = !DILocation(line: 585, scope: !168)
!353 = !DILocation(line: 586, scope: !168)
!354 = !DILocation(line: 595, scope: !168)
!355 = !DILocation(line: 605, scope: !168)
!356 = !DILocation(line: 607, scope: !168)
!357 = !DILocation(line: 614, scope: !168)
!358 = !DILocation(line: 628, scope: !168)
!359 = !DILocation(line: 629, scope: !168)
!360 = !DILocation(line: 644, scope: !168)
!361 = !DILocation(line: 645, scope: !168)
!362 = !DILocation(line: 646, scope: !168)
!363 = !DILocation(line: 647, scope: !168)
!364 = !DILocation(line: 649, scope: !168)
!365 = !DILocation(line: 651, scope: !168)
!366 = !DILocation(line: 654, scope: !168)
!367 = !DILocation(line: 655, scope: !168)
!368 = !DILocation(line: 656, scope: !168)
!369 = !DILocation(line: 658, scope: !168)
!370 = !DILocation(line: 659, scope: !168)
!371 = !DILocation(line: 662, scope: !168)
!372 = !DILocation(line: 664, scope: !168)
!373 = !DILocation(line: 666, scope: !168)
!374 = !DILocation(line: 668, scope: !168)
!375 = !DILocation(line: 670, scope: !168)
!376 = !DILocation(line: 684, scope: !168)
!377 = !DILocation(line: 695, scope: !168)
!378 = !DILocation(line: 697, scope: !168)
!379 = !DILocation(line: 703, scope: !168)
!380 = !DILocation(line: 704, scope: !168)
!381 = !DILocation(line: 705, scope: !168)
!382 = !DILocation(line: 708, scope: !168)
!383 = !DILocation(line: 710, scope: !168)
!384 = !DILocation(line: 713, scope: !168)
!385 = !DILocation(line: 717, scope: !168)
!386 = !DILocation(line: 786, scope: !168)
!387 = !DILocation(line: 788, scope: !168)
!388 = !DILocation(line: 790, scope: !168)
!389 = !DILocation(line: 794, scope: !168)
!390 = !DILocation(line: 795, scope: !168)
!391 = !DILocation(line: 796, scope: !168)
!392 = !DILocation(line: 799, scope: !168)
!393 = !DILocation(line: 804, scope: !168)
!394 = !DILocation(line: 814, scope: !168)
!395 = !DILocation(line: 817, scope: !168)
!396 = !DILocation(line: 821, scope: !168)
!397 = !DILocation(line: 822, scope: !168)
!398 = !DILocation(line: 823, scope: !168)
!399 = !DILocation(line: 825, scope: !168)
!400 = !DILocation(line: 830, scope: !168)
!401 = !DILocation(line: 833, scope: !168)
!402 = !DILocation(line: 750, scope: !168)
!403 = !DILocation(line: 753, scope: !168)
!404 = !DILocation(line: 760, scope: !168)
!405 = !DILocation(line: 766, scope: !168)
!406 = !DILocation(line: 769, scope: !168)
!407 = !DILocation(line: 770, scope: !168)
!408 = !DILocation(line: 773, scope: !168)
!409 = !DILocation(line: 775, scope: !168)
!410 = !DILocation(line: 778, scope: !168)
!411 = !DILocation(line: 779, scope: !168)
!412 = !DILocation(line: 780, scope: !168)
!413 = !DILocation(line: 782, scope: !168)
!414 = !DILocation(line: 723, scope: !168)
!415 = !DILocation(line: 726, scope: !168)
!416 = !DILocation(line: 730, scope: !168)
!417 = !DILocation(line: 731, scope: !168)
!418 = !DILocation(line: 732, scope: !168)
!419 = !DILocation(line: 733, scope: !168)
!420 = !DILocation(line: 734, scope: !168)
!421 = !DILocation(line: 737, scope: !168)
!422 = !DILocation(line: 739, scope: !168)
!423 = !DILocation(line: 741, scope: !168)
!424 = !DILocation(line: 743, scope: !168)
!425 = !DILocation(line: 843, scope: !168)
!426 = !DILocation(line: 844, scope: !168)
!427 = !DILocation(line: 845, scope: !168)
!428 = !DILocation(line: 853, scope: !168)
!429 = !DILocation(line: 857, scope: !168)
!430 = !DILocation(line: 861, scope: !168)
!431 = !DILocation(line: 865, scope: !168)
!432 = !DILocation(line: 869, scope: !168)
!433 = !DILocation(line: 870, scope: !168)
!434 = !DILocation(line: 871, scope: !168)
!435 = !DILocation(line: 877, scope: !168)
!436 = !DILocation(line: 887, scope: !168)
!437 = !DILocation(line: 889, scope: !168)
!438 = !DILocation(line: 892, scope: !168)
!439 = !DILocation(line: 897, scope: !168)
!440 = !DILocation(line: 898, scope: !168)
!441 = !DILocation(line: 900, scope: !168)
!442 = !DILocation(line: 922, scope: !168)
!443 = !DILocation(line: 923, scope: !168)
!444 = !DILocation(line: 924, scope: !168)
!445 = !DILocation(line: 927, scope: !168)
!446 = !DILocation(line: 928, scope: !168)
!447 = !DILocation(line: 929, scope: !168)
!448 = !DILocation(line: 930, scope: !168)
!449 = !DILocation(line: 931, scope: !168)
!450 = !DILocation(line: 932, scope: !168)
!451 = !DILocation(line: 933, scope: !168)
!452 = !DILocation(line: 946, scope: !168)
!453 = !DILocation(line: 961, scope: !168)
!454 = !DILocation(line: 963, scope: !168)
!455 = !DILocation(line: 972, scope: !168)
!456 = !DILocation(line: 974, scope: !168)
!457 = !DILocation(line: 975, scope: !168)
!458 = !DILocation(line: 1001, scope: !168)
!459 = !DILocation(line: 1391, scope: !168)
!460 = !DILocation(line: 58, scope: !461)
!461 = !DILexicalBlockFile(scope: !37, file: !462, discriminator: 0)
!462 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareJumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!463 = !DILocation(line: 61, scope: !461)
!464 = !DILocation(line: 63, scope: !461)
!465 = !DILocation(line: 66, scope: !461)
!466 = !DILocation(line: 69, scope: !461)
!467 = !DILocation(line: 72, scope: !461)
!468 = !DILocation(line: 73, scope: !461)
!469 = !DILocation(line: 74, scope: !461)
!470 = !DILocation(line: 75, scope: !461)
!471 = !DILocation(line: 78, scope: !461)
!472 = !DILocation(line: 79, scope: !461)
!473 = !DILocation(line: 80, scope: !461)
!474 = !DILocation(line: 81, scope: !461)
!475 = !DILocation(line: 236, scope: !461)
!476 = !DILocation(line: 238, scope: !461)
!477 = !DILocation(line: 244, scope: !461)
!478 = !DILocation(line: 246, scope: !461)
!479 = !DILocation(line: 332, scope: !461)
!480 = !DILocation(line: 696, scope: !461)
!481 = !DILocation(line: 697, scope: !461)
!482 = !DILocation(line: 503, scope: !461)
!483 = !DILocation(line: 505, scope: !461)
!484 = !DILocation(line: 508, scope: !461)
!485 = !DILocation(line: 510, scope: !461)
!486 = !DILocation(line: 513, scope: !461)
!487 = !DILocation(line: 515, scope: !461)
!488 = !DILocation(line: 518, scope: !461)
!489 = !DILocation(line: 520, scope: !461)
!490 = !DILocation(line: 526, scope: !461)
!491 = !DILocation(line: 528, scope: !461)
!492 = !DILocation(line: 532, scope: !461)
!493 = !DILocation(line: 539, scope: !461)
!494 = !DILocation(line: 540, scope: !461)
!495 = !DILocation(line: 541, scope: !461)
!496 = !DILocation(line: 542, scope: !461)
!497 = !DILocation(line: 544, scope: !461)
!498 = !DILocation(line: 553, scope: !461)
!499 = !DILocation(line: 555, scope: !461)
!500 = !DILocation(line: 559, scope: !461)
!501 = !DILocation(line: 566, scope: !461)
!502 = !DILocation(line: 567, scope: !461)
!503 = !DILocation(line: 568, scope: !461)
!504 = !DILocation(line: 569, scope: !461)
!505 = !DILocation(line: 571, scope: !461)
!506 = !DILocation(line: 579, scope: !461)
!507 = !DILocation(line: 580, scope: !461)
!508 = !DILocation(line: 581, scope: !461)
!509 = !DILocation(line: 582, scope: !461)
!510 = !DILocation(line: 583, scope: !461)
!511 = !DILocation(line: 588, scope: !461)
!512 = !DILocation(line: 612, scope: !461)
!513 = !DILocation(line: 614, scope: !461)
!514 = !DILocation(line: 619, scope: !461)
!515 = !DILocation(line: 621, scope: !461)
!516 = !DILocation(line: 626, scope: !461)
!517 = !DILocation(line: 628, scope: !461)
!518 = !DILocation(line: 634, scope: !461)
!519 = !DILocation(line: 636, scope: !461)
!520 = !DILocation(line: 642, scope: !461)
!521 = !DILocation(line: 644, scope: !461)
!522 = !DILocation(line: 650, scope: !461)
!523 = !DILocation(line: 652, scope: !461)
!524 = !DILocation(line: 688, scope: !461)
!525 = !DILocation(line: 689, scope: !461)
!526 = !DILocation(line: 690, scope: !461)
!527 = !DILocation(line: 691, scope: !461)
!528 = !DILocation(line: 334, scope: !461)
!529 = !DILocation(line: 36, scope: !530)
!530 = !DILexicalBlockFile(scope: !37, file: !531, discriminator: 0)
!531 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OnceLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!532 = !DILocation(line: 37, scope: !530)
!533 = !DILocation(line: 38, scope: !530)
!534 = !DILocation(line: 41, scope: !530)
!535 = !DILocation(line: 42, scope: !530)
!536 = !DILocation(line: 45, scope: !530)
!537 = !DILocation(line: 52, scope: !530)
!538 = !DILocation(line: 53, scope: !530)
!539 = !DILocation(line: 59, scope: !530)
!540 = !DILocation(line: 60, scope: !530)
!541 = !DILocation(line: 62, scope: !530)
!542 = !DILocation(line: 63, scope: !530)
!543 = !DILocation(line: 79, scope: !530)
!544 = !DILocation(line: 85, scope: !530)
!545 = !DILocation(line: 88, scope: !530)
!546 = !DILocation(line: 91, scope: !530)
!547 = !DILocation(line: 97, scope: !530)
!548 = !DILocation(line: 103, scope: !530)
!549 = !DILocation(line: 50, scope: !550)
!550 = !DILexicalBlockFile(scope: !37, file: !551, discriminator: 0)
!551 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenEphemeralLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!552 = !DILocation(line: 53, scope: !550)
!553 = !DILocation(line: 54, scope: !550)
!554 = !DILocation(line: 57, scope: !550)
!555 = !DILocation(line: 58, scope: !550)
!556 = !DILocation(line: 59, scope: !550)
!557 = !DILocation(line: 66, scope: !550)
!558 = !DILocation(line: 68, scope: !550)
!559 = !DILocation(line: 75, scope: !550)
!560 = !DILocation(line: 76, scope: !550)
!561 = !DILocation(line: 77, scope: !550)
!562 = !DILocation(line: 82, scope: !550)
!563 = !DILocation(line: 87, scope: !550)
!564 = !DILocation(line: 88, scope: !550)
!565 = !DILocation(line: 91, scope: !550)
!566 = !DILocation(line: 92, scope: !550)
!567 = !DILocation(line: 95, scope: !550)
!568 = !DILocation(line: 96, scope: !550)
!569 = !DILocation(line: 98, scope: !550)
!570 = !DILocation(line: 103, scope: !550)
!571 = !DILocation(line: 105, scope: !550)
!572 = !DILocation(line: 112, scope: !550)
!573 = !DILocation(line: 119, scope: !550)
!574 = !DILocation(line: 128, scope: !550)
!575 = !DILocation(line: 129, scope: !550)
!576 = !DILocation(line: 130, scope: !550)
!577 = !DILocation(line: 131, scope: !550)
!578 = !DILocation(line: 135, scope: !550)
!579 = !DILocation(line: 136, scope: !550)
!580 = !DILocation(line: 139, scope: !550)
!581 = !DILocation(line: 141, scope: !550)
!582 = !DILocation(line: 149, scope: !550)
!583 = !DILocation(line: 155, scope: !550)
!584 = !DILocation(line: 157, scope: !550)
!585 = !DILocation(line: 161, scope: !550)
!586 = !DILocation(line: 162, scope: !550)
!587 = !DILocation(line: 167, scope: !550)
!588 = !DILocation(line: 169, scope: !550)
!589 = !DILocation(line: 177, scope: !550)
!590 = !DILocation(line: 178, scope: !550)
!591 = !DILocation(line: 180, scope: !550)
!592 = !DILocation(line: 184, scope: !550)
!593 = !DILocation(line: 185, scope: !550)
!594 = !DILocation(line: 186, scope: !550)
!595 = !DILocation(line: 187, scope: !550)
!596 = !DILocation(line: 197, scope: !550)
!597 = !DILocation(line: 198, scope: !550)
!598 = !DILocation(line: 201, scope: !550)
!599 = !DILocation(line: 204, scope: !550)
!600 = !DILocation(line: 211, scope: !550)
!601 = !DILocation(line: 213, scope: !550)
!602 = !DILocation(line: 218, scope: !550)
!603 = !DILocation(line: 219, scope: !550)
!604 = !DILocation(line: 224, scope: !550)
!605 = !DILocation(line: 230, scope: !550)
!606 = !DILocation(line: 232, scope: !550)
!607 = !DILocation(line: 237, scope: !550)
!608 = !DILocation(line: 238, scope: !550)
!609 = !DILocation(line: 239, scope: !550)
!610 = !DILocation(line: 246, scope: !550)
!611 = !DILocation(line: 248, scope: !550)
!612 = !DILocation(line: 254, scope: !550)
!613 = !DILocation(line: 255, scope: !550)
!614 = !DILocation(line: 257, scope: !550)
!615 = !DILocation(line: 263, scope: !550)
!616 = !DILocation(line: 266, scope: !550)
!617 = !DILocation(line: 267, scope: !550)
!618 = !DILocation(line: 268, scope: !550)
!619 = !DILocation(line: 275, scope: !550)
!620 = !DILocation(line: 278, scope: !550)
!621 = !DILocation(line: 279, scope: !550)
!622 = !DILocation(line: 281, scope: !550)
!623 = !DILocation(line: 293, scope: !550)
!624 = !DILocation(line: 294, scope: !550)
!625 = !DILocation(line: 295, scope: !550)
!626 = !DILocation(line: 296, scope: !550)
!627 = !DILocation(line: 297, scope: !550)
!628 = !DILocation(line: 299, scope: !550)
!629 = !DILocation(line: 305, scope: !550)
!630 = !DILocation(line: 311, scope: !550)
!631 = !DILocation(line: 312, scope: !550)
!632 = !DILocation(line: 313, scope: !550)
!633 = !DILocation(line: 319, scope: !550)
!634 = !DILocation(line: 39, scope: !635)
!635 = !DILexicalBlockFile(scope: !37, file: !636, discriminator: 0)
!636 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!637 = !DILocation(line: 40, scope: !635)
!638 = !DILocation(line: 43, scope: !635)
!639 = !DILocation(line: 44, scope: !635)
!640 = !DILocation(line: 47, scope: !635)
!641 = !DILocation(line: 48, scope: !635)
!642 = !DILocation(line: 51, scope: !635)
!643 = !DILocation(line: 52, scope: !635)
!644 = !DILocation(line: 53, scope: !635)
!645 = !DILocation(line: 68, scope: !635)
!646 = !DILocation(line: 73, scope: !635)
!647 = !DILocation(line: 74, scope: !635)
!648 = !DILocation(line: 77, scope: !635)
!649 = !DILocation(line: 82, scope: !635)
!650 = !DILocation(line: 83, scope: !635)
!651 = !DILocation(line: 84, scope: !635)
!652 = !DILocation(line: 86, scope: !635)
!653 = !DILocation(line: 92, scope: !635)
!654 = !DILocation(line: 93, scope: !635)
!655 = !DILocation(line: 94, scope: !635)
!656 = !DILocation(line: 96, scope: !635)
!657 = !DILocation(line: 102, scope: !635)
!658 = !DILocation(line: 103, scope: !635)
!659 = !DILocation(line: 104, scope: !635)
!660 = !DILocation(line: 106, scope: !635)
!661 = !DILocation(line: 120, scope: !635)
!662 = !DILocation(line: 128, scope: !635)
!663 = !DILocation(line: 129, scope: !635)
!664 = !DILocation(line: 135, scope: !635)
!665 = !DILocation(line: 140, scope: !635)
!666 = !DILocation(line: 141, scope: !635)
!667 = !DILocation(line: 144, scope: !635)
!668 = !DILocation(line: 149, scope: !635)
!669 = !DILocation(line: 150, scope: !635)
!670 = !DILocation(line: 151, scope: !635)
!671 = !DILocation(line: 152, scope: !635)
!672 = !DILocation(line: 154, scope: !635)
!673 = !DILocation(line: 159, scope: !635)
!674 = !DILocation(line: 160, scope: !635)
!675 = !DILocation(line: 161, scope: !635)
!676 = !DILocation(line: 162, scope: !635)
!677 = !DILocation(line: 164, scope: !635)
!678 = !DILocation(line: 167, scope: !635)
!679 = !DILocation(line: 48, scope: !680)
!680 = !DILexicalBlockFile(scope: !37, file: !681, discriminator: 0)
!681 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MakeRecordLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!682 = !DILocation(line: 54, scope: !680)
!683 = !DILocation(line: 55, scope: !680)
!684 = !DILocation(line: 58, scope: !680)
!685 = !DILocation(line: 59, scope: !680)
!686 = !DILocation(line: 62, scope: !680)
!687 = !DILocation(line: 63, scope: !680)
!688 = !DILocation(line: 66, scope: !680)
!689 = !DILocation(line: 72, scope: !680)
!690 = !DILocation(line: 73, scope: !680)
!691 = !DILocation(line: 74, scope: !680)
!692 = !DILocation(line: 80, scope: !680)
!693 = !DILocation(line: 87, scope: !680)
!694 = !DILocation(line: 94, scope: !680)
!695 = !DILocation(line: 145, scope: !680)
!696 = !DILocation(line: 146, scope: !680)
!697 = !DILocation(line: 148, scope: !680)
!698 = !DILocation(line: 149, scope: !680)
!699 = !DILocation(line: 150, scope: !680)
!700 = !DILocation(line: 151, scope: !680)
!701 = !DILocation(line: 162, scope: !680)
!702 = !DILocation(line: 171, scope: !680)
!703 = !DILocation(line: 172, scope: !680)
!704 = !DILocation(line: 177, scope: !680)
!705 = !DILocation(line: 179, scope: !680)
!706 = !DILocation(line: 185, scope: !680)
!707 = !DILocation(line: 187, scope: !680)
!708 = !DILocation(line: 193, scope: !680)
!709 = !DILocation(line: 195, scope: !680)
!710 = !DILocation(line: 199, scope: !680)
!711 = !DILocation(line: 205, scope: !680)
!712 = !DILocation(line: 206, scope: !680)
!713 = !DILocation(line: 207, scope: !680)
!714 = !DILocation(line: 209, scope: !680)
!715 = !DILocation(line: 211, scope: !680)
!716 = !DILocation(line: 218, scope: !680)
!717 = !DILocation(line: 224, scope: !680)
!718 = !DILocation(line: 225, scope: !680)
!719 = !DILocation(line: 227, scope: !680)
!720 = !DILocation(line: 232, scope: !680)
!721 = !DILocation(line: 234, scope: !680)
!722 = !DILocation(line: 239, scope: !680)
!723 = !DILocation(line: 241, scope: !680)
!724 = !DILocation(line: 242, scope: !680)
!725 = !DILocation(line: 243, scope: !680)
!726 = !DILocation(line: 244, scope: !680)
!727 = !DILocation(line: 245, scope: !680)
!728 = !DILocation(line: 261, scope: !680)
!729 = !DILocation(line: 271, scope: !680)
!730 = !DILocation(line: 272, scope: !680)
!731 = !DILocation(line: 276, scope: !680)
!732 = !DILocation(line: 282, scope: !680)
!733 = !DILocation(line: 283, scope: !680)
!734 = !DILocation(line: 284, scope: !680)
!735 = !DILocation(line: 286, scope: !680)
!736 = !DILocation(line: 292, scope: !680)
!737 = !DILocation(line: 295, scope: !680)
!738 = !DILocation(line: 297, scope: !680)
!739 = !DILocation(line: 0, scope: !680)
!740 = !DILocation(line: 306, scope: !680)
!741 = !DILocation(line: 311, scope: !680)
!742 = !DILocation(line: 312, scope: !680)
!743 = !DILocation(line: 314, scope: !680)
!744 = !DILocation(line: 318, scope: !680)
!745 = !DILocation(line: 323, scope: !680)
!746 = !DILocation(line: 324, scope: !680)
!747 = !DILocation(line: 326, scope: !680)
!748 = !DILocation(line: 330, scope: !680)
!749 = !DILocation(line: 335, scope: !680)
!750 = !DILocation(line: 336, scope: !680)
!751 = !DILocation(line: 338, scope: !680)
!752 = !DILocation(line: 355, scope: !680)
!753 = !DILocation(line: 361, scope: !680)
!754 = !DILocation(line: 362, scope: !680)
!755 = !DILocation(line: 368, scope: !680)
!756 = !DILocation(line: 369, scope: !680)
!757 = !DILocation(line: 370, scope: !680)
!758 = !DILocation(line: 371, scope: !680)
!759 = !DILocation(line: 373, scope: !680)
!760 = !DILocation(line: 377, scope: !680)
!761 = !DILocation(line: 378, scope: !680)
!762 = !DILocation(line: 391, scope: !680)
!763 = !DILocation(line: 396, scope: !680)
!764 = !DILocation(line: 397, scope: !680)
!765 = !DILocation(line: 398, scope: !680)
!766 = !DILocation(line: 400, scope: !680)
!767 = !DILocation(line: 406, scope: !680)
!768 = !DILocation(line: 407, scope: !680)
!769 = !DILocation(line: 408, scope: !680)
!770 = !DILocation(line: 409, scope: !680)
!771 = !DILocation(line: 412, scope: !680)
!772 = !DILocation(line: 413, scope: !680)
!773 = !DILocation(line: 414, scope: !680)
!774 = !DILocation(line: 415, scope: !680)
!775 = !DILocation(line: 416, scope: !680)
!776 = !DILocation(line: 417, scope: !680)
!777 = !DILocation(line: 418, scope: !680)
!778 = !DILocation(line: 419, scope: !680)
!779 = !DILocation(line: 421, scope: !680)
!780 = !DILocation(line: 427, scope: !680)
!781 = !DILocation(line: 428, scope: !680)
!782 = !DILocation(line: 434, scope: !680)
!783 = !DILocation(line: 436, scope: !680)
!784 = !DILocation(line: 438, scope: !680)
!785 = !DILocation(line: 440, scope: !680)
!786 = !DILocation(line: 442, scope: !680)
!787 = !DILocation(line: 448, scope: !680)
!788 = !DILocation(line: 449, scope: !680)
!789 = !DILocation(line: 468, scope: !680)
!790 = !DILocation(line: 469, scope: !680)
!791 = !DILocation(line: 470, scope: !680)
!792 = !DILocation(line: 454, scope: !680)
!793 = !DILocation(line: 461, scope: !680)
!794 = !DILocation(line: 463, scope: !680)
!795 = !DILocation(line: 479, scope: !680)
!796 = !DILocation(line: 480, scope: !680)
!797 = !DILocation(line: 481, scope: !680)
!798 = !DILocation(line: 484, scope: !680)
!799 = !DILocation(line: 485, scope: !680)
!800 = !DILocation(line: 486, scope: !680)
!801 = !DILocation(line: 487, scope: !680)
!802 = !DILocation(line: 490, scope: !680)
!803 = !DILocation(line: 492, scope: !680)
!804 = !DILocation(line: 500, scope: !680)
!805 = !DILocation(line: 506, scope: !680)
!806 = !DILocation(line: 508, scope: !680)
!807 = !DILocation(line: 509, scope: !680)
!808 = !DILocation(line: 510, scope: !680)
!809 = !DILocation(line: 516, scope: !680)
!810 = !DILocation(line: 520, scope: !680)
!811 = !DILocation(line: 521, scope: !680)
!812 = !DILocation(line: 527, scope: !680)
!813 = !DILocation(line: 530, scope: !680)
!814 = !DILocation(line: 535, scope: !680)
!815 = !DILocation(line: 536, scope: !680)
!816 = !DILocation(line: 537, scope: !680)
!817 = !DILocation(line: 541, scope: !680)
!818 = !DILocation(line: 542, scope: !680)
!819 = !DILocation(line: 550, scope: !680)
!820 = !DILocation(line: 551, scope: !680)
!821 = !DILocation(line: 554, scope: !680)
!822 = !DILocation(line: 555, scope: !680)
!823 = !DILocation(line: 556, scope: !680)
!824 = !DILocation(line: 557, scope: !680)
!825 = !DILocation(line: 558, scope: !680)
!826 = !DILocation(line: 559, scope: !680)
!827 = !DILocation(line: 566, scope: !680)
!828 = !DILocation(line: 571, scope: !680)
!829 = !DILocation(line: 572, scope: !680)
!830 = !DILocation(line: 573, scope: !680)
!831 = !DILocation(line: 575, scope: !680)
!832 = !DILocation(line: 603, scope: !680)
!833 = !DILocation(line: 604, scope: !680)
!834 = !DILocation(line: 619, scope: !680)
!835 = !DILocation(line: 625, scope: !680)
!836 = !DILocation(line: 626, scope: !680)
!837 = !DILocation(line: 627, scope: !680)
!838 = !DILocation(line: 630, scope: !680)
!839 = !DILocation(line: 631, scope: !680)
!840 = !DILocation(line: 638, scope: !680)
!841 = !DILocation(line: 639, scope: !680)
!842 = !DILocation(line: 641, scope: !680)
!843 = !DILocation(line: 646, scope: !680)
!844 = !DILocation(line: 647, scope: !680)
!845 = !DILocation(line: 648, scope: !680)
!846 = !DILocation(line: 649, scope: !680)
!847 = !DILocation(line: 652, scope: !680)
!848 = !DILocation(line: 653, scope: !680)
!849 = !DILocation(line: 654, scope: !680)
!850 = !DILocation(line: 656, scope: !680)
!851 = !DILocation(line: 662, scope: !680)
!852 = !DILocation(line: 663, scope: !680)
!853 = !DILocation(line: 664, scope: !680)
!854 = !DILocation(line: 667, scope: !680)
!855 = !DILocation(line: 668, scope: !680)
!856 = !DILocation(line: 671, scope: !680)
!857 = !DILocation(line: 673, scope: !680)
!858 = !DILocation(line: 677, scope: !680)
!859 = !DILocation(line: 678, scope: !680)
!860 = !DILocation(line: 679, scope: !680)
!861 = !DILocation(line: 684, scope: !680)
!862 = !DILocation(line: 687, scope: !680)
!863 = !DILocation(line: 688, scope: !680)
!864 = !DILocation(line: 689, scope: !680)
!865 = !DILocation(line: 693, scope: !680)
!866 = !DILocation(line: 694, scope: !680)
!867 = !DILocation(line: 695, scope: !680)
!868 = !DILocation(line: 698, scope: !680)
!869 = !DILocation(line: 699, scope: !680)
!870 = !DILocation(line: 701, scope: !680)
!871 = !DILocation(line: 707, scope: !680)
!872 = !DILocation(line: 40, scope: !873)
!873 = !DILexicalBlockFile(scope: !37, file: !874, discriminator: 0)
!874 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!875 = !DILocation(line: 41, scope: !873)
!876 = !DILocation(line: 43, scope: !873)
!877 = !DILocation(line: 51, scope: !873)
!878 = !DILocation(line: 24, scope: !873)
!879 = !DILocation(line: 57, scope: !873)
!880 = !DILocation(line: 58, scope: !873)
!881 = !DILocation(line: 61, scope: !873)
!882 = !DILocation(line: 62, scope: !873)
!883 = !DILocation(line: 63, scope: !873)
!884 = !DILocation(line: 64, scope: !873)
!885 = !DILocation(line: 65, scope: !873)
!886 = !DILocation(line: 68, scope: !873)
!887 = !DILocation(line: 69, scope: !873)
!888 = !DILocation(line: 70, scope: !873)
!889 = !DILocation(line: 71, scope: !873)
!890 = !DILocation(line: 74, scope: !873)
!891 = !DILocation(line: 76, scope: !873)
!892 = !DILocation(line: 79, scope: !873)
!893 = !DILocation(line: 81, scope: !873)
!894 = !DILocation(line: 84, scope: !873)
!895 = !DILocation(line: 85, scope: !873)
!896 = !DILocation(line: 89, scope: !873)
!897 = !DILocation(line: 92, scope: !873)
!898 = !DILocation(line: 101, scope: !873)
!899 = !DILocation(line: 102, scope: !873)
!900 = !DILocation(line: 107, scope: !873)
!901 = !DILocation(line: 42, scope: !902)
!902 = !DILexicalBlockFile(scope: !37, file: !903, discriminator: 0)
!903 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!904 = !DILocation(line: 43, scope: !902)
!905 = !DILocation(line: 46, scope: !902)
!906 = !DILocation(line: 65, scope: !902)
!907 = !DILocation(line: 71, scope: !902)
!908 = !DILocation(line: 75, scope: !902)
!909 = !DILocation(line: 80, scope: !902)
!910 = !DILocation(line: 83, scope: !902)
!911 = !DILocation(line: 84, scope: !902)
!912 = !DILocation(line: 87, scope: !902)
!913 = !DILocation(line: 93, scope: !902)
!914 = !DILocation(line: 99, scope: !902)
!915 = !DILocation(line: 101, scope: !902)
!916 = !DILocation(line: 114, scope: !902)
!917 = !DILocation(line: 116, scope: !902)
!918 = !DILocation(line: 33, scope: !919)
!919 = !DILexicalBlockFile(scope: !37, file: !920, discriminator: 0)
!920 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IsNullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!921 = !DILocation(line: 36, scope: !919)
!922 = !DILocation(line: 37, scope: !919)
!923 = !DILocation(line: 38, scope: !919)
!924 = !DILocation(line: 39, scope: !919)
!925 = !DILocation(line: 42, scope: !919)
!926 = !DILocation(line: 40, scope: !927)
!927 = !DILexicalBlockFile(scope: !37, file: !928, discriminator: 0)
!928 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!929 = !DILocation(line: 43, scope: !927)
!930 = !DILocation(line: 50, scope: !931)
!931 = !DILexicalBlockFile(scope: !37, file: !932, discriminator: 0)
!932 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekGELowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!933 = !DILocation(line: 52, scope: !931)
!934 = !DILocation(line: 53, scope: !931)
!935 = !DILocation(line: 56, scope: !931)
!936 = !DILocation(line: 57, scope: !931)
!937 = !DILocation(line: 60, scope: !931)
!938 = !DILocation(line: 61, scope: !931)
!939 = !DILocation(line: 63, scope: !931)
!940 = !DILocation(line: 64, scope: !931)
!941 = !DILocation(line: 68, scope: !931)
!942 = !DILocation(line: 69, scope: !931)
!943 = !DILocation(line: 72, scope: !931)
!944 = !DILocation(line: 73, scope: !931)
!945 = !DILocation(line: 76, scope: !931)
!946 = !DILocation(line: 77, scope: !931)
!947 = !DILocation(line: 80, scope: !931)
!948 = !DILocation(line: 81, scope: !931)
!949 = !DILocation(line: 84, scope: !931)
!950 = !DILocation(line: 85, scope: !931)
!951 = !DILocation(line: 92, scope: !931)
!952 = !DILocation(line: 94, scope: !931)
!953 = !DILocation(line: 99, scope: !931)
!954 = !DILocation(line: 102, scope: !931)
!955 = !DILocation(line: 103, scope: !931)
!956 = !DILocation(line: 105, scope: !931)
!957 = !DILocation(line: 106, scope: !931)
!958 = !DILocation(line: 114, scope: !931)
!959 = !DILocation(line: 119, scope: !931)
!960 = !DILocation(line: 42, scope: !961)
!961 = !DILexicalBlockFile(scope: !37, file: !962, discriminator: 0)
!962 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/ApplyNumericAffinity.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!963 = !DILocation(line: 121, scope: !931)
!964 = !DILocation(line: 126, scope: !931)
!965 = !DILocation(line: 129, scope: !931)
!966 = !DILocation(line: 132, scope: !931)
!967 = !DILocation(line: 134, scope: !931)
!968 = !DILocation(line: 135, scope: !931)
!969 = !DILocation(line: 141, scope: !931)
!970 = !DILocation(line: 145, scope: !931)
!971 = !DILocation(line: 146, scope: !931)
!972 = !DILocation(line: 153, scope: !931)
!973 = !DILocation(line: 164, scope: !931)
!974 = !DILocation(line: 185, scope: !931)
!975 = !DILocation(line: 186, scope: !931)
!976 = !DILocation(line: 187, scope: !931)
!977 = !DILocation(line: 193, scope: !931)
!978 = !DILocation(line: 194, scope: !931)
!979 = !DILocation(line: 198, scope: !931)
!980 = !DILocation(line: 199, scope: !931)
!981 = !DILocation(line: 201, scope: !931)
!982 = !DILocation(line: 207, scope: !931)
!983 = !DILocation(line: 211, scope: !931)
!984 = !DILocation(line: 212, scope: !931)
!985 = !DILocation(line: 214, scope: !931)
!986 = !DILocation(line: 226, scope: !931)
!987 = !DILocation(line: 227, scope: !931)
!988 = !DILocation(line: 231, scope: !931)
!989 = !DILocation(line: 232, scope: !931)
!990 = !DILocation(line: 239, scope: !931)
!991 = !DILocation(line: 240, scope: !931)
!992 = !DILocation(line: 244, scope: !931)
!993 = !DILocation(line: 245, scope: !931)
!994 = !DILocation(line: 247, scope: !931)
!995 = !DILocation(line: 264, scope: !931)
!996 = !DILocation(line: 265, scope: !931)
!997 = !DILocation(line: 273, scope: !931)
!998 = !DILocation(line: 274, scope: !931)
!999 = !DILocation(line: 281, scope: !931)
!1000 = !DILocation(line: 288, scope: !931)
!1001 = !DILocation(line: 289, scope: !931)
!1002 = !DILocation(line: 290, scope: !931)
!1003 = !DILocation(line: 291, scope: !931)
!1004 = !DILocation(line: 292, scope: !931)
!1005 = !DILocation(line: 299, scope: !931)
!1006 = !DILocation(line: 303, scope: !931)
!1007 = !DILocation(line: 305, scope: !931)
!1008 = !DILocation(line: 312, scope: !931)
!1009 = !DILocation(line: 315, scope: !931)
!1010 = !DILocation(line: 317, scope: !931)
!1011 = !DILocation(line: 318, scope: !931)
!1012 = !DILocation(line: 319, scope: !931)
!1013 = !DILocation(line: 323, scope: !931)
!1014 = !DILocation(line: 324, scope: !931)
!1015 = !DILocation(line: 327, scope: !931)
!1016 = !DILocation(line: 329, scope: !931)
!1017 = !DILocation(line: 332, scope: !931)
!1018 = !DILocation(line: 334, scope: !931)
!1019 = !DILocation(line: 335, scope: !931)
!1020 = !DILocation(line: 339, scope: !931)
!1021 = !DILocation(line: 340, scope: !931)
!1022 = !DILocation(line: 342, scope: !931)
!1023 = !DILocation(line: 356, scope: !931)
!1024 = !DILocation(line: 357, scope: !931)
!1025 = !DILocation(line: 358, scope: !931)
!1026 = !DILocation(line: 359, scope: !931)
!1027 = !DILocation(line: 360, scope: !931)
!1028 = !DILocation(line: 364, scope: !931)
!1029 = !DILocation(line: 371, scope: !931)
!1030 = !DILocation(line: 372, scope: !931)
!1031 = !DILocation(line: 373, scope: !931)
!1032 = !DILocation(line: 375, scope: !931)
!1033 = !DILocation(line: 377, scope: !931)
!1034 = !DILocation(line: 378, scope: !931)
!1035 = !DILocation(line: 379, scope: !931)
!1036 = !DILocation(line: 0, scope: !931)
!1037 = !DILocation(line: 386, scope: !931)
!1038 = !DILocation(line: 394, scope: !931)
!1039 = !DILocation(line: 397, scope: !931)
!1040 = !DILocation(line: 398, scope: !931)
!1041 = !DILocation(line: 408, scope: !931)
!1042 = !DILocation(line: 413, scope: !931)
!1043 = !DILocation(line: 415, scope: !931)
!1044 = !DILocation(line: 494, scope: !931)
!1045 = !DILocation(line: 495, scope: !931)
!1046 = !DILocation(line: 501, scope: !931)
!1047 = !DILocation(line: 504, scope: !931)
!1048 = !DILocation(line: 505, scope: !931)
!1049 = !DILocation(line: 507, scope: !931)
!1050 = !DILocation(line: 508, scope: !931)
!1051 = !DILocation(line: 44, scope: !1052)
!1052 = !DILexicalBlockFile(scope: !37, file: !1053, discriminator: 0)
!1053 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxCompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1054 = !DILocation(line: 45, scope: !1052)
!1055 = !DILocation(line: 47, scope: !1052)
!1056 = !DILocation(line: 48, scope: !1052)
!1057 = !DILocation(line: 49, scope: !1052)
!1058 = !DILocation(line: 52, scope: !1052)
!1059 = !DILocation(line: 54, scope: !1052)
!1060 = !DILocation(line: 55, scope: !1052)
!1061 = !DILocation(line: 56, scope: !1052)
!1062 = !DILocation(line: 60, scope: !1052)
!1063 = !DILocation(line: 61, scope: !1052)
!1064 = !DILocation(line: 63, scope: !1052)
!1065 = !DILocation(line: 66, scope: !1052)
!1066 = !DILocation(line: 73, scope: !1052)
!1067 = !DILocation(line: 75, scope: !1052)
!1068 = !DILocation(line: 76, scope: !1052)
!1069 = !DILocation(line: 81, scope: !1052)
!1070 = !DILocation(line: 82, scope: !1052)
!1071 = !DILocation(line: 91, scope: !1052)
!1072 = !DILocation(line: 103, scope: !1052)
!1073 = !DILocation(line: 107, scope: !1052)
!1074 = !DILocation(line: 108, scope: !1052)
!1075 = !DILocation(line: 109, scope: !1052)
!1076 = !DILocation(line: 41, scope: !1077)
!1077 = !DILexicalBlockFile(scope: !37, file: !1078, discriminator: 0)
!1078 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1079 = !DILocation(line: 43, scope: !1077)
!1080 = !DILocation(line: 44, scope: !1077)
!1081 = !DILocation(line: 45, scope: !1077)
!1082 = !DILocation(line: 47, scope: !1077)
!1083 = !DILocation(line: 49, scope: !1077)
!1084 = !DILocation(line: 50, scope: !1077)
!1085 = !DILocation(line: 51, scope: !1077)
!1086 = !DILocation(line: 58, scope: !1077)
!1087 = !DILocation(line: 60, scope: !1077)
!1088 = !DILocation(line: 65, scope: !1077)
!1089 = !DILocation(line: 66, scope: !1077)
!1090 = !DILocation(line: 69, scope: !1077)
!1091 = !DILocation(line: 72, scope: !1077)
!1092 = !DILocation(line: 73, scope: !1077)
!1093 = !DILocation(line: 74, scope: !1077)
!1094 = !DILocation(line: 75, scope: !1077)
!1095 = !DILocation(line: 81, scope: !1077)
!1096 = !DILocation(line: 85, scope: !1077)
!1097 = !DILocation(line: 86, scope: !1077)
!1098 = !DILocation(line: 87, scope: !1077)
!1099 = !DILocation(line: 88, scope: !1077)
!1100 = !DILocation(line: 90, scope: !1077)
!1101 = !DILocation(line: 95, scope: !1077)
!1102 = !DILocation(line: 96, scope: !1077)
!1103 = !DILocation(line: 97, scope: !1077)
!1104 = !DILocation(line: 98, scope: !1077)
!1105 = !DILocation(line: 100, scope: !1077)
!1106 = !DILocation(line: 107, scope: !1077)
!1107 = !DILocation(line: 110, scope: !1077)
!1108 = !DILocation(line: 111, scope: !1077)
!1109 = !DILocation(line: 114, scope: !1077)
!1110 = !DILocation(line: 117, scope: !1077)
!1111 = !DILocation(line: 118, scope: !1077)
!1112 = !DILocation(line: 125, scope: !1077)
!1113 = !DILocation(line: 128, scope: !1077)
!1114 = !DILocation(line: 129, scope: !1077)
!1115 = !DILocation(line: 132, scope: !1077)
!1116 = !DILocation(line: 133, scope: !1077)
!1117 = !DILocation(line: 136, scope: !1077)
!1118 = !DILocation(line: 137, scope: !1077)
!1119 = !DILocation(line: 140, scope: !1077)
!1120 = !DILocation(line: 141, scope: !1077)
!1121 = !DILocation(line: 144, scope: !1077)
!1122 = !DILocation(line: 145, scope: !1077)
!1123 = !DILocation(line: 146, scope: !1077)
!1124 = !DILocation(line: 155, scope: !1077)
!1125 = !DILocation(line: 157, scope: !1077)
!1126 = !DILocation(line: 165, scope: !1077)
!1127 = !DILocation(line: 166, scope: !1077)
!1128 = !DILocation(line: 178, scope: !1077)
!1129 = !DILocation(line: 183, scope: !1077)
!1130 = !DILocation(line: 184, scope: !1077)
!1131 = !DILocation(line: 356, scope: !461)
!1132 = !DILocation(line: 358, scope: !461)
!1133 = !DILocation(line: 360, scope: !461)
!1134 = !DILocation(line: 369, scope: !461)
!1135 = !DILocation(line: 370, scope: !461)
!1136 = !DILocation(line: 372, scope: !461)
!1137 = !DILocation(line: 377, scope: !461)
!1138 = !DILocation(line: 384, scope: !461)
!1139 = !DILocation(line: 385, scope: !461)
!1140 = !DILocation(line: 387, scope: !461)
!1141 = !DILocation(line: 398, scope: !461)
!1142 = !DILocation(line: 400, scope: !461)
!1143 = !DILocation(line: 402, scope: !461)
!1144 = !DILocation(line: 407, scope: !461)
!1145 = !DILocation(line: 413, scope: !461)
!1146 = !DILocation(line: 425, scope: !461)
!1147 = !DILocation(line: 427, scope: !461)
!1148 = !DILocation(line: 430, scope: !461)
!1149 = !DILocation(line: 432, scope: !461)
!1150 = !DILocation(line: 439, scope: !461)
!1151 = !DILocation(line: 441, scope: !461)
!1152 = !DILocation(line: 444, scope: !461)
!1153 = !DILocation(line: 445, scope: !461)
!1154 = !DILocation(line: 446, scope: !461)
!1155 = !DILocation(line: 447, scope: !461)
!1156 = !DILocation(line: 449, scope: !461)
!1157 = !DILocation(line: 450, scope: !461)
!1158 = !DILocation(line: 456, scope: !461)
!1159 = !DILocation(line: 458, scope: !461)
!1160 = !DILocation(line: 462, scope: !461)
!1161 = !DILocation(line: 464, scope: !461)
!1162 = !DILocation(line: 474, scope: !461)
!1163 = !DILocation(line: 476, scope: !461)
!1164 = !DILocation(line: 480, scope: !461)
!1165 = !DILocation(line: 482, scope: !461)
!1166 = !DILocation(line: 487, scope: !461)
!1167 = !DILocation(line: 489, scope: !461)
!1168 = !DILocation(line: 595, scope: !461)
!1169 = !DILocation(line: 611, scope: !461)
!1170 = !DILocation(line: 106, scope: !1077)
!1171 = !DILocation(line: 35, scope: !1172)
!1172 = !DILexicalBlockFile(scope: !37, file: !1173, discriminator: 0)
!1173 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RealAffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1174 = !DILocation(line: 38, scope: !1172)
!1175 = !DILocation(line: 39, scope: !1172)
!1176 = !DILocation(line: 41, scope: !1172)
!1177 = !DILocation(line: 47, scope: !1172)
!1178 = !DILocation(line: 49, scope: !1172)
!1179 = !DILocation(line: 53, scope: !1172)
!1180 = !DILocation(line: 55, scope: !1172)
!1181 = !DILocation(line: 26, scope: !1182)
!1182 = !DILexicalBlockFile(scope: !37, file: !1183, discriminator: 0)
!1183 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1184 = !DILocation(line: 41, scope: !1182)
!1185 = !DILocation(line: 42, scope: !1182)
!1186 = !DILocation(line: 45, scope: !1182)
!1187 = !DILocation(line: 48, scope: !1182)
!1188 = !DILocation(line: 24, scope: !1182)
!1189 = !DILocation(line: 56, scope: !1182)
!1190 = !DILocation(line: 66, scope: !1182)
!1191 = !DILocation(line: 32, scope: !1192)
!1192 = !DILexicalBlockFile(scope: !37, file: !1193, discriminator: 0)
!1193 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenPseudoLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1194 = !DILocation(line: 41, scope: !1192)
!1195 = !DILocation(line: 46, scope: !1192)
!1196 = !DILocation(line: 47, scope: !1192)
!1197 = !DILocation(line: 49, scope: !1192)
!1198 = !DILocation(line: 50, scope: !1192)
!1199 = !DILocation(line: 52, scope: !1192)
!1200 = !DILocation(line: 53, scope: !1192)
!1201 = !DILocation(line: 55, scope: !1192)
!1202 = !DILocation(line: 56, scope: !1192)
!1203 = !DILocation(line: 57, scope: !1192)
!1204 = !DILocation(line: 36, scope: !1205)
!1205 = !DILexicalBlockFile(scope: !37, file: !1206, discriminator: 0)
!1206 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterDataLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1207 = !DILocation(line: 39, scope: !1205)
!1208 = !DILocation(line: 40, scope: !1205)
!1209 = !DILocation(line: 41, scope: !1205)
!1210 = !DILocation(line: 46, scope: !1205)
!1211 = !DILocation(line: 60, scope: !1205)
!1212 = !DILocation(line: 61, scope: !1205)
!1213 = !DILocation(line: 62, scope: !1205)
!1214 = !DILocation(line: 63, scope: !1205)
!1215 = !DILocation(line: 31, scope: !1216)
!1216 = !DILexicalBlockFile(scope: !37, file: !1217, discriminator: 0)
!1217 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1218 = !DILocation(line: 52, scope: !1216)
!1219 = !DILocation(line: 53, scope: !1216)
!1220 = !DILocation(line: 54, scope: !1216)
!1221 = !DILocation(line: 55, scope: !1216)
!1222 = !DILocation(line: 56, scope: !1216)
!1223 = !DILocation(line: 130, scope: !1216)
!1224 = !DILocation(line: 134, scope: !1216)
!1225 = !DILocation(line: 154, scope: !1216)
!1226 = !DILocation(line: 155, scope: !1216)
!1227 = !DILocation(line: 161, scope: !1216)
!1228 = !DILocation(line: 165, scope: !1216)
!1229 = !DILocation(line: 166, scope: !1216)
!1230 = !DILocation(line: 168, scope: !1216)
!1231 = !DILocation(line: 169, scope: !1216)
!1232 = !DILocation(line: 170, scope: !1216)
!1233 = !DILocation(line: 171, scope: !1216)
!1234 = !DILocation(line: 172, scope: !1216)
!1235 = !DILocation(line: 178, scope: !1216)
!1236 = !DILocation(line: 186, scope: !1216)
!1237 = !DILocation(line: 187, scope: !1216)
!1238 = !DILocation(line: 189, scope: !1216)
!1239 = !DILocation(line: 199, scope: !1216)
!1240 = !DILocation(line: 200, scope: !1216)
!1241 = !DILocation(line: 201, scope: !1216)
!1242 = !DILocation(line: 202, scope: !1216)
!1243 = !DILocation(line: 204, scope: !1216)
!1244 = !DILocation(line: 205, scope: !1216)
!1245 = !DILocation(line: 206, scope: !1216)
!1246 = !DILocation(line: 207, scope: !1216)
!1247 = !DILocation(line: 209, scope: !1216)
!1248 = !DILocation(line: 212, scope: !1216)
!1249 = !DILocation(line: 216, scope: !1216)
!1250 = !DILocation(line: 217, scope: !1216)
!1251 = !DILocation(line: 219, scope: !1216)
!1252 = !DILocation(line: 233, scope: !1216)
!1253 = !DILocation(line: 234, scope: !1216)
!1254 = !DILocation(line: 238, scope: !1216)
!1255 = !DILocation(line: 239, scope: !1216)
!1256 = !DILocation(line: 240, scope: !1216)
!1257 = !DILocation(line: 242, scope: !1216)
!1258 = !DILocation(line: 160, scope: !1216)
!1259 = !DILocation(line: 164, scope: !1216)
!1260 = !DILocation(line: 260, scope: !1216)
!1261 = !DILocation(line: 36, scope: !1262)
!1262 = !DILexicalBlockFile(scope: !37, file: !1263, discriminator: 0)
!1263 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/JumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1264 = !DILocation(line: 38, scope: !1262)
!1265 = !DILocation(line: 42, scope: !1262)
!1266 = !DILocation(line: 39, scope: !1262)
!1267 = !DILocation(line: 36, scope: !1268)
!1268 = !DILexicalBlockFile(scope: !37, file: !1269, discriminator: 0)
!1269 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MoveLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1270 = !DILocation(line: 37, scope: !1268)
!1271 = !DILocation(line: 39, scope: !1268)
!1272 = !DILocation(line: 43, scope: !1268)
!1273 = !DILocation(line: 44, scope: !1268)
!1274 = !DILocation(line: 34, scope: !1275)
!1275 = !DILexicalBlockFile(scope: !37, file: !1276, discriminator: 0)
!1276 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfPosLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1277 = !DILocation(line: 35, scope: !1275)
!1278 = !DILocation(line: 36, scope: !1275)
!1279 = !DILocation(line: 37, scope: !1275)
!1280 = !DILocation(line: 43, scope: !1275)
!1281 = !DILocation(line: 45, scope: !1275)
!1282 = !DILocation(line: 61, scope: !1275)
!1283 = !DILocation(line: 66, scope: !1284)
!1284 = !DILexicalBlockFile(scope: !37, file: !1285, discriminator: 0)
!1285 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ArithmeticLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1286 = !DILocation(line: 71, scope: !1284)
!1287 = !DILocation(line: 74, scope: !1284)
!1288 = !DILocation(line: 78, scope: !1284)
!1289 = !DILocation(line: 79, scope: !1284)
!1290 = !DILocation(line: 185, scope: !1284)
!1291 = !DILocation(line: 39, scope: !1292)
!1292 = !DILexicalBlockFile(scope: !37, file: !1293, discriminator: 0)
!1293 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/NumericType.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1294 = !DILocation(line: 43, scope: !1292)
!1295 = !DILocation(line: 45, scope: !1292)
!1296 = !DILocation(line: 56, scope: !1292)
!1297 = !DILocation(line: 61, scope: !1292)
!1298 = !DILocation(line: 67, scope: !1292)
!1299 = !DILocation(line: 83, scope: !1292)
!1300 = !DILocation(line: 88, scope: !1292)
!1301 = !DILocation(line: 94, scope: !1292)
!1302 = !DILocation(line: 98, scope: !1292)
!1303 = !DILocation(line: 106, scope: !1292)
!1304 = !DILocation(line: 188, scope: !1284)
!1305 = !DILocation(line: 193, scope: !1284)
!1306 = !DILocation(line: 197, scope: !1284)
!1307 = !DILocation(line: 200, scope: !1284)
!1308 = !DILocation(line: 203, scope: !1284)
!1309 = !DILocation(line: 204, scope: !1284)
!1310 = !DILocation(line: 205, scope: !1284)
!1311 = !DILocation(line: 214, scope: !1284)
!1312 = !DILocation(line: 222, scope: !1284)
!1313 = !DILocation(line: 223, scope: !1284)
!1314 = !DILocation(line: 224, scope: !1284)
!1315 = !DILocation(line: 227, scope: !1284)
!1316 = !DILocation(line: 228, scope: !1284)
!1317 = !DILocation(line: 229, scope: !1284)
!1318 = !DILocation(line: 230, scope: !1284)
!1319 = !DILocation(line: 231, scope: !1284)
!1320 = !DILocation(line: 247, scope: !1284)
!1321 = !DILocation(line: 250, scope: !1284)
!1322 = !DILocation(line: 251, scope: !1284)
!1323 = !DILocation(line: 346, scope: !1284)
!1324 = !DILocation(line: 347, scope: !1284)
!1325 = !DILocation(line: 348, scope: !1284)
!1326 = !DILocation(line: 349, scope: !1284)
!1327 = !DILocation(line: 39, scope: !1284)
!1328 = !DILocation(line: 354, scope: !1284)
!1329 = !DILocation(line: 358, scope: !1284)
!1330 = !DILocation(line: 359, scope: !1284)
!1331 = !DILocation(line: 360, scope: !1284)
!1332 = !DILocation(line: 370, scope: !1284)
!1333 = !DILocation(line: 373, scope: !1284)
!1334 = !DILocation(line: 384, scope: !1284)
!1335 = !DILocation(line: 445, scope: !1284)
!1336 = !DILocation(line: 446, scope: !1284)
!1337 = !DILocation(line: 448, scope: !1284)
!1338 = !DILocation(line: 453, scope: !1284)
!1339 = !DILocation(line: 454, scope: !1284)
!1340 = !DILocation(line: 455, scope: !1284)
!1341 = !DILocation(line: 460, scope: !1284)
!1342 = !DILocation(line: 476, scope: !1284)
!1343 = !DILocation(line: 469, scope: !1284)
!1344 = !DILocation(line: 25, scope: !1345)
!1345 = !DILexicalBlockFile(scope: !37, file: !1346, discriminator: 0)
!1346 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggStepLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1347 = !DILocation(line: 47, scope: !1345)
!1348 = !DILocation(line: 48, scope: !1345)
!1349 = !DILocation(line: 58, scope: !1345)
!1350 = !DILocation(line: 63, scope: !1345)
!1351 = !DILocation(line: 64, scope: !1345)
!1352 = !DILocation(line: 66, scope: !1345)
!1353 = !DILocation(line: 73, scope: !1345)
!1354 = !DILocation(line: 75, scope: !1345)
!1355 = !DILocation(line: 79, scope: !1345)
!1356 = !DILocation(line: 80, scope: !1345)
!1357 = !DILocation(line: 83, scope: !1345)
!1358 = !DILocation(line: 88, scope: !1345)
!1359 = !DILocation(line: 89, scope: !1345)
!1360 = !DILocation(line: 90, scope: !1345)
!1361 = !DILocation(line: 91, scope: !1345)
!1362 = !DILocation(line: 92, scope: !1345)
!1363 = !DILocation(line: 93, scope: !1345)
!1364 = !DILocation(line: 94, scope: !1345)
!1365 = !DILocation(line: 95, scope: !1345)
!1366 = !DILocation(line: 96, scope: !1345)
!1367 = !DILocation(line: 97, scope: !1345)
!1368 = !DILocation(line: 108, scope: !1345)
!1369 = !DILocation(line: 116, scope: !1345)
!1370 = !DILocation(line: 117, scope: !1345)
!1371 = !DILocation(line: 119, scope: !1345)
!1372 = !DILocation(line: 125, scope: !1345)
!1373 = !DILocation(line: 126, scope: !1345)
!1374 = !DILocation(line: 128, scope: !1345)
!1375 = !DILocation(line: 129, scope: !1345)
!1376 = !DILocation(line: 130, scope: !1345)
!1377 = !DILocation(line: 131, scope: !1345)
!1378 = !DILocation(line: 133, scope: !1345)
!1379 = !DILocation(line: 136, scope: !1345)
!1380 = !DILocation(line: 137, scope: !1345)
!1381 = !DILocation(line: 138, scope: !1345)
!1382 = !DILocation(line: 139, scope: !1345)
!1383 = !DILocation(line: 140, scope: !1345)
!1384 = !DILocation(line: 143, scope: !1345)
!1385 = !DILocation(line: 146, scope: !1345)
!1386 = !DILocation(line: 150, scope: !1345)
!1387 = !DILocation(line: 158, scope: !1345)
!1388 = !DILocation(line: 164, scope: !1345)
!1389 = !DILocation(line: 165, scope: !1345)
!1390 = !DILocation(line: 166, scope: !1345)
!1391 = !DILocation(line: 167, scope: !1345)
!1392 = !DILocation(line: 171, scope: !1345)
!1393 = !DILocation(line: 172, scope: !1345)
!1394 = !DILocation(line: 173, scope: !1345)
!1395 = !DILocation(line: 174, scope: !1345)
!1396 = !DILocation(line: 175, scope: !1345)
!1397 = !DILocation(line: 178, scope: !1345)
!1398 = !DILocation(line: 182, scope: !1345)
!1399 = !DILocation(line: 187, scope: !1345)
!1400 = !DILocation(line: 188, scope: !1345)
!1401 = !DILocation(line: 189, scope: !1345)
!1402 = !DILocation(line: 194, scope: !1345)
!1403 = !DILocation(line: 198, scope: !1345)
!1404 = !DILocation(line: 199, scope: !1345)
!1405 = !DILocation(line: 200, scope: !1345)
!1406 = !DILocation(line: 201, scope: !1345)
!1407 = !DILocation(line: 202, scope: !1345)
!1408 = !DILocation(line: 203, scope: !1345)
!1409 = !DILocation(line: 210, scope: !1345)
!1410 = !DILocation(line: 231, scope: !1345)
!1411 = !DILocation(line: 233, scope: !1345)
!1412 = !DILocation(line: 234, scope: !1345)
!1413 = !DILocation(line: 239, scope: !1345)
!1414 = !DILocation(line: 242, scope: !1345)
!1415 = !DILocation(line: 243, scope: !1345)
!1416 = !DILocation(line: 246, scope: !1345)
!1417 = !DILocation(line: 216, scope: !1345)
!1418 = !DILocation(line: 219, scope: !1345)
!1419 = !DILocation(line: 221, scope: !1345)
!1420 = !DILocation(line: 256, scope: !1345)
!1421 = !DILocation(line: 258, scope: !1345)
!1422 = !DILocation(line: 259, scope: !1345)
!1423 = !DILocation(line: 260, scope: !1345)
!1424 = !DILocation(line: 263, scope: !1345)
!1425 = !DILocation(line: 270, scope: !1345)
!1426 = !DILocation(line: 271, scope: !1345)
!1427 = !DILocation(line: 277, scope: !1345)
!1428 = !DILocation(line: 278, scope: !1345)
!1429 = !DILocation(line: 279, scope: !1345)
!1430 = !DILocation(line: 282, scope: !1345)
!1431 = !DILocation(line: 283, scope: !1345)
!1432 = !DILocation(line: 289, scope: !1345)
!1433 = !DILocation(line: 293, scope: !1345)
!1434 = !DILocation(line: 297, scope: !1345)
!1435 = !DILocation(line: 302, scope: !1345)
!1436 = !DILocation(line: 303, scope: !1345)
!1437 = !DILocation(line: 305, scope: !1345)
!1438 = !DILocation(line: 311, scope: !1345)
!1439 = !DILocation(line: 312, scope: !1345)
!1440 = !DILocation(line: 314, scope: !1345)
!1441 = !DILocation(line: 319, scope: !1345)
!1442 = !DILocation(line: 320, scope: !1345)
!1443 = !DILocation(line: 325, scope: !1345)
!1444 = !DILocation(line: 336, scope: !1345)
!1445 = !DILocation(line: 342, scope: !1345)
!1446 = !DILocation(line: 341, scope: !1345)
!1447 = !DILocation(line: 350, scope: !1345)
!1448 = !DILocation(line: 352, scope: !1345)
!1449 = !DILocation(line: 358, scope: !1345)
!1450 = !DILocation(line: 359, scope: !1345)
!1451 = !DILocation(line: 362, scope: !1345)
!1452 = !DILocation(line: 363, scope: !1345)
!1453 = !DILocation(line: 366, scope: !1345)
!1454 = !DILocation(line: 369, scope: !1345)
!1455 = !DILocation(line: 374, scope: !1345)
!1456 = !DILocation(line: 382, scope: !1345)
!1457 = !DILocation(line: 34, scope: !1458)
!1458 = !DILexicalBlockFile(scope: !37, file: !1459, discriminator: 0)
!1459 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1460 = !DILocation(line: 35, scope: !1458)
!1461 = !DILocation(line: 40, scope: !1458)
!1462 = !DILocation(line: 41, scope: !1458)
!1463 = !DILocation(line: 36, scope: !1464)
!1464 = !DILexicalBlockFile(scope: !37, file: !1465, discriminator: 0)
!1465 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterNextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1466 = !DILocation(line: 37, scope: !1464)
!1467 = !DILocation(line: 43, scope: !1464)
!1468 = !DILocation(line: 46, scope: !1464)
!1469 = !DILocation(line: 47, scope: !1464)
!1470 = !DILocation(line: 49, scope: !1464)
!1471 = !DILocation(line: 55, scope: !1464)
!1472 = !DILocation(line: 56, scope: !1464)
!1473 = !DILocation(line: 60, scope: !1464)
!1474 = !DILocation(line: 62, scope: !1464)
!1475 = !DILocation(line: 75, scope: !1464)
!1476 = !DILocation(line: 85, scope: !1464)
!1477 = !DILocation(line: 31, scope: !1478)
!1478 = !DILexicalBlockFile(scope: !37, file: !1479, discriminator: 0)
!1479 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ReturnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1480 = !DILocation(line: 33, scope: !1478)
!1481 = !DILocation(line: 35, scope: !1478)
!1482 = !DILocation(line: 37, scope: !1478)
!1483 = !DILocation(line: 39, scope: !1478)
!1484 = !DILocation(line: 41, scope: !1478)
!1485 = !DILocation(line: 45, scope: !1478)
!1486 = !DILocation(line: 48, scope: !1478)
!1487 = !DILocation(line: 31, scope: !1488)
!1488 = !DILexicalBlockFile(scope: !37, file: !1489, discriminator: 0)
!1489 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggFinalLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1490 = !DILocation(line: 32, scope: !1488)
!1491 = !DILocation(line: 33, scope: !1488)
!1492 = !DILocation(line: 34, scope: !1488)
!1493 = !DILocation(line: 39, scope: !1488)
!1494 = !DILocation(line: 45, scope: !1488)
!1495 = !DILocation(line: 47, scope: !1488)
!1496 = !DILocation(line: 48, scope: !1488)
!1497 = !DILocation(line: 49, scope: !1488)
!1498 = !DILocation(line: 56, scope: !1488)
!1499 = !DILocation(line: 59, scope: !1488)
!1500 = !DILocation(line: 67, scope: !1488)
!1501 = !DILocation(line: 40, scope: !1502)
!1502 = !DILexicalBlockFile(scope: !37, file: !1503, discriminator: 0)
!1503 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1504 = !DILocation(line: 41, scope: !1502)
!1505 = !DILocation(line: 43, scope: !1502)
!1506 = !DILocation(line: 23, scope: !1507)
!1507 = !DILexicalBlockFile(scope: !37, file: !1508, discriminator: 0)
!1508 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ResultRowLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1509 = !DILocation(line: 28, scope: !1507)
!1510 = !DILocation(line: 52, scope: !1507)
!1511 = !DILocation(line: 56, scope: !1507)
!1512 = !DILocation(line: 62, scope: !1507)
!1513 = !DILocation(line: 63, scope: !1507)
!1514 = !DILocation(line: 64, scope: !1507)
!1515 = !DILocation(line: 65, scope: !1507)
!1516 = !DILocation(line: 71, scope: !1507)
!1517 = !DILocation(line: 75, scope: !1507)
!1518 = !DILocation(line: 76, scope: !1507)
!1519 = !DILocation(line: 80, scope: !1507)
!1520 = !DILocation(line: 82, scope: !1507)
!1521 = !DILocation(line: 83, scope: !1507)
!1522 = !DILocation(line: 84, scope: !1507)
!1523 = !DILocation(line: 85, scope: !1507)
!1524 = !DILocation(line: 91, scope: !1507)
!1525 = !DILocation(line: 95, scope: !1507)
!1526 = !DILocation(line: 99, scope: !1507)
!1527 = !DILocation(line: 106, scope: !1507)
!1528 = !DILocation(line: 111, scope: !1507)
!1529 = !DILocation(line: 112, scope: !1507)
!1530 = !DILocation(line: 113, scope: !1507)
!1531 = !DILocation(line: 121, scope: !1507)
!1532 = !DILocation(line: 127, scope: !1507)
!1533 = !DILocation(line: 128, scope: !1507)
!1534 = !DILocation(line: 26, scope: !1535)
!1535 = !DILexicalBlockFile(scope: !37, file: !1536, discriminator: 0)
!1536 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/HaltLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1537 = !DILocation(line: 29, scope: !1535)
!1538 = !DILocation(line: 25, scope: !1539)
!1539 = !DILexicalBlockFile(scope: !37, file: !1540, discriminator: 0)
!1540 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/TransactionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1541 = !DILocation(line: 48, scope: !1539)
!1542 = !DILocation(line: 52, scope: !1539)
!1543 = !DILocation(line: 53, scope: !1539)
!1544 = !DILocation(line: 54, scope: !1539)
!1545 = !DILocation(line: 55, scope: !1539)
!1546 = !DILocation(line: 57, scope: !1539)
!1547 = !DILocation(line: 58, scope: !1539)
!1548 = !DILocation(line: 60, scope: !1539)
!1549 = !DILocation(line: 65, scope: !1539)
!1550 = !DILocation(line: 69, scope: !1539)
!1551 = !DILocation(line: 71, scope: !1539)
!1552 = !DILocation(line: 143, scope: !1539)
!1553 = !DILocation(line: 152, scope: !1539)
!1554 = !DILocation(line: 153, scope: !1539)
!1555 = !DILocation(line: 156, scope: !1539)
!1556 = !DILocation(line: 157, scope: !1539)
!1557 = !DILocation(line: 158, scope: !1539)
!1558 = !DILocation(line: 159, scope: !1539)
!1559 = !DILocation(line: 161, scope: !1539)
!1560 = !DILocation(line: 162, scope: !1539)
!1561 = !DILocation(line: 181, scope: !1539)
!1562 = !DILocation(line: 189, scope: !1539)
!1563 = !DILocation(line: 42, scope: !1564)
!1564 = !DILexicalBlockFile(scope: !37, file: !1565, discriminator: 0)
!1565 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/StringLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1566 = !DILocation(line: 43, scope: !1564)
!1567 = !DILocation(line: 48, scope: !1564)
!1568 = !DILocation(line: 49, scope: !1564)
!1569 = !DILocation(line: 50, scope: !1564)
!1570 = !DILocation(line: 51, scope: !1564)
!1571 = !DILocation(line: 52, scope: !1564)
!1572 = !DILocation(line: 55, scope: !1564)
!1573 = !DILocation(line: 56, scope: !1564)
!1574 = !DILocation(line: 57, scope: !1564)
!1575 = !DILocation(line: 58, scope: !1564)
!1576 = !DILocation(line: 59, scope: !1564)
!1577 = !DILocation(line: 60, scope: !1564)
