; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%struct.sqlite3StatType = type { [10 x i64], [10 x i64] }
%struct.Sqlite3Config = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.sqlite3_mem_methods, %struct.sqlite3_mutex_methods, %struct.sqlite3_pcache_methods2, i8*, i32, i32, i32, i64, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sqlite3_mutex*, void (i8*, i32, i8*)*, i8*, i32 (i32)*, i32, i32, i32, i32 }
%struct.sqlite3_mem_methods = type { i8* (i32)*, void (i8*)*, i8* (i8*, i32)*, i32 (i8*)*, i32 (i32)*, i32 (i8*)*, void (i8*)*, i8* }
%struct.sqlite3_mutex_methods = type { i32 ()*, i32 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)* }
%struct.sqlite3_pcache_methods2 = type { i32, i8*, i32 (i8*)*, void (i8*)*, %struct.sqlite3_pcache* (i32, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, i32 (%struct.sqlite3_pcache*)*, %struct.sqlite3_pcache_page* (%struct.sqlite3_pcache*, i32, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, void (%struct.sqlite3_pcache*)*, void (%struct.sqlite3_pcache*)* }
%struct.sqlite3_pcache = type opaque
%struct.sqlite3_pcache_page = type { i8*, i8* }
%struct.sqlite3_mutex = type { %struct._opaque_pthread_mutex_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.anon.9 = type { i8, i8, i8*, double, double }
%struct.sqlite3_vfs = type { i32, i32, i32, %struct.sqlite3_vfs*, i8*, i8*, i32 (%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)*, void (%struct.sqlite3_vfs*, i32, i8*)*, void ()* (%struct.sqlite3_vfs*, i8*, i8*)*, void (%struct.sqlite3_vfs*, i8*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*, double*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i64*)*, i32 (%struct.sqlite3_vfs*, i8*, void ()*)*, void ()* (%struct.sqlite3_vfs*, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)* }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%struct.BenignMallocHooks = type { void ()*, void ()* }
%struct.Mem0Global = type { %struct.sqlite3_mutex*, i64, i64, i32 }
%struct.et_info = type { i8, i8, i8, i8, i8, i8 }
%struct.sqlite3_str = type { %struct.sqlite3*, i8*, i32, i32, i32, i8, i8 }
%struct.sqlite3 = type { %struct.sqlite3_vfs*, %struct.Vdbe*, %struct.CollSeq*, %struct.sqlite3_mutex*, %struct.Db*, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [12 x i32], i32, %struct.sqlite3InitInfo, i32, i32, i32, i32, i32, i32, i8**, i32 (i32, i8*, i8*, i8*)*, i8*, void (i8*, i8*, i64)*, i8*, i8*, i32 (i8*)*, i8*, void (i8*)*, i8*, void (i8*, i32, i8*, i8*, i64)*, %struct.Parse*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*, void (i8*, %struct.sqlite3*, i32, i8*)*, i8*, %struct.sqlite3_value*, %union.anon.8, %struct.Lookaside, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*, i32 (i8*)*, i8*, i32, %struct.Hash, %struct.Hash, %struct.BusyHandler, [2 x %struct.Db], %struct.Savepoint*, i32, i32, i32, i64, i64, i32* }
%struct.Vdbe = type <{ %struct.sqlite3*, %struct.Vdbe*, %struct.Vdbe*, %struct.Parse*, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i64, i64, %struct.sqlite3_value*, %struct.sqlite3_value**, %struct.VdbeCursor**, %struct.sqlite3_value*, %struct.VdbeOp*, i32, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, i8*, i32*, i16, i8, i8, i8, i16, i8, i32, i32, [7 x i32], [4 x i8], i8*, i8*, %struct.VdbeFrame*, %struct.VdbeFrame*, i32, i32, %struct.SubProgram*, %struct.AuxData* }>
%struct.VdbeCursor = type { i8, i8, i8, i8, i8, i8, %struct.Btree*, i64, i32*, i32, i32, %struct.VdbeCursor*, %union.anon.7, %struct.KeyInfo*, i32, i32, i16, i16, i64, i32*, i8*, i32, i32, [1 x i32] }
%struct.Btree = type { %struct.sqlite3*, %struct.BtShared*, i8, i8, i8, i8, i32, i32, i32, %struct.Btree*, %struct.Btree*, %struct.BtLock }
%struct.BtShared = type { %struct.Pager*, %struct.sqlite3*, %struct.BtCursor*, %struct.MemPage*, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i32, i32, i32, i32, i8*, void (i8*)*, %struct.sqlite3_mutex*, %struct.Bitvec*, i32, %struct.BtShared*, %struct.BtLock*, %struct.Btree*, i8* }
%struct.Pager = type { %struct.sqlite3_vfs*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Bitvec*, %struct.sqlite3_file*, %struct.sqlite3_file*, %struct.sqlite3_file*, i64, i64, %struct.sqlite3_backup*, %struct.PagerSavepoint*, i32, i32, [16 x i8], i32, i64, %struct.PgHdr*, i16, i16, i32, i32, i32, i32, i64, i8*, i8*, i32 (i8*)*, i8*, [4 x i32], void (%struct.PgHdr*)*, i32 (%struct.Pager*, i32, %struct.PgHdr**, i32)*, i8*, %struct.PCache*, %struct.Wal*, i8* }
%struct.sqlite3_backup = type { %struct.sqlite3*, %struct.Btree*, i32, i32, i32, %struct.sqlite3*, %struct.Btree*, i32, i32, i32, i32, %struct.sqlite3_backup* }
%struct.PagerSavepoint = type { i64, i64, %struct.Bitvec*, i32, i32, [4 x i32] }
%struct.PgHdr = type { %struct.sqlite3_pcache_page*, i8*, i8*, %struct.PCache*, %struct.PgHdr*, %struct.Pager*, i32, i16, i16, %struct.PgHdr*, %struct.PgHdr* }
%struct.PCache = type { %struct.PgHdr*, %struct.PgHdr*, %struct.PgHdr*, i32, i32, i32, i32, i32, i8, i8, i32 (i8*, %struct.PgHdr*)*, i8*, %struct.sqlite3_pcache* }
%struct.Wal = type { %struct.sqlite3_vfs*, %struct.sqlite3_file*, %struct.sqlite3_file*, i32, i64, i32, i32, i32**, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.WalIndexHdr, i32, i32, i8*, i32 }
%struct.WalIndexHdr = type { i32, i32, i32, i8, i8, i16, i32, i32, [2 x i32], [2 x i32], [2 x i32] }
%struct.BtCursor = type { i8, i8, i8, i8, i32, %struct.Btree*, i32*, i8*, %struct.BtShared*, %struct.BtCursor*, %struct.CellInfo, i64, i32, i8, i8, i16, [19 x i16], %struct.KeyInfo*, %struct.MemPage*, [19 x %struct.MemPage*] }
%struct.CellInfo = type { i64, i8*, i32, i16, i16 }
%struct.MemPage = type { i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i32, i16, i16, [4 x i16], [4 x i8*], %struct.BtShared*, i8*, i8*, i8*, i8*, %struct.PgHdr*, i16 (%struct.MemPage*, i8*)*, void (%struct.MemPage*, i8*, %struct.CellInfo*)* }
%struct.Bitvec = type { i32, i32, i32, %union.anon.10 }
%union.anon.10 = type { [62 x %struct.Bitvec*] }
%struct.BtLock = type { %struct.Btree*, i32, i8, %struct.BtLock* }
%union.anon.7 = type { %struct.BtCursor* }
%struct.KeyInfo = type { i32, i8, i16, i16, %struct.sqlite3*, i8*, [1 x %struct.CollSeq*] }
%struct.VdbeOp = type { i8, i8, i16, i32, i32, i32, %union.p4union }
%union.p4union = type { i8* }
%struct.VdbeFrame = type { %struct.Vdbe*, %struct.VdbeFrame*, %struct.VdbeOp*, i64*, %struct.sqlite3_value*, %struct.VdbeCursor**, i8*, i8*, i64, %struct.AuxData*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SubProgram = type { %struct.VdbeOp*, i32, i32, i32, i8*, i8*, %struct.SubProgram* }
%struct.AuxData = type { i32, i32, i8*, void (i8*)*, %struct.AuxData* }
%struct.CollSeq = type { i8*, i8, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)* }
%struct.Db = type { i8*, %struct.Btree*, i8, i8, %struct.Schema* }
%struct.Schema = type { i32, i32, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Table*, i8, i8, i16, i32 }
%struct.Table = type { i8*, %struct.Column*, %struct.Index*, %struct.Select*, %struct.FKey*, i8*, %struct.ExprList*, i32, i32, i32, i16, i16, i16, i16, i16, i8, i32, %struct.Trigger*, %struct.Schema*, %struct.Table* }
%struct.Column = type { i8*, %struct.Expr*, i8*, i8, i8, i8, i16 }
%struct.Expr = type { i8, i8, i8, i32, %union.anon, %struct.Expr*, %struct.Expr*, %union.anon.0, i32, i32, i16, i16, i16, %struct.AggInfo*, %union.anon.3 }
%union.anon = type { i8* }
%union.anon.0 = type { %struct.ExprList* }
%struct.AggInfo = type { i8, i8, i32, i32, i32, i32, i32, %struct.ExprList*, %struct.AggInfo_col*, i32, i32, %struct.AggInfo_func*, i32 }
%struct.AggInfo_col = type { %struct.Table*, i32, i32, i32, i32, %struct.Expr* }
%struct.AggInfo_func = type { %struct.Expr*, %struct.FuncDef*, i32, i32 }
%struct.FuncDef = type { i8, i32, i8*, %struct.FuncDef*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, i8*, %union.anon.2 }
%struct.sqlite3_context = type { %struct.sqlite3_value*, %struct.FuncDef*, %struct.sqlite3_value*, %struct.Vdbe*, i32, i32, i8, i8, [1 x %struct.sqlite3_value*] }
%union.anon.2 = type { %struct.FuncDef* }
%union.anon.3 = type { %struct.Table* }
%struct.Index = type <{ i8*, i16*, i16*, %struct.Table*, i8*, %struct.Index*, %struct.Schema*, i8*, i8**, %struct.Expr*, %struct.ExprList*, i32, i16, i16, i16, i8, i16, [3 x i8], i64 }>
%struct.Select = type { i8, i16, i32, i32, i32, i32, [2 x i32], %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Select*, %struct.Select*, %struct.Expr*, %struct.With*, %struct.Window*, %struct.Window* }
%struct.SrcList = type { i32, i32, [1 x %struct.SrcList_item] }
%struct.SrcList_item = type { %struct.Schema*, i8*, i8*, i8*, %struct.Table*, %struct.Select*, i32, i32, i32, %struct.anon, i32, %struct.Expr*, %struct.IdList*, i64, %union.anon.1, %struct.Index* }
%struct.anon = type { i8, i8, [2 x i8] }
%struct.IdList = type { %struct.IdList_item*, i32 }
%struct.IdList_item = type { i8*, i32 }
%union.anon.1 = type { i8* }
%struct.With = type { i32, %struct.With*, [1 x %struct.Cte] }
%struct.Cte = type { i8*, %struct.ExprList*, %struct.Select*, i8* }
%struct.Window = type { i8*, i8*, %struct.ExprList*, %struct.ExprList*, i8, i8, i8, i8, i8, %struct.Expr*, %struct.Expr*, %struct.Window**, %struct.Window*, %struct.Expr*, %struct.FuncDef*, i32, i32, i32, i32, i32, i32, %struct.Expr*, i32, i32, i32, i32, i32, i8 }
%struct.FKey = type { %struct.Table*, %struct.FKey*, i8*, %struct.FKey*, %struct.FKey*, i32, i8, [2 x i8], [2 x %struct.Trigger*], [1 x %struct.sColMap] }
%struct.sColMap = type { i32, i8* }
%struct.ExprList = type { i32, [1 x %struct.ExprList_item] }
%struct.ExprList_item = type { %struct.Expr*, i8*, i8, i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.Trigger = type { i8*, i8*, i8, i8, %struct.Expr*, %struct.IdList*, %struct.Schema*, %struct.Schema*, %struct.TriggerStep*, %struct.Trigger* }
%struct.TriggerStep = type { i8, i8, %struct.Trigger*, %struct.Select*, i8*, %struct.Expr*, %struct.ExprList*, %struct.IdList*, %struct.Upsert*, i8*, %struct.TriggerStep*, %struct.TriggerStep* }
%struct.Upsert = type { %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.Index*, %struct.SrcList*, i32, i32, i32 }
%struct.sqlite3InitInfo = type { i32, i8, i8, i8, i8** }
%struct.Parse = type { %struct.sqlite3*, i8*, %struct.Vdbe*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.ExprList*, %struct.Token, i32, i32, i32, i32, i32, i32, i32, %struct.TableLock*, %struct.AutoincInfo*, %struct.Parse*, %struct.Table*, %struct.Parse*, i32, i32, i32, i32, i8, i8, i8, [8 x i32], %struct.Token, %struct.Token, i16, i8, i8, i8, i32, i32, i32*, %struct.Vdbe*, i8*, %struct.Table*, %struct.Index*, %struct.Trigger*, i8*, %struct.Table*, %struct.TriggerPrg*, %struct.With*, %struct.With*, %struct.RenameToken* }
%struct.TableLock = type { i32, i32, i8, i8* }
%struct.AutoincInfo = type { %struct.AutoincInfo*, %struct.Table*, i32, i32 }
%struct.Token = type { i8*, i32 }
%struct.TriggerPrg = type { %struct.Trigger*, %struct.TriggerPrg*, %struct.SubProgram*, i32, [2 x i32] }
%struct.RenameToken = type { i8*, %struct.Token, %struct.RenameToken* }
%struct.sqlite3_value = type { %union.MemValue, i16, i8, i8, i32, i8*, i8*, i32, i32, %struct.sqlite3*, void (i8*)* }
%union.MemValue = type { double }
%union.anon.8 = type { double }
%struct.Lookaside = type { i32, i16, i16, i8, i32, [3 x i32], %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, i8*, i8*, i8* }
%struct.LookasideSlot = type { %struct.LookasideSlot* }
%struct.Hash = type { i32, i32, %struct.HashElem*, %struct._ht* }
%struct.HashElem = type { %struct.HashElem*, %struct.HashElem*, i8*, i8* }
%struct._ht = type { i32, %struct.HashElem* }
%struct.BusyHandler = type { i32 (i8*, i32)*, i8*, i32, i8 }
%struct.Savepoint = type { i8*, i64, i64, %struct.Savepoint* }
%struct.sqlite3PrngType = type { i8, i8, i8, [256 x i8] }
%struct.unix_syscall = type { i8*, void ()*, void ()* }
%struct.unixInodeInfo = type { %struct.unixFileId, %struct.sqlite3_mutex*, i32, i32, i8, i8, %struct.UnixUnusedFd*, i32, %struct.unixShmNode*, %struct.unixInodeInfo*, %struct.unixInodeInfo*, i64 }
%struct.unixFileId = type { i32, i64 }
%struct.UnixUnusedFd = type { i32, i32, %struct.UnixUnusedFd* }
%struct.unixShmNode = type { %struct.unixInodeInfo*, %struct.sqlite3_mutex*, i8*, i32, i32, i16, i8, i8, i8**, i32, %struct.unixShm* }
%struct.unixShm = type { %struct.unixShmNode*, %struct.unixShm*, i8, i8, i16, i16 }
%struct.unixFile = type { %struct.sqlite3_io_methods*, %struct.sqlite3_vfs*, %struct.unixInodeInfo*, i32, i8, i16, i32, i8*, %struct.UnixUnusedFd*, i8*, %struct.unixShm*, i32, i32, i64, i64, i64, i8*, i32, i32, i32, i32 }
%struct.Mapping = type { i8*, %struct.sqlite3_io_methods* }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.PCacheGlobal = type { %struct.PGroup, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.sqlite3_mutex*, %struct.PgFreeslot*, i32, i32 }
%struct.PGroup = type { %struct.sqlite3_mutex*, i32, i32, i32, i32, %struct.PgHdr1 }
%struct.PgHdr1 = type { %struct.sqlite3_pcache_page, i32, i16, i16, %struct.PgHdr1*, %struct.PCache1*, %struct.PgHdr1*, %struct.PgHdr1* }
%struct.PCache1 = type { %struct.PGroup*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PgHdr1**, %struct.PgHdr1*, i8* }
%struct.PgFreeslot = type { %struct.PgFreeslot* }
%struct.compareInfo = type { i8, i8, i8, i8 }
%struct.sqlite3AutoExtList = type { i32, void ()** }
%struct.PragmaName = type { i8*, i8, i8, i8, i8, i64 }
%struct.SelectDest = type { i8, i32, i32, i32, i8*, %struct.ExprList* }
%struct.FuncDefHash = type { [23 x %struct.FuncDef*] }
%struct.anon.22 = type { i32, i32 }
%struct._malloc_zone_t = type { i8*, i8*, i64 (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i64)*, i8* (%struct._malloc_zone_t*, i64, i64)*, i8* (%struct._malloc_zone_t*, i64)*, void (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i8*, i64)*, void (%struct._malloc_zone_t*)*, i8*, i32 (%struct._malloc_zone_t*, i64, i8**, i32)*, void (%struct._malloc_zone_t*, i8**, i32)*, %struct.malloc_introspection_t*, i32, i8* (%struct._malloc_zone_t*, i64, i64)*, void (%struct._malloc_zone_t*, i8*, i64)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*, i8*)* }
%struct.malloc_introspection_t = type { i32 (i32, i8*, i32, i64, i32 (i32, i64, i64, i8**)*, void (i32, i8*, i32, %struct.vm_range_t*, i32)*)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i32)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, %struct.malloc_statistics_t*)*, i32 (%struct._malloc_zone_t*)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*, void (i8*, i8*)*)*, void (%struct._malloc_zone_t*)*, void (i32, i32, i64, i32 (i32, i64, i64, i8**)*, void (i8*, ...)*)*, void (i32, i64, i32 (i32, i64, i64, i8**)*, %struct.malloc_statistics_t*)* }
%struct.vm_range_t = type { i64, i64 }
%struct.malloc_statistics_t = type { i32, i64, i64, i64 }
%struct.sqlite3_api_routines = type { i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, double)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*, i8*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, %struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i32 (i8*, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, double (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i64 (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, %struct.sqlite3_value* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3*, i32 (i8*)*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*)*, i32 (%struct.sqlite3_stmt*)*, %struct.sqlite3* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*)*, i32 (i32)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, void (i8*)*, void (i8**)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3*, i8*, i8***, i32*, i32*, i8**)*, i32 ()*, void (%struct.sqlite3*)*, i64 (%struct.sqlite3*)*, i8* ()*, i32 ()*, i8* (i32)*, i8* (i8*, ...)*, i32 (i8*, %struct.sqlite3**)*, i32 (i8*, %struct.sqlite3**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i8* (%struct.sqlite3*, void (i8*, i8*, i64)*, i8*)*, void (%struct.sqlite3*, i32, i32 (i8*)*, i8*)*, i8* (i8*, i32)*, i32 (%struct.sqlite3_stmt*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, double)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i64)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, %struct.sqlite3_value*)*, i8* (%struct.sqlite3*, void (i8*)*, i8*)*, i32 (%struct.sqlite3*, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*)*, void (%struct.sqlite3_context*, i32, i8*, void (i8*)*)*, i8* (i32, i8*, i8*, ...)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i8**, i8**, i32*, i32*, i32*)*, void ()*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, void (i8*, i8*)*, i8*)*, i32 (%struct.sqlite3_stmt*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3*, void (i8*, i32, i8*, i8*, i64)*, i8*)*, i8* (%struct.sqlite3_context*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, double (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i64 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob**)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*)*, i64 (i32)*, i64 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (i8*, %struct.sqlite3**, i32, i8*)*, i32 (i32)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, i32 (i32)*, void (i32)*, %struct.sqlite3_vfs* (i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*)*, i32 ()*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, ...)*, void (i32, i8*)*, %struct.sqlite3* (%struct.sqlite3_context*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i32, i32)*, %struct.sqlite3_stmt* (%struct.sqlite3*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*)*, i32 (i32, i32*, i32*, i32)*, i32 (%struct.sqlite3_backup*)*, %struct.sqlite3_backup* (%struct.sqlite3*, i8*, %struct.sqlite3*, i8*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*, i32)*, i8* (i32)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i32, ...)*, %struct.sqlite3_mutex* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32*, i32*, i32)*, i32 (%struct.sqlite3*)*, void (i32, i8*, ...)*, i64 (i64)*, i8* ()*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*, void (i8**, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i8*)*, i8* (%struct.sqlite3*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*)*, i32 (%struct.sqlite3_blob*, i64)*, i32 (%struct.sqlite3*, i32, ...)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*)*, i8* (i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i8*, i64)*, i8* (i8*, i8*)*, i8* (i32, i8*, i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32, i32*, i32*)*, i32 (void ()*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8)*, i32 (void ()*)*, i32 (%struct.sqlite3*, i8*, i8*, i8**)*, i8* (i64)*, i64 (i8*)*, i8* (i8*, i64)*, void ()*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8)*, i32 (i8*, i8*)*, %struct.sqlite3_value* (%struct.sqlite3_value*)*, void (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_context*, i64)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_value*)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, i64*, i64*, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32 (i32, i8*, i8*, i8*)*, i8*)*, i8* (%struct.sqlite3_stmt*)*, void (%struct.sqlite3*, i64)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i8*, void (i8*)*)*, i8* (%struct.sqlite3_value*, i8*)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_index_info*, i32)*, i32 ()*, i32 (i32, i8**, i32*)*, i32 (i8*, i32)*, %struct.sqlite3_str* (%struct.sqlite3*)*, i8* (%struct.sqlite3_str*)*, void (%struct.sqlite3_str*, i8*, ...)*, void (%struct.sqlite3_str*, i8*, %struct.__va_list_tag*)*, void (%struct.sqlite3_str*, i8*, i32)*, void (%struct.sqlite3_str*, i8*)*, void (%struct.sqlite3_str*, i32, i8)*, void (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i8* (%struct.sqlite3_str*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*)*, i8* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i8**)*, i64 (i64)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*, i8*, i8*, i32, i8**)*, void (i8*)* }
%struct.sqlite3_stmt = type opaque
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %struct.sqlite3_index_constraint*, i32, %struct.sqlite3_index_orderby*, %struct.sqlite3_index_constraint_usage*, i32, i8*, i32, i32, double, i64, i32, i64 }
%struct.sqlite3_index_constraint = type { i32, i8, i8, i32 }
%struct.sqlite3_index_orderby = type { i32, i8 }
%struct.sqlite3_index_constraint_usage = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sqlite3_blob = type opaque
%struct.WindowUpdate = type { i8*, i32, i32, i32 }
%struct.anon.23 = type { i8, i8, i8 }
%struct.EncName = type { i8*, i8 }
%struct.OpenMode = type { i8*, i32 }
%struct.RowSet = type { %struct.RowSetChunk*, %struct.sqlite3*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, i16, i16, i32 }
%struct.RowSetChunk = type { %struct.RowSetChunk*, [42 x %struct.RowSetEntry] }
%struct.RowSetEntry = type { i64, %struct.RowSetEntry*, %struct.RowSetEntry* }
%struct.UnpackedRecord = type { %struct.KeyInfo*, %struct.sqlite3_value*, i16, i8, i8, i8, i8, i8 }
%struct.BtreePayload = type { i8*, i64, i8*, %struct.sqlite3_value*, i16, i32, i32 }
%struct.DateTime = type { i64, i32, i32, i32, i32, i32, i32, double, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct.PrintfArguments = type { i32, i32, %struct.sqlite3_value** }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.flock = type { i64, i64, i32, i16, i16 }
%struct.timeval = type { i64, i32 }
%struct.statfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.fsid, i32, i32, i32, i32, [16 x i8], [1024 x i8], [1024 x i8], i32, [7 x i32] }
%struct.fsid = type { [2 x i32] }
%struct.WalCkptInfo = type { i32, [5 x i32], [8 x i8], i32, i32 }
%struct.WalHashLoc = type { i16*, i32*, i32 }
%struct.WalIterator = type { i32, i32, [1 x %struct.WalSegment] }
%struct.WalSegment = type { i32, i16*, i32*, i32, i32 }
%struct.WalWriter = type { %struct.Wal*, %struct.sqlite3_file*, i64, i32, i32 }
%struct.CellArray = type { i32, %struct.MemPage*, i8**, i16*, [6 x i8*], [6 x i32] }
%struct.IntegrityCk = type { %struct.BtShared*, %struct.Pager*, i8*, i32, i32, i32, i32, i8*, i32, i32, %struct.sqlite3_str, i32*, %struct.sqlite3* }
%struct.ValueNewStat4Ctx = type { %struct.Parse*, %struct.Index*, %struct.UnpackedRecord**, i32 }
%struct.ReusableSpace = type { i8*, i64, i64 }
%struct.Incrblob = type { i32, i32, i16, %struct.BtCursor*, %struct.sqlite3_stmt*, %struct.sqlite3*, i8*, %struct.Table* }
%struct.PmaReader = type { i64, i64, i32, i32, %struct.sqlite3_file*, i8*, i8*, i8*, i32, i8*, %struct.IncrMerger* }
%struct.IncrMerger = type { %struct.SortSubtask*, %struct.MergeEngine*, i64, i32, i32, i32, [2 x %struct.SorterFile] }
%struct.SortSubtask = type { %struct.SQLiteThread*, i32, %struct.VdbeSorter*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)*, %struct.SorterFile, %struct.SorterFile }
%struct.SQLiteThread = type { %struct._opaque_pthread_t*, i32, i8*, i8* (i8*)*, i8* }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.VdbeSorter = type { i32, i32, i32, i32, %struct.PmaReader*, %struct.MergeEngine*, %struct.sqlite3*, %struct.KeyInfo*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32, i8, i8, i8, i8, i8, [1 x %struct.SortSubtask] }
%struct.SorterList = type { %struct.SorterRecord*, i8*, i32 }
%struct.SorterRecord = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.SorterRecord* }
%struct.SorterFile = type { %struct.sqlite3_file*, i64 }
%struct.MergeEngine = type { i32, %struct.SortSubtask*, i32*, %struct.PmaReader* }
%struct.PmaWriter = type { i32, i8*, i32, i32, i32, i64, %struct.sqlite3_file* }
%struct.MemJournal = type { %struct.sqlite3_io_methods*, i32, i32, i32, %struct.FileChunk*, %struct.FilePoint, %struct.FilePoint, i32, %struct.sqlite3_vfs*, i8* }
%struct.FileChunk = type { %struct.FileChunk*, [8 x i8] }
%struct.FilePoint = type { i64, %struct.FileChunk* }
%struct.Walker = type { %struct.Parse*, i32 (%struct.Walker*, %struct.Expr*)*, i32 (%struct.Walker*, %struct.Select*)*, void (%struct.Walker*, %struct.Select*)*, i32, i16, %union.anon.12 }
%union.anon.12 = type { %struct.NameContext* }
%struct.NameContext = type { %struct.Parse*, %struct.SrcList*, %union.anon.13, %struct.NameContext*, i32, i32, i32, %struct.Select* }
%union.anon.13 = type { %struct.ExprList* }
%struct.RenameCtx = type { %struct.RenameToken*, i32, i32, %struct.Table*, i8* }
%struct.WhereInfo = type { %struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.ExprList*, %struct.Expr*, [2 x i32], i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i16, i32, %struct.WhereLoop*, %struct.WhereExprMod*, i64, %struct.WhereClause, %struct.WhereMaskSet, [1 x %struct.WhereLevel] }
%struct.WhereLoop = type { i64, i64, i8, i8, i16, i16, i16, %union.anon.15, i32, i16, i16, i16, %struct.WhereTerm**, %struct.WhereLoop*, [3 x %struct.WhereTerm*] }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i16, i16, i16, i16, %struct.Index* }
%struct.WhereTerm = type { %struct.Expr*, %struct.WhereClause*, i16, i16, i16, i8, i8, i32, i32, i32, %union.anon.18, i64, i64 }
%union.anon.18 = type { %struct.WhereOrInfo* }
%struct.WhereOrInfo = type { %struct.WhereClause, i64 }
%struct.WhereExprMod = type { %struct.WhereExprMod*, %struct.Expr*, %struct.Expr }
%struct.WhereClause = type { %struct.WhereInfo*, %struct.WhereClause*, i8, i8, i32, i32, %struct.WhereTerm*, [8 x %struct.WhereTerm] }
%struct.WhereMaskSet = type { i32, i32, [64 x i32] }
%struct.WhereLevel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %union.anon.19, %struct.WhereLoop*, i64 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32, %struct.InLoop* }
%struct.InLoop = type { i32, i32, i32, i32, i8 }
%struct.InitData = type { %struct.sqlite3*, i8**, i32, i32, i32, i32 }
%struct.RowLoadInfo = type { i32, i8 }
%struct.SortCtx = type { %struct.ExprList*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.RowLoadInfo* }
%struct.DistinctCtx = type { i8, i8, i32, i32 }
%struct.SubstContext = type { %struct.Parse*, i32, i32, i32, %struct.ExprList* }
%struct.WhereConst = type { %struct.Parse*, i32, i32, %struct.Expr** }
%struct.IdxExprTrans = type { %struct.Expr*, i32, i32, i32, i32, %struct.WhereInfo*, %struct.sqlite3* }
%struct.WhereAndInfo = type { %struct.WhereClause }
%struct.WhereOrSet = type { i16, [3 x %struct.WhereOrCost] }
%struct.WhereOrCost = type { i64, i16, i16 }
%struct.WhereScan = type { %struct.WhereClause*, %struct.WhereClause*, i8*, %struct.Expr*, i8, i8, i8, i32, i32, [11 x i32], [11 x i16] }
%struct.WhereLoopBuilder = type { %struct.WhereInfo*, %struct.WhereClause*, %struct.ExprList*, %struct.WhereLoop*, %struct.WhereOrSet*, i8, i8, i32 }
%struct.WherePath = type { i64, i64, i16, i16, i16, i8, %struct.WhereLoop** }
%struct.WindowCodeArg = type { %struct.Parse*, %struct.Window*, %struct.Vdbe*, i32, i32, i32, i32, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg }
%struct.WindowCsrAndReg = type { i32, i32 }
%struct.yyParser = type { %struct.yyStackEntry*, %struct.Parse*, [100 x %struct.yyStackEntry], %struct.yyStackEntry* }
%struct.yyStackEntry = type { i16, i16, %union.YYMINORTYPE }
%union.YYMINORTYPE = type { %struct.Token }
%struct.FuncDestructor = type { i32, void (i8*)*, i8* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }
%struct.DbFixer = type { %struct.Parse*, %struct.Schema*, i8, i8*, i8*, %struct.Token* }

@sqlite3_version = constant [7 x i8] c"3.32.0\00", align 1
@sqlite3Stat = local_unnamed_addr global %struct.sqlite3StatType zeroinitializer, align 8
@statMutex = local_unnamed_addr constant [10 x i8] c"\00\01\01\00\00\00\00\01\00\00", align 1
@sqlite3Config = external dso_local global %struct.Sqlite3Config, align 8
@getDigits.aMx = internal unnamed_addr constant [6 x i16] [i16 12, i16 14, i16 24, i16 31, i16 59, i16 9999], align 2
@sqlite3CtypeMap = internal constant [256 x i8] calign 16
@.str = private unnamed_addr constant [8 x i8] c"20b:20e\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"20c:20e\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"20e\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"40f-21a-21d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"local time unavailable\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@aXformType = local_unnamed_addr constant [6 x %struct.anon.9] [%struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), double 0x425B0625EAB00000, double 1.000000e+03 }, %struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double 0x41FCD35BA5000000, double 6.000000e+04 }, %struct.anon.9 { i8 0, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), double 0x419EBF50B0000000, double 3.600000e+06 }, %struct.anon.9 { i8 0, i8 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), double 0x41547F8B40000000, double 8.640000e+07 }, %struct.anon.9 { i8 1, i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), double 1.765460e+05, double 2.592000e+09 }, %struct.anon.9 { i8 2, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), double 1.471300e+04, double 3.153600e+10 }], align 16
@sqlite3UpperToLower = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@.str.12 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"unixepoch\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"weekday \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"start of \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"%06.3f\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"%.16g\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@vfsList = local_unnamed_addr global %struct.sqlite3_vfs* null, align 8
@sqlite3Hooks = local_unnamed_addr global %struct.BenignMallocHooks zeroinitializer, align 8
@pthreadMutexAlloc.staticMutexes = internal global [12 x %struct.sqlite3_mutex] [%struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }], align 16
@mem0 = local_unnamed_addr global %struct.Mem0Global zeroinitializer, align 8
@aDigits = local_unnamed_addr constant [33 x i8] c"0123456789ABCDEF0123456789abcdef\00", align 16
@aPrefix = local_unnamed_addr constant [7 x i8] c"-x0\00X0\00", align 1
@fmtinfo = local_unnamed_addr constant [23 x %struct.et_info] [%struct.et_info { i8 100, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 115, i8 0, i8 4, i8 5, i8 0, i8 0 }, %struct.et_info { i8 103, i8 0, i8 1, i8 3, i8 30, i8 0 }, %struct.et_info { i8 122, i8 0, i8 4, i8 6, i8 0, i8 0 }, %struct.et_info { i8 113, i8 0, i8 4, i8 9, i8 0, i8 0 }, %struct.et_info { i8 81, i8 0, i8 4, i8 10, i8 0, i8 0 }, %struct.et_info { i8 119, i8 0, i8 4, i8 14, i8 0, i8 0 }, %struct.et_info { i8 99, i8 0, i8 0, i8 8, i8 0, i8 0 }, %struct.et_info { i8 111, i8 8, i8 0, i8 0, i8 0, i8 2 }, %struct.et_info { i8 117, i8 10, i8 0, i8 16, i8 0, i8 0 }, %struct.et_info { i8 120, i8 16, i8 0, i8 0, i8 16, i8 1 }, %struct.et_info { i8 88, i8 16, i8 0, i8 0, i8 0, i8 4 }, %struct.et_info { i8 102, i8 0, i8 1, i8 1, i8 0, i8 0 }, %struct.et_info { i8 101, i8 0, i8 1, i8 2, i8 30, i8 0 }, %struct.et_info { i8 69, i8 0, i8 1, i8 2, i8 14, i8 0 }, %struct.et_info { i8 71, i8 0, i8 1, i8 3, i8 14, i8 0 }, %struct.et_info { i8 105, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 110, i8 0, i8 0, i8 4, i8 0, i8 0 }, %struct.et_info { i8 37, i8 0, i8 0, i8 7, i8 0, i8 0 }, %struct.et_info { i8 112, i8 16, i8 0, i8 13, i8 0, i8 1 }, %struct.et_info { i8 84, i8 0, i8 0, i8 11, i8 0, i8 0 }, %struct.et_info { i8 83, i8 0, i8 0, i8 12, i8 0, i8 0 }, %struct.et_info { i8 114, i8 10, i8 1, i8 15, i8 0, i8 0 }], align 16
@arRound = local_unnamed_addr constant [10 x double] [double 5.000000e-01, double 5.000000e-02, double 5.000000e-03, double 5.000000e-04, double 5.000000e-05, double 5.000000e-06, double 5.000000e-07, double 5.000000e-08, double 5.000000e-09, double 5.000000e-10], align 16
@.str.26 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@sqlite3_str_vappendf.zOrd = internal unnamed_addr constant [9 x i8] c"thstndrd\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@sqlite3OomStr = internal global %struct.sqlite3_str { %struct.sqlite3* null, i8* null, i32 0, i32 0, i32 0, i8 7, i8 0 }, align 8
@sqlite3Prng = local_unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"922337203685477580\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"API call with %s database connection pointer\00", align 1
@findElementWithHash.nullElement = internal global %struct.HashElem zeroinitializer, align 8
@randomnessPid = global i32 0, align 4
@.str.35 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"pread64\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"pwrite64\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"fallocate\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"openDirectory\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"mremap\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@aSyscall = external local_unnamed_addr global [29 x %struct.unix_syscall], align 16
@.str.64 = private unnamed_addr constant [43 x i8] c"attempt to open \22%s\22 as file descriptor %d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@unixBigLock = local_unnamed_addr global %struct.sqlite3_mutex* null, align 8
@inodeList = local_unnamed_addr global %struct.unixInodeInfo* null, align 8
@.str.66 = private unnamed_addr constant [31 x i8] c"os_unix.c:%d: (%d) %s(%s) - %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"cannot fstat db file %s\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"file unlinked while open: %s\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"multiple links to file: %s\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"file renamed while open: %s\00", align 1
@sqlite3PendingByte = internal unnamed_addr global i32 1073741824, align 4
@.str.72 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"full_fsync\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s-shm\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"readonly_shm\00", align 1
@posixIoMethods = external constant %struct.sqlite3_io_methods, align 8
@posixIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nolockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@dotlockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@dotlockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@flockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@flockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@afpIoMethods = external constant %struct.sqlite3_io_methods, align 8
@afpIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@proxyIoMethods = external constant %struct.sqlite3_io_methods, align 8
@proxyIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nfsIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nfsIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@autolockIoFinderImpl.aMap = internal unnamed_addr constant [6 x %struct.Mapping] [%struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct.sqlite3_io_methods* @nolockIoMethods }, %struct.Mapping zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [4 x i8] c"hfs\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"ufs\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"afpfs\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"smbfs\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"webdav\00", align 1
@autolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"psow\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"unix-excl\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s.lock\00", align 1
@unixTempFileDir.azDirs = internal unnamed_addr global [6 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [9 x i8] c"/var/tmp\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@sqlite3_temp_directory = local_unnamed_addr global i8* null, align 8
@.str.88 = private unnamed_addr constant [14 x i8] c"SQLITE_TMPDIR\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"%s/etilqs_%llx%c\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"modeof\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"msdos\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exfat\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"SQLITE_FORCE_PROXY_LOCKING\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c":auto:\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sqliteplocks\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@__const.proxyGetHostID.timeout = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.101 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"path error (len %d)\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"read error (len %d)\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"create failed (%d)\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"write failed (%d)\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"rename failed (%d)\00", align 1
@__stderrp = external local_unnamed_addr global %struct.__sFILE*, align 8
@.str.107 = private unnamed_addr constant [24 x i8] c"broke stale lock on %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"failed to break stale lock on %s, %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"-conch\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c":auto: (not held)\00", align 1
@sqlite3_os_init.aVfs = external dso_local global [9 x %struct.sqlite3_vfs], align 16
@.str.111 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"unix-none\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"unix-dotfile\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"unix-posix\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"unix-flock\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"unix-afp\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"unix-nfs\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"unix-proxy\00", align 1
@pcache1_g = global %struct.PCacheGlobal zeroinitializer, align 8
@aJournalMagic = constant [8 x i8] c"\D9\D5\05\F9 \A1c\D7", align 1
@zeroJournalHdr.zeroHdr = internal constant [28 x i8] zeroinitializer, align 16
@.str.119 = private unnamed_addr constant [27 x i8] c"recovered %d pages from %s\00", align 1
@syncJournal.zerobyte = internal constant i8 0, align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"recovered %d frames from WAL file %s\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"cannot limit WAL size: %s\00", align 1
@zMagicHeader = constant [16 x i8] c"SQLite format 3\00", align 16
@sqlite3SharedCacheList = internal unnamed_addr global %struct.BtShared* null, align 8
@.str.122 = private unnamed_addr constant [4 x i8] c"@  \00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"invalid page number %d\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"2nd reference to page %d\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Failed to read ptrmap key=%d\00", align 1
@.str.127 = private unnamed_addr constant [54 x i8] c"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"failed to get page %d\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"freelist leaf count too big on page %d\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%s is %d but should be %d\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.132 = private unnamed_addr constant [21 x i8] c"overflow list length\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"Page %d: \00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"unable to get the page. error code=%d\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"btreeInitPage() returns error code %d\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"free space corruption\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"On tree page %d cell %d: \00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"On page %d at right child: \00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Offset %d out of range %d..%d\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"Extends off end of page\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"Rowid %lld out of order\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Child page depth differs\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Multiple uses for byte %u of page %d\00", align 1
@.str.144 = private unnamed_addr constant [52 x i8] c"Fragmentation of %d bytes reported as %d on page %d\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"unknown database %s\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"destination database is in use\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"source and destination must be distinct\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"%!.15g\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"k(%d\00", align 1
@.str.152 = private constant [7 x i8] c"BINARY\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c",%s%s%s\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"N.\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c")\00", align 1
@displayP4.encnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0)], align 16
@.str.157 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"16LE\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"16BE\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"%.18s-%s\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"(blob)\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"%s-mjXXXXXX9XXz%c%c\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"MJ delete: %s\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"MJ collide: %s\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"-mj%06X9%02X\00", align 1
@sqlite3SmallTypeSizes = local_unnamed_addr constant [128 x i8] c"\00\01\02\03\04\06\08\08\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12\13\13\14\14\15\15\16\16\17\17\18\18\19\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !!\22\22##$$%%&&''(())**++,,--..//00112233445566778899", align 16
@.str.172 = private unnamed_addr constant [45 x i8] c"API called with finalized prepared statement\00", align 1
@.str.173 = private unnamed_addr constant [40 x i8] c"API called with NULL prepared statement\00", align 1
@sqlite3_value_type.aType = internal unnamed_addr constant [64 x i8] c"\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\02\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05\04\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05", align 16
@.str.174 = private unnamed_addr constant [23 x i8] c"string or blob too big\00", align 1
@columnNullValue.nullMem = internal constant %struct.sqlite3_value { %union.MemValue zeroinitializer, i16 1, i8 0, i8 0, i32 0, i8* null, i8* null, i32 0, i32 0, %struct.sqlite3* null, void (i8*)* null }, align 8
@.str.175 = private unnamed_addr constant [40 x i8] c"bind on a busy prepared statement: [%s]\00", align 1
@enableJit = local_unnamed_addr global i8 -1, align 1
@Argv = local_unnamed_addr global i8** null, align 8
@Argc = local_unnamed_addr global i32 -1, align 4
@maxVdbeSteps = local_unnamed_addr global i64 -1, align 8
@pcHasBeenSet = local_unnamed_addr global i8 0, align 1
@iCompare = local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [29 x i8] c"cannot open value of type %s\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"no such rowid: %lld\00", align 1
@.str.182 = private unnamed_addr constant [36 x i8] c"cannot open table without rowid: %s\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"cannot open view: %s\00", align 1
@.str.184 = private unnamed_addr constant [21 x i8] c"no such column: \22%s\22\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"foreign key\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.187 = private unnamed_addr constant [34 x i8] c"cannot open %s column for writing\00", align 1
@vdbeSorterCompareInt.aLen = internal unnamed_addr constant [10 x i8] c"\00\01\02\03\04\06\08\00\00\00", align 1
@MemJournalMethods = external constant %struct.sqlite3_io_methods, align 8
@.str.188 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"excluded\00", align 1
@.str.191 = private unnamed_addr constant [31 x i8] c"misuse of aliased aggregate %s\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"misuse of aliased window function %s\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"row value misused\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"double-quoted string literal: \22%w\22\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"no such column\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"ambiguous column name\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"%s: %s.%s.%s\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"%s: %s.%s\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.200 = private unnamed_addr constant [28 x i8] c"partial index WHERE clauses\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"index expressions\00", align 1
@.str.202 = private unnamed_addr constant [18 x i8] c"CHECK constraints\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"generated columns\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"%s prohibited in %s\00", align 1
@.str.205 = private unnamed_addr constant [17 x i8] c"the \22.\22 operator\00", align 1
@.str.206 = private unnamed_addr constant [71 x i8] c"second argument to likelihood() must be a constant between 0.0 and 1.0\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"not authorized to use function: %s\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"non-deterministic functions\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"%.*s() may not be used as a window function\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"misuse of %s function %.*s()\00", align 1
@.str.213 = private unnamed_addr constant [23 x i8] c"no such function: %.*s\00", align 1
@.str.214 = private unnamed_addr constant [45 x i8] c"wrong number of arguments to function %.*s()\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"FILTER may not be used with non-aggregate %.*s()\00", align 1
@.str.216 = private unnamed_addr constant [11 x i8] c"subqueries\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.218 = private unnamed_addr constant [56 x i8] c"%r %s BY term out of range - should be between 1 and %d\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"too many terms in ORDER BY clause\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"ORDER\00", align 1
@.str.221 = private unnamed_addr constant [61 x i8] c"%r ORDER BY term does not match any column in the result set\00", align 1
@.str.222 = private unnamed_addr constant [44 x i8] c"a GROUP BY clause is required before HAVING\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"GROUP\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"aggregate functions are not allowed in the GROUP BY clause\00", align 1
@.str.225 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.226 = private unnamed_addr constant [26 x i8] c"hex literal too big: %s%s\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"sqlite_\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"table %s may not be altered\00", align 1
@.str.229 = private unnamed_addr constant [156 x i8] c"SELECT 1 FROM \22%w\22.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.231 = private unnamed_addr constant [155 x i8] c"SELECT 1 FROM temp.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"view\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"cannot rename columns of %s \22%s\22\00", align 1
@.str.234 = private unnamed_addr constant [21 x i8] c"error in %s %s%s: %s\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c" after rename\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"\22%w\22\00", align 1
@.str.237 = private unnamed_addr constant [13 x i8] c"sqlite_stat1\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"tbl,idx,stat\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"sqlite_stat4\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"sqlite_stat3\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"CREATE TABLE %Q.%s(%s)\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"DELETE FROM %Q.%s WHERE %s=%Q\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"stat_init\00", align 1
@statInitFuncdef = external constant %struct.FuncDef, align 8
@.str.244 = private unnamed_addr constant [10 x i8] c"stat_push\00", align 1
@statPushFuncdef = external constant %struct.FuncDef, align 8
@.str.245 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c" %llu\00", align 1
@.str.247 = private unnamed_addr constant [9 x i8] c"stat_get\00", align 1
@statGetFuncdef = external constant %struct.FuncDef, align 8
@.str.248 = private unnamed_addr constant [10 x i8] c"sqlite\\_%\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"BBB\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"tbl\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"unordered*\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"sz=[0-9]*\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"noskipscan*\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"too many attached databases - max %d\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"database %s is already in use\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"database is already attached\00", align 1
@.str.258 = private unnamed_addr constant [68 x i8] c"attached databases must use the same text encoding as main database\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"unable to open database: %s\00", align 1
@.str.261 = private unnamed_addr constant [21 x i8] c"no such database: %s\00", align 1
@.str.262 = private unnamed_addr constant [26 x i8] c"cannot detach database %s\00", align 1
@.str.263 = private unnamed_addr constant [22 x i8] c"database %s is locked\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"authorizer malfunction\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"generated columns cannot be part of the PRIMARY KEY\00", align 1
@.str.266 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.267 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c",\0A  \00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"\0A)\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@createTableStmt.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0)], align 16
@.str.271 = private unnamed_addr constant [6 x i8] c" TEXT\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c" NUM\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c" INT\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c" REAL\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"corrupt schema\00", align 1
@.str.276 = private unnamed_addr constant [56 x i8] c"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\00", align 1
@typeofFunc.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)], align 16
@.str.277 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.279 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@globInfo = constant %struct.compareInfo { i8 42, i8 63, i8 91, i8 0 }, align 1
@likeInfoNorm = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 1 }, align 1
@likeInfoAlt = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 0 }, align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"LIKE or GLOB pattern too complex\00", align 1
@.str.282 = private unnamed_addr constant [45 x i8] c"ESCAPE expression must be a single character\00", align 1
@hexdigits = local_unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@.str.283 = private unnamed_addr constant [7 x i8] c"%!.20e\00", align 1
@trimFunc.lenOne = internal unnamed_addr constant [1 x i8] c"\01", align 1
@trimFunc.azOne = internal constant [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.284, i32 0, i32 0)], align 8
@.str.284 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"not authorized\00", align 1
@.str.286 = private unnamed_addr constant [30 x i8] c"FOREIGN KEY constraint failed\00", align 1
@sqlite3Autoext = local_unnamed_addr global %struct.sqlite3AutoExtList zeroinitializer, align 8
@.str.287 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.288 = private unnamed_addr constant [4 x i8] c"seq\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.290 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"on_update\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"on_delete\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"notnull\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"dflt_value\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"pk\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"coll\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"narg\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"hght\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"flgs\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"partial\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"rowid\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"fkid\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"busy\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.322 = private unnamed_addr constant [13 x i8] c"checkpointed\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"database\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.325 = private unnamed_addr constant [11 x i8] c"cache_size\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@pragCName = local_unnamed_addr constant [51 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0)], align 16
@.str.327 = private unnamed_addr constant [15 x i8] c"application_id\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"auto_vacuum\00", align 1
@.str.329 = private unnamed_addr constant [16 x i8] c"automatic_index\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"busy_timeout\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"cache_spill\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"case_sensitive_like\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"cell_size_check\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"checkpoint_fullfsync\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"collation_list\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"compile_options\00", align 1
@.str.337 = private unnamed_addr constant [14 x i8] c"count_changes\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"database_list\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"default_cache_size\00", align 1
@.str.341 = private unnamed_addr constant [19 x i8] c"defer_foreign_keys\00", align 1
@.str.342 = private unnamed_addr constant [23 x i8] c"empty_result_callbacks\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"foreign_key_check\00", align 1
@.str.345 = private unnamed_addr constant [17 x i8] c"foreign_key_list\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"foreign_keys\00", align 1
@.str.347 = private unnamed_addr constant [15 x i8] c"freelist_count\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"full_column_names\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"fullfsync\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"function_list\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"hard_heap_limit\00", align 1
@.str.352 = private unnamed_addr constant [25 x i8] c"ignore_check_constraints\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"incremental_vacuum\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"index_info\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"index_list\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"index_xinfo\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"integrity_check\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"journal_mode\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"journal_size_limit\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"legacy_alter_table\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"lock_proxy_file\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"locking_mode\00", align 1
@.str.363 = private unnamed_addr constant [15 x i8] c"max_page_count\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"mmap_size\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"page_count\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"page_size\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"pragma_list\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"query_only\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"quick_check\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"read_uncommitted\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"recursive_triggers\00", align 1
@.str.373 = private unnamed_addr constant [26 x i8] c"reverse_unordered_selects\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"schema_version\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"secure_delete\00", align 1
@.str.376 = private unnamed_addr constant [19 x i8] c"short_column_names\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"shrink_memory\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"soft_heap_limit\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c"synchronous\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"table_info\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"table_xinfo\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"temp_store\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"temp_store_directory\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.385 = private unnamed_addr constant [15 x i8] c"trusted_schema\00", align 1
@.str.386 = private unnamed_addr constant [13 x i8] c"user_version\00", align 1
@.str.387 = private unnamed_addr constant [19 x i8] c"wal_autocheckpoint\00", align 1
@.str.388 = private unnamed_addr constant [15 x i8] c"wal_checkpoint\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"writable_schema\00", align 1
@aPragmaName = constant [64 x %struct.PragmaName] [%struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i8 2, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.329, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 32768 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i8 4, i8 16, i8 50, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8 5, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i32 0, i32 0), i8 6, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), i8 7, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 2097152 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.334, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8 8, i8 16, i8 32, i8 2, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i32 0, i32 0), i8 9, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.337, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4294967296 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 15 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8 11, i8 17, i8 41, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i8 12, i8 -107, i8 49, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.341, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 524288 }, %struct.PragmaName { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.342, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 256 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i32 0, i32 0), i8 13, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8 14, i8 17, i8 37, i8 4, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.345, i32 0, i32 0), i8 15, i8 97, i8 0, i8 8, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16384 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.347, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8 16, i8 16, i8 21, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), i8 17, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.352, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 512 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), i8 18, i8 3, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8 19, i8 97, i8 15, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i8 20, i8 97, i8 32, i8 5, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i32 0, i32 0), i8 19, i8 97, i8 15, i8 6, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), i8 22, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i32 0, i32 0), i8 23, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 67108864 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i32 0, i32 0), i8 24, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8 25, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.363, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8 27, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8 29, i8 33, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), i8 30, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8 31, i8 16, i8 9, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1048576 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1024 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8192 }, %struct.PragmaName { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.373, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4096 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.374, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8 32, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.376, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 64 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i8 33, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8 34, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i32 0, i32 0), i8 35, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i8 36, i8 97, i8 8, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8 36, i8 97, i8 8, i8 7, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8 37, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i8 38, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0), i8 39, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.385, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 128 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 6 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.387, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.388, i32 0, i32 0), i8 41, i8 1, i8 44, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.389, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 134217729 }], align 16
@getSafetyLevel.zText = internal unnamed_addr constant [25 x i8] c"onoffalseyestruextrafull\00", align 16
@getSafetyLevel.iValue = internal unnamed_addr constant [8 x i8] c"\01\00\00\00\01\01\03\02", align 1
@.str.390 = private unnamed_addr constant [10 x i8] c"exclusive\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.396 = private unnamed_addr constant [62 x i8] c"temporary storage cannot be changed from within a transaction\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"SET NULL\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"SET DEFAULT\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"CASCADE\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"RESTRICT\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"NO ACTION\00", align 1
@pragmaFunclistLine.azEnc = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.404, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.404 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.407 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"sissii\00", align 1
@.str.409 = private unnamed_addr constant [31 x i8] c"malformed database schema (%s)\00", align 1
@.str.410 = private unnamed_addr constant [8 x i8] c"%z - %s\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"a NATURAL join may not have an ON or USING clause\00", align 1
@.str.412 = private unnamed_addr constant [55 x i8] c"cannot have both ON and USING clauses in the same join\00", align 1
@.str.413 = private unnamed_addr constant [64 x i8] c"cannot join using column %s - column not present in both tables\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"UNION ALL\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"INTERSECT\00", align 1
@.str.416 = private unnamed_addr constant [7 x i8] c"EXCEPT\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"UNION\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"USE TEMP B-TREE FOR %s\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.420 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"column%d\00", align 1
@.str.422 = private unnamed_addr constant [49 x i8] c"cannot use window functions in recursive queries\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"SETUP\00", align 1
@.str.424 = private unnamed_addr constant [42 x i8] c"recursive aggregate queries not supported\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"RECURSIVE STEP\00", align 1
@.str.426 = private unnamed_addr constant [23 x i8] c"SCAN %d CONSTANT ROW%s\00", align 1
@.str.427 = private unnamed_addr constant [42 x i8] c"%s clause should come after %s not before\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"ORDER BY\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"LIMIT\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"COMPOUND QUERY\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"LEFT-MOST SUBQUERY\00", align 1
@.str.432 = private unnamed_addr constant [21 x i8] c"%s USING TEMP B-TREE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"MERGE (%s)\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.437 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"'%s' is not a function\00", align 1
@.str.439 = private unnamed_addr constant [43 x i8] c"multiple references to recursive table: %s\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"circular reference: %s\00", align 1
@.str.441 = private unnamed_addr constant [38 x i8] c"table %s has %d values for %d columns\00", align 1
@.str.442 = private unnamed_addr constant [34 x i8] c"multiple recursive references: %s\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"recursive reference in a subquery: %s\00", align 1
@.str.444 = private unnamed_addr constant [39 x i8] c"too many references to \22%s\22: max 65535\00", align 1
@.str.445 = private unnamed_addr constant [31 x i8] c"access to view \22%s\22 prohibited\00", align 1
@.str.446 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"%s.%s.%s\00", align 1
@.str.448 = private unnamed_addr constant [18 x i8] c"no such table: %s\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"no tables specified\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"too many columns in result set\00", align 1
@.str.451 = private unnamed_addr constant [51 x i8] c"DISTINCT aggregates must have exactly one argument\00", align 1
@.str.452 = private unnamed_addr constant [18 x i8] c"SCAN TABLE %s%s%s\00", align 1
@.str.453 = private unnamed_addr constant [23 x i8] c" USING COVERING INDEX \00", align 1
@.str.454 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.455 = private unnamed_addr constant [65 x i8] c"sqlite3_get_table() called with two or more incompatible queries\00", align 1
@.str.456 = private unnamed_addr constant [4 x i8] c"CRE\00", align 1
@.str.457 = private unnamed_addr constant [4 x i8] c"INS\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"<expr>\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c" AND \00", align 1
@.str.460 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"%s=?\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"ANY(%s)\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.465 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.466 = private unnamed_addr constant [41 x i8] c"ON clause references tables to its right\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"NOCASE\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"automatic index on %s(%s)\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"auto-index\00", align 1
@.str.470 = private unnamed_addr constant [35 x i8] c"abbreviated query algorithm search\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"no query solution\00", align 1
@.str.472 = private unnamed_addr constant [56 x i8] c"second argument to nth_value must be a positive integer\00", align 1
@.str.473 = private unnamed_addr constant [45 x i8] c"argument of ntile must be a positive integer\00", align 1
@row_numberName = constant [11 x i8] c"row_number\00", align 1
@dense_rankName = constant [11 x i8] c"dense_rank\00", align 1
@rankName = constant [5 x i8] c"rank\00", align 1
@percent_rankName = constant [13 x i8] c"percent_rank\00", align 1
@cume_distName = constant [10 x i8] c"cume_dist\00", align 1
@ntileName = constant [6 x i8] c"ntile\00", align 1
@last_valueName = constant [11 x i8] c"last_value\00", align 1
@nth_valueName = constant [10 x i8] c"nth_value\00", align 1
@first_valueName = constant [12 x i8] c"first_value\00", align 1
@leadName = constant [5 x i8] c"lead\00", align 1
@lagName = constant [4 x i8] c"lag\00", align 1
@.str.474 = private unnamed_addr constant [19 x i8] c"no such window: %s\00", align 1
@windowCheckValue.azErr = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.478, i32 0, i32 0)], align 16
@.str.475 = private unnamed_addr constant [53 x i8] c"frame starting offset must be a non-negative integer\00", align 1
@.str.476 = private unnamed_addr constant [51 x i8] c"frame ending offset must be a non-negative integer\00", align 1
@.str.477 = private unnamed_addr constant [52 x i8] c"frame starting offset must be a non-negative number\00", align 1
@.str.478 = private unnamed_addr constant [50 x i8] c"frame ending offset must be a non-negative number\00", align 1
@windowCheckValue.aOp = internal unnamed_addr constant [5 x i32] [i32 57, i32 57, i32 54, i32 57, i32 57], align 16
@yy_action = local_unnamed_addr constant [1924 x i16] [i16 528, i16 1183, i16 528, i16 114, i16 111, i16 208, i16 114, i16 111, i16 208, i16 192, i16 1186, i16 528, i16 418, i16 528, i16 450, i16 528, i16 1447, i16 362, i16 528, i16 380, i16 6, i16 373, i16 70, i16 70, i16 42, i16 42, i16 476, i16 1423, i16 485, i16 418, i16 417, i16 911, i16 505, i16 42, i16 42, i16 71, i16 71, i16 51, i16 51, i16 912, i16 71, i16 71, i16 484, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 415, i16 380, i16 261, i16 261, i16 261, i16 261, i16 16, i16 16, i16 970, i16 970, i16 981, i16 984, i16 1226, i16 1226, i16 510, i16 525, i16 477, i16 525, i16 528, i16 491, i16 350, i16 236, i16 205, i16 486, i16 356, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 42, i16 42, i16 418, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1452, i16 349, i16 413, i16 1150, i16 1, i16 1, i16 534, i16 3, i16 1154, i16 1454, i16 1185, i16 348, i16 940, i16 286, i16 1081, i16 143, i16 1081, i16 380, i16 940, i16 114, i16 111, i16 208, i16 1234, i16 1440, i16 98, i16 370, i16 164, i16 974, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 261, i16 261, i16 228, i16 261, i16 261, i16 463, i16 460, i16 459, i16 306, i16 423, i16 296, i16 123, i16 435, i16 525, i16 306, i16 458, i16 525, i16 177, i16 1452, i16 499, i16 116, i16 116, i16 116, i16 115, i16 409, i16 285, i16 519, i16 218, i16 1221, i16 335, i16 1200, i16 380, i16 431, i16 120, i16 120, i16 120, i16 120, i16 113, i16 1221, i16 1109, i16 1110, i16 1111, i16 794, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 351, i16 12, i16 83, i16 1109, i16 81, i16 142, i16 256, i16 1109, i16 80, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 169, i16 426, i16 307, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1109, i16 1110, i16 1111, i16 1497, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 114, i16 111, i16 208, i16 528, i16 1109, i16 1109, i16 1110, i16 1111, i16 1491, i16 1109, i16 1110, i16 1111, i16 114, i16 111, i16 208, i16 380, i16 1193, i16 183, i16 1003, i16 321, i16 120, i16 120, i16 120, i16 120, i16 440, i16 71, i16 71, i16 487, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1379, i16 1468, i16 1109, i16 464, i16 1109, i16 1110, i16 1111, i16 281, i16 522, i16 522, i16 522, i16 97, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1392, i16 1334, i16 203, i16 473, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 164, i16 12, i16 1392, i16 1394, i16 1109, i16 1110, i16 1111, i16 228, i16 1076, i16 215, i16 463, i16 460, i16 459, i16 319, i16 488, i16 380, i16 334, i16 1465, i16 399, i16 816, i16 458, i16 1076, i16 239, i16 325, i16 1076, i16 407, i16 407, i16 407, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 285, i16 519, i16 1130, i16 809, i16 164, i16 235, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 189, i16 1392, i16 314, i16 178, i16 317, i16 425, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 382, i16 466, i16 1076, i16 419, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1076, i16 527, i16 396, i16 1076, i16 1109, i16 1130, i16 285, i16 519, i16 247, i16 264, i16 333, i16 469, i16 328, i16 468, i16 233, i16 380, i16 217, i16 812, i16 336, i16 1094, i16 324, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1076, i16 394, i16 960, i16 961, i16 1109, i16 1110, i16 1111, i16 285, i16 519, i16 1109, i16 444, i16 495, i16 163, i16 1076, i16 441, i16 347, i16 1076, i16 812, i16 951, i16 450, i16 505, i16 163, i16 950, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 1333, i16 1224, i16 1224, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 950, i16 950, i16 952, i16 528, i16 877, i16 115, i16 409, i16 13, i16 13, i16 293, i16 1422, i16 1109, i16 1110, i16 1111, i16 494, i16 380, i16 334, i16 1465, i16 526, i16 945, i16 866, i16 866, i16 388, i16 439, i16 32, i16 71, i16 71, i16 490, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 433, i16 284, i16 1471, i16 534, i16 3, i16 1154, i16 1109, i16 510, i16 474, i16 1446, i16 286, i16 378, i16 143, i16 6, i16 506, i16 1439, i16 509, i16 503, i16 1446, i16 1234, i16 508, i16 336, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 137, i16 5, i16 206, i16 1387, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 261, i16 261, i16 528, i16 255, i16 255, i16 533, i16 401, i16 1154, i16 1109, i16 1110, i16 1111, i16 270, i16 286, i16 525, i16 143, i16 380, i16 525, i16 406, i16 405, i16 335, i16 267, i16 1234, i16 335, i16 1109, i16 71, i16 71, i16 832, i16 218, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 261, i16 261, i16 467, i16 380, i16 355, i16 1023, i16 510, i16 1139, i16 192, i16 1139, i16 833, i16 145, i16 450, i16 525, i16 141, i16 475, i16 258, i16 1109, i16 1434, i16 896, i16 368, i16 71, i16 71, i16 1109, i16 1110, i16 1111, i16 1109, i16 218, i16 100, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 211, i16 1044, i16 528, i16 1386, i16 433, i16 282, i16 960, i16 1028, i16 1028, i16 447, i16 386, i16 397, i16 1319, i16 511, i16 1444, i16 357, i16 1045, i16 353, i16 6, i16 1109, i16 1110, i16 1111, i16 951, i16 414, i16 71, i16 71, i16 950, i16 528, i16 1109, i16 1110, i16 1111, i16 1046, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 125, i16 103, i16 1147, i16 898, i16 261, i16 261, i16 71, i16 71, i16 192, i16 852, i16 528, i16 386, i16 897, i16 207, i16 950, i16 950, i16 952, i16 525, i16 510, i16 853, i16 379, i16 380, i16 262, i16 262, i16 426, i16 307, i16 193, i16 512, i16 782, i16 783, i16 784, i16 386, i16 55, i16 55, i16 271, i16 525, i16 295, i16 450, i16 896, i16 390, i16 528, i16 380, i16 275, i16 404, i16 275, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1445, i16 380, i16 56, i16 56, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 268, i16 1233, i16 2, i16 377, i16 376, i16 121, i16 110, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 269, i16 285, i16 519, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 528, i16 439, i16 528, i16 9, i16 1109, i16 239, i16 1113, i16 450, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 528, i16 420, i16 528, i16 15, i16 15, i16 13, i16 13, i16 471, i16 528, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 393, i16 1130, i16 44, i16 44, i16 57, i16 57, i16 406, i16 405, i16 1431, i16 380, i16 13, i16 13, i16 1229, i16 872, i16 1136, i16 1109, i16 1110, i16 1111, i16 871, i16 1138, i16 1109, i16 1110, i16 1111, i16 1113, i16 439, i16 395, i16 294, i16 1137, i16 450, i16 455, i16 335, i16 104, i16 528, i16 102, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 433, i16 1109, i16 1139, i16 528, i16 1139, i16 13, i16 13, i16 232, i16 1130, i16 305, i16 109, i16 261, i16 261, i16 107, i16 520, i16 140, i16 4, i16 38, i16 1076, i16 1319, i16 274, i16 13, i16 13, i16 312, i16 525, i16 13, i16 13, i16 1319, i16 144, i16 502, i16 523, i16 1076, i16 528, i16 911, i16 1076, i16 288, i16 186, i16 528, i16 896, i16 528, i16 187, i16 912, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 410, i16 13, i16 13, i16 1109, i16 1110, i16 1111, i16 71, i16 71, i16 58, i16 58, i16 107, i16 520, i16 517, i16 4, i16 304, i16 289, i16 507, i16 1232, i16 273, i16 528, i16 272, i16 383, i16 164, i16 437, i16 1172, i16 1443, i16 501, i16 523, i16 1496, i16 6, i16 1025, i16 841, i16 493, i16 478, i16 1025, i16 481, i16 391, i16 324, i16 513, i16 8, i16 960, i16 59, i16 59, i16 408, i16 392, i16 500, i16 105, i16 105, i16 261, i16 261, i16 410, i16 261, i16 261, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 261, i16 261, i16 950, i16 525, i16 517, i16 301, i16 525, i16 528, i16 445, i16 261, i16 261, i16 261, i16 261, i16 525, i16 261, i16 261, i16 508, i16 207, i16 497, i16 285, i16 519, i16 528, i16 525, i16 496, i16 525, i16 260, i16 205, i16 525, i16 528, i16 60, i16 60, i16 528, i16 960, i16 950, i16 950, i16 952, i16 953, i16 27, i16 105, i16 105, i16 528, i16 1319, i16 896, i16 61, i16 61, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 62, i16 62, i16 950, i16 45, i16 45, i16 107, i16 520, i16 528, i16 4, i16 528, i16 438, i16 1044, i16 46, i16 46, i16 1175, i16 384, i16 298, i16 292, i16 300, i16 231, i16 230, i16 229, i16 523, i16 1442, i16 528, i16 1270, i16 1045, i16 6, i16 30, i16 47, i16 47, i16 49, i16 49, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1470, i16 1098, i16 412, i16 1046, i16 528, i16 265, i16 1238, i16 410, i16 50, i16 50, i16 366, i16 366, i16 365, i16 250, i16 363, i16 97, i16 1319, i16 791, i16 525, i16 517, i16 528, i16 31, i16 528, i16 446, i16 516, i16 1129, i16 63, i16 63, i16 528, i16 232, i16 212, i16 872, i16 291, i16 497, i16 428, i16 528, i16 871, i16 1022, i16 498, i16 1022, i16 290, i16 201, i16 64, i16 64, i16 65, i16 65, i16 528, i16 960, i16 1459, i16 528, i16 14, i16 14, i16 1269, i16 105, i16 105, i16 139, i16 937, i16 66, i16 66, i16 299, i16 106, i16 528, i16 410, i16 530, i16 529, i16 528, i16 422, i16 950, i16 127, i16 127, i16 214, i16 67, i16 67, i16 303, i16 107, i16 520, i16 97, i16 4, i16 156, i16 1411, i16 17, i16 158, i16 528, i16 52, i16 52, i16 528, i16 402, i16 68, i16 68, i16 528, i16 1204, i16 523, i16 804, i16 528, i16 819, i16 528, i16 383, i16 213, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1410, i16 69, i16 69, i16 528, i16 53, i16 53, i16 831, i16 830, i16 151, i16 151, i16 823, i16 410, i16 152, i16 152, i16 76, i16 76, i16 427, i16 528, i16 521, i16 384, i16 1010, i16 528, i16 1021, i16 517, i16 1021, i16 54, i16 54, i16 528, i16 381, i16 442, i16 528, i16 309, i16 528, i16 285, i16 519, i16 1266, i16 196, i16 497, i16 528, i16 72, i16 72, i16 954, i16 496, i16 128, i16 128, i16 804, i16 263, i16 819, i16 313, i16 73, i16 73, i16 960, i16 129, i16 129, i16 130, i16 130, i16 416, i16 105, i16 105, i16 95, i16 126, i16 126, i16 838, i16 839, i16 106, i16 528, i16 410, i16 530, i16 529, i16 1098, i16 412, i16 950, i16 316, i16 265, i16 942, i16 1203, i16 1010, i16 238, i16 366, i16 366, i16 365, i16 250, i16 363, i16 432, i16 318, i16 791, i16 238, i16 150, i16 150, i16 528, i16 107, i16 520, i16 528, i16 4, i16 528, i16 320, i16 528, i16 954, i16 212, i16 1217, i16 291, i16 1257, i16 950, i16 950, i16 952, i16 953, i16 27, i16 523, i16 290, i16 528, i16 1202, i16 149, i16 149, i16 528, i16 134, i16 134, i16 133, i16 133, i16 131, i16 131, i16 107, i16 520, i16 528, i16 4, i16 332, i16 528, i16 914, i16 915, i16 1201, i16 528, i16 410, i16 132, i16 132, i16 528, i16 331, i16 75, i16 75, i16 523, i16 214, i16 327, i16 434, i16 280, i16 517, i16 238, i16 77, i16 77, i16 156, i16 74, i16 74, i16 158, i16 869, i16 43, i16 43, i16 109, i16 308, i16 48, i16 48, i16 97, i16 337, i16 456, i16 410, i16 322, i16 234, i16 1484, i16 97, i16 213, i16 1006, i16 338, i16 905, i16 234, i16 960, i16 238, i16 517, i16 1278, i16 1318, i16 1253, i16 105, i16 105, i16 876, i16 802, i16 1264, i16 870, i16 138, i16 106, i16 109, i16 410, i16 530, i16 529, i16 514, i16 515, i16 950, i16 1324, i16 99, i16 520, i16 451, i16 4, i16 1182, i16 1174, i16 1163, i16 381, i16 960, i16 1162, i16 1164, i16 1478, i16 285, i16 519, i16 105, i16 105, i16 253, i16 523, i16 195, i16 210, i16 1250, i16 106, i16 340, i16 410, i16 530, i16 529, i16 342, i16 11, i16 950, i16 950, i16 950, i16 952, i16 953, i16 27, i16 344, i16 416, i16 198, i16 367, i16 1303, i16 421, i16 410, i16 297, i16 302, i16 1311, i16 372, i16 436, i16 461, i16 202, i16 1200, i16 330, i16 1383, i16 1382, i16 517, i16 190, i16 346, i16 191, i16 518, i16 197, i16 360, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1481, i16 1147, i16 242, i16 1430, i16 165, i16 1428, i16 1144, i16 385, i16 83, i16 430, i16 1388, i16 79, i16 175, i16 1308, i16 82, i16 161, i16 960, i16 167, i16 1300, i16 95, i16 424, i16 170, i16 105, i16 105, i16 35, i16 171, i16 172, i16 371, i16 173, i16 106, i16 36, i16 410, i16 530, i16 529, i16 1314, i16 179, i16 950, i16 265, i16 369, i16 429, i16 443, i16 1377, i16 366, i16 366, i16 365, i16 250, i16 363, i16 454, i16 222, i16 791, i16 88, i16 449, i16 1399, i16 254, i16 224, i16 184, i16 311, i16 452, i16 315, i16 225, i16 470, i16 1165, i16 212, i16 226, i16 291, i16 374, i16 90, i16 950, i16 950, i16 952, i16 953, i16 27, i16 290, i16 398, i16 1211, i16 1495, i16 823, i16 1494, i16 203, i16 1220, i16 1219, i16 1464, i16 1218, i16 1261, i16 400, i16 278, i16 375, i16 1190, i16 1189, i16 329, i16 489, i16 1188, i16 1493, i16 279, i16 94, i16 339, i16 241, i16 480, i16 1262, i16 1210, i16 483, i16 341, i16 214, i16 1260, i16 1259, i16 343, i16 345, i16 240, i16 403, i16 124, i16 156, i16 10, i16 508, i16 158, i16 1285, i16 1450, i16 1449, i16 354, i16 492, i16 101, i16 96, i16 248, i16 1171, i16 34, i16 531, i16 1363, i16 1104, i16 249, i16 251, i16 213, i16 1243, i16 252, i16 352, i16 359, i16 194, i16 1242, i16 358, i16 532, i16 1160, i16 1155, i16 1415, i16 153, i16 1416, i16 1284, i16 1414, i16 154, i16 136, i16 276, i16 1413, i16 778, i16 411, i16 199, i16 287, i16 200, i16 78, i16 155, i16 209, i16 266, i16 283, i16 135, i16 1020, i16 1018, i16 934, i16 381, i16 166, i16 157, i16 216, i16 168, i16 285, i16 519, i16 855, i16 1034, i16 938, i16 159, i16 174, i16 387, i16 389, i16 84, i16 176, i16 85, i16 86, i16 87, i16 160, i16 1037, i16 1033, i16 219, i16 220, i16 146, i16 18, i16 221, i16 1026, i16 416, i16 1141, i16 310, i16 238, i16 448, i16 223, i16 180, i16 181, i16 37, i16 793, i16 331, i16 227, i16 453, i16 323, i16 465, i16 834, i16 182, i16 89, i16 19, i16 20, i16 457, i16 821, i16 462, i16 326, i16 91, i16 277, i16 147, i16 92, i16 472, i16 479, i16 1092, i16 148, i16 986, i16 904, i16 1062, i16 162, i16 93, i16 39, i16 482, i16 1063, i16 40, i16 204, i16 257, i16 259, i16 185, i16 899, i16 237, i16 109, i16 1082, i16 1078, i16 1080, i16 21, i16 1066, i16 1086, i16 33, i16 504, i16 188, i16 22, i16 23, i16 24, i16 1085, i16 25, i16 97, i16 1001, i16 987, i16 985, i16 989, i16 26, i16 1043, i16 244, i16 7, i16 1042, i16 243, i16 990, i16 28, i16 41, i16 524, i16 955, i16 803, i16 108, i16 29, i16 245, i16 865, i16 246, i16 1486, i16 364, i16 361, i16 1100, i16 1099, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1485], align 16
@yy_lookahead = local_unnamed_addr constant [2105 x i16] [i16 189, i16 211, i16 189, i16 267, i16 268, i16 269, i16 267, i16 268, i16 269, i16 189, i16 211, i16 189, i16 189, i16 189, i16 189, i16 189, i16 294, i16 197, i16 189, i16 19, i16 298, i16 201, i16 211, i16 212, i16 211, i16 212, i16 200, i16 288, i16 200, i16 206, i16 207, i16 31, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 39, i16 211, i16 212, i16 189, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 233, i16 19, i16 234, i16 235, i16 234, i16 235, i16 211, i16 212, i16 46, i16 47, i16 48, i16 49, i16 230, i16 231, i16 248, i16 247, i16 248, i16 247, i16 189, i16 248, i16 214, i16 251, i16 252, i16 257, i16 271, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 211, i16 212, i16 277, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 299, i16 300, i16 289, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 299, i16 211, i16 301, i16 73, i16 191, i16 86, i16 193, i16 88, i16 19, i16 73, i16 267, i16 268, i16 269, i16 200, i16 292, i16 26, i16 200, i16 81, i16 119, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 234, i16 235, i16 117, i16 234, i16 235, i16 120, i16 121, i16 122, i16 125, i16 126, i16 127, i16 69, i16 189, i16 247, i16 125, i16 130, i16 247, i16 22, i16 299, i16 300, i16 107, i16 108, i16 109, i16 110, i16 111, i16 136, i16 137, i16 261, i16 218, i16 189, i16 220, i16 19, i16 263, i16 54, i16 55, i16 56, i16 57, i16 58, i16 228, i16 114, i16 115, i16 116, i16 21, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 214, i16 208, i16 148, i16 59, i16 24, i16 236, i16 208, i16 59, i16 67, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 72, i16 126, i16 127, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 114, i16 115, i16 116, i16 225, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 267, i16 268, i16 269, i16 189, i16 59, i16 114, i16 115, i16 116, i16 210, i16 114, i16 115, i16 116, i16 267, i16 268, i16 269, i16 19, i16 218, i16 72, i16 121, i16 23, i16 54, i16 55, i16 56, i16 57, i16 284, i16 211, i16 212, i16 19, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 158, i16 189, i16 59, i16 23, i16 114, i16 115, i16 116, i16 248, i16 205, i16 206, i16 207, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 162, i16 163, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 81, i16 208, i16 206, i16 207, i16 114, i16 115, i16 116, i16 117, i16 76, i16 24, i16 120, i16 121, i16 122, i16 16, i16 114, i16 19, i16 296, i16 297, i16 19, i16 23, i16 130, i16 89, i16 24, i16 24, i16 92, i16 205, i16 206, i16 207, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 136, i16 137, i16 59, i16 23, i16 81, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 279, i16 277, i16 77, i16 22, i16 79, i16 284, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 194, i16 95, i16 76, i16 118, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 89, i16 189, i16 111, i16 92, i16 59, i16 115, i16 136, i16 137, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 19, i16 139, i16 59, i16 189, i16 23, i16 129, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 76, i16 227, i16 99, i16 23, i16 114, i16 115, i16 116, i16 136, i16 137, i16 59, i16 274, i16 87, i16 189, i16 89, i16 278, i16 189, i16 92, i16 114, i16 115, i16 189, i16 189, i16 189, i16 119, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 230, i16 231, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 150, i16 151, i16 152, i16 189, i16 107, i16 110, i16 111, i16 211, i16 212, i16 189, i16 233, i16 114, i16 115, i16 116, i16 143, i16 19, i16 296, i16 297, i16 132, i16 23, i16 134, i16 135, i16 226, i16 189, i16 22, i16 211, i16 212, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 189, i16 239, i16 183, i16 184, i16 185, i16 186, i16 59, i16 248, i16 293, i16 294, i16 191, i16 249, i16 193, i16 298, i16 291, i16 292, i16 257, i16 293, i16 294, i16 200, i16 143, i16 189, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 161, i16 22, i16 189, i16 276, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 234, i16 235, i16 189, i16 234, i16 235, i16 184, i16 227, i16 186, i16 114, i16 115, i16 116, i16 285, i16 191, i16 247, i16 193, i16 19, i16 247, i16 105, i16 106, i16 189, i16 262, i16 200, i16 189, i16 59, i16 211, i16 212, i16 35, i16 261, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 234, i16 235, i16 66, i16 19, i16 189, i16 11, i16 248, i16 150, i16 189, i16 152, i16 74, i16 236, i16 189, i16 247, i16 236, i16 257, i16 23, i16 59, i16 189, i16 26, i16 201, i16 211, i16 212, i16 114, i16 115, i16 116, i16 59, i16 261, i16 156, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 15, i16 12, i16 189, i16 233, i16 189, i16 248, i16 99, i16 125, i16 126, i16 127, i16 189, i16 128, i16 189, i16 200, i16 294, i16 244, i16 27, i16 246, i16 298, i16 114, i16 115, i16 116, i16 115, i16 189, i16 211, i16 212, i16 119, i16 189, i16 114, i16 115, i16 116, i16 42, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 22, i16 156, i16 60, i16 141, i16 234, i16 235, i16 211, i16 212, i16 189, i16 63, i16 189, i16 189, i16 141, i16 116, i16 150, i16 151, i16 152, i16 247, i16 248, i16 73, i16 201, i16 19, i16 234, i16 235, i16 126, i16 127, i16 24, i16 257, i16 7, i16 8, i16 9, i16 189, i16 211, i16 212, i16 262, i16 247, i16 258, i16 189, i16 141, i16 259, i16 189, i16 19, i16 223, i16 248, i16 225, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 294, i16 19, i16 211, i16 212, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 233, i16 22, i16 105, i16 106, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 136, i16 137, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 189, i16 189, i16 189, i16 22, i16 59, i16 24, i16 59, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 189, i16 263, i16 189, i16 211, i16 212, i16 211, i16 212, i16 107, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 226, i16 59, i16 211, i16 212, i16 211, i16 212, i16 105, i16 106, i16 189, i16 19, i16 211, i16 212, i16 233, i16 133, i16 113, i16 114, i16 115, i16 116, i16 138, i16 118, i16 114, i16 115, i16 116, i16 115, i16 189, i16 226, i16 200, i16 126, i16 189, i16 19, i16 189, i16 155, i16 189, i16 157, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 189, i16 59, i16 150, i16 189, i16 152, i16 211, i16 212, i16 46, i16 115, i16 285, i16 26, i16 234, i16 235, i16 19, i16 20, i16 22, i16 22, i16 24, i16 76, i16 189, i16 226, i16 211, i16 212, i16 233, i16 247, i16 211, i16 212, i16 189, i16 236, i16 87, i16 36, i16 89, i16 189, i16 31, i16 92, i16 189, i16 226, i16 189, i16 26, i16 189, i16 226, i16 39, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 211, i16 212, i16 114, i16 115, i16 116, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 71, i16 22, i16 200, i16 189, i16 226, i16 200, i16 285, i16 189, i16 262, i16 113, i16 81, i16 19, i16 200, i16 294, i16 66, i16 36, i16 23, i16 298, i16 29, i16 26, i16 143, i16 200, i16 33, i16 200, i16 259, i16 129, i16 200, i16 48, i16 99, i16 211, i16 212, i16 248, i16 259, i16 85, i16 105, i16 106, i16 234, i16 235, i16 59, i16 234, i16 235, i16 112, i16 94, i16 114, i16 115, i16 116, i16 234, i16 235, i16 119, i16 247, i16 71, i16 16, i16 247, i16 189, i16 65, i16 234, i16 235, i16 234, i16 235, i16 247, i16 234, i16 235, i16 143, i16 116, i16 85, i16 136, i16 137, i16 189, i16 247, i16 90, i16 247, i16 251, i16 252, i16 247, i16 189, i16 211, i16 212, i16 189, i16 99, i16 150, i16 151, i16 152, i16 153, i16 154, i16 105, i16 106, i16 189, i16 189, i16 141, i16 211, i16 212, i16 112, i16 144, i16 114, i16 115, i16 116, i16 211, i16 212, i16 119, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 189, i16 114, i16 12, i16 211, i16 212, i16 203, i16 204, i16 77, i16 189, i16 79, i16 125, i16 126, i16 127, i16 36, i16 294, i16 189, i16 189, i16 27, i16 298, i16 22, i16 211, i16 212, i16 211, i16 212, i16 150, i16 151, i16 152, i16 153, i16 154, i16 0, i16 1, i16 2, i16 42, i16 189, i16 5, i16 235, i16 59, i16 211, i16 212, i16 10, i16 11, i16 12, i16 13, i16 14, i16 26, i16 189, i16 17, i16 247, i16 71, i16 189, i16 53, i16 189, i16 259, i16 63, i16 26, i16 211, i16 212, i16 189, i16 46, i16 30, i16 133, i16 32, i16 85, i16 127, i16 189, i16 138, i16 150, i16 90, i16 152, i16 40, i16 26, i16 211, i16 212, i16 211, i16 212, i16 189, i16 99, i16 303, i16 189, i16 211, i16 212, i16 189, i16 105, i16 106, i16 22, i16 149, i16 211, i16 212, i16 158, i16 112, i16 189, i16 114, i16 115, i16 116, i16 189, i16 189, i16 119, i16 211, i16 212, i16 70, i16 211, i16 212, i16 23, i16 19, i16 20, i16 26, i16 22, i16 78, i16 189, i16 22, i16 81, i16 189, i16 211, i16 212, i16 189, i16 259, i16 211, i16 212, i16 189, i16 221, i16 36, i16 59, i16 189, i16 59, i16 189, i16 113, i16 97, i16 150, i16 151, i16 152, i16 153, i16 154, i16 189, i16 211, i16 212, i16 189, i16 211, i16 212, i16 118, i16 119, i16 211, i16 212, i16 124, i16 59, i16 211, i16 212, i16 211, i16 212, i16 61, i16 189, i16 203, i16 204, i16 59, i16 189, i16 150, i16 71, i16 152, i16 211, i16 212, i16 189, i16 131, i16 189, i16 189, i16 189, i16 189, i16 136, i16 137, i16 189, i16 140, i16 85, i16 189, i16 211, i16 212, i16 59, i16 90, i16 211, i16 212, i16 115, i16 22, i16 115, i16 189, i16 211, i16 212, i16 99, i16 211, i16 212, i16 211, i16 212, i16 159, i16 105, i16 106, i16 147, i16 211, i16 212, i16 7, i16 8, i16 112, i16 189, i16 114, i16 115, i16 116, i16 1, i16 2, i16 119, i16 189, i16 5, i16 23, i16 221, i16 115, i16 26, i16 10, i16 11, i16 12, i16 13, i16 14, i16 23, i16 189, i16 17, i16 26, i16 211, i16 212, i16 189, i16 19, i16 20, i16 189, i16 22, i16 189, i16 189, i16 189, i16 115, i16 30, i16 189, i16 32, i16 253, i16 150, i16 151, i16 152, i16 153, i16 154, i16 36, i16 40, i16 189, i16 221, i16 211, i16 212, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 119, i16 189, i16 83, i16 84, i16 189, i16 189, i16 59, i16 211, i16 212, i16 189, i16 129, i16 211, i16 212, i16 36, i16 70, i16 189, i16 23, i16 250, i16 71, i16 26, i16 211, i16 212, i16 78, i16 211, i16 212, i16 81, i16 23, i16 211, i16 212, i16 26, i16 23, i16 211, i16 212, i16 26, i16 189, i16 23, i16 59, i16 23, i16 26, i16 139, i16 26, i16 97, i16 23, i16 189, i16 23, i16 26, i16 99, i16 26, i16 71, i16 189, i16 189, i16 189, i16 105, i16 106, i16 107, i16 23, i16 189, i16 23, i16 26, i16 112, i16 26, i16 114, i16 115, i16 116, i16 189, i16 231, i16 119, i16 189, i16 19, i16 20, i16 281, i16 22, i16 189, i16 189, i16 189, i16 131, i16 99, i16 189, i16 189, i16 189, i16 136, i16 137, i16 105, i16 106, i16 280, i16 36, i16 237, i16 290, i16 250, i16 112, i16 250, i16 114, i16 115, i16 116, i16 250, i16 238, i16 119, i16 150, i16 151, i16 152, i16 153, i16 154, i16 250, i16 159, i16 209, i16 187, i16 241, i16 254, i16 59, i16 254, i16 286, i16 241, i16 241, i16 286, i16 215, i16 224, i16 220, i16 214, i16 214, i16 214, i16 71, i16 244, i16 254, i16 244, i16 273, i16 238, i16 240, i16 150, i16 151, i16 152, i16 153, i16 154, i16 192, i16 60, i16 139, i16 196, i16 290, i16 196, i16 38, i16 196, i16 148, i16 113, i16 276, i16 287, i16 22, i16 265, i16 287, i16 43, i16 99, i16 229, i16 241, i16 147, i16 18, i16 232, i16 105, i16 106, i16 264, i16 232, i16 232, i16 265, i16 232, i16 112, i16 264, i16 114, i16 115, i16 116, i16 229, i16 229, i16 119, i16 5, i16 241, i16 241, i16 196, i16 241, i16 10, i16 11, i16 12, i16 13, i16 14, i16 18, i16 195, i16 17, i16 155, i16 62, i16 283, i16 196, i16 195, i16 22, i16 282, i16 216, i16 196, i16 195, i16 113, i16 196, i16 30, i16 195, i16 32, i16 216, i16 22, i16 150, i16 151, i16 152, i16 153, i16 154, i16 40, i16 64, i16 222, i16 219, i16 124, i16 219, i16 162, i16 213, i16 213, i16 297, i16 213, i16 256, i16 111, i16 275, i16 216, i16 213, i16 215, i16 213, i16 142, i16 213, i16 213, i16 275, i16 113, i16 255, i16 91, i16 216, i16 256, i16 222, i16 216, i16 255, i16 70, i16 256, i16 256, i16 255, i16 255, i16 196, i16 82, i16 146, i16 78, i16 22, i16 143, i16 81, i16 260, i16 302, i16 302, i16 196, i16 144, i16 155, i16 145, i16 25, i16 199, i16 26, i16 198, i16 270, i16 13, i16 190, i16 190, i16 97, i16 245, i16 6, i16 244, i16 241, i16 243, i16 245, i16 242, i16 188, i16 188, i16 188, i16 208, i16 202, i16 208, i16 260, i16 208, i16 202, i16 217, i16 217, i16 208, i16 4, i16 3, i16 209, i16 160, i16 209, i16 208, i16 202, i16 15, i16 98, i16 272, i16 16, i16 23, i16 23, i16 137, i16 131, i16 148, i16 128, i16 24, i16 140, i16 136, i16 137, i16 20, i16 1, i16 149, i16 128, i16 140, i16 61, i16 37, i16 53, i16 148, i16 53, i16 53, i16 53, i16 128, i16 114, i16 1, i16 34, i16 139, i16 5, i16 22, i16 113, i16 68, i16 159, i16 75, i16 158, i16 26, i16 41, i16 139, i16 68, i16 113, i16 24, i16 20, i16 129, i16 123, i16 19, i16 23, i16 96, i16 28, i16 22, i16 22, i16 22, i16 22, i16 67, i16 59, i16 67, i16 24, i16 22, i16 67, i16 23, i16 147, i16 22, i16 24, i16 23, i16 23, i16 23, i16 114, i16 23, i16 37, i16 26, i16 22, i16 24, i16 23, i16 22, i16 139, i16 23, i16 23, i16 22, i16 141, i16 34, i16 26, i16 75, i16 88, i16 86, i16 34, i16 23, i16 75, i16 22, i16 24, i16 26, i16 34, i16 34, i16 34, i16 93, i16 34, i16 26, i16 23, i16 23, i16 23, i16 23, i16 34, i16 23, i16 22, i16 44, i16 23, i16 26, i16 11, i16 22, i16 22, i16 26, i16 23, i16 23, i16 22, i16 22, i16 139, i16 133, i16 139, i16 139, i16 15, i16 23, i16 1, i16 1, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 139, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304], align 16
@yy_shift_ofst = local_unnamed_addr constant [535 x i16] [i16 1448, i16 1277, i16 1072, i16 1668, i16 1072, i16 319, i16 1122, i16 1225, i16 1332, i16 1481, i16 1481, i16 1481, i16 57, i16 0, i16 0, i16 180, i16 897, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 930, i16 930, i16 1020, i16 1020, i16 290, i16 378, i16 319, i16 319, i16 319, i16 319, i16 319, i16 319, i16 40, i16 110, i16 219, i16 288, i16 327, i16 396, i16 435, i16 504, i16 543, i16 612, i16 651, i16 720, i16 877, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 917, i16 897, i16 1019, i16 763, i16 763, i16 1451, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1553, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 147, i16 258, i16 258, i16 258, i16 258, i16 258, i16 360, i16 424, i16 81, i16 183, i16 1039, i16 183, i16 636, i16 636, i16 183, i16 434, i16 434, i16 189, i16 434, i16 434, i16 134, i16 225, i16 225, i16 511, i16 29, i16 1924, i16 1924, i16 399, i16 399, i16 399, i16 93, i16 163, i16 187, i16 163, i16 163, i16 821, i16 821, i16 487, i16 237, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 332, i16 332, i16 183, i16 773, i16 419, i16 419, i16 937, i16 937, i16 548, i16 840, i16 1924, i16 1924, i16 466, i16 739, i16 739, i16 453, i16 53, i16 618, i16 513, i16 688, i16 737, i16 746, i16 935, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 51, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 715, i16 715, i16 715, i16 183, i16 183, i16 183, i16 183, i16 772, i16 183, i16 183, i16 183, i16 971, i16 1091, i16 183, i16 183, i16 1238, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 714, i16 1132, i16 502, i16 398, i16 398, i16 398, i16 398, i16 1090, i16 502, i16 502, i16 909, i16 853, i16 896, i16 817, i16 1292, i16 300, i16 300, i16 1135, i16 1292, i16 1292, i16 1135, i16 1266, i16 1136, i16 1260, i16 1080, i16 1080, i16 1080, i16 300, i16 1062, i16 1062, i16 905, i16 1276, i16 1175, i16 1071, i16 1577, i16 1499, i16 1499, i16 1604, i16 1604, i16 1499, i16 1496, i16 1532, i16 1626, i16 1608, i16 1508, i16 1638, i16 1638, i16 1638, i16 1638, i16 1508, i16 1508, i16 1532, i16 1626, i16 1608, i16 1608, i16 1508, i16 1499, i16 1665, i16 1531, i16 1625, i16 1499, i16 1665, i16 1669, i16 1499, i16 1665, i16 1499, i16 1665, i16 1669, i16 1583, i16 1583, i16 1583, i16 1645, i16 1680, i16 1680, i16 1669, i16 1583, i16 1588, i16 1583, i16 1645, i16 1583, i16 1583, i16 1552, i16 1669, i16 1609, i16 1609, i16 1669, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1499, i16 1641, i16 1641, i16 1662, i16 1662, i16 1599, i16 1605, i16 1725, i16 1499, i16 1600, i16 1599, i16 1611, i16 1610, i16 1508, i16 1732, i16 1733, i16 1749, i16 1749, i16 1761, i16 1761, i16 1761, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 20, i16 1178, i16 397, i16 1133, i16 1310, i16 1245, i16 385, i16 1184, i16 1327, i16 1335, i16 1431, i16 1440, i16 1497, i16 1511, i16 1516, i16 1518, i16 1312, i16 1268, i16 1435, i16 1385, i16 1341, i16 1523, i16 1525, i16 1423, i16 1507, i16 1164, i16 1252, i16 1536, i16 1538, i16 1362, i16 1404, i16 1781, i16 1783, i16 1628, i16 1777, i16 1695, i16 1779, i16 1773, i16 1774, i16 1661, i16 1652, i16 1673, i16 1778, i16 1663, i16 1786, i16 1806, i16 1670, i16 1659, i16 1681, i16 1750, i16 1775, i16 1666, i16 1760, i16 1762, i16 1763, i16 1764, i16 1690, i16 1705, i16 1787, i16 1683, i16 1819, i16 1818, i16 1802, i16 1712, i16 1671, i16 1758, i16 1804, i16 1765, i16 1753, i16 1790, i16 1693, i16 1721, i16 1811, i16 1816, i16 1820, i16 1708, i16 1715, i16 1821, i16 1780, i16 1822, i16 1823, i16 1817, i16 1824, i16 1782, i16 1789, i16 1826, i16 1745, i16 1814, i16 1829, i16 1785, i16 1825, i16 1830, i16 1707, i16 1833, i16 1834, i16 1835, i16 1836, i16 1837, i16 1838, i16 1842, i16 1832, i16 1843, i16 1845, i16 1841, i16 1729, i16 1846, i16 1847, i16 1746, i16 1839, i16 1849, i16 1731, i16 1848, i16 1844, i16 1850, i16 1851, i16 1852, i16 1788, i16 1800, i16 1791, i16 1853, i16 1805, i16 1794, i16 1854, i16 1856, i16 1859, i16 1858, i16 1857, i16 1863, i16 1860, i16 1867, i16 1848, i16 1868, i16 1869, i16 1870, i16 1872, i16 1873, i16 1875, i16 1874, i16 1889, i16 1879, i16 1880, i16 1881, i16 1882, i16 1884, i16 1885, i16 1877, i16 1776, i16 1769, i16 1771, i16 1772, i16 1784, i16 1890, i16 1897, i16 1913, i16 1914], align 16
@yy_reduce_ofst = local_unnamed_addr constant [380 x i16] [i16 -66, i16 490, i16 645, i16 545, i16 -174, i16 -172, i16 -187, i16 -178, i16 -113, i16 -176, i16 430, i16 537, i16 -63, i16 -136, i16 25, i16 -261, i16 37, i16 412, i16 803, i16 828, i16 872, i16 -171, i16 888, i16 892, i16 106, i16 589, i16 921, i16 -189, i16 670, i16 926, i16 -177, i16 196, i16 386, i16 395, i16 694, i16 855, i16 945, i16 948, i16 955, i16 964, i16 966, i16 969, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -147, i16 696, i16 726, i16 801, i16 820, i16 822, i16 928, i16 961, i16 1007, i16 1021, i16 1028, i16 1031, i16 1040, i16 1057, i16 1059, i16 1074, i16 1092, i16 1108, i16 1110, i16 1116, i16 1123, i16 1134, i16 1137, i16 1149, i16 1153, i16 1170, i16 1173, i16 1177, i16 1181, i16 1183, i16 1194, i16 1208, i16 1212, i16 1218, i16 1221, i16 1223, i16 1229, i16 1256, i16 1280, i16 1283, i16 1285, i16 1287, i16 1300, i16 1304, i16 1313, i16 1316, i16 1320, i16 1324, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -175, i16 -22, i16 394, i16 150, i16 220, i16 -180, i16 493, i16 663, i16 299, i16 493, i16 663, i16 193, i16 120, i16 336, i16 -264, i16 -264, i16 -264, i16 -264, i16 90, i16 90, i16 90, i16 436, i16 482, i16 8, i16 647, i16 889, i16 -160, i16 373, i16 -278, i16 554, i16 598, i16 653, i16 697, i16 717, i16 557, i16 393, i16 602, i16 723, i16 808, i16 450, i16 655, i16 802, i16 908, i16 916, i16 864, i16 1041, i16 868, i16 337, i16 870, i16 503, i16 1104, i16 552, i16 641, i16 -157, i16 32, i16 862, i16 968, i16 1050, i16 1195, i16 603, i16 1048, i16 963, i16 433, i16 -210, i16 -201, i16 -89, i16 -9, i16 55, i16 159, i16 320, i16 389, i16 454, i16 522, i16 594, i16 608, i16 666, i16 848, i16 924, i16 957, i16 1067, i16 1075, i16 1140, i16 1154, i16 747, i16 1167, i16 1191, i16 1220, i16 1222, i16 1226, i16 1239, i16 1263, i16 1275, i16 1286, i16 1290, i16 1146, i16 1234, i16 1269, i16 1319, i16 1330, i16 1349, i16 1358, i16 1228, i16 1364, i16 1365, i16 1366, i16 1271, i16 1022, i16 1371, i16 1379, i16 1338, i16 1382, i16 320, i16 1387, i16 1388, i16 1389, i16 1392, i16 1393, i16 1394, i16 1293, i16 1308, i16 1353, i16 1342, i16 1344, i16 1348, i16 1356, i16 1228, i16 1353, i16 1353, i16 1361, i16 1399, i16 1422, i16 1301, i16 1369, i16 1357, i16 1359, i16 1328, i16 1374, i16 1375, i16 1331, i16 1403, i16 1395, i16 1400, i16 1407, i16 1408, i16 1409, i16 1372, i16 1381, i16 1383, i16 1355, i16 1390, i16 1391, i16 1444, i16 1350, i16 1443, i16 1445, i16 1360, i16 1363, i16 1447, i16 1370, i16 1384, i16 1396, i16 1424, i16 1413, i16 1425, i16 1429, i16 1430, i16 1432, i16 1433, i16 1434, i16 1398, i16 1402, i16 1441, i16 1442, i16 1436, i16 1480, i16 1489, i16 1405, i16 1410, i16 1493, i16 1495, i16 1477, i16 1498, i16 1500, i16 1501, i16 1504, i16 1485, i16 1502, i16 1503, i16 1505, i16 1488, i16 1492, i16 1494, i16 1506, i16 1510, i16 1509, i16 1512, i16 1513, i16 1514, i16 1515, i16 1420, i16 1517, i16 1446, i16 1454, i16 1520, i16 1463, i16 1476, i16 1478, i16 1482, i16 1483, i16 1486, i16 1484, i16 1487, i16 1547, i16 1449, i16 1450, i16 1490, i16 1519, i16 1521, i16 1524, i16 1491, i16 1557, i16 1522, i16 1526, i16 1527, i16 1530, i16 1528, i16 1559, i16 1562, i16 1573, i16 1574, i16 1585, i16 1586, i16 1587, i16 1575, i16 1568, i16 1570, i16 1572, i16 1576, i16 1579, i16 1565, i16 1566, i16 1578, i16 1580, i16 1582, i16 1589], align 16
@yy_default = local_unnamed_addr constant [535 x i16] [i16 1523, i16 1523, i16 1372, i16 1523, i16 1149, i16 1258, i16 1149, i16 1149, i16 1149, i16 1372, i16 1372, i16 1372, i16 1149, i16 1288, i16 1288, i16 1425, i16 1180, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1371, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1297, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1373, i16 1374, i16 1149, i16 1149, i16 1149, i16 1424, i16 1426, i16 1389, i16 1307, i16 1306, i16 1305, i16 1304, i16 1407, i16 1275, i16 1302, i16 1295, i16 1299, i16 1367, i16 1368, i16 1366, i16 1370, i16 1374, i16 1373, i16 1149, i16 1298, i16 1338, i16 1352, i16 1337, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1346, i16 1351, i16 1357, i16 1350, i16 1347, i16 1340, i16 1339, i16 1341, i16 1342, i16 1149, i16 1222, i16 1149, i16 1149, i16 1149, i16 1149, i16 1436, i16 1435, i16 1170, i16 1149, i16 1149, i16 1180, i16 1332, i16 1331, i16 1343, i16 1344, i16 1354, i16 1353, i16 1432, i16 1483, i16 1482, i16 1390, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1180, i16 1448, i16 1448, i16 1176, i16 1176, i16 1282, i16 1149, i16 1258, i16 1249, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1429, i16 1427, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1254, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1477, i16 1149, i16 1402, i16 1236, i16 1254, i16 1254, i16 1254, i16 1254, i16 1256, i16 1237, i16 1235, i16 1248, i16 1181, i16 1156, i16 1521, i16 1301, i16 1277, i16 1277, i16 1518, i16 1301, i16 1301, i16 1518, i16 1197, i16 1499, i16 1192, i16 1288, i16 1288, i16 1288, i16 1277, i16 1282, i16 1282, i16 1369, i16 1255, i16 1248, i16 1149, i16 1521, i16 1263, i16 1263, i16 1520, i16 1520, i16 1263, i16 1390, i16 1310, i16 1316, i16 1225, i16 1301, i16 1231, i16 1231, i16 1231, i16 1231, i16 1301, i16 1301, i16 1310, i16 1316, i16 1225, i16 1225, i16 1301, i16 1263, i16 1167, i16 1406, i16 1515, i16 1263, i16 1167, i16 1380, i16 1263, i16 1167, i16 1263, i16 1167, i16 1380, i16 1223, i16 1223, i16 1223, i16 1212, i16 1149, i16 1149, i16 1380, i16 1223, i16 1197, i16 1223, i16 1212, i16 1223, i16 1223, i16 1466, i16 1380, i16 1384, i16 1384, i16 1380, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1263, i16 1458, i16 1458, i16 1291, i16 1291, i16 1296, i16 1282, i16 1375, i16 1263, i16 1149, i16 1296, i16 1294, i16 1292, i16 1301, i16 1173, i16 1215, i16 1480, i16 1480, i16 1476, i16 1476, i16 1476, i16 1492, i16 1180, i16 1180, i16 1180, i16 1180, i16 1492, i16 1199, i16 1199, i16 1181, i16 1181, i16 1180, i16 1492, i16 1149, i16 1149, i16 1149, i16 1149, i16 1487, i16 1391, i16 1267, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1321, i16 1149, i16 1152, i16 1149, i16 1149, i16 1433, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1268, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1517, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1405, i16 1404, i16 1149, i16 1149, i16 1265, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1195, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1293, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1463, i16 1283, i16 1149, i16 1149, i16 1508, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1503, i16 1239, i16 1323, i16 1149, i16 1322, i16 1326, i16 1149, i16 1161, i16 1149, i16 1149], align 16
@yyFallback = local_unnamed_addr constant <{ [100 x i16], [81 x i16] }> <{ [100 x i16] [i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 0, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59], [81 x i16] zeroinitializer }>, align 16
@.str.479 = private unnamed_addr constant [22 x i8] c"parser stack overflow\00", align 1
@yyRuleInfoLhs = local_unnamed_addr constant [372 x i16] [i16 185, i16 185, i16 184, i16 186, i16 187, i16 187, i16 187, i16 187, i16 186, i16 186, i16 186, i16 186, i16 186, i16 191, i16 193, i16 195, i16 195, i16 194, i16 194, i16 192, i16 192, i16 199, i16 199, i16 201, i16 203, i16 203, i16 203, i16 204, i16 208, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 219, i16 219, i16 215, i16 215, i16 217, i16 217, i16 220, i16 220, i16 220, i16 220, i16 221, i16 221, i16 221, i16 221, i16 221, i16 218, i16 218, i16 222, i16 222, i16 222, i16 198, i16 224, i16 225, i16 225, i16 225, i16 225, i16 225, i16 228, i16 213, i16 213, i16 229, i16 229, i16 230, i16 230, i16 186, i16 232, i16 232, i16 186, i16 186, i16 186, i16 200, i16 200, i16 200, i16 234, i16 237, i16 237, i16 237, i16 235, i16 235, i16 247, i16 247, i16 238, i16 238, i16 238, i16 249, i16 239, i16 239, i16 239, i16 250, i16 250, i16 240, i16 240, i16 252, i16 252, i16 251, i16 251, i16 251, i16 251, i16 196, i16 196, i16 233, i16 233, i16 258, i16 258, i16 258, i16 258, i16 253, i16 253, i16 253, i16 253, i16 255, i16 255, i16 254, i16 254, i16 254, i16 256, i16 256, i16 244, i16 244, i16 226, i16 226, i16 214, i16 214, i16 214, i16 260, i16 260, i16 260, i16 242, i16 242, i16 243, i16 243, i16 245, i16 245, i16 245, i16 245, i16 186, i16 241, i16 241, i16 186, i16 262, i16 262, i16 262, i16 262, i16 186, i16 186, i16 265, i16 265, i16 265, i16 265, i16 263, i16 263, i16 264, i16 264, i16 259, i16 259, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 267, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 268, i16 268, i16 212, i16 269, i16 269, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 272, i16 272, i16 273, i16 273, i16 271, i16 271, i16 257, i16 248, i16 248, i16 270, i16 270, i16 186, i16 274, i16 274, i16 216, i16 216, i16 227, i16 227, i16 275, i16 275, i16 186, i16 186, i16 186, i16 276, i16 276, i16 186, i16 186, i16 186, i16 186, i16 186, i16 206, i16 207, i16 186, i16 278, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 283, i16 283, i16 279, i16 279, i16 285, i16 286, i16 286, i16 284, i16 284, i16 284, i16 284, i16 212, i16 212, i16 231, i16 231, i16 231, i16 186, i16 186, i16 186, i16 288, i16 288, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 289, i16 186, i16 261, i16 261, i16 236, i16 236, i16 291, i16 291, i16 292, i16 293, i16 293, i16 293, i16 293, i16 293, i16 293, i16 294, i16 294, i16 294, i16 298, i16 300, i16 300, i16 301, i16 301, i16 299, i16 299, i16 302, i16 302, i16 303, i16 303, i16 303, i16 246, i16 266, i16 266, i16 266, i16 297, i16 297, i16 296, i16 181, i16 182, i16 182, i16 183, i16 183, i16 183, i16 188, i16 188, i16 188, i16 190, i16 190, i16 186, i16 197, i16 197, i16 189, i16 189, i16 189, i16 203, i16 204, i16 205, i16 205, i16 202, i16 202, i16 210, i16 210, i16 210, i16 198, i16 223, i16 223, i16 224, i16 228, i16 230, i16 234, i16 235, i16 249, i16 250, i16 212, i16 267, i16 257, i16 277, i16 277, i16 277, i16 277, i16 277, i16 206, i16 282, i16 282, i16 285, i16 286, i16 287, i16 287, i16 290, i16 290, i16 261], align 16
@yyRuleInfoNRhs = local_unnamed_addr constant [372 x i8] c"\FF\FD\FF\FD\00\FF\FF\FF\FE\FE\FE\FD\FB\FA\FF\00\FD\FF\00\FB\FE\00\FE\FE\00\FC\FA\FE\00\00\FE\FD\FC\FC\FC\FD\FD\FB\FE\FC\FC\FF\FE\FD\FC\00\FF\00\FE\FE\FD\FD\FD\FE\FE\FF\FF\FE\FD\FE\00\FE\FE\00\FF\FE\F9\FB\FB\F6\00\00\FD\00\FE\FF\FF\FC\FE\00\F7\FC\FF\FD\FC\FF\FD\FF\FE\FF\F7\F6\FC\FB\FF\FF\00\00\FB\FD\FB\FE\00\00\FE\FE\00\F9\F7\F9\F9\00\FE\FF\FD\FF\FD\FB\FD\FF\FE\FD\FC\FE\00\00\FD\FE\FC\00\00\FD\FB\FD\FF\FF\00\FE\FE\00\00\FD\00\FE\00\FE\FC\FC\FA\00\FE\F8\FB\F9\FD\FB\F9\F9\00\F5\F8\FC\FE\FF\00\FD\FD\FF\FD\FF\FF\FD\FB\FF\FF\FF\FF\FD\FA\FB\FC\FA\FB\FF\FB\FD\FD\FD\FD\FD\FD\FD\FD\FE\FD\FB\FE\FD\FD\FC\FE\FE\FE\FF\FE\FB\FF\FE\FB\FD\FB\FB\FC\FB\FB\FC\FE\00\FF\00\00\FD\FF\00\FD\F4\FF\00\00\FD\FB\FD\00\FE\FC\FE\FD\FE\00\FD\FB\FA\FB\FA\FE\FE\FB\F5\FF\FE\00\FF\FF\FD\00\FE\FD\FE\FD\FD\FE\F8\F8\FA\FD\FC\FA\FF\FF\FF\FC\FA\FD\00\FE\FF\FD\FF\FD\FA\F9\FF\F8\FE\FD\FA\F8\FF\FD\FB\FB\FA\FC\FB\FF\FE\00\FD\FA\FF\FF\FE\FF\FE\FE\FE\00\FE\FE\FE\FF\FE\FE\FF\FF\FC\FE\FB\FF\FE\FF\FF\FE\FD\00\FF\FE\FF\00\FE\FC\FE\FF\FF\FF\FF\FF\FF\FF\FE\00\FE\FC\FE\FE\FD\FF\00\FF\FF\FF\FF\FE\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FD\FF\00\FF\00\00\FF\00", align 16
@.str.480 = private unnamed_addr constant [27 x i8] c"unknown table option: %.*s\00", align 1
@__const.yy_reduce.dest = private unnamed_addr constant %struct.SelectDest { i8 9, i32 0, i32 0, i32 0, i8* null, %struct.ExprList* null }, align 8
@.str.481 = private unnamed_addr constant [9 x i8] c"set list\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"near \22%T\22: syntax error\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.484 = private unnamed_addr constant [95 x i8] c"qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\00", align 1
@.str.485 = private unnamed_addr constant [84 x i8] c"the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.486 = private unnamed_addr constant [85 x i8] c"the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@aiClass = local_unnamed_addr constant [256 x i8] calign 16
@zKWText = constant [647 x i8] c"REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEAFTERENAMEANDEFERREDISTINCTAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPARTITIONDROPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY", align 16
@aKWHash = local_unnamed_addr constant [127 x i8] c"Tf\84Rr\1D\00\00[\00UH\005#V\0F\00*^6~\85\13\00\00\8A\00(\80\00\16h\00\09\00\00zP\00N\06\00Ac\91\00\86p\00\000\00d\18\00\11\00\1BF\17\1A\05<\8Cky\00IeG\8F=wJ\001\00\0B)\00n\00\00\00j\0Alq|\0E2{\00Y\00\12x\8E8\81\89XS%\1E}\00\00i3\82\7F\00\22\00\00,\00_&'\00\14-tZ", align 16
@aKWNext = local_unnamed_addr constant [145 x i8] c"\00\00\00\00\04\00+\00\00go\00\00\00\02\00\00\8D\00\00\00\0D\00\00\00\00\8B\00\00v4\00\00\87\0C\00\00>\00\88\00\83\00\00$\00\00\1CM\00\00\00\00;\00/\00\00\00\00\00\00\00\00\00\00E\00\00\00\00\00\90\03\00:\00\01K\00\00\00\1F\00\00\00\00\00\00@B?\00\00\00\00.\00\10\00s\00\00\00\00\00\00\00\00\00\00Qa\00\08\00m\15\07C\00O]u\00\00D\00\00`\007\00L\00\\ !9\19\00b\00\00W", align 16
@aKWLen = local_unnamed_addr constant [145 x i8] c"\07\07\05\04\06\04\05\03\06\07\03\06\06\07\07\03\08\02\06\05\04\04\03\0A\04\07\06\09\04\02\06\05\09\09\04\07\03\02\04\04\06\0B\06\02\07\05\05\09\06\0A\04\06\02\03\07\05\09\06\06\04\05\05\0A\06\05\07\04\05\07\06\07\07\06\05\07\03\07\04\07\06\0C\09\04\06\05\04\07\06\05\06\06\07\06\04\05\09\05\06\03\08\08\02\0D\02\02\04\06\06\08\05\11\0C\07\09\04\09\04\04\06\07\05\09\04\04\05\02\05\08\06\04\05\08\04\03\09\05\05\06\04\06\02\02\09\03\07", align 16
@aKWOffset = local_unnamed_addr constant [145 x i16] [i16 0, i16 2, i16 2, i16 8, i16 9, i16 14, i16 16, i16 20, i16 23, i16 25, i16 25, i16 29, i16 33, i16 36, i16 41, i16 46, i16 48, i16 53, i16 54, i16 59, i16 62, i16 65, i16 67, i16 69, i16 78, i16 81, i16 86, i16 90, i16 90, i16 94, i16 99, i16 101, i16 105, i16 111, i16 119, i16 123, i16 123, i16 123, i16 126, i16 129, i16 132, i16 137, i16 142, i16 146, i16 147, i16 152, i16 156, i16 160, i16 168, i16 174, i16 181, i16 184, i16 184, i16 187, i16 189, i16 195, i16 198, i16 206, i16 211, i16 216, i16 219, i16 222, i16 226, i16 236, i16 239, i16 244, i16 244, i16 248, i16 252, i16 259, i16 265, i16 271, i16 277, i16 277, i16 283, i16 284, i16 288, i16 295, i16 299, i16 306, i16 312, i16 324, i16 333, i16 335, i16 341, i16 346, i16 348, i16 355, i16 360, i16 365, i16 371, i16 377, i16 382, i16 388, i16 392, i16 395, i16 404, i16 408, i16 414, i16 416, i16 423, i16 424, i16 431, i16 433, i16 435, i16 444, i16 448, i16 454, i16 460, i16 468, i16 473, i16 473, i16 473, i16 489, i16 498, i16 501, i16 510, i16 513, i16 517, i16 522, i16 529, i16 534, i16 543, i16 547, i16 550, i16 555, i16 557, i16 561, i16 569, i16 575, i16 578, i16 583, i16 591, i16 591, i16 595, i16 604, i16 609, i16 614, i16 620, i16 623, i16 626, i16 629, i16 631, i16 636, i16 640], align 16
@aKWCode = local_unnamed_addr constant [145 x i8] c"ar\9E':)zC!\82>?/\02A\A0&\18\88\10t\9C\0B\81\9D[~\15\15+2R\0D\87^3\13Bw/\86\06\1Cqt\9FG\09\14u\94ED\80MY_(\91/\05t{y\03\19Qt\0E 0\95\\\90#\1Fv\9Ao\11c\08\8D}.\04\1EF\1B\7F\89P`\9B\93H\1Db,\07\8A-|\0F1$<\0A%tccUW\83X*T\A3ISV\8Ct\92\12\8FJ]\A2t\0CLKZ\84\8ENO\A1=\22@\85x", align 16
@sqlite3_complete.trans = internal unnamed_addr constant [8 x [8 x i8]] [[8 x i8] c"\01\00\02\03\04\02\02\02", [8 x i8] c"\01\01\02\03\04\02\02\02", [8 x i8] c"\01\02\02\02\02\02\02\02", [8 x i8] c"\01\03\03\02\04\02\02\02", [8 x i8] c"\01\04\02\02\02\04\05\02", [8 x i8] c"\06\05\05\05\05\05\05\05", [8 x i8] c"\06\06\05\05\05\05\05\07", [8 x i8] c"\01\07\05\05\05\05\05\05"], align 16
@.str.488 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.489 = private unnamed_addr constant [8 x i8] c"trigger\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.491 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.493 = private unnamed_addr constant [8 x i8] c"explain\00", align 1
@sqlite3_data_directory = local_unnamed_addr global i8* null, align 8
@sqlite3BuiltinFunctions = internal unnamed_addr global %struct.FuncDefHash zeroinitializer, align 8
@sqlite3_db_config.aFlagOp = internal unnamed_addr constant [16 x %struct.anon.22] [%struct.anon.22 { i32 1002, i32 16384 }, %struct.anon.22 { i32 1003, i32 262144 }, %struct.anon.22 { i32 1015, i32 -2147483648 }, %struct.anon.22 { i32 1004, i32 4194304 }, %struct.anon.22 { i32 1005, i32 65536 }, %struct.anon.22 { i32 1006, i32 2048 }, %struct.anon.22 { i32 1007, i32 8388608 }, %struct.anon.22 { i32 1008, i32 16777216 }, %struct.anon.22 { i32 1009, i32 33554432 }, %struct.anon.22 { i32 1010, i32 268435456 }, %struct.anon.22 { i32 1011, i32 134217729 }, %struct.anon.22 { i32 1012, i32 67108864 }, %struct.anon.22 { i32 1014, i32 536870912 }, %struct.anon.22 { i32 1013, i32 1073741824 }, %struct.anon.22 { i32 1016, i32 2 }, %struct.anon.22 { i32 1017, i32 128 }], align 16
@.str.494 = private unnamed_addr constant [21 x i8] c"unknown database: %s\00", align 1
@sqlite3_errmsg16.outOfMem = internal constant [14 x i16] [i16 111, i16 117, i16 116, i16 32, i16 111, i16 102, i16 32, i16 109, i16 101, i16 109, i16 111, i16 114, i16 121, i16 0], align 16
@sqlite3_errmsg16.misuse = internal constant [34 x i16] [i16 98, i16 97, i16 100, i16 32, i16 112, i16 97, i16 114, i16 97, i16 109, i16 101, i16 116, i16 101, i16 114, i16 32, i16 111, i16 114, i16 32, i16 111, i16 116, i16 104, i16 101, i16 114, i16 32, i16 65, i16 80, i16 73, i16 32, i16 109, i16 105, i16 115, i16 117, i16 115, i16 101, i16 0], align 16
@.str.495 = private unnamed_addr constant [68 x i8] c"unable to delete/modify collation sequence due to active statements\00", align 1
@aHardLimit = constant [12 x i32] [i32 1000000000, i32 1000000000, i32 2000, i32 1000, i32 500, i32 250000000, i32 127, i32 10, i32 50000, i32 32766, i32 1000, i32 8], align 16
@.str.496 = private unnamed_addr constant [6 x i8] c"RTRIM\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.498 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.499 = private unnamed_addr constant [28 x i8] c"no such table column: %s.%s\00", align 1
@.str.500 = private unnamed_addr constant [8 x i8] c"SQLITE_\00", align 1
@.str.501 = private unnamed_addr constant [85 x i8] c"2020-03-11 19:56:26 c5f96a085db9688a09793f52ce1ecf033c2e6e2e5873a19fe0fb374b242balt1\00", align 1
@_sqliteZone_ = local_unnamed_addr global %struct._malloc_zone_t* null, align 8
@top_of_stack = local_unnamed_addr global i64 0, align 8
@sqlite3Utf8Trans1 = internal unnamed_addr constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\00\01\02\03\00\01\00\00", align 16
@sqlite3PagerFilename.zFake = internal constant [8 x i8] zeroinitializer, align 1
@sqlite3VdbeSerialGet.aFlag = internal unnamed_addr constant [2 x i16] [i16 4112, i16 4098], align 2
@.str.502 = private unnamed_addr constant [19 x i8] c"a CHECK constraint\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"a generated column\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"an index\00", align 1
@.str.505 = private unnamed_addr constant [36 x i8] c"non-deterministic use of %s() in %s\00", align 1
@.str.506 = private unnamed_addr constant [35 x i8] c"sqlite3VdbeRealValue: NO FLAG SET\0A\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@sqlite3OpcodeName.azName = internal unnamed_addr constant [176 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.683, i32 0, i32 0)], align 16
@.str.508 = private unnamed_addr constant [10 x i8] c"Savepoint\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"AutoCommit\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"Transaction\00", align 1
@.str.511 = private unnamed_addr constant [11 x i8] c"SorterNext\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"Next\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"Checkpoint\00", align 1
@.str.515 = private unnamed_addr constant [12 x i8] c"JournalMode\00", align 1
@.str.516 = private unnamed_addr constant [7 x i8] c"Vacuum\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"VFilter\00", align 1
@.str.518 = private unnamed_addr constant [8 x i8] c"VUpdate\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"Gosub\00", align 1
@.str.521 = private unnamed_addr constant [14 x i8] c"InitCoroutine\00", align 1
@.str.522 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"MustBeInt\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Once\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"IfNot\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"IfNullRow\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"SeekLT\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"SeekLE\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"SeekGE\00", align 1
@.str.533 = private unnamed_addr constant [7 x i8] c"SeekGT\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"IfNotOpen\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"IfNoHope\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"NoConflict\00", align 1
@.str.537 = private unnamed_addr constant [9 x i8] c"NotFound\00", align 1
@.str.538 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"SeekRowid\00", align 1
@.str.540 = private unnamed_addr constant [10 x i8] c"NotExists\00", align 1
@.str.541 = private unnamed_addr constant [5 x i8] c"Last\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"IfSmaller\00", align 1
@.str.543 = private unnamed_addr constant [11 x i8] c"SorterSort\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"Sort\00", align 1
@.str.545 = private unnamed_addr constant [7 x i8] c"Rewind\00", align 1
@.str.546 = private unnamed_addr constant [6 x i8] c"IdxLE\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"IdxGT\00", align 1
@.str.548 = private unnamed_addr constant [6 x i8] c"IdxLT\00", align 1
@.str.549 = private unnamed_addr constant [6 x i8] c"IdxGE\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"RowSetRead\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.553 = private unnamed_addr constant [11 x i8] c"RowSetTest\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"Program\00", align 1
@.str.555 = private unnamed_addr constant [9 x i8] c"FkIfZero\00", align 1
@.str.556 = private unnamed_addr constant [6 x i8] c"IfPos\00", align 1
@.str.557 = private unnamed_addr constant [10 x i8] c"IfNotZero\00", align 1
@.str.558 = private unnamed_addr constant [7 x i8] c"IsNull\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"NotNull\00", align 1
@.str.560 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@.str.561 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@.str.562 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Le\00", align 1
@.str.564 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@.str.565 = private unnamed_addr constant [3 x i8] c"Ge\00", align 1
@.str.566 = private unnamed_addr constant [10 x i8] c"ElseNotEq\00", align 1
@.str.567 = private unnamed_addr constant [13 x i8] c"DecrJumpZero\00", align 1
@.str.568 = private unnamed_addr constant [11 x i8] c"IncrVacuum\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"VNext\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"PureFunc\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.573 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"EndCoroutine\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"HaltIfNull\00", align 1
@.str.576 = private unnamed_addr constant [5 x i8] c"Halt\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"Int64\00", align 1
@.str.579 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.581 = private unnamed_addr constant [9 x i8] c"SoftNull\00", align 1
@.str.582 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"Variable\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.585 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"SCopy\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"IntCopy\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"ResultRow\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"CollSeq\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"AddImm\00", align 1
@.str.591 = private unnamed_addr constant [13 x i8] c"RealAffinity\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"Cast\00", align 1
@.str.593 = private unnamed_addr constant [12 x i8] c"Permutation\00", align 1
@.str.594 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.595 = private unnamed_addr constant [7 x i8] c"IsTrue\00", align 1
@.str.596 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"Column\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"Affinity\00", align 1
@.str.599 = private unnamed_addr constant [11 x i8] c"MakeRecord\00", align 1
@.str.600 = private unnamed_addr constant [6 x i8] c"Count\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"ReadCookie\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"SetCookie\00", align 1
@.str.603 = private unnamed_addr constant [10 x i8] c"ReopenIdx\00", align 1
@.str.604 = private unnamed_addr constant [9 x i8] c"OpenRead\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"OpenWrite\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"OpenDup\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"OpenAutoindex\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"OpenEphemeral\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@.str.610 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"ShiftLeft\00", align 1
@.str.612 = private unnamed_addr constant [11 x i8] c"ShiftRight\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"Remainder\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"Concat\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"SorterOpen\00", align 1
@.str.620 = private unnamed_addr constant [7 x i8] c"BitNot\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"SequenceTest\00", align 1
@.str.622 = private unnamed_addr constant [11 x i8] c"OpenPseudo\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"String8\00", align 1
@.str.624 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"ColumnsUsed\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"SeekHit\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.628 = private unnamed_addr constant [9 x i8] c"NewRowid\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"ResetCount\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"SorterCompare\00", align 1
@.str.633 = private unnamed_addr constant [11 x i8] c"SorterData\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"RowData\00", align 1
@.str.635 = private unnamed_addr constant [6 x i8] c"Rowid\00", align 1
@.str.636 = private unnamed_addr constant [8 x i8] c"NullRow\00", align 1
@.str.637 = private unnamed_addr constant [8 x i8] c"SeekEnd\00", align 1
@.str.638 = private unnamed_addr constant [10 x i8] c"IdxInsert\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"SorterInsert\00", align 1
@.str.640 = private unnamed_addr constant [10 x i8] c"IdxDelete\00", align 1
@.str.641 = private unnamed_addr constant [13 x i8] c"DeferredSeek\00", align 1
@.str.642 = private unnamed_addr constant [9 x i8] c"IdxRowid\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"FinishSeek\00", align 1
@.str.644 = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.645 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.646 = private unnamed_addr constant [12 x i8] c"ResetSorter\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"CreateBtree\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"SqlExec\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"ParseSchema\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"LoadAnalysis\00", align 1
@.str.651 = private unnamed_addr constant [10 x i8] c"DropTable\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"DropIndex\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"DropTrigger\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"IntegrityCk\00", align 1
@.str.655 = private unnamed_addr constant [10 x i8] c"RowSetAdd\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@.str.657 = private unnamed_addr constant [10 x i8] c"FkCounter\00", align 1
@.str.658 = private unnamed_addr constant [5 x i8] c"Real\00", align 1
@.str.659 = private unnamed_addr constant [7 x i8] c"MemMax\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"OffsetLimit\00", align 1
@.str.661 = private unnamed_addr constant [11 x i8] c"AggInverse\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"AggStep\00", align 1
@.str.663 = private unnamed_addr constant [9 x i8] c"AggStep1\00", align 1
@.str.664 = private unnamed_addr constant [9 x i8] c"AggValue\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"AggFinal\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"Expire\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"CursorLock\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"CursorUnlock\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"TableLock\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"VBegin\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"VCreate\00", align 1
@.str.672 = private unnamed_addr constant [9 x i8] c"VDestroy\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"VOpen\00", align 1
@.str.674 = private unnamed_addr constant [8 x i8] c"VColumn\00", align 1
@.str.675 = private unnamed_addr constant [8 x i8] c"VRename\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"Pagecount\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"MaxPgcnt\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"Trace\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"CursorHint\00", align 1
@.str.680 = private unnamed_addr constant [11 x i8] c"ReleaseReg\00", align 1
@.str.681 = private unnamed_addr constant [5 x i8] c"Noop\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"Explain\00", align 1
@.str.683 = private unnamed_addr constant [10 x i8] c"Abortable\00", align 1
@sqlite3VdbeExec.azType = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0)], align 16
@.str.684 = private unnamed_addr constant [9 x i8] c"NOT NULL\00", align 1
@.str.685 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@.str.686 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"FOREIGN KEY\00", align 1
@.str.688 = private unnamed_addr constant [21 x i8] c"%s constraint failed\00", align 1
@.str.689 = private unnamed_addr constant [7 x i8] c"%z: %s\00", align 1
@.str.690 = private unnamed_addr constant [24 x i8] c"abort at %d in [%s]: %s\00", align 1
@sqlite3VdbeExec.aLTb = internal unnamed_addr constant [6 x i8] c"\01\00\00\01\01\00", align 1
@sqlite3VdbeExec.aEQb = internal unnamed_addr constant [6 x i8] c"\00\01\00\01\00\01", align 1
@sqlite3VdbeExec.aGTb = internal unnamed_addr constant [6 x i8] c"\01\00\01\00\00\01", align 1
@sqlite3VdbeExec.and_logic = internal unnamed_addr constant [9 x i8] c"\00\00\00\00\01\02\00\02\02", align 1
@sqlite3VdbeExec.or_logic = internal unnamed_addr constant [9 x i8] c"\00\01\02\01\01\01\02\01\02", align 1
@sqlite3VdbeExec.aFlag = internal unnamed_addr constant [2 x i16] [i16 16, i16 514], align 2
@.str.691 = private unnamed_addr constant [51 x i8] c"cannot open savepoint - SQL statements in progress\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"no such savepoint: %s\00", align 1
@.str.693 = private unnamed_addr constant [54 x i8] c"cannot release savepoint - SQL statements in progress\00", align 1
@.str.694 = private unnamed_addr constant [55 x i8] c"cannot commit transaction - SQL statements in progress\00", align 1
@.str.695 = private unnamed_addr constant [48 x i8] c"cannot start a transaction within a transaction\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"cannot rollback - no transaction is active\00", align 1
@.str.697 = private unnamed_addr constant [41 x i8] c"cannot commit - no transaction is active\00", align 1
@.str.698 = private unnamed_addr constant [28 x i8] c"database schema has changed\00", align 1
@.str.699 = private unnamed_addr constant [43 x i8] c"SELECT*FROM\22%w\22.%s WHERE %s ORDER BY rowid\00", align 1
@.str.700 = private unnamed_addr constant [37 x i8] c"too many levels of trigger recursion\00", align 1
@.str.701 = private unnamed_addr constant [52 x i8] c"cannot change %s wal mode from within a transaction\00", align 1
@.str.702 = private unnamed_addr constant [5 x i8] c"into\00", align 1
@.str.703 = private unnamed_addr constant [7 x i8] c"out of\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"database table is locked: %s\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"statement aborts at %d: [%s] %s\00", align 1
@sqlite3BtreeFakeValidCursor.fakeCursor = internal global i8 0, align 1
@.str.706 = private unnamed_addr constant [19 x i8] c"sqlite_temp_master\00", align 1
@.str.707 = private unnamed_addr constant [72 x i8] c"CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\00", align 1
@.str.708 = private unnamed_addr constant [24 x i8] c"unsupported file format\00", align 1
@.str.709 = private unnamed_addr constant [34 x i8] c"SELECT*FROM\22%w\22.%s ORDER BY rowid\00", align 1
@.str.710 = private unnamed_addr constant [8 x i8] c"create \00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"invalid rootpage\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"orphan index\00", align 1
@.str.713 = private unnamed_addr constant [30 x i8] c"database schema is locked: %s\00", align 1
@.str.714 = private unnamed_addr constant [19 x i8] c"statement too long\00", align 1
@.str.715 = private unnamed_addr constant [41 x i8] c"SELECT tbl,idx,stat FROM %Q.sqlite_stat1\00", align 1
@__const.sqlite3DefaultRowEst.aVal = private unnamed_addr constant [5 x i16] [i16 33, i16 32, i16 30, i16 28, i16 26], align 2
@.str.716 = private unnamed_addr constant [16 x i8] c"Main freelist: \00", align 1
@.str.717 = private unnamed_addr constant [45 x i8] c"max rootpage (%d) disagrees with header (%d)\00", align 1
@.str.718 = private unnamed_addr constant [55 x i8] c"incremental_vacuum enabled with a max rootpage of zero\00", align 1
@.str.719 = private unnamed_addr constant [22 x i8] c"Page %d is never used\00", align 1
@.str.720 = private unnamed_addr constant [34 x i8] c"Pointer map page %d is referenced\00", align 1
@sqlite3JournalModename.azModeName = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.725, i32 0, i32 0)], align 16
@.str.721 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.723 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.724 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.725 = private unnamed_addr constant [4 x i8] c"wal\00", align 1
@.str.726 = private unnamed_addr constant [40 x i8] c"cannot VACUUM from within a transaction\00", align 1
@.str.727 = private unnamed_addr constant [43 x i8] c"cannot VACUUM - SQL statements in progress\00", align 1
@.str.728 = private unnamed_addr constant [18 x i8] c"non-text filename\00", align 1
@.str.729 = private unnamed_addr constant [23 x i8] c"ATTACH %Q AS vacuum_db\00", align 1
@.str.730 = private unnamed_addr constant [27 x i8] c"output file already exists\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.732 = private unnamed_addr constant [108 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\00", align 1
@.str.733 = private unnamed_addr constant [54 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='index'\00", align 1
@.str.734 = private unnamed_addr constant [151 x i8] c"SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\22%w\22.'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\00", align 1
@.str.735 = private unnamed_addr constant [130 x i8] c"INSERT INTO vacuum_db.sqlite_master SELECT*FROM \22%w\22.sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\00", align 1
@sqlite3RunVacuum.aCopy = internal unnamed_addr constant [10 x i8] c"\01\01\03\00\05\00\06\00\08\00", align 1
@sqlite3OpcodeProperty = internal unnamed_addr constant [176 x i8] calign 16
@sqlite3VdbeMakeReady.azColName = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0)], align 16
@.str.736 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.737 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.738 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.739 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.740 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.741 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@.str.742 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@.str.743 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.744 = private unnamed_addr constant [8 x i8] c"notused\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.746 = private unnamed_addr constant [31 x i8] c"too many terms in %s BY clause\00", align 1
@.str.747 = private unnamed_addr constant [48 x i8] c"Expression tree is too large (maximum depth %d)\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"unsafe use of %s()\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.750 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.751 = private unnamed_addr constant [8 x i8] c"_ROWID_\00", align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"ROWID\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"REUSE SUBQUERY %d\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"%sSCALAR SUBQUERY %d\00", align 1
@.str.756 = private unnamed_addr constant [12 x i8] c"CORRELATED \00", align 1
@sqlite3VdbeGetOp.dummy = internal global %struct.VdbeOp zeroinitializer, align 8
@sqlite3ExprCodeTarget.zAff = internal constant [8 x i8] c"B\00C\00D\00E\00", align 1
@.str.757 = private unnamed_addr constant [30 x i8] c"generated column loop on \22%s\22\00", align 1
@.str.758 = private unnamed_addr constant [26 x i8] c"misuse of aggregate: %s()\00", align 1
@.str.759 = private unnamed_addr constant [23 x i8] c"unknown function: %s()\00", align 1
@.str.760 = private unnamed_addr constant [30 x i8] c"%d columns assigned %d values\00", align 1
@.str.761 = private unnamed_addr constant [50 x i8] c"RAISE() may only be used within a trigger-program\00", align 1
@.str.762 = private unnamed_addr constant [44 x i8] c"sub-select returns %d columns - expected %d\00", align 1
@.str.763 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@sqlite3LogEst.a = internal unnamed_addr constant [8 x i16] [i16 0, i16 2, i16 3, i16 5, i16 6, i16 7, i16 8, i16 9], align 16
@.str.764 = private unnamed_addr constant [9 x i8] c":memory:\00", align 1
@.str.767 = private unnamed_addr constant [7 x i8] c"nolock\00", align 1
@.str.768 = private unnamed_addr constant [10 x i8] c"immutable\00", align 1
@.str.769 = private unnamed_addr constant [6 x i8] c"%s.%z\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"access to %z is prohibited\00", align 1
@.str.771 = private unnamed_addr constant [13 x i8] c"no such view\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"no such table\00", align 1
@.str.773 = private unnamed_addr constant [30 x i8] c"view %s is circularly defined\00", align 1
@.str.774 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.775 = private unnamed_addr constant [50 x i8] c"cannot create a TEMP index on non-TEMP table \22%s\22\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"table %s may not be indexed\00", align 1
@.str.777 = private unnamed_addr constant [25 x i8] c"views may not be indexed\00", align 1
@.str.778 = private unnamed_addr constant [34 x i8] c"there is already a table named %s\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"index %s already exists\00", align 1
@.str.780 = private unnamed_addr constant [23 x i8] c"sqlite_autoindex_%s_%d\00", align 1
@.str.781 = private unnamed_addr constant [61 x i8] c"expressions prohibited in PRIMARY KEY and UNIQUE constraints\00", align 1
@.str.782 = private unnamed_addr constant [42 x i8] c"conflicting ON CONFLICT clauses specified\00", align 1
@.str.783 = private unnamed_addr constant [20 x i8] c"CREATE%s INDEX %.*s\00", align 1
@.str.784 = private unnamed_addr constant [8 x i8] c" UNIQUE\00", align 1
@.str.785 = private unnamed_addr constant [48 x i8] c"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\00", align 1
@.str.786 = private unnamed_addr constant [27 x i8] c"name='%q' AND type='index'\00", align 1
@.str.787 = private unnamed_addr constant [28 x i8] c"unsupported use of NULLS %s\00", align 1
@.str.788 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.789 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"corrupt database\00", align 1
@.str.791 = private unnamed_addr constant [20 x i8] c"unknown database %T\00", align 1
@.str.792 = private unnamed_addr constant [46 x i8] c"%s %T cannot reference objects in database %s\00", align 1
@.str.793 = private unnamed_addr constant [24 x i8] c"%s cannot use variables\00", align 1
@.str.794 = private unnamed_addr constant [42 x i8] c"object name reserved for internal use: %s\00", align 1
@.str.795 = private unnamed_addr constant [70 x i8] c"unable to open a temporary database file for storing temporary tables\00", align 1
@.str.796 = private unnamed_addr constant [11 x i8] c"index '%q'\00", align 1
@.str.797 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.798 = private unnamed_addr constant [31 x i8] c"no such collation sequence: %s\00", align 1
@.str.799 = private unnamed_addr constant [45 x i8] c"foreign key mismatch - \22%w\22 referencing \22%w\22\00", align 1
@.str.800 = private unnamed_addr constant [9 x i8] c"%s.rowid\00", align 1
@.str.801 = private unnamed_addr constant [9 x i8] c"unopened\00", align 1
@.str.802 = private unnamed_addr constant [6 x i8] c"dylib\00", align 1
@.str.803 = private unnamed_addr constant [23 x i8] c"sqlite3_extension_init\00", align 1
@.str.804 = private unnamed_addr constant [35 x i8] c"unable to open shared library [%s]\00", align 1
@.str.806 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.807 = private unnamed_addr constant [6 x i8] c"_init\00", align 1
@.str.808 = private unnamed_addr constant [43 x i8] c"no entry point [%s] in shared library [%s]\00", align 1
@sqlite3Apis = external dso_local constant %struct.sqlite3_api_routines, align 8
@.str.809 = private unnamed_addr constant [32 x i8] c"error during initialization: %s\00", align 1
@sqlite3LogEstAdd.x = internal unnamed_addr constant [32 x i8] c"\0A\0A\09\09\08\08\07\07\07\06\06\06\05\05\05\04\04\04\04\03\03\03\03\03\03\02\02\02\02\02\02\02", align 16
@.str.810 = private unnamed_addr constant [46 x i8] c"all VALUES must have the same number of terms\00", align 1
@.str.811 = private unnamed_addr constant [82 x i8] c"SELECTs to the left and right of %s do not have the same number of result columns\00", align 1
@.str.812 = private unnamed_addr constant [36 x i8] c"too many FROM clause terms, max: %d\00", align 1
@.str.813 = private unnamed_addr constant [36 x i8] c"a JOIN clause is required before %s\00", align 1
@.str.814 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.815 = private unnamed_addr constant [6 x i8] c"USING\00", align 1
@.str.816 = private unnamed_addr constant [8 x i8] c"%.*z:%u\00", align 1
@.str.817 = private unnamed_addr constant [12 x i8] c"subquery_%u\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"no such index: %s\00", align 1
@.str.819 = private unnamed_addr constant [40 x i8] c"expected %d columns for '%s' but got %d\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"CO-ROUTINE %u\00", align 1
@.str.821 = private unnamed_addr constant [15 x i8] c"MATERIALIZE %u\00", align 1
@.str.822 = private unnamed_addr constant [9 x i8] c"DISTINCT\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"GROUP BY\00", align 1
@.str.824 = private unnamed_addr constant [23 x i8] c"RIGHT PART OF ORDER BY\00", align 1
@.str.825 = private unnamed_addr constant [41 x i8] c"cannot INSERT into generated column \22%s\22\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"table %S has no column named %s\00", align 1
@.str.827 = private unnamed_addr constant [52 x i8] c"table %S has %d columns but %d values were supplied\00", align 1
@.str.828 = private unnamed_addr constant [25 x i8] c"%d values for %d columns\00", align 1
@.str.829 = private unnamed_addr constant [21 x i8] c"cannot UPSERT a view\00", align 1
@.str.830 = private unnamed_addr constant [14 x i8] c"rows inserted\00", align 1
@.str.831 = private unnamed_addr constant [29 x i8] c"table %s may not be modified\00", align 1
@.str.832 = private unnamed_addr constant [38 x i8] c"cannot modify %s because it is a view\00", align 1
@.str.833 = private unnamed_addr constant [71 x i8] c"ON CONFLICT clause does not match any PRIMARY KEY or UNIQUE constraint\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"rows deleted\00", align 1
@.str.835 = private unnamed_addr constant [36 x i8] c"cannot UPDATE generated column \22%s\22\00", align 1
@.str.836 = private unnamed_addr constant [19 x i8] c"no such column: %s\00", align 1
@.str.837 = private unnamed_addr constant [13 x i8] c"rows updated\00", align 1
@.str.838 = private unnamed_addr constant [47 x i8] c"USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR\00", align 1
@.str.839 = private unnamed_addr constant [31 x i8] c"USING INDEX %s FOR IN-OPERATOR\00", align 1
@.str.840 = private unnamed_addr constant [23 x i8] c"REUSE LIST SUBQUERY %d\00", align 1
@.str.841 = private unnamed_addr constant [19 x i8] c"%sLIST SUBQUERY %d\00", align 1
@.str.842 = private unnamed_addr constant [28 x i8] c"at most %d tables in a join\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"SCAN CONSTANT ROW\00", align 1
@.str.844 = private unnamed_addr constant [36 x i8] c"too many arguments on %s() - max %d\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1
@.str.846 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c" SUBQUERY %u\00", align 1
@.str.848 = private unnamed_addr constant [10 x i8] c" TABLE %s\00", align 1
@.str.849 = private unnamed_addr constant [7 x i8] c" AS %s\00", align 1
@.str.850 = private unnamed_addr constant [12 x i8] c"PRIMARY KEY\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"AUTOMATIC PARTIAL COVERING INDEX\00", align 1
@.str.852 = private unnamed_addr constant [25 x i8] c"AUTOMATIC COVERING INDEX\00", align 1
@.str.853 = private unnamed_addr constant [18 x i8] c"COVERING INDEX %s\00", align 1
@.str.854 = private unnamed_addr constant [9 x i8] c"INDEX %s\00", align 1
@.str.855 = private unnamed_addr constant [8 x i8] c" USING \00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.857 = private unnamed_addr constant [14 x i8] c">? AND rowid<\00", align 1
@.str.858 = private unnamed_addr constant [38 x i8] c" USING INTEGER PRIMARY KEY (rowid%s?)\00", align 1
@__const.sqlite3WhereCodeOneLoopStart.aMoveOp = private unnamed_addr constant [4 x i8] c"\19\17\16\18", align 1
@sqlite3WhereCodeOneLoopStart.aStartOp = internal unnamed_addr constant [8 x i8] c"\00\00%!\19\16\18\17", align 1
@sqlite3WhereCodeOneLoopStart.aEndOp = internal unnamed_addr constant [4 x i8] c")'&(", align 1
@.str.859 = private unnamed_addr constant [15 x i8] c"MULTI-INDEX OR\00", align 1
@.str.860 = private unnamed_addr constant [9 x i8] c"INDEX %d\00", align 1
@sqlite3WhereCodeOneLoopStart.aStep = internal unnamed_addr constant [2 x i8] c"\05\04", align 1
@sqlite3WhereCodeOneLoopStart.aStart = internal unnamed_addr constant [2 x i8] c"%!", align 1
@.str.861 = private unnamed_addr constant [71 x i8] c"RANGE with offset PRECEDING/FOLLOWING requires one ORDER BY expression\00", align 1
@.str.862 = private unnamed_addr constant [63 x i8] c"FILTER clause may only be used with aggregate window functions\00", align 1
@__const.sqlite3WindowUpdate.aUp = private unnamed_addr constant [8 x %struct.WindowUpdate] [%struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @row_numberName, i32 0, i32 0), i32 76, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @dense_rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @percent_rankName, i32 0, i32 0), i32 92, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @cume_distName, i32 0, i32 0), i32 92, i32 86, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ntileName, i32 0, i32 0), i32 76, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @leadName, i32 0, i32 0), i32 76, i32 90, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @lagName, i32 0, i32 0), i32 76, i32 90, i32 85 }], align 16
@.str.863 = private unnamed_addr constant [9 x i8] c"ROLLBACK\00", align 1
@.str.864 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.865 = private unnamed_addr constant [8 x i8] c"RELEASE\00", align 1
@.str.866 = private unnamed_addr constant [41 x i8] c"temporary table name must be unqualified\00", align 1
@sqlite3StartTable.aCode = internal unnamed_addr constant [4 x i8] c"\02\04\08\06", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"table %T already exists\00", align 1
@.str.868 = private unnamed_addr constant [35 x i8] c"there is already an index named %s\00", align 1
@.str.869 = private unnamed_addr constant [16 x i8] c"sqlite_sequence\00", align 1
@sqlite3StartTable.nullRow = internal constant [6 x i8] c"\06\00\00\00\00\00", align 1
@.str.870 = private unnamed_addr constant [50 x i8] c"AUTOINCREMENT not allowed on WITHOUT ROWID tables\00", align 1
@.str.871 = private unnamed_addr constant [32 x i8] c"PRIMARY KEY missing on table %s\00", align 1
@.str.872 = private unnamed_addr constant [44 x i8] c"must have at least one non-generated column\00", align 1
@.str.873 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.874 = private unnamed_addr constant [5 x i8] c"VIEW\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"CREATE %s %.*s\00", align 1
@.str.876 = private unnamed_addr constant [87 x i8] c"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\00", align 1
@.str.877 = private unnamed_addr constant [42 x i8] c"CREATE TABLE %Q.sqlite_sequence(name,seq)\00", align 1
@.str.878 = private unnamed_addr constant [34 x i8] c"tbl_name='%q' AND type!='trigger'\00", align 1
@.str.879 = private unnamed_addr constant [23 x i8] c"too many columns on %s\00", align 1
@.str.880 = private unnamed_addr constant [26 x i8] c"duplicate column name: %s\00", align 1
@.str.881 = private unnamed_addr constant [45 x i8] c"default value of column [%s] is not constant\00", align 1
@.str.882 = private unnamed_addr constant [41 x i8] c"cannot use DEFAULT on a generated column\00", align 1
@.str.883 = private unnamed_addr constant [41 x i8] c"table \22%s\22 has more than one primary key\00", align 1
@.str.884 = private unnamed_addr constant [56 x i8] c"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\00", align 1
@.str.885 = private unnamed_addr constant [63 x i8] c"foreign key on %s should reference only one column of table %T\00", align 1
@.str.886 = private unnamed_addr constant [94 x i8] c"number of columns in foreign key does not match the number of columns in the referenced table\00", align 1
@.str.887 = private unnamed_addr constant [46 x i8] c"unknown column \22%s\22 in foreign key definition\00", align 1
@.str.890 = private unnamed_addr constant [31 x i8] c"error in generated column \22%s\22\00", align 1
@.str.891 = private unnamed_addr constant [28 x i8] c"table %s may not be dropped\00", align 1
@.str.892 = private unnamed_addr constant [34 x i8] c"use DROP TABLE to delete table %s\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"use DROP VIEW to delete view %s\00", align 1
@.str.894 = private unnamed_addr constant [14 x i8] c"sqlite_stat%d\00", align 1
@.str.895 = private unnamed_addr constant [45 x i8] c"DELETE FROM %Q.sqlite_sequence WHERE name=%Q\00", align 1
@.str.896 = private unnamed_addr constant [56 x i8] c"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\00", align 1
@.str.897 = private unnamed_addr constant [51 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"parameters are not allowed in views\00", align 1
@.str.899 = private unnamed_addr constant [34 x i8] c"too many terms in compound SELECT\00", align 1
@sqlite3JoinType.zKeyText = internal unnamed_addr constant [34 x i8] c"naturaleftouterightfullinnercross\00", align 16
@sqlite3JoinType.aKeyword = internal unnamed_addr constant [7 x %struct.anon.23] [%struct.anon.23 { i8 0, i8 7, i8 4 }, %struct.anon.23 { i8 6, i8 4, i8 40 }, %struct.anon.23 { i8 10, i8 5, i8 32 }, %struct.anon.23 { i8 14, i8 5, i8 48 }, %struct.anon.23 { i8 19, i8 4, i8 56 }, %struct.anon.23 { i8 23, i8 5, i8 1 }, %struct.anon.23 { i8 28, i8 5, i8 3 }], align 16
@.str.900 = private unnamed_addr constant [44 x i8] c"unknown or unsupported join type: %T %T%s%T\00", align 1
@.str.901 = private unnamed_addr constant [55 x i8] c"RIGHT and FULL OUTER JOINs are not currently supported\00", align 1
@.str.902 = private unnamed_addr constant [23 x i8] c"too many columns in %s\00", align 1
@.str.903 = private unnamed_addr constant [43 x i8] c"variable number must be between ?1 and ?%d\00", align 1
@.str.904 = private unnamed_addr constant [23 x i8] c"too many SQL variables\00", align 1
@.str.905 = private unnamed_addr constant [34 x i8] c"too many arguments on function %T\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"DISTINCT is not supported for window functions\00", align 1
@.str.907 = private unnamed_addr constant [38 x i8] c"syntax error after column name \22%.*s\22\00", align 1
@.str.908 = private unnamed_addr constant [18 x i8] c"no such index: %S\00", align 1
@.str.909 = private unnamed_addr constant [73 x i8] c"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\00", align 1
@.str.910 = private unnamed_addr constant [49 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='index'\00", align 1
@.str.911 = private unnamed_addr constant [4 x i8] c"-%T\00", align 1
@.str.912 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.914 = private unnamed_addr constant [25 x i8] c"not a writable directory\00", align 1
@.str.915 = private unnamed_addr constant [30 x i8] c"failed to set lock proxy file\00", align 1
@.str.916 = private unnamed_addr constant [53 x i8] c"Safety level may not be changed inside a transaction\00", align 1
@.str.917 = private unnamed_addr constant [8 x i8] c"issisii\00", align 1
@.str.918 = private unnamed_addr constant [7 x i8] c"issisi\00", align 1
@.str.919 = private unnamed_addr constant [5 x i8] c"iisX\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"isiX\00", align 1
@.str.921 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.922 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@__const.sqlite3Pragma.azOrigin = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.921, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0)], align 16
@.str.923 = private unnamed_addr constant [6 x i8] c"isisi\00", align 1
@.str.924 = private unnamed_addr constant [4 x i8] c"iss\00", align 1
@.str.925 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.926 = private unnamed_addr constant [9 x i8] c"iissssss\00", align 1
@.str.927 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"siX\00", align 1
@.str.929 = private unnamed_addr constant [24 x i8] c"*** in database %s ***\0A\00", align 1
@.str.930 = private unnamed_addr constant [20 x i8] c"NULL value in %s.%s\00", align 1
@.str.931 = private unnamed_addr constant [30 x i8] c"CHECK constraint failed in %s\00", align 1
@.str.932 = private unnamed_addr constant [5 x i8] c"row \00", align 1
@.str.933 = private unnamed_addr constant [21 x i8] c" missing from index \00", align 1
@.str.934 = private unnamed_addr constant [27 x i8] c"non-unique entry in index \00", align 1
@.str.935 = private unnamed_addr constant [29 x i8] c"wrong # of entries in index \00", align 1
@.str.937 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@sqlite3Pragma.encnames = internal unnamed_addr constant [9 x %struct.EncName] [%struct.EncName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.938, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.939, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.941, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.942, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.943, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.944, i32 0, i32 0), i8 0 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.945, i32 0, i32 0), i8 0 }, %struct.EncName zeroinitializer], align 16
@.str.938 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.939 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"UTF-16le\00", align 1
@.str.941 = private unnamed_addr constant [9 x i8] c"UTF-16be\00", align 1
@.str.942 = private unnamed_addr constant [8 x i8] c"UTF16le\00", align 1
@.str.943 = private unnamed_addr constant [8 x i8] c"UTF16be\00", align 1
@.str.944 = private unnamed_addr constant [7 x i8] c"UTF-16\00", align 1
@.str.945 = private unnamed_addr constant [6 x i8] c"UTF16\00", align 1
@.str.946 = private unnamed_addr constant [25 x i8] c"unsupported encoding: %s\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.948 = private unnamed_addr constant [18 x i8] c"ANALYZE \22%w\22.\22%w\22\00", align 1
@.str.949 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.950 = private unnamed_addr constant [64 x i8] c"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\00", align 1
@.str.951 = private unnamed_addr constant [29 x i8] c"type='trigger' AND name='%q'\00", align 1
@.str.952 = private unnamed_addr constant [46 x i8] c"temporary trigger may not have qualified name\00", align 1
@.str.953 = private unnamed_addr constant [26 x i8] c"trigger %T already exists\00", align 1
@.str.954 = private unnamed_addr constant [38 x i8] c"cannot create trigger on system table\00", align 1
@.str.955 = private unnamed_addr constant [37 x i8] c"cannot create %s trigger on view: %S\00", align 1
@.str.956 = private unnamed_addr constant [7 x i8] c"BEFORE\00", align 1
@.str.957 = private unnamed_addr constant [6 x i8] c"AFTER\00", align 1
@.str.958 = private unnamed_addr constant [46 x i8] c"cannot create INSTEAD OF trigger on table: %S\00", align 1
@.str.959 = private unnamed_addr constant [20 x i8] c"no such trigger: %S\00", align 1
@sqlite3Attach.attach_func = external dso_local constant %struct.FuncDef, align 8
@.str.960 = private unnamed_addr constant [14 x i8] c"sqlite_attach\00", align 1
@sqlite3Detach.detach_func = external dso_local constant %struct.FuncDef, align 8
@.str.961 = private unnamed_addr constant [14 x i8] c"sqlite_detach\00", align 1
@.str.962 = private unnamed_addr constant [46 x i8] c"unable to identify the object to be reindexed\00", align 1
@.str.963 = private unnamed_addr constant [59 x i8] c"there is already another table or index with this name: %s\00", align 1
@.str.964 = private unnamed_addr constant [27 x i8] c"view %s may not be altered\00", align 1
@.str.965 = private unnamed_addr constant [173 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\00", align 1
@.str.966 = private unnamed_addr constant [294 x i8] c"UPDATE %Q.%s SET tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\00", align 1
@.str.967 = private unnamed_addr constant [58 x i8] c"UPDATE \22%w\22.sqlite_sequence set name = %Q WHERE name = %Q\00", align 1
@.str.968 = private unnamed_addr constant [254 x i8] c"UPDATE sqlite_temp_master SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, 1), tbl_name = CASE WHEN tbl_name=%Q COLLATE nocase AND           sqlite_rename_test(%Q, sql, type, name, 1) THEN %Q ELSE tbl_name END WHERE type IN ('view', 'trigger')\00", align 1
@.str.969 = private unnamed_addr constant [32 x i8] c"Cannot add a PRIMARY KEY column\00", align 1
@.str.970 = private unnamed_addr constant [27 x i8] c"Cannot add a UNIQUE column\00", align 1
@.str.971 = private unnamed_addr constant [59 x i8] c"Cannot add a REFERENCES column with non-NULL default value\00", align 1
@.str.972 = private unnamed_addr constant [53 x i8] c"Cannot add a NOT NULL column with default value NULL\00", align 1
@.str.973 = private unnamed_addr constant [46 x i8] c"Cannot add a column with non-constant default\00", align 1
@.str.974 = private unnamed_addr constant [27 x i8] c"cannot add a STORED column\00", align 1
@.str.975 = private unnamed_addr constant [109 x i8] c"UPDATE \22%w\22.%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\00", align 1
@.str.976 = private unnamed_addr constant [30 x i8] c"Cannot add a column to a view\00", align 1
@.str.977 = private unnamed_addr constant [19 x i8] c"sqlite_altertab_%s\00", align 1
@.str.978 = private unnamed_addr constant [207 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'  AND (type != 'index' OR tbl_name = %Q) AND sql NOT LIKE 'create virtual%%'\00", align 1
@.str.979 = private unnamed_addr constant [120 x i8] c"UPDATE temp.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, 1) WHERE type IN ('trigger', 'view')\00", align 1
@.str.980 = private unnamed_addr constant [30 x i8] c"duplicate WITH table name: %s\00", align 1
@.str.981 = private unnamed_addr constant [17 x i8] c"PARTITION clause\00", align 1
@.str.982 = private unnamed_addr constant [16 x i8] c"ORDER BY clause\00", align 1
@.str.983 = private unnamed_addr constant [20 x i8] c"frame specification\00", align 1
@.str.984 = private unnamed_addr constant [33 x i8] c"cannot override %s of window: %s\00", align 1
@.str.985 = private unnamed_addr constant [32 x i8] c"unsupported frame specification\00", align 1
@.str.986 = private unnamed_addr constant [27 x i8] c"unrecognized token: \22%.*s\22\00", align 1
@.str.987 = private unnamed_addr constant [11 x i8] c"%s in \22%s\22\00", align 1
@sqlite3RegisterBuiltinFunctions.aBuiltinFunc = external dso_local global [62 x %struct.FuncDef], align 16
@.str.988 = private unnamed_addr constant [20 x i8] c"implies_nonnull_row\00", align 1
@.str.989 = private unnamed_addr constant [13 x i8] c"expr_compare\00", align 1
@.str.990 = private unnamed_addr constant [18 x i8] c"expr_implies_expr\00", align 1
@.str.991 = private unnamed_addr constant [15 x i8] c"load_extension\00", align 1
@.str.992 = private unnamed_addr constant [26 x i8] c"sqlite_compileoption_used\00", align 1
@.str.993 = private unnamed_addr constant [25 x i8] c"sqlite_compileoption_get\00", align 1
@.str.994 = private unnamed_addr constant [9 x i8] c"unlikely\00", align 1
@.str.995 = private unnamed_addr constant [11 x i8] c"likelihood\00", align 1
@.str.996 = private unnamed_addr constant [7 x i8] c"likely\00", align 1
@.str.997 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.998 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.1000 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.1001 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1002 = private unnamed_addr constant [6 x i8] c"instr\00", align 1
@.str.1003 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1004 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.1006 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.1007 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.1008 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.1009 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.1010 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.1011 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.1012 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.1013 = private unnamed_addr constant [11 x i8] c"randomblob\00", align 1
@.str.1014 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.1015 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.1016 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.1017 = private unnamed_addr constant [11 x i8] c"sqlite_log\00", align 1
@.str.1018 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.1019 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.1020 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.1021 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.1022 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.1023 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.1024 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.1025 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.1026 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.1027 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.1028 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.1029 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.1031 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@sqlite3AlterFunctions.aAlterTableFuncs = external dso_local global [3 x %struct.FuncDef], align 16
@.str.1032 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.1033 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.1034 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@sqlite3WindowFunctions.aWindowFuncs = external dso_local global [15 x %struct.FuncDef], align 16
@sqlite3RegisterDateTimeFunctions_aDateTimeFuncs = external dso_local global [8 x %struct.FuncDef], align 16
@.str.1035 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1038 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.1039 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1040 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.1041 = private unnamed_addr constant [18 x i8] c"current_timestamp\00", align 1
@.str.1042 = private unnamed_addr constant [13 x i8] c"current_date\00", align 1
@sqlite3MemSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_mem_methods, align 8
@.str.1043 = private unnamed_addr constant [38 x i8] c"failed to allocate %u bytes of memory\00", align 1
@.str.1044 = private unnamed_addr constant [36 x i8] c"failed memory resize %u to %u bytes\00", align 1
@.str.1045 = private unnamed_addr constant [8 x i8] c"hw.ncpu\00", align 1
@.str.1046 = private unnamed_addr constant [12 x i8] c"Sqlite_Heap\00", align 1
@sqlite3PCacheSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_pcache_methods2, align 8
@.str.1047 = private unnamed_addr constant [68 x i8] c"unable to close due to unfinalized statements or unfinished backups\00", align 1
@sqlite3ErrStr.aMsg = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1048, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1049, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1050, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1051, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1052, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1054, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1055, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1056, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1057, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1058, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1059, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1060, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1061, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1062, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1063, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1064, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1065, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1066, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1068, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1069, i32 0, i32 0)], align 16
@.str.1048 = private unnamed_addr constant [13 x i8] c"not an error\00", align 1
@.str.1049 = private unnamed_addr constant [16 x i8] c"SQL logic error\00", align 1
@.str.1050 = private unnamed_addr constant [25 x i8] c"access permission denied\00", align 1
@.str.1051 = private unnamed_addr constant [14 x i8] c"query aborted\00", align 1
@.str.1052 = private unnamed_addr constant [19 x i8] c"database is locked\00", align 1
@.str.1053 = private unnamed_addr constant [25 x i8] c"database table is locked\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"attempt to write a readonly database\00", align 1
@.str.1055 = private unnamed_addr constant [12 x i8] c"interrupted\00", align 1
@.str.1056 = private unnamed_addr constant [15 x i8] c"disk I/O error\00", align 1
@.str.1057 = private unnamed_addr constant [33 x i8] c"database disk image is malformed\00", align 1
@.str.1058 = private unnamed_addr constant [18 x i8] c"unknown operation\00", align 1
@.str.1059 = private unnamed_addr constant [25 x i8] c"database or disk is full\00", align 1
@.str.1060 = private unnamed_addr constant [29 x i8] c"unable to open database file\00", align 1
@.str.1061 = private unnamed_addr constant [17 x i8] c"locking protocol\00", align 1
@.str.1062 = private unnamed_addr constant [18 x i8] c"constraint failed\00", align 1
@.str.1063 = private unnamed_addr constant [18 x i8] c"datatype mismatch\00", align 1
@.str.1064 = private unnamed_addr constant [34 x i8] c"bad parameter or other API misuse\00", align 1
@.str.1065 = private unnamed_addr constant [21 x i8] c"authorization denied\00", align 1
@.str.1066 = private unnamed_addr constant [26 x i8] c"column index out of range\00", align 1
@.str.1067 = private unnamed_addr constant [23 x i8] c"file is not a database\00", align 1
@.str.1068 = private unnamed_addr constant [21 x i8] c"notification message\00", align 1
@.str.1069 = private unnamed_addr constant [16 x i8] c"warning message\00", align 1
@.str.1070 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1071 = private unnamed_addr constant [22 x i8] c"abort due to ROLLBACK\00", align 1
@.str.1072 = private unnamed_addr constant [22 x i8] c"another row available\00", align 1
@.str.1073 = private unnamed_addr constant [23 x i8] c"no more rows available\00", align 1
@.str.1074 = private unnamed_addr constant [63 x i8] c"unable to delete/modify user-function due to active statements\00", align 1
@.str.1075 = private unnamed_addr constant [51 x i8] c"unable to use function %s in the requested context\00", align 1
@.str.1076 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.1077 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.1078 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"invalid uri authority: %.*s\00", align 1
@.str.1080 = private unnamed_addr constant [4 x i8] c"vfs\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@sqlite3ParseUri.aCacheMode = internal unnamed_addr constant [3 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1082, i32 0, i32 0), i32 131072 }, %struct.OpenMode { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1083, i32 0, i32 0), i32 262144 }, %struct.OpenMode zeroinitializer], align 16
@.str.1082 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.1083 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.1084 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@sqlite3ParseUri.aOpenMode = internal unnamed_addr constant [5 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1085, i32 0, i32 0), i32 1 }, %struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1086, i32 0, i32 0), i32 2 }, %struct.OpenMode { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1087, i32 0, i32 0), i32 6 }, %struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 128 }, %struct.OpenMode zeroinitializer], align 16
@.str.1085 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.1086 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.1087 = private unnamed_addr constant [4 x i8] c"rwc\00", align 1
@.str.1088 = private unnamed_addr constant [20 x i8] c"no such %s mode: %s\00", align 1
@.str.1089 = private unnamed_addr constant [24 x i8] c"%s mode not allowed: %s\00", align 1
@.str.1090 = private unnamed_addr constant [16 x i8] c"no such vfs: %s\00", align 1
@.str.1091 = private unnamed_addr constant [6 x i8] c"MATCH\00", align 1
@.str.1092 = private unnamed_addr constant [39 x i8] c"automatic extension loading failed: %s\00", align 1
@.str.1093 = private unnamed_addr constant [20 x i8] c"database corruption\00", align 1
@.str.1094 = private unnamed_addr constant [25 x i8] c"%s at line %d of [%.10s]\00", align 1
@.str.1095 = private unnamed_addr constant [7 x i8] c"misuse\00", align 1
@.str.1096 = private unnamed_addr constant [17 x i8] c"cannot open file\00", align 1
@sqlite3SavedPrng = internal unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@sqlite3azCompileOpt = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1097, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1098, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1099, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1100, i32 0, i32 0)], align 16
@.str.1097 = private unnamed_addr constant [22 x i8] c"COMPILER=clang-11.0.0\00", align 1
@.str.1098 = private unnamed_addr constant [11 x i8] c"OMIT_TRACE\00", align 1
@.str.1099 = private unnamed_addr constant [18 x i8] c"OMIT_VIRTUALTABLE\00", align 1
@.str.1100 = private unnamed_addr constant [13 x i8] c"THREADSAFE=1\00", align 1
@switch.table.multiSelectOrderBy = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)], align 8
@switch.table.sqlite3Pragma.1201 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i64 0, i64 0)], align 8

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @my_assert(i1, i64, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @dbg() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRealify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @printTypeOf(i8*, i32, %struct.Vdbe*, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeIntegerAffinity(%struct.sqlite3_value*) #0

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3AtoF(i8* readonly %z, double* nocapture %pResult, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  store double 0.000000e+00, double* %pResult, align 8, !tbaa !6
  %cmp = icmp eq i32 %length, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i8 %enc to i32
  %cmp1 = icmp eq i8 %enc, 1
  br i1 %cmp1, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %and = and i32 %length, -2
  %sub = sub nsw i32 3, %conv
  %cmp5540 = icmp slt i32 %sub, %and
  br i1 %cmp5540, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %and to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %i.0541 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %z, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp8 = icmp eq i8 %2, 0
  br i1 %cmp8, label %for.inc, label %for.end.loopexit.split.loop.exit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add i64 %indvars.iv, 2
  %add = add nsw i32 %i.0541, 2
  %cmp5 = icmp slt i64 %indvars.iv.next, %1
  br i1 %cmp5, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit, %for.inc, %if.else
  %i.0.lcssa563 = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit ], [ %add, %for.inc ]
  %4 = phi i32 [ 1, %if.else ], [ -100, %for.end.loopexit.split.loop.exit ], [ 1, %for.inc ]
  %xor = xor i32 %i.0.lcssa563, 1
  %and17 = and i32 %conv, 1
  %idx.ext18 = zext i32 %and17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %z, i64 %idx.ext18
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.end
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %if.end ]
  %eType.1 = phi i32 [ %4, %for.end ], [ 1, %if.end ]
  %incr.0 = phi i64 [ 2, %for.end ], [ 1, %if.end ]
  %z.addr.0 = phi i8* [ %add.ptr19, %for.end ], [ %z, %if.end ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %z, i64 %idx.ext.pn
  %cmp21538 = icmp ult i8* %z.addr.0, %zEnd.0
  br i1 %cmp21538, label %land.rhs23, label %cleanup

land.rhs23:                                       ; preds = %while.body, %if.end20
  %z.addr.1539 = phi i8* [ %add.ptr30, %while.body ], [ %z.addr.0, %if.end20 ]
  %5 = load i8, i8* %z.addr.1539, align 1, !tbaa !10
  %idxprom24 = zext i8 %5 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom24
  %6 = load i8, i8* %arrayidx25, align 1, !tbaa !10
  %7 = and i8 %6, 1
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end34, label %while.body

while.body:                                       ; preds = %land.rhs23
  %add.ptr30 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  %cmp21 = icmp ult i8* %add.ptr30, %zEnd.0
  br i1 %cmp21, label %land.rhs23, label %cleanup

if.end34:                                         ; preds = %land.rhs23
  switch i8 %5, label %if.end49 [
    i8 45, label %if.then38
    i8 43, label %if.then45
  ]

if.then38:                                        ; preds = %if.end34
  %add.ptr40 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.then45:                                        ; preds = %if.end34
  %add.ptr47 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.end49:                                         ; preds = %if.then45, %if.then38, %if.end34
  %sign.0 = phi i32 [ -1, %if.then38 ], [ 1, %if.then45 ], [ 1, %if.end34 ]
  %z.addr.2 = phi i8* [ %add.ptr40, %if.then38 ], [ %add.ptr47, %if.then45 ], [ %z.addr.1539, %if.end34 ]
  %cmp51529 = icmp ult i8* %z.addr.2, %zEnd.0
  br i1 %cmp51529, label %land.rhs53, label %if.then201

land.rhs53:                                       ; preds = %if.end85, %if.end49
  %z.addr.3533 = phi i8* [ %z.addr.5, %if.end85 ], [ %z.addr.2, %if.end49 ]
  %nDigit.0532 = phi i32 [ %inc, %if.end85 ], [ 0, %if.end49 ]
  %d.0531 = phi i32 [ %d.2, %if.end85 ], [ 0, %if.end49 ]
  %s.0530 = phi i64 [ %add64, %if.end85 ], [ 0, %if.end49 ]
  %8 = load i8, i8* %z.addr.3533, align 1, !tbaa !10
  %idxprom54 = zext i8 %8 to i64
  %9 = add nsw i64 %idxprom54, -48
  %tobool58 = icmp ult i64 %9, 10
  br i1 %tobool58, label %while.body60, label %if.end90

while.body60:                                     ; preds = %land.rhs53
  %mul = mul nsw i64 %s.0530, 10
  %conv61 = sext i8 %8 to i64
  %sub62 = add i64 %mul, -48
  %add64 = add i64 %sub62, %conv61
  %add.ptr66 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %inc = add nuw nsw i32 %nDigit.0532, 1
  %cmp67 = icmp sgt i64 %add64, 922337203685477578
  %cmp71522 = icmp ult i8* %add.ptr66, %zEnd.0
  %or.cond547 = and i1 %cmp67, %cmp71522
  br i1 %or.cond547, label %land.rhs73, label %if.end85

land.rhs73:                                       ; preds = %while.body80, %while.body60
  %z.addr.4524 = phi i8* [ %add.ptr82, %while.body80 ], [ %add.ptr66, %while.body60 ]
  %d.1523 = phi i32 [ %inc83, %while.body80 ], [ %d.0531, %while.body60 ]
  %10 = load i8, i8* %z.addr.4524, align 1, !tbaa !10
  %idxprom74 = zext i8 %10 to i64
  %11 = add nsw i64 %idxprom74, -48
  %tobool78 = icmp ult i64 %11, 10
  br i1 %tobool78, label %while.body80, label %if.end85

while.body80:                                     ; preds = %land.rhs73
  %add.ptr82 = getelementptr inbounds i8, i8* %z.addr.4524, i64 %incr.0
  %inc83 = add nsw i32 %d.1523, 1
  %cmp71 = icmp ult i8* %add.ptr82, %zEnd.0
  br i1 %cmp71, label %land.rhs73, label %if.end85

if.end85:                                         ; preds = %while.body80, %land.rhs73, %while.body60
  %d.2 = phi i32 [ %d.0531, %while.body60 ], [ %inc83, %while.body80 ], [ %d.1523, %land.rhs73 ]
  %z.addr.5 = phi i8* [ %add.ptr66, %while.body60 ], [ %add.ptr82, %while.body80 ], [ %z.addr.4524, %land.rhs73 ]
  %cmp51 = icmp ult i8* %z.addr.5, %zEnd.0
  br i1 %cmp51, label %land.rhs53, label %do_atof_calc

if.end90:                                         ; preds = %land.rhs53
  %cmp92 = icmp eq i8 %8, 46
  br i1 %cmp92, label %if.then94, label %if.end122

if.then94:                                        ; preds = %if.end90
  %inc97 = add nuw nsw i32 %eType.1, 1
  %z.addr.6508 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %cmp99509 = icmp ult i8* %z.addr.6508, %zEnd.0
  br i1 %cmp99509, label %land.rhs101, label %if.end122

land.rhs101:                                      ; preds = %if.end118, %if.then94
  %z.addr.6513 = phi i8* [ %z.addr.6, %if.end118 ], [ %z.addr.6508, %if.then94 ]
  %nDigit.1512 = phi i32 [ %nDigit.2, %if.end118 ], [ %nDigit.0532, %if.then94 ]
  %d.3511 = phi i32 [ %d.4, %if.end118 ], [ %d.0531, %if.then94 ]
  %s.1510 = phi i64 [ %s.2, %if.end118 ], [ %s.0530, %if.then94 ]
  %12 = load i8, i8* %z.addr.6513, align 1, !tbaa !10
  %idxprom102 = zext i8 %12 to i64
  %13 = add nsw i64 %idxprom102, -48
  %tobool106 = icmp ult i64 %13, 10
  br i1 %tobool106, label %while.body108, label %if.end122

while.body108:                                    ; preds = %land.rhs101
  %cmp109 = icmp slt i64 %s.1510, 922337203685477579
  br i1 %cmp109, label %if.then111, label %if.end118

if.then111:                                       ; preds = %while.body108
  %mul112 = mul nsw i64 %s.1510, 10
  %conv113 = sext i8 %12 to i64
  %sub114 = add i64 %mul112, -48
  %add116 = add i64 %sub114, %conv113
  %dec = add nsw i32 %d.3511, -1
  %inc117 = add nsw i32 %nDigit.1512, 1
  br label %if.end118

if.end118:                                        ; preds = %if.then111, %while.body108
  %s.2 = phi i64 [ %add116, %if.then111 ], [ %s.1510, %while.body108 ]
  %d.4 = phi i32 [ %dec, %if.then111 ], [ %d.3511, %while.body108 ]
  %nDigit.2 = phi i32 [ %inc117, %if.then111 ], [ %nDigit.1512, %while.body108 ]
  %z.addr.6 = getelementptr inbounds i8, i8* %z.addr.6513, i64 %incr.0
  %cmp99 = icmp ult i8* %z.addr.6, %zEnd.0
  br i1 %cmp99, label %land.rhs101, label %if.end122

if.end122:                                        ; preds = %if.end118, %land.rhs101, %if.then94, %if.end90
  %s.3 = phi i64 [ %s.0530, %if.end90 ], [ %s.0530, %if.then94 ], [ %s.2, %if.end118 ], [ %s.1510, %land.rhs101 ]
  %d.5 = phi i32 [ %d.0531, %if.end90 ], [ %d.0531, %if.then94 ], [ %d.4, %if.end118 ], [ %d.3511, %land.rhs101 ]
  %nDigit.3 = phi i32 [ %nDigit.0532, %if.end90 ], [ %nDigit.0532, %if.then94 ], [ %nDigit.2, %if.end118 ], [ %nDigit.1512, %land.rhs101 ]
  %eType.2 = phi i32 [ %eType.1, %if.end90 ], [ %inc97, %if.then94 ], [ %inc97, %land.rhs101 ], [ %inc97, %if.end118 ]
  %z.addr.7 = phi i8* [ %z.addr.3533, %if.end90 ], [ %z.addr.6508, %if.then94 ], [ %z.addr.6, %if.end118 ], [ %z.addr.6513, %land.rhs101 ]
  %cmp123 = icmp ult i8* %z.addr.7, %zEnd.0
  br i1 %cmp123, label %if.end126, label %do_atof_calc

if.end126:                                        ; preds = %if.end122
  %14 = load i8, i8* %z.addr.7, align 1, !tbaa !10
  switch i8 %14, label %if.end176 [
    i8 101, label %if.then133
    i8 69, label %if.then133
  ]

if.then133:                                       ; preds = %if.end126, %if.end126
  %add.ptr135 = getelementptr inbounds i8, i8* %z.addr.7, i64 %incr.0
  %inc136 = add nsw i32 %eType.2, 1
  %cmp137 = icmp ult i8* %add.ptr135, %zEnd.0
  br i1 %cmp137, label %if.end140, label %do_atof_calc

if.end140:                                        ; preds = %if.then133
  %15 = load i8, i8* %add.ptr135, align 1, !tbaa !10
  switch i8 %15, label %if.end155 [
    i8 45, label %if.then144
    i8 43, label %if.then151
  ]

if.then144:                                       ; preds = %if.end140
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.then151:                                       ; preds = %if.end140
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.end155:                                        ; preds = %if.then151, %if.then144, %if.end140
  %esign.0 = phi i32 [ -1, %if.then144 ], [ 1, %if.then151 ], [ 1, %if.end140 ]
  %z.addr.8 = phi i8* [ %add.ptr146, %if.then144 ], [ %add.ptr153, %if.then151 ], [ %add.ptr135, %if.end140 ]
  %cmp157498 = icmp ult i8* %z.addr.8, %zEnd.0
  br i1 %cmp157498, label %land.rhs159.preheader, label %if.end176

land.rhs159.preheader:                            ; preds = %if.end155
  %16 = load i8, i8* %z.addr.8, align 1, !tbaa !10
  %idxprom160622 = zext i8 %16 to i64
  %17 = add nsw i64 %idxprom160622, -48
  %tobool164623 = icmp ult i64 %17, 10
  br i1 %tobool164623, label %while.body166, label %if.end176

land.rhs159:                                      ; preds = %while.body166
  %18 = load i8, i8* %add.ptr174, align 1, !tbaa !10
  %idxprom160 = zext i8 %18 to i64
  %19 = add nsw i64 %idxprom160, -48
  %tobool164 = icmp ult i64 %19, 10
  br i1 %tobool164, label %while.body166, label %if.end176

while.body166:                                    ; preds = %land.rhs159, %land.rhs159.preheader
  %20 = phi i8 [ %18, %land.rhs159 ], [ %16, %land.rhs159.preheader ]
  %e.0499625 = phi i32 [ %cond, %land.rhs159 ], [ 0, %land.rhs159.preheader ]
  %z.addr.9501624 = phi i8* [ %add.ptr174, %land.rhs159 ], [ %z.addr.8, %land.rhs159.preheader ]
  %cmp167 = icmp slt i32 %e.0499625, 10000
  %mul169 = mul nsw i32 %e.0499625, 10
  %conv170 = sext i8 %20 to i32
  %sub171 = add i32 %mul169, -48
  %add172 = add i32 %sub171, %conv170
  %cond = select i1 %cmp167, i32 %add172, i32 10000
  %add.ptr174 = getelementptr inbounds i8, i8* %z.addr.9501624, i64 %incr.0
  %cmp157 = icmp ult i8* %add.ptr174, %zEnd.0
  br i1 %cmp157, label %land.rhs159, label %if.end176

if.end176:                                        ; preds = %while.body166, %land.rhs159, %land.rhs159.preheader, %if.end155, %if.end126
  %esign.1 = phi i32 [ 1, %if.end126 ], [ %esign.0, %if.end155 ], [ %esign.0, %land.rhs159.preheader ], [ %esign.0, %while.body166 ], [ %esign.0, %land.rhs159 ]
  %e.1 = phi i32 [ 0, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ %cond, %while.body166 ], [ %cond, %land.rhs159 ]
  %eValid.1 = phi i32 [ 1, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ 1, %while.body166 ], [ 1, %land.rhs159 ]
  %eType.3 = phi i32 [ %eType.2, %if.end126 ], [ %inc136, %if.end155 ], [ %inc136, %land.rhs159.preheader ], [ %inc136, %while.body166 ], [ %inc136, %land.rhs159 ]
  %z.addr.10 = phi i8* [ %z.addr.7, %if.end126 ], [ %z.addr.8, %if.end155 ], [ %z.addr.8, %land.rhs159.preheader ], [ %add.ptr174, %while.body166 ], [ %add.ptr174, %land.rhs159 ]
  %cmp178494 = icmp ult i8* %z.addr.10, %zEnd.0
  br i1 %cmp178494, label %land.rhs180, label %do_atof_calc

land.rhs180:                                      ; preds = %while.body187, %if.end176
  %z.addr.11495 = phi i8* [ %add.ptr189, %while.body187 ], [ %z.addr.10, %if.end176 ]
  %21 = load i8, i8* %z.addr.11495, align 1, !tbaa !10
  %idxprom181 = zext i8 %21 to i64
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !10
  %23 = and i8 %22, 1
  %tobool185 = icmp eq i8 %23, 0
  br i1 %tobool185, label %do_atof_calc, label %while.body187

while.body187:                                    ; preds = %land.rhs180
  %add.ptr189 = getelementptr inbounds i8, i8* %z.addr.11495, i64 %incr.0
  %cmp178 = icmp ult i8* %add.ptr189, %zEnd.0
  br i1 %cmp178, label %land.rhs180, label %do_atof_calc

do_atof_calc:                                     ; preds = %while.body187, %land.rhs180, %if.end176, %if.then133, %if.end122, %if.end85
  %s.4 = phi i64 [ %s.3, %if.end122 ], [ %s.3, %if.then133 ], [ %s.3, %if.end176 ], [ %s.3, %land.rhs180 ], [ %s.3, %while.body187 ], [ %add64, %if.end85 ]
  %d.6 = phi i32 [ %d.5, %if.end122 ], [ %d.5, %if.then133 ], [ %d.5, %if.end176 ], [ %d.5, %land.rhs180 ], [ %d.5, %while.body187 ], [ %d.2, %if.end85 ]
  %esign.2 = phi i32 [ 1, %if.end122 ], [ 1, %if.then133 ], [ %esign.1, %if.end176 ], [ %esign.1, %land.rhs180 ], [ %esign.1, %while.body187 ], [ 1, %if.end85 ]
  %e.2 = phi i32 [ 0, %if.end122 ], [ 0, %if.then133 ], [ %e.1, %if.end176 ], [ %e.1, %land.rhs180 ], [ %e.1, %while.body187 ], [ 0, %if.end85 ]
  %eValid.2 = phi i32 [ 1, %if.end122 ], [ 0, %if.then133 ], [ %eValid.1, %if.end176 ], [ %eValid.1, %land.rhs180 ], [ %eValid.1, %while.body187 ], [ 1, %if.end85 ]
  %nDigit.4 = phi i32 [ %nDigit.3, %if.end122 ], [ %nDigit.3, %if.then133 ], [ %nDigit.3, %if.end176 ], [ %nDigit.3, %land.rhs180 ], [ %nDigit.3, %while.body187 ], [ %inc, %if.end85 ]
  %eType.4 = phi i32 [ %eType.2, %if.end122 ], [ %inc136, %if.then133 ], [ %eType.3, %if.end176 ], [ %eType.3, %land.rhs180 ], [ %eType.3, %while.body187 ], [ %eType.1, %if.end85 ]
  %z.addr.12 = phi i8* [ %z.addr.7, %if.end122 ], [ %add.ptr135, %if.then133 ], [ %z.addr.10, %if.end176 ], [ %add.ptr189, %while.body187 ], [ %z.addr.11495, %land.rhs180 ], [ %z.addr.5, %if.end85 ]
  %mul191 = mul nsw i32 %e.2, %esign.2
  %add192 = add nsw i32 %mul191, %d.6
  %cmp193 = icmp slt i32 %add192, 0
  %mul196 = sub nsw i32 0, %add192
  %e.3 = select i1 %cmp193, i32 %mul196, i32 %add192
  %cmp199 = icmp eq i64 %s.4, 0
  br i1 %cmp199, label %if.then201, label %while.cond206.preheader

while.cond206.preheader:                          ; preds = %do_atof_calc
  %cmp207489 = icmp sgt i32 %e.3, 0
  br i1 %cmp207489, label %while.body209.lr.ph, label %while.end225

while.body209.lr.ph:                              ; preds = %while.cond206.preheader
  br i1 %cmp193, label %while.body209.us, label %while.body209

while.body209.us:                                 ; preds = %if.end222.us, %while.body209.lr.ph
  %e.4491.us = phi i32 [ %dec224.us, %if.end222.us ], [ %mul196, %while.body209.lr.ph ]
  %s.5490.us = phi i64 [ %div.us, %if.end222.us ], [ %s.4, %while.body209.lr.ph ]
  %rem.us = srem i64 %s.5490.us, 10
  %div.us = sdiv i64 %s.5490.us, 10
  %cmp219.us = icmp eq i64 %rem.us, 0
  br i1 %cmp219.us, label %if.end222.us, label %if.else237

if.end222.us:                                     ; preds = %while.body209.us
  %dec224.us = add nsw i32 %e.4491.us, -1
  %cmp207.us = icmp sgt i32 %e.4491.us, 1
  br i1 %cmp207.us, label %while.body209.us, label %while.end225

if.then201:                                       ; preds = %do_atof_calc, %if.end49
  %z.addr.12585 = phi i8* [ %z.addr.12, %do_atof_calc ], [ %z.addr.2, %if.end49 ]
  %eType.4583 = phi i32 [ %eType.4, %do_atof_calc ], [ %eType.1, %if.end49 ]
  %nDigit.4581 = phi i32 [ %nDigit.4, %do_atof_calc ], [ 0, %if.end49 ]
  %eValid.2579 = phi i32 [ %eValid.2, %do_atof_calc ], [ 1, %if.end49 ]
  %cmp202 = icmp slt i32 %sign.0, 0
  %cond204 = select i1 %cmp202, double -0.000000e+00, double 0.000000e+00
  br label %if.end286

while.body209:                                    ; preds = %if.end216, %while.body209.lr.ph
  %e.4491 = phi i32 [ %dec224, %if.end216 ], [ %add192, %while.body209.lr.ph ]
  %s.5490 = phi i64 [ %mul217, %if.end216 ], [ %s.4, %while.body209.lr.ph ]
  %cmp213 = icmp sgt i64 %s.5490, 922337203685477579
  br i1 %cmp213, label %if.else237, label %if.end216

if.end216:                                        ; preds = %while.body209
  %mul217 = mul nsw i64 %s.5490, 10
  %dec224 = add nsw i32 %e.4491, -1
  %cmp207 = icmp sgt i32 %e.4491, 1
  br i1 %cmp207, label %while.body209, label %while.end225

while.end225:                                     ; preds = %if.end216, %if.end222.us, %while.cond206.preheader
  %s.5.lcssa = phi i64 [ %s.4, %while.cond206.preheader ], [ %div.us, %if.end222.us ], [ %mul217, %if.end216 ]
  %e.4.lcssa = phi i32 [ %e.3, %while.cond206.preheader ], [ 0, %if.end222.us ], [ 0, %if.end216 ]
  %cmp226 = icmp slt i32 %sign.0, 0
  %sub229 = sub nsw i64 0, %s.5.lcssa
  %cond232 = select i1 %cmp226, i64 %sub229, i64 %s.5.lcssa
  %cmp233 = icmp eq i32 %e.4.lcssa, 0
  br i1 %cmp233, label %if.then235, label %if.else270

if.then235:                                       ; preds = %while.end225
  %conv236 = sitofp i64 %cond232 to double
  br label %if.end286

if.else237:                                       ; preds = %while.body209, %while.body209.us
  %s.5.lcssa483 = phi i64 [ %s.5490.us, %while.body209.us ], [ %s.5490, %while.body209 ]
  %e.4.lcssa481 = phi i32 [ %e.4491.us, %while.body209.us ], [ %e.4491, %while.body209 ]
  %cmp226472 = icmp slt i32 %sign.0, 0
  %sub229473 = sub nsw i64 0, %s.5.lcssa483
  %cond232474 = select i1 %cmp226472, i64 %sub229473, i64 %s.5.lcssa483
  %cmp238 = icmp sgt i32 %e.4.lcssa481, 307
  br i1 %cmp238, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.else237
  %cmp241 = icmp slt i32 %e.4.lcssa481, 342
  br i1 %cmp241, label %if.then243, label %if.else258

if.then243:                                       ; preds = %if.then240
  %sub244 = add nsw i32 %e.4.lcssa481, -308
  %and13.i = and i32 %sub244, 1
  %tobool14.i = icmp eq i32 %and13.i, 0
  %spec.select15.i = select i1 %tobool14.i, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i = ashr i32 %sub244, 1
  %cmp17.i = icmp eq i32 %shr16.i, 0
  br i1 %cmp17.i, label %sqlite3Pow10.exit, label %if.end2.i

if.end2.i:                                        ; preds = %if.end2.i, %if.then243
  %shr20.i = phi i32 [ %shr.i, %if.end2.i ], [ %shr16.i, %if.then243 ]
  %spec.select19.i = phi x86_fp80 [ %spec.select.i, %if.end2.i ], [ %spec.select15.i, %if.then243 ]
  %x.018.i = phi x86_fp80 [ %mul3.i, %if.end2.i ], [ 0xK4002A000000000000000, %if.then243 ]
  %mul3.i = fmul x86_fp80 %x.018.i, %x.018.i
  %and.i = and i32 %shr20.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %mul.i = fmul x86_fp80 %spec.select19.i, %mul3.i
  %spec.select.i = select i1 %tobool.i, x86_fp80 %spec.select19.i, x86_fp80 %mul.i
  %shr.i = ashr i32 %shr20.i, 1
  %cmp.i = icmp eq i32 %shr.i, 0
  br i1 %cmp.i, label %sqlite3Pow10.exit, label %if.end2.i

sqlite3Pow10.exit:                                ; preds = %if.end2.i, %if.then243
  %spec.select.lcssa.i = phi x86_fp80 [ %spec.select15.i, %if.then243 ], [ %spec.select.i, %if.end2.i ]
  %conv248 = sitofp i64 %cond232474 to x86_fp80
  br i1 %cmp193, label %if.then247, label %if.else252

if.then247:                                       ; preds = %sqlite3Pow10.exit
  %div249 = fdiv x86_fp80 %conv248, %spec.select.lcssa.i
  %conv250 = fptrunc x86_fp80 %div249 to double
  %div251 = fdiv double %conv250, 1.000000e+308
  br label %if.end286

if.else252:                                       ; preds = %sqlite3Pow10.exit
  %mul254 = fmul x86_fp80 %spec.select.lcssa.i, %conv248
  %conv255 = fptrunc x86_fp80 %mul254 to double
  %mul256 = fmul double %conv255, 1.000000e+308
  br label %if.end286

if.else258:                                       ; preds = %if.then240
  br i1 %cmp193, label %if.then261, label %if.else264

if.then261:                                       ; preds = %if.else258
  %conv262 = sitofp i64 %cond232474 to double
  %mul263 = fmul double %conv262, 0.000000e+00
  br label %if.end286

if.else264:                                       ; preds = %if.else258
  %conv265 = sitofp i64 %cond232474 to float
  %mul266 = fmul float %conv265, 0x7FF0000000000000
  %conv267 = fpext float %mul266 to double
  br label %if.end286

if.else270:                                       ; preds = %if.else237, %while.end225
  %e.4482 = phi i32 [ %e.4.lcssa481, %if.else237 ], [ %e.4.lcssa, %while.end225 ]
  %cond232476479 = phi i64 [ %cond232474, %if.else237 ], [ %cond232, %while.end225 ]
  %and13.i454 = and i32 %e.4482, 1
  %tobool14.i455 = icmp eq i32 %and13.i454, 0
  %spec.select15.i456 = select i1 %tobool14.i455, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i457 = ashr i32 %e.4482, 1
  %cmp17.i458 = icmp eq i32 %shr16.i457, 0
  br i1 %cmp17.i458, label %sqlite3Pow10.exit471, label %if.end2.i469

if.end2.i469:                                     ; preds = %if.end2.i469, %if.else270
  %shr20.i459 = phi i32 [ %shr.i467, %if.end2.i469 ], [ %shr16.i457, %if.else270 ]
  %spec.select19.i460 = phi x86_fp80 [ %spec.select.i466, %if.end2.i469 ], [ %spec.select15.i456, %if.else270 ]
  %x.018.i461 = phi x86_fp80 [ %mul3.i462, %if.end2.i469 ], [ 0xK4002A000000000000000, %if.else270 ]
  %mul3.i462 = fmul x86_fp80 %x.018.i461, %x.018.i461
  %and.i463 = and i32 %shr20.i459, 1
  %tobool.i464 = icmp eq i32 %and.i463, 0
  %mul.i465 = fmul x86_fp80 %spec.select19.i460, %mul3.i462
  %spec.select.i466 = select i1 %tobool.i464, x86_fp80 %spec.select19.i460, x86_fp80 %mul.i465
  %shr.i467 = ashr i32 %shr20.i459, 1
  %cmp.i468 = icmp eq i32 %shr.i467, 0
  br i1 %cmp.i468, label %sqlite3Pow10.exit471, label %if.end2.i469

sqlite3Pow10.exit471:                             ; preds = %if.end2.i469, %if.else270
  %spec.select.lcssa.i470 = phi x86_fp80 [ %spec.select15.i456, %if.else270 ], [ %spec.select.i466, %if.end2.i469 ]
  %conv276 = sitofp i64 %cond232476479 to x86_fp80
  br i1 %cmp193, label %if.then275, label %if.else279

if.then275:                                       ; preds = %sqlite3Pow10.exit471
  %div277 = fdiv x86_fp80 %conv276, %spec.select.lcssa.i470
  br label %if.end283

if.else279:                                       ; preds = %sqlite3Pow10.exit471
  %mul281 = fmul x86_fp80 %spec.select.lcssa.i470, %conv276
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  %result.1.in = phi x86_fp80 [ %div277, %if.then275 ], [ %mul281, %if.else279 ]
  %result.1 = fptrunc x86_fp80 %result.1.in to double
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.else264, %if.then261, %if.else252, %if.then247, %if.then235, %if.then201
  %z.addr.12584 = phi i8* [ %z.addr.12585, %if.then201 ], [ %z.addr.12, %if.then235 ], [ %z.addr.12, %if.then261 ], [ %z.addr.12, %if.else264 ], [ %z.addr.12, %if.end283 ], [ %z.addr.12, %if.then247 ], [ %z.addr.12, %if.else252 ]
  %eType.4582 = phi i32 [ %eType.4583, %if.then201 ], [ %eType.4, %if.then235 ], [ %eType.4, %if.then261 ], [ %eType.4, %if.else264 ], [ %eType.4, %if.end283 ], [ %eType.4, %if.then247 ], [ %eType.4, %if.else252 ]
  %nDigit.4580 = phi i32 [ %nDigit.4581, %if.then201 ], [ %nDigit.4, %if.then235 ], [ %nDigit.4, %if.then261 ], [ %nDigit.4, %if.else264 ], [ %nDigit.4, %if.end283 ], [ %nDigit.4, %if.then247 ], [ %nDigit.4, %if.else252 ]
  %eValid.2578 = phi i32 [ %eValid.2579, %if.then201 ], [ %eValid.2, %if.then235 ], [ %eValid.2, %if.then261 ], [ %eValid.2, %if.else264 ], [ %eValid.2, %if.end283 ], [ %eValid.2, %if.then247 ], [ %eValid.2, %if.else252 ]
  %result.2 = phi double [ %cond204, %if.then201 ], [ %conv236, %if.then235 ], [ %mul263, %if.then261 ], [ %conv267, %if.else264 ], [ %result.1, %if.end283 ], [ %div251, %if.then247 ], [ %mul256, %if.else252 ]
  store double %result.2, double* %pResult, align 8, !tbaa !6
  %cmp287 = icmp eq i8* %z.addr.12584, %zEnd.0
  %cmp289 = icmp sgt i32 %nDigit.4580, 0
  %or.cond = and i1 %cmp289, %cmp287
  %tobool292 = icmp ne i32 %eValid.2578, 0
  %or.cond320 = and i1 %tobool292, %or.cond
  %cmp294 = icmp sgt i32 %eType.4582, 0
  %or.cond321 = and i1 %cmp294, %or.cond320
  br i1 %or.cond321, label %cleanup, label %if.else297

if.else297:                                       ; preds = %if.end286
  %cmp298 = icmp sgt i32 %eType.4582, 1
  br i1 %cmp298, label %land.lhs.true300, label %if.else309

land.lhs.true300:                                 ; preds = %if.else297
  %cmp301 = icmp eq i32 %eType.4582, 3
  %or.cond322 = or i1 %tobool292, %cmp301
  %or.cond323 = and i1 %cmp289, %or.cond322
  br i1 %or.cond323, label %cleanup, label %if.else309

if.else309:                                       ; preds = %land.lhs.true300, %if.else297
  br label %cleanup

cleanup:                                          ; preds = %if.else309, %land.lhs.true300, %if.end286, %while.body, %if.end20, %entry
  %retval.0 = phi i32 [ 0, %if.else309 ], [ 0, %entry ], [ %eType.4582, %if.end286 ], [ -1, %land.lhs.true300 ], [ 0, %if.end20 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_randomness(i32, i8*) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemIntegerify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3UnlinkAndDeleteTable(%struct.sqlite3*, i32, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3ExpirePreparedStatements(%struct.sqlite3*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeUpdateMeta(%struct.Btree*, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFreeCursor(%struct.Vdbe* nocapture readonly, %struct.VdbeCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemSetStr(%struct.sqlite3_value*, i8*, i32, i8 zeroext, void (i8*)*) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeGetMeta(%struct.Btree*, i32, i32*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemCast(%struct.sqlite3_value*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePrevious(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeEof(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorHasHint(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeClearCursor(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3VdbeIntValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3RowSetInsert(%struct.RowSet*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3RowSetTest(%struct.RowSet*, i32, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemSetRowSet(%struct.sqlite3_value*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFreeNN(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local void @sqlite3VdbeRecordUnpack(%struct.KeyInfo* nocapture readonly %pKeyInfo, i32 %nKey, i8* %pKey, %struct.UnpackedRecord* nocapture %p) unnamed_addr #4 {
entry:
  %v64.i71 = alloca i64, align 8
  %v64.i = alloca i64, align 8
  %aMem = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 1
  %0 = load %struct.sqlite3_value*, %struct.sqlite3_value** %aMem, align 8, !tbaa !11
  %default_rc = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 3
  store i8 0, i8* %default_rc, align 2, !tbaa !15
  %1 = load i8, i8* %pKey, align 1, !tbaa !10
  %cmp = icmp sgt i8 %1, -1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %incdec.ptr.i = getelementptr inbounds i8, i8* %pKey, i64 1
  %2 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv1.i = zext i8 %2 to i32
  %tobool.i = icmp slt i8 %2, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.false
  %and2.i = shl nuw nsw i32 %conv, 7
  %shl.i = and i32 %and2.i, 16256
  %or.i = or i32 %shl.i, %conv1.i
  br label %cond.end

if.end.i:                                         ; preds = %cond.false
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %pKey, i64 2
  %3 = load i8, i8* %incdec.ptr3.i, align 1, !tbaa !10
  %tobool8.i = icmp slt i8 %3, 0
  br i1 %tobool8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %conv5.i = zext i8 %3 to i32
  %shl4.i = shl nuw nsw i32 %conv, 14
  %or6.i = or i32 %shl4.i, %conv5.i
  %and10.i = and i32 %or6.i, 2080895
  %and11.i = shl nuw nsw i32 %conv1.i, 7
  %shl12.i = and i32 %and11.i, 16256
  %or13.i = or i32 %and10.i, %shl12.i
  br label %cond.end

if.end14.i:                                       ; preds = %if.end.i
  %4 = bitcast i64* %v64.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %call.i = call zeroext i8 @sqlite3GetVarint(i8* nonnull %pKey, i64* nonnull %v64.i) #5
  %5 = load i64, i64* %v64.i, align 8, !tbaa !16
  %6 = icmp ult i64 %5, 4294967295
  %storemerge43.i = select i1 %6, i64 %5, i64 4294967295
  %7 = trunc i64 %storemerge43.i to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %phitmp101 = zext i8 %call.i to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end14.i, %if.then9.i, %if.then.i, %entry
  %szHdr.1 = phi i32 [ %conv, %entry ], [ %7, %if.end14.i ], [ %or13.i, %if.then9.i ], [ %or.i, %if.then.i ]
  %cond = phi i32 [ 1, %entry ], [ %phitmp101, %if.end14.i ], [ 3, %if.then9.i ], [ 2, %if.then.i ]
  %8 = bitcast i64* %v64.i71 to i8*
  %enc = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 1
  %db = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 4
  %9 = bitcast %struct.sqlite3** %db to i64*
  %nField = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %cond.end22, %cond.end
  %d.0 = phi i32 [ %szHdr.1, %cond.end ], [ %add31, %cond.end22 ]
  %idx.0 = phi i32 [ %cond, %cond.end ], [ %add, %cond.end22 ]
  %u.0 = phi i16 [ 0, %cond.end ], [ %inc, %cond.end22 ]
  %pMem.0 = phi %struct.sqlite3_value* [ %0, %cond.end ], [ %incdec.ptr, %cond.end22 ]
  %cmp6 = icmp ult i32 %idx.0, %szHdr.1
  %cmp8 = icmp ule i32 %d.0, %nKey
  %10 = and i1 %cmp8, %cmp6
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom = zext i32 %idx.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %pKey, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp11 = icmp sgt i8 %11, -1
  %conv10 = zext i8 %11 to i32
  br i1 %cmp11, label %cond.end22, label %cond.false17

cond.false17:                                     ; preds = %while.body
  %incdec.ptr.i73 = getelementptr inbounds i8, i8* %arrayidx, i64 1
  %12 = load i8, i8* %incdec.ptr.i73, align 1, !tbaa !10
  %conv1.i74 = zext i8 %12 to i32
  %tobool.i75 = icmp slt i8 %12, 0
  br i1 %tobool.i75, label %if.end.i82, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false17
  %and2.i76 = shl nuw nsw i32 %conv10, 7
  %shl.i77 = and i32 %and2.i76, 16256
  %or.i78 = or i32 %shl.i77, %conv1.i74
  br label %cond.end22

if.end.i82:                                       ; preds = %cond.false17
  %incdec.ptr3.i80 = getelementptr inbounds i8, i8* %arrayidx, i64 2
  %13 = load i8, i8* %incdec.ptr3.i80, align 1, !tbaa !10
  %tobool8.i81 = icmp slt i8 %13, 0
  br i1 %tobool8.i81, label %if.end14.i93, label %if.then9.i90

if.then9.i90:                                     ; preds = %if.end.i82
  %conv5.i83 = zext i8 %13 to i32
  %shl4.i84 = shl nuw nsw i32 %conv10, 14
  %or6.i85 = or i32 %shl4.i84, %conv5.i83
  %and10.i86 = and i32 %or6.i85, 2080895
  %and11.i87 = shl nuw nsw i32 %conv1.i74, 7
  %shl12.i88 = and i32 %and11.i87, 16256
  %or13.i89 = or i32 %and10.i86, %shl12.i88
  br label %cond.end22

if.end14.i93:                                     ; preds = %if.end.i82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %call.i91 = call zeroext i8 @sqlite3GetVarint(i8* nonnull %arrayidx, i64* nonnull %v64.i71) #5
  %14 = load i64, i64* %v64.i71, align 8, !tbaa !16
  %15 = icmp ult i64 %14, 4294967295
  %storemerge43.i92 = select i1 %15, i64 %14, i64 4294967295
  %16 = trunc i64 %storemerge43.i92 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end14.i93, %if.then9.i90, %if.then.i79, %while.body
  %serial_type.1 = phi i32 [ %16, %if.end14.i93 ], [ %or13.i89, %if.then9.i90 ], [ %or.i78, %if.then.i79 ], [ %conv10, %while.body ]
  %cond23 = phi i8 [ %call.i91, %if.end14.i93 ], [ 3, %if.then9.i90 ], [ 2, %if.then.i79 ], [ 1, %while.body ]
  %conv25 = zext i8 %cond23 to i32
  %add = add i32 %idx.0, %conv25
  %17 = load i8, i8* %enc, align 4, !tbaa !18
  %enc26 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 2
  store i8 %17, i8* %enc26, align 2, !tbaa !21
  %18 = load i64, i64* %9, align 8, !tbaa !23
  %db27 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 9
  %19 = bitcast %struct.sqlite3** %db27 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !24
  %szMalloc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 7
  store i32 0, i32* %szMalloc, align 8, !tbaa !25
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 5
  store i8* null, i8** %z, align 8, !tbaa !26
  %idxprom28 = zext i32 %d.0 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %pKey, i64 %idxprom28
  %call30 = call i32 @sqlite3VdbeSerialGet(i8* nonnull %arrayidx29, i32 %serial_type.1, %struct.sqlite3_value* %pMem.0)
  %add31 = add i32 %call30, %d.0
  %incdec.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 1
  %inc = add nuw i16 %u.0, 1
  %20 = load i16, i16* %nField, align 8, !tbaa !27
  %cmp34 = icmp ult i16 %inc, %20
  br i1 %cmp34, label %while.cond, label %while.end

while.end:                                        ; preds = %cond.end22, %while.cond
  %d.1 = phi i32 [ %add31, %cond.end22 ], [ %d.0, %while.cond ]
  %u.1 = phi i16 [ %inc, %cond.end22 ], [ %u.0, %while.cond ]
  %pMem.1 = phi %struct.sqlite3_value* [ %incdec.ptr, %cond.end22 ], [ %pMem.0, %while.cond ]
  %cmp36 = icmp ule i32 %d.1, %nKey
  %tobool = icmp eq i16 %u.1, 0
  %or.cond = or i1 %cmp36, %tobool
  br i1 %or.cond, label %if.end40, label %if.then39

if.then39:                                        ; preds = %while.end
  %flags.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1, i32 1
  %21 = load i16, i16* %flags.i, align 8, !tbaa !28
  %22 = and i16 %21, 9216
  %cmp.i = icmp eq i16 %22, 0
  br i1 %cmp.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.then39
  %add.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* nonnull %add.ptr) #5
  br label %if.end40

if.else.i:                                        ; preds = %if.then39
  store i16 1, i16* %flags.i, align 8, !tbaa !28
  br label %if.end40

if.end40:                                         ; preds = %if.else.i, %if.then.i96, %while.end
  store i16 %u.1, i16* %nField, align 8, !tbaa !27
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.UnpackedRecord* @sqlite3VdbeAllocUnpackedRecord(%struct.KeyInfo*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCreateTable(%struct.Btree*, i32*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3*, %struct.Btree** nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor*, %struct.UnpackedRecord*, i64, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeLast(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValidNN(%struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeInsert(%struct.BtCursor*, %struct.BtreePayload* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3*, %struct.VdbeCursor*, %struct.UnpackedRecord*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxRowid(%struct.sqlite3*, %struct.BtCursor*, i64*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeDelete(%struct.BtCursor*, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3BtreeIntegerKey(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeClearTable(%struct.Btree*, i32, i32*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeNumericType(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeError(%struct.Vdbe* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value*, i8, i8) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyNumericAffinity(%struct.sqlite3_value* nocapture %pRec, i32 %bTryForInt) local_unnamed_addr #4 {
entry:
  %rValue = alloca double, align 8
  %0 = bitcast double* %rValue to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %enc1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %1 = load i8, i8* %enc1, align 2, !tbaa !21
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %2 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %3 = load i32, i32* %n, align 4, !tbaa !29
  %call = call i32 @sqlite3AtoF(i8* %2, double* nonnull %rValue, i32 %3, i8 zeroext %1)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call, 1
  %4 = load double, double* %rValue, align 8, !tbaa !6
  %i = bitcast %struct.sqlite3_value* %pRec to i64*
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %conv.i = fptosi double %4 to i64
  %cmp.i.i = fcmp oeq double %4, 0.000000e+00
  br i1 %cmp.i.i, label %alsoAnInt.exit.thread, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.lhs.true
  %5 = bitcast double %4 to i64
  %conv.i.i = sitofp i64 %conv.i to double
  %6 = bitcast double %conv.i.i to i64
  %7 = icmp ne i64 %5, %6
  %conv.off.i = add i64 %conv.i, 2251799813685248
  %8 = icmp ugt i64 %conv.off.i, 4503599627370495
  %9 = or i1 %8, %7
  br i1 %9, label %alsoAnInt.exit, label %alsoAnInt.exit.thread

alsoAnInt.exit.thread:                            ; preds = %lor.rhs.i.i, %land.lhs.true
  store i64 %conv.i, i64* %i, align 8, !tbaa !16
  br label %if.then4

alsoAnInt.exit:                                   ; preds = %lor.rhs.i.i
  %10 = load i8*, i8** %z, align 8, !tbaa !26
  %11 = load i32, i32* %n, align 4, !tbaa !29
  %12 = load i8, i8* %enc1, align 2, !tbaa !21
  %call1.i = call i32 @sqlite3Atoi64(i8* %10, i64* %i, i32 %11, i8 zeroext %12) #5
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.then4, label %if.else

if.then4:                                         ; preds = %alsoAnInt.exit, %alsoAnInt.exit.thread
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %13 = load i16, i16* %flags, align 8, !tbaa !28
  %14 = or i16 %13, 4
  store i16 %14, i16* %flags, align 8, !tbaa !28
  br label %if.end14

if.else:                                          ; preds = %alsoAnInt.exit, %if.end
  %15 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  store double %4, double* %15, align 8, !tbaa !10
  %flags7 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %16 = load i16, i16* %flags7, align 8, !tbaa !28
  %17 = or i16 %16, 8
  store i16 %17, i16* %flags7, align 8, !tbaa !28
  %tobool11 = icmp eq i32 %bTryForInt, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.else
  %call.i = call i64 @doubleToInt64(double %4) #5
  %conv.i31 = sitofp i64 %call.i to double
  %cmp.i32 = fcmp oeq double %4, %conv.i31
  %18 = add i64 %call.i, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %19, %cmp.i32
  br i1 %20, label %if.then.i33, label %if.end14

if.then.i33:                                      ; preds = %if.then12
  store i64 %call.i, i64* %i, align 8, !tbaa !10
  %21 = and i16 %16, 15936
  %22 = or i16 %21, 4
  store i16 %22, i16* %flags7, align 8, !tbaa !28
  br label %if.end14

if.end14:                                         ; preds = %if.then.i33, %if.then12, %if.else, %if.then4
  %23 = phi i16 [ %22, %if.then.i33 ], [ %17, %if.then12 ], [ %17, %if.else ], [ %14, %if.then4 ]
  %flags15 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %24 = and i16 %23, -3
  store i16 %24, i16* %flags15, align 8, !tbaa !28
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3IsNaN(double) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare double @sqlite3VdbeRealValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3MulInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3SubInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3AddInt64(i64*, i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define zeroext i16 @numericType(%struct.sqlite3_value* %pMem) local_unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 44
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv4 = trunc i32 %and to i16
  br label %return

if.end:                                           ; preds = %entry
  %and7 = and i32 %conv, 18
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %return, label %if.then9

if.then9:                                         ; preds = %if.end
  %call = call zeroext i16 @computeNumericType(%struct.sqlite3_value* nonnull %pMem)
  br label %return

return:                                           ; preds = %if.then9, %if.end, %if.then
  %retval.0 = phi i16 [ %conv4, %if.then ], [ %call, %if.then9 ], [ 0, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemMove(%struct.sqlite3_value*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @"#VDBE_EXEC_NAME"(%struct.Vdbe*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValid(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialPut(i8*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3PutVarint(i8*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VarintLen(i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyAffinity(%struct.sqlite3_value* %pRec, i8 signext %affinity, i8 zeroext %enc) local_unnamed_addr #4 {
entry:
  %acc.i = alloca %struct.sqlite3_str, align 8
  %cmp = icmp sgt i8 %affinity, 66
  br i1 %cmp, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv2 = zext i16 %0 to i32
  %and = and i32 %conv2, 4
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.then
  %and8 = and i32 %conv2, 8
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then5
  %and14 = and i32 %conv2, 2
  %tobool = icmp eq i32 %and14, 0
  br i1 %tobool, label %if.end41, label %if.then15

if.then15:                                        ; preds = %if.then11
  call void @applyNumericAffinity(%struct.sqlite3_value* nonnull %pRec, i32 1)
  br label %if.end41

if.else:                                          ; preds = %if.then5
  %r.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %1 = load double, double* %r.i, align 8, !tbaa !10
  %call.i = call i64 @doubleToInt64(double %1) #5
  %conv.i = sitofp i64 %call.i to double
  %cmp.i = fcmp oeq double %1, %conv.i
  %2 = add i64 %call.i, -9223372036854775807
  %3 = icmp ugt i64 %2, 1
  %4 = and i1 %3, %cmp.i
  br i1 %4, label %if.then.i, label %if.end41

if.then.i:                                        ; preds = %if.else
  %i.i = bitcast %struct.sqlite3_value* %pRec to i64*
  store i64 %call.i, i64* %i.i, align 8, !tbaa !10
  %5 = and i16 %0, 15936
  %6 = or i16 %5, 4
  store i16 %6, i16* %flags, align 8, !tbaa !28
  br label %if.end41

if.else18:                                        ; preds = %entry
  %cmp20 = icmp eq i8 %affinity, 66
  br i1 %cmp20, label %if.then22, label %if.end41

if.then22:                                        ; preds = %if.else18
  %flags23 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %7 = load i16, i16* %flags23, align 8, !tbaa !28
  %conv24 = zext i16 %7 to i32
  %and25 = and i32 %conv24, 2
  %cmp26 = icmp ne i32 %and25, 0
  %and31 = and i32 %conv24, 44
  %tobool32 = icmp eq i32 %and31, 0
  %or.cond = or i1 %cmp26, %tobool32
  br i1 %or.cond, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then22
  %szMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 7
  %8 = load i32, i32* %szMalloc.i, align 8, !tbaa !25
  %cmp.i54 = icmp slt i32 %8, 32
  br i1 %cmp.i54, label %sqlite3VdbeMemClearAndResize.exit, label %sqlite3VdbeMemClearAndResize.exit.thread

sqlite3VdbeMemClearAndResize.exit.thread:         ; preds = %if.then33
  %zMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 6
  %9 = bitcast i8** %zMalloc.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !30
  %z.i57 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %11 = bitcast i8** %z.i57 to i64*
  store i64 %10, i64* %11, align 8, !tbaa !26
  %12 = and i16 %7, 45
  store i16 %12, i16* %flags23, align 8, !tbaa !28
  %13 = inttoptr i64 %10 to i8*
  br label %lor.lhs.false.i.i

sqlite3VdbeMemClearAndResize.exit:                ; preds = %if.then33
  %call.i55 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* nonnull %pRec, i32 32, i32 0) #5
  %tobool.i = icmp eq i32 %call.i55, 0
  br i1 %tobool.i, label %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, label %if.then.i51

sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge: ; preds = %sqlite3VdbeMemClearAndResize.exit
  %z.i.phi.trans.insert = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %.pre = load i8*, i8** %z.i.phi.trans.insert, align 8, !tbaa !26
  %.pre68 = load i16, i16* %flags23, align 8, !tbaa !28
  br label %lor.lhs.false.i.i

if.then.i51:                                      ; preds = %sqlite3VdbeMemClearAndResize.exit
  %enc1.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 0, i8* %enc1.i, align 2, !tbaa !21
  br label %if.end35

lor.lhs.false.i.i:                                ; preds = %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, %sqlite3VdbeMemClearAndResize.exit.thread
  %14 = phi i16 [ %.pre68, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %12, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %15 = phi i8* [ %.pre, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %13, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %z.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %16 = bitcast %struct.sqlite3_str* %acc.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %zText.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 1
  store i8* %15, i8** %zText.i.i, align 8, !tbaa !31
  %db1.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 0
  store %struct.sqlite3* null, %struct.sqlite3** %db1.i.i, align 8, !tbaa !33
  %nAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 2
  store i32 32, i32* %nAlloc.i.i, align 8, !tbaa !34
  %mxAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 3
  %nChar.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 4
  %17 = bitcast i32* %mxAlloc.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(10) %17, i8 0, i64 10, i1 false) #5
  %conv.i61 = zext i16 %14 to i32
  %and.i = and i32 %conv.i61, 4
  %tobool.i62 = icmp eq i32 %and.i, 0
  br i1 %tobool.i62, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %lor.lhs.false.i.i
  %i.i63 = bitcast %struct.sqlite3_value* %pRec to i64*
  %18 = load i64, i64* %i.i63, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 %18) #5
  br label %vdbeMemRenderNum.exit

if.else.i:                                        ; preds = %lor.lhs.false.i.i
  %and3.i = and i32 %conv.i61, 32
  %tobool4.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.else.i
  %i7.i = bitcast %struct.sqlite3_value* %pRec to i64*
  %19 = load i64, i64* %i7.i, align 8, !tbaa !10
  %conv8.i = sitofp i64 %19 to double
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %conv8.i) #5
  br label %vdbeMemRenderNum.exit

if.else9.i:                                       ; preds = %if.else.i
  %r.i65 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %20 = load double, double* %r.i65, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %20) #5
  br label %vdbeMemRenderNum.exit

vdbeMemRenderNum.exit:                            ; preds = %if.else9.i, %if.then5.i, %if.then.i64
  %21 = load i32, i32* %nChar.i.i, align 8, !tbaa !35
  %idxprom.i = zext i32 %21 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %15, i64 %idxprom.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  %22 = load i8*, i8** %z.i, align 8, !tbaa !26
  %call3.i = call i64 @strlen(i8* nonnull dereferenceable(1) %22) #5
  %23 = trunc i64 %call3.i to i32
  %conv.i52 = and i32 %23, 1073741823
  %n.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  store i32 %conv.i52, i32* %n.i, align 4, !tbaa !29
  %enc4.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 1, i8* %enc4.i, align 2, !tbaa !21
  %24 = load i16, i16* %flags23, align 8, !tbaa !28
  %25 = and i16 %24, -559
  %26 = or i16 %25, 514
  store i16 %26, i16* %flags23, align 8, !tbaa !28
  %cmp.i.i = icmp eq i8 %enc, 1
  br i1 %cmp.i.i, label %if.end35, label %if.end.i.i

if.end.i.i:                                       ; preds = %vdbeMemRenderNum.exit
  %call.i.i = call i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value* nonnull %pRec, i8 zeroext %enc) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end.i.i, %vdbeMemRenderNum.exit, %if.then.i51, %if.then22
  %27 = load i16, i16* %flags23, align 8, !tbaa !28
  %28 = and i16 %27, -45
  store i16 %28, i16* %flags23, align 8, !tbaa !28
  br label %if.end41

if.end41:                                         ; preds = %if.end35, %if.else18, %if.then.i, %if.else, %if.then15, %if.then11, %if.then
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterInit(%struct.sqlite3*, i32, %struct.VdbeCursor*) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3MemCompare(%struct.sqlite3_value* %pMem1, %struct.sqlite3_value* %pMem2, %struct.CollSeq* readonly %pColl) unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %flags1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 1
  %1 = load i16, i16* %flags1, align 8, !tbaa !28
  %conv2 = zext i16 %1 to i32
  %or164 = or i16 %1, %0
  %or = zext i16 %or164 to i32
  %and = and i32 %or, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and3 = and i32 %conv2, 1
  %and4 = and i32 %conv, 1
  %sub = sub nsw i32 %and3, %and4
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i32 %or, 44
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.end98, label %if.then7

if.then7:                                         ; preds = %if.end
  %and8165 = and i16 %1, %0
  %and8 = zext i16 %and8165 to i32
  %and9 = and i32 %and8, 36
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.end26, label %if.then11

if.then11:                                        ; preds = %if.then7
  %i = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %2 = load i64, i64* %i, align 8, !tbaa !10
  %i13 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %3 = load i64, i64* %i13, align 8, !tbaa !10
  %cmp14 = icmp slt i64 %2, %3
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.then11
  %cmp22 = icmp sgt i64 %2, %3
  %. = zext i1 %cmp22 to i32
  br label %cleanup

if.end26:                                         ; preds = %if.then7
  %and28 = and i32 %and8, 8
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end47, label %if.then31

if.then31:                                        ; preds = %if.end26
  %r = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %4 = load double, double* %r, align 8, !tbaa !10
  %r34 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %5 = load double, double* %r34, align 8, !tbaa !10
  %cmp35 = fcmp olt double %4, %5
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.then31
  %cmp43 = fcmp ogt double %4, %5
  %.166 = zext i1 %cmp43 to i32
  br label %cleanup

if.end47:                                         ; preds = %if.end26
  %and48 = and i32 %conv, 36
  %cmp49 = icmp eq i32 %and48, 0
  br i1 %cmp49, label %if.end81, label %if.then51

if.then51:                                        ; preds = %if.end47
  %and52 = and i32 %conv2, 8
  %cmp53 = icmp eq i32 %and52, 0
  br i1 %cmp53, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then51
  %i57 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %6 = load i64, i64* %i57, align 8, !tbaa !10
  %r59 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %7 = load double, double* %r59, align 8, !tbaa !10
  %conv.i = sitofp i64 %6 to x86_fp80
  %conv1.i = fpext double %7 to x86_fp80
  %cmp.i = fcmp olt x86_fp80 %conv.i, %conv1.i
  %cmp4.i = fcmp ogt x86_fp80 %conv.i, %conv1.i
  %..i = zext i1 %cmp4.i to i32
  %retval.0.i = select i1 %cmp.i, i32 -1, i32 %..i
  br label %cleanup

if.else:                                          ; preds = %if.then51
  %and60 = and i32 %conv2, 36
  %cmp61 = icmp eq i32 %and60, 0
  br i1 %cmp61, label %cleanup, label %if.then63

if.then63:                                        ; preds = %if.else
  %i65 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %8 = load i64, i64* %i65, align 8, !tbaa !10
  %i67 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %9 = load i64, i64* %i67, align 8, !tbaa !10
  %cmp68 = icmp slt i64 %8, %9
  br i1 %cmp68, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.then63
  %cmp76 = icmp sgt i64 %8, %9
  %.167 = zext i1 %cmp76 to i32
  br label %cleanup

if.end81:                                         ; preds = %if.end47
  %and82 = and i32 %conv, 8
  %cmp83 = icmp eq i32 %and82, 0
  br i1 %cmp83, label %cleanup, label %if.then85

if.then85:                                        ; preds = %if.end81
  %and86 = and i32 %conv2, 36
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %cleanup, label %if.then89

if.then89:                                        ; preds = %if.then85
  %i91 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %10 = load i64, i64* %i91, align 8, !tbaa !10
  %r93 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %11 = load double, double* %r93, align 8, !tbaa !10
  %conv.i168 = sitofp i64 %10 to x86_fp80
  %conv1.i169 = fpext double %11 to x86_fp80
  %cmp.i170 = fcmp olt x86_fp80 %conv.i168, %conv1.i169
  %cmp4.i171 = fcmp ogt x86_fp80 %conv.i168, %conv1.i169
  %..i172.neg = sext i1 %cmp4.i171 to i32
  %sub95 = select i1 %cmp.i170, i32 1, i32 %..i172.neg
  br label %cleanup

if.end98:                                         ; preds = %if.end
  %and99 = and i32 %or, 2
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.end116, label %if.then101

if.then101:                                       ; preds = %if.end98
  %and102 = and i32 %conv, 2
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cleanup, label %if.end106

if.end106:                                        ; preds = %if.then101
  %and107 = and i32 %conv2, 2
  %cmp108 = icmp eq i32 %and107, 0
  br i1 %cmp108, label %cleanup, label %if.end111

if.end111:                                        ; preds = %if.end106
  %tobool112 = icmp eq %struct.CollSeq* %pColl, null
  br i1 %tobool112, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end111
  %call114 = call i32 @vdbeCompareMemString(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2, %struct.CollSeq* nonnull %pColl, i8* null)
  br label %cleanup

if.end116:                                        ; preds = %if.end111, %if.end98
  %call117 = call i32 @sqlite3BlobCompare(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then113, %if.end106, %if.then101, %if.then89, %if.then85, %if.end81, %if.end71, %if.then63, %if.else, %if.then55, %if.end38, %if.then31, %if.end17, %if.then11, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %retval.0.i, %if.then55 ], [ %sub95, %if.then89 ], [ %call114, %if.then113 ], [ %call117, %if.end116 ], [ -1, %if.then11 ], [ %., %if.end17 ], [ -1, %if.then31 ], [ %.166, %if.end38 ], [ -1, %if.then63 ], [ %.167, %if.end71 ], [ -1, %if.else ], [ -1, %if.then85 ], [ 1, %if.end81 ], [ 1, %if.then101 ], [ -1, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterNext(%struct.sqlite3*, %struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.BtCursor* @sqlite3BtreeFakeValidCursor() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXSFuncPtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXInversePtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value*, %struct.FuncDef*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value*, i64) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRawNN(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemInit(%struct.sqlite3_value*, %struct.sqlite3*, i16) #0

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* returned) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeBeginStmt(%struct.Btree*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeBeginTrans(%struct.Btree*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeHalt(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeNext(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCloseStatement(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCheckFk(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor*, i32, i32, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value*, i32, i32) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3VdbeSerialGet(i8* %buf, i32 %serial_type, %struct.sqlite3_value* %pMem) unnamed_addr #4 {
entry:
  switch i32 %serial_type, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb15
    i32 4, label %sw.bb29
    i32 5, label %sw.bb48
    i32 6, label %sw.bb78
    i32 7, label %sw.bb78
    i32 8, label %sw.bb79
    i32 9, label %sw.bb79
  ]

sw.bb:                                            ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 16385, i16* %flags, align 8, !tbaa !28
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 0, i32* %n, align 4, !tbaa !29
  %nZero = bitcast %struct.sqlite3_value* %pMem to i32*
  store i32 0, i32* %nZero, align 8, !tbaa !10
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  %flags2 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 1, i16* %flags2, align 8, !tbaa !28
  br label %return

sw.bb3:                                           ; preds = %entry
  %0 = load i8, i8* %buf, align 1, !tbaa !10
  %conv = sext i8 %0 to i64
  %i = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv, i64* %i, align 8, !tbaa !10
  %flags5 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags5, align 8, !tbaa !28
  br label %return

sw.bb6:                                           ; preds = %entry
  %1 = load i8, i8* %buf, align 1, !tbaa !10
  %conv8 = sext i8 %1 to i32
  %mul = shl nsw i32 %conv8, 8
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 1
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !10
  %conv10 = zext i8 %2 to i32
  %or = or i32 %mul, %conv10
  %conv11 = sext i32 %or to i64
  %i13 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv11, i64* %i13, align 8, !tbaa !10
  %flags14 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags14, align 8, !tbaa !28
  br label %return

sw.bb15:                                          ; preds = %entry
  %3 = load i8, i8* %buf, align 1, !tbaa !10
  %conv17 = sext i8 %3 to i32
  %mul18 = shl nsw i32 %conv17, 16
  %arrayidx19 = getelementptr inbounds i8, i8* %buf, i64 1
  %4 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv20, 8
  %or21 = or i32 %shl, %mul18
  %arrayidx22 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx22, align 1, !tbaa !10
  %conv23 = zext i8 %5 to i32
  %or24 = or i32 %or21, %conv23
  %conv25 = sext i32 %or24 to i64
  %i27 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv25, i64* %i27, align 8, !tbaa !10
  %flags28 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags28, align 8, !tbaa !28
  br label %return

sw.bb29:                                          ; preds = %entry
  %6 = load i8, i8* %buf, align 1, !tbaa !10
  %conv31 = sext i8 %6 to i32
  %mul32 = shl nsw i32 %conv31, 24
  %arrayidx33 = getelementptr inbounds i8, i8* %buf, i64 1
  %7 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %7 to i32
  %shl35 = shl nuw nsw i32 %conv34, 16
  %or36 = or i32 %shl35, %mul32
  %arrayidx37 = getelementptr inbounds i8, i8* %buf, i64 2
  %8 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %8 to i32
  %shl39 = shl nuw nsw i32 %conv38, 8
  %or40 = or i32 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %buf, i64 3
  %9 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %9 to i32
  %or43 = or i32 %or40, %conv42
  %conv44 = sext i32 %or43 to i64
  %i46 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv44, i64* %i46, align 8, !tbaa !10
  %flags47 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags47, align 8, !tbaa !28
  br label %return

sw.bb48:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 2
  %10 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv50 = zext i8 %10 to i64
  %shl51 = shl nuw nsw i64 %conv50, 24
  %arrayidx53 = getelementptr inbounds i8, i8* %buf, i64 3
  %11 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %11 to i64
  %shl55 = shl nuw nsw i64 %conv54, 16
  %or56 = or i64 %shl55, %shl51
  %arrayidx58 = getelementptr inbounds i8, i8* %buf, i64 4
  %12 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %12 to i64
  %shl60 = shl nuw nsw i64 %conv59, 8
  %or61 = or i64 %or56, %shl60
  %arrayidx63 = getelementptr inbounds i8, i8* %buf, i64 5
  %13 = load i8, i8* %arrayidx63, align 1, !tbaa !10
  %conv64 = zext i8 %13 to i64
  %or65 = or i64 %or61, %conv64
  %14 = load i8, i8* %buf, align 1, !tbaa !10
  %conv68 = sext i8 %14 to i32
  %mul69 = shl nsw i32 %conv68, 8
  %arrayidx70 = getelementptr inbounds i8, i8* %buf, i64 1
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %15 to i32
  %or72 = or i32 %mul69, %conv71
  %conv73 = sext i32 %or72 to i64
  %mul74 = shl nsw i64 %conv73, 32
  %add = or i64 %or65, %mul74
  %i76 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %add, i64* %i76, align 8, !tbaa !10
  %flags77 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags77, align 8, !tbaa !28
  br label %return

sw.bb78:                                          ; preds = %entry, %entry
  %16 = load i8, i8* %buf, align 1, !tbaa !10
  %conv.i = zext i8 %16 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 24
  %arrayidx1.i = getelementptr inbounds i8, i8* %buf, i64 1
  %17 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %17 to i64
  %shl3.i = shl nuw nsw i64 %conv2.i, 16
  %or.i = or i64 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr inbounds i8, i8* %buf, i64 2
  %18 = load i8, i8* %arrayidx4.i, align 1, !tbaa !10
  %conv5.i = zext i8 %18 to i64
  %shl6.i = shl nuw nsw i64 %conv5.i, 8
  %or7.i = or i64 %or.i, %shl6.i
  %arrayidx8.i = getelementptr inbounds i8, i8* %buf, i64 3
  %19 = load i8, i8* %arrayidx8.i, align 1, !tbaa !10
  %conv9.i = zext i8 %19 to i64
  %or10.i = or i64 %or7.i, %conv9.i
  %add.ptr.i = getelementptr inbounds i8, i8* %buf, i64 4
  %20 = load i8, i8* %add.ptr.i, align 1, !tbaa !10
  %conv13.i = zext i8 %20 to i64
  %shl14.i = shl nuw nsw i64 %conv13.i, 24
  %arrayidx16.i = getelementptr inbounds i8, i8* %buf, i64 5
  %21 = load i8, i8* %arrayidx16.i, align 1, !tbaa !10
  %conv17.i = zext i8 %21 to i64
  %shl18.i = shl nuw nsw i64 %conv17.i, 16
  %arrayidx21.i = getelementptr inbounds i8, i8* %buf, i64 6
  %22 = load i8, i8* %arrayidx21.i, align 1, !tbaa !10
  %conv22.i = zext i8 %22 to i64
  %shl23.i = shl nuw nsw i64 %conv22.i, 8
  %arrayidx26.i = getelementptr inbounds i8, i8* %buf, i64 7
  %23 = load i8, i8* %arrayidx26.i, align 1, !tbaa !10
  %conv27.i = zext i8 %23 to i64
  %shl29.i = shl nuw i64 %or10.i, 32
  %or19.i = or i64 %shl29.i, %shl14.i
  %or24.i = or i64 %or19.i, %shl18.i
  %or28.i = or i64 %or24.i, %shl23.i
  %add.i = or i64 %or28.i, %conv27.i
  %cmp.i = icmp eq i32 %serial_type, 6
  %i.i = bitcast %struct.sqlite3_value* %pMem to i64*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 8, !tbaa !10
  br label %serialGet.exit

if.else.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 1
  %and.i = and i64 %add.i, 9218868437227405312
  %cmp35.i = icmp eq i64 %and.i, 9218868437227405312
  %and37.i = and i64 %add.i, 4503599627370495
  %cmp38.i = icmp ne i64 %and37.i, 0
  %24 = and i1 %cmp35.i, %cmp38.i
  %conv40.i = select i1 %24, i16 1, i16 8
  br label %serialGet.exit

serialGet.exit:                                   ; preds = %if.else.i, %if.then.i
  %conv40.sink.i = phi i16 [ 4, %if.then.i ], [ %conv40.i, %if.else.i ]
  %25 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %conv40.sink.i, i16* %25, align 8
  br label %return

sw.bb79:                                          ; preds = %entry, %entry
  %sub = add nsw i32 %serial_type, -8
  %conv80 = zext i32 %sub to i64
  %i82 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv80, i64* %i82, align 8, !tbaa !10
  %flags83 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags83, align 8, !tbaa !28
  br label %return

sw.default:                                       ; preds = %entry
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 5
  store i8* %buf, i8** %z, align 8, !tbaa !26
  %sub84 = add i32 %serial_type, -12
  %div = lshr i32 %sub84, 1
  %n85 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 %div, i32* %n85, align 4, !tbaa !29
  %and = and i32 %serial_type, 1
  %idxprom = zext i32 %and to i64
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* @sqlite3VdbeSerialGet.aFlag, i64 0, i64 %idxprom
  %26 = load i16, i16* %arrayidx86, align 2, !tbaa !36
  %flags87 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %26, i16* %flags87, align 8, !tbaa !28
  br label %return

return:                                           ; preds = %sw.default, %sw.bb79, %serialGet.exit, %sw.bb48, %sw.bb29, %sw.bb15, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ 0, %sw.bb79 ], [ 8, %serialGet.exit ], [ 6, %sw.bb48 ], [ 4, %sw.bb29 ], [ 3, %sw.bb15 ], [ 2, %sw.bb6 ], [ 1, %sw.bb3 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRelease(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialTypeLen(i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3VdbeOneByteSerialTypeLen(i8) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3GetVarint32(i8*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8* @sqlite3BtreePayloadFetch(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreePayloadSize(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetNull(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor**, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeFirst(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeCursorHintFlags(%struct.BtCursor*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* nocapture readonly, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare void @printProgress(i64, i32, i64)

declare void @printInt(i64, i64, i32, i64)

declare void @printDouble(double, i64, i32, i64)

declare void @printPtrAndValue(i64, i64, i64, i32, i64, i1)

define i32 @jittedFunction(%struct.Vdbe* %0, i8* %1, i32* %2, i8* %3, i8* %4) !dbg !37 {
  %6 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 19, !dbg !41
  %7 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6, align 8, !dbg !43
  %8 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 21, !dbg !44
  %9 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !45
  %10 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 23, !dbg !46
  %11 = load %struct.VdbeOp*, %struct.VdbeOp** %10, align 8, !dbg !47
  %12 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 0, !dbg !48
  %13 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !49
  br label %14, !dbg !50

14:                                               ; preds = %7153, %.critedge1, %7500, %7570, %5
  %15 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 10, !dbg !51
  %16 = load i32, i32* %15, align 4, !dbg !52
  switch i32 %16, label %17 [
    i32 0, label %19
    i32 1, label %25
    i32 2, label %34
    i32 3, label %43
    i32 4, label %61
    i32 5, label %79
    i32 6, label %84
    i32 7, label %101
    i32 8, label %118
    i32 9, label %135
    i32 10, label %152
    i32 11, label %169
    i32 12, label %186
    i32 13, label %210
    i32 14, label %465
    i32 15, label %507
    i32 16, label %764
    i32 17, label %781
    i32 18, label %804
    i32 19, label %846
    i32 20, label %898
  ], !dbg !53

17:                                               ; preds = %14
  switch i32 %16, label %18 [
    i32 21, label %1155
    i32 22, label %1172
    i32 23, label %1195
    i32 24, label %1218
    i32 25, label %1262
    i32 26, label %1314
    i32 27, label %1571
    i32 28, label %1612
    i32 29, label %1869
    i32 30, label %1911
    i32 31, label %2167
    i32 32, label %2424
    i32 33, label %2536
    i32 34, label %2793
    i32 35, label %3049
    i32 36, label %3161
    i32 37, label %3418
    i32 38, label %3460
    i32 39, label %3717
    i32 40, label %3768
    i32 41, label %3880
    i32 42, label %4137
    i32 43, label %4179
    i32 44, label %4436
    i32 45, label %4491
    i32 46, label %4748
    i32 47, label %5005
    i32 48, label %5012
    i32 49, label %5269
    i32 50, label %5276
    i32 51, label %5689
    i32 52, label %5705
    i32 53, label %5717
    i32 54, label %5725
    i32 55, label %5749
    i32 56, label %5758
    i32 57, label %6013
    i32 58, label %6051
    i32 59, label %6055
    i32 60, label %6058
    i32 61, label %6063
    i32 62, label %.critedge
    i32 63, label %6074
    i32 64, label %6331
    i32 65, label %6338
    i32 66, label %6595
    i32 67, label %6602
    i32 68, label %6681
    i32 69, label %6760
    i32 70, label %6844
    i32 71, label %6848
    i32 72, label %7103
    i32 73, label %7121
    i32 74, label %7130
    i32 75, label %7577
    i32 76, label %7135
    i32 77, label %7153
    i32 78, label %7160
    i32 79, label %.critedge1
    i32 80, label %7173
    i32 81, label %7184
    i32 82, label %7187
    i32 83, label %7190
    i32 84, label %7484
  ], !dbg !53

18:                                               ; preds = %17
  switch i32 %16, label %19 [
    i32 85, label %7500
    i32 86, label %7507
    i32 87, label %7552
    i32 88, label %7570
    i32 89, label %7577
    i32 90, label %7585
    i32 91, label %7609
    i32 92, label %7618
    i32 93, label %7873
    i32 94, label %8130
    i32 95, label %8157
    i32 96, label %8166
    i32 97, label %8168
    i32 98, label %8190
    i32 99, label %8213
    i32 100, label %25
  ], !dbg !53

19:                                               ; preds = %18, %14
  %20 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !54
  store i32 0, i32* %20, align 4, !dbg !57
  %21 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 21, i32 3, !dbg !54
  store i32 0, i32* %21, align 4, !dbg !57
  %22 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !58
  %23 = load i32, i32* %22, align 4, !dbg !59
  %24 = add i32 %23, 1, !dbg !60
  store i32 %24, i32* %22, align 4, !dbg !61
  br label %8168, !dbg !62

25:                                               ; preds = %8227, %18, %14
  %26 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 6, i32 4, i32 -1, i8 1), !dbg !63
  %27 = ptrtoint %struct.VdbeCursor* %26 to i64, !dbg !66
  %28 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %26, i32 0, i32 13, !dbg !67
  %29 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 1, !dbg !68
  %30 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %29, i32 0, i32 6, !dbg !69
  %31 = bitcast %union.p4union* %30 to %struct.KeyInfo**, !dbg !70
  %32 = load %struct.KeyInfo*, %struct.KeyInfo** %31, align 8, !dbg !71
  store %struct.KeyInfo* %32, %struct.KeyInfo** %28, align 8, !dbg !72
  %33 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %26), !dbg !73
  br label %34, !dbg !74

34:                                               ; preds = %14, %25
  %35 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 7, i32 3, i32 -1, i8 1), !dbg !63
  %36 = ptrtoint %struct.VdbeCursor* %35 to i64, !dbg !66
  %37 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %35, i32 0, i32 13, !dbg !67
  %38 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, !dbg !68
  %39 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %38, i32 0, i32 6, !dbg !69
  %40 = bitcast %union.p4union* %39 to %struct.KeyInfo**, !dbg !70
  %41 = load %struct.KeyInfo*, %struct.KeyInfo** %40, align 8, !dbg !71
  store %struct.KeyInfo* %41, %struct.KeyInfo** %37, align 8, !dbg !72
  %42 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %35), !dbg !73
  br label %43, !dbg !74

43:                                               ; preds = %14, %34
  %44 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 3, !dbg !75
  %45 = call i8* @llvm.stacksave(), !dbg !78
  %46 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %44, i32 0, i32 4, !dbg !79
  %47 = load i32, i32* %46, align 4, !dbg !82
  %48 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %47, !dbg !83
  %49 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %48, i32 0, i32 1, !dbg !78
  %50 = load i16, i16* %49, align 2, !dbg !78
  %51 = and i16 %50, 9216, !dbg !78
  %52 = icmp ne i16 %51, 0, !dbg !78
  %53 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %52, label %54, label %56, !dbg !78

54:                                               ; preds = %43
  %55 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %48), !dbg !78
  store %struct.sqlite3_value* %55, %struct.sqlite3_value** %53, align 8, !dbg !78
  br label %57, !dbg !78

56:                                               ; preds = %43
  store i16 4, i16* %49, align 2, !dbg !78
  store %struct.sqlite3_value* %48, %struct.sqlite3_value** %53, align 8, !dbg !78
  br label %57, !dbg !78

57:                                               ; preds = %56, %54
  %58 = load %struct.sqlite3_value*, %struct.sqlite3_value** %53, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %45), !dbg !78
  %59 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %58, i32 0, i32 0, i32 0, !dbg !84
  %60 = bitcast double* %59 to i64*, !dbg !85
  store i64 0, i64* %60, align 4, !dbg !86
  br label %61, !dbg !74

61:                                               ; preds = %14, %57
  %62 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 4, !dbg !87
  %63 = call i8* @llvm.stacksave(), !dbg !90
  %64 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %62, i32 0, i32 4, !dbg !79
  %65 = load i32, i32* %64, align 4, !dbg !82
  %66 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %65, !dbg !83
  %67 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %66, i32 0, i32 1, !dbg !90
  %68 = load i16, i16* %67, align 2, !dbg !90
  %69 = and i16 %68, 9216, !dbg !90
  %70 = icmp ne i16 %69, 0, !dbg !90
  %71 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %70, label %72, label %74, !dbg !90

72:                                               ; preds = %61
  %73 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %66), !dbg !90
  store %struct.sqlite3_value* %73, %struct.sqlite3_value** %71, align 8, !dbg !90
  br label %75, !dbg !90

74:                                               ; preds = %61
  store i16 4, i16* %67, align 2, !dbg !90
  store %struct.sqlite3_value* %66, %struct.sqlite3_value** %71, align 8, !dbg !90
  br label %75, !dbg !90

75:                                               ; preds = %74, %72
  %76 = load %struct.sqlite3_value*, %struct.sqlite3_value** %71, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %63), !dbg !90
  %77 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %76, i32 0, i32 1, !dbg !91
  store i16 1, i16* %77, align 2, !dbg !92
  %78 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %76, i32 0, i32 4, !dbg !93
  store i32 0, i32* %78, align 4, !dbg !94
  br label %79, !dbg !74

79:                                               ; preds = %14, %75
  %80 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !95
  %81 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %80, i32 0, i32 1, !dbg !98
  store i16 4, i16* %81, align 2, !dbg !99
  %82 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %80, i32 0, i32 0, i32 0, !dbg !100
  %83 = bitcast double* %82 to i64*, !dbg !101
  store i64 5, i64* %83, align 4, !dbg !102
  br label %7507, !dbg !103

84:                                               ; preds = %14
  %85 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %86 = getelementptr %struct.sqlite3, %struct.sqlite3* %85, i32 0, i32 4, !dbg !107
  %87 = load %struct.Db*, %struct.Db** %86, align 8, !dbg !108
  %88 = getelementptr %struct.Db, %struct.Db* %87, i32 0, i32 1, !dbg !109
  %89 = load %struct.Btree*, %struct.Btree** %88, align 8, !dbg !110
  %90 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 2, i32 7, i32 0, i8 0), !dbg !111
  %91 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 2, !dbg !112
  store i8 1, i8* %91, align 1, !dbg !113
  %92 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 5, !dbg !114
  %93 = load i8, i8* %92, align 1, !dbg !115
  %94 = or i8 %93, 4, !dbg !116
  store i8 %94, i8* %92, align 1, !dbg !117
  %95 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 15, !dbg !118
  store i32 10, i32* %95, align 4, !dbg !119
  %96 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 12, i32 0, !dbg !120
  %97 = load %struct.BtCursor*, %struct.BtCursor** %96, align 8, !dbg !121
  %98 = call i32 @sqlite3BtreeCursor(%struct.Btree* %89, i32 10, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %97), !dbg !122
  %99 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %99, align 8, !dbg !124
  %100 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %90, i32 0, i32 4, !dbg !125
  store i8 1, i8* %100, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %97, i32 0), !dbg !127
  br label %101, !dbg !74

101:                                              ; preds = %14, %84
  %102 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %103 = getelementptr %struct.sqlite3, %struct.sqlite3* %102, i32 0, i32 4, !dbg !107
  %104 = load %struct.Db*, %struct.Db** %103, align 8, !dbg !108
  %105 = getelementptr %struct.Db, %struct.Db* %104, i32 0, i32 1, !dbg !109
  %106 = load %struct.Btree*, %struct.Btree** %105, align 8, !dbg !110
  %107 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 1, i32 5, i32 0, i8 0), !dbg !111
  %108 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 2, !dbg !112
  store i8 1, i8* %108, align 1, !dbg !113
  %109 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 5, !dbg !114
  %110 = load i8, i8* %109, align 1, !dbg !115
  %111 = or i8 %110, 4, !dbg !116
  store i8 %111, i8* %109, align 1, !dbg !117
  %112 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 15, !dbg !118
  store i32 9, i32* %112, align 4, !dbg !119
  %113 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 12, i32 0, !dbg !120
  %114 = load %struct.BtCursor*, %struct.BtCursor** %113, align 8, !dbg !121
  %115 = call i32 @sqlite3BtreeCursor(%struct.Btree* %106, i32 9, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %114), !dbg !122
  %116 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %116, align 8, !dbg !124
  %117 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %107, i32 0, i32 4, !dbg !125
  store i8 1, i8* %117, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %114, i32 0), !dbg !127
  br label %118, !dbg !74

118:                                              ; preds = %14, %101
  %119 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %120 = getelementptr %struct.sqlite3, %struct.sqlite3* %119, i32 0, i32 4, !dbg !107
  %121 = load %struct.Db*, %struct.Db** %120, align 8, !dbg !108
  %122 = getelementptr %struct.Db, %struct.Db* %121, i32 0, i32 1, !dbg !109
  %123 = load %struct.Btree*, %struct.Btree** %122, align 8, !dbg !110
  %124 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 0, i32 4, i32 0, i8 0), !dbg !111
  %125 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 2, !dbg !112
  store i8 1, i8* %125, align 1, !dbg !113
  %126 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 5, !dbg !114
  %127 = load i8, i8* %126, align 1, !dbg !115
  %128 = or i8 %127, 4, !dbg !116
  store i8 %128, i8* %126, align 1, !dbg !117
  %129 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 15, !dbg !118
  store i32 8, i32* %129, align 4, !dbg !119
  %130 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 12, i32 0, !dbg !120
  %131 = load %struct.BtCursor*, %struct.BtCursor** %130, align 8, !dbg !121
  %132 = call i32 @sqlite3BtreeCursor(%struct.Btree* %123, i32 8, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %131), !dbg !122
  %133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %133, align 8, !dbg !124
  %134 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %124, i32 0, i32 4, !dbg !125
  store i8 1, i8* %134, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %131, i32 0), !dbg !127
  br label %135, !dbg !74

135:                                              ; preds = %14, %118
  %136 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %137 = getelementptr %struct.sqlite3, %struct.sqlite3* %136, i32 0, i32 4, !dbg !107
  %138 = load %struct.Db*, %struct.Db** %137, align 8, !dbg !108
  %139 = getelementptr %struct.Db, %struct.Db* %138, i32 0, i32 1, !dbg !109
  %140 = load %struct.Btree*, %struct.Btree** %139, align 8, !dbg !110
  %141 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 3, i32 4, i32 0, i8 0), !dbg !111
  %142 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 2, !dbg !112
  store i8 1, i8* %142, align 1, !dbg !113
  %143 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 5, !dbg !114
  %144 = load i8, i8* %143, align 1, !dbg !115
  %145 = or i8 %144, 4, !dbg !116
  store i8 %145, i8* %143, align 1, !dbg !117
  %146 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 15, !dbg !118
  store i32 5, i32* %146, align 4, !dbg !119
  %147 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 12, i32 0, !dbg !120
  %148 = load %struct.BtCursor*, %struct.BtCursor** %147, align 8, !dbg !121
  %149 = call i32 @sqlite3BtreeCursor(%struct.Btree* %140, i32 5, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %148), !dbg !122
  %150 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %150, align 8, !dbg !124
  %151 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %141, i32 0, i32 4, !dbg !125
  store i8 1, i8* %151, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %148, i32 0), !dbg !127
  br label %152, !dbg !74

152:                                              ; preds = %14, %135
  %153 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %154 = getelementptr %struct.sqlite3, %struct.sqlite3* %153, i32 0, i32 4, !dbg !107
  %155 = load %struct.Db*, %struct.Db** %154, align 8, !dbg !108
  %156 = getelementptr %struct.Db, %struct.Db* %155, i32 0, i32 1, !dbg !109
  %157 = load %struct.Btree*, %struct.Btree** %156, align 8, !dbg !110
  %158 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 4, i32 3, i32 0, i8 0), !dbg !111
  %159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 2, !dbg !112
  store i8 1, i8* %159, align 1, !dbg !113
  %160 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 5, !dbg !114
  %161 = load i8, i8* %160, align 1, !dbg !115
  %162 = or i8 %161, 4, !dbg !116
  store i8 %162, i8* %160, align 1, !dbg !117
  %163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 15, !dbg !118
  store i32 2, i32* %163, align 4, !dbg !119
  %164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 12, i32 0, !dbg !120
  %165 = load %struct.BtCursor*, %struct.BtCursor** %164, align 8, !dbg !121
  %166 = call i32 @sqlite3BtreeCursor(%struct.Btree* %157, i32 2, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %165), !dbg !122
  %167 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %167, align 8, !dbg !124
  %168 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %158, i32 0, i32 4, !dbg !125
  store i8 1, i8* %168, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %165, i32 0), !dbg !127
  br label %169, !dbg !74

169:                                              ; preds = %14, %152
  %170 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !104
  %171 = getelementptr %struct.sqlite3, %struct.sqlite3* %170, i32 0, i32 4, !dbg !107
  %172 = load %struct.Db*, %struct.Db** %171, align 8, !dbg !108
  %173 = getelementptr %struct.Db, %struct.Db* %172, i32 0, i32 1, !dbg !109
  %174 = load %struct.Btree*, %struct.Btree** %173, align 8, !dbg !110
  %175 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 5, i32 2, i32 0, i8 0), !dbg !111
  %176 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 2, !dbg !112
  store i8 1, i8* %176, align 1, !dbg !113
  %177 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 5, !dbg !114
  %178 = load i8, i8* %177, align 1, !dbg !115
  %179 = or i8 %178, 4, !dbg !116
  store i8 %179, i8* %177, align 1, !dbg !117
  %180 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 15, !dbg !118
  store i32 3, i32* %180, align 4, !dbg !119
  %181 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 12, i32 0, !dbg !120
  %182 = load %struct.BtCursor*, %struct.BtCursor** %181, align 8, !dbg !121
  %183 = call i32 @sqlite3BtreeCursor(%struct.Btree* %174, i32 3, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %182), !dbg !122
  %184 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 13, !dbg !123
  store %struct.KeyInfo* null, %struct.KeyInfo** %184, align 8, !dbg !124
  %185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %175, i32 0, i32 4, !dbg !125
  store i8 1, i8* %185, align 1, !dbg !126
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %182, i32 0), !dbg !127
  br label %186, !dbg !74

186:                                              ; preds = %14, %169
  %187 = call i8* @llvm.stacksave(), !dbg !128
  %188 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !131
  %189 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %188, i32 2, !dbg !132
  %190 = load %struct.VdbeCursor*, %struct.VdbeCursor** %189, align 8, !dbg !133
  %191 = alloca i32, align 4, !dbg !134
  store i32 1, i32* %191, align 4, !dbg !135
  %192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %190, i32 0, i32 0, !dbg !136
  %193 = load i8, i8* %192, align 1, !dbg !137
  %194 = icmp eq i8 %193, 1, !dbg !138
  %195 = alloca i32, align 4, !dbg !139
  store i32 0, i32* %195, align 4, !dbg !140
  br i1 %194, label %196, label %198, !dbg !141

196:                                              ; preds = %186
  %197 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %190, i32* %191), !dbg !142
  store i32 %197, i32* %195, align 4, !dbg !143
  br label %204, !dbg !144

198:                                              ; preds = %186
  %199 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %190, i32 0, i32 12, i32 0, !dbg !145
  %200 = load %struct.BtCursor*, %struct.BtCursor** %199, align 8, !dbg !146
  %201 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %200, i32* %191), !dbg !147
  store i32 %201, i32* %195, align 4, !dbg !148
  %202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %190, i32 0, i32 3, !dbg !149
  store i8 0, i8* %202, align 1, !dbg !150
  %203 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %190, i32 0, i32 9, !dbg !151
  store i32 0, i32* %203, align 4, !dbg !152
  br label %204, !dbg !153

204:                                              ; preds = %198, %196
  %205 = load i32, i32* %195, align 4, !dbg !154
  %206 = load i32, i32* %191, align 4, !dbg !155
  %207 = trunc i32 %206 to i8, !dbg !156
  %208 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %190, i32 0, i32 2, !dbg !157
  store i8 %207, i8* %208, align 1, !dbg !158
  call void @llvm.stackrestore(i8* %187), !dbg !159
  %209 = icmp ne i32 %206, 0, !dbg !160
  br i1 %209, label %5717, label %210, !dbg !161

210:                                              ; preds = %14, %5715, %204
  %211 = call i8* @llvm.stacksave(), !dbg !162
  %212 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %213 = load i8, i8* %212, align 1, !dbg !166
  %214 = alloca i32, align 4, !dbg !167
  store i32 2, i32* %214, align 4, !dbg !168
  %215 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !169
  %216 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %217 = load %struct.VdbeCursor*, %struct.VdbeCursor** %215, align 8, !dbg !171
  store %struct.VdbeCursor* %217, %struct.VdbeCursor** %216, align 8, !dbg !172
  %218 = alloca i8*, align 8, !dbg !173
  %219 = alloca i32, align 4, !dbg !174
  %220 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %216, i32* %214), !dbg !175
  %221 = load %struct.VdbeCursor*, %struct.VdbeCursor** %216, align 8, !dbg !176
  %222 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !177
  %223 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 16, !dbg !178
  %224 = load i16, i16* %223, align 2, !dbg !179
  %225 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 19, !dbg !180
  %226 = load i32*, i32** %225, align 8, !dbg !181
  %227 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 0, !dbg !182
  %228 = load i8, i8* %227, align 1, !dbg !183
  %229 = icmp ne i8 %228, 3, !dbg !184
  %230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 2, !dbg !185
  %231 = load i8, i8* %230, align 1, !dbg !186
  %232 = icmp ne i8 %231, 0, !dbg !187
  %233 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 14, !dbg !188
  %234 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 21, !dbg !189
  %235 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 22, !dbg !190
  %236 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 20, !dbg !191
  %237 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 17, !dbg !192
  %238 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 9, !dbg !193
  %239 = load i32, i32* %238, align 4, !dbg !194
  %240 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %241 = load i32, i32* %240, align 4, !dbg !196
  %242 = icmp ne i32 %239, %241, !dbg !197
  br i1 %242, label %243, label %285, !dbg !198

243:                                              ; preds = %210
  br i1 %232, label %265, label %260, !dbg !199

244:                                              ; preds = %260, %267
  %245 = load i32, i32* %240, align 4, !dbg !200
  store i32 %245, i32* %238, align 4, !dbg !201
  %246 = load i8*, i8** %236, align 8, !dbg !202
  %247 = load i8, i8* %246, align 1, !dbg !203
  %248 = icmp sgt i8 %247, -1, !dbg !206
  br i1 %248, label %249, label %251, !dbg !207

249:                                              ; preds = %244
  %250 = zext i8 %247 to i32, !dbg !208
  store i32 %250, i32* %226, align 4, !dbg !209
  store i32 1, i32* %233, align 4, !dbg !210
  br label %254, !dbg !211

251:                                              ; preds = %244
  %252 = call i8 @sqlite3GetVarint32(i8* %246, i32* %226), !dbg !212
  %253 = zext i8 %252 to i32, !dbg !213
  store i32 %253, i32* %233, align 4, !dbg !214
  br label %254, !dbg !215

254:                                              ; preds = %251, %249
  store i16 0, i16* %237, align 2, !dbg !216
  %255 = load i32, i32* %235, align 4, !dbg !217
  %256 = load i32, i32* %226, align 4, !dbg !218
  %257 = icmp ult i32 %255, %256, !dbg !219
  br i1 %257, label %259, label %258, !dbg !220

258:                                              ; preds = %254
  store i8* %246, i8** %218, align 8, !dbg !221
  br label %376, !dbg !222

259:                                              ; preds = %254
  store i8* null, i8** %236, align 8, !dbg !223
  store i32 0, i32* %235, align 4, !dbg !224
  br label %285, !dbg !225

260:                                              ; preds = %243
  %261 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 12, i32 0, !dbg !226
  %262 = load %struct.BtCursor*, %struct.BtCursor** %261, align 8, !dbg !227
  %263 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %262), !dbg !228
  store i32 %263, i32* %234, align 4, !dbg !229
  %264 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %262, i32* %235), !dbg !230
  store i8* %264, i8** %236, align 8, !dbg !231
  br label %244, !dbg !232

265:                                              ; preds = %243
  %266 = icmp eq i8 %228, 3, !dbg !233
  br i1 %266, label %267, label %278, !dbg !234

267:                                              ; preds = %265
  %268 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 10, !dbg !235
  %269 = load i32, i32* %268, align 4, !dbg !236
  %270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %269, !dbg !237
  %271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %270, i32 0, i32 1, !dbg !238
  %272 = load i16, i16* %271, align 2, !dbg !239
  %273 = and i16 %272, 16, !dbg !240
  %274 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %270, i32 0, i32 4, !dbg !241
  %275 = load i32, i32* %274, align 4, !dbg !242
  store i32 %275, i32* %234, align 4, !dbg !243
  store i32 %275, i32* %235, align 4, !dbg !244
  %276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %270, i32 0, i32 5, !dbg !245
  %277 = load i8*, i8** %276, align 8, !dbg !246
  store i8* %277, i8** %236, align 8, !dbg !247
  br label %244, !dbg !248

278:                                              ; preds = %265
  %279 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 1, !dbg !249
  %280 = load i16, i16* %279, align 2, !dbg !249
  %281 = and i16 %280, 9216, !dbg !249
  %282 = icmp ne i16 %281, 0, !dbg !249
  br i1 %282, label %283, label %284, !dbg !249

283:                                              ; preds = %278
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %222), !dbg !249
  br label %464, !dbg !249

284:                                              ; preds = %278
  store i16 1, i16* %279, align 2, !dbg !249
  br label %464, !dbg !249

285:                                              ; preds = %259, %210
  %286 = load i16, i16* %237, align 2, !dbg !250
  %287 = icmp ule i16 %286, 0, !dbg !251
  br i1 %287, label %368, label %365, !dbg !252

288:                                              ; preds = %365, %454
  %289 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 1, !dbg !253
  %290 = load i16, i16* %289, align 2, !dbg !254
  %291 = and i16 9216, %290, !dbg !255
  %292 = icmp eq i16 0, %291, !dbg !256
  br i1 %292, label %293, label %297, !dbg !257

293:                                              ; preds = %288
  %294 = icmp ne i16 %291, 0, !dbg !258
  br i1 %294, label %295, label %296, !dbg !258

295:                                              ; preds = %293
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %222), !dbg !258
  br label %297, !dbg !258

296:                                              ; preds = %293
  store i16 1, i16* %289, align 2, !dbg !258
  br label %297, !dbg !258

297:                                              ; preds = %295, %296, %288
  %298 = load i32, i32* %219, align 4, !dbg !259
  %299 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 23, i32 0, !dbg !260
  %300 = load i32, i32* %299, align 4, !dbg !261
  %301 = load i32, i32* %235, align 4, !dbg !262
  %302 = getelementptr i32, i32* %226, i32 1, !dbg !263
  %303 = load i32, i32* %302, align 4, !dbg !264
  %304 = icmp sge i32 %301, %303, !dbg !265
  br i1 %304, label %305, label %344, !dbg !266

305:                                              ; preds = %297
  %306 = load i8*, i8** %236, align 8, !dbg !267
  %307 = ptrtoint i8* %306 to i64, !dbg !268
  %308 = load i32, i32* %226, align 4, !dbg !269
  %309 = zext i32 %308 to i64, !dbg !270
  %310 = add i64 %307, %309, !dbg !271
  %311 = inttoptr i64 %310 to i8*, !dbg !272
  store i8* %311, i8** %218, align 8, !dbg !273
  %312 = load i32, i32* %219, align 4, !dbg !274
  %313 = icmp ult i32 %312, 12, !dbg !275
  br i1 %313, label %314, label %316, !dbg !276

314:                                              ; preds = %305
  %315 = call i32 @sqlite3VdbeSerialGet(i8* %311, i32 %312, %struct.sqlite3_value* %222), !dbg !277
  br label %464, !dbg !278

316:                                              ; preds = %305
  %317 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %317, align 2, !dbg !280
  %318 = getelementptr i16, i16* %317, i32 1, !dbg !281
  store i16 514, i16* %318, align 2, !dbg !282
  %319 = load i32, i32* %219, align 4, !dbg !283
  %320 = sub i32 %319, 12, !dbg !284
  %321 = lshr i32 %320, 1, !dbg !285
  %322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 4, !dbg !286
  store i32 %321, i32* %322, align 4, !dbg !287
  %323 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 2, !dbg !288
  store i8 %213, i8* %323, align 1, !dbg !289
  %324 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 5, !dbg !290
  %325 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 7, !dbg !291
  %326 = load i32, i32* %325, align 4, !dbg !292
  %327 = add i32 %321, 2, !dbg !293
  %328 = icmp slt i32 %326, %327, !dbg !294
  br i1 %328, label %329, label %331, !dbg !295

329:                                              ; preds = %316
  store i16 1, i16* %289, align 2, !dbg !296
  %330 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %222, i32 %327, i32 0), !dbg !297
  br label %334, !dbg !298

331:                                              ; preds = %316
  %332 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 6, !dbg !299
  %333 = load i8*, i8** %332, align 8, !dbg !300
  store i8* %333, i8** %324, align 8, !dbg !301
  br label %334, !dbg !302

334:                                              ; preds = %331, %329
  %335 = zext i32 %321 to i64, !dbg !303
  %336 = load i8*, i8** %324, align 8, !dbg !304
  %337 = load i8*, i8** %218, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %336, i8* %337, i64 %335, i1 false), !dbg !306
  %338 = getelementptr i8, i8* %336, i32 %321, !dbg !307
  store i8 0, i8* %338, align 1, !dbg !308
  %339 = add i32 %321, 1, !dbg !309
  %340 = getelementptr i8, i8* %336, i32 %339, !dbg !310
  store i8 0, i8* %340, align 1, !dbg !311
  %341 = and i32 %319, 1, !dbg !312
  %342 = getelementptr i16, i16* %317, i32 %341, !dbg !313
  %343 = load i16, i16* %342, align 2, !dbg !314
  store i16 %343, i16* %289, align 2, !dbg !315
  br label %464, !dbg !316

344:                                              ; preds = %297
  %345 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 2, !dbg !317
  store i8 %213, i8* %345, align 1, !dbg !318
  %346 = load i32, i32* %219, align 4, !dbg !319
  %347 = and i32 %346, 1, !dbg !320
  %348 = icmp eq i32 %347, 0, !dbg !321
  %349 = icmp sge i32 %346, 12, !dbg !322
  %350 = and i1 %349, %348, !dbg !323
  %351 = call i32 @sqlite3VdbeSerialTypeLen(i32 %346), !dbg !324
  %352 = icmp eq i32 %351, 0, !dbg !325
  br i1 %352, label %363, label %353, !dbg !326

353:                                              ; preds = %344
  %354 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 12, i32 0, !dbg !327
  %355 = load %struct.BtCursor*, %struct.BtCursor** %354, align 8, !dbg !328
  %356 = load i32, i32* %226, align 4, !dbg !329
  %357 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %355, i32 %356, i32 %351, %struct.sqlite3_value* %222), !dbg !330
  %358 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 5, !dbg !331
  %359 = load i8*, i8** %358, align 8, !dbg !332
  %360 = call i32 @sqlite3VdbeSerialGet(i8* %359, i32 %346, %struct.sqlite3_value* %222), !dbg !333
  %361 = load i16, i16* %289, align 2, !dbg !334
  %362 = and i16 %361, -4097, !dbg !335
  store i16 %362, i16* %289, align 2, !dbg !336
  br label %464, !dbg !337

363:                                              ; preds = %344
  %364 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %346, %struct.sqlite3_value* %222), !dbg !338
  br label %464, !dbg !339

365:                                              ; preds = %285
  %366 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 23, i32 0, !dbg !340
  %367 = load i32, i32* %366, align 4, !dbg !341
  store i32 %367, i32* %219, align 4, !dbg !342
  br label %288, !dbg !343

368:                                              ; preds = %285
  %369 = load i32, i32* %233, align 4, !dbg !344
  %370 = load i32, i32* %226, align 4, !dbg !345
  %371 = icmp ult i32 %369, %370, !dbg !346
  br i1 %371, label %372, label %453, !dbg !347

372:                                              ; preds = %368
  %373 = load i8*, i8** %236, align 8, !dbg !348
  %374 = icmp eq i8* %373, null, !dbg !349
  br i1 %374, label %376, label %375, !dbg !350

375:                                              ; preds = %372
  store i8* %373, i8** %218, align 8, !dbg !351
  br label %376, !dbg !352

376:                                              ; preds = %375, %372, %258
  %377 = alloca i32, align 4, !dbg !353
  %378 = load i16, i16* %237, align 2, !dbg !354
  %379 = zext i16 %378 to i32, !dbg !355
  store i32 %379, i32* %377, align 4, !dbg !356
  %380 = alloca i64, align 8, !dbg !357
  %381 = getelementptr i32, i32* %226, i32 %379, !dbg !358
  %382 = load i32, i32* %381, align 4, !dbg !359
  %383 = zext i32 %382 to i64, !dbg !360
  store i64 %383, i64* %380, align 4, !dbg !361
  %384 = load i8*, i8** %218, align 8, !dbg !362
  %385 = load i32, i32* %233, align 4, !dbg !363
  %386 = alloca i8*, align 8, !dbg !364
  %387 = getelementptr i8, i8* %384, i32 %385, !dbg !365
  store i8* %387, i8** %386, align 8, !dbg !366
  %388 = load i32, i32* %226, align 4, !dbg !367
  %389 = getelementptr i8, i8* %384, i32 %388, !dbg !368
  br label %390, !dbg !369

390:                                              ; preds = %397, %376
  %391 = load i32, i32* %377, align 4, !dbg !370
  %392 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %221, i32 0, i32 23, i32 %391, !dbg !371
  %393 = load i8*, i8** %386, align 8, !dbg !372
  %394 = load i8, i8* %393, align 1, !dbg !373
  %395 = zext i8 %394 to i32, !dbg !374
  store i32 %395, i32* %219, align 4, !dbg !375
  store i32 %395, i32* %392, align 4, !dbg !376
  %396 = icmp sgt i8 %394, -1, !dbg !377
  br i1 %396, label %420, label %411, !dbg !378

397:                                              ; preds = %411, %420
  %398 = load i32, i32* %377, align 4, !dbg !379
  %399 = add i32 %398, 1, !dbg !380
  store i32 %399, i32* %377, align 4, !dbg !381
  %400 = load i64, i64* %380, align 4, !dbg !382
  %401 = and i64 4294967295, %400, !dbg !383
  %402 = trunc i64 %401 to i32, !dbg !384
  %403 = getelementptr i32, i32* %226, i32 %399, !dbg !385
  store i32 %402, i32* %403, align 4, !dbg !386
  %404 = load i32, i32* %377, align 4, !dbg !387
  %405 = icmp sle i32 %404, 0, !dbg !388
  %406 = load i8*, i8** %386, align 8, !dbg !389
  %407 = ptrtoint i8* %406 to i64, !dbg !390
  %408 = ptrtoint i8* %389 to i64, !dbg !391
  %409 = icmp ult i64 %407, %408, !dbg !392
  %410 = and i1 %405, %409, !dbg !393
  br i1 %410, label %390, label %429, !dbg !394

411:                                              ; preds = %390
  %412 = load i8*, i8** %386, align 8, !dbg !395
  %413 = call i8 @sqlite3GetVarint32(i8* %412, i32* %219), !dbg !396
  %414 = getelementptr i8, i8* %412, i8 %413, !dbg !397
  store i8* %414, i8** %386, align 8, !dbg !398
  %415 = load i32, i32* %219, align 4, !dbg !399
  store i32 %415, i32* %392, align 4, !dbg !400
  %416 = load i64, i64* %380, align 4, !dbg !401
  %417 = call i32 @sqlite3VdbeSerialTypeLen(i32 %415), !dbg !402
  %418 = zext i32 %417 to i64, !dbg !403
  %419 = add i64 %416, %418, !dbg !404
  store i64 %419, i64* %380, align 4, !dbg !405
  br label %397, !dbg !406

420:                                              ; preds = %390
  %421 = getelementptr i8, i8* %393, i32 1, !dbg !407
  store i8* %421, i8** %386, align 8, !dbg !408
  %422 = load i32, i32* %219, align 4, !dbg !409
  %423 = trunc i32 %422 to i8, !dbg !410
  %424 = getelementptr i8, i8* %4, i8 %423, !dbg !411
  %425 = load i8, i8* %424, align 1, !dbg !412
  %426 = zext i8 %425 to i64, !dbg !413
  %427 = load i64, i64* %380, align 4, !dbg !414
  %428 = add i64 %427, %426, !dbg !415
  store i64 %428, i64* %380, align 4, !dbg !416
  br label %397, !dbg !417

429:                                              ; preds = %397
  %430 = load i64, i64* %380, align 4, !dbg !418
  %431 = load i32, i32* %234, align 4, !dbg !419
  %432 = zext i32 %431 to i64, !dbg !420
  %433 = icmp uge i64 %407, %408, !dbg !421
  %434 = icmp ugt i64 %407, %408, !dbg !422
  %435 = icmp ne i64 %430, %432, !dbg !423
  %436 = icmp ugt i64 %430, %432, !dbg !424
  %437 = or i1 %434, %435, !dbg !425
  %438 = and i1 %433, %437, !dbg !426
  %439 = or i1 %438, %436, !dbg !427
  br i1 %439, label %440, label %444, !dbg !428

440:                                              ; preds = %429
  %441 = load i32, i32* %226, align 4, !dbg !429
  %442 = icmp eq i32 %441, 0, !dbg !430
  br i1 %442, label %443, label %444, !dbg !431

443:                                              ; preds = %440
  store i32 0, i32* %377, align 4, !dbg !432
  store i8* %389, i8** %386, align 8, !dbg !433
  br label %444, !dbg !434

444:                                              ; preds = %443, %440, %429
  %445 = load i32, i32* %377, align 4, !dbg !435
  %446 = trunc i32 %445 to i16, !dbg !436
  store i16 %446, i16* %237, align 2, !dbg !437
  %447 = load i8*, i8** %386, align 8, !dbg !438
  %448 = ptrtoint i8* %447 to i64, !dbg !439
  %449 = load i8*, i8** %218, align 8, !dbg !440
  %450 = ptrtoint i8* %449 to i64, !dbg !441
  %451 = sub i64 %448, %450, !dbg !442
  %452 = trunc i64 %451 to i32, !dbg !443
  store i32 %452, i32* %233, align 4, !dbg !444
  br label %454, !dbg !445

453:                                              ; preds = %368
  store i32 0, i32* %219, align 4, !dbg !446
  br label %454, !dbg !447

454:                                              ; preds = %444, %453
  %455 = load i16, i16* %237, align 2, !dbg !448
  %456 = icmp sle i16 %455, 0, !dbg !449
  br i1 %456, label %457, label %288, !dbg !450

457:                                              ; preds = %454
  %458 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %222, i32 0, i32 1, !dbg !451
  %459 = load i16, i16* %458, align 2, !dbg !451
  %460 = and i16 %459, 9216, !dbg !451
  %461 = icmp ne i16 %460, 0, !dbg !451
  br i1 %461, label %462, label %463, !dbg !451

462:                                              ; preds = %457
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %222), !dbg !451
  br label %464, !dbg !451

463:                                              ; preds = %457
  store i16 1, i16* %458, align 2, !dbg !451
  br label %464, !dbg !451

464:                                              ; preds = %462, %463, %334, %314, %353, %363, %283, %284
  call void @llvm.stackrestore(i8* %211), !dbg !452
  br label %465, !dbg !74

465:                                              ; preds = %14, %464
  %466 = call i8* @llvm.stacksave(), !dbg !453
  %467 = alloca i32, align 8, !dbg !456
  %468 = alloca i64, align 8, !dbg !457
  %469 = alloca i32, align 8, !dbg !458
  %470 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !459
  %471 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %470, i32 0, i32 1, !dbg !460
  %472 = load i16, i16* %471, align 2, !dbg !461
  %473 = and i16 %472, 36, !dbg !462
  %474 = icmp eq i16 %473, 0, !dbg !463
  br i1 %474, label %475, label %486, !dbg !464

475:                                              ; preds = %465
  %476 = alloca %struct.sqlite3_value, align 8, !dbg !465
  %477 = load %struct.sqlite3_value, %struct.sqlite3_value* %470, align 8, !dbg !466
  store %struct.sqlite3_value %477, %struct.sqlite3_value* %476, align 8, !dbg !466
  call void @applyAffinity(%struct.sqlite3_value* %476, i8 67, i8 1), !dbg !467
  %478 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %476, i32 0, i32 1, !dbg !468
  %479 = load i16, i16* %478, align 2, !dbg !469
  %480 = and i16 %479, 4, !dbg !470
  %481 = icmp eq i16 %480, 0, !dbg !471
  br i1 %481, label %5705, label %482, !dbg !472

482:                                              ; preds = %475
  %483 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %476, i32 0, i32 0, !dbg !473
  %484 = bitcast %union.MemValue* %483 to i64*, !dbg !474
  %485 = load i64, i64* %484, align 4, !dbg !475
  store i64 %485, i64* %468, align 4, !dbg !476
  br label %490, !dbg !477

486:                                              ; preds = %465
  %487 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %470, i32 0, i32 0, !dbg !478
  %488 = bitcast %union.MemValue* %487 to i64*, !dbg !479
  %489 = load i64, i64* %488, align 4, !dbg !480
  store i64 %489, i64* %468, align 4, !dbg !481
  br label %490, !dbg !482

490:                                              ; preds = %486, %482
  %491 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !483
  %492 = load %struct.VdbeCursor*, %struct.VdbeCursor** %491, align 8, !dbg !484
  %493 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 12, i32 0, !dbg !485
  %494 = load %struct.BtCursor*, %struct.BtCursor** %493, align 8, !dbg !486
  store i32 0, i32* %467, align 4, !dbg !487
  %495 = load i64, i64* %468, align 4, !dbg !488
  %496 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %494, %struct.UnpackedRecord* null, i64 %495, i32 0, i32* %467), !dbg !489
  store i32 %496, i32* %469, align 4, !dbg !490
  %497 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 18, !dbg !491
  store i64 %495, i64* %497, align 4, !dbg !492
  %498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 2, !dbg !493
  store i8 0, i8* %498, align 1, !dbg !494
  %499 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 9, !dbg !495
  store i32 0, i32* %499, align 4, !dbg !496
  %500 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 3, !dbg !497
  store i8 0, i8* %500, align 1, !dbg !498
  %501 = load i32, i32* %467, align 4, !dbg !499
  %502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %492, i32 0, i32 10, !dbg !500
  store i32 %501, i32* %502, align 4, !dbg !501
  %503 = icmp ne i32 %501, 0, !dbg !502
  br i1 %503, label %504, label %505, !dbg !503

504:                                              ; preds = %490
  call void @llvm.stackrestore(i8* %466), !dbg !504
  br label %5705, !dbg !505

505:                                              ; preds = %490
  %506 = load i32, i32* %469, align 4, !dbg !506
  call void @llvm.stackrestore(i8* %466), !dbg !507
  br label %507, !dbg !508

507:                                              ; preds = %14, %505
  %508 = call i8* @llvm.stacksave(), !dbg !162
  %509 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %510 = load i8, i8* %509, align 1, !dbg !166
  %511 = alloca i32, align 4, !dbg !167
  store i32 1, i32* %511, align 4, !dbg !168
  %512 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !169
  %513 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %514 = load %struct.VdbeCursor*, %struct.VdbeCursor** %512, align 8, !dbg !171
  store %struct.VdbeCursor* %514, %struct.VdbeCursor** %513, align 8, !dbg !172
  %515 = alloca i8*, align 8, !dbg !173
  %516 = alloca i32, align 4, !dbg !174
  %517 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %513, i32* %511), !dbg !175
  %518 = load %struct.VdbeCursor*, %struct.VdbeCursor** %513, align 8, !dbg !176
  %519 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !177
  %520 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 16, !dbg !178
  %521 = load i16, i16* %520, align 2, !dbg !179
  %522 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 19, !dbg !180
  %523 = load i32*, i32** %522, align 8, !dbg !181
  %524 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 0, !dbg !182
  %525 = load i8, i8* %524, align 1, !dbg !183
  %526 = icmp ne i8 %525, 3, !dbg !184
  %527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 2, !dbg !185
  %528 = load i8, i8* %527, align 1, !dbg !186
  %529 = icmp ne i8 %528, 0, !dbg !187
  %530 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 14, !dbg !188
  %531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 21, !dbg !189
  %532 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 22, !dbg !190
  %533 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 20, !dbg !191
  %534 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 17, !dbg !192
  %535 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 9, !dbg !193
  %536 = load i32, i32* %535, align 4, !dbg !194
  %537 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %538 = load i32, i32* %537, align 4, !dbg !196
  %539 = icmp ne i32 %536, %538, !dbg !197
  br i1 %539, label %540, label %582, !dbg !198

540:                                              ; preds = %507
  br i1 %529, label %562, label %557, !dbg !199

541:                                              ; preds = %557, %564
  %542 = load i32, i32* %537, align 4, !dbg !200
  store i32 %542, i32* %535, align 4, !dbg !201
  %543 = load i8*, i8** %533, align 8, !dbg !202
  %544 = load i8, i8* %543, align 1, !dbg !203
  %545 = icmp sgt i8 %544, -1, !dbg !206
  br i1 %545, label %546, label %548, !dbg !207

546:                                              ; preds = %541
  %547 = zext i8 %544 to i32, !dbg !208
  store i32 %547, i32* %523, align 4, !dbg !209
  store i32 1, i32* %530, align 4, !dbg !210
  br label %551, !dbg !211

548:                                              ; preds = %541
  %549 = call i8 @sqlite3GetVarint32(i8* %543, i32* %523), !dbg !212
  %550 = zext i8 %549 to i32, !dbg !213
  store i32 %550, i32* %530, align 4, !dbg !214
  br label %551, !dbg !215

551:                                              ; preds = %548, %546
  store i16 0, i16* %534, align 2, !dbg !216
  %552 = load i32, i32* %532, align 4, !dbg !217
  %553 = load i32, i32* %523, align 4, !dbg !218
  %554 = icmp ult i32 %552, %553, !dbg !219
  br i1 %554, label %556, label %555, !dbg !220

555:                                              ; preds = %551
  store i8* %543, i8** %515, align 8, !dbg !221
  br label %675, !dbg !222

556:                                              ; preds = %551
  store i8* null, i8** %533, align 8, !dbg !223
  store i32 0, i32* %532, align 4, !dbg !224
  br label %582, !dbg !225

557:                                              ; preds = %540
  %558 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 12, i32 0, !dbg !226
  %559 = load %struct.BtCursor*, %struct.BtCursor** %558, align 8, !dbg !227
  %560 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %559), !dbg !228
  store i32 %560, i32* %531, align 4, !dbg !229
  %561 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %559, i32* %532), !dbg !230
  store i8* %561, i8** %533, align 8, !dbg !231
  br label %541, !dbg !232

562:                                              ; preds = %540
  %563 = icmp eq i8 %525, 3, !dbg !233
  br i1 %563, label %564, label %575, !dbg !234

564:                                              ; preds = %562
  %565 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 10, !dbg !235
  %566 = load i32, i32* %565, align 4, !dbg !236
  %567 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %566, !dbg !237
  %568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %567, i32 0, i32 1, !dbg !238
  %569 = load i16, i16* %568, align 2, !dbg !239
  %570 = and i16 %569, 16, !dbg !240
  %571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %567, i32 0, i32 4, !dbg !241
  %572 = load i32, i32* %571, align 4, !dbg !242
  store i32 %572, i32* %531, align 4, !dbg !243
  store i32 %572, i32* %532, align 4, !dbg !244
  %573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %567, i32 0, i32 5, !dbg !245
  %574 = load i8*, i8** %573, align 8, !dbg !246
  store i8* %574, i8** %533, align 8, !dbg !247
  br label %541, !dbg !248

575:                                              ; preds = %562
  %576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 1, !dbg !249
  %577 = load i16, i16* %576, align 2, !dbg !249
  %578 = and i16 %577, 9216, !dbg !249
  %579 = icmp ne i16 %578, 0, !dbg !249
  br i1 %579, label %580, label %581, !dbg !249

580:                                              ; preds = %575
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %519), !dbg !249
  br label %763, !dbg !249

581:                                              ; preds = %575
  store i16 1, i16* %576, align 2, !dbg !249
  br label %763, !dbg !249

582:                                              ; preds = %556, %507
  %583 = load i16, i16* %534, align 2, !dbg !250
  %584 = icmp ule i16 %583, 4, !dbg !251
  br i1 %584, label %667, label %664, !dbg !252

585:                                              ; preds = %664, %753
  %586 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 1, !dbg !253
  %587 = load i16, i16* %586, align 2, !dbg !254
  %588 = and i16 9216, %587, !dbg !255
  %589 = icmp eq i16 0, %588, !dbg !256
  br i1 %589, label %590, label %594, !dbg !257

590:                                              ; preds = %585
  %591 = icmp ne i16 %588, 0, !dbg !258
  br i1 %591, label %592, label %593, !dbg !258

592:                                              ; preds = %590
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %519), !dbg !258
  br label %594, !dbg !258

593:                                              ; preds = %590
  store i16 1, i16* %586, align 2, !dbg !258
  br label %594, !dbg !258

594:                                              ; preds = %592, %593, %585
  %595 = load i32, i32* %516, align 4, !dbg !259
  %596 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 23, i32 4, !dbg !260
  %597 = load i32, i32* %596, align 4, !dbg !261
  %598 = load i32, i32* %532, align 4, !dbg !262
  %599 = getelementptr i32, i32* %523, i32 5, !dbg !263
  %600 = load i32, i32* %599, align 4, !dbg !264
  %601 = icmp sge i32 %598, %600, !dbg !265
  br i1 %601, label %602, label %642, !dbg !266

602:                                              ; preds = %594
  %603 = load i8*, i8** %533, align 8, !dbg !267
  %604 = ptrtoint i8* %603 to i64, !dbg !268
  %605 = getelementptr i32, i32* %523, i32 4, !dbg !509
  %606 = load i32, i32* %605, align 4, !dbg !269
  %607 = zext i32 %606 to i64, !dbg !270
  %608 = add i64 %604, %607, !dbg !271
  %609 = inttoptr i64 %608 to i8*, !dbg !272
  store i8* %609, i8** %515, align 8, !dbg !273
  %610 = load i32, i32* %516, align 4, !dbg !274
  %611 = icmp ult i32 %610, 12, !dbg !275
  br i1 %611, label %612, label %614, !dbg !276

612:                                              ; preds = %602
  %613 = call i32 @sqlite3VdbeSerialGet(i8* %609, i32 %610, %struct.sqlite3_value* %519), !dbg !277
  br label %763, !dbg !278

614:                                              ; preds = %602
  %615 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %615, align 2, !dbg !280
  %616 = getelementptr i16, i16* %615, i32 1, !dbg !281
  store i16 514, i16* %616, align 2, !dbg !282
  %617 = load i32, i32* %516, align 4, !dbg !283
  %618 = sub i32 %617, 12, !dbg !284
  %619 = lshr i32 %618, 1, !dbg !285
  %620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 4, !dbg !286
  store i32 %619, i32* %620, align 4, !dbg !287
  %621 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 2, !dbg !288
  store i8 %510, i8* %621, align 1, !dbg !289
  %622 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 5, !dbg !290
  %623 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 7, !dbg !291
  %624 = load i32, i32* %623, align 4, !dbg !292
  %625 = add i32 %619, 2, !dbg !293
  %626 = icmp slt i32 %624, %625, !dbg !294
  br i1 %626, label %627, label %629, !dbg !295

627:                                              ; preds = %614
  store i16 1, i16* %586, align 2, !dbg !296
  %628 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %519, i32 %625, i32 0), !dbg !297
  br label %632, !dbg !298

629:                                              ; preds = %614
  %630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 6, !dbg !299
  %631 = load i8*, i8** %630, align 8, !dbg !300
  store i8* %631, i8** %622, align 8, !dbg !301
  br label %632, !dbg !302

632:                                              ; preds = %629, %627
  %633 = zext i32 %619 to i64, !dbg !303
  %634 = load i8*, i8** %622, align 8, !dbg !304
  %635 = load i8*, i8** %515, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %634, i8* %635, i64 %633, i1 false), !dbg !306
  %636 = getelementptr i8, i8* %634, i32 %619, !dbg !307
  store i8 0, i8* %636, align 1, !dbg !308
  %637 = add i32 %619, 1, !dbg !309
  %638 = getelementptr i8, i8* %634, i32 %637, !dbg !310
  store i8 0, i8* %638, align 1, !dbg !311
  %639 = and i32 %617, 1, !dbg !312
  %640 = getelementptr i16, i16* %615, i32 %639, !dbg !313
  %641 = load i16, i16* %640, align 2, !dbg !314
  store i16 %641, i16* %586, align 2, !dbg !315
  br label %763, !dbg !316

642:                                              ; preds = %594
  %643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 2, !dbg !317
  store i8 %510, i8* %643, align 1, !dbg !318
  %644 = load i32, i32* %516, align 4, !dbg !319
  %645 = and i32 %644, 1, !dbg !320
  %646 = icmp eq i32 %645, 0, !dbg !321
  %647 = icmp sge i32 %644, 12, !dbg !322
  %648 = and i1 %647, %646, !dbg !323
  %649 = call i32 @sqlite3VdbeSerialTypeLen(i32 %644), !dbg !324
  %650 = icmp eq i32 %649, 0, !dbg !325
  br i1 %650, label %662, label %651, !dbg !326

651:                                              ; preds = %642
  %652 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 12, i32 0, !dbg !327
  %653 = load %struct.BtCursor*, %struct.BtCursor** %652, align 8, !dbg !328
  %654 = getelementptr i32, i32* %523, i32 4, !dbg !510
  %655 = load i32, i32* %654, align 4, !dbg !329
  %656 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %653, i32 %655, i32 %649, %struct.sqlite3_value* %519), !dbg !330
  %657 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 5, !dbg !331
  %658 = load i8*, i8** %657, align 8, !dbg !332
  %659 = call i32 @sqlite3VdbeSerialGet(i8* %658, i32 %644, %struct.sqlite3_value* %519), !dbg !333
  %660 = load i16, i16* %586, align 2, !dbg !334
  %661 = and i16 %660, -4097, !dbg !335
  store i16 %661, i16* %586, align 2, !dbg !336
  br label %763, !dbg !337

662:                                              ; preds = %642
  %663 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %644, %struct.sqlite3_value* %519), !dbg !338
  br label %763, !dbg !339

664:                                              ; preds = %582
  %665 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 23, i32 4, !dbg !340
  %666 = load i32, i32* %665, align 4, !dbg !341
  store i32 %666, i32* %516, align 4, !dbg !342
  br label %585, !dbg !343

667:                                              ; preds = %582
  %668 = load i32, i32* %530, align 4, !dbg !344
  %669 = load i32, i32* %523, align 4, !dbg !345
  %670 = icmp ult i32 %668, %669, !dbg !346
  br i1 %670, label %671, label %752, !dbg !347

671:                                              ; preds = %667
  %672 = load i8*, i8** %533, align 8, !dbg !348
  %673 = icmp eq i8* %672, null, !dbg !349
  br i1 %673, label %675, label %674, !dbg !350

674:                                              ; preds = %671
  store i8* %672, i8** %515, align 8, !dbg !351
  br label %675, !dbg !352

675:                                              ; preds = %674, %671, %555
  %676 = alloca i32, align 4, !dbg !353
  %677 = load i16, i16* %534, align 2, !dbg !354
  %678 = zext i16 %677 to i32, !dbg !355
  store i32 %678, i32* %676, align 4, !dbg !356
  %679 = alloca i64, align 8, !dbg !357
  %680 = getelementptr i32, i32* %523, i32 %678, !dbg !358
  %681 = load i32, i32* %680, align 4, !dbg !359
  %682 = zext i32 %681 to i64, !dbg !360
  store i64 %682, i64* %679, align 4, !dbg !361
  %683 = load i8*, i8** %515, align 8, !dbg !362
  %684 = load i32, i32* %530, align 4, !dbg !363
  %685 = alloca i8*, align 8, !dbg !364
  %686 = getelementptr i8, i8* %683, i32 %684, !dbg !365
  store i8* %686, i8** %685, align 8, !dbg !366
  %687 = load i32, i32* %523, align 4, !dbg !367
  %688 = getelementptr i8, i8* %683, i32 %687, !dbg !368
  br label %689, !dbg !369

689:                                              ; preds = %696, %675
  %690 = load i32, i32* %676, align 4, !dbg !370
  %691 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %518, i32 0, i32 23, i32 %690, !dbg !371
  %692 = load i8*, i8** %685, align 8, !dbg !372
  %693 = load i8, i8* %692, align 1, !dbg !373
  %694 = zext i8 %693 to i32, !dbg !374
  store i32 %694, i32* %516, align 4, !dbg !375
  store i32 %694, i32* %691, align 4, !dbg !376
  %695 = icmp sgt i8 %693, -1, !dbg !377
  br i1 %695, label %719, label %710, !dbg !378

696:                                              ; preds = %710, %719
  %697 = load i32, i32* %676, align 4, !dbg !379
  %698 = add i32 %697, 1, !dbg !380
  store i32 %698, i32* %676, align 4, !dbg !381
  %699 = load i64, i64* %679, align 4, !dbg !382
  %700 = and i64 4294967295, %699, !dbg !383
  %701 = trunc i64 %700 to i32, !dbg !384
  %702 = getelementptr i32, i32* %523, i32 %698, !dbg !385
  store i32 %701, i32* %702, align 4, !dbg !386
  %703 = load i32, i32* %676, align 4, !dbg !387
  %704 = icmp sle i32 %703, 4, !dbg !388
  %705 = load i8*, i8** %685, align 8, !dbg !389
  %706 = ptrtoint i8* %705 to i64, !dbg !390
  %707 = ptrtoint i8* %688 to i64, !dbg !391
  %708 = icmp ult i64 %706, %707, !dbg !392
  %709 = and i1 %704, %708, !dbg !393
  br i1 %709, label %689, label %728, !dbg !394

710:                                              ; preds = %689
  %711 = load i8*, i8** %685, align 8, !dbg !395
  %712 = call i8 @sqlite3GetVarint32(i8* %711, i32* %516), !dbg !396
  %713 = getelementptr i8, i8* %711, i8 %712, !dbg !397
  store i8* %713, i8** %685, align 8, !dbg !398
  %714 = load i32, i32* %516, align 4, !dbg !399
  store i32 %714, i32* %691, align 4, !dbg !400
  %715 = load i64, i64* %679, align 4, !dbg !401
  %716 = call i32 @sqlite3VdbeSerialTypeLen(i32 %714), !dbg !402
  %717 = zext i32 %716 to i64, !dbg !403
  %718 = add i64 %715, %717, !dbg !404
  store i64 %718, i64* %679, align 4, !dbg !405
  br label %696, !dbg !406

719:                                              ; preds = %689
  %720 = getelementptr i8, i8* %692, i32 1, !dbg !407
  store i8* %720, i8** %685, align 8, !dbg !408
  %721 = load i32, i32* %516, align 4, !dbg !409
  %722 = trunc i32 %721 to i8, !dbg !410
  %723 = getelementptr i8, i8* %4, i8 %722, !dbg !411
  %724 = load i8, i8* %723, align 1, !dbg !412
  %725 = zext i8 %724 to i64, !dbg !413
  %726 = load i64, i64* %679, align 4, !dbg !414
  %727 = add i64 %726, %725, !dbg !415
  store i64 %727, i64* %679, align 4, !dbg !416
  br label %696, !dbg !417

728:                                              ; preds = %696
  %729 = load i64, i64* %679, align 4, !dbg !418
  %730 = load i32, i32* %531, align 4, !dbg !419
  %731 = zext i32 %730 to i64, !dbg !420
  %732 = icmp uge i64 %706, %707, !dbg !421
  %733 = icmp ugt i64 %706, %707, !dbg !422
  %734 = icmp ne i64 %729, %731, !dbg !423
  %735 = icmp ugt i64 %729, %731, !dbg !424
  %736 = or i1 %733, %734, !dbg !425
  %737 = and i1 %732, %736, !dbg !426
  %738 = or i1 %737, %735, !dbg !427
  br i1 %738, label %739, label %743, !dbg !428

739:                                              ; preds = %728
  %740 = load i32, i32* %523, align 4, !dbg !429
  %741 = icmp eq i32 %740, 0, !dbg !430
  br i1 %741, label %742, label %743, !dbg !431

742:                                              ; preds = %739
  store i32 0, i32* %676, align 4, !dbg !432
  store i8* %688, i8** %685, align 8, !dbg !433
  br label %743, !dbg !434

743:                                              ; preds = %742, %739, %728
  %744 = load i32, i32* %676, align 4, !dbg !435
  %745 = trunc i32 %744 to i16, !dbg !436
  store i16 %745, i16* %534, align 2, !dbg !437
  %746 = load i8*, i8** %685, align 8, !dbg !438
  %747 = ptrtoint i8* %746 to i64, !dbg !439
  %748 = load i8*, i8** %515, align 8, !dbg !440
  %749 = ptrtoint i8* %748 to i64, !dbg !441
  %750 = sub i64 %747, %749, !dbg !442
  %751 = trunc i64 %750 to i32, !dbg !443
  store i32 %751, i32* %530, align 4, !dbg !444
  br label %753, !dbg !445

752:                                              ; preds = %667
  store i32 0, i32* %516, align 4, !dbg !446
  br label %753, !dbg !447

753:                                              ; preds = %743, %752
  %754 = load i16, i16* %534, align 2, !dbg !448
  %755 = icmp sle i16 %754, 4, !dbg !449
  br i1 %755, label %756, label %585, !dbg !450

756:                                              ; preds = %753
  %757 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %519, i32 0, i32 1, !dbg !451
  %758 = load i16, i16* %757, align 2, !dbg !451
  %759 = and i16 %758, 9216, !dbg !451
  %760 = icmp ne i16 %759, 0, !dbg !451
  br i1 %760, label %761, label %762, !dbg !451

761:                                              ; preds = %756
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %519), !dbg !451
  br label %763, !dbg !451

762:                                              ; preds = %756
  store i16 1, i16* %757, align 2, !dbg !451
  br label %763, !dbg !451

763:                                              ; preds = %761, %762, %632, %612, %651, %662, %580, %581
  call void @llvm.stackrestore(i8* %508), !dbg !452
  br label %764, !dbg !74

764:                                              ; preds = %14, %763
  %765 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !511
  %766 = load %struct.VdbeFrame*, %struct.VdbeFrame** %765, align 8, !dbg !514
  %767 = ptrtoint %struct.VdbeFrame* %766 to i64, !dbg !515
  %768 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !516
  %769 = load i32, i32* %768, align 4, !dbg !517
  %770 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !518
  %771 = icmp ne i64 %767, 0, !dbg !519
  br i1 %771, label %772, label %777, !dbg !520

772:                                              ; preds = %764
  %773 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %766, i32 0, i32 6, !dbg !521
  %774 = load i8*, i8** %773, align 8, !dbg !522
  %775 = getelementptr i8, i8* %774, i32 2, !dbg !523
  %776 = load i8, i8* %775, align 1, !dbg !524
  br label %780, !dbg !525

777:                                              ; preds = %764
  %778 = load i32, i32* %770, align 4, !dbg !526
  %779 = icmp eq i32 %778, %769, !dbg !527
  br i1 %779, label %846, label %780, !dbg !528

780:                                              ; preds = %777, %772
  store i32 %769, i32* %770, align 4, !dbg !529
  br label %781, !dbg !530

781:                                              ; preds = %14, %780
  %782 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, !dbg !531
  %783 = call i8* @llvm.stacksave(), !dbg !534
  %784 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %782, i32 0, i32 4, !dbg !79
  %785 = load i32, i32* %784, align 4, !dbg !82
  %786 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %785, !dbg !83
  %787 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %786, i32 0, i32 1, !dbg !534
  %788 = load i16, i16* %787, align 2, !dbg !534
  %789 = and i16 %788, 9216, !dbg !534
  %790 = icmp ne i16 %789, 0, !dbg !534
  %791 = alloca %struct.sqlite3_value*, align 8, !dbg !534
  br i1 %790, label %792, label %794, !dbg !534

792:                                              ; preds = %781
  %793 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %786), !dbg !534
  store %struct.sqlite3_value* %793, %struct.sqlite3_value** %791, align 8, !dbg !534
  br label %795, !dbg !534

794:                                              ; preds = %781
  store i16 4, i16* %787, align 2, !dbg !534
  store %struct.sqlite3_value* %786, %struct.sqlite3_value** %791, align 8, !dbg !534
  br label %795, !dbg !534

795:                                              ; preds = %794, %792
  %796 = load %struct.sqlite3_value*, %struct.sqlite3_value** %791, align 8, !dbg !534
  call void @llvm.stackrestore(i8* %783), !dbg !534
  %797 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %796, i32 0, i32 1, !dbg !535
  %798 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %796, i32 0, i32 2, !dbg !536
  %799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %796, i32 0, i32 4, !dbg !537
  %800 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %796, i32 0, i32 5, !dbg !538
  store i16 2562, i16* %797, align 2, !dbg !539
  %801 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %782, i32 0, i32 6, !dbg !540
  %802 = bitcast %union.p4union* %801 to i8**, !dbg !541
  %803 = load i8*, i8** %802, align 8, !dbg !542
  store i8* %803, i8** %800, align 8, !dbg !543
  store i32 10, i32* %799, align 4, !dbg !544
  store i8 1, i8* %798, align 1, !dbg !545
  br label %804, !dbg !74

804:                                              ; preds = %14, %795
  %805 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !546
  %806 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !549
  %807 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 18, !dbg !550
  %808 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %807, i32 0, i32 6, !dbg !551
  %809 = bitcast %union.p4union* %808 to %struct.sqlite3_context**, !dbg !552
  %810 = load %struct.sqlite3_context*, %struct.sqlite3_context** %809, align 8, !dbg !553
  %811 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 0, !dbg !554
  %812 = load %struct.sqlite3_value*, %struct.sqlite3_value** %811, align 8, !dbg !555
  %813 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 1, !dbg !556
  %814 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 7, !dbg !557
  %815 = load i8, i8* %814, align 1, !dbg !558
  %816 = zext i8 %815 to i32, !dbg !559
  %817 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 8, !dbg !560
  %818 = bitcast [1 x %struct.sqlite3_value*]* %817 to %struct.sqlite3_value**, !dbg !561
  %819 = ptrtoint %struct.sqlite3_value* %812 to i64, !dbg !562
  %820 = ptrtoint %struct.sqlite3_value* %806 to i64, !dbg !563
  %821 = icmp ne i64 %819, %820, !dbg !564
  br i1 %821, label %822, label %825, !dbg !565

822:                                              ; preds = %804
  %823 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 3, !dbg !566
  store %struct.Vdbe* %0, %struct.Vdbe** %823, align 8, !dbg !567
  store %struct.sqlite3_value* %806, %struct.sqlite3_value** %811, align 8, !dbg !568
  %824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !569
  store %struct.sqlite3_value* %824, %struct.sqlite3_value** %818, align 8, !dbg !570
  br label %825, !dbg !571

825:                                              ; preds = %804, %822
  %826 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %806, i32 0, i32 1, !dbg !572
  %827 = load i16, i16* %826, align 2, !dbg !573
  %828 = and i16 %827, 15936, !dbg !573
  %829 = or i16 %828, 1, !dbg !573
  store i16 %829, i16* %826, align 2, !dbg !573
  %830 = load %struct.FuncDef*, %struct.FuncDef** %813, align 8, !dbg !574
  %831 = getelementptr %struct.FuncDef, %struct.FuncDef* %830, i32 0, i32 4, !dbg !575
  %832 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %831, align 8, !dbg !576
  call void %832(%struct.sqlite3_context* %810, i32 %816, %struct.sqlite3_value** %818), !dbg !577
  %833 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %810, i32 0, i32 5, !dbg !578
  %834 = load i32, i32* %833, align 4, !dbg !579
  %835 = icmp ne i32 %834, 0, !dbg !580
  %836 = icmp sgt i32 %834, 0, !dbg !581
  br i1 %836, label %837, label %839, !dbg !582

837:                                              ; preds = %825
  %838 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %806), !dbg !583
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %838), !dbg !584
  br label %839, !dbg !585

839:                                              ; preds = %837, %825
  %840 = load i16, i16* %826, align 2, !dbg !586
  %841 = and i16 %840, 18, !dbg !587
  %842 = icmp ne i16 %841, 0, !dbg !588
  br i1 %842, label %843, label %846, !dbg !589

843:                                              ; preds = %839
  %844 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %806, i32 1), !dbg !590
  %845 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %806), !dbg !591
  br label %846, !dbg !592

846:                                              ; preds = %843, %839, %14, %777
  %847 = call i8* @llvm.stacksave(), !dbg !593
  %848 = alloca i32, align 8, !dbg !596
  %849 = alloca i32, align 8, !dbg !597
  %850 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !598
  %851 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !599
  %852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %850, i32 0, i32 1, !dbg !600
  %853 = load i16, i16* %852, align 2, !dbg !601
  %854 = alloca i16, align 8, !dbg !602
  store i16 %853, i16* %854, align 2, !dbg !603
  %855 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %851, i32 0, i32 1, !dbg !604
  %856 = load i16, i16* %855, align 2, !dbg !605
  %857 = alloca i16, align 8, !dbg !606
  store i16 %856, i16* %857, align 2, !dbg !607
  %858 = or i16 %853, %856, !dbg !608
  %859 = and i16 %858, 1, !dbg !609
  %860 = icmp ne i16 %859, 0, !dbg !610
  br i1 %860, label %861, label %862, !dbg !611

861:                                              ; preds = %846
  call void @llvm.stackrestore(i8* %847), !dbg !612
  br label %5705, !dbg !613

862:                                              ; preds = %846
  %863 = and i16 %853, 2, !dbg !614
  %864 = and i16 %853, 44, !dbg !615
  %865 = icmp eq i16 %863, 0, !dbg !616
  %866 = icmp ne i16 %864, 0, !dbg !617
  %867 = and i16 %856, 2, !dbg !618
  %868 = and i16 %856, 44, !dbg !619
  %869 = icmp eq i16 %867, 0, !dbg !620
  %870 = icmp ne i16 %868, 0, !dbg !621
  %871 = and i1 %865, %866, !dbg !622
  br i1 %871, label %872, label %878, !dbg !623

872:                                              ; preds = %862
  %873 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %850, i8 1, i8 1), !dbg !624
  %874 = load i16, i16* %852, align 2, !dbg !625
  %875 = and i16 %874, 15936, !dbg !625
  %876 = and i16 %853, -15937, !dbg !626
  %877 = or i16 %875, %876, !dbg !627
  store i16 %877, i16* %854, align 2, !dbg !628
  br label %878, !dbg !629

878:                                              ; preds = %872, %862
  %879 = and i1 %869, %870, !dbg !630
  br i1 %879, label %880, label %886, !dbg !631

880:                                              ; preds = %878
  %881 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %851, i8 1, i8 1), !dbg !632
  %882 = load i16, i16* %855, align 2, !dbg !633
  %883 = and i16 %882, 15936, !dbg !633
  %884 = and i16 %856, -15937, !dbg !634
  %885 = or i16 %883, %884, !dbg !635
  store i16 %885, i16* %857, align 2, !dbg !636
  br label %886, !dbg !637

886:                                              ; preds = %880, %878
  %887 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 19, !dbg !638
  %888 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %887, i32 0, i32 6, !dbg !639
  %889 = bitcast %union.p4union* %888 to %struct.CollSeq**, !dbg !640
  %890 = load %struct.CollSeq*, %struct.CollSeq** %889, align 8, !dbg !641
  %891 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %851, %struct.sqlite3_value* %850, %struct.CollSeq* %890), !dbg !642
  store i32 %891, i32* %848, align 4, !dbg !643
  %892 = icmp slt i32 %891, 0, !dbg !644
  br i1 %892, label %893, label %894, !dbg !645

893:                                              ; preds = %886
  store i32 1, i32* %849, align 4, !dbg !646
  br label %895, !dbg !647

894:                                              ; preds = %886
  store i32 0, i32* %849, align 4, !dbg !648
  br label %895, !dbg !648

895:                                              ; preds = %894, %893
  store i16 %856, i16* %857, align 2, !dbg !649
  store i16 %853, i16* %854, align 2, !dbg !650
  %896 = load i32, i32* %849, align 4, !dbg !651
  %897 = icmp ne i32 %896, 0, !dbg !652
  call void @llvm.stackrestore(i8* %847), !dbg !653
  br i1 %897, label %5705, label %898, !dbg !654

898:                                              ; preds = %14, %895
  %899 = call i8* @llvm.stacksave(), !dbg !162
  %900 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %901 = load i8, i8* %900, align 1, !dbg !166
  %902 = alloca i32, align 4, !dbg !167
  store i32 1, i32* %902, align 4, !dbg !168
  %903 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !169
  %904 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %905 = load %struct.VdbeCursor*, %struct.VdbeCursor** %903, align 8, !dbg !171
  store %struct.VdbeCursor* %905, %struct.VdbeCursor** %904, align 8, !dbg !172
  %906 = alloca i8*, align 8, !dbg !173
  %907 = alloca i32, align 4, !dbg !174
  %908 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %904, i32* %902), !dbg !175
  %909 = load %struct.VdbeCursor*, %struct.VdbeCursor** %904, align 8, !dbg !176
  %910 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !177
  %911 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 16, !dbg !178
  %912 = load i16, i16* %911, align 2, !dbg !179
  %913 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 19, !dbg !180
  %914 = load i32*, i32** %913, align 8, !dbg !181
  %915 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 0, !dbg !182
  %916 = load i8, i8* %915, align 1, !dbg !183
  %917 = icmp ne i8 %916, 3, !dbg !184
  %918 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 2, !dbg !185
  %919 = load i8, i8* %918, align 1, !dbg !186
  %920 = icmp ne i8 %919, 0, !dbg !187
  %921 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 14, !dbg !188
  %922 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 21, !dbg !189
  %923 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 22, !dbg !190
  %924 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 20, !dbg !191
  %925 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 17, !dbg !192
  %926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 9, !dbg !193
  %927 = load i32, i32* %926, align 4, !dbg !194
  %928 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %929 = load i32, i32* %928, align 4, !dbg !196
  %930 = icmp ne i32 %927, %929, !dbg !197
  br i1 %930, label %931, label %973, !dbg !198

931:                                              ; preds = %898
  br i1 %920, label %953, label %948, !dbg !199

932:                                              ; preds = %948, %955
  %933 = load i32, i32* %928, align 4, !dbg !200
  store i32 %933, i32* %926, align 4, !dbg !201
  %934 = load i8*, i8** %924, align 8, !dbg !202
  %935 = load i8, i8* %934, align 1, !dbg !203
  %936 = icmp sgt i8 %935, -1, !dbg !206
  br i1 %936, label %937, label %939, !dbg !207

937:                                              ; preds = %932
  %938 = zext i8 %935 to i32, !dbg !208
  store i32 %938, i32* %914, align 4, !dbg !209
  store i32 1, i32* %921, align 4, !dbg !210
  br label %942, !dbg !211

939:                                              ; preds = %932
  %940 = call i8 @sqlite3GetVarint32(i8* %934, i32* %914), !dbg !212
  %941 = zext i8 %940 to i32, !dbg !213
  store i32 %941, i32* %921, align 4, !dbg !214
  br label %942, !dbg !215

942:                                              ; preds = %939, %937
  store i16 0, i16* %925, align 2, !dbg !216
  %943 = load i32, i32* %923, align 4, !dbg !217
  %944 = load i32, i32* %914, align 4, !dbg !218
  %945 = icmp ult i32 %943, %944, !dbg !219
  br i1 %945, label %947, label %946, !dbg !220

946:                                              ; preds = %942
  store i8* %934, i8** %906, align 8, !dbg !221
  br label %1066, !dbg !222

947:                                              ; preds = %942
  store i8* null, i8** %924, align 8, !dbg !223
  store i32 0, i32* %923, align 4, !dbg !224
  br label %973, !dbg !225

948:                                              ; preds = %931
  %949 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 12, i32 0, !dbg !226
  %950 = load %struct.BtCursor*, %struct.BtCursor** %949, align 8, !dbg !227
  %951 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %950), !dbg !228
  store i32 %951, i32* %922, align 4, !dbg !229
  %952 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %950, i32* %923), !dbg !230
  store i8* %952, i8** %924, align 8, !dbg !231
  br label %932, !dbg !232

953:                                              ; preds = %931
  %954 = icmp eq i8 %916, 3, !dbg !233
  br i1 %954, label %955, label %966, !dbg !234

955:                                              ; preds = %953
  %956 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 10, !dbg !235
  %957 = load i32, i32* %956, align 4, !dbg !236
  %958 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %957, !dbg !237
  %959 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %958, i32 0, i32 1, !dbg !238
  %960 = load i16, i16* %959, align 2, !dbg !239
  %961 = and i16 %960, 16, !dbg !240
  %962 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %958, i32 0, i32 4, !dbg !241
  %963 = load i32, i32* %962, align 4, !dbg !242
  store i32 %963, i32* %922, align 4, !dbg !243
  store i32 %963, i32* %923, align 4, !dbg !244
  %964 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %958, i32 0, i32 5, !dbg !245
  %965 = load i8*, i8** %964, align 8, !dbg !246
  store i8* %965, i8** %924, align 8, !dbg !247
  br label %932, !dbg !248

966:                                              ; preds = %953
  %967 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 1, !dbg !249
  %968 = load i16, i16* %967, align 2, !dbg !249
  %969 = and i16 %968, 9216, !dbg !249
  %970 = icmp ne i16 %969, 0, !dbg !249
  br i1 %970, label %971, label %972, !dbg !249

971:                                              ; preds = %966
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %910), !dbg !249
  br label %1154, !dbg !249

972:                                              ; preds = %966
  store i16 1, i16* %967, align 2, !dbg !249
  br label %1154, !dbg !249

973:                                              ; preds = %947, %898
  %974 = load i16, i16* %925, align 2, !dbg !250
  %975 = icmp ule i16 %974, 4, !dbg !251
  br i1 %975, label %1058, label %1055, !dbg !252

976:                                              ; preds = %1055, %1144
  %977 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 1, !dbg !253
  %978 = load i16, i16* %977, align 2, !dbg !254
  %979 = and i16 9216, %978, !dbg !255
  %980 = icmp eq i16 0, %979, !dbg !256
  br i1 %980, label %981, label %985, !dbg !257

981:                                              ; preds = %976
  %982 = icmp ne i16 %979, 0, !dbg !258
  br i1 %982, label %983, label %984, !dbg !258

983:                                              ; preds = %981
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %910), !dbg !258
  br label %985, !dbg !258

984:                                              ; preds = %981
  store i16 1, i16* %977, align 2, !dbg !258
  br label %985, !dbg !258

985:                                              ; preds = %983, %984, %976
  %986 = load i32, i32* %907, align 4, !dbg !259
  %987 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 23, i32 4, !dbg !260
  %988 = load i32, i32* %987, align 4, !dbg !261
  %989 = load i32, i32* %923, align 4, !dbg !262
  %990 = getelementptr i32, i32* %914, i32 5, !dbg !263
  %991 = load i32, i32* %990, align 4, !dbg !264
  %992 = icmp sge i32 %989, %991, !dbg !265
  br i1 %992, label %993, label %1033, !dbg !266

993:                                              ; preds = %985
  %994 = load i8*, i8** %924, align 8, !dbg !267
  %995 = ptrtoint i8* %994 to i64, !dbg !268
  %996 = getelementptr i32, i32* %914, i32 4, !dbg !509
  %997 = load i32, i32* %996, align 4, !dbg !269
  %998 = zext i32 %997 to i64, !dbg !270
  %999 = add i64 %995, %998, !dbg !271
  %1000 = inttoptr i64 %999 to i8*, !dbg !272
  store i8* %1000, i8** %906, align 8, !dbg !273
  %1001 = load i32, i32* %907, align 4, !dbg !274
  %1002 = icmp ult i32 %1001, 12, !dbg !275
  br i1 %1002, label %1003, label %1005, !dbg !276

1003:                                             ; preds = %993
  %1004 = call i32 @sqlite3VdbeSerialGet(i8* %1000, i32 %1001, %struct.sqlite3_value* %910), !dbg !277
  br label %1154, !dbg !278

1005:                                             ; preds = %993
  %1006 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %1006, align 2, !dbg !280
  %1007 = getelementptr i16, i16* %1006, i32 1, !dbg !281
  store i16 514, i16* %1007, align 2, !dbg !282
  %1008 = load i32, i32* %907, align 4, !dbg !283
  %1009 = sub i32 %1008, 12, !dbg !284
  %1010 = lshr i32 %1009, 1, !dbg !285
  %1011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 4, !dbg !286
  store i32 %1010, i32* %1011, align 4, !dbg !287
  %1012 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 2, !dbg !288
  store i8 %901, i8* %1012, align 1, !dbg !289
  %1013 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 5, !dbg !290
  %1014 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 7, !dbg !291
  %1015 = load i32, i32* %1014, align 4, !dbg !292
  %1016 = add i32 %1010, 2, !dbg !293
  %1017 = icmp slt i32 %1015, %1016, !dbg !294
  br i1 %1017, label %1018, label %1020, !dbg !295

1018:                                             ; preds = %1005
  store i16 1, i16* %977, align 2, !dbg !296
  %1019 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %910, i32 %1016, i32 0), !dbg !297
  br label %1023, !dbg !298

1020:                                             ; preds = %1005
  %1021 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 6, !dbg !299
  %1022 = load i8*, i8** %1021, align 8, !dbg !300
  store i8* %1022, i8** %1013, align 8, !dbg !301
  br label %1023, !dbg !302

1023:                                             ; preds = %1020, %1018
  %1024 = zext i32 %1010 to i64, !dbg !303
  %1025 = load i8*, i8** %1013, align 8, !dbg !304
  %1026 = load i8*, i8** %906, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1025, i8* %1026, i64 %1024, i1 false), !dbg !306
  %1027 = getelementptr i8, i8* %1025, i32 %1010, !dbg !307
  store i8 0, i8* %1027, align 1, !dbg !308
  %1028 = add i32 %1010, 1, !dbg !309
  %1029 = getelementptr i8, i8* %1025, i32 %1028, !dbg !310
  store i8 0, i8* %1029, align 1, !dbg !311
  %1030 = and i32 %1008, 1, !dbg !312
  %1031 = getelementptr i16, i16* %1006, i32 %1030, !dbg !313
  %1032 = load i16, i16* %1031, align 2, !dbg !314
  store i16 %1032, i16* %977, align 2, !dbg !315
  br label %1154, !dbg !316

1033:                                             ; preds = %985
  %1034 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 2, !dbg !317
  store i8 %901, i8* %1034, align 1, !dbg !318
  %1035 = load i32, i32* %907, align 4, !dbg !319
  %1036 = and i32 %1035, 1, !dbg !320
  %1037 = icmp eq i32 %1036, 0, !dbg !321
  %1038 = icmp sge i32 %1035, 12, !dbg !322
  %1039 = and i1 %1038, %1037, !dbg !323
  %1040 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1035), !dbg !324
  %1041 = icmp eq i32 %1040, 0, !dbg !325
  br i1 %1041, label %1053, label %1042, !dbg !326

1042:                                             ; preds = %1033
  %1043 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 12, i32 0, !dbg !327
  %1044 = load %struct.BtCursor*, %struct.BtCursor** %1043, align 8, !dbg !328
  %1045 = getelementptr i32, i32* %914, i32 4, !dbg !510
  %1046 = load i32, i32* %1045, align 4, !dbg !329
  %1047 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1044, i32 %1046, i32 %1040, %struct.sqlite3_value* %910), !dbg !330
  %1048 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 5, !dbg !331
  %1049 = load i8*, i8** %1048, align 8, !dbg !332
  %1050 = call i32 @sqlite3VdbeSerialGet(i8* %1049, i32 %1035, %struct.sqlite3_value* %910), !dbg !333
  %1051 = load i16, i16* %977, align 2, !dbg !334
  %1052 = and i16 %1051, -4097, !dbg !335
  store i16 %1052, i16* %977, align 2, !dbg !336
  br label %1154, !dbg !337

1053:                                             ; preds = %1033
  %1054 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1035, %struct.sqlite3_value* %910), !dbg !338
  br label %1154, !dbg !339

1055:                                             ; preds = %973
  %1056 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 23, i32 4, !dbg !340
  %1057 = load i32, i32* %1056, align 4, !dbg !341
  store i32 %1057, i32* %907, align 4, !dbg !342
  br label %976, !dbg !343

1058:                                             ; preds = %973
  %1059 = load i32, i32* %921, align 4, !dbg !344
  %1060 = load i32, i32* %914, align 4, !dbg !345
  %1061 = icmp ult i32 %1059, %1060, !dbg !346
  br i1 %1061, label %1062, label %1143, !dbg !347

1062:                                             ; preds = %1058
  %1063 = load i8*, i8** %924, align 8, !dbg !348
  %1064 = icmp eq i8* %1063, null, !dbg !349
  br i1 %1064, label %1066, label %1065, !dbg !350

1065:                                             ; preds = %1062
  store i8* %1063, i8** %906, align 8, !dbg !351
  br label %1066, !dbg !352

1066:                                             ; preds = %1065, %1062, %946
  %1067 = alloca i32, align 4, !dbg !353
  %1068 = load i16, i16* %925, align 2, !dbg !354
  %1069 = zext i16 %1068 to i32, !dbg !355
  store i32 %1069, i32* %1067, align 4, !dbg !356
  %1070 = alloca i64, align 8, !dbg !357
  %1071 = getelementptr i32, i32* %914, i32 %1069, !dbg !358
  %1072 = load i32, i32* %1071, align 4, !dbg !359
  %1073 = zext i32 %1072 to i64, !dbg !360
  store i64 %1073, i64* %1070, align 4, !dbg !361
  %1074 = load i8*, i8** %906, align 8, !dbg !362
  %1075 = load i32, i32* %921, align 4, !dbg !363
  %1076 = alloca i8*, align 8, !dbg !364
  %1077 = getelementptr i8, i8* %1074, i32 %1075, !dbg !365
  store i8* %1077, i8** %1076, align 8, !dbg !366
  %1078 = load i32, i32* %914, align 4, !dbg !367
  %1079 = getelementptr i8, i8* %1074, i32 %1078, !dbg !368
  br label %1080, !dbg !369

1080:                                             ; preds = %1087, %1066
  %1081 = load i32, i32* %1067, align 4, !dbg !370
  %1082 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %909, i32 0, i32 23, i32 %1081, !dbg !371
  %1083 = load i8*, i8** %1076, align 8, !dbg !372
  %1084 = load i8, i8* %1083, align 1, !dbg !373
  %1085 = zext i8 %1084 to i32, !dbg !374
  store i32 %1085, i32* %907, align 4, !dbg !375
  store i32 %1085, i32* %1082, align 4, !dbg !376
  %1086 = icmp sgt i8 %1084, -1, !dbg !377
  br i1 %1086, label %1110, label %1101, !dbg !378

1087:                                             ; preds = %1101, %1110
  %1088 = load i32, i32* %1067, align 4, !dbg !379
  %1089 = add i32 %1088, 1, !dbg !380
  store i32 %1089, i32* %1067, align 4, !dbg !381
  %1090 = load i64, i64* %1070, align 4, !dbg !382
  %1091 = and i64 4294967295, %1090, !dbg !383
  %1092 = trunc i64 %1091 to i32, !dbg !384
  %1093 = getelementptr i32, i32* %914, i32 %1089, !dbg !385
  store i32 %1092, i32* %1093, align 4, !dbg !386
  %1094 = load i32, i32* %1067, align 4, !dbg !387
  %1095 = icmp sle i32 %1094, 4, !dbg !388
  %1096 = load i8*, i8** %1076, align 8, !dbg !389
  %1097 = ptrtoint i8* %1096 to i64, !dbg !390
  %1098 = ptrtoint i8* %1079 to i64, !dbg !391
  %1099 = icmp ult i64 %1097, %1098, !dbg !392
  %1100 = and i1 %1095, %1099, !dbg !393
  br i1 %1100, label %1080, label %1119, !dbg !394

1101:                                             ; preds = %1080
  %1102 = load i8*, i8** %1076, align 8, !dbg !395
  %1103 = call i8 @sqlite3GetVarint32(i8* %1102, i32* %907), !dbg !396
  %1104 = getelementptr i8, i8* %1102, i8 %1103, !dbg !397
  store i8* %1104, i8** %1076, align 8, !dbg !398
  %1105 = load i32, i32* %907, align 4, !dbg !399
  store i32 %1105, i32* %1082, align 4, !dbg !400
  %1106 = load i64, i64* %1070, align 4, !dbg !401
  %1107 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1105), !dbg !402
  %1108 = zext i32 %1107 to i64, !dbg !403
  %1109 = add i64 %1106, %1108, !dbg !404
  store i64 %1109, i64* %1070, align 4, !dbg !405
  br label %1087, !dbg !406

1110:                                             ; preds = %1080
  %1111 = getelementptr i8, i8* %1083, i32 1, !dbg !407
  store i8* %1111, i8** %1076, align 8, !dbg !408
  %1112 = load i32, i32* %907, align 4, !dbg !409
  %1113 = trunc i32 %1112 to i8, !dbg !410
  %1114 = getelementptr i8, i8* %4, i8 %1113, !dbg !411
  %1115 = load i8, i8* %1114, align 1, !dbg !412
  %1116 = zext i8 %1115 to i64, !dbg !413
  %1117 = load i64, i64* %1070, align 4, !dbg !414
  %1118 = add i64 %1117, %1116, !dbg !415
  store i64 %1118, i64* %1070, align 4, !dbg !416
  br label %1087, !dbg !417

1119:                                             ; preds = %1087
  %1120 = load i64, i64* %1070, align 4, !dbg !418
  %1121 = load i32, i32* %922, align 4, !dbg !419
  %1122 = zext i32 %1121 to i64, !dbg !420
  %1123 = icmp uge i64 %1097, %1098, !dbg !421
  %1124 = icmp ugt i64 %1097, %1098, !dbg !422
  %1125 = icmp ne i64 %1120, %1122, !dbg !423
  %1126 = icmp ugt i64 %1120, %1122, !dbg !424
  %1127 = or i1 %1124, %1125, !dbg !425
  %1128 = and i1 %1123, %1127, !dbg !426
  %1129 = or i1 %1128, %1126, !dbg !427
  br i1 %1129, label %1130, label %1134, !dbg !428

1130:                                             ; preds = %1119
  %1131 = load i32, i32* %914, align 4, !dbg !429
  %1132 = icmp eq i32 %1131, 0, !dbg !430
  br i1 %1132, label %1133, label %1134, !dbg !431

1133:                                             ; preds = %1130
  store i32 0, i32* %1067, align 4, !dbg !432
  store i8* %1079, i8** %1076, align 8, !dbg !433
  br label %1134, !dbg !434

1134:                                             ; preds = %1133, %1130, %1119
  %1135 = load i32, i32* %1067, align 4, !dbg !435
  %1136 = trunc i32 %1135 to i16, !dbg !436
  store i16 %1136, i16* %925, align 2, !dbg !437
  %1137 = load i8*, i8** %1076, align 8, !dbg !438
  %1138 = ptrtoint i8* %1137 to i64, !dbg !439
  %1139 = load i8*, i8** %906, align 8, !dbg !440
  %1140 = ptrtoint i8* %1139 to i64, !dbg !441
  %1141 = sub i64 %1138, %1140, !dbg !442
  %1142 = trunc i64 %1141 to i32, !dbg !443
  store i32 %1142, i32* %921, align 4, !dbg !444
  br label %1144, !dbg !445

1143:                                             ; preds = %1058
  store i32 0, i32* %907, align 4, !dbg !446
  br label %1144, !dbg !447

1144:                                             ; preds = %1134, %1143
  %1145 = load i16, i16* %925, align 2, !dbg !448
  %1146 = icmp sle i16 %1145, 4, !dbg !449
  br i1 %1146, label %1147, label %976, !dbg !450

1147:                                             ; preds = %1144
  %1148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %910, i32 0, i32 1, !dbg !451
  %1149 = load i16, i16* %1148, align 2, !dbg !451
  %1150 = and i16 %1149, 9216, !dbg !451
  %1151 = icmp ne i16 %1150, 0, !dbg !451
  br i1 %1151, label %1152, label %1153, !dbg !451

1152:                                             ; preds = %1147
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %910), !dbg !451
  br label %1154, !dbg !451

1153:                                             ; preds = %1147
  store i16 1, i16* %1148, align 2, !dbg !451
  br label %1154, !dbg !451

1154:                                             ; preds = %1152, %1153, %1023, %1003, %1042, %1053, %971, %972
  call void @llvm.stackrestore(i8* %899), !dbg !452
  br label %1155, !dbg !74

1155:                                             ; preds = %17, %1154
  %1156 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !511
  %1157 = load %struct.VdbeFrame*, %struct.VdbeFrame** %1156, align 8, !dbg !514
  %1158 = ptrtoint %struct.VdbeFrame* %1157 to i64, !dbg !515
  %1159 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !516
  %1160 = load i32, i32* %1159, align 4, !dbg !517
  %1161 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 21, i32 3, !dbg !518
  %1162 = icmp ne i64 %1158, 0, !dbg !519
  br i1 %1162, label %1163, label %1168, !dbg !520

1163:                                             ; preds = %1155
  %1164 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %1157, i32 0, i32 6, !dbg !521
  %1165 = load i8*, i8** %1164, align 8, !dbg !522
  %1166 = getelementptr i8, i8* %1165, i32 2, !dbg !523
  %1167 = load i8, i8* %1166, align 1, !dbg !524
  br label %1171, !dbg !525

1168:                                             ; preds = %1155
  %1169 = load i32, i32* %1161, align 4, !dbg !526
  %1170 = icmp eq i32 %1169, %1160, !dbg !527
  br i1 %1170, label %1262, label %1171, !dbg !528

1171:                                             ; preds = %1168, %1163
  store i32 %1160, i32* %1161, align 4, !dbg !529
  br label %1172, !dbg !530

1172:                                             ; preds = %17, %1171
  %1173 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 22, !dbg !531
  %1174 = call i8* @llvm.stacksave(), !dbg !534
  %1175 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1173, i32 0, i32 4, !dbg !79
  %1176 = load i32, i32* %1175, align 4, !dbg !82
  %1177 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1176, !dbg !83
  %1178 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1177, i32 0, i32 1, !dbg !534
  %1179 = load i16, i16* %1178, align 2, !dbg !534
  %1180 = and i16 %1179, 9216, !dbg !534
  %1181 = icmp ne i16 %1180, 0, !dbg !534
  %1182 = alloca %struct.sqlite3_value*, align 8, !dbg !534
  br i1 %1181, label %1183, label %1185, !dbg !534

1183:                                             ; preds = %1172
  %1184 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %1177), !dbg !534
  store %struct.sqlite3_value* %1184, %struct.sqlite3_value** %1182, align 8, !dbg !534
  br label %1186, !dbg !534

1185:                                             ; preds = %1172
  store i16 4, i16* %1178, align 2, !dbg !534
  store %struct.sqlite3_value* %1177, %struct.sqlite3_value** %1182, align 8, !dbg !534
  br label %1186, !dbg !534

1186:                                             ; preds = %1185, %1183
  %1187 = load %struct.sqlite3_value*, %struct.sqlite3_value** %1182, align 8, !dbg !534
  call void @llvm.stackrestore(i8* %1174), !dbg !534
  %1188 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1187, i32 0, i32 1, !dbg !535
  %1189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1187, i32 0, i32 2, !dbg !536
  %1190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1187, i32 0, i32 4, !dbg !537
  %1191 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1187, i32 0, i32 5, !dbg !538
  store i16 2562, i16* %1188, align 2, !dbg !539
  %1192 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1173, i32 0, i32 6, !dbg !540
  %1193 = bitcast %union.p4union* %1192 to i8**, !dbg !541
  %1194 = load i8*, i8** %1193, align 8, !dbg !542
  store i8* %1194, i8** %1191, align 8, !dbg !543
  store i32 10, i32* %1190, align 4, !dbg !544
  store i8 1, i8* %1189, align 1, !dbg !545
  br label %1195, !dbg !74

1195:                                             ; preds = %17, %1186
  %1196 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 23, !dbg !531
  %1197 = call i8* @llvm.stacksave(), !dbg !534
  %1198 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1196, i32 0, i32 4, !dbg !79
  %1199 = load i32, i32* %1198, align 4, !dbg !82
  %1200 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1199, !dbg !83
  %1201 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1200, i32 0, i32 1, !dbg !534
  %1202 = load i16, i16* %1201, align 2, !dbg !534
  %1203 = and i16 %1202, 9216, !dbg !534
  %1204 = icmp ne i16 %1203, 0, !dbg !534
  %1205 = alloca %struct.sqlite3_value*, align 8, !dbg !534
  br i1 %1204, label %1206, label %1208, !dbg !534

1206:                                             ; preds = %1195
  %1207 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %1200), !dbg !534
  store %struct.sqlite3_value* %1207, %struct.sqlite3_value** %1205, align 8, !dbg !534
  br label %1209, !dbg !534

1208:                                             ; preds = %1195
  store i16 4, i16* %1201, align 2, !dbg !534
  store %struct.sqlite3_value* %1200, %struct.sqlite3_value** %1205, align 8, !dbg !534
  br label %1209, !dbg !534

1209:                                             ; preds = %1208, %1206
  %1210 = load %struct.sqlite3_value*, %struct.sqlite3_value** %1205, align 8, !dbg !534
  call void @llvm.stackrestore(i8* %1197), !dbg !534
  %1211 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1210, i32 0, i32 1, !dbg !535
  %1212 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1210, i32 0, i32 2, !dbg !536
  %1213 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1210, i32 0, i32 4, !dbg !537
  %1214 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1210, i32 0, i32 5, !dbg !538
  store i16 2562, i16* %1211, align 2, !dbg !539
  %1215 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1196, i32 0, i32 6, !dbg !540
  %1216 = bitcast %union.p4union* %1215 to i8**, !dbg !541
  %1217 = load i8*, i8** %1216, align 8, !dbg !542
  store i8* %1217, i8** %1214, align 8, !dbg !543
  store i32 7, i32* %1213, align 4, !dbg !544
  store i8 1, i8* %1212, align 1, !dbg !545
  br label %1218, !dbg !74

1218:                                             ; preds = %17, %1209
  %1219 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !546
  %1220 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !549
  %1221 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 24, !dbg !550
  %1222 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1221, i32 0, i32 6, !dbg !551
  %1223 = bitcast %union.p4union* %1222 to %struct.sqlite3_context**, !dbg !552
  %1224 = load %struct.sqlite3_context*, %struct.sqlite3_context** %1223, align 8, !dbg !553
  %1225 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 0, !dbg !554
  %1226 = load %struct.sqlite3_value*, %struct.sqlite3_value** %1225, align 8, !dbg !555
  %1227 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 1, !dbg !556
  %1228 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 7, !dbg !557
  %1229 = load i8, i8* %1228, align 1, !dbg !558
  %1230 = zext i8 %1229 to i32, !dbg !559
  %1231 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 8, !dbg !560
  %1232 = bitcast [1 x %struct.sqlite3_value*]* %1231 to %struct.sqlite3_value**, !dbg !561
  %1233 = ptrtoint %struct.sqlite3_value* %1226 to i64, !dbg !562
  %1234 = ptrtoint %struct.sqlite3_value* %1220 to i64, !dbg !563
  %1235 = icmp ne i64 %1233, %1234, !dbg !564
  br i1 %1235, label %1236, label %1241, !dbg !565

1236:                                             ; preds = %1218
  %1237 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 3, !dbg !566
  store %struct.Vdbe* %0, %struct.Vdbe** %1237, align 8, !dbg !567
  store %struct.sqlite3_value* %1220, %struct.sqlite3_value** %1225, align 8, !dbg !568
  %1238 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !569
  %1239 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %1232, i32 1, !dbg !655
  store %struct.sqlite3_value* %1238, %struct.sqlite3_value** %1239, align 8, !dbg !570
  %1240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !569
  store %struct.sqlite3_value* %1240, %struct.sqlite3_value** %1232, align 8, !dbg !570
  br label %1241, !dbg !571

1241:                                             ; preds = %1218, %1236
  %1242 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1220, i32 0, i32 1, !dbg !572
  %1243 = load i16, i16* %1242, align 2, !dbg !573
  %1244 = and i16 %1243, 15936, !dbg !573
  %1245 = or i16 %1244, 1, !dbg !573
  store i16 %1245, i16* %1242, align 2, !dbg !573
  %1246 = load %struct.FuncDef*, %struct.FuncDef** %1227, align 8, !dbg !574
  %1247 = getelementptr %struct.FuncDef, %struct.FuncDef* %1246, i32 0, i32 4, !dbg !575
  %1248 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %1247, align 8, !dbg !576
  call void %1248(%struct.sqlite3_context* %1224, i32 %1230, %struct.sqlite3_value** %1232), !dbg !577
  %1249 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %1224, i32 0, i32 5, !dbg !578
  %1250 = load i32, i32* %1249, align 4, !dbg !579
  %1251 = icmp ne i32 %1250, 0, !dbg !580
  %1252 = icmp sgt i32 %1250, 0, !dbg !581
  br i1 %1252, label %1253, label %1255, !dbg !582

1253:                                             ; preds = %1241
  %1254 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %1220), !dbg !583
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %1254), !dbg !584
  br label %1255, !dbg !585

1255:                                             ; preds = %1253, %1241
  %1256 = load i16, i16* %1242, align 2, !dbg !586
  %1257 = and i16 %1256, 18, !dbg !587
  %1258 = icmp ne i16 %1257, 0, !dbg !588
  br i1 %1258, label %1259, label %1262, !dbg !589

1259:                                             ; preds = %1255
  %1260 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %1220, i32 1), !dbg !590
  %1261 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %1220), !dbg !591
  br label %1262, !dbg !592

1262:                                             ; preds = %1259, %1255, %17, %1168
  %1263 = call i8* @llvm.stacksave(), !dbg !593
  %1264 = alloca i32, align 8, !dbg !596
  %1265 = alloca i32, align 8, !dbg !597
  %1266 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !598
  %1267 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !599
  %1268 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1266, i32 0, i32 1, !dbg !600
  %1269 = load i16, i16* %1268, align 2, !dbg !601
  %1270 = alloca i16, align 8, !dbg !602
  store i16 %1269, i16* %1270, align 2, !dbg !603
  %1271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1267, i32 0, i32 1, !dbg !604
  %1272 = load i16, i16* %1271, align 2, !dbg !605
  %1273 = alloca i16, align 8, !dbg !606
  store i16 %1272, i16* %1273, align 2, !dbg !607
  %1274 = or i16 %1269, %1272, !dbg !608
  %1275 = and i16 %1274, 1, !dbg !609
  %1276 = icmp ne i16 %1275, 0, !dbg !610
  br i1 %1276, label %1277, label %1278, !dbg !611

1277:                                             ; preds = %1262
  call void @llvm.stackrestore(i8* %1263), !dbg !612
  br label %5705, !dbg !613

1278:                                             ; preds = %1262
  %1279 = and i16 %1269, 2, !dbg !614
  %1280 = and i16 %1269, 44, !dbg !615
  %1281 = icmp eq i16 %1279, 0, !dbg !616
  %1282 = icmp ne i16 %1280, 0, !dbg !617
  %1283 = and i16 %1272, 2, !dbg !618
  %1284 = and i16 %1272, 44, !dbg !619
  %1285 = icmp eq i16 %1283, 0, !dbg !620
  %1286 = icmp ne i16 %1284, 0, !dbg !621
  %1287 = and i1 %1281, %1282, !dbg !622
  br i1 %1287, label %1288, label %1294, !dbg !623

1288:                                             ; preds = %1278
  %1289 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1266, i8 1, i8 1), !dbg !624
  %1290 = load i16, i16* %1268, align 2, !dbg !625
  %1291 = and i16 %1290, 15936, !dbg !625
  %1292 = and i16 %1269, -15937, !dbg !626
  %1293 = or i16 %1291, %1292, !dbg !627
  store i16 %1293, i16* %1270, align 2, !dbg !628
  br label %1294, !dbg !629

1294:                                             ; preds = %1288, %1278
  %1295 = and i1 %1285, %1286, !dbg !630
  br i1 %1295, label %1296, label %1302, !dbg !631

1296:                                             ; preds = %1294
  %1297 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1267, i8 1, i8 1), !dbg !632
  %1298 = load i16, i16* %1271, align 2, !dbg !633
  %1299 = and i16 %1298, 15936, !dbg !633
  %1300 = and i16 %1272, -15937, !dbg !634
  %1301 = or i16 %1299, %1300, !dbg !635
  store i16 %1301, i16* %1273, align 2, !dbg !636
  br label %1302, !dbg !637

1302:                                             ; preds = %1296, %1294
  %1303 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 25, !dbg !638
  %1304 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1303, i32 0, i32 6, !dbg !639
  %1305 = bitcast %union.p4union* %1304 to %struct.CollSeq**, !dbg !640
  %1306 = load %struct.CollSeq*, %struct.CollSeq** %1305, align 8, !dbg !641
  %1307 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %1267, %struct.sqlite3_value* %1266, %struct.CollSeq* %1306), !dbg !642
  store i32 %1307, i32* %1264, align 4, !dbg !643
  %1308 = icmp slt i32 %1307, 0, !dbg !644
  br i1 %1308, label %1309, label %1310, !dbg !645

1309:                                             ; preds = %1302
  store i32 0, i32* %1265, align 4, !dbg !646
  br label %1311, !dbg !647

1310:                                             ; preds = %1302
  store i32 1, i32* %1265, align 4, !dbg !648
  br label %1311, !dbg !648

1311:                                             ; preds = %1310, %1309
  store i16 %1272, i16* %1273, align 2, !dbg !649
  store i16 %1269, i16* %1270, align 2, !dbg !650
  %1312 = load i32, i32* %1265, align 4, !dbg !651
  %1313 = icmp ne i32 %1312, 0, !dbg !652
  call void @llvm.stackrestore(i8* %1263), !dbg !653
  br i1 %1313, label %5705, label %1314, !dbg !654

1314:                                             ; preds = %17, %1311
  %1315 = call i8* @llvm.stacksave(), !dbg !162
  %1316 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %1317 = load i8, i8* %1316, align 1, !dbg !166
  %1318 = alloca i32, align 4, !dbg !167
  store i32 1, i32* %1318, align 4, !dbg !168
  %1319 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !169
  %1320 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %1321 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1319, align 8, !dbg !171
  store %struct.VdbeCursor* %1321, %struct.VdbeCursor** %1320, align 8, !dbg !172
  %1322 = alloca i8*, align 8, !dbg !173
  %1323 = alloca i32, align 4, !dbg !174
  %1324 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1320, i32* %1318), !dbg !175
  %1325 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1320, align 8, !dbg !176
  %1326 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !177
  %1327 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 16, !dbg !178
  %1328 = load i16, i16* %1327, align 2, !dbg !179
  %1329 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 19, !dbg !180
  %1330 = load i32*, i32** %1329, align 8, !dbg !181
  %1331 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 0, !dbg !182
  %1332 = load i8, i8* %1331, align 1, !dbg !183
  %1333 = icmp ne i8 %1332, 3, !dbg !184
  %1334 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 2, !dbg !185
  %1335 = load i8, i8* %1334, align 1, !dbg !186
  %1336 = icmp ne i8 %1335, 0, !dbg !187
  %1337 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 14, !dbg !188
  %1338 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 21, !dbg !189
  %1339 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 22, !dbg !190
  %1340 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 20, !dbg !191
  %1341 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 17, !dbg !192
  %1342 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 9, !dbg !193
  %1343 = load i32, i32* %1342, align 4, !dbg !194
  %1344 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %1345 = load i32, i32* %1344, align 4, !dbg !196
  %1346 = icmp ne i32 %1343, %1345, !dbg !197
  br i1 %1346, label %1347, label %1389, !dbg !198

1347:                                             ; preds = %1314
  br i1 %1336, label %1369, label %1364, !dbg !199

1348:                                             ; preds = %1364, %1371
  %1349 = load i32, i32* %1344, align 4, !dbg !200
  store i32 %1349, i32* %1342, align 4, !dbg !201
  %1350 = load i8*, i8** %1340, align 8, !dbg !202
  %1351 = load i8, i8* %1350, align 1, !dbg !203
  %1352 = icmp sgt i8 %1351, -1, !dbg !206
  br i1 %1352, label %1353, label %1355, !dbg !207

1353:                                             ; preds = %1348
  %1354 = zext i8 %1351 to i32, !dbg !208
  store i32 %1354, i32* %1330, align 4, !dbg !209
  store i32 1, i32* %1337, align 4, !dbg !210
  br label %1358, !dbg !211

1355:                                             ; preds = %1348
  %1356 = call i8 @sqlite3GetVarint32(i8* %1350, i32* %1330), !dbg !212
  %1357 = zext i8 %1356 to i32, !dbg !213
  store i32 %1357, i32* %1337, align 4, !dbg !214
  br label %1358, !dbg !215

1358:                                             ; preds = %1355, %1353
  store i16 0, i16* %1341, align 2, !dbg !216
  %1359 = load i32, i32* %1339, align 4, !dbg !217
  %1360 = load i32, i32* %1330, align 4, !dbg !218
  %1361 = icmp ult i32 %1359, %1360, !dbg !219
  br i1 %1361, label %1363, label %1362, !dbg !220

1362:                                             ; preds = %1358
  store i8* %1350, i8** %1322, align 8, !dbg !221
  br label %1482, !dbg !222

1363:                                             ; preds = %1358
  store i8* null, i8** %1340, align 8, !dbg !223
  store i32 0, i32* %1339, align 4, !dbg !224
  br label %1389, !dbg !225

1364:                                             ; preds = %1347
  %1365 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 12, i32 0, !dbg !226
  %1366 = load %struct.BtCursor*, %struct.BtCursor** %1365, align 8, !dbg !227
  %1367 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1366), !dbg !228
  store i32 %1367, i32* %1338, align 4, !dbg !229
  %1368 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1366, i32* %1339), !dbg !230
  store i8* %1368, i8** %1340, align 8, !dbg !231
  br label %1348, !dbg !232

1369:                                             ; preds = %1347
  %1370 = icmp eq i8 %1332, 3, !dbg !233
  br i1 %1370, label %1371, label %1382, !dbg !234

1371:                                             ; preds = %1369
  %1372 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 10, !dbg !235
  %1373 = load i32, i32* %1372, align 4, !dbg !236
  %1374 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1373, !dbg !237
  %1375 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1374, i32 0, i32 1, !dbg !238
  %1376 = load i16, i16* %1375, align 2, !dbg !239
  %1377 = and i16 %1376, 16, !dbg !240
  %1378 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1374, i32 0, i32 4, !dbg !241
  %1379 = load i32, i32* %1378, align 4, !dbg !242
  store i32 %1379, i32* %1338, align 4, !dbg !243
  store i32 %1379, i32* %1339, align 4, !dbg !244
  %1380 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1374, i32 0, i32 5, !dbg !245
  %1381 = load i8*, i8** %1380, align 8, !dbg !246
  store i8* %1381, i8** %1340, align 8, !dbg !247
  br label %1348, !dbg !248

1382:                                             ; preds = %1369
  %1383 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 1, !dbg !249
  %1384 = load i16, i16* %1383, align 2, !dbg !249
  %1385 = and i16 %1384, 9216, !dbg !249
  %1386 = icmp ne i16 %1385, 0, !dbg !249
  br i1 %1386, label %1387, label %1388, !dbg !249

1387:                                             ; preds = %1382
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1326), !dbg !249
  br label %1570, !dbg !249

1388:                                             ; preds = %1382
  store i16 1, i16* %1383, align 2, !dbg !249
  br label %1570, !dbg !249

1389:                                             ; preds = %1363, %1314
  %1390 = load i16, i16* %1341, align 2, !dbg !250
  %1391 = icmp ule i16 %1390, 1, !dbg !251
  br i1 %1391, label %1474, label %1471, !dbg !252

1392:                                             ; preds = %1471, %1560
  %1393 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 1, !dbg !253
  %1394 = load i16, i16* %1393, align 2, !dbg !254
  %1395 = and i16 9216, %1394, !dbg !255
  %1396 = icmp eq i16 0, %1395, !dbg !256
  br i1 %1396, label %1397, label %1401, !dbg !257

1397:                                             ; preds = %1392
  %1398 = icmp ne i16 %1395, 0, !dbg !258
  br i1 %1398, label %1399, label %1400, !dbg !258

1399:                                             ; preds = %1397
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1326), !dbg !258
  br label %1401, !dbg !258

1400:                                             ; preds = %1397
  store i16 1, i16* %1393, align 2, !dbg !258
  br label %1401, !dbg !258

1401:                                             ; preds = %1399, %1400, %1392
  %1402 = load i32, i32* %1323, align 4, !dbg !259
  %1403 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 23, i32 1, !dbg !260
  %1404 = load i32, i32* %1403, align 4, !dbg !261
  %1405 = load i32, i32* %1339, align 4, !dbg !262
  %1406 = getelementptr i32, i32* %1330, i32 2, !dbg !263
  %1407 = load i32, i32* %1406, align 4, !dbg !264
  %1408 = icmp sge i32 %1405, %1407, !dbg !265
  br i1 %1408, label %1409, label %1449, !dbg !266

1409:                                             ; preds = %1401
  %1410 = load i8*, i8** %1340, align 8, !dbg !267
  %1411 = ptrtoint i8* %1410 to i64, !dbg !268
  %1412 = getelementptr i32, i32* %1330, i32 1, !dbg !509
  %1413 = load i32, i32* %1412, align 4, !dbg !269
  %1414 = zext i32 %1413 to i64, !dbg !270
  %1415 = add i64 %1411, %1414, !dbg !271
  %1416 = inttoptr i64 %1415 to i8*, !dbg !272
  store i8* %1416, i8** %1322, align 8, !dbg !273
  %1417 = load i32, i32* %1323, align 4, !dbg !274
  %1418 = icmp ult i32 %1417, 12, !dbg !275
  br i1 %1418, label %1419, label %1421, !dbg !276

1419:                                             ; preds = %1409
  %1420 = call i32 @sqlite3VdbeSerialGet(i8* %1416, i32 %1417, %struct.sqlite3_value* %1326), !dbg !277
  br label %1570, !dbg !278

1421:                                             ; preds = %1409
  %1422 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %1422, align 2, !dbg !280
  %1423 = getelementptr i16, i16* %1422, i32 1, !dbg !281
  store i16 514, i16* %1423, align 2, !dbg !282
  %1424 = load i32, i32* %1323, align 4, !dbg !283
  %1425 = sub i32 %1424, 12, !dbg !284
  %1426 = lshr i32 %1425, 1, !dbg !285
  %1427 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 4, !dbg !286
  store i32 %1426, i32* %1427, align 4, !dbg !287
  %1428 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 2, !dbg !288
  store i8 %1317, i8* %1428, align 1, !dbg !289
  %1429 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 5, !dbg !290
  %1430 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 7, !dbg !291
  %1431 = load i32, i32* %1430, align 4, !dbg !292
  %1432 = add i32 %1426, 2, !dbg !293
  %1433 = icmp slt i32 %1431, %1432, !dbg !294
  br i1 %1433, label %1434, label %1436, !dbg !295

1434:                                             ; preds = %1421
  store i16 1, i16* %1393, align 2, !dbg !296
  %1435 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1326, i32 %1432, i32 0), !dbg !297
  br label %1439, !dbg !298

1436:                                             ; preds = %1421
  %1437 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 6, !dbg !299
  %1438 = load i8*, i8** %1437, align 8, !dbg !300
  store i8* %1438, i8** %1429, align 8, !dbg !301
  br label %1439, !dbg !302

1439:                                             ; preds = %1436, %1434
  %1440 = zext i32 %1426 to i64, !dbg !303
  %1441 = load i8*, i8** %1429, align 8, !dbg !304
  %1442 = load i8*, i8** %1322, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1441, i8* %1442, i64 %1440, i1 false), !dbg !306
  %1443 = getelementptr i8, i8* %1441, i32 %1426, !dbg !307
  store i8 0, i8* %1443, align 1, !dbg !308
  %1444 = add i32 %1426, 1, !dbg !309
  %1445 = getelementptr i8, i8* %1441, i32 %1444, !dbg !310
  store i8 0, i8* %1445, align 1, !dbg !311
  %1446 = and i32 %1424, 1, !dbg !312
  %1447 = getelementptr i16, i16* %1422, i32 %1446, !dbg !313
  %1448 = load i16, i16* %1447, align 2, !dbg !314
  store i16 %1448, i16* %1393, align 2, !dbg !315
  br label %1570, !dbg !316

1449:                                             ; preds = %1401
  %1450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 2, !dbg !317
  store i8 %1317, i8* %1450, align 1, !dbg !318
  %1451 = load i32, i32* %1323, align 4, !dbg !319
  %1452 = and i32 %1451, 1, !dbg !320
  %1453 = icmp eq i32 %1452, 0, !dbg !321
  %1454 = icmp sge i32 %1451, 12, !dbg !322
  %1455 = and i1 %1454, %1453, !dbg !323
  %1456 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1451), !dbg !324
  %1457 = icmp eq i32 %1456, 0, !dbg !325
  br i1 %1457, label %1469, label %1458, !dbg !326

1458:                                             ; preds = %1449
  %1459 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 12, i32 0, !dbg !327
  %1460 = load %struct.BtCursor*, %struct.BtCursor** %1459, align 8, !dbg !328
  %1461 = getelementptr i32, i32* %1330, i32 1, !dbg !510
  %1462 = load i32, i32* %1461, align 4, !dbg !329
  %1463 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1460, i32 %1462, i32 %1456, %struct.sqlite3_value* %1326), !dbg !330
  %1464 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 5, !dbg !331
  %1465 = load i8*, i8** %1464, align 8, !dbg !332
  %1466 = call i32 @sqlite3VdbeSerialGet(i8* %1465, i32 %1451, %struct.sqlite3_value* %1326), !dbg !333
  %1467 = load i16, i16* %1393, align 2, !dbg !334
  %1468 = and i16 %1467, -4097, !dbg !335
  store i16 %1468, i16* %1393, align 2, !dbg !336
  br label %1570, !dbg !337

1469:                                             ; preds = %1449
  %1470 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1451, %struct.sqlite3_value* %1326), !dbg !338
  br label %1570, !dbg !339

1471:                                             ; preds = %1389
  %1472 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 23, i32 1, !dbg !340
  %1473 = load i32, i32* %1472, align 4, !dbg !341
  store i32 %1473, i32* %1323, align 4, !dbg !342
  br label %1392, !dbg !343

1474:                                             ; preds = %1389
  %1475 = load i32, i32* %1337, align 4, !dbg !344
  %1476 = load i32, i32* %1330, align 4, !dbg !345
  %1477 = icmp ult i32 %1475, %1476, !dbg !346
  br i1 %1477, label %1478, label %1559, !dbg !347

1478:                                             ; preds = %1474
  %1479 = load i8*, i8** %1340, align 8, !dbg !348
  %1480 = icmp eq i8* %1479, null, !dbg !349
  br i1 %1480, label %1482, label %1481, !dbg !350

1481:                                             ; preds = %1478
  store i8* %1479, i8** %1322, align 8, !dbg !351
  br label %1482, !dbg !352

1482:                                             ; preds = %1481, %1478, %1362
  %1483 = alloca i32, align 4, !dbg !353
  %1484 = load i16, i16* %1341, align 2, !dbg !354
  %1485 = zext i16 %1484 to i32, !dbg !355
  store i32 %1485, i32* %1483, align 4, !dbg !356
  %1486 = alloca i64, align 8, !dbg !357
  %1487 = getelementptr i32, i32* %1330, i32 %1485, !dbg !358
  %1488 = load i32, i32* %1487, align 4, !dbg !359
  %1489 = zext i32 %1488 to i64, !dbg !360
  store i64 %1489, i64* %1486, align 4, !dbg !361
  %1490 = load i8*, i8** %1322, align 8, !dbg !362
  %1491 = load i32, i32* %1337, align 4, !dbg !363
  %1492 = alloca i8*, align 8, !dbg !364
  %1493 = getelementptr i8, i8* %1490, i32 %1491, !dbg !365
  store i8* %1493, i8** %1492, align 8, !dbg !366
  %1494 = load i32, i32* %1330, align 4, !dbg !367
  %1495 = getelementptr i8, i8* %1490, i32 %1494, !dbg !368
  br label %1496, !dbg !369

1496:                                             ; preds = %1503, %1482
  %1497 = load i32, i32* %1483, align 4, !dbg !370
  %1498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1325, i32 0, i32 23, i32 %1497, !dbg !371
  %1499 = load i8*, i8** %1492, align 8, !dbg !372
  %1500 = load i8, i8* %1499, align 1, !dbg !373
  %1501 = zext i8 %1500 to i32, !dbg !374
  store i32 %1501, i32* %1323, align 4, !dbg !375
  store i32 %1501, i32* %1498, align 4, !dbg !376
  %1502 = icmp sgt i8 %1500, -1, !dbg !377
  br i1 %1502, label %1526, label %1517, !dbg !378

1503:                                             ; preds = %1517, %1526
  %1504 = load i32, i32* %1483, align 4, !dbg !379
  %1505 = add i32 %1504, 1, !dbg !380
  store i32 %1505, i32* %1483, align 4, !dbg !381
  %1506 = load i64, i64* %1486, align 4, !dbg !382
  %1507 = and i64 4294967295, %1506, !dbg !383
  %1508 = trunc i64 %1507 to i32, !dbg !384
  %1509 = getelementptr i32, i32* %1330, i32 %1505, !dbg !385
  store i32 %1508, i32* %1509, align 4, !dbg !386
  %1510 = load i32, i32* %1483, align 4, !dbg !387
  %1511 = icmp sle i32 %1510, 1, !dbg !388
  %1512 = load i8*, i8** %1492, align 8, !dbg !389
  %1513 = ptrtoint i8* %1512 to i64, !dbg !390
  %1514 = ptrtoint i8* %1495 to i64, !dbg !391
  %1515 = icmp ult i64 %1513, %1514, !dbg !392
  %1516 = and i1 %1511, %1515, !dbg !393
  br i1 %1516, label %1496, label %1535, !dbg !394

1517:                                             ; preds = %1496
  %1518 = load i8*, i8** %1492, align 8, !dbg !395
  %1519 = call i8 @sqlite3GetVarint32(i8* %1518, i32* %1323), !dbg !396
  %1520 = getelementptr i8, i8* %1518, i8 %1519, !dbg !397
  store i8* %1520, i8** %1492, align 8, !dbg !398
  %1521 = load i32, i32* %1323, align 4, !dbg !399
  store i32 %1521, i32* %1498, align 4, !dbg !400
  %1522 = load i64, i64* %1486, align 4, !dbg !401
  %1523 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1521), !dbg !402
  %1524 = zext i32 %1523 to i64, !dbg !403
  %1525 = add i64 %1522, %1524, !dbg !404
  store i64 %1525, i64* %1486, align 4, !dbg !405
  br label %1503, !dbg !406

1526:                                             ; preds = %1496
  %1527 = getelementptr i8, i8* %1499, i32 1, !dbg !407
  store i8* %1527, i8** %1492, align 8, !dbg !408
  %1528 = load i32, i32* %1323, align 4, !dbg !409
  %1529 = trunc i32 %1528 to i8, !dbg !410
  %1530 = getelementptr i8, i8* %4, i8 %1529, !dbg !411
  %1531 = load i8, i8* %1530, align 1, !dbg !412
  %1532 = zext i8 %1531 to i64, !dbg !413
  %1533 = load i64, i64* %1486, align 4, !dbg !414
  %1534 = add i64 %1533, %1532, !dbg !415
  store i64 %1534, i64* %1486, align 4, !dbg !416
  br label %1503, !dbg !417

1535:                                             ; preds = %1503
  %1536 = load i64, i64* %1486, align 4, !dbg !418
  %1537 = load i32, i32* %1338, align 4, !dbg !419
  %1538 = zext i32 %1537 to i64, !dbg !420
  %1539 = icmp uge i64 %1513, %1514, !dbg !421
  %1540 = icmp ugt i64 %1513, %1514, !dbg !422
  %1541 = icmp ne i64 %1536, %1538, !dbg !423
  %1542 = icmp ugt i64 %1536, %1538, !dbg !424
  %1543 = or i1 %1540, %1541, !dbg !425
  %1544 = and i1 %1539, %1543, !dbg !426
  %1545 = or i1 %1544, %1542, !dbg !427
  br i1 %1545, label %1546, label %1550, !dbg !428

1546:                                             ; preds = %1535
  %1547 = load i32, i32* %1330, align 4, !dbg !429
  %1548 = icmp eq i32 %1547, 0, !dbg !430
  br i1 %1548, label %1549, label %1550, !dbg !431

1549:                                             ; preds = %1546
  store i32 0, i32* %1483, align 4, !dbg !432
  store i8* %1495, i8** %1492, align 8, !dbg !433
  br label %1550, !dbg !434

1550:                                             ; preds = %1549, %1546, %1535
  %1551 = load i32, i32* %1483, align 4, !dbg !435
  %1552 = trunc i32 %1551 to i16, !dbg !436
  store i16 %1552, i16* %1341, align 2, !dbg !437
  %1553 = load i8*, i8** %1492, align 8, !dbg !438
  %1554 = ptrtoint i8* %1553 to i64, !dbg !439
  %1555 = load i8*, i8** %1322, align 8, !dbg !440
  %1556 = ptrtoint i8* %1555 to i64, !dbg !441
  %1557 = sub i64 %1554, %1556, !dbg !442
  %1558 = trunc i64 %1557 to i32, !dbg !443
  store i32 %1558, i32* %1337, align 4, !dbg !444
  br label %1560, !dbg !445

1559:                                             ; preds = %1474
  store i32 0, i32* %1323, align 4, !dbg !446
  br label %1560, !dbg !447

1560:                                             ; preds = %1550, %1559
  %1561 = load i16, i16* %1341, align 2, !dbg !448
  %1562 = icmp sle i16 %1561, 1, !dbg !449
  br i1 %1562, label %1563, label %1392, !dbg !450

1563:                                             ; preds = %1560
  %1564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1326, i32 0, i32 1, !dbg !451
  %1565 = load i16, i16* %1564, align 2, !dbg !451
  %1566 = and i16 %1565, 9216, !dbg !451
  %1567 = icmp ne i16 %1566, 0, !dbg !451
  br i1 %1567, label %1568, label %1569, !dbg !451

1568:                                             ; preds = %1563
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1326), !dbg !451
  br label %1570, !dbg !451

1569:                                             ; preds = %1563
  store i16 1, i16* %1564, align 2, !dbg !451
  br label %1570, !dbg !451

1570:                                             ; preds = %1568, %1569, %1439, %1419, %1458, %1469, %1387, %1388
  call void @llvm.stackrestore(i8* %1315), !dbg !452
  br label %1571, !dbg !74

1571:                                             ; preds = %17, %1570
  %1572 = call i8* @llvm.stacksave(), !dbg !453
  %1573 = alloca i32, align 8, !dbg !456
  %1574 = alloca i64, align 8, !dbg !457
  %1575 = alloca i32, align 8, !dbg !458
  %1576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !459
  %1577 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1576, i32 0, i32 1, !dbg !460
  %1578 = load i16, i16* %1577, align 2, !dbg !461
  %1579 = and i16 %1578, 36, !dbg !462
  %1580 = icmp eq i16 %1579, 0, !dbg !463
  br i1 %1580, label %1581, label %1592, !dbg !464

1581:                                             ; preds = %1571
  %1582 = alloca %struct.sqlite3_value, align 8, !dbg !465
  %1583 = load %struct.sqlite3_value, %struct.sqlite3_value* %1576, align 8, !dbg !466
  store %struct.sqlite3_value %1583, %struct.sqlite3_value* %1582, align 8, !dbg !466
  call void @applyAffinity(%struct.sqlite3_value* %1582, i8 67, i8 1), !dbg !467
  %1584 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1582, i32 0, i32 1, !dbg !468
  %1585 = load i16, i16* %1584, align 2, !dbg !469
  %1586 = and i16 %1585, 4, !dbg !470
  %1587 = icmp eq i16 %1586, 0, !dbg !471
  br i1 %1587, label %5705, label %1588, !dbg !472

1588:                                             ; preds = %1581
  %1589 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1582, i32 0, i32 0, !dbg !473
  %1590 = bitcast %union.MemValue* %1589 to i64*, !dbg !474
  %1591 = load i64, i64* %1590, align 4, !dbg !475
  store i64 %1591, i64* %1574, align 4, !dbg !476
  br label %1596, !dbg !477

1592:                                             ; preds = %1571
  %1593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1576, i32 0, i32 0, !dbg !478
  %1594 = bitcast %union.MemValue* %1593 to i64*, !dbg !479
  %1595 = load i64, i64* %1594, align 4, !dbg !480
  store i64 %1595, i64* %1574, align 4, !dbg !481
  br label %1596, !dbg !482

1596:                                             ; preds = %1592, %1588
  %1597 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !484
  %1598 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 12, i32 0, !dbg !485
  %1599 = load %struct.BtCursor*, %struct.BtCursor** %1598, align 8, !dbg !486
  store i32 0, i32* %1573, align 4, !dbg !487
  %1600 = load i64, i64* %1574, align 4, !dbg !488
  %1601 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %1599, %struct.UnpackedRecord* null, i64 %1600, i32 0, i32* %1573), !dbg !489
  store i32 %1601, i32* %1575, align 4, !dbg !490
  %1602 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 18, !dbg !491
  store i64 %1600, i64* %1602, align 4, !dbg !492
  %1603 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 2, !dbg !493
  store i8 0, i8* %1603, align 1, !dbg !494
  %1604 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 9, !dbg !495
  store i32 0, i32* %1604, align 4, !dbg !496
  %1605 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 3, !dbg !497
  store i8 0, i8* %1605, align 1, !dbg !498
  %1606 = load i32, i32* %1573, align 4, !dbg !499
  %1607 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1597, i32 0, i32 10, !dbg !500
  store i32 %1606, i32* %1607, align 4, !dbg !501
  %1608 = icmp ne i32 %1606, 0, !dbg !502
  br i1 %1608, label %1609, label %1610, !dbg !503

1609:                                             ; preds = %1596
  call void @llvm.stackrestore(i8* %1572), !dbg !504
  br label %5705, !dbg !505

1610:                                             ; preds = %1596
  %1611 = load i32, i32* %1575, align 4, !dbg !506
  call void @llvm.stackrestore(i8* %1572), !dbg !507
  br label %1612, !dbg !508

1612:                                             ; preds = %17, %1610
  %1613 = call i8* @llvm.stacksave(), !dbg !162
  %1614 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %1615 = load i8, i8* %1614, align 1, !dbg !166
  %1616 = alloca i32, align 4, !dbg !167
  store i32 2, i32* %1616, align 4, !dbg !168
  %1617 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !169
  %1618 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %1619 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1617, align 8, !dbg !171
  store %struct.VdbeCursor* %1619, %struct.VdbeCursor** %1618, align 8, !dbg !172
  %1620 = alloca i8*, align 8, !dbg !173
  %1621 = alloca i32, align 4, !dbg !174
  %1622 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1618, i32* %1616), !dbg !175
  %1623 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1618, align 8, !dbg !176
  %1624 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !177
  %1625 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 16, !dbg !178
  %1626 = load i16, i16* %1625, align 2, !dbg !179
  %1627 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 19, !dbg !180
  %1628 = load i32*, i32** %1627, align 8, !dbg !181
  %1629 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 0, !dbg !182
  %1630 = load i8, i8* %1629, align 1, !dbg !183
  %1631 = icmp ne i8 %1630, 3, !dbg !184
  %1632 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 2, !dbg !185
  %1633 = load i8, i8* %1632, align 1, !dbg !186
  %1634 = icmp ne i8 %1633, 0, !dbg !187
  %1635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 14, !dbg !188
  %1636 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 21, !dbg !189
  %1637 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 22, !dbg !190
  %1638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 20, !dbg !191
  %1639 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 17, !dbg !192
  %1640 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 9, !dbg !193
  %1641 = load i32, i32* %1640, align 4, !dbg !194
  %1642 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %1643 = load i32, i32* %1642, align 4, !dbg !196
  %1644 = icmp ne i32 %1641, %1643, !dbg !197
  br i1 %1644, label %1645, label %1687, !dbg !198

1645:                                             ; preds = %1612
  br i1 %1634, label %1667, label %1662, !dbg !199

1646:                                             ; preds = %1662, %1669
  %1647 = load i32, i32* %1642, align 4, !dbg !200
  store i32 %1647, i32* %1640, align 4, !dbg !201
  %1648 = load i8*, i8** %1638, align 8, !dbg !202
  %1649 = load i8, i8* %1648, align 1, !dbg !203
  %1650 = icmp sgt i8 %1649, -1, !dbg !206
  br i1 %1650, label %1651, label %1653, !dbg !207

1651:                                             ; preds = %1646
  %1652 = zext i8 %1649 to i32, !dbg !208
  store i32 %1652, i32* %1628, align 4, !dbg !209
  store i32 1, i32* %1635, align 4, !dbg !210
  br label %1656, !dbg !211

1653:                                             ; preds = %1646
  %1654 = call i8 @sqlite3GetVarint32(i8* %1648, i32* %1628), !dbg !212
  %1655 = zext i8 %1654 to i32, !dbg !213
  store i32 %1655, i32* %1635, align 4, !dbg !214
  br label %1656, !dbg !215

1656:                                             ; preds = %1653, %1651
  store i16 0, i16* %1639, align 2, !dbg !216
  %1657 = load i32, i32* %1637, align 4, !dbg !217
  %1658 = load i32, i32* %1628, align 4, !dbg !218
  %1659 = icmp ult i32 %1657, %1658, !dbg !219
  br i1 %1659, label %1661, label %1660, !dbg !220

1660:                                             ; preds = %1656
  store i8* %1648, i8** %1620, align 8, !dbg !221
  br label %1780, !dbg !222

1661:                                             ; preds = %1656
  store i8* null, i8** %1638, align 8, !dbg !223
  store i32 0, i32* %1637, align 4, !dbg !224
  br label %1687, !dbg !225

1662:                                             ; preds = %1645
  %1663 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 12, i32 0, !dbg !226
  %1664 = load %struct.BtCursor*, %struct.BtCursor** %1663, align 8, !dbg !227
  %1665 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1664), !dbg !228
  store i32 %1665, i32* %1636, align 4, !dbg !229
  %1666 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1664, i32* %1637), !dbg !230
  store i8* %1666, i8** %1638, align 8, !dbg !231
  br label %1646, !dbg !232

1667:                                             ; preds = %1645
  %1668 = icmp eq i8 %1630, 3, !dbg !233
  br i1 %1668, label %1669, label %1680, !dbg !234

1669:                                             ; preds = %1667
  %1670 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 10, !dbg !235
  %1671 = load i32, i32* %1670, align 4, !dbg !236
  %1672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1671, !dbg !237
  %1673 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1672, i32 0, i32 1, !dbg !238
  %1674 = load i16, i16* %1673, align 2, !dbg !239
  %1675 = and i16 %1674, 16, !dbg !240
  %1676 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1672, i32 0, i32 4, !dbg !241
  %1677 = load i32, i32* %1676, align 4, !dbg !242
  store i32 %1677, i32* %1636, align 4, !dbg !243
  store i32 %1677, i32* %1637, align 4, !dbg !244
  %1678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1672, i32 0, i32 5, !dbg !245
  %1679 = load i8*, i8** %1678, align 8, !dbg !246
  store i8* %1679, i8** %1638, align 8, !dbg !247
  br label %1646, !dbg !248

1680:                                             ; preds = %1667
  %1681 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 1, !dbg !249
  %1682 = load i16, i16* %1681, align 2, !dbg !249
  %1683 = and i16 %1682, 9216, !dbg !249
  %1684 = icmp ne i16 %1683, 0, !dbg !249
  br i1 %1684, label %1685, label %1686, !dbg !249

1685:                                             ; preds = %1680
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1624), !dbg !249
  br label %1868, !dbg !249

1686:                                             ; preds = %1680
  store i16 1, i16* %1681, align 2, !dbg !249
  br label %1868, !dbg !249

1687:                                             ; preds = %1661, %1612
  %1688 = load i16, i16* %1639, align 2, !dbg !250
  %1689 = icmp ule i16 %1688, 2, !dbg !251
  br i1 %1689, label %1772, label %1769, !dbg !252

1690:                                             ; preds = %1769, %1858
  %1691 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 1, !dbg !253
  %1692 = load i16, i16* %1691, align 2, !dbg !254
  %1693 = and i16 9216, %1692, !dbg !255
  %1694 = icmp eq i16 0, %1693, !dbg !256
  br i1 %1694, label %1695, label %1699, !dbg !257

1695:                                             ; preds = %1690
  %1696 = icmp ne i16 %1693, 0, !dbg !258
  br i1 %1696, label %1697, label %1698, !dbg !258

1697:                                             ; preds = %1695
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1624), !dbg !258
  br label %1699, !dbg !258

1698:                                             ; preds = %1695
  store i16 1, i16* %1691, align 2, !dbg !258
  br label %1699, !dbg !258

1699:                                             ; preds = %1697, %1698, %1690
  %1700 = load i32, i32* %1621, align 4, !dbg !259
  %1701 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 23, i32 2, !dbg !260
  %1702 = load i32, i32* %1701, align 4, !dbg !261
  %1703 = load i32, i32* %1637, align 4, !dbg !262
  %1704 = getelementptr i32, i32* %1628, i32 3, !dbg !263
  %1705 = load i32, i32* %1704, align 4, !dbg !264
  %1706 = icmp sge i32 %1703, %1705, !dbg !265
  br i1 %1706, label %1707, label %1747, !dbg !266

1707:                                             ; preds = %1699
  %1708 = load i8*, i8** %1638, align 8, !dbg !267
  %1709 = ptrtoint i8* %1708 to i64, !dbg !268
  %1710 = getelementptr i32, i32* %1628, i32 2, !dbg !509
  %1711 = load i32, i32* %1710, align 4, !dbg !269
  %1712 = zext i32 %1711 to i64, !dbg !270
  %1713 = add i64 %1709, %1712, !dbg !271
  %1714 = inttoptr i64 %1713 to i8*, !dbg !272
  store i8* %1714, i8** %1620, align 8, !dbg !273
  %1715 = load i32, i32* %1621, align 4, !dbg !274
  %1716 = icmp ult i32 %1715, 12, !dbg !275
  br i1 %1716, label %1717, label %1719, !dbg !276

1717:                                             ; preds = %1707
  %1718 = call i32 @sqlite3VdbeSerialGet(i8* %1714, i32 %1715, %struct.sqlite3_value* %1624), !dbg !277
  br label %1868, !dbg !278

1719:                                             ; preds = %1707
  %1720 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %1720, align 2, !dbg !280
  %1721 = getelementptr i16, i16* %1720, i32 1, !dbg !281
  store i16 514, i16* %1721, align 2, !dbg !282
  %1722 = load i32, i32* %1621, align 4, !dbg !283
  %1723 = sub i32 %1722, 12, !dbg !284
  %1724 = lshr i32 %1723, 1, !dbg !285
  %1725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 4, !dbg !286
  store i32 %1724, i32* %1725, align 4, !dbg !287
  %1726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 2, !dbg !288
  store i8 %1615, i8* %1726, align 1, !dbg !289
  %1727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 5, !dbg !290
  %1728 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 7, !dbg !291
  %1729 = load i32, i32* %1728, align 4, !dbg !292
  %1730 = add i32 %1724, 2, !dbg !293
  %1731 = icmp slt i32 %1729, %1730, !dbg !294
  br i1 %1731, label %1732, label %1734, !dbg !295

1732:                                             ; preds = %1719
  store i16 1, i16* %1691, align 2, !dbg !296
  %1733 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1624, i32 %1730, i32 0), !dbg !297
  br label %1737, !dbg !298

1734:                                             ; preds = %1719
  %1735 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 6, !dbg !299
  %1736 = load i8*, i8** %1735, align 8, !dbg !300
  store i8* %1736, i8** %1727, align 8, !dbg !301
  br label %1737, !dbg !302

1737:                                             ; preds = %1734, %1732
  %1738 = zext i32 %1724 to i64, !dbg !303
  %1739 = load i8*, i8** %1727, align 8, !dbg !304
  %1740 = load i8*, i8** %1620, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1739, i8* %1740, i64 %1738, i1 false), !dbg !306
  %1741 = getelementptr i8, i8* %1739, i32 %1724, !dbg !307
  store i8 0, i8* %1741, align 1, !dbg !308
  %1742 = add i32 %1724, 1, !dbg !309
  %1743 = getelementptr i8, i8* %1739, i32 %1742, !dbg !310
  store i8 0, i8* %1743, align 1, !dbg !311
  %1744 = and i32 %1722, 1, !dbg !312
  %1745 = getelementptr i16, i16* %1720, i32 %1744, !dbg !313
  %1746 = load i16, i16* %1745, align 2, !dbg !314
  store i16 %1746, i16* %1691, align 2, !dbg !315
  br label %1868, !dbg !316

1747:                                             ; preds = %1699
  %1748 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 2, !dbg !317
  store i8 %1615, i8* %1748, align 1, !dbg !318
  %1749 = load i32, i32* %1621, align 4, !dbg !319
  %1750 = and i32 %1749, 1, !dbg !320
  %1751 = icmp eq i32 %1750, 0, !dbg !321
  %1752 = icmp sge i32 %1749, 12, !dbg !322
  %1753 = and i1 %1752, %1751, !dbg !323
  %1754 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1749), !dbg !324
  %1755 = icmp eq i32 %1754, 0, !dbg !325
  br i1 %1755, label %1767, label %1756, !dbg !326

1756:                                             ; preds = %1747
  %1757 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 12, i32 0, !dbg !327
  %1758 = load %struct.BtCursor*, %struct.BtCursor** %1757, align 8, !dbg !328
  %1759 = getelementptr i32, i32* %1628, i32 2, !dbg !510
  %1760 = load i32, i32* %1759, align 4, !dbg !329
  %1761 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1758, i32 %1760, i32 %1754, %struct.sqlite3_value* %1624), !dbg !330
  %1762 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 5, !dbg !331
  %1763 = load i8*, i8** %1762, align 8, !dbg !332
  %1764 = call i32 @sqlite3VdbeSerialGet(i8* %1763, i32 %1749, %struct.sqlite3_value* %1624), !dbg !333
  %1765 = load i16, i16* %1691, align 2, !dbg !334
  %1766 = and i16 %1765, -4097, !dbg !335
  store i16 %1766, i16* %1691, align 2, !dbg !336
  br label %1868, !dbg !337

1767:                                             ; preds = %1747
  %1768 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1749, %struct.sqlite3_value* %1624), !dbg !338
  br label %1868, !dbg !339

1769:                                             ; preds = %1687
  %1770 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 23, i32 2, !dbg !340
  %1771 = load i32, i32* %1770, align 4, !dbg !341
  store i32 %1771, i32* %1621, align 4, !dbg !342
  br label %1690, !dbg !343

1772:                                             ; preds = %1687
  %1773 = load i32, i32* %1635, align 4, !dbg !344
  %1774 = load i32, i32* %1628, align 4, !dbg !345
  %1775 = icmp ult i32 %1773, %1774, !dbg !346
  br i1 %1775, label %1776, label %1857, !dbg !347

1776:                                             ; preds = %1772
  %1777 = load i8*, i8** %1638, align 8, !dbg !348
  %1778 = icmp eq i8* %1777, null, !dbg !349
  br i1 %1778, label %1780, label %1779, !dbg !350

1779:                                             ; preds = %1776
  store i8* %1777, i8** %1620, align 8, !dbg !351
  br label %1780, !dbg !352

1780:                                             ; preds = %1779, %1776, %1660
  %1781 = alloca i32, align 4, !dbg !353
  %1782 = load i16, i16* %1639, align 2, !dbg !354
  %1783 = zext i16 %1782 to i32, !dbg !355
  store i32 %1783, i32* %1781, align 4, !dbg !356
  %1784 = alloca i64, align 8, !dbg !357
  %1785 = getelementptr i32, i32* %1628, i32 %1783, !dbg !358
  %1786 = load i32, i32* %1785, align 4, !dbg !359
  %1787 = zext i32 %1786 to i64, !dbg !360
  store i64 %1787, i64* %1784, align 4, !dbg !361
  %1788 = load i8*, i8** %1620, align 8, !dbg !362
  %1789 = load i32, i32* %1635, align 4, !dbg !363
  %1790 = alloca i8*, align 8, !dbg !364
  %1791 = getelementptr i8, i8* %1788, i32 %1789, !dbg !365
  store i8* %1791, i8** %1790, align 8, !dbg !366
  %1792 = load i32, i32* %1628, align 4, !dbg !367
  %1793 = getelementptr i8, i8* %1788, i32 %1792, !dbg !368
  br label %1794, !dbg !369

1794:                                             ; preds = %1801, %1780
  %1795 = load i32, i32* %1781, align 4, !dbg !370
  %1796 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1623, i32 0, i32 23, i32 %1795, !dbg !371
  %1797 = load i8*, i8** %1790, align 8, !dbg !372
  %1798 = load i8, i8* %1797, align 1, !dbg !373
  %1799 = zext i8 %1798 to i32, !dbg !374
  store i32 %1799, i32* %1621, align 4, !dbg !375
  store i32 %1799, i32* %1796, align 4, !dbg !376
  %1800 = icmp sgt i8 %1798, -1, !dbg !377
  br i1 %1800, label %1824, label %1815, !dbg !378

1801:                                             ; preds = %1815, %1824
  %1802 = load i32, i32* %1781, align 4, !dbg !379
  %1803 = add i32 %1802, 1, !dbg !380
  store i32 %1803, i32* %1781, align 4, !dbg !381
  %1804 = load i64, i64* %1784, align 4, !dbg !382
  %1805 = and i64 4294967295, %1804, !dbg !383
  %1806 = trunc i64 %1805 to i32, !dbg !384
  %1807 = getelementptr i32, i32* %1628, i32 %1803, !dbg !385
  store i32 %1806, i32* %1807, align 4, !dbg !386
  %1808 = load i32, i32* %1781, align 4, !dbg !387
  %1809 = icmp sle i32 %1808, 2, !dbg !388
  %1810 = load i8*, i8** %1790, align 8, !dbg !389
  %1811 = ptrtoint i8* %1810 to i64, !dbg !390
  %1812 = ptrtoint i8* %1793 to i64, !dbg !391
  %1813 = icmp ult i64 %1811, %1812, !dbg !392
  %1814 = and i1 %1809, %1813, !dbg !393
  br i1 %1814, label %1794, label %1833, !dbg !394

1815:                                             ; preds = %1794
  %1816 = load i8*, i8** %1790, align 8, !dbg !395
  %1817 = call i8 @sqlite3GetVarint32(i8* %1816, i32* %1621), !dbg !396
  %1818 = getelementptr i8, i8* %1816, i8 %1817, !dbg !397
  store i8* %1818, i8** %1790, align 8, !dbg !398
  %1819 = load i32, i32* %1621, align 4, !dbg !399
  store i32 %1819, i32* %1796, align 4, !dbg !400
  %1820 = load i64, i64* %1784, align 4, !dbg !401
  %1821 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1819), !dbg !402
  %1822 = zext i32 %1821 to i64, !dbg !403
  %1823 = add i64 %1820, %1822, !dbg !404
  store i64 %1823, i64* %1784, align 4, !dbg !405
  br label %1801, !dbg !406

1824:                                             ; preds = %1794
  %1825 = getelementptr i8, i8* %1797, i32 1, !dbg !407
  store i8* %1825, i8** %1790, align 8, !dbg !408
  %1826 = load i32, i32* %1621, align 4, !dbg !409
  %1827 = trunc i32 %1826 to i8, !dbg !410
  %1828 = getelementptr i8, i8* %4, i8 %1827, !dbg !411
  %1829 = load i8, i8* %1828, align 1, !dbg !412
  %1830 = zext i8 %1829 to i64, !dbg !413
  %1831 = load i64, i64* %1784, align 4, !dbg !414
  %1832 = add i64 %1831, %1830, !dbg !415
  store i64 %1832, i64* %1784, align 4, !dbg !416
  br label %1801, !dbg !417

1833:                                             ; preds = %1801
  %1834 = load i64, i64* %1784, align 4, !dbg !418
  %1835 = load i32, i32* %1636, align 4, !dbg !419
  %1836 = zext i32 %1835 to i64, !dbg !420
  %1837 = icmp uge i64 %1811, %1812, !dbg !421
  %1838 = icmp ugt i64 %1811, %1812, !dbg !422
  %1839 = icmp ne i64 %1834, %1836, !dbg !423
  %1840 = icmp ugt i64 %1834, %1836, !dbg !424
  %1841 = or i1 %1838, %1839, !dbg !425
  %1842 = and i1 %1837, %1841, !dbg !426
  %1843 = or i1 %1842, %1840, !dbg !427
  br i1 %1843, label %1844, label %1848, !dbg !428

1844:                                             ; preds = %1833
  %1845 = load i32, i32* %1628, align 4, !dbg !429
  %1846 = icmp eq i32 %1845, 0, !dbg !430
  br i1 %1846, label %1847, label %1848, !dbg !431

1847:                                             ; preds = %1844
  store i32 0, i32* %1781, align 4, !dbg !432
  store i8* %1793, i8** %1790, align 8, !dbg !433
  br label %1848, !dbg !434

1848:                                             ; preds = %1847, %1844, %1833
  %1849 = load i32, i32* %1781, align 4, !dbg !435
  %1850 = trunc i32 %1849 to i16, !dbg !436
  store i16 %1850, i16* %1639, align 2, !dbg !437
  %1851 = load i8*, i8** %1790, align 8, !dbg !438
  %1852 = ptrtoint i8* %1851 to i64, !dbg !439
  %1853 = load i8*, i8** %1620, align 8, !dbg !440
  %1854 = ptrtoint i8* %1853 to i64, !dbg !441
  %1855 = sub i64 %1852, %1854, !dbg !442
  %1856 = trunc i64 %1855 to i32, !dbg !443
  store i32 %1856, i32* %1635, align 4, !dbg !444
  br label %1858, !dbg !445

1857:                                             ; preds = %1772
  store i32 0, i32* %1621, align 4, !dbg !446
  br label %1858, !dbg !447

1858:                                             ; preds = %1848, %1857
  %1859 = load i16, i16* %1639, align 2, !dbg !448
  %1860 = icmp sle i16 %1859, 2, !dbg !449
  br i1 %1860, label %1861, label %1690, !dbg !450

1861:                                             ; preds = %1858
  %1862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1624, i32 0, i32 1, !dbg !451
  %1863 = load i16, i16* %1862, align 2, !dbg !451
  %1864 = and i16 %1863, 9216, !dbg !451
  %1865 = icmp ne i16 %1864, 0, !dbg !451
  br i1 %1865, label %1866, label %1867, !dbg !451

1866:                                             ; preds = %1861
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1624), !dbg !451
  br label %1868, !dbg !451

1867:                                             ; preds = %1861
  store i16 1, i16* %1862, align 2, !dbg !451
  br label %1868, !dbg !451

1868:                                             ; preds = %1866, %1867, %1737, %1717, %1756, %1767, %1685, %1686
  call void @llvm.stackrestore(i8* %1613), !dbg !452
  br label %1869, !dbg !74

1869:                                             ; preds = %17, %1868
  %1870 = call i8* @llvm.stacksave(), !dbg !453
  %1871 = alloca i32, align 8, !dbg !456
  %1872 = alloca i64, align 8, !dbg !457
  %1873 = alloca i32, align 8, !dbg !458
  %1874 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !459
  %1875 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1874, i32 0, i32 1, !dbg !460
  %1876 = load i16, i16* %1875, align 2, !dbg !461
  %1877 = and i16 %1876, 36, !dbg !462
  %1878 = icmp eq i16 %1877, 0, !dbg !463
  br i1 %1878, label %1879, label %1890, !dbg !464

1879:                                             ; preds = %1869
  %1880 = alloca %struct.sqlite3_value, align 8, !dbg !465
  %1881 = load %struct.sqlite3_value, %struct.sqlite3_value* %1874, align 8, !dbg !466
  store %struct.sqlite3_value %1881, %struct.sqlite3_value* %1880, align 8, !dbg !466
  call void @applyAffinity(%struct.sqlite3_value* %1880, i8 67, i8 1), !dbg !467
  %1882 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1880, i32 0, i32 1, !dbg !468
  %1883 = load i16, i16* %1882, align 2, !dbg !469
  %1884 = and i16 %1883, 4, !dbg !470
  %1885 = icmp eq i16 %1884, 0, !dbg !471
  br i1 %1885, label %5705, label %1886, !dbg !472

1886:                                             ; preds = %1879
  %1887 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1880, i32 0, i32 0, !dbg !473
  %1888 = bitcast %union.MemValue* %1887 to i64*, !dbg !474
  %1889 = load i64, i64* %1888, align 4, !dbg !475
  store i64 %1889, i64* %1872, align 4, !dbg !476
  br label %1894, !dbg !477

1890:                                             ; preds = %1869
  %1891 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1874, i32 0, i32 0, !dbg !478
  %1892 = bitcast %union.MemValue* %1891 to i64*, !dbg !479
  %1893 = load i64, i64* %1892, align 4, !dbg !480
  store i64 %1893, i64* %1872, align 4, !dbg !481
  br label %1894, !dbg !482

1894:                                             ; preds = %1890, %1886
  %1895 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !483
  %1896 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1895, align 8, !dbg !484
  %1897 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 12, i32 0, !dbg !485
  %1898 = load %struct.BtCursor*, %struct.BtCursor** %1897, align 8, !dbg !486
  store i32 0, i32* %1871, align 4, !dbg !487
  %1899 = load i64, i64* %1872, align 4, !dbg !488
  %1900 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %1898, %struct.UnpackedRecord* null, i64 %1899, i32 0, i32* %1871), !dbg !489
  store i32 %1900, i32* %1873, align 4, !dbg !490
  %1901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 18, !dbg !491
  store i64 %1899, i64* %1901, align 4, !dbg !492
  %1902 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 2, !dbg !493
  store i8 0, i8* %1902, align 1, !dbg !494
  %1903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 9, !dbg !495
  store i32 0, i32* %1903, align 4, !dbg !496
  %1904 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 3, !dbg !497
  store i8 0, i8* %1904, align 1, !dbg !498
  %1905 = load i32, i32* %1871, align 4, !dbg !499
  %1906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1896, i32 0, i32 10, !dbg !500
  store i32 %1905, i32* %1906, align 4, !dbg !501
  %1907 = icmp ne i32 %1905, 0, !dbg !502
  br i1 %1907, label %1908, label %1909, !dbg !503

1908:                                             ; preds = %1894
  call void @llvm.stackrestore(i8* %1870), !dbg !504
  br label %5705, !dbg !505

1909:                                             ; preds = %1894
  %1910 = load i32, i32* %1873, align 4, !dbg !506
  call void @llvm.stackrestore(i8* %1870), !dbg !507
  br label %1911, !dbg !508

1911:                                             ; preds = %17, %1909
  %1912 = call i8* @llvm.stacksave(), !dbg !162
  %1913 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %1914 = load i8, i8* %1913, align 1, !dbg !166
  %1915 = alloca i32, align 4, !dbg !167
  store i32 0, i32* %1915, align 4, !dbg !168
  %1916 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %1917 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !171
  store %struct.VdbeCursor* %1917, %struct.VdbeCursor** %1916, align 8, !dbg !172
  %1918 = alloca i8*, align 8, !dbg !173
  %1919 = alloca i32, align 4, !dbg !174
  %1920 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1916, i32* %1915), !dbg !175
  %1921 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1916, align 8, !dbg !176
  %1922 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !177
  %1923 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 16, !dbg !178
  %1924 = load i16, i16* %1923, align 2, !dbg !179
  %1925 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 19, !dbg !180
  %1926 = load i32*, i32** %1925, align 8, !dbg !181
  %1927 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 0, !dbg !182
  %1928 = load i8, i8* %1927, align 1, !dbg !183
  %1929 = icmp ne i8 %1928, 3, !dbg !184
  %1930 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 2, !dbg !185
  %1931 = load i8, i8* %1930, align 1, !dbg !186
  %1932 = icmp ne i8 %1931, 0, !dbg !187
  %1933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 14, !dbg !188
  %1934 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 21, !dbg !189
  %1935 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 22, !dbg !190
  %1936 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 20, !dbg !191
  %1937 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 17, !dbg !192
  %1938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 9, !dbg !193
  %1939 = load i32, i32* %1938, align 4, !dbg !194
  %1940 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %1941 = load i32, i32* %1940, align 4, !dbg !196
  %1942 = icmp ne i32 %1939, %1941, !dbg !197
  br i1 %1942, label %1943, label %1985, !dbg !198

1943:                                             ; preds = %1911
  br i1 %1932, label %1965, label %1960, !dbg !199

1944:                                             ; preds = %1960, %1967
  %1945 = load i32, i32* %1940, align 4, !dbg !200
  store i32 %1945, i32* %1938, align 4, !dbg !201
  %1946 = load i8*, i8** %1936, align 8, !dbg !202
  %1947 = load i8, i8* %1946, align 1, !dbg !203
  %1948 = icmp sgt i8 %1947, -1, !dbg !206
  br i1 %1948, label %1949, label %1951, !dbg !207

1949:                                             ; preds = %1944
  %1950 = zext i8 %1947 to i32, !dbg !208
  store i32 %1950, i32* %1926, align 4, !dbg !209
  store i32 1, i32* %1933, align 4, !dbg !210
  br label %1954, !dbg !211

1951:                                             ; preds = %1944
  %1952 = call i8 @sqlite3GetVarint32(i8* %1946, i32* %1926), !dbg !212
  %1953 = zext i8 %1952 to i32, !dbg !213
  store i32 %1953, i32* %1933, align 4, !dbg !214
  br label %1954, !dbg !215

1954:                                             ; preds = %1951, %1949
  store i16 0, i16* %1937, align 2, !dbg !216
  %1955 = load i32, i32* %1935, align 4, !dbg !217
  %1956 = load i32, i32* %1926, align 4, !dbg !218
  %1957 = icmp ult i32 %1955, %1956, !dbg !219
  br i1 %1957, label %1959, label %1958, !dbg !220

1958:                                             ; preds = %1954
  store i8* %1946, i8** %1918, align 8, !dbg !221
  br label %2078, !dbg !222

1959:                                             ; preds = %1954
  store i8* null, i8** %1936, align 8, !dbg !223
  store i32 0, i32* %1935, align 4, !dbg !224
  br label %1985, !dbg !225

1960:                                             ; preds = %1943
  %1961 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 12, i32 0, !dbg !226
  %1962 = load %struct.BtCursor*, %struct.BtCursor** %1961, align 8, !dbg !227
  %1963 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1962), !dbg !228
  store i32 %1963, i32* %1934, align 4, !dbg !229
  %1964 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1962, i32* %1935), !dbg !230
  store i8* %1964, i8** %1936, align 8, !dbg !231
  br label %1944, !dbg !232

1965:                                             ; preds = %1943
  %1966 = icmp eq i8 %1928, 3, !dbg !233
  br i1 %1966, label %1967, label %1978, !dbg !234

1967:                                             ; preds = %1965
  %1968 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 10, !dbg !235
  %1969 = load i32, i32* %1968, align 4, !dbg !236
  %1970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1969, !dbg !237
  %1971 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 1, !dbg !238
  %1972 = load i16, i16* %1971, align 2, !dbg !239
  %1973 = and i16 %1972, 16, !dbg !240
  %1974 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 4, !dbg !241
  %1975 = load i32, i32* %1974, align 4, !dbg !242
  store i32 %1975, i32* %1934, align 4, !dbg !243
  store i32 %1975, i32* %1935, align 4, !dbg !244
  %1976 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1970, i32 0, i32 5, !dbg !245
  %1977 = load i8*, i8** %1976, align 8, !dbg !246
  store i8* %1977, i8** %1936, align 8, !dbg !247
  br label %1944, !dbg !248

1978:                                             ; preds = %1965
  %1979 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 1, !dbg !249
  %1980 = load i16, i16* %1979, align 2, !dbg !249
  %1981 = and i16 %1980, 9216, !dbg !249
  %1982 = icmp ne i16 %1981, 0, !dbg !249
  br i1 %1982, label %1983, label %1984, !dbg !249

1983:                                             ; preds = %1978
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1922), !dbg !249
  br label %2166, !dbg !249

1984:                                             ; preds = %1978
  store i16 1, i16* %1979, align 2, !dbg !249
  br label %2166, !dbg !249

1985:                                             ; preds = %1959, %1911
  %1986 = load i16, i16* %1937, align 2, !dbg !250
  %1987 = icmp ule i16 %1986, 3, !dbg !251
  br i1 %1987, label %2070, label %2067, !dbg !252

1988:                                             ; preds = %2067, %2156
  %1989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 1, !dbg !253
  %1990 = load i16, i16* %1989, align 2, !dbg !254
  %1991 = and i16 9216, %1990, !dbg !255
  %1992 = icmp eq i16 0, %1991, !dbg !256
  br i1 %1992, label %1993, label %1997, !dbg !257

1993:                                             ; preds = %1988
  %1994 = icmp ne i16 %1991, 0, !dbg !258
  br i1 %1994, label %1995, label %1996, !dbg !258

1995:                                             ; preds = %1993
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1922), !dbg !258
  br label %1997, !dbg !258

1996:                                             ; preds = %1993
  store i16 1, i16* %1989, align 2, !dbg !258
  br label %1997, !dbg !258

1997:                                             ; preds = %1995, %1996, %1988
  %1998 = load i32, i32* %1919, align 4, !dbg !259
  %1999 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 23, i32 3, !dbg !260
  %2000 = load i32, i32* %1999, align 4, !dbg !261
  %2001 = load i32, i32* %1935, align 4, !dbg !262
  %2002 = getelementptr i32, i32* %1926, i32 4, !dbg !263
  %2003 = load i32, i32* %2002, align 4, !dbg !264
  %2004 = icmp sge i32 %2001, %2003, !dbg !265
  br i1 %2004, label %2005, label %2045, !dbg !266

2005:                                             ; preds = %1997
  %2006 = load i8*, i8** %1936, align 8, !dbg !267
  %2007 = ptrtoint i8* %2006 to i64, !dbg !268
  %2008 = getelementptr i32, i32* %1926, i32 3, !dbg !509
  %2009 = load i32, i32* %2008, align 4, !dbg !269
  %2010 = zext i32 %2009 to i64, !dbg !270
  %2011 = add i64 %2007, %2010, !dbg !271
  %2012 = inttoptr i64 %2011 to i8*, !dbg !272
  store i8* %2012, i8** %1918, align 8, !dbg !273
  %2013 = load i32, i32* %1919, align 4, !dbg !274
  %2014 = icmp ult i32 %2013, 12, !dbg !275
  br i1 %2014, label %2015, label %2017, !dbg !276

2015:                                             ; preds = %2005
  %2016 = call i32 @sqlite3VdbeSerialGet(i8* %2012, i32 %2013, %struct.sqlite3_value* %1922), !dbg !277
  br label %2166, !dbg !278

2017:                                             ; preds = %2005
  %2018 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %2018, align 2, !dbg !280
  %2019 = getelementptr i16, i16* %2018, i32 1, !dbg !281
  store i16 514, i16* %2019, align 2, !dbg !282
  %2020 = load i32, i32* %1919, align 4, !dbg !283
  %2021 = sub i32 %2020, 12, !dbg !284
  %2022 = lshr i32 %2021, 1, !dbg !285
  %2023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 4, !dbg !286
  store i32 %2022, i32* %2023, align 4, !dbg !287
  %2024 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 2, !dbg !288
  store i8 %1914, i8* %2024, align 1, !dbg !289
  %2025 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 5, !dbg !290
  %2026 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 7, !dbg !291
  %2027 = load i32, i32* %2026, align 4, !dbg !292
  %2028 = add i32 %2022, 2, !dbg !293
  %2029 = icmp slt i32 %2027, %2028, !dbg !294
  br i1 %2029, label %2030, label %2032, !dbg !295

2030:                                             ; preds = %2017
  store i16 1, i16* %1989, align 2, !dbg !296
  %2031 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1922, i32 %2028, i32 0), !dbg !297
  br label %2035, !dbg !298

2032:                                             ; preds = %2017
  %2033 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 6, !dbg !299
  %2034 = load i8*, i8** %2033, align 8, !dbg !300
  store i8* %2034, i8** %2025, align 8, !dbg !301
  br label %2035, !dbg !302

2035:                                             ; preds = %2032, %2030
  %2036 = zext i32 %2022 to i64, !dbg !303
  %2037 = load i8*, i8** %2025, align 8, !dbg !304
  %2038 = load i8*, i8** %1918, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2037, i8* %2038, i64 %2036, i1 false), !dbg !306
  %2039 = getelementptr i8, i8* %2037, i32 %2022, !dbg !307
  store i8 0, i8* %2039, align 1, !dbg !308
  %2040 = add i32 %2022, 1, !dbg !309
  %2041 = getelementptr i8, i8* %2037, i32 %2040, !dbg !310
  store i8 0, i8* %2041, align 1, !dbg !311
  %2042 = and i32 %2020, 1, !dbg !312
  %2043 = getelementptr i16, i16* %2018, i32 %2042, !dbg !313
  %2044 = load i16, i16* %2043, align 2, !dbg !314
  store i16 %2044, i16* %1989, align 2, !dbg !315
  br label %2166, !dbg !316

2045:                                             ; preds = %1997
  %2046 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 2, !dbg !317
  store i8 %1914, i8* %2046, align 1, !dbg !318
  %2047 = load i32, i32* %1919, align 4, !dbg !319
  %2048 = and i32 %2047, 1, !dbg !320
  %2049 = icmp eq i32 %2048, 0, !dbg !321
  %2050 = icmp sge i32 %2047, 12, !dbg !322
  %2051 = and i1 %2050, %2049, !dbg !323
  %2052 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2047), !dbg !324
  %2053 = icmp eq i32 %2052, 0, !dbg !325
  br i1 %2053, label %2065, label %2054, !dbg !326

2054:                                             ; preds = %2045
  %2055 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 12, i32 0, !dbg !327
  %2056 = load %struct.BtCursor*, %struct.BtCursor** %2055, align 8, !dbg !328
  %2057 = getelementptr i32, i32* %1926, i32 3, !dbg !510
  %2058 = load i32, i32* %2057, align 4, !dbg !329
  %2059 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2056, i32 %2058, i32 %2052, %struct.sqlite3_value* %1922), !dbg !330
  %2060 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 5, !dbg !331
  %2061 = load i8*, i8** %2060, align 8, !dbg !332
  %2062 = call i32 @sqlite3VdbeSerialGet(i8* %2061, i32 %2047, %struct.sqlite3_value* %1922), !dbg !333
  %2063 = load i16, i16* %1989, align 2, !dbg !334
  %2064 = and i16 %2063, -4097, !dbg !335
  store i16 %2064, i16* %1989, align 2, !dbg !336
  br label %2166, !dbg !337

2065:                                             ; preds = %2045
  %2066 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2047, %struct.sqlite3_value* %1922), !dbg !338
  br label %2166, !dbg !339

2067:                                             ; preds = %1985
  %2068 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 23, i32 3, !dbg !340
  %2069 = load i32, i32* %2068, align 4, !dbg !341
  store i32 %2069, i32* %1919, align 4, !dbg !342
  br label %1988, !dbg !343

2070:                                             ; preds = %1985
  %2071 = load i32, i32* %1933, align 4, !dbg !344
  %2072 = load i32, i32* %1926, align 4, !dbg !345
  %2073 = icmp ult i32 %2071, %2072, !dbg !346
  br i1 %2073, label %2074, label %2155, !dbg !347

2074:                                             ; preds = %2070
  %2075 = load i8*, i8** %1936, align 8, !dbg !348
  %2076 = icmp eq i8* %2075, null, !dbg !349
  br i1 %2076, label %2078, label %2077, !dbg !350

2077:                                             ; preds = %2074
  store i8* %2075, i8** %1918, align 8, !dbg !351
  br label %2078, !dbg !352

2078:                                             ; preds = %2077, %2074, %1958
  %2079 = alloca i32, align 4, !dbg !353
  %2080 = load i16, i16* %1937, align 2, !dbg !354
  %2081 = zext i16 %2080 to i32, !dbg !355
  store i32 %2081, i32* %2079, align 4, !dbg !356
  %2082 = alloca i64, align 8, !dbg !357
  %2083 = getelementptr i32, i32* %1926, i32 %2081, !dbg !358
  %2084 = load i32, i32* %2083, align 4, !dbg !359
  %2085 = zext i32 %2084 to i64, !dbg !360
  store i64 %2085, i64* %2082, align 4, !dbg !361
  %2086 = load i8*, i8** %1918, align 8, !dbg !362
  %2087 = load i32, i32* %1933, align 4, !dbg !363
  %2088 = alloca i8*, align 8, !dbg !364
  %2089 = getelementptr i8, i8* %2086, i32 %2087, !dbg !365
  store i8* %2089, i8** %2088, align 8, !dbg !366
  %2090 = load i32, i32* %1926, align 4, !dbg !367
  %2091 = getelementptr i8, i8* %2086, i32 %2090, !dbg !368
  br label %2092, !dbg !369

2092:                                             ; preds = %2099, %2078
  %2093 = load i32, i32* %2079, align 4, !dbg !370
  %2094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1921, i32 0, i32 23, i32 %2093, !dbg !371
  %2095 = load i8*, i8** %2088, align 8, !dbg !372
  %2096 = load i8, i8* %2095, align 1, !dbg !373
  %2097 = zext i8 %2096 to i32, !dbg !374
  store i32 %2097, i32* %1919, align 4, !dbg !375
  store i32 %2097, i32* %2094, align 4, !dbg !376
  %2098 = icmp sgt i8 %2096, -1, !dbg !377
  br i1 %2098, label %2122, label %2113, !dbg !378

2099:                                             ; preds = %2113, %2122
  %2100 = load i32, i32* %2079, align 4, !dbg !379
  %2101 = add i32 %2100, 1, !dbg !380
  store i32 %2101, i32* %2079, align 4, !dbg !381
  %2102 = load i64, i64* %2082, align 4, !dbg !382
  %2103 = and i64 4294967295, %2102, !dbg !383
  %2104 = trunc i64 %2103 to i32, !dbg !384
  %2105 = getelementptr i32, i32* %1926, i32 %2101, !dbg !385
  store i32 %2104, i32* %2105, align 4, !dbg !386
  %2106 = load i32, i32* %2079, align 4, !dbg !387
  %2107 = icmp sle i32 %2106, 3, !dbg !388
  %2108 = load i8*, i8** %2088, align 8, !dbg !389
  %2109 = ptrtoint i8* %2108 to i64, !dbg !390
  %2110 = ptrtoint i8* %2091 to i64, !dbg !391
  %2111 = icmp ult i64 %2109, %2110, !dbg !392
  %2112 = and i1 %2107, %2111, !dbg !393
  br i1 %2112, label %2092, label %2131, !dbg !394

2113:                                             ; preds = %2092
  %2114 = load i8*, i8** %2088, align 8, !dbg !395
  %2115 = call i8 @sqlite3GetVarint32(i8* %2114, i32* %1919), !dbg !396
  %2116 = getelementptr i8, i8* %2114, i8 %2115, !dbg !397
  store i8* %2116, i8** %2088, align 8, !dbg !398
  %2117 = load i32, i32* %1919, align 4, !dbg !399
  store i32 %2117, i32* %2094, align 4, !dbg !400
  %2118 = load i64, i64* %2082, align 4, !dbg !401
  %2119 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2117), !dbg !402
  %2120 = zext i32 %2119 to i64, !dbg !403
  %2121 = add i64 %2118, %2120, !dbg !404
  store i64 %2121, i64* %2082, align 4, !dbg !405
  br label %2099, !dbg !406

2122:                                             ; preds = %2092
  %2123 = getelementptr i8, i8* %2095, i32 1, !dbg !407
  store i8* %2123, i8** %2088, align 8, !dbg !408
  %2124 = load i32, i32* %1919, align 4, !dbg !409
  %2125 = trunc i32 %2124 to i8, !dbg !410
  %2126 = getelementptr i8, i8* %4, i8 %2125, !dbg !411
  %2127 = load i8, i8* %2126, align 1, !dbg !412
  %2128 = zext i8 %2127 to i64, !dbg !413
  %2129 = load i64, i64* %2082, align 4, !dbg !414
  %2130 = add i64 %2129, %2128, !dbg !415
  store i64 %2130, i64* %2082, align 4, !dbg !416
  br label %2099, !dbg !417

2131:                                             ; preds = %2099
  %2132 = load i64, i64* %2082, align 4, !dbg !418
  %2133 = load i32, i32* %1934, align 4, !dbg !419
  %2134 = zext i32 %2133 to i64, !dbg !420
  %2135 = icmp uge i64 %2109, %2110, !dbg !421
  %2136 = icmp ugt i64 %2109, %2110, !dbg !422
  %2137 = icmp ne i64 %2132, %2134, !dbg !423
  %2138 = icmp ugt i64 %2132, %2134, !dbg !424
  %2139 = or i1 %2136, %2137, !dbg !425
  %2140 = and i1 %2135, %2139, !dbg !426
  %2141 = or i1 %2140, %2138, !dbg !427
  br i1 %2141, label %2142, label %2146, !dbg !428

2142:                                             ; preds = %2131
  %2143 = load i32, i32* %1926, align 4, !dbg !429
  %2144 = icmp eq i32 %2143, 0, !dbg !430
  br i1 %2144, label %2145, label %2146, !dbg !431

2145:                                             ; preds = %2142
  store i32 0, i32* %2079, align 4, !dbg !432
  store i8* %2091, i8** %2088, align 8, !dbg !433
  br label %2146, !dbg !434

2146:                                             ; preds = %2145, %2142, %2131
  %2147 = load i32, i32* %2079, align 4, !dbg !435
  %2148 = trunc i32 %2147 to i16, !dbg !436
  store i16 %2148, i16* %1937, align 2, !dbg !437
  %2149 = load i8*, i8** %2088, align 8, !dbg !438
  %2150 = ptrtoint i8* %2149 to i64, !dbg !439
  %2151 = load i8*, i8** %1918, align 8, !dbg !440
  %2152 = ptrtoint i8* %2151 to i64, !dbg !441
  %2153 = sub i64 %2150, %2152, !dbg !442
  %2154 = trunc i64 %2153 to i32, !dbg !443
  store i32 %2154, i32* %1933, align 4, !dbg !444
  br label %2156, !dbg !445

2155:                                             ; preds = %2070
  store i32 0, i32* %1919, align 4, !dbg !446
  br label %2156, !dbg !447

2156:                                             ; preds = %2146, %2155
  %2157 = load i16, i16* %1937, align 2, !dbg !448
  %2158 = icmp sle i16 %2157, 3, !dbg !449
  br i1 %2158, label %2159, label %1988, !dbg !450

2159:                                             ; preds = %2156
  %2160 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1922, i32 0, i32 1, !dbg !451
  %2161 = load i16, i16* %2160, align 2, !dbg !451
  %2162 = and i16 %2161, 9216, !dbg !451
  %2163 = icmp ne i16 %2162, 0, !dbg !451
  br i1 %2163, label %2164, label %2165, !dbg !451

2164:                                             ; preds = %2159
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1922), !dbg !451
  br label %2166, !dbg !451

2165:                                             ; preds = %2159
  store i16 1, i16* %2160, align 2, !dbg !451
  br label %2166, !dbg !451

2166:                                             ; preds = %2164, %2165, %2035, %2015, %2054, %2065, %1983, %1984
  call void @llvm.stackrestore(i8* %1912), !dbg !452
  br label %2167, !dbg !74

2167:                                             ; preds = %17, %2166
  %2168 = call i8* @llvm.stacksave(), !dbg !162
  %2169 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %2170 = load i8, i8* %2169, align 1, !dbg !166
  %2171 = alloca i32, align 4, !dbg !167
  store i32 3, i32* %2171, align 4, !dbg !168
  %2172 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !169
  %2173 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %2174 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2172, align 8, !dbg !171
  store %struct.VdbeCursor* %2174, %struct.VdbeCursor** %2173, align 8, !dbg !172
  %2175 = alloca i8*, align 8, !dbg !173
  %2176 = alloca i32, align 4, !dbg !174
  %2177 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2173, i32* %2171), !dbg !175
  %2178 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2173, align 8, !dbg !176
  %2179 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !177
  %2180 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 16, !dbg !178
  %2181 = load i16, i16* %2180, align 2, !dbg !179
  %2182 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 19, !dbg !180
  %2183 = load i32*, i32** %2182, align 8, !dbg !181
  %2184 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 0, !dbg !182
  %2185 = load i8, i8* %2184, align 1, !dbg !183
  %2186 = icmp ne i8 %2185, 3, !dbg !184
  %2187 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 2, !dbg !185
  %2188 = load i8, i8* %2187, align 1, !dbg !186
  %2189 = icmp ne i8 %2188, 0, !dbg !187
  %2190 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 14, !dbg !188
  %2191 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 21, !dbg !189
  %2192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 22, !dbg !190
  %2193 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 20, !dbg !191
  %2194 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 17, !dbg !192
  %2195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 9, !dbg !193
  %2196 = load i32, i32* %2195, align 4, !dbg !194
  %2197 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %2198 = load i32, i32* %2197, align 4, !dbg !196
  %2199 = icmp ne i32 %2196, %2198, !dbg !197
  br i1 %2199, label %2200, label %2242, !dbg !198

2200:                                             ; preds = %2167
  br i1 %2189, label %2222, label %2217, !dbg !199

2201:                                             ; preds = %2217, %2224
  %2202 = load i32, i32* %2197, align 4, !dbg !200
  store i32 %2202, i32* %2195, align 4, !dbg !201
  %2203 = load i8*, i8** %2193, align 8, !dbg !202
  %2204 = load i8, i8* %2203, align 1, !dbg !203
  %2205 = icmp sgt i8 %2204, -1, !dbg !206
  br i1 %2205, label %2206, label %2208, !dbg !207

2206:                                             ; preds = %2201
  %2207 = zext i8 %2204 to i32, !dbg !208
  store i32 %2207, i32* %2183, align 4, !dbg !209
  store i32 1, i32* %2190, align 4, !dbg !210
  br label %2211, !dbg !211

2208:                                             ; preds = %2201
  %2209 = call i8 @sqlite3GetVarint32(i8* %2203, i32* %2183), !dbg !212
  %2210 = zext i8 %2209 to i32, !dbg !213
  store i32 %2210, i32* %2190, align 4, !dbg !214
  br label %2211, !dbg !215

2211:                                             ; preds = %2208, %2206
  store i16 0, i16* %2194, align 2, !dbg !216
  %2212 = load i32, i32* %2192, align 4, !dbg !217
  %2213 = load i32, i32* %2183, align 4, !dbg !218
  %2214 = icmp ult i32 %2212, %2213, !dbg !219
  br i1 %2214, label %2216, label %2215, !dbg !220

2215:                                             ; preds = %2211
  store i8* %2203, i8** %2175, align 8, !dbg !221
  br label %2335, !dbg !222

2216:                                             ; preds = %2211
  store i8* null, i8** %2193, align 8, !dbg !223
  store i32 0, i32* %2192, align 4, !dbg !224
  br label %2242, !dbg !225

2217:                                             ; preds = %2200
  %2218 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 12, i32 0, !dbg !226
  %2219 = load %struct.BtCursor*, %struct.BtCursor** %2218, align 8, !dbg !227
  %2220 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2219), !dbg !228
  store i32 %2220, i32* %2191, align 4, !dbg !229
  %2221 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2219, i32* %2192), !dbg !230
  store i8* %2221, i8** %2193, align 8, !dbg !231
  br label %2201, !dbg !232

2222:                                             ; preds = %2200
  %2223 = icmp eq i8 %2185, 3, !dbg !233
  br i1 %2223, label %2224, label %2235, !dbg !234

2224:                                             ; preds = %2222
  %2225 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 10, !dbg !235
  %2226 = load i32, i32* %2225, align 4, !dbg !236
  %2227 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2226, !dbg !237
  %2228 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 1, !dbg !238
  %2229 = load i16, i16* %2228, align 2, !dbg !239
  %2230 = and i16 %2229, 16, !dbg !240
  %2231 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 4, !dbg !241
  %2232 = load i32, i32* %2231, align 4, !dbg !242
  store i32 %2232, i32* %2191, align 4, !dbg !243
  store i32 %2232, i32* %2192, align 4, !dbg !244
  %2233 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2227, i32 0, i32 5, !dbg !245
  %2234 = load i8*, i8** %2233, align 8, !dbg !246
  store i8* %2234, i8** %2193, align 8, !dbg !247
  br label %2201, !dbg !248

2235:                                             ; preds = %2222
  %2236 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 1, !dbg !249
  %2237 = load i16, i16* %2236, align 2, !dbg !249
  %2238 = and i16 %2237, 9216, !dbg !249
  %2239 = icmp ne i16 %2238, 0, !dbg !249
  br i1 %2239, label %2240, label %2241, !dbg !249

2240:                                             ; preds = %2235
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2179), !dbg !249
  br label %2423, !dbg !249

2241:                                             ; preds = %2235
  store i16 1, i16* %2236, align 2, !dbg !249
  br label %2423, !dbg !249

2242:                                             ; preds = %2216, %2167
  %2243 = load i16, i16* %2194, align 2, !dbg !250
  %2244 = icmp ule i16 %2243, 3, !dbg !251
  br i1 %2244, label %2327, label %2324, !dbg !252

2245:                                             ; preds = %2324, %2413
  %2246 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 1, !dbg !253
  %2247 = load i16, i16* %2246, align 2, !dbg !254
  %2248 = and i16 9216, %2247, !dbg !255
  %2249 = icmp eq i16 0, %2248, !dbg !256
  br i1 %2249, label %2250, label %2254, !dbg !257

2250:                                             ; preds = %2245
  %2251 = icmp ne i16 %2248, 0, !dbg !258
  br i1 %2251, label %2252, label %2253, !dbg !258

2252:                                             ; preds = %2250
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2179), !dbg !258
  br label %2254, !dbg !258

2253:                                             ; preds = %2250
  store i16 1, i16* %2246, align 2, !dbg !258
  br label %2254, !dbg !258

2254:                                             ; preds = %2252, %2253, %2245
  %2255 = load i32, i32* %2176, align 4, !dbg !259
  %2256 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 23, i32 3, !dbg !260
  %2257 = load i32, i32* %2256, align 4, !dbg !261
  %2258 = load i32, i32* %2192, align 4, !dbg !262
  %2259 = getelementptr i32, i32* %2183, i32 4, !dbg !263
  %2260 = load i32, i32* %2259, align 4, !dbg !264
  %2261 = icmp sge i32 %2258, %2260, !dbg !265
  br i1 %2261, label %2262, label %2302, !dbg !266

2262:                                             ; preds = %2254
  %2263 = load i8*, i8** %2193, align 8, !dbg !267
  %2264 = ptrtoint i8* %2263 to i64, !dbg !268
  %2265 = getelementptr i32, i32* %2183, i32 3, !dbg !509
  %2266 = load i32, i32* %2265, align 4, !dbg !269
  %2267 = zext i32 %2266 to i64, !dbg !270
  %2268 = add i64 %2264, %2267, !dbg !271
  %2269 = inttoptr i64 %2268 to i8*, !dbg !272
  store i8* %2269, i8** %2175, align 8, !dbg !273
  %2270 = load i32, i32* %2176, align 4, !dbg !274
  %2271 = icmp ult i32 %2270, 12, !dbg !275
  br i1 %2271, label %2272, label %2274, !dbg !276

2272:                                             ; preds = %2262
  %2273 = call i32 @sqlite3VdbeSerialGet(i8* %2269, i32 %2270, %struct.sqlite3_value* %2179), !dbg !277
  br label %2423, !dbg !278

2274:                                             ; preds = %2262
  %2275 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %2275, align 2, !dbg !280
  %2276 = getelementptr i16, i16* %2275, i32 1, !dbg !281
  store i16 514, i16* %2276, align 2, !dbg !282
  %2277 = load i32, i32* %2176, align 4, !dbg !283
  %2278 = sub i32 %2277, 12, !dbg !284
  %2279 = lshr i32 %2278, 1, !dbg !285
  %2280 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 4, !dbg !286
  store i32 %2279, i32* %2280, align 4, !dbg !287
  %2281 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 2, !dbg !288
  store i8 %2170, i8* %2281, align 1, !dbg !289
  %2282 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 5, !dbg !290
  %2283 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 7, !dbg !291
  %2284 = load i32, i32* %2283, align 4, !dbg !292
  %2285 = add i32 %2279, 2, !dbg !293
  %2286 = icmp slt i32 %2284, %2285, !dbg !294
  br i1 %2286, label %2287, label %2289, !dbg !295

2287:                                             ; preds = %2274
  store i16 1, i16* %2246, align 2, !dbg !296
  %2288 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2179, i32 %2285, i32 0), !dbg !297
  br label %2292, !dbg !298

2289:                                             ; preds = %2274
  %2290 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 6, !dbg !299
  %2291 = load i8*, i8** %2290, align 8, !dbg !300
  store i8* %2291, i8** %2282, align 8, !dbg !301
  br label %2292, !dbg !302

2292:                                             ; preds = %2289, %2287
  %2293 = zext i32 %2279 to i64, !dbg !303
  %2294 = load i8*, i8** %2282, align 8, !dbg !304
  %2295 = load i8*, i8** %2175, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2294, i8* %2295, i64 %2293, i1 false), !dbg !306
  %2296 = getelementptr i8, i8* %2294, i32 %2279, !dbg !307
  store i8 0, i8* %2296, align 1, !dbg !308
  %2297 = add i32 %2279, 1, !dbg !309
  %2298 = getelementptr i8, i8* %2294, i32 %2297, !dbg !310
  store i8 0, i8* %2298, align 1, !dbg !311
  %2299 = and i32 %2277, 1, !dbg !312
  %2300 = getelementptr i16, i16* %2275, i32 %2299, !dbg !313
  %2301 = load i16, i16* %2300, align 2, !dbg !314
  store i16 %2301, i16* %2246, align 2, !dbg !315
  br label %2423, !dbg !316

2302:                                             ; preds = %2254
  %2303 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 2, !dbg !317
  store i8 %2170, i8* %2303, align 1, !dbg !318
  %2304 = load i32, i32* %2176, align 4, !dbg !319
  %2305 = and i32 %2304, 1, !dbg !320
  %2306 = icmp eq i32 %2305, 0, !dbg !321
  %2307 = icmp sge i32 %2304, 12, !dbg !322
  %2308 = and i1 %2307, %2306, !dbg !323
  %2309 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2304), !dbg !324
  %2310 = icmp eq i32 %2309, 0, !dbg !325
  br i1 %2310, label %2322, label %2311, !dbg !326

2311:                                             ; preds = %2302
  %2312 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 12, i32 0, !dbg !327
  %2313 = load %struct.BtCursor*, %struct.BtCursor** %2312, align 8, !dbg !328
  %2314 = getelementptr i32, i32* %2183, i32 3, !dbg !510
  %2315 = load i32, i32* %2314, align 4, !dbg !329
  %2316 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2313, i32 %2315, i32 %2309, %struct.sqlite3_value* %2179), !dbg !330
  %2317 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 5, !dbg !331
  %2318 = load i8*, i8** %2317, align 8, !dbg !332
  %2319 = call i32 @sqlite3VdbeSerialGet(i8* %2318, i32 %2304, %struct.sqlite3_value* %2179), !dbg !333
  %2320 = load i16, i16* %2246, align 2, !dbg !334
  %2321 = and i16 %2320, -4097, !dbg !335
  store i16 %2321, i16* %2246, align 2, !dbg !336
  br label %2423, !dbg !337

2322:                                             ; preds = %2302
  %2323 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2304, %struct.sqlite3_value* %2179), !dbg !338
  br label %2423, !dbg !339

2324:                                             ; preds = %2242
  %2325 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 23, i32 3, !dbg !340
  %2326 = load i32, i32* %2325, align 4, !dbg !341
  store i32 %2326, i32* %2176, align 4, !dbg !342
  br label %2245, !dbg !343

2327:                                             ; preds = %2242
  %2328 = load i32, i32* %2190, align 4, !dbg !344
  %2329 = load i32, i32* %2183, align 4, !dbg !345
  %2330 = icmp ult i32 %2328, %2329, !dbg !346
  br i1 %2330, label %2331, label %2412, !dbg !347

2331:                                             ; preds = %2327
  %2332 = load i8*, i8** %2193, align 8, !dbg !348
  %2333 = icmp eq i8* %2332, null, !dbg !349
  br i1 %2333, label %2335, label %2334, !dbg !350

2334:                                             ; preds = %2331
  store i8* %2332, i8** %2175, align 8, !dbg !351
  br label %2335, !dbg !352

2335:                                             ; preds = %2334, %2331, %2215
  %2336 = alloca i32, align 4, !dbg !353
  %2337 = load i16, i16* %2194, align 2, !dbg !354
  %2338 = zext i16 %2337 to i32, !dbg !355
  store i32 %2338, i32* %2336, align 4, !dbg !356
  %2339 = alloca i64, align 8, !dbg !357
  %2340 = getelementptr i32, i32* %2183, i32 %2338, !dbg !358
  %2341 = load i32, i32* %2340, align 4, !dbg !359
  %2342 = zext i32 %2341 to i64, !dbg !360
  store i64 %2342, i64* %2339, align 4, !dbg !361
  %2343 = load i8*, i8** %2175, align 8, !dbg !362
  %2344 = load i32, i32* %2190, align 4, !dbg !363
  %2345 = alloca i8*, align 8, !dbg !364
  %2346 = getelementptr i8, i8* %2343, i32 %2344, !dbg !365
  store i8* %2346, i8** %2345, align 8, !dbg !366
  %2347 = load i32, i32* %2183, align 4, !dbg !367
  %2348 = getelementptr i8, i8* %2343, i32 %2347, !dbg !368
  br label %2349, !dbg !369

2349:                                             ; preds = %2356, %2335
  %2350 = load i32, i32* %2336, align 4, !dbg !370
  %2351 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2178, i32 0, i32 23, i32 %2350, !dbg !371
  %2352 = load i8*, i8** %2345, align 8, !dbg !372
  %2353 = load i8, i8* %2352, align 1, !dbg !373
  %2354 = zext i8 %2353 to i32, !dbg !374
  store i32 %2354, i32* %2176, align 4, !dbg !375
  store i32 %2354, i32* %2351, align 4, !dbg !376
  %2355 = icmp sgt i8 %2353, -1, !dbg !377
  br i1 %2355, label %2379, label %2370, !dbg !378

2356:                                             ; preds = %2370, %2379
  %2357 = load i32, i32* %2336, align 4, !dbg !379
  %2358 = add i32 %2357, 1, !dbg !380
  store i32 %2358, i32* %2336, align 4, !dbg !381
  %2359 = load i64, i64* %2339, align 4, !dbg !382
  %2360 = and i64 4294967295, %2359, !dbg !383
  %2361 = trunc i64 %2360 to i32, !dbg !384
  %2362 = getelementptr i32, i32* %2183, i32 %2358, !dbg !385
  store i32 %2361, i32* %2362, align 4, !dbg !386
  %2363 = load i32, i32* %2336, align 4, !dbg !387
  %2364 = icmp sle i32 %2363, 3, !dbg !388
  %2365 = load i8*, i8** %2345, align 8, !dbg !389
  %2366 = ptrtoint i8* %2365 to i64, !dbg !390
  %2367 = ptrtoint i8* %2348 to i64, !dbg !391
  %2368 = icmp ult i64 %2366, %2367, !dbg !392
  %2369 = and i1 %2364, %2368, !dbg !393
  br i1 %2369, label %2349, label %2388, !dbg !394

2370:                                             ; preds = %2349
  %2371 = load i8*, i8** %2345, align 8, !dbg !395
  %2372 = call i8 @sqlite3GetVarint32(i8* %2371, i32* %2176), !dbg !396
  %2373 = getelementptr i8, i8* %2371, i8 %2372, !dbg !397
  store i8* %2373, i8** %2345, align 8, !dbg !398
  %2374 = load i32, i32* %2176, align 4, !dbg !399
  store i32 %2374, i32* %2351, align 4, !dbg !400
  %2375 = load i64, i64* %2339, align 4, !dbg !401
  %2376 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2374), !dbg !402
  %2377 = zext i32 %2376 to i64, !dbg !403
  %2378 = add i64 %2375, %2377, !dbg !404
  store i64 %2378, i64* %2339, align 4, !dbg !405
  br label %2356, !dbg !406

2379:                                             ; preds = %2349
  %2380 = getelementptr i8, i8* %2352, i32 1, !dbg !407
  store i8* %2380, i8** %2345, align 8, !dbg !408
  %2381 = load i32, i32* %2176, align 4, !dbg !409
  %2382 = trunc i32 %2381 to i8, !dbg !410
  %2383 = getelementptr i8, i8* %4, i8 %2382, !dbg !411
  %2384 = load i8, i8* %2383, align 1, !dbg !412
  %2385 = zext i8 %2384 to i64, !dbg !413
  %2386 = load i64, i64* %2339, align 4, !dbg !414
  %2387 = add i64 %2386, %2385, !dbg !415
  store i64 %2387, i64* %2339, align 4, !dbg !416
  br label %2356, !dbg !417

2388:                                             ; preds = %2356
  %2389 = load i64, i64* %2339, align 4, !dbg !418
  %2390 = load i32, i32* %2191, align 4, !dbg !419
  %2391 = zext i32 %2390 to i64, !dbg !420
  %2392 = icmp uge i64 %2366, %2367, !dbg !421
  %2393 = icmp ugt i64 %2366, %2367, !dbg !422
  %2394 = icmp ne i64 %2389, %2391, !dbg !423
  %2395 = icmp ugt i64 %2389, %2391, !dbg !424
  %2396 = or i1 %2393, %2394, !dbg !425
  %2397 = and i1 %2392, %2396, !dbg !426
  %2398 = or i1 %2397, %2395, !dbg !427
  br i1 %2398, label %2399, label %2403, !dbg !428

2399:                                             ; preds = %2388
  %2400 = load i32, i32* %2183, align 4, !dbg !429
  %2401 = icmp eq i32 %2400, 0, !dbg !430
  br i1 %2401, label %2402, label %2403, !dbg !431

2402:                                             ; preds = %2399
  store i32 0, i32* %2336, align 4, !dbg !432
  store i8* %2348, i8** %2345, align 8, !dbg !433
  br label %2403, !dbg !434

2403:                                             ; preds = %2402, %2399, %2388
  %2404 = load i32, i32* %2336, align 4, !dbg !435
  %2405 = trunc i32 %2404 to i16, !dbg !436
  store i16 %2405, i16* %2194, align 2, !dbg !437
  %2406 = load i8*, i8** %2345, align 8, !dbg !438
  %2407 = ptrtoint i8* %2406 to i64, !dbg !439
  %2408 = load i8*, i8** %2175, align 8, !dbg !440
  %2409 = ptrtoint i8* %2408 to i64, !dbg !441
  %2410 = sub i64 %2407, %2409, !dbg !442
  %2411 = trunc i64 %2410 to i32, !dbg !443
  store i32 %2411, i32* %2190, align 4, !dbg !444
  br label %2413, !dbg !445

2412:                                             ; preds = %2327
  store i32 0, i32* %2176, align 4, !dbg !446
  br label %2413, !dbg !447

2413:                                             ; preds = %2403, %2412
  %2414 = load i16, i16* %2194, align 2, !dbg !448
  %2415 = icmp sle i16 %2414, 3, !dbg !449
  br i1 %2415, label %2416, label %2245, !dbg !450

2416:                                             ; preds = %2413
  %2417 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2179, i32 0, i32 1, !dbg !451
  %2418 = load i16, i16* %2417, align 2, !dbg !451
  %2419 = and i16 %2418, 9216, !dbg !451
  %2420 = icmp ne i16 %2419, 0, !dbg !451
  br i1 %2420, label %2421, label %2422, !dbg !451

2421:                                             ; preds = %2416
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2179), !dbg !451
  br label %2423, !dbg !451

2422:                                             ; preds = %2416
  store i16 1, i16* %2417, align 2, !dbg !451
  br label %2423, !dbg !451

2423:                                             ; preds = %2421, %2422, %2292, %2272, %2311, %2322, %2240, %2241
  call void @llvm.stackrestore(i8* %2168), !dbg !452
  br label %2424, !dbg !74

2424:                                             ; preds = %17, %2423
  %2425 = call i8* @llvm.stacksave(), !dbg !593
  %2426 = alloca i32, align 8, !dbg !596
  %2427 = alloca i32, align 8, !dbg !597
  %2428 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !598
  %2429 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !599
  %2430 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 1, !dbg !600
  %2431 = load i16, i16* %2430, align 2, !dbg !601
  %2432 = alloca i16, align 8, !dbg !602
  store i16 %2431, i16* %2432, align 2, !dbg !603
  %2433 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 1, !dbg !604
  %2434 = load i16, i16* %2433, align 2, !dbg !605
  %2435 = alloca i16, align 8, !dbg !606
  store i16 %2434, i16* %2435, align 2, !dbg !607
  %2436 = or i16 %2431, %2434, !dbg !608
  %2437 = and i16 %2436, 1, !dbg !609
  %2438 = icmp ne i16 %2437, 0, !dbg !610
  br i1 %2438, label %2439, label %2440, !dbg !611

2439:                                             ; preds = %2424
  call void @llvm.stackrestore(i8* %2425), !dbg !612
  br label %5705, !dbg !613

2440:                                             ; preds = %2424
  %2441 = and i16 %2436, 2, !dbg !656
  %2442 = icmp ne i16 %2441, 0, !dbg !657
  br i1 %2442, label %2443, label %2500, !dbg !658

2443:                                             ; preds = %2440
  %2444 = and i16 %2431, 46, !dbg !659
  %2445 = icmp eq i16 %2444, 2, !dbg !660
  br i1 %2445, label %2446, label %2472, !dbg !661

2446:                                             ; preds = %2443
  %2447 = call i8* @llvm.stacksave(), !dbg !662
  %2448 = alloca double, align 8, !dbg !663
  %2449 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 0, i32 0, !dbg !662
  %2450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 2, !dbg !662
  %2451 = load i8, i8* %2450, align 1, !dbg !662
  %2452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 5, !dbg !662
  %2453 = load i8*, i8** %2452, align 8, !dbg !662
  %2454 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 4, !dbg !662
  %2455 = load i32, i32* %2454, align 4, !dbg !662
  %2456 = call i32 @sqlite3AtoF(i8* %2453, double* %2448, i32 %2455, i8 %2451), !dbg !662
  %2457 = icmp sle i32 %2456, 0, !dbg !662
  br i1 %2457, label %2470, label %2458, !dbg !662

2458:                                             ; preds = %2446
  %2459 = icmp eq i32 %2456, 1, !dbg !662
  %2460 = load double, double* %2448, align 8, !dbg !662
  br i1 %2459, label %2461, label %2464, !dbg !662

2461:                                             ; preds = %2458
  %2462 = load i16, i16* %2430, align 2, !dbg !662
  %2463 = or i16 %2462, 4, !dbg !662
  store i16 %2463, i16* %2430, align 2, !dbg !662
  br label %2467, !dbg !662

2464:                                             ; preds = %2458
  store double %2460, double* %2449, align 8, !dbg !662
  %2465 = load i16, i16* %2430, align 2, !dbg !662
  %2466 = or i16 %2465, 8, !dbg !662
  store i16 %2466, i16* %2430, align 2, !dbg !662
  br label %2467, !dbg !662

2467:                                             ; preds = %2464, %2461
  %2468 = load i16, i16* %2430, align 2, !dbg !662
  %2469 = and i16 %2468, -3, !dbg !662
  store i16 %2469, i16* %2430, align 2, !dbg !662
  br label %2470, !dbg !662

2470:                                             ; preds = %2467, %2446
  call void @llvm.stackrestore(i8* %2447), !dbg !662
  %2471 = load i16, i16* %2433, align 2, !dbg !666
  store i16 %2471, i16* %2435, align 2, !dbg !667
  br label %2472, !dbg !668

2472:                                             ; preds = %2470, %2443
  %2473 = and i16 %2434, 46, !dbg !669
  %2474 = icmp eq i16 %2473, 2, !dbg !670
  br i1 %2474, label %2475, label %2500, !dbg !671

2475:                                             ; preds = %2472
  %2476 = call i8* @llvm.stacksave(), !dbg !672
  %2477 = alloca double, align 8, !dbg !663
  %2478 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 0, i32 0, !dbg !672
  %2479 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 2, !dbg !672
  %2480 = load i8, i8* %2479, align 1, !dbg !672
  %2481 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 5, !dbg !672
  %2482 = load i8*, i8** %2481, align 8, !dbg !672
  %2483 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 4, !dbg !672
  %2484 = load i32, i32* %2483, align 4, !dbg !672
  %2485 = call i32 @sqlite3AtoF(i8* %2482, double* %2477, i32 %2484, i8 %2480), !dbg !672
  %2486 = icmp sle i32 %2485, 0, !dbg !672
  br i1 %2486, label %2499, label %2487, !dbg !672

2487:                                             ; preds = %2475
  %2488 = icmp eq i32 %2485, 1, !dbg !672
  %2489 = load double, double* %2477, align 8, !dbg !672
  br i1 %2488, label %2490, label %2493, !dbg !672

2490:                                             ; preds = %2487
  %2491 = load i16, i16* %2433, align 2, !dbg !672
  %2492 = or i16 %2491, 4, !dbg !672
  store i16 %2492, i16* %2433, align 2, !dbg !672
  br label %2496, !dbg !672

2493:                                             ; preds = %2487
  store double %2489, double* %2478, align 8, !dbg !672
  %2494 = load i16, i16* %2433, align 2, !dbg !672
  %2495 = or i16 %2494, 8, !dbg !672
  store i16 %2495, i16* %2433, align 2, !dbg !672
  br label %2496, !dbg !672

2496:                                             ; preds = %2493, %2490
  %2497 = load i16, i16* %2433, align 2, !dbg !672
  %2498 = and i16 %2497, -3, !dbg !672
  store i16 %2498, i16* %2433, align 2, !dbg !672
  br label %2499, !dbg !672

2499:                                             ; preds = %2496, %2475
  call void @llvm.stackrestore(i8* %2476), !dbg !672
  br label %2500, !dbg !673

2500:                                             ; preds = %2472, %2499, %2440
  %2501 = load i16, i16* %2430, align 2, !dbg !674
  %2502 = load i16, i16* %2433, align 2, !dbg !675
  %2503 = and i16 %2501, %2502, !dbg !676
  %2504 = and i16 %2503, 4, !dbg !677
  %2505 = icmp ne i16 %2504, 0, !dbg !678
  br i1 %2505, label %2506, label %2519, !dbg !679

2506:                                             ; preds = %2500
  %2507 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2428, i32 0, i32 0, !dbg !680
  %2508 = bitcast %union.MemValue* %2507 to i64*, !dbg !681
  %2509 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2429, i32 0, i32 0, !dbg !682
  %2510 = bitcast %union.MemValue* %2509 to i64*, !dbg !683
  %2511 = load i64, i64* %2508, align 4, !dbg !684
  %2512 = load i64, i64* %2510, align 4, !dbg !685
  %2513 = icmp sgt i64 %2512, %2511, !dbg !686
  br i1 %2513, label %2514, label %2515, !dbg !687

2514:                                             ; preds = %2506
  store i32 1, i32* %2426, align 4, !dbg !688
  br label %2525, !dbg !689

2515:                                             ; preds = %2506
  %2516 = icmp slt i64 %2512, %2511, !dbg !690
  br i1 %2516, label %2517, label %2518, !dbg !691

2517:                                             ; preds = %2515
  store i32 -1, i32* %2426, align 4, !dbg !692
  br label %2525, !dbg !693

2518:                                             ; preds = %2515
  store i32 0, i32* %2426, align 4, !dbg !694
  br label %2525, !dbg !695

2519:                                             ; preds = %2500
  %2520 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 32, !dbg !638
  %2521 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2520, i32 0, i32 6, !dbg !639
  %2522 = bitcast %union.p4union* %2521 to %struct.CollSeq**, !dbg !640
  %2523 = load %struct.CollSeq*, %struct.CollSeq** %2522, align 8, !dbg !641
  %2524 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %2429, %struct.sqlite3_value* %2428, %struct.CollSeq* %2523), !dbg !642
  store i32 %2524, i32* %2426, align 4, !dbg !643
  br label %2525, !dbg !696

2525:                                             ; preds = %2517, %2518, %2519, %2514
  %2526 = load i32, i32* %2426, align 4, !dbg !697
  %2527 = icmp slt i32 %2526, 0, !dbg !644
  br i1 %2527, label %2528, label %2529, !dbg !645

2528:                                             ; preds = %2525
  store i32 1, i32* %2427, align 4, !dbg !646
  br label %2533, !dbg !647

2529:                                             ; preds = %2525
  %2530 = icmp eq i32 %2526, 0, !dbg !698
  br i1 %2530, label %2531, label %2532, !dbg !699

2531:                                             ; preds = %2529
  store i32 0, i32* %2427, align 4, !dbg !700
  br label %2533, !dbg !701

2532:                                             ; preds = %2529
  store i32 1, i32* %2427, align 4, !dbg !702
  br label %2533, !dbg !703

2533:                                             ; preds = %2532, %2531, %2528
  store i16 %2434, i16* %2435, align 2, !dbg !649
  store i16 %2431, i16* %2432, align 2, !dbg !650
  %2534 = load i32, i32* %2427, align 4, !dbg !651
  %2535 = icmp ne i32 %2534, 0, !dbg !652
  call void @llvm.stackrestore(i8* %2425), !dbg !653
  br i1 %2535, label %5705, label %2536, !dbg !654

2536:                                             ; preds = %17, %2533
  %2537 = call i8* @llvm.stacksave(), !dbg !162
  %2538 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %2539 = load i8, i8* %2538, align 1, !dbg !166
  %2540 = alloca i32, align 4, !dbg !167
  store i32 3, i32* %2540, align 4, !dbg !168
  %2541 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !169
  %2542 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %2543 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2541, align 8, !dbg !171
  store %struct.VdbeCursor* %2543, %struct.VdbeCursor** %2542, align 8, !dbg !172
  %2544 = alloca i8*, align 8, !dbg !173
  %2545 = alloca i32, align 4, !dbg !174
  %2546 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2542, i32* %2540), !dbg !175
  %2547 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2542, align 8, !dbg !176
  %2548 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !177
  %2549 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 16, !dbg !178
  %2550 = load i16, i16* %2549, align 2, !dbg !179
  %2551 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 19, !dbg !180
  %2552 = load i32*, i32** %2551, align 8, !dbg !181
  %2553 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 0, !dbg !182
  %2554 = load i8, i8* %2553, align 1, !dbg !183
  %2555 = icmp ne i8 %2554, 3, !dbg !184
  %2556 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 2, !dbg !185
  %2557 = load i8, i8* %2556, align 1, !dbg !186
  %2558 = icmp ne i8 %2557, 0, !dbg !187
  %2559 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 14, !dbg !188
  %2560 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 21, !dbg !189
  %2561 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 22, !dbg !190
  %2562 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 20, !dbg !191
  %2563 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 17, !dbg !192
  %2564 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 9, !dbg !193
  %2565 = load i32, i32* %2564, align 4, !dbg !194
  %2566 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %2567 = load i32, i32* %2566, align 4, !dbg !196
  %2568 = icmp ne i32 %2565, %2567, !dbg !197
  br i1 %2568, label %2569, label %2611, !dbg !198

2569:                                             ; preds = %2536
  br i1 %2558, label %2591, label %2586, !dbg !199

2570:                                             ; preds = %2586, %2593
  %2571 = load i32, i32* %2566, align 4, !dbg !200
  store i32 %2571, i32* %2564, align 4, !dbg !201
  %2572 = load i8*, i8** %2562, align 8, !dbg !202
  %2573 = load i8, i8* %2572, align 1, !dbg !203
  %2574 = icmp sgt i8 %2573, -1, !dbg !206
  br i1 %2574, label %2575, label %2577, !dbg !207

2575:                                             ; preds = %2570
  %2576 = zext i8 %2573 to i32, !dbg !208
  store i32 %2576, i32* %2552, align 4, !dbg !209
  store i32 1, i32* %2559, align 4, !dbg !210
  br label %2580, !dbg !211

2577:                                             ; preds = %2570
  %2578 = call i8 @sqlite3GetVarint32(i8* %2572, i32* %2552), !dbg !212
  %2579 = zext i8 %2578 to i32, !dbg !213
  store i32 %2579, i32* %2559, align 4, !dbg !214
  br label %2580, !dbg !215

2580:                                             ; preds = %2577, %2575
  store i16 0, i16* %2563, align 2, !dbg !216
  %2581 = load i32, i32* %2561, align 4, !dbg !217
  %2582 = load i32, i32* %2552, align 4, !dbg !218
  %2583 = icmp ult i32 %2581, %2582, !dbg !219
  br i1 %2583, label %2585, label %2584, !dbg !220

2584:                                             ; preds = %2580
  store i8* %2572, i8** %2544, align 8, !dbg !221
  br label %2704, !dbg !222

2585:                                             ; preds = %2580
  store i8* null, i8** %2562, align 8, !dbg !223
  store i32 0, i32* %2561, align 4, !dbg !224
  br label %2611, !dbg !225

2586:                                             ; preds = %2569
  %2587 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 12, i32 0, !dbg !226
  %2588 = load %struct.BtCursor*, %struct.BtCursor** %2587, align 8, !dbg !227
  %2589 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2588), !dbg !228
  store i32 %2589, i32* %2560, align 4, !dbg !229
  %2590 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2588, i32* %2561), !dbg !230
  store i8* %2590, i8** %2562, align 8, !dbg !231
  br label %2570, !dbg !232

2591:                                             ; preds = %2569
  %2592 = icmp eq i8 %2554, 3, !dbg !233
  br i1 %2592, label %2593, label %2604, !dbg !234

2593:                                             ; preds = %2591
  %2594 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 10, !dbg !235
  %2595 = load i32, i32* %2594, align 4, !dbg !236
  %2596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2595, !dbg !237
  %2597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2596, i32 0, i32 1, !dbg !238
  %2598 = load i16, i16* %2597, align 2, !dbg !239
  %2599 = and i16 %2598, 16, !dbg !240
  %2600 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2596, i32 0, i32 4, !dbg !241
  %2601 = load i32, i32* %2600, align 4, !dbg !242
  store i32 %2601, i32* %2560, align 4, !dbg !243
  store i32 %2601, i32* %2561, align 4, !dbg !244
  %2602 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2596, i32 0, i32 5, !dbg !245
  %2603 = load i8*, i8** %2602, align 8, !dbg !246
  store i8* %2603, i8** %2562, align 8, !dbg !247
  br label %2570, !dbg !248

2604:                                             ; preds = %2591
  %2605 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 1, !dbg !249
  %2606 = load i16, i16* %2605, align 2, !dbg !249
  %2607 = and i16 %2606, 9216, !dbg !249
  %2608 = icmp ne i16 %2607, 0, !dbg !249
  br i1 %2608, label %2609, label %2610, !dbg !249

2609:                                             ; preds = %2604
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2548), !dbg !249
  br label %2792, !dbg !249

2610:                                             ; preds = %2604
  store i16 1, i16* %2605, align 2, !dbg !249
  br label %2792, !dbg !249

2611:                                             ; preds = %2585, %2536
  %2612 = load i16, i16* %2563, align 2, !dbg !250
  %2613 = icmp ule i16 %2612, 3, !dbg !251
  br i1 %2613, label %2696, label %2693, !dbg !252

2614:                                             ; preds = %2693, %2782
  %2615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 1, !dbg !253
  %2616 = load i16, i16* %2615, align 2, !dbg !254
  %2617 = and i16 9216, %2616, !dbg !255
  %2618 = icmp eq i16 0, %2617, !dbg !256
  br i1 %2618, label %2619, label %2623, !dbg !257

2619:                                             ; preds = %2614
  %2620 = icmp ne i16 %2617, 0, !dbg !258
  br i1 %2620, label %2621, label %2622, !dbg !258

2621:                                             ; preds = %2619
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2548), !dbg !258
  br label %2623, !dbg !258

2622:                                             ; preds = %2619
  store i16 1, i16* %2615, align 2, !dbg !258
  br label %2623, !dbg !258

2623:                                             ; preds = %2621, %2622, %2614
  %2624 = load i32, i32* %2545, align 4, !dbg !259
  %2625 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 23, i32 3, !dbg !260
  %2626 = load i32, i32* %2625, align 4, !dbg !261
  %2627 = load i32, i32* %2561, align 4, !dbg !262
  %2628 = getelementptr i32, i32* %2552, i32 4, !dbg !263
  %2629 = load i32, i32* %2628, align 4, !dbg !264
  %2630 = icmp sge i32 %2627, %2629, !dbg !265
  br i1 %2630, label %2631, label %2671, !dbg !266

2631:                                             ; preds = %2623
  %2632 = load i8*, i8** %2562, align 8, !dbg !267
  %2633 = ptrtoint i8* %2632 to i64, !dbg !268
  %2634 = getelementptr i32, i32* %2552, i32 3, !dbg !509
  %2635 = load i32, i32* %2634, align 4, !dbg !269
  %2636 = zext i32 %2635 to i64, !dbg !270
  %2637 = add i64 %2633, %2636, !dbg !271
  %2638 = inttoptr i64 %2637 to i8*, !dbg !272
  store i8* %2638, i8** %2544, align 8, !dbg !273
  %2639 = load i32, i32* %2545, align 4, !dbg !274
  %2640 = icmp ult i32 %2639, 12, !dbg !275
  br i1 %2640, label %2641, label %2643, !dbg !276

2641:                                             ; preds = %2631
  %2642 = call i32 @sqlite3VdbeSerialGet(i8* %2638, i32 %2639, %struct.sqlite3_value* %2548), !dbg !277
  br label %2792, !dbg !278

2643:                                             ; preds = %2631
  %2644 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %2644, align 2, !dbg !280
  %2645 = getelementptr i16, i16* %2644, i32 1, !dbg !281
  store i16 514, i16* %2645, align 2, !dbg !282
  %2646 = load i32, i32* %2545, align 4, !dbg !283
  %2647 = sub i32 %2646, 12, !dbg !284
  %2648 = lshr i32 %2647, 1, !dbg !285
  %2649 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 4, !dbg !286
  store i32 %2648, i32* %2649, align 4, !dbg !287
  %2650 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 2, !dbg !288
  store i8 %2539, i8* %2650, align 1, !dbg !289
  %2651 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 5, !dbg !290
  %2652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 7, !dbg !291
  %2653 = load i32, i32* %2652, align 4, !dbg !292
  %2654 = add i32 %2648, 2, !dbg !293
  %2655 = icmp slt i32 %2653, %2654, !dbg !294
  br i1 %2655, label %2656, label %2658, !dbg !295

2656:                                             ; preds = %2643
  store i16 1, i16* %2615, align 2, !dbg !296
  %2657 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2548, i32 %2654, i32 0), !dbg !297
  br label %2661, !dbg !298

2658:                                             ; preds = %2643
  %2659 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 6, !dbg !299
  %2660 = load i8*, i8** %2659, align 8, !dbg !300
  store i8* %2660, i8** %2651, align 8, !dbg !301
  br label %2661, !dbg !302

2661:                                             ; preds = %2658, %2656
  %2662 = zext i32 %2648 to i64, !dbg !303
  %2663 = load i8*, i8** %2651, align 8, !dbg !304
  %2664 = load i8*, i8** %2544, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2663, i8* %2664, i64 %2662, i1 false), !dbg !306
  %2665 = getelementptr i8, i8* %2663, i32 %2648, !dbg !307
  store i8 0, i8* %2665, align 1, !dbg !308
  %2666 = add i32 %2648, 1, !dbg !309
  %2667 = getelementptr i8, i8* %2663, i32 %2666, !dbg !310
  store i8 0, i8* %2667, align 1, !dbg !311
  %2668 = and i32 %2646, 1, !dbg !312
  %2669 = getelementptr i16, i16* %2644, i32 %2668, !dbg !313
  %2670 = load i16, i16* %2669, align 2, !dbg !314
  store i16 %2670, i16* %2615, align 2, !dbg !315
  br label %2792, !dbg !316

2671:                                             ; preds = %2623
  %2672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 2, !dbg !317
  store i8 %2539, i8* %2672, align 1, !dbg !318
  %2673 = load i32, i32* %2545, align 4, !dbg !319
  %2674 = and i32 %2673, 1, !dbg !320
  %2675 = icmp eq i32 %2674, 0, !dbg !321
  %2676 = icmp sge i32 %2673, 12, !dbg !322
  %2677 = and i1 %2676, %2675, !dbg !323
  %2678 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2673), !dbg !324
  %2679 = icmp eq i32 %2678, 0, !dbg !325
  br i1 %2679, label %2691, label %2680, !dbg !326

2680:                                             ; preds = %2671
  %2681 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 12, i32 0, !dbg !327
  %2682 = load %struct.BtCursor*, %struct.BtCursor** %2681, align 8, !dbg !328
  %2683 = getelementptr i32, i32* %2552, i32 3, !dbg !510
  %2684 = load i32, i32* %2683, align 4, !dbg !329
  %2685 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2682, i32 %2684, i32 %2678, %struct.sqlite3_value* %2548), !dbg !330
  %2686 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 5, !dbg !331
  %2687 = load i8*, i8** %2686, align 8, !dbg !332
  %2688 = call i32 @sqlite3VdbeSerialGet(i8* %2687, i32 %2673, %struct.sqlite3_value* %2548), !dbg !333
  %2689 = load i16, i16* %2615, align 2, !dbg !334
  %2690 = and i16 %2689, -4097, !dbg !335
  store i16 %2690, i16* %2615, align 2, !dbg !336
  br label %2792, !dbg !337

2691:                                             ; preds = %2671
  %2692 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2673, %struct.sqlite3_value* %2548), !dbg !338
  br label %2792, !dbg !339

2693:                                             ; preds = %2611
  %2694 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 23, i32 3, !dbg !340
  %2695 = load i32, i32* %2694, align 4, !dbg !341
  store i32 %2695, i32* %2545, align 4, !dbg !342
  br label %2614, !dbg !343

2696:                                             ; preds = %2611
  %2697 = load i32, i32* %2559, align 4, !dbg !344
  %2698 = load i32, i32* %2552, align 4, !dbg !345
  %2699 = icmp ult i32 %2697, %2698, !dbg !346
  br i1 %2699, label %2700, label %2781, !dbg !347

2700:                                             ; preds = %2696
  %2701 = load i8*, i8** %2562, align 8, !dbg !348
  %2702 = icmp eq i8* %2701, null, !dbg !349
  br i1 %2702, label %2704, label %2703, !dbg !350

2703:                                             ; preds = %2700
  store i8* %2701, i8** %2544, align 8, !dbg !351
  br label %2704, !dbg !352

2704:                                             ; preds = %2703, %2700, %2584
  %2705 = alloca i32, align 4, !dbg !353
  %2706 = load i16, i16* %2563, align 2, !dbg !354
  %2707 = zext i16 %2706 to i32, !dbg !355
  store i32 %2707, i32* %2705, align 4, !dbg !356
  %2708 = alloca i64, align 8, !dbg !357
  %2709 = getelementptr i32, i32* %2552, i32 %2707, !dbg !358
  %2710 = load i32, i32* %2709, align 4, !dbg !359
  %2711 = zext i32 %2710 to i64, !dbg !360
  store i64 %2711, i64* %2708, align 4, !dbg !361
  %2712 = load i8*, i8** %2544, align 8, !dbg !362
  %2713 = load i32, i32* %2559, align 4, !dbg !363
  %2714 = alloca i8*, align 8, !dbg !364
  %2715 = getelementptr i8, i8* %2712, i32 %2713, !dbg !365
  store i8* %2715, i8** %2714, align 8, !dbg !366
  %2716 = load i32, i32* %2552, align 4, !dbg !367
  %2717 = getelementptr i8, i8* %2712, i32 %2716, !dbg !368
  br label %2718, !dbg !369

2718:                                             ; preds = %2725, %2704
  %2719 = load i32, i32* %2705, align 4, !dbg !370
  %2720 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2547, i32 0, i32 23, i32 %2719, !dbg !371
  %2721 = load i8*, i8** %2714, align 8, !dbg !372
  %2722 = load i8, i8* %2721, align 1, !dbg !373
  %2723 = zext i8 %2722 to i32, !dbg !374
  store i32 %2723, i32* %2545, align 4, !dbg !375
  store i32 %2723, i32* %2720, align 4, !dbg !376
  %2724 = icmp sgt i8 %2722, -1, !dbg !377
  br i1 %2724, label %2748, label %2739, !dbg !378

2725:                                             ; preds = %2739, %2748
  %2726 = load i32, i32* %2705, align 4, !dbg !379
  %2727 = add i32 %2726, 1, !dbg !380
  store i32 %2727, i32* %2705, align 4, !dbg !381
  %2728 = load i64, i64* %2708, align 4, !dbg !382
  %2729 = and i64 4294967295, %2728, !dbg !383
  %2730 = trunc i64 %2729 to i32, !dbg !384
  %2731 = getelementptr i32, i32* %2552, i32 %2727, !dbg !385
  store i32 %2730, i32* %2731, align 4, !dbg !386
  %2732 = load i32, i32* %2705, align 4, !dbg !387
  %2733 = icmp sle i32 %2732, 3, !dbg !388
  %2734 = load i8*, i8** %2714, align 8, !dbg !389
  %2735 = ptrtoint i8* %2734 to i64, !dbg !390
  %2736 = ptrtoint i8* %2717 to i64, !dbg !391
  %2737 = icmp ult i64 %2735, %2736, !dbg !392
  %2738 = and i1 %2733, %2737, !dbg !393
  br i1 %2738, label %2718, label %2757, !dbg !394

2739:                                             ; preds = %2718
  %2740 = load i8*, i8** %2714, align 8, !dbg !395
  %2741 = call i8 @sqlite3GetVarint32(i8* %2740, i32* %2545), !dbg !396
  %2742 = getelementptr i8, i8* %2740, i8 %2741, !dbg !397
  store i8* %2742, i8** %2714, align 8, !dbg !398
  %2743 = load i32, i32* %2545, align 4, !dbg !399
  store i32 %2743, i32* %2720, align 4, !dbg !400
  %2744 = load i64, i64* %2708, align 4, !dbg !401
  %2745 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2743), !dbg !402
  %2746 = zext i32 %2745 to i64, !dbg !403
  %2747 = add i64 %2744, %2746, !dbg !404
  store i64 %2747, i64* %2708, align 4, !dbg !405
  br label %2725, !dbg !406

2748:                                             ; preds = %2718
  %2749 = getelementptr i8, i8* %2721, i32 1, !dbg !407
  store i8* %2749, i8** %2714, align 8, !dbg !408
  %2750 = load i32, i32* %2545, align 4, !dbg !409
  %2751 = trunc i32 %2750 to i8, !dbg !410
  %2752 = getelementptr i8, i8* %4, i8 %2751, !dbg !411
  %2753 = load i8, i8* %2752, align 1, !dbg !412
  %2754 = zext i8 %2753 to i64, !dbg !413
  %2755 = load i64, i64* %2708, align 4, !dbg !414
  %2756 = add i64 %2755, %2754, !dbg !415
  store i64 %2756, i64* %2708, align 4, !dbg !416
  br label %2725, !dbg !417

2757:                                             ; preds = %2725
  %2758 = load i64, i64* %2708, align 4, !dbg !418
  %2759 = load i32, i32* %2560, align 4, !dbg !419
  %2760 = zext i32 %2759 to i64, !dbg !420
  %2761 = icmp uge i64 %2735, %2736, !dbg !421
  %2762 = icmp ugt i64 %2735, %2736, !dbg !422
  %2763 = icmp ne i64 %2758, %2760, !dbg !423
  %2764 = icmp ugt i64 %2758, %2760, !dbg !424
  %2765 = or i1 %2762, %2763, !dbg !425
  %2766 = and i1 %2761, %2765, !dbg !426
  %2767 = or i1 %2766, %2764, !dbg !427
  br i1 %2767, label %2768, label %2772, !dbg !428

2768:                                             ; preds = %2757
  %2769 = load i32, i32* %2552, align 4, !dbg !429
  %2770 = icmp eq i32 %2769, 0, !dbg !430
  br i1 %2770, label %2771, label %2772, !dbg !431

2771:                                             ; preds = %2768
  store i32 0, i32* %2705, align 4, !dbg !432
  store i8* %2717, i8** %2714, align 8, !dbg !433
  br label %2772, !dbg !434

2772:                                             ; preds = %2771, %2768, %2757
  %2773 = load i32, i32* %2705, align 4, !dbg !435
  %2774 = trunc i32 %2773 to i16, !dbg !436
  store i16 %2774, i16* %2563, align 2, !dbg !437
  %2775 = load i8*, i8** %2714, align 8, !dbg !438
  %2776 = ptrtoint i8* %2775 to i64, !dbg !439
  %2777 = load i8*, i8** %2544, align 8, !dbg !440
  %2778 = ptrtoint i8* %2777 to i64, !dbg !441
  %2779 = sub i64 %2776, %2778, !dbg !442
  %2780 = trunc i64 %2779 to i32, !dbg !443
  store i32 %2780, i32* %2559, align 4, !dbg !444
  br label %2782, !dbg !445

2781:                                             ; preds = %2696
  store i32 0, i32* %2545, align 4, !dbg !446
  br label %2782, !dbg !447

2782:                                             ; preds = %2772, %2781
  %2783 = load i16, i16* %2563, align 2, !dbg !448
  %2784 = icmp sle i16 %2783, 3, !dbg !449
  br i1 %2784, label %2785, label %2614, !dbg !450

2785:                                             ; preds = %2782
  %2786 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 1, !dbg !451
  %2787 = load i16, i16* %2786, align 2, !dbg !451
  %2788 = and i16 %2787, 9216, !dbg !451
  %2789 = icmp ne i16 %2788, 0, !dbg !451
  br i1 %2789, label %2790, label %2791, !dbg !451

2790:                                             ; preds = %2785
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2548), !dbg !451
  br label %2792, !dbg !451

2791:                                             ; preds = %2785
  store i16 1, i16* %2786, align 2, !dbg !451
  br label %2792, !dbg !451

2792:                                             ; preds = %2790, %2791, %2661, %2641, %2680, %2691, %2609, %2610
  call void @llvm.stackrestore(i8* %2537), !dbg !452
  br label %2793, !dbg !74

2793:                                             ; preds = %17, %2792
  %2794 = call i8* @llvm.stacksave(), !dbg !162
  %2795 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %2796 = load i8, i8* %2795, align 1, !dbg !166
  %2797 = alloca i32, align 4, !dbg !167
  store i32 0, i32* %2797, align 4, !dbg !168
  %2798 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %2799 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !171
  store %struct.VdbeCursor* %2799, %struct.VdbeCursor** %2798, align 8, !dbg !172
  %2800 = alloca i8*, align 8, !dbg !173
  %2801 = alloca i32, align 4, !dbg !174
  %2802 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2798, i32* %2797), !dbg !175
  %2803 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2798, align 8, !dbg !176
  %2804 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !177
  %2805 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 16, !dbg !178
  %2806 = load i16, i16* %2805, align 2, !dbg !179
  %2807 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 19, !dbg !180
  %2808 = load i32*, i32** %2807, align 8, !dbg !181
  %2809 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 0, !dbg !182
  %2810 = load i8, i8* %2809, align 1, !dbg !183
  %2811 = icmp ne i8 %2810, 3, !dbg !184
  %2812 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 2, !dbg !185
  %2813 = load i8, i8* %2812, align 1, !dbg !186
  %2814 = icmp ne i8 %2813, 0, !dbg !187
  %2815 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 14, !dbg !188
  %2816 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 21, !dbg !189
  %2817 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 22, !dbg !190
  %2818 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 20, !dbg !191
  %2819 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 17, !dbg !192
  %2820 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 9, !dbg !193
  %2821 = load i32, i32* %2820, align 4, !dbg !194
  %2822 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %2823 = load i32, i32* %2822, align 4, !dbg !196
  %2824 = icmp ne i32 %2821, %2823, !dbg !197
  br i1 %2824, label %2825, label %2867, !dbg !198

2825:                                             ; preds = %2793
  br i1 %2814, label %2847, label %2842, !dbg !199

2826:                                             ; preds = %2842, %2849
  %2827 = load i32, i32* %2822, align 4, !dbg !200
  store i32 %2827, i32* %2820, align 4, !dbg !201
  %2828 = load i8*, i8** %2818, align 8, !dbg !202
  %2829 = load i8, i8* %2828, align 1, !dbg !203
  %2830 = icmp sgt i8 %2829, -1, !dbg !206
  br i1 %2830, label %2831, label %2833, !dbg !207

2831:                                             ; preds = %2826
  %2832 = zext i8 %2829 to i32, !dbg !208
  store i32 %2832, i32* %2808, align 4, !dbg !209
  store i32 1, i32* %2815, align 4, !dbg !210
  br label %2836, !dbg !211

2833:                                             ; preds = %2826
  %2834 = call i8 @sqlite3GetVarint32(i8* %2828, i32* %2808), !dbg !212
  %2835 = zext i8 %2834 to i32, !dbg !213
  store i32 %2835, i32* %2815, align 4, !dbg !214
  br label %2836, !dbg !215

2836:                                             ; preds = %2833, %2831
  store i16 0, i16* %2819, align 2, !dbg !216
  %2837 = load i32, i32* %2817, align 4, !dbg !217
  %2838 = load i32, i32* %2808, align 4, !dbg !218
  %2839 = icmp ult i32 %2837, %2838, !dbg !219
  br i1 %2839, label %2841, label %2840, !dbg !220

2840:                                             ; preds = %2836
  store i8* %2828, i8** %2800, align 8, !dbg !221
  br label %2960, !dbg !222

2841:                                             ; preds = %2836
  store i8* null, i8** %2818, align 8, !dbg !223
  store i32 0, i32* %2817, align 4, !dbg !224
  br label %2867, !dbg !225

2842:                                             ; preds = %2825
  %2843 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 12, i32 0, !dbg !226
  %2844 = load %struct.BtCursor*, %struct.BtCursor** %2843, align 8, !dbg !227
  %2845 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2844), !dbg !228
  store i32 %2845, i32* %2816, align 4, !dbg !229
  %2846 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2844, i32* %2817), !dbg !230
  store i8* %2846, i8** %2818, align 8, !dbg !231
  br label %2826, !dbg !232

2847:                                             ; preds = %2825
  %2848 = icmp eq i8 %2810, 3, !dbg !233
  br i1 %2848, label %2849, label %2860, !dbg !234

2849:                                             ; preds = %2847
  %2850 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 10, !dbg !235
  %2851 = load i32, i32* %2850, align 4, !dbg !236
  %2852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2851, !dbg !237
  %2853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 1, !dbg !238
  %2854 = load i16, i16* %2853, align 2, !dbg !239
  %2855 = and i16 %2854, 16, !dbg !240
  %2856 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 4, !dbg !241
  %2857 = load i32, i32* %2856, align 4, !dbg !242
  store i32 %2857, i32* %2816, align 4, !dbg !243
  store i32 %2857, i32* %2817, align 4, !dbg !244
  %2858 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 5, !dbg !245
  %2859 = load i8*, i8** %2858, align 8, !dbg !246
  store i8* %2859, i8** %2818, align 8, !dbg !247
  br label %2826, !dbg !248

2860:                                             ; preds = %2847
  %2861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 1, !dbg !249
  %2862 = load i16, i16* %2861, align 2, !dbg !249
  %2863 = and i16 %2862, 9216, !dbg !249
  %2864 = icmp ne i16 %2863, 0, !dbg !249
  br i1 %2864, label %2865, label %2866, !dbg !249

2865:                                             ; preds = %2860
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2804), !dbg !249
  br label %3048, !dbg !249

2866:                                             ; preds = %2860
  store i16 1, i16* %2861, align 2, !dbg !249
  br label %3048, !dbg !249

2867:                                             ; preds = %2841, %2793
  %2868 = load i16, i16* %2819, align 2, !dbg !250
  %2869 = icmp ule i16 %2868, 3, !dbg !251
  br i1 %2869, label %2952, label %2949, !dbg !252

2870:                                             ; preds = %2949, %3038
  %2871 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 1, !dbg !253
  %2872 = load i16, i16* %2871, align 2, !dbg !254
  %2873 = and i16 9216, %2872, !dbg !255
  %2874 = icmp eq i16 0, %2873, !dbg !256
  br i1 %2874, label %2875, label %2879, !dbg !257

2875:                                             ; preds = %2870
  %2876 = icmp ne i16 %2873, 0, !dbg !258
  br i1 %2876, label %2877, label %2878, !dbg !258

2877:                                             ; preds = %2875
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2804), !dbg !258
  br label %2879, !dbg !258

2878:                                             ; preds = %2875
  store i16 1, i16* %2871, align 2, !dbg !258
  br label %2879, !dbg !258

2879:                                             ; preds = %2877, %2878, %2870
  %2880 = load i32, i32* %2801, align 4, !dbg !259
  %2881 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 23, i32 3, !dbg !260
  %2882 = load i32, i32* %2881, align 4, !dbg !261
  %2883 = load i32, i32* %2817, align 4, !dbg !262
  %2884 = getelementptr i32, i32* %2808, i32 4, !dbg !263
  %2885 = load i32, i32* %2884, align 4, !dbg !264
  %2886 = icmp sge i32 %2883, %2885, !dbg !265
  br i1 %2886, label %2887, label %2927, !dbg !266

2887:                                             ; preds = %2879
  %2888 = load i8*, i8** %2818, align 8, !dbg !267
  %2889 = ptrtoint i8* %2888 to i64, !dbg !268
  %2890 = getelementptr i32, i32* %2808, i32 3, !dbg !509
  %2891 = load i32, i32* %2890, align 4, !dbg !269
  %2892 = zext i32 %2891 to i64, !dbg !270
  %2893 = add i64 %2889, %2892, !dbg !271
  %2894 = inttoptr i64 %2893 to i8*, !dbg !272
  store i8* %2894, i8** %2800, align 8, !dbg !273
  %2895 = load i32, i32* %2801, align 4, !dbg !274
  %2896 = icmp ult i32 %2895, 12, !dbg !275
  br i1 %2896, label %2897, label %2899, !dbg !276

2897:                                             ; preds = %2887
  %2898 = call i32 @sqlite3VdbeSerialGet(i8* %2894, i32 %2895, %struct.sqlite3_value* %2804), !dbg !277
  br label %3048, !dbg !278

2899:                                             ; preds = %2887
  %2900 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %2900, align 2, !dbg !280
  %2901 = getelementptr i16, i16* %2900, i32 1, !dbg !281
  store i16 514, i16* %2901, align 2, !dbg !282
  %2902 = load i32, i32* %2801, align 4, !dbg !283
  %2903 = sub i32 %2902, 12, !dbg !284
  %2904 = lshr i32 %2903, 1, !dbg !285
  %2905 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 4, !dbg !286
  store i32 %2904, i32* %2905, align 4, !dbg !287
  %2906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 2, !dbg !288
  store i8 %2796, i8* %2906, align 1, !dbg !289
  %2907 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 5, !dbg !290
  %2908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 7, !dbg !291
  %2909 = load i32, i32* %2908, align 4, !dbg !292
  %2910 = add i32 %2904, 2, !dbg !293
  %2911 = icmp slt i32 %2909, %2910, !dbg !294
  br i1 %2911, label %2912, label %2914, !dbg !295

2912:                                             ; preds = %2899
  store i16 1, i16* %2871, align 2, !dbg !296
  %2913 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2804, i32 %2910, i32 0), !dbg !297
  br label %2917, !dbg !298

2914:                                             ; preds = %2899
  %2915 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 6, !dbg !299
  %2916 = load i8*, i8** %2915, align 8, !dbg !300
  store i8* %2916, i8** %2907, align 8, !dbg !301
  br label %2917, !dbg !302

2917:                                             ; preds = %2914, %2912
  %2918 = zext i32 %2904 to i64, !dbg !303
  %2919 = load i8*, i8** %2907, align 8, !dbg !304
  %2920 = load i8*, i8** %2800, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2919, i8* %2920, i64 %2918, i1 false), !dbg !306
  %2921 = getelementptr i8, i8* %2919, i32 %2904, !dbg !307
  store i8 0, i8* %2921, align 1, !dbg !308
  %2922 = add i32 %2904, 1, !dbg !309
  %2923 = getelementptr i8, i8* %2919, i32 %2922, !dbg !310
  store i8 0, i8* %2923, align 1, !dbg !311
  %2924 = and i32 %2902, 1, !dbg !312
  %2925 = getelementptr i16, i16* %2900, i32 %2924, !dbg !313
  %2926 = load i16, i16* %2925, align 2, !dbg !314
  store i16 %2926, i16* %2871, align 2, !dbg !315
  br label %3048, !dbg !316

2927:                                             ; preds = %2879
  %2928 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 2, !dbg !317
  store i8 %2796, i8* %2928, align 1, !dbg !318
  %2929 = load i32, i32* %2801, align 4, !dbg !319
  %2930 = and i32 %2929, 1, !dbg !320
  %2931 = icmp eq i32 %2930, 0, !dbg !321
  %2932 = icmp sge i32 %2929, 12, !dbg !322
  %2933 = and i1 %2932, %2931, !dbg !323
  %2934 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2929), !dbg !324
  %2935 = icmp eq i32 %2934, 0, !dbg !325
  br i1 %2935, label %2947, label %2936, !dbg !326

2936:                                             ; preds = %2927
  %2937 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 12, i32 0, !dbg !327
  %2938 = load %struct.BtCursor*, %struct.BtCursor** %2937, align 8, !dbg !328
  %2939 = getelementptr i32, i32* %2808, i32 3, !dbg !510
  %2940 = load i32, i32* %2939, align 4, !dbg !329
  %2941 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2938, i32 %2940, i32 %2934, %struct.sqlite3_value* %2804), !dbg !330
  %2942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 5, !dbg !331
  %2943 = load i8*, i8** %2942, align 8, !dbg !332
  %2944 = call i32 @sqlite3VdbeSerialGet(i8* %2943, i32 %2929, %struct.sqlite3_value* %2804), !dbg !333
  %2945 = load i16, i16* %2871, align 2, !dbg !334
  %2946 = and i16 %2945, -4097, !dbg !335
  store i16 %2946, i16* %2871, align 2, !dbg !336
  br label %3048, !dbg !337

2947:                                             ; preds = %2927
  %2948 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2929, %struct.sqlite3_value* %2804), !dbg !338
  br label %3048, !dbg !339

2949:                                             ; preds = %2867
  %2950 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 23, i32 3, !dbg !340
  %2951 = load i32, i32* %2950, align 4, !dbg !341
  store i32 %2951, i32* %2801, align 4, !dbg !342
  br label %2870, !dbg !343

2952:                                             ; preds = %2867
  %2953 = load i32, i32* %2815, align 4, !dbg !344
  %2954 = load i32, i32* %2808, align 4, !dbg !345
  %2955 = icmp ult i32 %2953, %2954, !dbg !346
  br i1 %2955, label %2956, label %3037, !dbg !347

2956:                                             ; preds = %2952
  %2957 = load i8*, i8** %2818, align 8, !dbg !348
  %2958 = icmp eq i8* %2957, null, !dbg !349
  br i1 %2958, label %2960, label %2959, !dbg !350

2959:                                             ; preds = %2956
  store i8* %2957, i8** %2800, align 8, !dbg !351
  br label %2960, !dbg !352

2960:                                             ; preds = %2959, %2956, %2840
  %2961 = alloca i32, align 4, !dbg !353
  %2962 = load i16, i16* %2819, align 2, !dbg !354
  %2963 = zext i16 %2962 to i32, !dbg !355
  store i32 %2963, i32* %2961, align 4, !dbg !356
  %2964 = alloca i64, align 8, !dbg !357
  %2965 = getelementptr i32, i32* %2808, i32 %2963, !dbg !358
  %2966 = load i32, i32* %2965, align 4, !dbg !359
  %2967 = zext i32 %2966 to i64, !dbg !360
  store i64 %2967, i64* %2964, align 4, !dbg !361
  %2968 = load i8*, i8** %2800, align 8, !dbg !362
  %2969 = load i32, i32* %2815, align 4, !dbg !363
  %2970 = alloca i8*, align 8, !dbg !364
  %2971 = getelementptr i8, i8* %2968, i32 %2969, !dbg !365
  store i8* %2971, i8** %2970, align 8, !dbg !366
  %2972 = load i32, i32* %2808, align 4, !dbg !367
  %2973 = getelementptr i8, i8* %2968, i32 %2972, !dbg !368
  br label %2974, !dbg !369

2974:                                             ; preds = %2981, %2960
  %2975 = load i32, i32* %2961, align 4, !dbg !370
  %2976 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2803, i32 0, i32 23, i32 %2975, !dbg !371
  %2977 = load i8*, i8** %2970, align 8, !dbg !372
  %2978 = load i8, i8* %2977, align 1, !dbg !373
  %2979 = zext i8 %2978 to i32, !dbg !374
  store i32 %2979, i32* %2801, align 4, !dbg !375
  store i32 %2979, i32* %2976, align 4, !dbg !376
  %2980 = icmp sgt i8 %2978, -1, !dbg !377
  br i1 %2980, label %3004, label %2995, !dbg !378

2981:                                             ; preds = %2995, %3004
  %2982 = load i32, i32* %2961, align 4, !dbg !379
  %2983 = add i32 %2982, 1, !dbg !380
  store i32 %2983, i32* %2961, align 4, !dbg !381
  %2984 = load i64, i64* %2964, align 4, !dbg !382
  %2985 = and i64 4294967295, %2984, !dbg !383
  %2986 = trunc i64 %2985 to i32, !dbg !384
  %2987 = getelementptr i32, i32* %2808, i32 %2983, !dbg !385
  store i32 %2986, i32* %2987, align 4, !dbg !386
  %2988 = load i32, i32* %2961, align 4, !dbg !387
  %2989 = icmp sle i32 %2988, 3, !dbg !388
  %2990 = load i8*, i8** %2970, align 8, !dbg !389
  %2991 = ptrtoint i8* %2990 to i64, !dbg !390
  %2992 = ptrtoint i8* %2973 to i64, !dbg !391
  %2993 = icmp ult i64 %2991, %2992, !dbg !392
  %2994 = and i1 %2989, %2993, !dbg !393
  br i1 %2994, label %2974, label %3013, !dbg !394

2995:                                             ; preds = %2974
  %2996 = load i8*, i8** %2970, align 8, !dbg !395
  %2997 = call i8 @sqlite3GetVarint32(i8* %2996, i32* %2801), !dbg !396
  %2998 = getelementptr i8, i8* %2996, i8 %2997, !dbg !397
  store i8* %2998, i8** %2970, align 8, !dbg !398
  %2999 = load i32, i32* %2801, align 4, !dbg !399
  store i32 %2999, i32* %2976, align 4, !dbg !400
  %3000 = load i64, i64* %2964, align 4, !dbg !401
  %3001 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2999), !dbg !402
  %3002 = zext i32 %3001 to i64, !dbg !403
  %3003 = add i64 %3000, %3002, !dbg !404
  store i64 %3003, i64* %2964, align 4, !dbg !405
  br label %2981, !dbg !406

3004:                                             ; preds = %2974
  %3005 = getelementptr i8, i8* %2977, i32 1, !dbg !407
  store i8* %3005, i8** %2970, align 8, !dbg !408
  %3006 = load i32, i32* %2801, align 4, !dbg !409
  %3007 = trunc i32 %3006 to i8, !dbg !410
  %3008 = getelementptr i8, i8* %4, i8 %3007, !dbg !411
  %3009 = load i8, i8* %3008, align 1, !dbg !412
  %3010 = zext i8 %3009 to i64, !dbg !413
  %3011 = load i64, i64* %2964, align 4, !dbg !414
  %3012 = add i64 %3011, %3010, !dbg !415
  store i64 %3012, i64* %2964, align 4, !dbg !416
  br label %2981, !dbg !417

3013:                                             ; preds = %2981
  %3014 = load i64, i64* %2964, align 4, !dbg !418
  %3015 = load i32, i32* %2816, align 4, !dbg !419
  %3016 = zext i32 %3015 to i64, !dbg !420
  %3017 = icmp uge i64 %2991, %2992, !dbg !421
  %3018 = icmp ugt i64 %2991, %2992, !dbg !422
  %3019 = icmp ne i64 %3014, %3016, !dbg !423
  %3020 = icmp ugt i64 %3014, %3016, !dbg !424
  %3021 = or i1 %3018, %3019, !dbg !425
  %3022 = and i1 %3017, %3021, !dbg !426
  %3023 = or i1 %3022, %3020, !dbg !427
  br i1 %3023, label %3024, label %3028, !dbg !428

3024:                                             ; preds = %3013
  %3025 = load i32, i32* %2808, align 4, !dbg !429
  %3026 = icmp eq i32 %3025, 0, !dbg !430
  br i1 %3026, label %3027, label %3028, !dbg !431

3027:                                             ; preds = %3024
  store i32 0, i32* %2961, align 4, !dbg !432
  store i8* %2973, i8** %2970, align 8, !dbg !433
  br label %3028, !dbg !434

3028:                                             ; preds = %3027, %3024, %3013
  %3029 = load i32, i32* %2961, align 4, !dbg !435
  %3030 = trunc i32 %3029 to i16, !dbg !436
  store i16 %3030, i16* %2819, align 2, !dbg !437
  %3031 = load i8*, i8** %2970, align 8, !dbg !438
  %3032 = ptrtoint i8* %3031 to i64, !dbg !439
  %3033 = load i8*, i8** %2800, align 8, !dbg !440
  %3034 = ptrtoint i8* %3033 to i64, !dbg !441
  %3035 = sub i64 %3032, %3034, !dbg !442
  %3036 = trunc i64 %3035 to i32, !dbg !443
  store i32 %3036, i32* %2815, align 4, !dbg !444
  br label %3038, !dbg !445

3037:                                             ; preds = %2952
  store i32 0, i32* %2801, align 4, !dbg !446
  br label %3038, !dbg !447

3038:                                             ; preds = %3028, %3037
  %3039 = load i16, i16* %2819, align 2, !dbg !448
  %3040 = icmp sle i16 %3039, 3, !dbg !449
  br i1 %3040, label %3041, label %2870, !dbg !450

3041:                                             ; preds = %3038
  %3042 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2804, i32 0, i32 1, !dbg !451
  %3043 = load i16, i16* %3042, align 2, !dbg !451
  %3044 = and i16 %3043, 9216, !dbg !451
  %3045 = icmp ne i16 %3044, 0, !dbg !451
  br i1 %3045, label %3046, label %3047, !dbg !451

3046:                                             ; preds = %3041
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2804), !dbg !451
  br label %3048, !dbg !451

3047:                                             ; preds = %3041
  store i16 1, i16* %3042, align 2, !dbg !451
  br label %3048, !dbg !451

3048:                                             ; preds = %3046, %3047, %2917, %2897, %2936, %2947, %2865, %2866
  call void @llvm.stackrestore(i8* %2794), !dbg !452
  br label %3049, !dbg !74

3049:                                             ; preds = %17, %3048
  %3050 = call i8* @llvm.stacksave(), !dbg !593
  %3051 = alloca i32, align 8, !dbg !596
  %3052 = alloca i32, align 8, !dbg !597
  %3053 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !598
  %3054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !599
  %3055 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 1, !dbg !600
  %3056 = load i16, i16* %3055, align 2, !dbg !601
  %3057 = alloca i16, align 8, !dbg !602
  store i16 %3056, i16* %3057, align 2, !dbg !603
  %3058 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 1, !dbg !604
  %3059 = load i16, i16* %3058, align 2, !dbg !605
  %3060 = alloca i16, align 8, !dbg !606
  store i16 %3059, i16* %3060, align 2, !dbg !607
  %3061 = or i16 %3056, %3059, !dbg !608
  %3062 = and i16 %3061, 1, !dbg !609
  %3063 = icmp ne i16 %3062, 0, !dbg !610
  br i1 %3063, label %3064, label %3065, !dbg !611

3064:                                             ; preds = %3049
  call void @llvm.stackrestore(i8* %3050), !dbg !612
  br label %5705, !dbg !613

3065:                                             ; preds = %3049
  %3066 = and i16 %3061, 2, !dbg !656
  %3067 = icmp ne i16 %3066, 0, !dbg !657
  br i1 %3067, label %3068, label %3125, !dbg !658

3068:                                             ; preds = %3065
  %3069 = and i16 %3056, 46, !dbg !659
  %3070 = icmp eq i16 %3069, 2, !dbg !660
  br i1 %3070, label %3071, label %3097, !dbg !661

3071:                                             ; preds = %3068
  %3072 = call i8* @llvm.stacksave(), !dbg !662
  %3073 = alloca double, align 8, !dbg !663
  %3074 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 0, i32 0, !dbg !662
  %3075 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 2, !dbg !662
  %3076 = load i8, i8* %3075, align 1, !dbg !662
  %3077 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 5, !dbg !662
  %3078 = load i8*, i8** %3077, align 8, !dbg !662
  %3079 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 4, !dbg !662
  %3080 = load i32, i32* %3079, align 4, !dbg !662
  %3081 = call i32 @sqlite3AtoF(i8* %3078, double* %3073, i32 %3080, i8 %3076), !dbg !662
  %3082 = icmp sle i32 %3081, 0, !dbg !662
  br i1 %3082, label %3095, label %3083, !dbg !662

3083:                                             ; preds = %3071
  %3084 = icmp eq i32 %3081, 1, !dbg !662
  %3085 = load double, double* %3073, align 8, !dbg !662
  br i1 %3084, label %3086, label %3089, !dbg !662

3086:                                             ; preds = %3083
  %3087 = load i16, i16* %3055, align 2, !dbg !662
  %3088 = or i16 %3087, 4, !dbg !662
  store i16 %3088, i16* %3055, align 2, !dbg !662
  br label %3092, !dbg !662

3089:                                             ; preds = %3083
  store double %3085, double* %3074, align 8, !dbg !662
  %3090 = load i16, i16* %3055, align 2, !dbg !662
  %3091 = or i16 %3090, 8, !dbg !662
  store i16 %3091, i16* %3055, align 2, !dbg !662
  br label %3092, !dbg !662

3092:                                             ; preds = %3089, %3086
  %3093 = load i16, i16* %3055, align 2, !dbg !662
  %3094 = and i16 %3093, -3, !dbg !662
  store i16 %3094, i16* %3055, align 2, !dbg !662
  br label %3095, !dbg !662

3095:                                             ; preds = %3092, %3071
  call void @llvm.stackrestore(i8* %3072), !dbg !662
  %3096 = load i16, i16* %3058, align 2, !dbg !666
  store i16 %3096, i16* %3060, align 2, !dbg !667
  br label %3097, !dbg !668

3097:                                             ; preds = %3095, %3068
  %3098 = and i16 %3059, 46, !dbg !669
  %3099 = icmp eq i16 %3098, 2, !dbg !670
  br i1 %3099, label %3100, label %3125, !dbg !671

3100:                                             ; preds = %3097
  %3101 = call i8* @llvm.stacksave(), !dbg !672
  %3102 = alloca double, align 8, !dbg !663
  %3103 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 0, i32 0, !dbg !672
  %3104 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 2, !dbg !672
  %3105 = load i8, i8* %3104, align 1, !dbg !672
  %3106 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 5, !dbg !672
  %3107 = load i8*, i8** %3106, align 8, !dbg !672
  %3108 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 4, !dbg !672
  %3109 = load i32, i32* %3108, align 4, !dbg !672
  %3110 = call i32 @sqlite3AtoF(i8* %3107, double* %3102, i32 %3109, i8 %3105), !dbg !672
  %3111 = icmp sle i32 %3110, 0, !dbg !672
  br i1 %3111, label %3124, label %3112, !dbg !672

3112:                                             ; preds = %3100
  %3113 = icmp eq i32 %3110, 1, !dbg !672
  %3114 = load double, double* %3102, align 8, !dbg !672
  br i1 %3113, label %3115, label %3118, !dbg !672

3115:                                             ; preds = %3112
  %3116 = load i16, i16* %3058, align 2, !dbg !672
  %3117 = or i16 %3116, 4, !dbg !672
  store i16 %3117, i16* %3058, align 2, !dbg !672
  br label %3121, !dbg !672

3118:                                             ; preds = %3112
  store double %3114, double* %3103, align 8, !dbg !672
  %3119 = load i16, i16* %3058, align 2, !dbg !672
  %3120 = or i16 %3119, 8, !dbg !672
  store i16 %3120, i16* %3058, align 2, !dbg !672
  br label %3121, !dbg !672

3121:                                             ; preds = %3118, %3115
  %3122 = load i16, i16* %3058, align 2, !dbg !672
  %3123 = and i16 %3122, -3, !dbg !672
  store i16 %3123, i16* %3058, align 2, !dbg !672
  br label %3124, !dbg !672

3124:                                             ; preds = %3121, %3100
  call void @llvm.stackrestore(i8* %3101), !dbg !672
  br label %3125, !dbg !673

3125:                                             ; preds = %3097, %3124, %3065
  %3126 = load i16, i16* %3055, align 2, !dbg !674
  %3127 = load i16, i16* %3058, align 2, !dbg !675
  %3128 = and i16 %3126, %3127, !dbg !676
  %3129 = and i16 %3128, 4, !dbg !677
  %3130 = icmp ne i16 %3129, 0, !dbg !678
  br i1 %3130, label %3131, label %3144, !dbg !679

3131:                                             ; preds = %3125
  %3132 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3053, i32 0, i32 0, !dbg !680
  %3133 = bitcast %union.MemValue* %3132 to i64*, !dbg !681
  %3134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3054, i32 0, i32 0, !dbg !682
  %3135 = bitcast %union.MemValue* %3134 to i64*, !dbg !683
  %3136 = load i64, i64* %3133, align 4, !dbg !684
  %3137 = load i64, i64* %3135, align 4, !dbg !685
  %3138 = icmp sgt i64 %3137, %3136, !dbg !686
  br i1 %3138, label %3139, label %3140, !dbg !687

3139:                                             ; preds = %3131
  store i32 1, i32* %3051, align 4, !dbg !688
  br label %3150, !dbg !689

3140:                                             ; preds = %3131
  %3141 = icmp slt i64 %3137, %3136, !dbg !690
  br i1 %3141, label %3142, label %3143, !dbg !691

3142:                                             ; preds = %3140
  store i32 -1, i32* %3051, align 4, !dbg !692
  br label %3150, !dbg !693

3143:                                             ; preds = %3140
  store i32 0, i32* %3051, align 4, !dbg !694
  br label %3150, !dbg !695

3144:                                             ; preds = %3125
  %3145 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 35, !dbg !638
  %3146 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3145, i32 0, i32 6, !dbg !639
  %3147 = bitcast %union.p4union* %3146 to %struct.CollSeq**, !dbg !640
  %3148 = load %struct.CollSeq*, %struct.CollSeq** %3147, align 8, !dbg !641
  %3149 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %3054, %struct.sqlite3_value* %3053, %struct.CollSeq* %3148), !dbg !642
  store i32 %3149, i32* %3051, align 4, !dbg !643
  br label %3150, !dbg !696

3150:                                             ; preds = %3142, %3143, %3144, %3139
  %3151 = load i32, i32* %3051, align 4, !dbg !697
  %3152 = icmp slt i32 %3151, 0, !dbg !644
  br i1 %3152, label %3153, label %3154, !dbg !645

3153:                                             ; preds = %3150
  store i32 1, i32* %3052, align 4, !dbg !646
  br label %3158, !dbg !647

3154:                                             ; preds = %3150
  %3155 = icmp eq i32 %3151, 0, !dbg !698
  br i1 %3155, label %3156, label %3157, !dbg !699

3156:                                             ; preds = %3154
  store i32 0, i32* %3052, align 4, !dbg !700
  br label %3158, !dbg !701

3157:                                             ; preds = %3154
  store i32 1, i32* %3052, align 4, !dbg !702
  br label %3158, !dbg !703

3158:                                             ; preds = %3157, %3156, %3153
  store i16 %3059, i16* %3060, align 2, !dbg !649
  store i16 %3056, i16* %3057, align 2, !dbg !650
  %3159 = load i32, i32* %3052, align 4, !dbg !651
  %3160 = icmp ne i32 %3159, 0, !dbg !652
  call void @llvm.stackrestore(i8* %3050), !dbg !653
  br i1 %3160, label %5705, label %3161, !dbg !654

3161:                                             ; preds = %17, %3158
  %3162 = call i8* @llvm.stacksave(), !dbg !162
  %3163 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %3164 = load i8, i8* %3163, align 1, !dbg !166
  %3165 = alloca i32, align 4, !dbg !167
  store i32 3, i32* %3165, align 4, !dbg !168
  %3166 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !169
  %3167 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %3168 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3166, align 8, !dbg !171
  store %struct.VdbeCursor* %3168, %struct.VdbeCursor** %3167, align 8, !dbg !172
  %3169 = alloca i8*, align 8, !dbg !173
  %3170 = alloca i32, align 4, !dbg !174
  %3171 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3167, i32* %3165), !dbg !175
  %3172 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3167, align 8, !dbg !176
  %3173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !177
  %3174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 16, !dbg !178
  %3175 = load i16, i16* %3174, align 2, !dbg !179
  %3176 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 19, !dbg !180
  %3177 = load i32*, i32** %3176, align 8, !dbg !181
  %3178 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 0, !dbg !182
  %3179 = load i8, i8* %3178, align 1, !dbg !183
  %3180 = icmp ne i8 %3179, 3, !dbg !184
  %3181 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 2, !dbg !185
  %3182 = load i8, i8* %3181, align 1, !dbg !186
  %3183 = icmp ne i8 %3182, 0, !dbg !187
  %3184 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 14, !dbg !188
  %3185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 21, !dbg !189
  %3186 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 22, !dbg !190
  %3187 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 20, !dbg !191
  %3188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 17, !dbg !192
  %3189 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 9, !dbg !193
  %3190 = load i32, i32* %3189, align 4, !dbg !194
  %3191 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %3192 = load i32, i32* %3191, align 4, !dbg !196
  %3193 = icmp ne i32 %3190, %3192, !dbg !197
  br i1 %3193, label %3194, label %3236, !dbg !198

3194:                                             ; preds = %3161
  br i1 %3183, label %3216, label %3211, !dbg !199

3195:                                             ; preds = %3211, %3218
  %3196 = load i32, i32* %3191, align 4, !dbg !200
  store i32 %3196, i32* %3189, align 4, !dbg !201
  %3197 = load i8*, i8** %3187, align 8, !dbg !202
  %3198 = load i8, i8* %3197, align 1, !dbg !203
  %3199 = icmp sgt i8 %3198, -1, !dbg !206
  br i1 %3199, label %3200, label %3202, !dbg !207

3200:                                             ; preds = %3195
  %3201 = zext i8 %3198 to i32, !dbg !208
  store i32 %3201, i32* %3177, align 4, !dbg !209
  store i32 1, i32* %3184, align 4, !dbg !210
  br label %3205, !dbg !211

3202:                                             ; preds = %3195
  %3203 = call i8 @sqlite3GetVarint32(i8* %3197, i32* %3177), !dbg !212
  %3204 = zext i8 %3203 to i32, !dbg !213
  store i32 %3204, i32* %3184, align 4, !dbg !214
  br label %3205, !dbg !215

3205:                                             ; preds = %3202, %3200
  store i16 0, i16* %3188, align 2, !dbg !216
  %3206 = load i32, i32* %3186, align 4, !dbg !217
  %3207 = load i32, i32* %3177, align 4, !dbg !218
  %3208 = icmp ult i32 %3206, %3207, !dbg !219
  br i1 %3208, label %3210, label %3209, !dbg !220

3209:                                             ; preds = %3205
  store i8* %3197, i8** %3169, align 8, !dbg !221
  br label %3329, !dbg !222

3210:                                             ; preds = %3205
  store i8* null, i8** %3187, align 8, !dbg !223
  store i32 0, i32* %3186, align 4, !dbg !224
  br label %3236, !dbg !225

3211:                                             ; preds = %3194
  %3212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 12, i32 0, !dbg !226
  %3213 = load %struct.BtCursor*, %struct.BtCursor** %3212, align 8, !dbg !227
  %3214 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3213), !dbg !228
  store i32 %3214, i32* %3185, align 4, !dbg !229
  %3215 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3213, i32* %3186), !dbg !230
  store i8* %3215, i8** %3187, align 8, !dbg !231
  br label %3195, !dbg !232

3216:                                             ; preds = %3194
  %3217 = icmp eq i8 %3179, 3, !dbg !233
  br i1 %3217, label %3218, label %3229, !dbg !234

3218:                                             ; preds = %3216
  %3219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 10, !dbg !235
  %3220 = load i32, i32* %3219, align 4, !dbg !236
  %3221 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3220, !dbg !237
  %3222 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3221, i32 0, i32 1, !dbg !238
  %3223 = load i16, i16* %3222, align 2, !dbg !239
  %3224 = and i16 %3223, 16, !dbg !240
  %3225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3221, i32 0, i32 4, !dbg !241
  %3226 = load i32, i32* %3225, align 4, !dbg !242
  store i32 %3226, i32* %3185, align 4, !dbg !243
  store i32 %3226, i32* %3186, align 4, !dbg !244
  %3227 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3221, i32 0, i32 5, !dbg !245
  %3228 = load i8*, i8** %3227, align 8, !dbg !246
  store i8* %3228, i8** %3187, align 8, !dbg !247
  br label %3195, !dbg !248

3229:                                             ; preds = %3216
  %3230 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 1, !dbg !249
  %3231 = load i16, i16* %3230, align 2, !dbg !249
  %3232 = and i16 %3231, 9216, !dbg !249
  %3233 = icmp ne i16 %3232, 0, !dbg !249
  br i1 %3233, label %3234, label %3235, !dbg !249

3234:                                             ; preds = %3229
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3173), !dbg !249
  br label %3417, !dbg !249

3235:                                             ; preds = %3229
  store i16 1, i16* %3230, align 2, !dbg !249
  br label %3417, !dbg !249

3236:                                             ; preds = %3210, %3161
  %3237 = load i16, i16* %3188, align 2, !dbg !250
  %3238 = icmp ule i16 %3237, 3, !dbg !251
  br i1 %3238, label %3321, label %3318, !dbg !252

3239:                                             ; preds = %3318, %3407
  %3240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 1, !dbg !253
  %3241 = load i16, i16* %3240, align 2, !dbg !254
  %3242 = and i16 9216, %3241, !dbg !255
  %3243 = icmp eq i16 0, %3242, !dbg !256
  br i1 %3243, label %3244, label %3248, !dbg !257

3244:                                             ; preds = %3239
  %3245 = icmp ne i16 %3242, 0, !dbg !258
  br i1 %3245, label %3246, label %3247, !dbg !258

3246:                                             ; preds = %3244
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3173), !dbg !258
  br label %3248, !dbg !258

3247:                                             ; preds = %3244
  store i16 1, i16* %3240, align 2, !dbg !258
  br label %3248, !dbg !258

3248:                                             ; preds = %3246, %3247, %3239
  %3249 = load i32, i32* %3170, align 4, !dbg !259
  %3250 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 23, i32 3, !dbg !260
  %3251 = load i32, i32* %3250, align 4, !dbg !261
  %3252 = load i32, i32* %3186, align 4, !dbg !262
  %3253 = getelementptr i32, i32* %3177, i32 4, !dbg !263
  %3254 = load i32, i32* %3253, align 4, !dbg !264
  %3255 = icmp sge i32 %3252, %3254, !dbg !265
  br i1 %3255, label %3256, label %3296, !dbg !266

3256:                                             ; preds = %3248
  %3257 = load i8*, i8** %3187, align 8, !dbg !267
  %3258 = ptrtoint i8* %3257 to i64, !dbg !268
  %3259 = getelementptr i32, i32* %3177, i32 3, !dbg !509
  %3260 = load i32, i32* %3259, align 4, !dbg !269
  %3261 = zext i32 %3260 to i64, !dbg !270
  %3262 = add i64 %3258, %3261, !dbg !271
  %3263 = inttoptr i64 %3262 to i8*, !dbg !272
  store i8* %3263, i8** %3169, align 8, !dbg !273
  %3264 = load i32, i32* %3170, align 4, !dbg !274
  %3265 = icmp ult i32 %3264, 12, !dbg !275
  br i1 %3265, label %3266, label %3268, !dbg !276

3266:                                             ; preds = %3256
  %3267 = call i32 @sqlite3VdbeSerialGet(i8* %3263, i32 %3264, %struct.sqlite3_value* %3173), !dbg !277
  br label %3417, !dbg !278

3268:                                             ; preds = %3256
  %3269 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %3269, align 2, !dbg !280
  %3270 = getelementptr i16, i16* %3269, i32 1, !dbg !281
  store i16 514, i16* %3270, align 2, !dbg !282
  %3271 = load i32, i32* %3170, align 4, !dbg !283
  %3272 = sub i32 %3271, 12, !dbg !284
  %3273 = lshr i32 %3272, 1, !dbg !285
  %3274 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 4, !dbg !286
  store i32 %3273, i32* %3274, align 4, !dbg !287
  %3275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 2, !dbg !288
  store i8 %3164, i8* %3275, align 1, !dbg !289
  %3276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 5, !dbg !290
  %3277 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 7, !dbg !291
  %3278 = load i32, i32* %3277, align 4, !dbg !292
  %3279 = add i32 %3273, 2, !dbg !293
  %3280 = icmp slt i32 %3278, %3279, !dbg !294
  br i1 %3280, label %3281, label %3283, !dbg !295

3281:                                             ; preds = %3268
  store i16 1, i16* %3240, align 2, !dbg !296
  %3282 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3173, i32 %3279, i32 0), !dbg !297
  br label %3286, !dbg !298

3283:                                             ; preds = %3268
  %3284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 6, !dbg !299
  %3285 = load i8*, i8** %3284, align 8, !dbg !300
  store i8* %3285, i8** %3276, align 8, !dbg !301
  br label %3286, !dbg !302

3286:                                             ; preds = %3283, %3281
  %3287 = zext i32 %3273 to i64, !dbg !303
  %3288 = load i8*, i8** %3276, align 8, !dbg !304
  %3289 = load i8*, i8** %3169, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3288, i8* %3289, i64 %3287, i1 false), !dbg !306
  %3290 = getelementptr i8, i8* %3288, i32 %3273, !dbg !307
  store i8 0, i8* %3290, align 1, !dbg !308
  %3291 = add i32 %3273, 1, !dbg !309
  %3292 = getelementptr i8, i8* %3288, i32 %3291, !dbg !310
  store i8 0, i8* %3292, align 1, !dbg !311
  %3293 = and i32 %3271, 1, !dbg !312
  %3294 = getelementptr i16, i16* %3269, i32 %3293, !dbg !313
  %3295 = load i16, i16* %3294, align 2, !dbg !314
  store i16 %3295, i16* %3240, align 2, !dbg !315
  br label %3417, !dbg !316

3296:                                             ; preds = %3248
  %3297 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 2, !dbg !317
  store i8 %3164, i8* %3297, align 1, !dbg !318
  %3298 = load i32, i32* %3170, align 4, !dbg !319
  %3299 = and i32 %3298, 1, !dbg !320
  %3300 = icmp eq i32 %3299, 0, !dbg !321
  %3301 = icmp sge i32 %3298, 12, !dbg !322
  %3302 = and i1 %3301, %3300, !dbg !323
  %3303 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3298), !dbg !324
  %3304 = icmp eq i32 %3303, 0, !dbg !325
  br i1 %3304, label %3316, label %3305, !dbg !326

3305:                                             ; preds = %3296
  %3306 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 12, i32 0, !dbg !327
  %3307 = load %struct.BtCursor*, %struct.BtCursor** %3306, align 8, !dbg !328
  %3308 = getelementptr i32, i32* %3177, i32 3, !dbg !510
  %3309 = load i32, i32* %3308, align 4, !dbg !329
  %3310 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3307, i32 %3309, i32 %3303, %struct.sqlite3_value* %3173), !dbg !330
  %3311 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 5, !dbg !331
  %3312 = load i8*, i8** %3311, align 8, !dbg !332
  %3313 = call i32 @sqlite3VdbeSerialGet(i8* %3312, i32 %3298, %struct.sqlite3_value* %3173), !dbg !333
  %3314 = load i16, i16* %3240, align 2, !dbg !334
  %3315 = and i16 %3314, -4097, !dbg !335
  store i16 %3315, i16* %3240, align 2, !dbg !336
  br label %3417, !dbg !337

3316:                                             ; preds = %3296
  %3317 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3298, %struct.sqlite3_value* %3173), !dbg !338
  br label %3417, !dbg !339

3318:                                             ; preds = %3236
  %3319 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 23, i32 3, !dbg !340
  %3320 = load i32, i32* %3319, align 4, !dbg !341
  store i32 %3320, i32* %3170, align 4, !dbg !342
  br label %3239, !dbg !343

3321:                                             ; preds = %3236
  %3322 = load i32, i32* %3184, align 4, !dbg !344
  %3323 = load i32, i32* %3177, align 4, !dbg !345
  %3324 = icmp ult i32 %3322, %3323, !dbg !346
  br i1 %3324, label %3325, label %3406, !dbg !347

3325:                                             ; preds = %3321
  %3326 = load i8*, i8** %3187, align 8, !dbg !348
  %3327 = icmp eq i8* %3326, null, !dbg !349
  br i1 %3327, label %3329, label %3328, !dbg !350

3328:                                             ; preds = %3325
  store i8* %3326, i8** %3169, align 8, !dbg !351
  br label %3329, !dbg !352

3329:                                             ; preds = %3328, %3325, %3209
  %3330 = alloca i32, align 4, !dbg !353
  %3331 = load i16, i16* %3188, align 2, !dbg !354
  %3332 = zext i16 %3331 to i32, !dbg !355
  store i32 %3332, i32* %3330, align 4, !dbg !356
  %3333 = alloca i64, align 8, !dbg !357
  %3334 = getelementptr i32, i32* %3177, i32 %3332, !dbg !358
  %3335 = load i32, i32* %3334, align 4, !dbg !359
  %3336 = zext i32 %3335 to i64, !dbg !360
  store i64 %3336, i64* %3333, align 4, !dbg !361
  %3337 = load i8*, i8** %3169, align 8, !dbg !362
  %3338 = load i32, i32* %3184, align 4, !dbg !363
  %3339 = alloca i8*, align 8, !dbg !364
  %3340 = getelementptr i8, i8* %3337, i32 %3338, !dbg !365
  store i8* %3340, i8** %3339, align 8, !dbg !366
  %3341 = load i32, i32* %3177, align 4, !dbg !367
  %3342 = getelementptr i8, i8* %3337, i32 %3341, !dbg !368
  br label %3343, !dbg !369

3343:                                             ; preds = %3350, %3329
  %3344 = load i32, i32* %3330, align 4, !dbg !370
  %3345 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3172, i32 0, i32 23, i32 %3344, !dbg !371
  %3346 = load i8*, i8** %3339, align 8, !dbg !372
  %3347 = load i8, i8* %3346, align 1, !dbg !373
  %3348 = zext i8 %3347 to i32, !dbg !374
  store i32 %3348, i32* %3170, align 4, !dbg !375
  store i32 %3348, i32* %3345, align 4, !dbg !376
  %3349 = icmp sgt i8 %3347, -1, !dbg !377
  br i1 %3349, label %3373, label %3364, !dbg !378

3350:                                             ; preds = %3364, %3373
  %3351 = load i32, i32* %3330, align 4, !dbg !379
  %3352 = add i32 %3351, 1, !dbg !380
  store i32 %3352, i32* %3330, align 4, !dbg !381
  %3353 = load i64, i64* %3333, align 4, !dbg !382
  %3354 = and i64 4294967295, %3353, !dbg !383
  %3355 = trunc i64 %3354 to i32, !dbg !384
  %3356 = getelementptr i32, i32* %3177, i32 %3352, !dbg !385
  store i32 %3355, i32* %3356, align 4, !dbg !386
  %3357 = load i32, i32* %3330, align 4, !dbg !387
  %3358 = icmp sle i32 %3357, 3, !dbg !388
  %3359 = load i8*, i8** %3339, align 8, !dbg !389
  %3360 = ptrtoint i8* %3359 to i64, !dbg !390
  %3361 = ptrtoint i8* %3342 to i64, !dbg !391
  %3362 = icmp ult i64 %3360, %3361, !dbg !392
  %3363 = and i1 %3358, %3362, !dbg !393
  br i1 %3363, label %3343, label %3382, !dbg !394

3364:                                             ; preds = %3343
  %3365 = load i8*, i8** %3339, align 8, !dbg !395
  %3366 = call i8 @sqlite3GetVarint32(i8* %3365, i32* %3170), !dbg !396
  %3367 = getelementptr i8, i8* %3365, i8 %3366, !dbg !397
  store i8* %3367, i8** %3339, align 8, !dbg !398
  %3368 = load i32, i32* %3170, align 4, !dbg !399
  store i32 %3368, i32* %3345, align 4, !dbg !400
  %3369 = load i64, i64* %3333, align 4, !dbg !401
  %3370 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3368), !dbg !402
  %3371 = zext i32 %3370 to i64, !dbg !403
  %3372 = add i64 %3369, %3371, !dbg !404
  store i64 %3372, i64* %3333, align 4, !dbg !405
  br label %3350, !dbg !406

3373:                                             ; preds = %3343
  %3374 = getelementptr i8, i8* %3346, i32 1, !dbg !407
  store i8* %3374, i8** %3339, align 8, !dbg !408
  %3375 = load i32, i32* %3170, align 4, !dbg !409
  %3376 = trunc i32 %3375 to i8, !dbg !410
  %3377 = getelementptr i8, i8* %4, i8 %3376, !dbg !411
  %3378 = load i8, i8* %3377, align 1, !dbg !412
  %3379 = zext i8 %3378 to i64, !dbg !413
  %3380 = load i64, i64* %3333, align 4, !dbg !414
  %3381 = add i64 %3380, %3379, !dbg !415
  store i64 %3381, i64* %3333, align 4, !dbg !416
  br label %3350, !dbg !417

3382:                                             ; preds = %3350
  %3383 = load i64, i64* %3333, align 4, !dbg !418
  %3384 = load i32, i32* %3185, align 4, !dbg !419
  %3385 = zext i32 %3384 to i64, !dbg !420
  %3386 = icmp uge i64 %3360, %3361, !dbg !421
  %3387 = icmp ugt i64 %3360, %3361, !dbg !422
  %3388 = icmp ne i64 %3383, %3385, !dbg !423
  %3389 = icmp ugt i64 %3383, %3385, !dbg !424
  %3390 = or i1 %3387, %3388, !dbg !425
  %3391 = and i1 %3386, %3390, !dbg !426
  %3392 = or i1 %3391, %3389, !dbg !427
  br i1 %3392, label %3393, label %3397, !dbg !428

3393:                                             ; preds = %3382
  %3394 = load i32, i32* %3177, align 4, !dbg !429
  %3395 = icmp eq i32 %3394, 0, !dbg !430
  br i1 %3395, label %3396, label %3397, !dbg !431

3396:                                             ; preds = %3393
  store i32 0, i32* %3330, align 4, !dbg !432
  store i8* %3342, i8** %3339, align 8, !dbg !433
  br label %3397, !dbg !434

3397:                                             ; preds = %3396, %3393, %3382
  %3398 = load i32, i32* %3330, align 4, !dbg !435
  %3399 = trunc i32 %3398 to i16, !dbg !436
  store i16 %3399, i16* %3188, align 2, !dbg !437
  %3400 = load i8*, i8** %3339, align 8, !dbg !438
  %3401 = ptrtoint i8* %3400 to i64, !dbg !439
  %3402 = load i8*, i8** %3169, align 8, !dbg !440
  %3403 = ptrtoint i8* %3402 to i64, !dbg !441
  %3404 = sub i64 %3401, %3403, !dbg !442
  %3405 = trunc i64 %3404 to i32, !dbg !443
  store i32 %3405, i32* %3184, align 4, !dbg !444
  br label %3407, !dbg !445

3406:                                             ; preds = %3321
  store i32 0, i32* %3170, align 4, !dbg !446
  br label %3407, !dbg !447

3407:                                             ; preds = %3397, %3406
  %3408 = load i16, i16* %3188, align 2, !dbg !448
  %3409 = icmp sle i16 %3408, 3, !dbg !449
  br i1 %3409, label %3410, label %3239, !dbg !450

3410:                                             ; preds = %3407
  %3411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3173, i32 0, i32 1, !dbg !451
  %3412 = load i16, i16* %3411, align 2, !dbg !451
  %3413 = and i16 %3412, 9216, !dbg !451
  %3414 = icmp ne i16 %3413, 0, !dbg !451
  br i1 %3414, label %3415, label %3416, !dbg !451

3415:                                             ; preds = %3410
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3173), !dbg !451
  br label %3417, !dbg !451

3416:                                             ; preds = %3410
  store i16 1, i16* %3411, align 2, !dbg !451
  br label %3417, !dbg !451

3417:                                             ; preds = %3415, %3416, %3286, %3266, %3305, %3316, %3234, %3235
  call void @llvm.stackrestore(i8* %3162), !dbg !452
  br label %3418, !dbg !74

3418:                                             ; preds = %17, %3417
  %3419 = call i8* @llvm.stacksave(), !dbg !453
  %3420 = alloca i32, align 8, !dbg !456
  %3421 = alloca i64, align 8, !dbg !457
  %3422 = alloca i32, align 8, !dbg !458
  %3423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !459
  %3424 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3423, i32 0, i32 1, !dbg !460
  %3425 = load i16, i16* %3424, align 2, !dbg !461
  %3426 = and i16 %3425, 36, !dbg !462
  %3427 = icmp eq i16 %3426, 0, !dbg !463
  br i1 %3427, label %3428, label %3439, !dbg !464

3428:                                             ; preds = %3418
  %3429 = alloca %struct.sqlite3_value, align 8, !dbg !465
  %3430 = load %struct.sqlite3_value, %struct.sqlite3_value* %3423, align 8, !dbg !466
  store %struct.sqlite3_value %3430, %struct.sqlite3_value* %3429, align 8, !dbg !466
  call void @applyAffinity(%struct.sqlite3_value* %3429, i8 67, i8 1), !dbg !467
  %3431 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3429, i32 0, i32 1, !dbg !468
  %3432 = load i16, i16* %3431, align 2, !dbg !469
  %3433 = and i16 %3432, 4, !dbg !470
  %3434 = icmp eq i16 %3433, 0, !dbg !471
  br i1 %3434, label %5705, label %3435, !dbg !472

3435:                                             ; preds = %3428
  %3436 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3429, i32 0, i32 0, !dbg !473
  %3437 = bitcast %union.MemValue* %3436 to i64*, !dbg !474
  %3438 = load i64, i64* %3437, align 4, !dbg !475
  store i64 %3438, i64* %3421, align 4, !dbg !476
  br label %3443, !dbg !477

3439:                                             ; preds = %3418
  %3440 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3423, i32 0, i32 0, !dbg !478
  %3441 = bitcast %union.MemValue* %3440 to i64*, !dbg !479
  %3442 = load i64, i64* %3441, align 4, !dbg !480
  store i64 %3442, i64* %3421, align 4, !dbg !481
  br label %3443, !dbg !482

3443:                                             ; preds = %3439, %3435
  %3444 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !483
  %3445 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3444, align 8, !dbg !484
  %3446 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 12, i32 0, !dbg !485
  %3447 = load %struct.BtCursor*, %struct.BtCursor** %3446, align 8, !dbg !486
  store i32 0, i32* %3420, align 4, !dbg !487
  %3448 = load i64, i64* %3421, align 4, !dbg !488
  %3449 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %3447, %struct.UnpackedRecord* null, i64 %3448, i32 0, i32* %3420), !dbg !489
  store i32 %3449, i32* %3422, align 4, !dbg !490
  %3450 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 18, !dbg !491
  store i64 %3448, i64* %3450, align 4, !dbg !492
  %3451 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 2, !dbg !493
  store i8 0, i8* %3451, align 1, !dbg !494
  %3452 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 9, !dbg !495
  store i32 0, i32* %3452, align 4, !dbg !496
  %3453 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 3, !dbg !497
  store i8 0, i8* %3453, align 1, !dbg !498
  %3454 = load i32, i32* %3420, align 4, !dbg !499
  %3455 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3445, i32 0, i32 10, !dbg !500
  store i32 %3454, i32* %3455, align 4, !dbg !501
  %3456 = icmp ne i32 %3454, 0, !dbg !502
  br i1 %3456, label %3457, label %3458, !dbg !503

3457:                                             ; preds = %3443
  call void @llvm.stackrestore(i8* %3419), !dbg !504
  br label %5705, !dbg !505

3458:                                             ; preds = %3443
  %3459 = load i32, i32* %3422, align 4, !dbg !506
  call void @llvm.stackrestore(i8* %3419), !dbg !507
  br label %3460, !dbg !508

3460:                                             ; preds = %17, %3458
  %3461 = call i8* @llvm.stacksave(), !dbg !162
  %3462 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %3463 = load i8, i8* %3462, align 1, !dbg !166
  %3464 = alloca i32, align 4, !dbg !167
  store i32 3, i32* %3464, align 4, !dbg !168
  %3465 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !169
  %3466 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %3467 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3465, align 8, !dbg !171
  store %struct.VdbeCursor* %3467, %struct.VdbeCursor** %3466, align 8, !dbg !172
  %3468 = alloca i8*, align 8, !dbg !173
  %3469 = alloca i32, align 4, !dbg !174
  %3470 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3466, i32* %3464), !dbg !175
  %3471 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3466, align 8, !dbg !176
  %3472 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !177
  %3473 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 16, !dbg !178
  %3474 = load i16, i16* %3473, align 2, !dbg !179
  %3475 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 19, !dbg !180
  %3476 = load i32*, i32** %3475, align 8, !dbg !181
  %3477 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 0, !dbg !182
  %3478 = load i8, i8* %3477, align 1, !dbg !183
  %3479 = icmp ne i8 %3478, 3, !dbg !184
  %3480 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 2, !dbg !185
  %3481 = load i8, i8* %3480, align 1, !dbg !186
  %3482 = icmp ne i8 %3481, 0, !dbg !187
  %3483 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 14, !dbg !188
  %3484 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 21, !dbg !189
  %3485 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 22, !dbg !190
  %3486 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 20, !dbg !191
  %3487 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 17, !dbg !192
  %3488 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 9, !dbg !193
  %3489 = load i32, i32* %3488, align 4, !dbg !194
  %3490 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %3491 = load i32, i32* %3490, align 4, !dbg !196
  %3492 = icmp ne i32 %3489, %3491, !dbg !197
  br i1 %3492, label %3493, label %3535, !dbg !198

3493:                                             ; preds = %3460
  br i1 %3482, label %3515, label %3510, !dbg !199

3494:                                             ; preds = %3510, %3517
  %3495 = load i32, i32* %3490, align 4, !dbg !200
  store i32 %3495, i32* %3488, align 4, !dbg !201
  %3496 = load i8*, i8** %3486, align 8, !dbg !202
  %3497 = load i8, i8* %3496, align 1, !dbg !203
  %3498 = icmp sgt i8 %3497, -1, !dbg !206
  br i1 %3498, label %3499, label %3501, !dbg !207

3499:                                             ; preds = %3494
  %3500 = zext i8 %3497 to i32, !dbg !208
  store i32 %3500, i32* %3476, align 4, !dbg !209
  store i32 1, i32* %3483, align 4, !dbg !210
  br label %3504, !dbg !211

3501:                                             ; preds = %3494
  %3502 = call i8 @sqlite3GetVarint32(i8* %3496, i32* %3476), !dbg !212
  %3503 = zext i8 %3502 to i32, !dbg !213
  store i32 %3503, i32* %3483, align 4, !dbg !214
  br label %3504, !dbg !215

3504:                                             ; preds = %3501, %3499
  store i16 0, i16* %3487, align 2, !dbg !216
  %3505 = load i32, i32* %3485, align 4, !dbg !217
  %3506 = load i32, i32* %3476, align 4, !dbg !218
  %3507 = icmp ult i32 %3505, %3506, !dbg !219
  br i1 %3507, label %3509, label %3508, !dbg !220

3508:                                             ; preds = %3504
  store i8* %3496, i8** %3468, align 8, !dbg !221
  br label %3628, !dbg !222

3509:                                             ; preds = %3504
  store i8* null, i8** %3486, align 8, !dbg !223
  store i32 0, i32* %3485, align 4, !dbg !224
  br label %3535, !dbg !225

3510:                                             ; preds = %3493
  %3511 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 12, i32 0, !dbg !226
  %3512 = load %struct.BtCursor*, %struct.BtCursor** %3511, align 8, !dbg !227
  %3513 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3512), !dbg !228
  store i32 %3513, i32* %3484, align 4, !dbg !229
  %3514 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3512, i32* %3485), !dbg !230
  store i8* %3514, i8** %3486, align 8, !dbg !231
  br label %3494, !dbg !232

3515:                                             ; preds = %3493
  %3516 = icmp eq i8 %3478, 3, !dbg !233
  br i1 %3516, label %3517, label %3528, !dbg !234

3517:                                             ; preds = %3515
  %3518 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 10, !dbg !235
  %3519 = load i32, i32* %3518, align 4, !dbg !236
  %3520 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3519, !dbg !237
  %3521 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3520, i32 0, i32 1, !dbg !238
  %3522 = load i16, i16* %3521, align 2, !dbg !239
  %3523 = and i16 %3522, 16, !dbg !240
  %3524 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3520, i32 0, i32 4, !dbg !241
  %3525 = load i32, i32* %3524, align 4, !dbg !242
  store i32 %3525, i32* %3484, align 4, !dbg !243
  store i32 %3525, i32* %3485, align 4, !dbg !244
  %3526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3520, i32 0, i32 5, !dbg !245
  %3527 = load i8*, i8** %3526, align 8, !dbg !246
  store i8* %3527, i8** %3486, align 8, !dbg !247
  br label %3494, !dbg !248

3528:                                             ; preds = %3515
  %3529 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 1, !dbg !249
  %3530 = load i16, i16* %3529, align 2, !dbg !249
  %3531 = and i16 %3530, 9216, !dbg !249
  %3532 = icmp ne i16 %3531, 0, !dbg !249
  br i1 %3532, label %3533, label %3534, !dbg !249

3533:                                             ; preds = %3528
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3472), !dbg !249
  br label %3716, !dbg !249

3534:                                             ; preds = %3528
  store i16 1, i16* %3529, align 2, !dbg !249
  br label %3716, !dbg !249

3535:                                             ; preds = %3509, %3460
  %3536 = load i16, i16* %3487, align 2, !dbg !250
  %3537 = icmp ule i16 %3536, 3, !dbg !251
  br i1 %3537, label %3620, label %3617, !dbg !252

3538:                                             ; preds = %3617, %3706
  %3539 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 1, !dbg !253
  %3540 = load i16, i16* %3539, align 2, !dbg !254
  %3541 = and i16 9216, %3540, !dbg !255
  %3542 = icmp eq i16 0, %3541, !dbg !256
  br i1 %3542, label %3543, label %3547, !dbg !257

3543:                                             ; preds = %3538
  %3544 = icmp ne i16 %3541, 0, !dbg !258
  br i1 %3544, label %3545, label %3546, !dbg !258

3545:                                             ; preds = %3543
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3472), !dbg !258
  br label %3547, !dbg !258

3546:                                             ; preds = %3543
  store i16 1, i16* %3539, align 2, !dbg !258
  br label %3547, !dbg !258

3547:                                             ; preds = %3545, %3546, %3538
  %3548 = load i32, i32* %3469, align 4, !dbg !259
  %3549 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 23, i32 3, !dbg !260
  %3550 = load i32, i32* %3549, align 4, !dbg !261
  %3551 = load i32, i32* %3485, align 4, !dbg !262
  %3552 = getelementptr i32, i32* %3476, i32 4, !dbg !263
  %3553 = load i32, i32* %3552, align 4, !dbg !264
  %3554 = icmp sge i32 %3551, %3553, !dbg !265
  br i1 %3554, label %3555, label %3595, !dbg !266

3555:                                             ; preds = %3547
  %3556 = load i8*, i8** %3486, align 8, !dbg !267
  %3557 = ptrtoint i8* %3556 to i64, !dbg !268
  %3558 = getelementptr i32, i32* %3476, i32 3, !dbg !509
  %3559 = load i32, i32* %3558, align 4, !dbg !269
  %3560 = zext i32 %3559 to i64, !dbg !270
  %3561 = add i64 %3557, %3560, !dbg !271
  %3562 = inttoptr i64 %3561 to i8*, !dbg !272
  store i8* %3562, i8** %3468, align 8, !dbg !273
  %3563 = load i32, i32* %3469, align 4, !dbg !274
  %3564 = icmp ult i32 %3563, 12, !dbg !275
  br i1 %3564, label %3565, label %3567, !dbg !276

3565:                                             ; preds = %3555
  %3566 = call i32 @sqlite3VdbeSerialGet(i8* %3562, i32 %3563, %struct.sqlite3_value* %3472), !dbg !277
  br label %3716, !dbg !278

3567:                                             ; preds = %3555
  %3568 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %3568, align 2, !dbg !280
  %3569 = getelementptr i16, i16* %3568, i32 1, !dbg !281
  store i16 514, i16* %3569, align 2, !dbg !282
  %3570 = load i32, i32* %3469, align 4, !dbg !283
  %3571 = sub i32 %3570, 12, !dbg !284
  %3572 = lshr i32 %3571, 1, !dbg !285
  %3573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 4, !dbg !286
  store i32 %3572, i32* %3573, align 4, !dbg !287
  %3574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 2, !dbg !288
  store i8 %3463, i8* %3574, align 1, !dbg !289
  %3575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 5, !dbg !290
  %3576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 7, !dbg !291
  %3577 = load i32, i32* %3576, align 4, !dbg !292
  %3578 = add i32 %3572, 2, !dbg !293
  %3579 = icmp slt i32 %3577, %3578, !dbg !294
  br i1 %3579, label %3580, label %3582, !dbg !295

3580:                                             ; preds = %3567
  store i16 1, i16* %3539, align 2, !dbg !296
  %3581 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3472, i32 %3578, i32 0), !dbg !297
  br label %3585, !dbg !298

3582:                                             ; preds = %3567
  %3583 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 6, !dbg !299
  %3584 = load i8*, i8** %3583, align 8, !dbg !300
  store i8* %3584, i8** %3575, align 8, !dbg !301
  br label %3585, !dbg !302

3585:                                             ; preds = %3582, %3580
  %3586 = zext i32 %3572 to i64, !dbg !303
  %3587 = load i8*, i8** %3575, align 8, !dbg !304
  %3588 = load i8*, i8** %3468, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3587, i8* %3588, i64 %3586, i1 false), !dbg !306
  %3589 = getelementptr i8, i8* %3587, i32 %3572, !dbg !307
  store i8 0, i8* %3589, align 1, !dbg !308
  %3590 = add i32 %3572, 1, !dbg !309
  %3591 = getelementptr i8, i8* %3587, i32 %3590, !dbg !310
  store i8 0, i8* %3591, align 1, !dbg !311
  %3592 = and i32 %3570, 1, !dbg !312
  %3593 = getelementptr i16, i16* %3568, i32 %3592, !dbg !313
  %3594 = load i16, i16* %3593, align 2, !dbg !314
  store i16 %3594, i16* %3539, align 2, !dbg !315
  br label %3716, !dbg !316

3595:                                             ; preds = %3547
  %3596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 2, !dbg !317
  store i8 %3463, i8* %3596, align 1, !dbg !318
  %3597 = load i32, i32* %3469, align 4, !dbg !319
  %3598 = and i32 %3597, 1, !dbg !320
  %3599 = icmp eq i32 %3598, 0, !dbg !321
  %3600 = icmp sge i32 %3597, 12, !dbg !322
  %3601 = and i1 %3600, %3599, !dbg !323
  %3602 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3597), !dbg !324
  %3603 = icmp eq i32 %3602, 0, !dbg !325
  br i1 %3603, label %3615, label %3604, !dbg !326

3604:                                             ; preds = %3595
  %3605 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 12, i32 0, !dbg !327
  %3606 = load %struct.BtCursor*, %struct.BtCursor** %3605, align 8, !dbg !328
  %3607 = getelementptr i32, i32* %3476, i32 3, !dbg !510
  %3608 = load i32, i32* %3607, align 4, !dbg !329
  %3609 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3606, i32 %3608, i32 %3602, %struct.sqlite3_value* %3472), !dbg !330
  %3610 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 5, !dbg !331
  %3611 = load i8*, i8** %3610, align 8, !dbg !332
  %3612 = call i32 @sqlite3VdbeSerialGet(i8* %3611, i32 %3597, %struct.sqlite3_value* %3472), !dbg !333
  %3613 = load i16, i16* %3539, align 2, !dbg !334
  %3614 = and i16 %3613, -4097, !dbg !335
  store i16 %3614, i16* %3539, align 2, !dbg !336
  br label %3716, !dbg !337

3615:                                             ; preds = %3595
  %3616 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3597, %struct.sqlite3_value* %3472), !dbg !338
  br label %3716, !dbg !339

3617:                                             ; preds = %3535
  %3618 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 23, i32 3, !dbg !340
  %3619 = load i32, i32* %3618, align 4, !dbg !341
  store i32 %3619, i32* %3469, align 4, !dbg !342
  br label %3538, !dbg !343

3620:                                             ; preds = %3535
  %3621 = load i32, i32* %3483, align 4, !dbg !344
  %3622 = load i32, i32* %3476, align 4, !dbg !345
  %3623 = icmp ult i32 %3621, %3622, !dbg !346
  br i1 %3623, label %3624, label %3705, !dbg !347

3624:                                             ; preds = %3620
  %3625 = load i8*, i8** %3486, align 8, !dbg !348
  %3626 = icmp eq i8* %3625, null, !dbg !349
  br i1 %3626, label %3628, label %3627, !dbg !350

3627:                                             ; preds = %3624
  store i8* %3625, i8** %3468, align 8, !dbg !351
  br label %3628, !dbg !352

3628:                                             ; preds = %3627, %3624, %3508
  %3629 = alloca i32, align 4, !dbg !353
  %3630 = load i16, i16* %3487, align 2, !dbg !354
  %3631 = zext i16 %3630 to i32, !dbg !355
  store i32 %3631, i32* %3629, align 4, !dbg !356
  %3632 = alloca i64, align 8, !dbg !357
  %3633 = getelementptr i32, i32* %3476, i32 %3631, !dbg !358
  %3634 = load i32, i32* %3633, align 4, !dbg !359
  %3635 = zext i32 %3634 to i64, !dbg !360
  store i64 %3635, i64* %3632, align 4, !dbg !361
  %3636 = load i8*, i8** %3468, align 8, !dbg !362
  %3637 = load i32, i32* %3483, align 4, !dbg !363
  %3638 = alloca i8*, align 8, !dbg !364
  %3639 = getelementptr i8, i8* %3636, i32 %3637, !dbg !365
  store i8* %3639, i8** %3638, align 8, !dbg !366
  %3640 = load i32, i32* %3476, align 4, !dbg !367
  %3641 = getelementptr i8, i8* %3636, i32 %3640, !dbg !368
  br label %3642, !dbg !369

3642:                                             ; preds = %3649, %3628
  %3643 = load i32, i32* %3629, align 4, !dbg !370
  %3644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3471, i32 0, i32 23, i32 %3643, !dbg !371
  %3645 = load i8*, i8** %3638, align 8, !dbg !372
  %3646 = load i8, i8* %3645, align 1, !dbg !373
  %3647 = zext i8 %3646 to i32, !dbg !374
  store i32 %3647, i32* %3469, align 4, !dbg !375
  store i32 %3647, i32* %3644, align 4, !dbg !376
  %3648 = icmp sgt i8 %3646, -1, !dbg !377
  br i1 %3648, label %3672, label %3663, !dbg !378

3649:                                             ; preds = %3663, %3672
  %3650 = load i32, i32* %3629, align 4, !dbg !379
  %3651 = add i32 %3650, 1, !dbg !380
  store i32 %3651, i32* %3629, align 4, !dbg !381
  %3652 = load i64, i64* %3632, align 4, !dbg !382
  %3653 = and i64 4294967295, %3652, !dbg !383
  %3654 = trunc i64 %3653 to i32, !dbg !384
  %3655 = getelementptr i32, i32* %3476, i32 %3651, !dbg !385
  store i32 %3654, i32* %3655, align 4, !dbg !386
  %3656 = load i32, i32* %3629, align 4, !dbg !387
  %3657 = icmp sle i32 %3656, 3, !dbg !388
  %3658 = load i8*, i8** %3638, align 8, !dbg !389
  %3659 = ptrtoint i8* %3658 to i64, !dbg !390
  %3660 = ptrtoint i8* %3641 to i64, !dbg !391
  %3661 = icmp ult i64 %3659, %3660, !dbg !392
  %3662 = and i1 %3657, %3661, !dbg !393
  br i1 %3662, label %3642, label %3681, !dbg !394

3663:                                             ; preds = %3642
  %3664 = load i8*, i8** %3638, align 8, !dbg !395
  %3665 = call i8 @sqlite3GetVarint32(i8* %3664, i32* %3469), !dbg !396
  %3666 = getelementptr i8, i8* %3664, i8 %3665, !dbg !397
  store i8* %3666, i8** %3638, align 8, !dbg !398
  %3667 = load i32, i32* %3469, align 4, !dbg !399
  store i32 %3667, i32* %3644, align 4, !dbg !400
  %3668 = load i64, i64* %3632, align 4, !dbg !401
  %3669 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3667), !dbg !402
  %3670 = zext i32 %3669 to i64, !dbg !403
  %3671 = add i64 %3668, %3670, !dbg !404
  store i64 %3671, i64* %3632, align 4, !dbg !405
  br label %3649, !dbg !406

3672:                                             ; preds = %3642
  %3673 = getelementptr i8, i8* %3645, i32 1, !dbg !407
  store i8* %3673, i8** %3638, align 8, !dbg !408
  %3674 = load i32, i32* %3469, align 4, !dbg !409
  %3675 = trunc i32 %3674 to i8, !dbg !410
  %3676 = getelementptr i8, i8* %4, i8 %3675, !dbg !411
  %3677 = load i8, i8* %3676, align 1, !dbg !412
  %3678 = zext i8 %3677 to i64, !dbg !413
  %3679 = load i64, i64* %3632, align 4, !dbg !414
  %3680 = add i64 %3679, %3678, !dbg !415
  store i64 %3680, i64* %3632, align 4, !dbg !416
  br label %3649, !dbg !417

3681:                                             ; preds = %3649
  %3682 = load i64, i64* %3632, align 4, !dbg !418
  %3683 = load i32, i32* %3484, align 4, !dbg !419
  %3684 = zext i32 %3683 to i64, !dbg !420
  %3685 = icmp uge i64 %3659, %3660, !dbg !421
  %3686 = icmp ugt i64 %3659, %3660, !dbg !422
  %3687 = icmp ne i64 %3682, %3684, !dbg !423
  %3688 = icmp ugt i64 %3682, %3684, !dbg !424
  %3689 = or i1 %3686, %3687, !dbg !425
  %3690 = and i1 %3685, %3689, !dbg !426
  %3691 = or i1 %3690, %3688, !dbg !427
  br i1 %3691, label %3692, label %3696, !dbg !428

3692:                                             ; preds = %3681
  %3693 = load i32, i32* %3476, align 4, !dbg !429
  %3694 = icmp eq i32 %3693, 0, !dbg !430
  br i1 %3694, label %3695, label %3696, !dbg !431

3695:                                             ; preds = %3692
  store i32 0, i32* %3629, align 4, !dbg !432
  store i8* %3641, i8** %3638, align 8, !dbg !433
  br label %3696, !dbg !434

3696:                                             ; preds = %3695, %3692, %3681
  %3697 = load i32, i32* %3629, align 4, !dbg !435
  %3698 = trunc i32 %3697 to i16, !dbg !436
  store i16 %3698, i16* %3487, align 2, !dbg !437
  %3699 = load i8*, i8** %3638, align 8, !dbg !438
  %3700 = ptrtoint i8* %3699 to i64, !dbg !439
  %3701 = load i8*, i8** %3468, align 8, !dbg !440
  %3702 = ptrtoint i8* %3701 to i64, !dbg !441
  %3703 = sub i64 %3700, %3702, !dbg !442
  %3704 = trunc i64 %3703 to i32, !dbg !443
  store i32 %3704, i32* %3483, align 4, !dbg !444
  br label %3706, !dbg !445

3705:                                             ; preds = %3620
  store i32 0, i32* %3469, align 4, !dbg !446
  br label %3706, !dbg !447

3706:                                             ; preds = %3696, %3705
  %3707 = load i16, i16* %3487, align 2, !dbg !448
  %3708 = icmp sle i16 %3707, 3, !dbg !449
  br i1 %3708, label %3709, label %3538, !dbg !450

3709:                                             ; preds = %3706
  %3710 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3472, i32 0, i32 1, !dbg !451
  %3711 = load i16, i16* %3710, align 2, !dbg !451
  %3712 = and i16 %3711, 9216, !dbg !451
  %3713 = icmp ne i16 %3712, 0, !dbg !451
  br i1 %3713, label %3714, label %3715, !dbg !451

3714:                                             ; preds = %3709
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3472), !dbg !451
  br label %3716, !dbg !451

3715:                                             ; preds = %3709
  store i16 1, i16* %3710, align 2, !dbg !451
  br label %3716, !dbg !451

3716:                                             ; preds = %3714, %3715, %3585, %3565, %3604, %3615, %3533, %3534
  call void @llvm.stackrestore(i8* %3461), !dbg !452
  br label %3717, !dbg !74

3717:                                             ; preds = %17, %3716
  %3718 = call i8* @llvm.stacksave(), !dbg !704
  %3719 = alloca i64, align 8, !dbg !707
  %3720 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 39, !dbg !708
  %3721 = call i8* @llvm.stacksave(), !dbg !709
  %3722 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3720, i32 0, i32 4, !dbg !79
  %3723 = load i32, i32* %3722, align 4, !dbg !82
  %3724 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3723, !dbg !83
  %3725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3724, i32 0, i32 1, !dbg !709
  %3726 = load i16, i16* %3725, align 2, !dbg !709
  %3727 = and i16 %3726, 9216, !dbg !709
  %3728 = icmp ne i16 %3727, 0, !dbg !709
  %3729 = alloca %struct.sqlite3_value*, align 8, !dbg !709
  br i1 %3728, label %3730, label %3732, !dbg !709

3730:                                             ; preds = %3717
  %3731 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %3724), !dbg !709
  store %struct.sqlite3_value* %3731, %struct.sqlite3_value** %3729, align 8, !dbg !709
  br label %3733, !dbg !709

3732:                                             ; preds = %3717
  store i16 4, i16* %3725, align 2, !dbg !709
  store %struct.sqlite3_value* %3724, %struct.sqlite3_value** %3729, align 8, !dbg !709
  br label %3733, !dbg !709

3733:                                             ; preds = %3732, %3730
  %3734 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3729, align 8, !dbg !709
  call void @llvm.stackrestore(i8* %3721), !dbg !709
  %3735 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !710
  %3736 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3735, align 8, !dbg !711
  %3737 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3736, i32 0, i32 2, !dbg !712
  %3738 = load i8, i8* %3737, align 1, !dbg !713
  %3739 = icmp ne i8 %3738, 0, !dbg !714
  br i1 %3739, label %3740, label %3742, !dbg !715

3740:                                             ; preds = %3733
  %3741 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3734, i32 0, i32 1, !dbg !716
  store i16 1, i16* %3741, align 2, !dbg !717
  br label %3767, !dbg !718

3742:                                             ; preds = %3733
  %3743 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3736, i32 0, i32 3, !dbg !719
  %3744 = load i8, i8* %3743, align 1, !dbg !720
  %3745 = icmp ne i8 %3744, 0, !dbg !721
  br i1 %3745, label %3746, label %3749, !dbg !722

3746:                                             ; preds = %3742
  %3747 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3736, i32 0, i32 18, !dbg !723
  %3748 = load i64, i64* %3747, align 4, !dbg !724
  store i64 %3748, i64* %3719, align 4, !dbg !725
  br label %3763, !dbg !726

3749:                                             ; preds = %3742
  %3750 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3736, i32 0, i32 0, !dbg !727
  %3751 = load i8, i8* %3750, align 1, !dbg !728
  %3752 = icmp eq i8 %3751, 2, !dbg !729
  br i1 %3752, label %3763, label %3753, !dbg !730

3753:                                             ; preds = %3749
  %3754 = call i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor* %3736), !dbg !731
  %3755 = load i8, i8* %3737, align 1, !dbg !732
  %3756 = icmp ne i8 %3755, 0, !dbg !733
  br i1 %3756, label %3757, label %3759, !dbg !734

3757:                                             ; preds = %3753
  %3758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3734, i32 0, i32 1, !dbg !735
  store i16 1, i16* %3758, align 2, !dbg !736
  br label %3767, !dbg !737

3759:                                             ; preds = %3753
  %3760 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3736, i32 0, i32 12, i32 0, !dbg !738
  %3761 = load %struct.BtCursor*, %struct.BtCursor** %3760, align 8, !dbg !739
  %3762 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %3761), !dbg !740
  store i64 %3762, i64* %3719, align 4, !dbg !741
  br label %3763, !dbg !742

3763:                                             ; preds = %3749, %3759, %3746
  %3764 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3734, i32 0, i32 0, i32 0, !dbg !743
  %3765 = bitcast double* %3764 to i64*, !dbg !744
  %3766 = load i64, i64* %3719, align 4, !dbg !745
  store i64 %3766, i64* %3765, align 4, !dbg !746
  br label %3767, !dbg !747

3767:                                             ; preds = %3757, %3763, %3740
  call void @llvm.stackrestore(i8* %3718), !dbg !748
  br label %3768, !dbg !74

3768:                                             ; preds = %17, %3767
  %3769 = call i8* @llvm.stacksave(), !dbg !593
  %3770 = alloca i32, align 8, !dbg !596
  %3771 = alloca i32, align 8, !dbg !597
  %3772 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !598
  %3773 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !599
  %3774 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 1, !dbg !600
  %3775 = load i16, i16* %3774, align 2, !dbg !601
  %3776 = alloca i16, align 8, !dbg !602
  store i16 %3775, i16* %3776, align 2, !dbg !603
  %3777 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 1, !dbg !604
  %3778 = load i16, i16* %3777, align 2, !dbg !605
  %3779 = alloca i16, align 8, !dbg !606
  store i16 %3778, i16* %3779, align 2, !dbg !607
  %3780 = or i16 %3775, %3778, !dbg !608
  %3781 = and i16 %3780, 1, !dbg !609
  %3782 = icmp ne i16 %3781, 0, !dbg !610
  br i1 %3782, label %3783, label %3784, !dbg !611

3783:                                             ; preds = %3768
  call void @llvm.stackrestore(i8* %3769), !dbg !612
  br label %5705, !dbg !613

3784:                                             ; preds = %3768
  %3785 = and i16 %3780, 2, !dbg !656
  %3786 = icmp ne i16 %3785, 0, !dbg !657
  br i1 %3786, label %3787, label %3844, !dbg !658

3787:                                             ; preds = %3784
  %3788 = and i16 %3775, 46, !dbg !659
  %3789 = icmp eq i16 %3788, 2, !dbg !660
  br i1 %3789, label %3790, label %3816, !dbg !661

3790:                                             ; preds = %3787
  %3791 = call i8* @llvm.stacksave(), !dbg !662
  %3792 = alloca double, align 8, !dbg !663
  %3793 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 0, i32 0, !dbg !662
  %3794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 2, !dbg !662
  %3795 = load i8, i8* %3794, align 1, !dbg !662
  %3796 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 5, !dbg !662
  %3797 = load i8*, i8** %3796, align 8, !dbg !662
  %3798 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 4, !dbg !662
  %3799 = load i32, i32* %3798, align 4, !dbg !662
  %3800 = call i32 @sqlite3AtoF(i8* %3797, double* %3792, i32 %3799, i8 %3795), !dbg !662
  %3801 = icmp sle i32 %3800, 0, !dbg !662
  br i1 %3801, label %3814, label %3802, !dbg !662

3802:                                             ; preds = %3790
  %3803 = icmp eq i32 %3800, 1, !dbg !662
  %3804 = load double, double* %3792, align 8, !dbg !662
  br i1 %3803, label %3805, label %3808, !dbg !662

3805:                                             ; preds = %3802
  %3806 = load i16, i16* %3774, align 2, !dbg !662
  %3807 = or i16 %3806, 4, !dbg !662
  store i16 %3807, i16* %3774, align 2, !dbg !662
  br label %3811, !dbg !662

3808:                                             ; preds = %3802
  store double %3804, double* %3793, align 8, !dbg !662
  %3809 = load i16, i16* %3774, align 2, !dbg !662
  %3810 = or i16 %3809, 8, !dbg !662
  store i16 %3810, i16* %3774, align 2, !dbg !662
  br label %3811, !dbg !662

3811:                                             ; preds = %3808, %3805
  %3812 = load i16, i16* %3774, align 2, !dbg !662
  %3813 = and i16 %3812, -3, !dbg !662
  store i16 %3813, i16* %3774, align 2, !dbg !662
  br label %3814, !dbg !662

3814:                                             ; preds = %3811, %3790
  call void @llvm.stackrestore(i8* %3791), !dbg !662
  %3815 = load i16, i16* %3777, align 2, !dbg !666
  store i16 %3815, i16* %3779, align 2, !dbg !667
  br label %3816, !dbg !668

3816:                                             ; preds = %3814, %3787
  %3817 = and i16 %3778, 46, !dbg !669
  %3818 = icmp eq i16 %3817, 2, !dbg !670
  br i1 %3818, label %3819, label %3844, !dbg !671

3819:                                             ; preds = %3816
  %3820 = call i8* @llvm.stacksave(), !dbg !672
  %3821 = alloca double, align 8, !dbg !663
  %3822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 0, i32 0, !dbg !672
  %3823 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 2, !dbg !672
  %3824 = load i8, i8* %3823, align 1, !dbg !672
  %3825 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 5, !dbg !672
  %3826 = load i8*, i8** %3825, align 8, !dbg !672
  %3827 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 4, !dbg !672
  %3828 = load i32, i32* %3827, align 4, !dbg !672
  %3829 = call i32 @sqlite3AtoF(i8* %3826, double* %3821, i32 %3828, i8 %3824), !dbg !672
  %3830 = icmp sle i32 %3829, 0, !dbg !672
  br i1 %3830, label %3843, label %3831, !dbg !672

3831:                                             ; preds = %3819
  %3832 = icmp eq i32 %3829, 1, !dbg !672
  %3833 = load double, double* %3821, align 8, !dbg !672
  br i1 %3832, label %3834, label %3837, !dbg !672

3834:                                             ; preds = %3831
  %3835 = load i16, i16* %3777, align 2, !dbg !672
  %3836 = or i16 %3835, 4, !dbg !672
  store i16 %3836, i16* %3777, align 2, !dbg !672
  br label %3840, !dbg !672

3837:                                             ; preds = %3831
  store double %3833, double* %3822, align 8, !dbg !672
  %3838 = load i16, i16* %3777, align 2, !dbg !672
  %3839 = or i16 %3838, 8, !dbg !672
  store i16 %3839, i16* %3777, align 2, !dbg !672
  br label %3840, !dbg !672

3840:                                             ; preds = %3837, %3834
  %3841 = load i16, i16* %3777, align 2, !dbg !672
  %3842 = and i16 %3841, -3, !dbg !672
  store i16 %3842, i16* %3777, align 2, !dbg !672
  br label %3843, !dbg !672

3843:                                             ; preds = %3840, %3819
  call void @llvm.stackrestore(i8* %3820), !dbg !672
  br label %3844, !dbg !673

3844:                                             ; preds = %3816, %3843, %3784
  %3845 = load i16, i16* %3774, align 2, !dbg !674
  %3846 = load i16, i16* %3777, align 2, !dbg !675
  %3847 = and i16 %3845, %3846, !dbg !676
  %3848 = and i16 %3847, 4, !dbg !677
  %3849 = icmp ne i16 %3848, 0, !dbg !678
  br i1 %3849, label %3850, label %3863, !dbg !679

3850:                                             ; preds = %3844
  %3851 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3772, i32 0, i32 0, !dbg !680
  %3852 = bitcast %union.MemValue* %3851 to i64*, !dbg !681
  %3853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3773, i32 0, i32 0, !dbg !682
  %3854 = bitcast %union.MemValue* %3853 to i64*, !dbg !683
  %3855 = load i64, i64* %3852, align 4, !dbg !684
  %3856 = load i64, i64* %3854, align 4, !dbg !685
  %3857 = icmp sgt i64 %3856, %3855, !dbg !686
  br i1 %3857, label %3858, label %3859, !dbg !687

3858:                                             ; preds = %3850
  store i32 1, i32* %3770, align 4, !dbg !688
  br label %3869, !dbg !689

3859:                                             ; preds = %3850
  %3860 = icmp slt i64 %3856, %3855, !dbg !690
  br i1 %3860, label %3861, label %3862, !dbg !691

3861:                                             ; preds = %3859
  store i32 -1, i32* %3770, align 4, !dbg !692
  br label %3869, !dbg !693

3862:                                             ; preds = %3859
  store i32 0, i32* %3770, align 4, !dbg !694
  br label %3869, !dbg !695

3863:                                             ; preds = %3844
  %3864 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 40, !dbg !638
  %3865 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3864, i32 0, i32 6, !dbg !639
  %3866 = bitcast %union.p4union* %3865 to %struct.CollSeq**, !dbg !640
  %3867 = load %struct.CollSeq*, %struct.CollSeq** %3866, align 8, !dbg !641
  %3868 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %3773, %struct.sqlite3_value* %3772, %struct.CollSeq* %3867), !dbg !642
  store i32 %3868, i32* %3770, align 4, !dbg !643
  br label %3869, !dbg !696

3869:                                             ; preds = %3861, %3862, %3863, %3858
  %3870 = load i32, i32* %3770, align 4, !dbg !697
  %3871 = icmp slt i32 %3870, 0, !dbg !644
  br i1 %3871, label %3872, label %3873, !dbg !645

3872:                                             ; preds = %3869
  store i32 1, i32* %3771, align 4, !dbg !646
  br label %3877, !dbg !647

3873:                                             ; preds = %3869
  %3874 = icmp eq i32 %3870, 0, !dbg !698
  br i1 %3874, label %3875, label %3876, !dbg !699

3875:                                             ; preds = %3873
  store i32 0, i32* %3771, align 4, !dbg !700
  br label %3877, !dbg !701

3876:                                             ; preds = %3873
  store i32 1, i32* %3771, align 4, !dbg !702
  br label %3877, !dbg !703

3877:                                             ; preds = %3876, %3875, %3872
  store i16 %3778, i16* %3779, align 2, !dbg !649
  store i16 %3775, i16* %3776, align 2, !dbg !650
  %3878 = load i32, i32* %3771, align 4, !dbg !651
  %3879 = icmp ne i32 %3878, 0, !dbg !652
  call void @llvm.stackrestore(i8* %3769), !dbg !653
  br i1 %3879, label %5705, label %3880, !dbg !654

3880:                                             ; preds = %17, %3877
  %3881 = call i8* @llvm.stacksave(), !dbg !162
  %3882 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %3883 = load i8, i8* %3882, align 1, !dbg !166
  %3884 = alloca i32, align 4, !dbg !167
  store i32 4, i32* %3884, align 4, !dbg !168
  %3885 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !169
  %3886 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %3887 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3885, align 8, !dbg !171
  store %struct.VdbeCursor* %3887, %struct.VdbeCursor** %3886, align 8, !dbg !172
  %3888 = alloca i8*, align 8, !dbg !173
  %3889 = alloca i32, align 4, !dbg !174
  %3890 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3886, i32* %3884), !dbg !175
  %3891 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3886, align 8, !dbg !176
  %3892 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !177
  %3893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 16, !dbg !178
  %3894 = load i16, i16* %3893, align 2, !dbg !179
  %3895 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 19, !dbg !180
  %3896 = load i32*, i32** %3895, align 8, !dbg !181
  %3897 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 0, !dbg !182
  %3898 = load i8, i8* %3897, align 1, !dbg !183
  %3899 = icmp ne i8 %3898, 3, !dbg !184
  %3900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 2, !dbg !185
  %3901 = load i8, i8* %3900, align 1, !dbg !186
  %3902 = icmp ne i8 %3901, 0, !dbg !187
  %3903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 14, !dbg !188
  %3904 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 21, !dbg !189
  %3905 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 22, !dbg !190
  %3906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 20, !dbg !191
  %3907 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 17, !dbg !192
  %3908 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 9, !dbg !193
  %3909 = load i32, i32* %3908, align 4, !dbg !194
  %3910 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %3911 = load i32, i32* %3910, align 4, !dbg !196
  %3912 = icmp ne i32 %3909, %3911, !dbg !197
  br i1 %3912, label %3913, label %3955, !dbg !198

3913:                                             ; preds = %3880
  br i1 %3902, label %3935, label %3930, !dbg !199

3914:                                             ; preds = %3930, %3937
  %3915 = load i32, i32* %3910, align 4, !dbg !200
  store i32 %3915, i32* %3908, align 4, !dbg !201
  %3916 = load i8*, i8** %3906, align 8, !dbg !202
  %3917 = load i8, i8* %3916, align 1, !dbg !203
  %3918 = icmp sgt i8 %3917, -1, !dbg !206
  br i1 %3918, label %3919, label %3921, !dbg !207

3919:                                             ; preds = %3914
  %3920 = zext i8 %3917 to i32, !dbg !208
  store i32 %3920, i32* %3896, align 4, !dbg !209
  store i32 1, i32* %3903, align 4, !dbg !210
  br label %3924, !dbg !211

3921:                                             ; preds = %3914
  %3922 = call i8 @sqlite3GetVarint32(i8* %3916, i32* %3896), !dbg !212
  %3923 = zext i8 %3922 to i32, !dbg !213
  store i32 %3923, i32* %3903, align 4, !dbg !214
  br label %3924, !dbg !215

3924:                                             ; preds = %3921, %3919
  store i16 0, i16* %3907, align 2, !dbg !216
  %3925 = load i32, i32* %3905, align 4, !dbg !217
  %3926 = load i32, i32* %3896, align 4, !dbg !218
  %3927 = icmp ult i32 %3925, %3926, !dbg !219
  br i1 %3927, label %3929, label %3928, !dbg !220

3928:                                             ; preds = %3924
  store i8* %3916, i8** %3888, align 8, !dbg !221
  br label %4048, !dbg !222

3929:                                             ; preds = %3924
  store i8* null, i8** %3906, align 8, !dbg !223
  store i32 0, i32* %3905, align 4, !dbg !224
  br label %3955, !dbg !225

3930:                                             ; preds = %3913
  %3931 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 12, i32 0, !dbg !226
  %3932 = load %struct.BtCursor*, %struct.BtCursor** %3931, align 8, !dbg !227
  %3933 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3932), !dbg !228
  store i32 %3933, i32* %3904, align 4, !dbg !229
  %3934 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3932, i32* %3905), !dbg !230
  store i8* %3934, i8** %3906, align 8, !dbg !231
  br label %3914, !dbg !232

3935:                                             ; preds = %3913
  %3936 = icmp eq i8 %3898, 3, !dbg !233
  br i1 %3936, label %3937, label %3948, !dbg !234

3937:                                             ; preds = %3935
  %3938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 10, !dbg !235
  %3939 = load i32, i32* %3938, align 4, !dbg !236
  %3940 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3939, !dbg !237
  %3941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3940, i32 0, i32 1, !dbg !238
  %3942 = load i16, i16* %3941, align 2, !dbg !239
  %3943 = and i16 %3942, 16, !dbg !240
  %3944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3940, i32 0, i32 4, !dbg !241
  %3945 = load i32, i32* %3944, align 4, !dbg !242
  store i32 %3945, i32* %3904, align 4, !dbg !243
  store i32 %3945, i32* %3905, align 4, !dbg !244
  %3946 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3940, i32 0, i32 5, !dbg !245
  %3947 = load i8*, i8** %3946, align 8, !dbg !246
  store i8* %3947, i8** %3906, align 8, !dbg !247
  br label %3914, !dbg !248

3948:                                             ; preds = %3935
  %3949 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 1, !dbg !249
  %3950 = load i16, i16* %3949, align 2, !dbg !249
  %3951 = and i16 %3950, 9216, !dbg !249
  %3952 = icmp ne i16 %3951, 0, !dbg !249
  br i1 %3952, label %3953, label %3954, !dbg !249

3953:                                             ; preds = %3948
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3892), !dbg !249
  br label %4136, !dbg !249

3954:                                             ; preds = %3948
  store i16 1, i16* %3949, align 2, !dbg !249
  br label %4136, !dbg !249

3955:                                             ; preds = %3929, %3880
  %3956 = load i16, i16* %3907, align 2, !dbg !250
  %3957 = icmp ule i16 %3956, 2, !dbg !251
  br i1 %3957, label %4040, label %4037, !dbg !252

3958:                                             ; preds = %4037, %4126
  %3959 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 1, !dbg !253
  %3960 = load i16, i16* %3959, align 2, !dbg !254
  %3961 = and i16 9216, %3960, !dbg !255
  %3962 = icmp eq i16 0, %3961, !dbg !256
  br i1 %3962, label %3963, label %3967, !dbg !257

3963:                                             ; preds = %3958
  %3964 = icmp ne i16 %3961, 0, !dbg !258
  br i1 %3964, label %3965, label %3966, !dbg !258

3965:                                             ; preds = %3963
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3892), !dbg !258
  br label %3967, !dbg !258

3966:                                             ; preds = %3963
  store i16 1, i16* %3959, align 2, !dbg !258
  br label %3967, !dbg !258

3967:                                             ; preds = %3965, %3966, %3958
  %3968 = load i32, i32* %3889, align 4, !dbg !259
  %3969 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 23, i32 2, !dbg !260
  %3970 = load i32, i32* %3969, align 4, !dbg !261
  %3971 = load i32, i32* %3905, align 4, !dbg !262
  %3972 = getelementptr i32, i32* %3896, i32 3, !dbg !263
  %3973 = load i32, i32* %3972, align 4, !dbg !264
  %3974 = icmp sge i32 %3971, %3973, !dbg !265
  br i1 %3974, label %3975, label %4015, !dbg !266

3975:                                             ; preds = %3967
  %3976 = load i8*, i8** %3906, align 8, !dbg !267
  %3977 = ptrtoint i8* %3976 to i64, !dbg !268
  %3978 = getelementptr i32, i32* %3896, i32 2, !dbg !509
  %3979 = load i32, i32* %3978, align 4, !dbg !269
  %3980 = zext i32 %3979 to i64, !dbg !270
  %3981 = add i64 %3977, %3980, !dbg !271
  %3982 = inttoptr i64 %3981 to i8*, !dbg !272
  store i8* %3982, i8** %3888, align 8, !dbg !273
  %3983 = load i32, i32* %3889, align 4, !dbg !274
  %3984 = icmp ult i32 %3983, 12, !dbg !275
  br i1 %3984, label %3985, label %3987, !dbg !276

3985:                                             ; preds = %3975
  %3986 = call i32 @sqlite3VdbeSerialGet(i8* %3982, i32 %3983, %struct.sqlite3_value* %3892), !dbg !277
  br label %4136, !dbg !278

3987:                                             ; preds = %3975
  %3988 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %3988, align 2, !dbg !280
  %3989 = getelementptr i16, i16* %3988, i32 1, !dbg !281
  store i16 514, i16* %3989, align 2, !dbg !282
  %3990 = load i32, i32* %3889, align 4, !dbg !283
  %3991 = sub i32 %3990, 12, !dbg !284
  %3992 = lshr i32 %3991, 1, !dbg !285
  %3993 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 4, !dbg !286
  store i32 %3992, i32* %3993, align 4, !dbg !287
  %3994 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 2, !dbg !288
  store i8 %3883, i8* %3994, align 1, !dbg !289
  %3995 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 5, !dbg !290
  %3996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 7, !dbg !291
  %3997 = load i32, i32* %3996, align 4, !dbg !292
  %3998 = add i32 %3992, 2, !dbg !293
  %3999 = icmp slt i32 %3997, %3998, !dbg !294
  br i1 %3999, label %4000, label %4002, !dbg !295

4000:                                             ; preds = %3987
  store i16 1, i16* %3959, align 2, !dbg !296
  %4001 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3892, i32 %3998, i32 0), !dbg !297
  br label %4005, !dbg !298

4002:                                             ; preds = %3987
  %4003 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 6, !dbg !299
  %4004 = load i8*, i8** %4003, align 8, !dbg !300
  store i8* %4004, i8** %3995, align 8, !dbg !301
  br label %4005, !dbg !302

4005:                                             ; preds = %4002, %4000
  %4006 = zext i32 %3992 to i64, !dbg !303
  %4007 = load i8*, i8** %3995, align 8, !dbg !304
  %4008 = load i8*, i8** %3888, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4007, i8* %4008, i64 %4006, i1 false), !dbg !306
  %4009 = getelementptr i8, i8* %4007, i32 %3992, !dbg !307
  store i8 0, i8* %4009, align 1, !dbg !308
  %4010 = add i32 %3992, 1, !dbg !309
  %4011 = getelementptr i8, i8* %4007, i32 %4010, !dbg !310
  store i8 0, i8* %4011, align 1, !dbg !311
  %4012 = and i32 %3990, 1, !dbg !312
  %4013 = getelementptr i16, i16* %3988, i32 %4012, !dbg !313
  %4014 = load i16, i16* %4013, align 2, !dbg !314
  store i16 %4014, i16* %3959, align 2, !dbg !315
  br label %4136, !dbg !316

4015:                                             ; preds = %3967
  %4016 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 2, !dbg !317
  store i8 %3883, i8* %4016, align 1, !dbg !318
  %4017 = load i32, i32* %3889, align 4, !dbg !319
  %4018 = and i32 %4017, 1, !dbg !320
  %4019 = icmp eq i32 %4018, 0, !dbg !321
  %4020 = icmp sge i32 %4017, 12, !dbg !322
  %4021 = and i1 %4020, %4019, !dbg !323
  %4022 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4017), !dbg !324
  %4023 = icmp eq i32 %4022, 0, !dbg !325
  br i1 %4023, label %4035, label %4024, !dbg !326

4024:                                             ; preds = %4015
  %4025 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 12, i32 0, !dbg !327
  %4026 = load %struct.BtCursor*, %struct.BtCursor** %4025, align 8, !dbg !328
  %4027 = getelementptr i32, i32* %3896, i32 2, !dbg !510
  %4028 = load i32, i32* %4027, align 4, !dbg !329
  %4029 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4026, i32 %4028, i32 %4022, %struct.sqlite3_value* %3892), !dbg !330
  %4030 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 5, !dbg !331
  %4031 = load i8*, i8** %4030, align 8, !dbg !332
  %4032 = call i32 @sqlite3VdbeSerialGet(i8* %4031, i32 %4017, %struct.sqlite3_value* %3892), !dbg !333
  %4033 = load i16, i16* %3959, align 2, !dbg !334
  %4034 = and i16 %4033, -4097, !dbg !335
  store i16 %4034, i16* %3959, align 2, !dbg !336
  br label %4136, !dbg !337

4035:                                             ; preds = %4015
  %4036 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4017, %struct.sqlite3_value* %3892), !dbg !338
  br label %4136, !dbg !339

4037:                                             ; preds = %3955
  %4038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 23, i32 2, !dbg !340
  %4039 = load i32, i32* %4038, align 4, !dbg !341
  store i32 %4039, i32* %3889, align 4, !dbg !342
  br label %3958, !dbg !343

4040:                                             ; preds = %3955
  %4041 = load i32, i32* %3903, align 4, !dbg !344
  %4042 = load i32, i32* %3896, align 4, !dbg !345
  %4043 = icmp ult i32 %4041, %4042, !dbg !346
  br i1 %4043, label %4044, label %4125, !dbg !347

4044:                                             ; preds = %4040
  %4045 = load i8*, i8** %3906, align 8, !dbg !348
  %4046 = icmp eq i8* %4045, null, !dbg !349
  br i1 %4046, label %4048, label %4047, !dbg !350

4047:                                             ; preds = %4044
  store i8* %4045, i8** %3888, align 8, !dbg !351
  br label %4048, !dbg !352

4048:                                             ; preds = %4047, %4044, %3928
  %4049 = alloca i32, align 4, !dbg !353
  %4050 = load i16, i16* %3907, align 2, !dbg !354
  %4051 = zext i16 %4050 to i32, !dbg !355
  store i32 %4051, i32* %4049, align 4, !dbg !356
  %4052 = alloca i64, align 8, !dbg !357
  %4053 = getelementptr i32, i32* %3896, i32 %4051, !dbg !358
  %4054 = load i32, i32* %4053, align 4, !dbg !359
  %4055 = zext i32 %4054 to i64, !dbg !360
  store i64 %4055, i64* %4052, align 4, !dbg !361
  %4056 = load i8*, i8** %3888, align 8, !dbg !362
  %4057 = load i32, i32* %3903, align 4, !dbg !363
  %4058 = alloca i8*, align 8, !dbg !364
  %4059 = getelementptr i8, i8* %4056, i32 %4057, !dbg !365
  store i8* %4059, i8** %4058, align 8, !dbg !366
  %4060 = load i32, i32* %3896, align 4, !dbg !367
  %4061 = getelementptr i8, i8* %4056, i32 %4060, !dbg !368
  br label %4062, !dbg !369

4062:                                             ; preds = %4069, %4048
  %4063 = load i32, i32* %4049, align 4, !dbg !370
  %4064 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3891, i32 0, i32 23, i32 %4063, !dbg !371
  %4065 = load i8*, i8** %4058, align 8, !dbg !372
  %4066 = load i8, i8* %4065, align 1, !dbg !373
  %4067 = zext i8 %4066 to i32, !dbg !374
  store i32 %4067, i32* %3889, align 4, !dbg !375
  store i32 %4067, i32* %4064, align 4, !dbg !376
  %4068 = icmp sgt i8 %4066, -1, !dbg !377
  br i1 %4068, label %4092, label %4083, !dbg !378

4069:                                             ; preds = %4083, %4092
  %4070 = load i32, i32* %4049, align 4, !dbg !379
  %4071 = add i32 %4070, 1, !dbg !380
  store i32 %4071, i32* %4049, align 4, !dbg !381
  %4072 = load i64, i64* %4052, align 4, !dbg !382
  %4073 = and i64 4294967295, %4072, !dbg !383
  %4074 = trunc i64 %4073 to i32, !dbg !384
  %4075 = getelementptr i32, i32* %3896, i32 %4071, !dbg !385
  store i32 %4074, i32* %4075, align 4, !dbg !386
  %4076 = load i32, i32* %4049, align 4, !dbg !387
  %4077 = icmp sle i32 %4076, 2, !dbg !388
  %4078 = load i8*, i8** %4058, align 8, !dbg !389
  %4079 = ptrtoint i8* %4078 to i64, !dbg !390
  %4080 = ptrtoint i8* %4061 to i64, !dbg !391
  %4081 = icmp ult i64 %4079, %4080, !dbg !392
  %4082 = and i1 %4077, %4081, !dbg !393
  br i1 %4082, label %4062, label %4101, !dbg !394

4083:                                             ; preds = %4062
  %4084 = load i8*, i8** %4058, align 8, !dbg !395
  %4085 = call i8 @sqlite3GetVarint32(i8* %4084, i32* %3889), !dbg !396
  %4086 = getelementptr i8, i8* %4084, i8 %4085, !dbg !397
  store i8* %4086, i8** %4058, align 8, !dbg !398
  %4087 = load i32, i32* %3889, align 4, !dbg !399
  store i32 %4087, i32* %4064, align 4, !dbg !400
  %4088 = load i64, i64* %4052, align 4, !dbg !401
  %4089 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4087), !dbg !402
  %4090 = zext i32 %4089 to i64, !dbg !403
  %4091 = add i64 %4088, %4090, !dbg !404
  store i64 %4091, i64* %4052, align 4, !dbg !405
  br label %4069, !dbg !406

4092:                                             ; preds = %4062
  %4093 = getelementptr i8, i8* %4065, i32 1, !dbg !407
  store i8* %4093, i8** %4058, align 8, !dbg !408
  %4094 = load i32, i32* %3889, align 4, !dbg !409
  %4095 = trunc i32 %4094 to i8, !dbg !410
  %4096 = getelementptr i8, i8* %4, i8 %4095, !dbg !411
  %4097 = load i8, i8* %4096, align 1, !dbg !412
  %4098 = zext i8 %4097 to i64, !dbg !413
  %4099 = load i64, i64* %4052, align 4, !dbg !414
  %4100 = add i64 %4099, %4098, !dbg !415
  store i64 %4100, i64* %4052, align 4, !dbg !416
  br label %4069, !dbg !417

4101:                                             ; preds = %4069
  %4102 = load i64, i64* %4052, align 4, !dbg !418
  %4103 = load i32, i32* %3904, align 4, !dbg !419
  %4104 = zext i32 %4103 to i64, !dbg !420
  %4105 = icmp uge i64 %4079, %4080, !dbg !421
  %4106 = icmp ugt i64 %4079, %4080, !dbg !422
  %4107 = icmp ne i64 %4102, %4104, !dbg !423
  %4108 = icmp ugt i64 %4102, %4104, !dbg !424
  %4109 = or i1 %4106, %4107, !dbg !425
  %4110 = and i1 %4105, %4109, !dbg !426
  %4111 = or i1 %4110, %4108, !dbg !427
  br i1 %4111, label %4112, label %4116, !dbg !428

4112:                                             ; preds = %4101
  %4113 = load i32, i32* %3896, align 4, !dbg !429
  %4114 = icmp eq i32 %4113, 0, !dbg !430
  br i1 %4114, label %4115, label %4116, !dbg !431

4115:                                             ; preds = %4112
  store i32 0, i32* %4049, align 4, !dbg !432
  store i8* %4061, i8** %4058, align 8, !dbg !433
  br label %4116, !dbg !434

4116:                                             ; preds = %4115, %4112, %4101
  %4117 = load i32, i32* %4049, align 4, !dbg !435
  %4118 = trunc i32 %4117 to i16, !dbg !436
  store i16 %4118, i16* %3907, align 2, !dbg !437
  %4119 = load i8*, i8** %4058, align 8, !dbg !438
  %4120 = ptrtoint i8* %4119 to i64, !dbg !439
  %4121 = load i8*, i8** %3888, align 8, !dbg !440
  %4122 = ptrtoint i8* %4121 to i64, !dbg !441
  %4123 = sub i64 %4120, %4122, !dbg !442
  %4124 = trunc i64 %4123 to i32, !dbg !443
  store i32 %4124, i32* %3903, align 4, !dbg !444
  br label %4126, !dbg !445

4125:                                             ; preds = %4040
  store i32 0, i32* %3889, align 4, !dbg !446
  br label %4126, !dbg !447

4126:                                             ; preds = %4116, %4125
  %4127 = load i16, i16* %3907, align 2, !dbg !448
  %4128 = icmp sle i16 %4127, 2, !dbg !449
  br i1 %4128, label %4129, label %3958, !dbg !450

4129:                                             ; preds = %4126
  %4130 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3892, i32 0, i32 1, !dbg !451
  %4131 = load i16, i16* %4130, align 2, !dbg !451
  %4132 = and i16 %4131, 9216, !dbg !451
  %4133 = icmp ne i16 %4132, 0, !dbg !451
  br i1 %4133, label %4134, label %4135, !dbg !451

4134:                                             ; preds = %4129
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3892), !dbg !451
  br label %4136, !dbg !451

4135:                                             ; preds = %4129
  store i16 1, i16* %4130, align 2, !dbg !451
  br label %4136, !dbg !451

4136:                                             ; preds = %4134, %4135, %4005, %3985, %4024, %4035, %3953, %3954
  call void @llvm.stackrestore(i8* %3881), !dbg !452
  br label %4137, !dbg !74

4137:                                             ; preds = %17, %4136
  %4138 = call i8* @llvm.stacksave(), !dbg !453
  %4139 = alloca i32, align 8, !dbg !456
  %4140 = alloca i64, align 8, !dbg !457
  %4141 = alloca i32, align 8, !dbg !458
  %4142 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !459
  %4143 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4142, i32 0, i32 1, !dbg !460
  %4144 = load i16, i16* %4143, align 2, !dbg !461
  %4145 = and i16 %4144, 36, !dbg !462
  %4146 = icmp eq i16 %4145, 0, !dbg !463
  br i1 %4146, label %4147, label %4158, !dbg !464

4147:                                             ; preds = %4137
  %4148 = alloca %struct.sqlite3_value, align 8, !dbg !465
  %4149 = load %struct.sqlite3_value, %struct.sqlite3_value* %4142, align 8, !dbg !466
  store %struct.sqlite3_value %4149, %struct.sqlite3_value* %4148, align 8, !dbg !466
  call void @applyAffinity(%struct.sqlite3_value* %4148, i8 67, i8 1), !dbg !467
  %4150 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4148, i32 0, i32 1, !dbg !468
  %4151 = load i16, i16* %4150, align 2, !dbg !469
  %4152 = and i16 %4151, 4, !dbg !470
  %4153 = icmp eq i16 %4152, 0, !dbg !471
  br i1 %4153, label %5705, label %4154, !dbg !472

4154:                                             ; preds = %4147
  %4155 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4148, i32 0, i32 0, !dbg !473
  %4156 = bitcast %union.MemValue* %4155 to i64*, !dbg !474
  %4157 = load i64, i64* %4156, align 4, !dbg !475
  store i64 %4157, i64* %4140, align 4, !dbg !476
  br label %4162, !dbg !477

4158:                                             ; preds = %4137
  %4159 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4142, i32 0, i32 0, !dbg !478
  %4160 = bitcast %union.MemValue* %4159 to i64*, !dbg !479
  %4161 = load i64, i64* %4160, align 4, !dbg !480
  store i64 %4161, i64* %4140, align 4, !dbg !481
  br label %4162, !dbg !482

4162:                                             ; preds = %4158, %4154
  %4163 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !483
  %4164 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4163, align 8, !dbg !484
  %4165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 12, i32 0, !dbg !485
  %4166 = load %struct.BtCursor*, %struct.BtCursor** %4165, align 8, !dbg !486
  store i32 0, i32* %4139, align 4, !dbg !487
  %4167 = load i64, i64* %4140, align 4, !dbg !488
  %4168 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %4166, %struct.UnpackedRecord* null, i64 %4167, i32 0, i32* %4139), !dbg !489
  store i32 %4168, i32* %4141, align 4, !dbg !490
  %4169 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 18, !dbg !491
  store i64 %4167, i64* %4169, align 4, !dbg !492
  %4170 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 2, !dbg !493
  store i8 0, i8* %4170, align 1, !dbg !494
  %4171 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 9, !dbg !495
  store i32 0, i32* %4171, align 4, !dbg !496
  %4172 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 3, !dbg !497
  store i8 0, i8* %4172, align 1, !dbg !498
  %4173 = load i32, i32* %4139, align 4, !dbg !499
  %4174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4164, i32 0, i32 10, !dbg !500
  store i32 %4173, i32* %4174, align 4, !dbg !501
  %4175 = icmp ne i32 %4173, 0, !dbg !502
  br i1 %4175, label %4176, label %4177, !dbg !503

4176:                                             ; preds = %4162
  call void @llvm.stackrestore(i8* %4138), !dbg !504
  br label %5705, !dbg !505

4177:                                             ; preds = %4162
  %4178 = load i32, i32* %4141, align 4, !dbg !506
  call void @llvm.stackrestore(i8* %4138), !dbg !507
  br label %4179, !dbg !508

4179:                                             ; preds = %17, %4177
  %4180 = call i8* @llvm.stacksave(), !dbg !162
  %4181 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %4182 = load i8, i8* %4181, align 1, !dbg !166
  %4183 = alloca i32, align 4, !dbg !167
  store i32 5, i32* %4183, align 4, !dbg !168
  %4184 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !169
  %4185 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %4186 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4184, align 8, !dbg !171
  store %struct.VdbeCursor* %4186, %struct.VdbeCursor** %4185, align 8, !dbg !172
  %4187 = alloca i8*, align 8, !dbg !173
  %4188 = alloca i32, align 4, !dbg !174
  %4189 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4185, i32* %4183), !dbg !175
  %4190 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4185, align 8, !dbg !176
  %4191 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !177
  %4192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 16, !dbg !178
  %4193 = load i16, i16* %4192, align 2, !dbg !179
  %4194 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 19, !dbg !180
  %4195 = load i32*, i32** %4194, align 8, !dbg !181
  %4196 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 0, !dbg !182
  %4197 = load i8, i8* %4196, align 1, !dbg !183
  %4198 = icmp ne i8 %4197, 3, !dbg !184
  %4199 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 2, !dbg !185
  %4200 = load i8, i8* %4199, align 1, !dbg !186
  %4201 = icmp ne i8 %4200, 0, !dbg !187
  %4202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 14, !dbg !188
  %4203 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 21, !dbg !189
  %4204 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 22, !dbg !190
  %4205 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 20, !dbg !191
  %4206 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 17, !dbg !192
  %4207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 9, !dbg !193
  %4208 = load i32, i32* %4207, align 4, !dbg !194
  %4209 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %4210 = load i32, i32* %4209, align 4, !dbg !196
  %4211 = icmp ne i32 %4208, %4210, !dbg !197
  br i1 %4211, label %4212, label %4254, !dbg !198

4212:                                             ; preds = %4179
  br i1 %4201, label %4234, label %4229, !dbg !199

4213:                                             ; preds = %4229, %4236
  %4214 = load i32, i32* %4209, align 4, !dbg !200
  store i32 %4214, i32* %4207, align 4, !dbg !201
  %4215 = load i8*, i8** %4205, align 8, !dbg !202
  %4216 = load i8, i8* %4215, align 1, !dbg !203
  %4217 = icmp sgt i8 %4216, -1, !dbg !206
  br i1 %4217, label %4218, label %4220, !dbg !207

4218:                                             ; preds = %4213
  %4219 = zext i8 %4216 to i32, !dbg !208
  store i32 %4219, i32* %4195, align 4, !dbg !209
  store i32 1, i32* %4202, align 4, !dbg !210
  br label %4223, !dbg !211

4220:                                             ; preds = %4213
  %4221 = call i8 @sqlite3GetVarint32(i8* %4215, i32* %4195), !dbg !212
  %4222 = zext i8 %4221 to i32, !dbg !213
  store i32 %4222, i32* %4202, align 4, !dbg !214
  br label %4223, !dbg !215

4223:                                             ; preds = %4220, %4218
  store i16 0, i16* %4206, align 2, !dbg !216
  %4224 = load i32, i32* %4204, align 4, !dbg !217
  %4225 = load i32, i32* %4195, align 4, !dbg !218
  %4226 = icmp ult i32 %4224, %4225, !dbg !219
  br i1 %4226, label %4228, label %4227, !dbg !220

4227:                                             ; preds = %4223
  store i8* %4215, i8** %4187, align 8, !dbg !221
  br label %4347, !dbg !222

4228:                                             ; preds = %4223
  store i8* null, i8** %4205, align 8, !dbg !223
  store i32 0, i32* %4204, align 4, !dbg !224
  br label %4254, !dbg !225

4229:                                             ; preds = %4212
  %4230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 12, i32 0, !dbg !226
  %4231 = load %struct.BtCursor*, %struct.BtCursor** %4230, align 8, !dbg !227
  %4232 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4231), !dbg !228
  store i32 %4232, i32* %4203, align 4, !dbg !229
  %4233 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4231, i32* %4204), !dbg !230
  store i8* %4233, i8** %4205, align 8, !dbg !231
  br label %4213, !dbg !232

4234:                                             ; preds = %4212
  %4235 = icmp eq i8 %4197, 3, !dbg !233
  br i1 %4235, label %4236, label %4247, !dbg !234

4236:                                             ; preds = %4234
  %4237 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 10, !dbg !235
  %4238 = load i32, i32* %4237, align 4, !dbg !236
  %4239 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4238, !dbg !237
  %4240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4239, i32 0, i32 1, !dbg !238
  %4241 = load i16, i16* %4240, align 2, !dbg !239
  %4242 = and i16 %4241, 16, !dbg !240
  %4243 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4239, i32 0, i32 4, !dbg !241
  %4244 = load i32, i32* %4243, align 4, !dbg !242
  store i32 %4244, i32* %4203, align 4, !dbg !243
  store i32 %4244, i32* %4204, align 4, !dbg !244
  %4245 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4239, i32 0, i32 5, !dbg !245
  %4246 = load i8*, i8** %4245, align 8, !dbg !246
  store i8* %4246, i8** %4205, align 8, !dbg !247
  br label %4213, !dbg !248

4247:                                             ; preds = %4234
  %4248 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 1, !dbg !249
  %4249 = load i16, i16* %4248, align 2, !dbg !249
  %4250 = and i16 %4249, 9216, !dbg !249
  %4251 = icmp ne i16 %4250, 0, !dbg !249
  br i1 %4251, label %4252, label %4253, !dbg !249

4252:                                             ; preds = %4247
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4191), !dbg !249
  br label %4435, !dbg !249

4253:                                             ; preds = %4247
  store i16 1, i16* %4248, align 2, !dbg !249
  br label %4435, !dbg !249

4254:                                             ; preds = %4228, %4179
  %4255 = load i16, i16* %4206, align 2, !dbg !250
  %4256 = icmp ule i16 %4255, 1, !dbg !251
  br i1 %4256, label %4339, label %4336, !dbg !252

4257:                                             ; preds = %4336, %4425
  %4258 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 1, !dbg !253
  %4259 = load i16, i16* %4258, align 2, !dbg !254
  %4260 = and i16 9216, %4259, !dbg !255
  %4261 = icmp eq i16 0, %4260, !dbg !256
  br i1 %4261, label %4262, label %4266, !dbg !257

4262:                                             ; preds = %4257
  %4263 = icmp ne i16 %4260, 0, !dbg !258
  br i1 %4263, label %4264, label %4265, !dbg !258

4264:                                             ; preds = %4262
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4191), !dbg !258
  br label %4266, !dbg !258

4265:                                             ; preds = %4262
  store i16 1, i16* %4258, align 2, !dbg !258
  br label %4266, !dbg !258

4266:                                             ; preds = %4264, %4265, %4257
  %4267 = load i32, i32* %4188, align 4, !dbg !259
  %4268 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 23, i32 1, !dbg !260
  %4269 = load i32, i32* %4268, align 4, !dbg !261
  %4270 = load i32, i32* %4204, align 4, !dbg !262
  %4271 = getelementptr i32, i32* %4195, i32 2, !dbg !263
  %4272 = load i32, i32* %4271, align 4, !dbg !264
  %4273 = icmp sge i32 %4270, %4272, !dbg !265
  br i1 %4273, label %4274, label %4314, !dbg !266

4274:                                             ; preds = %4266
  %4275 = load i8*, i8** %4205, align 8, !dbg !267
  %4276 = ptrtoint i8* %4275 to i64, !dbg !268
  %4277 = getelementptr i32, i32* %4195, i32 1, !dbg !509
  %4278 = load i32, i32* %4277, align 4, !dbg !269
  %4279 = zext i32 %4278 to i64, !dbg !270
  %4280 = add i64 %4276, %4279, !dbg !271
  %4281 = inttoptr i64 %4280 to i8*, !dbg !272
  store i8* %4281, i8** %4187, align 8, !dbg !273
  %4282 = load i32, i32* %4188, align 4, !dbg !274
  %4283 = icmp ult i32 %4282, 12, !dbg !275
  br i1 %4283, label %4284, label %4286, !dbg !276

4284:                                             ; preds = %4274
  %4285 = call i32 @sqlite3VdbeSerialGet(i8* %4281, i32 %4282, %struct.sqlite3_value* %4191), !dbg !277
  br label %4435, !dbg !278

4286:                                             ; preds = %4274
  %4287 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %4287, align 2, !dbg !280
  %4288 = getelementptr i16, i16* %4287, i32 1, !dbg !281
  store i16 514, i16* %4288, align 2, !dbg !282
  %4289 = load i32, i32* %4188, align 4, !dbg !283
  %4290 = sub i32 %4289, 12, !dbg !284
  %4291 = lshr i32 %4290, 1, !dbg !285
  %4292 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 4, !dbg !286
  store i32 %4291, i32* %4292, align 4, !dbg !287
  %4293 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 2, !dbg !288
  store i8 %4182, i8* %4293, align 1, !dbg !289
  %4294 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 5, !dbg !290
  %4295 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 7, !dbg !291
  %4296 = load i32, i32* %4295, align 4, !dbg !292
  %4297 = add i32 %4291, 2, !dbg !293
  %4298 = icmp slt i32 %4296, %4297, !dbg !294
  br i1 %4298, label %4299, label %4301, !dbg !295

4299:                                             ; preds = %4286
  store i16 1, i16* %4258, align 2, !dbg !296
  %4300 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4191, i32 %4297, i32 0), !dbg !297
  br label %4304, !dbg !298

4301:                                             ; preds = %4286
  %4302 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 6, !dbg !299
  %4303 = load i8*, i8** %4302, align 8, !dbg !300
  store i8* %4303, i8** %4294, align 8, !dbg !301
  br label %4304, !dbg !302

4304:                                             ; preds = %4301, %4299
  %4305 = zext i32 %4291 to i64, !dbg !303
  %4306 = load i8*, i8** %4294, align 8, !dbg !304
  %4307 = load i8*, i8** %4187, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4306, i8* %4307, i64 %4305, i1 false), !dbg !306
  %4308 = getelementptr i8, i8* %4306, i32 %4291, !dbg !307
  store i8 0, i8* %4308, align 1, !dbg !308
  %4309 = add i32 %4291, 1, !dbg !309
  %4310 = getelementptr i8, i8* %4306, i32 %4309, !dbg !310
  store i8 0, i8* %4310, align 1, !dbg !311
  %4311 = and i32 %4289, 1, !dbg !312
  %4312 = getelementptr i16, i16* %4287, i32 %4311, !dbg !313
  %4313 = load i16, i16* %4312, align 2, !dbg !314
  store i16 %4313, i16* %4258, align 2, !dbg !315
  br label %4435, !dbg !316

4314:                                             ; preds = %4266
  %4315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 2, !dbg !317
  store i8 %4182, i8* %4315, align 1, !dbg !318
  %4316 = load i32, i32* %4188, align 4, !dbg !319
  %4317 = and i32 %4316, 1, !dbg !320
  %4318 = icmp eq i32 %4317, 0, !dbg !321
  %4319 = icmp sge i32 %4316, 12, !dbg !322
  %4320 = and i1 %4319, %4318, !dbg !323
  %4321 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4316), !dbg !324
  %4322 = icmp eq i32 %4321, 0, !dbg !325
  br i1 %4322, label %4334, label %4323, !dbg !326

4323:                                             ; preds = %4314
  %4324 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 12, i32 0, !dbg !327
  %4325 = load %struct.BtCursor*, %struct.BtCursor** %4324, align 8, !dbg !328
  %4326 = getelementptr i32, i32* %4195, i32 1, !dbg !510
  %4327 = load i32, i32* %4326, align 4, !dbg !329
  %4328 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4325, i32 %4327, i32 %4321, %struct.sqlite3_value* %4191), !dbg !330
  %4329 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 5, !dbg !331
  %4330 = load i8*, i8** %4329, align 8, !dbg !332
  %4331 = call i32 @sqlite3VdbeSerialGet(i8* %4330, i32 %4316, %struct.sqlite3_value* %4191), !dbg !333
  %4332 = load i16, i16* %4258, align 2, !dbg !334
  %4333 = and i16 %4332, -4097, !dbg !335
  store i16 %4333, i16* %4258, align 2, !dbg !336
  br label %4435, !dbg !337

4334:                                             ; preds = %4314
  %4335 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4316, %struct.sqlite3_value* %4191), !dbg !338
  br label %4435, !dbg !339

4336:                                             ; preds = %4254
  %4337 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 23, i32 1, !dbg !340
  %4338 = load i32, i32* %4337, align 4, !dbg !341
  store i32 %4338, i32* %4188, align 4, !dbg !342
  br label %4257, !dbg !343

4339:                                             ; preds = %4254
  %4340 = load i32, i32* %4202, align 4, !dbg !344
  %4341 = load i32, i32* %4195, align 4, !dbg !345
  %4342 = icmp ult i32 %4340, %4341, !dbg !346
  br i1 %4342, label %4343, label %4424, !dbg !347

4343:                                             ; preds = %4339
  %4344 = load i8*, i8** %4205, align 8, !dbg !348
  %4345 = icmp eq i8* %4344, null, !dbg !349
  br i1 %4345, label %4347, label %4346, !dbg !350

4346:                                             ; preds = %4343
  store i8* %4344, i8** %4187, align 8, !dbg !351
  br label %4347, !dbg !352

4347:                                             ; preds = %4346, %4343, %4227
  %4348 = alloca i32, align 4, !dbg !353
  %4349 = load i16, i16* %4206, align 2, !dbg !354
  %4350 = zext i16 %4349 to i32, !dbg !355
  store i32 %4350, i32* %4348, align 4, !dbg !356
  %4351 = alloca i64, align 8, !dbg !357
  %4352 = getelementptr i32, i32* %4195, i32 %4350, !dbg !358
  %4353 = load i32, i32* %4352, align 4, !dbg !359
  %4354 = zext i32 %4353 to i64, !dbg !360
  store i64 %4354, i64* %4351, align 4, !dbg !361
  %4355 = load i8*, i8** %4187, align 8, !dbg !362
  %4356 = load i32, i32* %4202, align 4, !dbg !363
  %4357 = alloca i8*, align 8, !dbg !364
  %4358 = getelementptr i8, i8* %4355, i32 %4356, !dbg !365
  store i8* %4358, i8** %4357, align 8, !dbg !366
  %4359 = load i32, i32* %4195, align 4, !dbg !367
  %4360 = getelementptr i8, i8* %4355, i32 %4359, !dbg !368
  br label %4361, !dbg !369

4361:                                             ; preds = %4368, %4347
  %4362 = load i32, i32* %4348, align 4, !dbg !370
  %4363 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4190, i32 0, i32 23, i32 %4362, !dbg !371
  %4364 = load i8*, i8** %4357, align 8, !dbg !372
  %4365 = load i8, i8* %4364, align 1, !dbg !373
  %4366 = zext i8 %4365 to i32, !dbg !374
  store i32 %4366, i32* %4188, align 4, !dbg !375
  store i32 %4366, i32* %4363, align 4, !dbg !376
  %4367 = icmp sgt i8 %4365, -1, !dbg !377
  br i1 %4367, label %4391, label %4382, !dbg !378

4368:                                             ; preds = %4382, %4391
  %4369 = load i32, i32* %4348, align 4, !dbg !379
  %4370 = add i32 %4369, 1, !dbg !380
  store i32 %4370, i32* %4348, align 4, !dbg !381
  %4371 = load i64, i64* %4351, align 4, !dbg !382
  %4372 = and i64 4294967295, %4371, !dbg !383
  %4373 = trunc i64 %4372 to i32, !dbg !384
  %4374 = getelementptr i32, i32* %4195, i32 %4370, !dbg !385
  store i32 %4373, i32* %4374, align 4, !dbg !386
  %4375 = load i32, i32* %4348, align 4, !dbg !387
  %4376 = icmp sle i32 %4375, 1, !dbg !388
  %4377 = load i8*, i8** %4357, align 8, !dbg !389
  %4378 = ptrtoint i8* %4377 to i64, !dbg !390
  %4379 = ptrtoint i8* %4360 to i64, !dbg !391
  %4380 = icmp ult i64 %4378, %4379, !dbg !392
  %4381 = and i1 %4376, %4380, !dbg !393
  br i1 %4381, label %4361, label %4400, !dbg !394

4382:                                             ; preds = %4361
  %4383 = load i8*, i8** %4357, align 8, !dbg !395
  %4384 = call i8 @sqlite3GetVarint32(i8* %4383, i32* %4188), !dbg !396
  %4385 = getelementptr i8, i8* %4383, i8 %4384, !dbg !397
  store i8* %4385, i8** %4357, align 8, !dbg !398
  %4386 = load i32, i32* %4188, align 4, !dbg !399
  store i32 %4386, i32* %4363, align 4, !dbg !400
  %4387 = load i64, i64* %4351, align 4, !dbg !401
  %4388 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4386), !dbg !402
  %4389 = zext i32 %4388 to i64, !dbg !403
  %4390 = add i64 %4387, %4389, !dbg !404
  store i64 %4390, i64* %4351, align 4, !dbg !405
  br label %4368, !dbg !406

4391:                                             ; preds = %4361
  %4392 = getelementptr i8, i8* %4364, i32 1, !dbg !407
  store i8* %4392, i8** %4357, align 8, !dbg !408
  %4393 = load i32, i32* %4188, align 4, !dbg !409
  %4394 = trunc i32 %4393 to i8, !dbg !410
  %4395 = getelementptr i8, i8* %4, i8 %4394, !dbg !411
  %4396 = load i8, i8* %4395, align 1, !dbg !412
  %4397 = zext i8 %4396 to i64, !dbg !413
  %4398 = load i64, i64* %4351, align 4, !dbg !414
  %4399 = add i64 %4398, %4397, !dbg !415
  store i64 %4399, i64* %4351, align 4, !dbg !416
  br label %4368, !dbg !417

4400:                                             ; preds = %4368
  %4401 = load i64, i64* %4351, align 4, !dbg !418
  %4402 = load i32, i32* %4203, align 4, !dbg !419
  %4403 = zext i32 %4402 to i64, !dbg !420
  %4404 = icmp uge i64 %4378, %4379, !dbg !421
  %4405 = icmp ugt i64 %4378, %4379, !dbg !422
  %4406 = icmp ne i64 %4401, %4403, !dbg !423
  %4407 = icmp ugt i64 %4401, %4403, !dbg !424
  %4408 = or i1 %4405, %4406, !dbg !425
  %4409 = and i1 %4404, %4408, !dbg !426
  %4410 = or i1 %4409, %4407, !dbg !427
  br i1 %4410, label %4411, label %4415, !dbg !428

4411:                                             ; preds = %4400
  %4412 = load i32, i32* %4195, align 4, !dbg !429
  %4413 = icmp eq i32 %4412, 0, !dbg !430
  br i1 %4413, label %4414, label %4415, !dbg !431

4414:                                             ; preds = %4411
  store i32 0, i32* %4348, align 4, !dbg !432
  store i8* %4360, i8** %4357, align 8, !dbg !433
  br label %4415, !dbg !434

4415:                                             ; preds = %4414, %4411, %4400
  %4416 = load i32, i32* %4348, align 4, !dbg !435
  %4417 = trunc i32 %4416 to i16, !dbg !436
  store i16 %4417, i16* %4206, align 2, !dbg !437
  %4418 = load i8*, i8** %4357, align 8, !dbg !438
  %4419 = ptrtoint i8* %4418 to i64, !dbg !439
  %4420 = load i8*, i8** %4187, align 8, !dbg !440
  %4421 = ptrtoint i8* %4420 to i64, !dbg !441
  %4422 = sub i64 %4419, %4421, !dbg !442
  %4423 = trunc i64 %4422 to i32, !dbg !443
  store i32 %4423, i32* %4202, align 4, !dbg !444
  br label %4425, !dbg !445

4424:                                             ; preds = %4339
  store i32 0, i32* %4188, align 4, !dbg !446
  br label %4425, !dbg !447

4425:                                             ; preds = %4415, %4424
  %4426 = load i16, i16* %4206, align 2, !dbg !448
  %4427 = icmp sle i16 %4426, 1, !dbg !449
  br i1 %4427, label %4428, label %4257, !dbg !450

4428:                                             ; preds = %4425
  %4429 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4191, i32 0, i32 1, !dbg !451
  %4430 = load i16, i16* %4429, align 2, !dbg !451
  %4431 = and i16 %4430, 9216, !dbg !451
  %4432 = icmp ne i16 %4431, 0, !dbg !451
  br i1 %4432, label %4433, label %4434, !dbg !451

4433:                                             ; preds = %4428
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4191), !dbg !451
  br label %4435, !dbg !451

4434:                                             ; preds = %4428
  store i16 1, i16* %4429, align 2, !dbg !451
  br label %4435, !dbg !451

4435:                                             ; preds = %4433, %4434, %4304, %4284, %4323, %4334, %4252, %4253
  call void @llvm.stackrestore(i8* %4180), !dbg !452
  br label %4436, !dbg !74

4436:                                             ; preds = %17, %4435
  %4437 = call i8* @llvm.stacksave(), !dbg !593
  %4438 = alloca i32, align 8, !dbg !596
  %4439 = alloca i32, align 8, !dbg !597
  %4440 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !598
  %4441 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !599
  %4442 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4440, i32 0, i32 1, !dbg !600
  %4443 = load i16, i16* %4442, align 2, !dbg !601
  %4444 = alloca i16, align 8, !dbg !602
  store i16 %4443, i16* %4444, align 2, !dbg !603
  %4445 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4441, i32 0, i32 1, !dbg !604
  %4446 = load i16, i16* %4445, align 2, !dbg !605
  %4447 = alloca i16, align 8, !dbg !606
  store i16 %4446, i16* %4447, align 2, !dbg !607
  %4448 = or i16 %4443, %4446, !dbg !608
  %4449 = and i16 %4448, 1, !dbg !609
  %4450 = icmp ne i16 %4449, 0, !dbg !610
  br i1 %4450, label %4451, label %4452, !dbg !611

4451:                                             ; preds = %4436
  call void @llvm.stackrestore(i8* %4437), !dbg !612
  br label %5705, !dbg !613

4452:                                             ; preds = %4436
  %4453 = and i16 %4443, 2, !dbg !614
  %4454 = and i16 %4443, 44, !dbg !615
  %4455 = icmp eq i16 %4453, 0, !dbg !616
  %4456 = icmp ne i16 %4454, 0, !dbg !617
  %4457 = and i16 %4446, 2, !dbg !618
  %4458 = and i16 %4446, 44, !dbg !619
  %4459 = icmp eq i16 %4457, 0, !dbg !620
  %4460 = icmp ne i16 %4458, 0, !dbg !621
  %4461 = and i1 %4455, %4456, !dbg !622
  br i1 %4461, label %4462, label %4468, !dbg !623

4462:                                             ; preds = %4452
  %4463 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %4440, i8 1, i8 1), !dbg !624
  %4464 = load i16, i16* %4442, align 2, !dbg !625
  %4465 = and i16 %4464, 15936, !dbg !625
  %4466 = and i16 %4443, -15937, !dbg !626
  %4467 = or i16 %4465, %4466, !dbg !627
  store i16 %4467, i16* %4444, align 2, !dbg !628
  br label %4468, !dbg !629

4468:                                             ; preds = %4462, %4452
  %4469 = and i1 %4459, %4460, !dbg !630
  br i1 %4469, label %4470, label %4476, !dbg !631

4470:                                             ; preds = %4468
  %4471 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %4441, i8 1, i8 1), !dbg !632
  %4472 = load i16, i16* %4445, align 2, !dbg !633
  %4473 = and i16 %4472, 15936, !dbg !633
  %4474 = and i16 %4446, -15937, !dbg !634
  %4475 = or i16 %4473, %4474, !dbg !635
  store i16 %4475, i16* %4447, align 2, !dbg !636
  br label %4476, !dbg !637

4476:                                             ; preds = %4470, %4468
  %4477 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 44, !dbg !638
  %4478 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4477, i32 0, i32 6, !dbg !639
  %4479 = bitcast %union.p4union* %4478 to %struct.CollSeq**, !dbg !640
  %4480 = load %struct.CollSeq*, %struct.CollSeq** %4479, align 8, !dbg !641
  %4481 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %4441, %struct.sqlite3_value* %4440, %struct.CollSeq* %4480), !dbg !642
  store i32 %4481, i32* %4438, align 4, !dbg !643
  %4482 = icmp slt i32 %4481, 0, !dbg !644
  br i1 %4482, label %4483, label %4484, !dbg !645

4483:                                             ; preds = %4476
  store i32 1, i32* %4439, align 4, !dbg !646
  br label %4488, !dbg !647

4484:                                             ; preds = %4476
  %4485 = icmp eq i32 %4481, 0, !dbg !698
  br i1 %4485, label %4486, label %4487, !dbg !699

4486:                                             ; preds = %4484
  store i32 0, i32* %4439, align 4, !dbg !700
  br label %4488, !dbg !701

4487:                                             ; preds = %4484
  store i32 1, i32* %4439, align 4, !dbg !702
  br label %4488, !dbg !703

4488:                                             ; preds = %4487, %4486, %4483
  store i16 %4446, i16* %4447, align 2, !dbg !649
  store i16 %4443, i16* %4444, align 2, !dbg !650
  %4489 = load i32, i32* %4439, align 4, !dbg !651
  %4490 = icmp ne i32 %4489, 0, !dbg !652
  call void @llvm.stackrestore(i8* %4437), !dbg !653
  br i1 %4490, label %5705, label %4491, !dbg !654

4491:                                             ; preds = %17, %4488
  %4492 = call i8* @llvm.stacksave(), !dbg !162
  %4493 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %4494 = load i8, i8* %4493, align 1, !dbg !166
  %4495 = alloca i32, align 4, !dbg !167
  store i32 4, i32* %4495, align 4, !dbg !168
  %4496 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !169
  %4497 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %4498 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4496, align 8, !dbg !171
  store %struct.VdbeCursor* %4498, %struct.VdbeCursor** %4497, align 8, !dbg !172
  %4499 = alloca i8*, align 8, !dbg !173
  %4500 = alloca i32, align 4, !dbg !174
  %4501 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4497, i32* %4495), !dbg !175
  %4502 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4497, align 8, !dbg !176
  %4503 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !177
  %4504 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 16, !dbg !178
  %4505 = load i16, i16* %4504, align 2, !dbg !179
  %4506 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 19, !dbg !180
  %4507 = load i32*, i32** %4506, align 8, !dbg !181
  %4508 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 0, !dbg !182
  %4509 = load i8, i8* %4508, align 1, !dbg !183
  %4510 = icmp ne i8 %4509, 3, !dbg !184
  %4511 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 2, !dbg !185
  %4512 = load i8, i8* %4511, align 1, !dbg !186
  %4513 = icmp ne i8 %4512, 0, !dbg !187
  %4514 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 14, !dbg !188
  %4515 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 21, !dbg !189
  %4516 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 22, !dbg !190
  %4517 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 20, !dbg !191
  %4518 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 17, !dbg !192
  %4519 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 9, !dbg !193
  %4520 = load i32, i32* %4519, align 4, !dbg !194
  %4521 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %4522 = load i32, i32* %4521, align 4, !dbg !196
  %4523 = icmp ne i32 %4520, %4522, !dbg !197
  br i1 %4523, label %4524, label %4566, !dbg !198

4524:                                             ; preds = %4491
  br i1 %4513, label %4546, label %4541, !dbg !199

4525:                                             ; preds = %4541, %4548
  %4526 = load i32, i32* %4521, align 4, !dbg !200
  store i32 %4526, i32* %4519, align 4, !dbg !201
  %4527 = load i8*, i8** %4517, align 8, !dbg !202
  %4528 = load i8, i8* %4527, align 1, !dbg !203
  %4529 = icmp sgt i8 %4528, -1, !dbg !206
  br i1 %4529, label %4530, label %4532, !dbg !207

4530:                                             ; preds = %4525
  %4531 = zext i8 %4528 to i32, !dbg !208
  store i32 %4531, i32* %4507, align 4, !dbg !209
  store i32 1, i32* %4514, align 4, !dbg !210
  br label %4535, !dbg !211

4532:                                             ; preds = %4525
  %4533 = call i8 @sqlite3GetVarint32(i8* %4527, i32* %4507), !dbg !212
  %4534 = zext i8 %4533 to i32, !dbg !213
  store i32 %4534, i32* %4514, align 4, !dbg !214
  br label %4535, !dbg !215

4535:                                             ; preds = %4532, %4530
  store i16 0, i16* %4518, align 2, !dbg !216
  %4536 = load i32, i32* %4516, align 4, !dbg !217
  %4537 = load i32, i32* %4507, align 4, !dbg !218
  %4538 = icmp ult i32 %4536, %4537, !dbg !219
  br i1 %4538, label %4540, label %4539, !dbg !220

4539:                                             ; preds = %4535
  store i8* %4527, i8** %4499, align 8, !dbg !221
  br label %4659, !dbg !222

4540:                                             ; preds = %4535
  store i8* null, i8** %4517, align 8, !dbg !223
  store i32 0, i32* %4516, align 4, !dbg !224
  br label %4566, !dbg !225

4541:                                             ; preds = %4524
  %4542 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 12, i32 0, !dbg !226
  %4543 = load %struct.BtCursor*, %struct.BtCursor** %4542, align 8, !dbg !227
  %4544 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4543), !dbg !228
  store i32 %4544, i32* %4515, align 4, !dbg !229
  %4545 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4543, i32* %4516), !dbg !230
  store i8* %4545, i8** %4517, align 8, !dbg !231
  br label %4525, !dbg !232

4546:                                             ; preds = %4524
  %4547 = icmp eq i8 %4509, 3, !dbg !233
  br i1 %4547, label %4548, label %4559, !dbg !234

4548:                                             ; preds = %4546
  %4549 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 10, !dbg !235
  %4550 = load i32, i32* %4549, align 4, !dbg !236
  %4551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4550, !dbg !237
  %4552 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4551, i32 0, i32 1, !dbg !238
  %4553 = load i16, i16* %4552, align 2, !dbg !239
  %4554 = and i16 %4553, 16, !dbg !240
  %4555 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4551, i32 0, i32 4, !dbg !241
  %4556 = load i32, i32* %4555, align 4, !dbg !242
  store i32 %4556, i32* %4515, align 4, !dbg !243
  store i32 %4556, i32* %4516, align 4, !dbg !244
  %4557 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4551, i32 0, i32 5, !dbg !245
  %4558 = load i8*, i8** %4557, align 8, !dbg !246
  store i8* %4558, i8** %4517, align 8, !dbg !247
  br label %4525, !dbg !248

4559:                                             ; preds = %4546
  %4560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 1, !dbg !249
  %4561 = load i16, i16* %4560, align 2, !dbg !249
  %4562 = and i16 %4561, 9216, !dbg !249
  %4563 = icmp ne i16 %4562, 0, !dbg !249
  br i1 %4563, label %4564, label %4565, !dbg !249

4564:                                             ; preds = %4559
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4503), !dbg !249
  br label %4747, !dbg !249

4565:                                             ; preds = %4559
  store i16 1, i16* %4560, align 2, !dbg !249
  br label %4747, !dbg !249

4566:                                             ; preds = %4540, %4491
  %4567 = load i16, i16* %4518, align 2, !dbg !250
  %4568 = icmp ule i16 %4567, 1, !dbg !251
  br i1 %4568, label %4651, label %4648, !dbg !252

4569:                                             ; preds = %4648, %4737
  %4570 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 1, !dbg !253
  %4571 = load i16, i16* %4570, align 2, !dbg !254
  %4572 = and i16 9216, %4571, !dbg !255
  %4573 = icmp eq i16 0, %4572, !dbg !256
  br i1 %4573, label %4574, label %4578, !dbg !257

4574:                                             ; preds = %4569
  %4575 = icmp ne i16 %4572, 0, !dbg !258
  br i1 %4575, label %4576, label %4577, !dbg !258

4576:                                             ; preds = %4574
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4503), !dbg !258
  br label %4578, !dbg !258

4577:                                             ; preds = %4574
  store i16 1, i16* %4570, align 2, !dbg !258
  br label %4578, !dbg !258

4578:                                             ; preds = %4576, %4577, %4569
  %4579 = load i32, i32* %4500, align 4, !dbg !259
  %4580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 23, i32 1, !dbg !260
  %4581 = load i32, i32* %4580, align 4, !dbg !261
  %4582 = load i32, i32* %4516, align 4, !dbg !262
  %4583 = getelementptr i32, i32* %4507, i32 2, !dbg !263
  %4584 = load i32, i32* %4583, align 4, !dbg !264
  %4585 = icmp sge i32 %4582, %4584, !dbg !265
  br i1 %4585, label %4586, label %4626, !dbg !266

4586:                                             ; preds = %4578
  %4587 = load i8*, i8** %4517, align 8, !dbg !267
  %4588 = ptrtoint i8* %4587 to i64, !dbg !268
  %4589 = getelementptr i32, i32* %4507, i32 1, !dbg !509
  %4590 = load i32, i32* %4589, align 4, !dbg !269
  %4591 = zext i32 %4590 to i64, !dbg !270
  %4592 = add i64 %4588, %4591, !dbg !271
  %4593 = inttoptr i64 %4592 to i8*, !dbg !272
  store i8* %4593, i8** %4499, align 8, !dbg !273
  %4594 = load i32, i32* %4500, align 4, !dbg !274
  %4595 = icmp ult i32 %4594, 12, !dbg !275
  br i1 %4595, label %4596, label %4598, !dbg !276

4596:                                             ; preds = %4586
  %4597 = call i32 @sqlite3VdbeSerialGet(i8* %4593, i32 %4594, %struct.sqlite3_value* %4503), !dbg !277
  br label %4747, !dbg !278

4598:                                             ; preds = %4586
  %4599 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %4599, align 2, !dbg !280
  %4600 = getelementptr i16, i16* %4599, i32 1, !dbg !281
  store i16 514, i16* %4600, align 2, !dbg !282
  %4601 = load i32, i32* %4500, align 4, !dbg !283
  %4602 = sub i32 %4601, 12, !dbg !284
  %4603 = lshr i32 %4602, 1, !dbg !285
  %4604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 4, !dbg !286
  store i32 %4603, i32* %4604, align 4, !dbg !287
  %4605 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 2, !dbg !288
  store i8 %4494, i8* %4605, align 1, !dbg !289
  %4606 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 5, !dbg !290
  %4607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 7, !dbg !291
  %4608 = load i32, i32* %4607, align 4, !dbg !292
  %4609 = add i32 %4603, 2, !dbg !293
  %4610 = icmp slt i32 %4608, %4609, !dbg !294
  br i1 %4610, label %4611, label %4613, !dbg !295

4611:                                             ; preds = %4598
  store i16 1, i16* %4570, align 2, !dbg !296
  %4612 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4503, i32 %4609, i32 0), !dbg !297
  br label %4616, !dbg !298

4613:                                             ; preds = %4598
  %4614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 6, !dbg !299
  %4615 = load i8*, i8** %4614, align 8, !dbg !300
  store i8* %4615, i8** %4606, align 8, !dbg !301
  br label %4616, !dbg !302

4616:                                             ; preds = %4613, %4611
  %4617 = zext i32 %4603 to i64, !dbg !303
  %4618 = load i8*, i8** %4606, align 8, !dbg !304
  %4619 = load i8*, i8** %4499, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4618, i8* %4619, i64 %4617, i1 false), !dbg !306
  %4620 = getelementptr i8, i8* %4618, i32 %4603, !dbg !307
  store i8 0, i8* %4620, align 1, !dbg !308
  %4621 = add i32 %4603, 1, !dbg !309
  %4622 = getelementptr i8, i8* %4618, i32 %4621, !dbg !310
  store i8 0, i8* %4622, align 1, !dbg !311
  %4623 = and i32 %4601, 1, !dbg !312
  %4624 = getelementptr i16, i16* %4599, i32 %4623, !dbg !313
  %4625 = load i16, i16* %4624, align 2, !dbg !314
  store i16 %4625, i16* %4570, align 2, !dbg !315
  br label %4747, !dbg !316

4626:                                             ; preds = %4578
  %4627 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 2, !dbg !317
  store i8 %4494, i8* %4627, align 1, !dbg !318
  %4628 = load i32, i32* %4500, align 4, !dbg !319
  %4629 = and i32 %4628, 1, !dbg !320
  %4630 = icmp eq i32 %4629, 0, !dbg !321
  %4631 = icmp sge i32 %4628, 12, !dbg !322
  %4632 = and i1 %4631, %4630, !dbg !323
  %4633 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4628), !dbg !324
  %4634 = icmp eq i32 %4633, 0, !dbg !325
  br i1 %4634, label %4646, label %4635, !dbg !326

4635:                                             ; preds = %4626
  %4636 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 12, i32 0, !dbg !327
  %4637 = load %struct.BtCursor*, %struct.BtCursor** %4636, align 8, !dbg !328
  %4638 = getelementptr i32, i32* %4507, i32 1, !dbg !510
  %4639 = load i32, i32* %4638, align 4, !dbg !329
  %4640 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4637, i32 %4639, i32 %4633, %struct.sqlite3_value* %4503), !dbg !330
  %4641 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 5, !dbg !331
  %4642 = load i8*, i8** %4641, align 8, !dbg !332
  %4643 = call i32 @sqlite3VdbeSerialGet(i8* %4642, i32 %4628, %struct.sqlite3_value* %4503), !dbg !333
  %4644 = load i16, i16* %4570, align 2, !dbg !334
  %4645 = and i16 %4644, -4097, !dbg !335
  store i16 %4645, i16* %4570, align 2, !dbg !336
  br label %4747, !dbg !337

4646:                                             ; preds = %4626
  %4647 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4628, %struct.sqlite3_value* %4503), !dbg !338
  br label %4747, !dbg !339

4648:                                             ; preds = %4566
  %4649 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 23, i32 1, !dbg !340
  %4650 = load i32, i32* %4649, align 4, !dbg !341
  store i32 %4650, i32* %4500, align 4, !dbg !342
  br label %4569, !dbg !343

4651:                                             ; preds = %4566
  %4652 = load i32, i32* %4514, align 4, !dbg !344
  %4653 = load i32, i32* %4507, align 4, !dbg !345
  %4654 = icmp ult i32 %4652, %4653, !dbg !346
  br i1 %4654, label %4655, label %4736, !dbg !347

4655:                                             ; preds = %4651
  %4656 = load i8*, i8** %4517, align 8, !dbg !348
  %4657 = icmp eq i8* %4656, null, !dbg !349
  br i1 %4657, label %4659, label %4658, !dbg !350

4658:                                             ; preds = %4655
  store i8* %4656, i8** %4499, align 8, !dbg !351
  br label %4659, !dbg !352

4659:                                             ; preds = %4658, %4655, %4539
  %4660 = alloca i32, align 4, !dbg !353
  %4661 = load i16, i16* %4518, align 2, !dbg !354
  %4662 = zext i16 %4661 to i32, !dbg !355
  store i32 %4662, i32* %4660, align 4, !dbg !356
  %4663 = alloca i64, align 8, !dbg !357
  %4664 = getelementptr i32, i32* %4507, i32 %4662, !dbg !358
  %4665 = load i32, i32* %4664, align 4, !dbg !359
  %4666 = zext i32 %4665 to i64, !dbg !360
  store i64 %4666, i64* %4663, align 4, !dbg !361
  %4667 = load i8*, i8** %4499, align 8, !dbg !362
  %4668 = load i32, i32* %4514, align 4, !dbg !363
  %4669 = alloca i8*, align 8, !dbg !364
  %4670 = getelementptr i8, i8* %4667, i32 %4668, !dbg !365
  store i8* %4670, i8** %4669, align 8, !dbg !366
  %4671 = load i32, i32* %4507, align 4, !dbg !367
  %4672 = getelementptr i8, i8* %4667, i32 %4671, !dbg !368
  br label %4673, !dbg !369

4673:                                             ; preds = %4680, %4659
  %4674 = load i32, i32* %4660, align 4, !dbg !370
  %4675 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4502, i32 0, i32 23, i32 %4674, !dbg !371
  %4676 = load i8*, i8** %4669, align 8, !dbg !372
  %4677 = load i8, i8* %4676, align 1, !dbg !373
  %4678 = zext i8 %4677 to i32, !dbg !374
  store i32 %4678, i32* %4500, align 4, !dbg !375
  store i32 %4678, i32* %4675, align 4, !dbg !376
  %4679 = icmp sgt i8 %4677, -1, !dbg !377
  br i1 %4679, label %4703, label %4694, !dbg !378

4680:                                             ; preds = %4694, %4703
  %4681 = load i32, i32* %4660, align 4, !dbg !379
  %4682 = add i32 %4681, 1, !dbg !380
  store i32 %4682, i32* %4660, align 4, !dbg !381
  %4683 = load i64, i64* %4663, align 4, !dbg !382
  %4684 = and i64 4294967295, %4683, !dbg !383
  %4685 = trunc i64 %4684 to i32, !dbg !384
  %4686 = getelementptr i32, i32* %4507, i32 %4682, !dbg !385
  store i32 %4685, i32* %4686, align 4, !dbg !386
  %4687 = load i32, i32* %4660, align 4, !dbg !387
  %4688 = icmp sle i32 %4687, 1, !dbg !388
  %4689 = load i8*, i8** %4669, align 8, !dbg !389
  %4690 = ptrtoint i8* %4689 to i64, !dbg !390
  %4691 = ptrtoint i8* %4672 to i64, !dbg !391
  %4692 = icmp ult i64 %4690, %4691, !dbg !392
  %4693 = and i1 %4688, %4692, !dbg !393
  br i1 %4693, label %4673, label %4712, !dbg !394

4694:                                             ; preds = %4673
  %4695 = load i8*, i8** %4669, align 8, !dbg !395
  %4696 = call i8 @sqlite3GetVarint32(i8* %4695, i32* %4500), !dbg !396
  %4697 = getelementptr i8, i8* %4695, i8 %4696, !dbg !397
  store i8* %4697, i8** %4669, align 8, !dbg !398
  %4698 = load i32, i32* %4500, align 4, !dbg !399
  store i32 %4698, i32* %4675, align 4, !dbg !400
  %4699 = load i64, i64* %4663, align 4, !dbg !401
  %4700 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4698), !dbg !402
  %4701 = zext i32 %4700 to i64, !dbg !403
  %4702 = add i64 %4699, %4701, !dbg !404
  store i64 %4702, i64* %4663, align 4, !dbg !405
  br label %4680, !dbg !406

4703:                                             ; preds = %4673
  %4704 = getelementptr i8, i8* %4676, i32 1, !dbg !407
  store i8* %4704, i8** %4669, align 8, !dbg !408
  %4705 = load i32, i32* %4500, align 4, !dbg !409
  %4706 = trunc i32 %4705 to i8, !dbg !410
  %4707 = getelementptr i8, i8* %4, i8 %4706, !dbg !411
  %4708 = load i8, i8* %4707, align 1, !dbg !412
  %4709 = zext i8 %4708 to i64, !dbg !413
  %4710 = load i64, i64* %4663, align 4, !dbg !414
  %4711 = add i64 %4710, %4709, !dbg !415
  store i64 %4711, i64* %4663, align 4, !dbg !416
  br label %4680, !dbg !417

4712:                                             ; preds = %4680
  %4713 = load i64, i64* %4663, align 4, !dbg !418
  %4714 = load i32, i32* %4515, align 4, !dbg !419
  %4715 = zext i32 %4714 to i64, !dbg !420
  %4716 = icmp uge i64 %4690, %4691, !dbg !421
  %4717 = icmp ugt i64 %4690, %4691, !dbg !422
  %4718 = icmp ne i64 %4713, %4715, !dbg !423
  %4719 = icmp ugt i64 %4713, %4715, !dbg !424
  %4720 = or i1 %4717, %4718, !dbg !425
  %4721 = and i1 %4716, %4720, !dbg !426
  %4722 = or i1 %4721, %4719, !dbg !427
  br i1 %4722, label %4723, label %4727, !dbg !428

4723:                                             ; preds = %4712
  %4724 = load i32, i32* %4507, align 4, !dbg !429
  %4725 = icmp eq i32 %4724, 0, !dbg !430
  br i1 %4725, label %4726, label %4727, !dbg !431

4726:                                             ; preds = %4723
  store i32 0, i32* %4660, align 4, !dbg !432
  store i8* %4672, i8** %4669, align 8, !dbg !433
  br label %4727, !dbg !434

4727:                                             ; preds = %4726, %4723, %4712
  %4728 = load i32, i32* %4660, align 4, !dbg !435
  %4729 = trunc i32 %4728 to i16, !dbg !436
  store i16 %4729, i16* %4518, align 2, !dbg !437
  %4730 = load i8*, i8** %4669, align 8, !dbg !438
  %4731 = ptrtoint i8* %4730 to i64, !dbg !439
  %4732 = load i8*, i8** %4499, align 8, !dbg !440
  %4733 = ptrtoint i8* %4732 to i64, !dbg !441
  %4734 = sub i64 %4731, %4733, !dbg !442
  %4735 = trunc i64 %4734 to i32, !dbg !443
  store i32 %4735, i32* %4514, align 4, !dbg !444
  br label %4737, !dbg !445

4736:                                             ; preds = %4651
  store i32 0, i32* %4500, align 4, !dbg !446
  br label %4737, !dbg !447

4737:                                             ; preds = %4727, %4736
  %4738 = load i16, i16* %4518, align 2, !dbg !448
  %4739 = icmp sle i16 %4738, 1, !dbg !449
  br i1 %4739, label %4740, label %4569, !dbg !450

4740:                                             ; preds = %4737
  %4741 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4503, i32 0, i32 1, !dbg !451
  %4742 = load i16, i16* %4741, align 2, !dbg !451
  %4743 = and i16 %4742, 9216, !dbg !451
  %4744 = icmp ne i16 %4743, 0, !dbg !451
  br i1 %4744, label %4745, label %4746, !dbg !451

4745:                                             ; preds = %4740
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4503), !dbg !451
  br label %4747, !dbg !451

4746:                                             ; preds = %4740
  store i16 1, i16* %4741, align 2, !dbg !451
  br label %4747, !dbg !451

4747:                                             ; preds = %4745, %4746, %4616, %4596, %4635, %4646, %4564, %4565
  call void @llvm.stackrestore(i8* %4492), !dbg !452
  br label %4748, !dbg !74

4748:                                             ; preds = %17, %4747
  %4749 = call i8* @llvm.stacksave(), !dbg !162
  %4750 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %4751 = load i8, i8* %4750, align 1, !dbg !166
  %4752 = alloca i32, align 4, !dbg !167
  store i32 2, i32* %4752, align 4, !dbg !168
  %4753 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !169
  %4754 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %4755 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4753, align 8, !dbg !171
  store %struct.VdbeCursor* %4755, %struct.VdbeCursor** %4754, align 8, !dbg !172
  %4756 = alloca i8*, align 8, !dbg !173
  %4757 = alloca i32, align 4, !dbg !174
  %4758 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4754, i32* %4752), !dbg !175
  %4759 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4754, align 8, !dbg !176
  %4760 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !177
  %4761 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 16, !dbg !178
  %4762 = load i16, i16* %4761, align 2, !dbg !179
  %4763 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 19, !dbg !180
  %4764 = load i32*, i32** %4763, align 8, !dbg !181
  %4765 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 0, !dbg !182
  %4766 = load i8, i8* %4765, align 1, !dbg !183
  %4767 = icmp ne i8 %4766, 3, !dbg !184
  %4768 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 2, !dbg !185
  %4769 = load i8, i8* %4768, align 1, !dbg !186
  %4770 = icmp ne i8 %4769, 0, !dbg !187
  %4771 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 14, !dbg !188
  %4772 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 21, !dbg !189
  %4773 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 22, !dbg !190
  %4774 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 20, !dbg !191
  %4775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 17, !dbg !192
  %4776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 9, !dbg !193
  %4777 = load i32, i32* %4776, align 4, !dbg !194
  %4778 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %4779 = load i32, i32* %4778, align 4, !dbg !196
  %4780 = icmp ne i32 %4777, %4779, !dbg !197
  br i1 %4780, label %4781, label %4823, !dbg !198

4781:                                             ; preds = %4748
  br i1 %4770, label %4803, label %4798, !dbg !199

4782:                                             ; preds = %4798, %4805
  %4783 = load i32, i32* %4778, align 4, !dbg !200
  store i32 %4783, i32* %4776, align 4, !dbg !201
  %4784 = load i8*, i8** %4774, align 8, !dbg !202
  %4785 = load i8, i8* %4784, align 1, !dbg !203
  %4786 = icmp sgt i8 %4785, -1, !dbg !206
  br i1 %4786, label %4787, label %4789, !dbg !207

4787:                                             ; preds = %4782
  %4788 = zext i8 %4785 to i32, !dbg !208
  store i32 %4788, i32* %4764, align 4, !dbg !209
  store i32 1, i32* %4771, align 4, !dbg !210
  br label %4792, !dbg !211

4789:                                             ; preds = %4782
  %4790 = call i8 @sqlite3GetVarint32(i8* %4784, i32* %4764), !dbg !212
  %4791 = zext i8 %4790 to i32, !dbg !213
  store i32 %4791, i32* %4771, align 4, !dbg !214
  br label %4792, !dbg !215

4792:                                             ; preds = %4789, %4787
  store i16 0, i16* %4775, align 2, !dbg !216
  %4793 = load i32, i32* %4773, align 4, !dbg !217
  %4794 = load i32, i32* %4764, align 4, !dbg !218
  %4795 = icmp ult i32 %4793, %4794, !dbg !219
  br i1 %4795, label %4797, label %4796, !dbg !220

4796:                                             ; preds = %4792
  store i8* %4784, i8** %4756, align 8, !dbg !221
  br label %4916, !dbg !222

4797:                                             ; preds = %4792
  store i8* null, i8** %4774, align 8, !dbg !223
  store i32 0, i32* %4773, align 4, !dbg !224
  br label %4823, !dbg !225

4798:                                             ; preds = %4781
  %4799 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 12, i32 0, !dbg !226
  %4800 = load %struct.BtCursor*, %struct.BtCursor** %4799, align 8, !dbg !227
  %4801 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4800), !dbg !228
  store i32 %4801, i32* %4772, align 4, !dbg !229
  %4802 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4800, i32* %4773), !dbg !230
  store i8* %4802, i8** %4774, align 8, !dbg !231
  br label %4782, !dbg !232

4803:                                             ; preds = %4781
  %4804 = icmp eq i8 %4766, 3, !dbg !233
  br i1 %4804, label %4805, label %4816, !dbg !234

4805:                                             ; preds = %4803
  %4806 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 10, !dbg !235
  %4807 = load i32, i32* %4806, align 4, !dbg !236
  %4808 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4807, !dbg !237
  %4809 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4808, i32 0, i32 1, !dbg !238
  %4810 = load i16, i16* %4809, align 2, !dbg !239
  %4811 = and i16 %4810, 16, !dbg !240
  %4812 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4808, i32 0, i32 4, !dbg !241
  %4813 = load i32, i32* %4812, align 4, !dbg !242
  store i32 %4813, i32* %4772, align 4, !dbg !243
  store i32 %4813, i32* %4773, align 4, !dbg !244
  %4814 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4808, i32 0, i32 5, !dbg !245
  %4815 = load i8*, i8** %4814, align 8, !dbg !246
  store i8* %4815, i8** %4774, align 8, !dbg !247
  br label %4782, !dbg !248

4816:                                             ; preds = %4803
  %4817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 1, !dbg !249
  %4818 = load i16, i16* %4817, align 2, !dbg !249
  %4819 = and i16 %4818, 9216, !dbg !249
  %4820 = icmp ne i16 %4819, 0, !dbg !249
  br i1 %4820, label %4821, label %4822, !dbg !249

4821:                                             ; preds = %4816
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4760), !dbg !249
  br label %5004, !dbg !249

4822:                                             ; preds = %4816
  store i16 1, i16* %4817, align 2, !dbg !249
  br label %5004, !dbg !249

4823:                                             ; preds = %4797, %4748
  %4824 = load i16, i16* %4775, align 2, !dbg !250
  %4825 = icmp ule i16 %4824, 5, !dbg !251
  br i1 %4825, label %4908, label %4905, !dbg !252

4826:                                             ; preds = %4905, %4994
  %4827 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 1, !dbg !253
  %4828 = load i16, i16* %4827, align 2, !dbg !254
  %4829 = and i16 9216, %4828, !dbg !255
  %4830 = icmp eq i16 0, %4829, !dbg !256
  br i1 %4830, label %4831, label %4835, !dbg !257

4831:                                             ; preds = %4826
  %4832 = icmp ne i16 %4829, 0, !dbg !258
  br i1 %4832, label %4833, label %4834, !dbg !258

4833:                                             ; preds = %4831
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4760), !dbg !258
  br label %4835, !dbg !258

4834:                                             ; preds = %4831
  store i16 1, i16* %4827, align 2, !dbg !258
  br label %4835, !dbg !258

4835:                                             ; preds = %4833, %4834, %4826
  %4836 = load i32, i32* %4757, align 4, !dbg !259
  %4837 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 23, i32 5, !dbg !260
  %4838 = load i32, i32* %4837, align 4, !dbg !261
  %4839 = load i32, i32* %4773, align 4, !dbg !262
  %4840 = getelementptr i32, i32* %4764, i32 6, !dbg !263
  %4841 = load i32, i32* %4840, align 4, !dbg !264
  %4842 = icmp sge i32 %4839, %4841, !dbg !265
  br i1 %4842, label %4843, label %4883, !dbg !266

4843:                                             ; preds = %4835
  %4844 = load i8*, i8** %4774, align 8, !dbg !267
  %4845 = ptrtoint i8* %4844 to i64, !dbg !268
  %4846 = getelementptr i32, i32* %4764, i32 5, !dbg !509
  %4847 = load i32, i32* %4846, align 4, !dbg !269
  %4848 = zext i32 %4847 to i64, !dbg !270
  %4849 = add i64 %4845, %4848, !dbg !271
  %4850 = inttoptr i64 %4849 to i8*, !dbg !272
  store i8* %4850, i8** %4756, align 8, !dbg !273
  %4851 = load i32, i32* %4757, align 4, !dbg !274
  %4852 = icmp ult i32 %4851, 12, !dbg !275
  br i1 %4852, label %4853, label %4855, !dbg !276

4853:                                             ; preds = %4843
  %4854 = call i32 @sqlite3VdbeSerialGet(i8* %4850, i32 %4851, %struct.sqlite3_value* %4760), !dbg !277
  br label %5004, !dbg !278

4855:                                             ; preds = %4843
  %4856 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %4856, align 2, !dbg !280
  %4857 = getelementptr i16, i16* %4856, i32 1, !dbg !281
  store i16 514, i16* %4857, align 2, !dbg !282
  %4858 = load i32, i32* %4757, align 4, !dbg !283
  %4859 = sub i32 %4858, 12, !dbg !284
  %4860 = lshr i32 %4859, 1, !dbg !285
  %4861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 4, !dbg !286
  store i32 %4860, i32* %4861, align 4, !dbg !287
  %4862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 2, !dbg !288
  store i8 %4751, i8* %4862, align 1, !dbg !289
  %4863 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 5, !dbg !290
  %4864 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 7, !dbg !291
  %4865 = load i32, i32* %4864, align 4, !dbg !292
  %4866 = add i32 %4860, 2, !dbg !293
  %4867 = icmp slt i32 %4865, %4866, !dbg !294
  br i1 %4867, label %4868, label %4870, !dbg !295

4868:                                             ; preds = %4855
  store i16 1, i16* %4827, align 2, !dbg !296
  %4869 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4760, i32 %4866, i32 0), !dbg !297
  br label %4873, !dbg !298

4870:                                             ; preds = %4855
  %4871 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 6, !dbg !299
  %4872 = load i8*, i8** %4871, align 8, !dbg !300
  store i8* %4872, i8** %4863, align 8, !dbg !301
  br label %4873, !dbg !302

4873:                                             ; preds = %4870, %4868
  %4874 = zext i32 %4860 to i64, !dbg !303
  %4875 = load i8*, i8** %4863, align 8, !dbg !304
  %4876 = load i8*, i8** %4756, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4875, i8* %4876, i64 %4874, i1 false), !dbg !306
  %4877 = getelementptr i8, i8* %4875, i32 %4860, !dbg !307
  store i8 0, i8* %4877, align 1, !dbg !308
  %4878 = add i32 %4860, 1, !dbg !309
  %4879 = getelementptr i8, i8* %4875, i32 %4878, !dbg !310
  store i8 0, i8* %4879, align 1, !dbg !311
  %4880 = and i32 %4858, 1, !dbg !312
  %4881 = getelementptr i16, i16* %4856, i32 %4880, !dbg !313
  %4882 = load i16, i16* %4881, align 2, !dbg !314
  store i16 %4882, i16* %4827, align 2, !dbg !315
  br label %5004, !dbg !316

4883:                                             ; preds = %4835
  %4884 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 2, !dbg !317
  store i8 %4751, i8* %4884, align 1, !dbg !318
  %4885 = load i32, i32* %4757, align 4, !dbg !319
  %4886 = and i32 %4885, 1, !dbg !320
  %4887 = icmp eq i32 %4886, 0, !dbg !321
  %4888 = icmp sge i32 %4885, 12, !dbg !322
  %4889 = and i1 %4888, %4887, !dbg !323
  %4890 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4885), !dbg !324
  %4891 = icmp eq i32 %4890, 0, !dbg !325
  br i1 %4891, label %4903, label %4892, !dbg !326

4892:                                             ; preds = %4883
  %4893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 12, i32 0, !dbg !327
  %4894 = load %struct.BtCursor*, %struct.BtCursor** %4893, align 8, !dbg !328
  %4895 = getelementptr i32, i32* %4764, i32 5, !dbg !510
  %4896 = load i32, i32* %4895, align 4, !dbg !329
  %4897 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4894, i32 %4896, i32 %4890, %struct.sqlite3_value* %4760), !dbg !330
  %4898 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 5, !dbg !331
  %4899 = load i8*, i8** %4898, align 8, !dbg !332
  %4900 = call i32 @sqlite3VdbeSerialGet(i8* %4899, i32 %4885, %struct.sqlite3_value* %4760), !dbg !333
  %4901 = load i16, i16* %4827, align 2, !dbg !334
  %4902 = and i16 %4901, -4097, !dbg !335
  store i16 %4902, i16* %4827, align 2, !dbg !336
  br label %5004, !dbg !337

4903:                                             ; preds = %4883
  %4904 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4885, %struct.sqlite3_value* %4760), !dbg !338
  br label %5004, !dbg !339

4905:                                             ; preds = %4823
  %4906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 23, i32 5, !dbg !340
  %4907 = load i32, i32* %4906, align 4, !dbg !341
  store i32 %4907, i32* %4757, align 4, !dbg !342
  br label %4826, !dbg !343

4908:                                             ; preds = %4823
  %4909 = load i32, i32* %4771, align 4, !dbg !344
  %4910 = load i32, i32* %4764, align 4, !dbg !345
  %4911 = icmp ult i32 %4909, %4910, !dbg !346
  br i1 %4911, label %4912, label %4993, !dbg !347

4912:                                             ; preds = %4908
  %4913 = load i8*, i8** %4774, align 8, !dbg !348
  %4914 = icmp eq i8* %4913, null, !dbg !349
  br i1 %4914, label %4916, label %4915, !dbg !350

4915:                                             ; preds = %4912
  store i8* %4913, i8** %4756, align 8, !dbg !351
  br label %4916, !dbg !352

4916:                                             ; preds = %4915, %4912, %4796
  %4917 = alloca i32, align 4, !dbg !353
  %4918 = load i16, i16* %4775, align 2, !dbg !354
  %4919 = zext i16 %4918 to i32, !dbg !355
  store i32 %4919, i32* %4917, align 4, !dbg !356
  %4920 = alloca i64, align 8, !dbg !357
  %4921 = getelementptr i32, i32* %4764, i32 %4919, !dbg !358
  %4922 = load i32, i32* %4921, align 4, !dbg !359
  %4923 = zext i32 %4922 to i64, !dbg !360
  store i64 %4923, i64* %4920, align 4, !dbg !361
  %4924 = load i8*, i8** %4756, align 8, !dbg !362
  %4925 = load i32, i32* %4771, align 4, !dbg !363
  %4926 = alloca i8*, align 8, !dbg !364
  %4927 = getelementptr i8, i8* %4924, i32 %4925, !dbg !365
  store i8* %4927, i8** %4926, align 8, !dbg !366
  %4928 = load i32, i32* %4764, align 4, !dbg !367
  %4929 = getelementptr i8, i8* %4924, i32 %4928, !dbg !368
  br label %4930, !dbg !369

4930:                                             ; preds = %4937, %4916
  %4931 = load i32, i32* %4917, align 4, !dbg !370
  %4932 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4759, i32 0, i32 23, i32 %4931, !dbg !371
  %4933 = load i8*, i8** %4926, align 8, !dbg !372
  %4934 = load i8, i8* %4933, align 1, !dbg !373
  %4935 = zext i8 %4934 to i32, !dbg !374
  store i32 %4935, i32* %4757, align 4, !dbg !375
  store i32 %4935, i32* %4932, align 4, !dbg !376
  %4936 = icmp sgt i8 %4934, -1, !dbg !377
  br i1 %4936, label %4960, label %4951, !dbg !378

4937:                                             ; preds = %4951, %4960
  %4938 = load i32, i32* %4917, align 4, !dbg !379
  %4939 = add i32 %4938, 1, !dbg !380
  store i32 %4939, i32* %4917, align 4, !dbg !381
  %4940 = load i64, i64* %4920, align 4, !dbg !382
  %4941 = and i64 4294967295, %4940, !dbg !383
  %4942 = trunc i64 %4941 to i32, !dbg !384
  %4943 = getelementptr i32, i32* %4764, i32 %4939, !dbg !385
  store i32 %4942, i32* %4943, align 4, !dbg !386
  %4944 = load i32, i32* %4917, align 4, !dbg !387
  %4945 = icmp sle i32 %4944, 5, !dbg !388
  %4946 = load i8*, i8** %4926, align 8, !dbg !389
  %4947 = ptrtoint i8* %4946 to i64, !dbg !390
  %4948 = ptrtoint i8* %4929 to i64, !dbg !391
  %4949 = icmp ult i64 %4947, %4948, !dbg !392
  %4950 = and i1 %4945, %4949, !dbg !393
  br i1 %4950, label %4930, label %4969, !dbg !394

4951:                                             ; preds = %4930
  %4952 = load i8*, i8** %4926, align 8, !dbg !395
  %4953 = call i8 @sqlite3GetVarint32(i8* %4952, i32* %4757), !dbg !396
  %4954 = getelementptr i8, i8* %4952, i8 %4953, !dbg !397
  store i8* %4954, i8** %4926, align 8, !dbg !398
  %4955 = load i32, i32* %4757, align 4, !dbg !399
  store i32 %4955, i32* %4932, align 4, !dbg !400
  %4956 = load i64, i64* %4920, align 4, !dbg !401
  %4957 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4955), !dbg !402
  %4958 = zext i32 %4957 to i64, !dbg !403
  %4959 = add i64 %4956, %4958, !dbg !404
  store i64 %4959, i64* %4920, align 4, !dbg !405
  br label %4937, !dbg !406

4960:                                             ; preds = %4930
  %4961 = getelementptr i8, i8* %4933, i32 1, !dbg !407
  store i8* %4961, i8** %4926, align 8, !dbg !408
  %4962 = load i32, i32* %4757, align 4, !dbg !409
  %4963 = trunc i32 %4962 to i8, !dbg !410
  %4964 = getelementptr i8, i8* %4, i8 %4963, !dbg !411
  %4965 = load i8, i8* %4964, align 1, !dbg !412
  %4966 = zext i8 %4965 to i64, !dbg !413
  %4967 = load i64, i64* %4920, align 4, !dbg !414
  %4968 = add i64 %4967, %4966, !dbg !415
  store i64 %4968, i64* %4920, align 4, !dbg !416
  br label %4937, !dbg !417

4969:                                             ; preds = %4937
  %4970 = load i64, i64* %4920, align 4, !dbg !418
  %4971 = load i32, i32* %4772, align 4, !dbg !419
  %4972 = zext i32 %4971 to i64, !dbg !420
  %4973 = icmp uge i64 %4947, %4948, !dbg !421
  %4974 = icmp ugt i64 %4947, %4948, !dbg !422
  %4975 = icmp ne i64 %4970, %4972, !dbg !423
  %4976 = icmp ugt i64 %4970, %4972, !dbg !424
  %4977 = or i1 %4974, %4975, !dbg !425
  %4978 = and i1 %4973, %4977, !dbg !426
  %4979 = or i1 %4978, %4976, !dbg !427
  br i1 %4979, label %4980, label %4984, !dbg !428

4980:                                             ; preds = %4969
  %4981 = load i32, i32* %4764, align 4, !dbg !429
  %4982 = icmp eq i32 %4981, 0, !dbg !430
  br i1 %4982, label %4983, label %4984, !dbg !431

4983:                                             ; preds = %4980
  store i32 0, i32* %4917, align 4, !dbg !432
  store i8* %4929, i8** %4926, align 8, !dbg !433
  br label %4984, !dbg !434

4984:                                             ; preds = %4983, %4980, %4969
  %4985 = load i32, i32* %4917, align 4, !dbg !435
  %4986 = trunc i32 %4985 to i16, !dbg !436
  store i16 %4986, i16* %4775, align 2, !dbg !437
  %4987 = load i8*, i8** %4926, align 8, !dbg !438
  %4988 = ptrtoint i8* %4987 to i64, !dbg !439
  %4989 = load i8*, i8** %4756, align 8, !dbg !440
  %4990 = ptrtoint i8* %4989 to i64, !dbg !441
  %4991 = sub i64 %4988, %4990, !dbg !442
  %4992 = trunc i64 %4991 to i32, !dbg !443
  store i32 %4992, i32* %4771, align 4, !dbg !444
  br label %4994, !dbg !445

4993:                                             ; preds = %4908
  store i32 0, i32* %4757, align 4, !dbg !446
  br label %4994, !dbg !447

4994:                                             ; preds = %4984, %4993
  %4995 = load i16, i16* %4775, align 2, !dbg !448
  %4996 = icmp sle i16 %4995, 5, !dbg !449
  br i1 %4996, label %4997, label %4826, !dbg !450

4997:                                             ; preds = %4994
  %4998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4760, i32 0, i32 1, !dbg !451
  %4999 = load i16, i16* %4998, align 2, !dbg !451
  %5000 = and i16 %4999, 9216, !dbg !451
  %5001 = icmp ne i16 %5000, 0, !dbg !451
  br i1 %5001, label %5002, label %5003, !dbg !451

5002:                                             ; preds = %4997
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4760), !dbg !451
  br label %5004, !dbg !451

5003:                                             ; preds = %4997
  store i16 1, i16* %4998, align 2, !dbg !451
  br label %5004, !dbg !451

5004:                                             ; preds = %5002, %5003, %4873, %4853, %4892, %4903, %4821, %4822
  call void @llvm.stackrestore(i8* %4749), !dbg !452
  br label %5005, !dbg !74

5005:                                             ; preds = %17, %5004
  %5006 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !749
  %5007 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5006, i32 0, i32 1, !dbg !752
  %5008 = load i16, i16* %5007, align 2, !dbg !753
  %5009 = and i16 %5008, 36, !dbg !754
  %5010 = icmp ne i16 %5009, 0, !dbg !755
  br i1 %5010, label %5011, label %5012, !dbg !756

5011:                                             ; preds = %5005
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %5006), !dbg !757
  br label %5012, !dbg !758

5012:                                             ; preds = %5011, %5005, %17
  %5013 = call i8* @llvm.stacksave(), !dbg !162
  %5014 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %5015 = load i8, i8* %5014, align 1, !dbg !166
  %5016 = alloca i32, align 4, !dbg !167
  store i32 2, i32* %5016, align 4, !dbg !168
  %5017 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !169
  %5018 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %5019 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5017, align 8, !dbg !171
  store %struct.VdbeCursor* %5019, %struct.VdbeCursor** %5018, align 8, !dbg !172
  %5020 = alloca i8*, align 8, !dbg !173
  %5021 = alloca i32, align 4, !dbg !174
  %5022 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5018, i32* %5016), !dbg !175
  %5023 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5018, align 8, !dbg !176
  %5024 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !177
  %5025 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 16, !dbg !178
  %5026 = load i16, i16* %5025, align 2, !dbg !179
  %5027 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 19, !dbg !180
  %5028 = load i32*, i32** %5027, align 8, !dbg !181
  %5029 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 0, !dbg !182
  %5030 = load i8, i8* %5029, align 1, !dbg !183
  %5031 = icmp ne i8 %5030, 3, !dbg !184
  %5032 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 2, !dbg !185
  %5033 = load i8, i8* %5032, align 1, !dbg !186
  %5034 = icmp ne i8 %5033, 0, !dbg !187
  %5035 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 14, !dbg !188
  %5036 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 21, !dbg !189
  %5037 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 22, !dbg !190
  %5038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 20, !dbg !191
  %5039 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 17, !dbg !192
  %5040 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 9, !dbg !193
  %5041 = load i32, i32* %5040, align 4, !dbg !194
  %5042 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %5043 = load i32, i32* %5042, align 4, !dbg !196
  %5044 = icmp ne i32 %5041, %5043, !dbg !197
  br i1 %5044, label %5045, label %5087, !dbg !198

5045:                                             ; preds = %5012
  br i1 %5034, label %5067, label %5062, !dbg !199

5046:                                             ; preds = %5062, %5069
  %5047 = load i32, i32* %5042, align 4, !dbg !200
  store i32 %5047, i32* %5040, align 4, !dbg !201
  %5048 = load i8*, i8** %5038, align 8, !dbg !202
  %5049 = load i8, i8* %5048, align 1, !dbg !203
  %5050 = icmp sgt i8 %5049, -1, !dbg !206
  br i1 %5050, label %5051, label %5053, !dbg !207

5051:                                             ; preds = %5046
  %5052 = zext i8 %5049 to i32, !dbg !208
  store i32 %5052, i32* %5028, align 4, !dbg !209
  store i32 1, i32* %5035, align 4, !dbg !210
  br label %5056, !dbg !211

5053:                                             ; preds = %5046
  %5054 = call i8 @sqlite3GetVarint32(i8* %5048, i32* %5028), !dbg !212
  %5055 = zext i8 %5054 to i32, !dbg !213
  store i32 %5055, i32* %5035, align 4, !dbg !214
  br label %5056, !dbg !215

5056:                                             ; preds = %5053, %5051
  store i16 0, i16* %5039, align 2, !dbg !216
  %5057 = load i32, i32* %5037, align 4, !dbg !217
  %5058 = load i32, i32* %5028, align 4, !dbg !218
  %5059 = icmp ult i32 %5057, %5058, !dbg !219
  br i1 %5059, label %5061, label %5060, !dbg !220

5060:                                             ; preds = %5056
  store i8* %5048, i8** %5020, align 8, !dbg !221
  br label %5180, !dbg !222

5061:                                             ; preds = %5056
  store i8* null, i8** %5038, align 8, !dbg !223
  store i32 0, i32* %5037, align 4, !dbg !224
  br label %5087, !dbg !225

5062:                                             ; preds = %5045
  %5063 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 12, i32 0, !dbg !226
  %5064 = load %struct.BtCursor*, %struct.BtCursor** %5063, align 8, !dbg !227
  %5065 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5064), !dbg !228
  store i32 %5065, i32* %5036, align 4, !dbg !229
  %5066 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5064, i32* %5037), !dbg !230
  store i8* %5066, i8** %5038, align 8, !dbg !231
  br label %5046, !dbg !232

5067:                                             ; preds = %5045
  %5068 = icmp eq i8 %5030, 3, !dbg !233
  br i1 %5068, label %5069, label %5080, !dbg !234

5069:                                             ; preds = %5067
  %5070 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 10, !dbg !235
  %5071 = load i32, i32* %5070, align 4, !dbg !236
  %5072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5071, !dbg !237
  %5073 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5072, i32 0, i32 1, !dbg !238
  %5074 = load i16, i16* %5073, align 2, !dbg !239
  %5075 = and i16 %5074, 16, !dbg !240
  %5076 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5072, i32 0, i32 4, !dbg !241
  %5077 = load i32, i32* %5076, align 4, !dbg !242
  store i32 %5077, i32* %5036, align 4, !dbg !243
  store i32 %5077, i32* %5037, align 4, !dbg !244
  %5078 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5072, i32 0, i32 5, !dbg !245
  %5079 = load i8*, i8** %5078, align 8, !dbg !246
  store i8* %5079, i8** %5038, align 8, !dbg !247
  br label %5046, !dbg !248

5080:                                             ; preds = %5067
  %5081 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 1, !dbg !249
  %5082 = load i16, i16* %5081, align 2, !dbg !249
  %5083 = and i16 %5082, 9216, !dbg !249
  %5084 = icmp ne i16 %5083, 0, !dbg !249
  br i1 %5084, label %5085, label %5086, !dbg !249

5085:                                             ; preds = %5080
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5024), !dbg !249
  br label %5268, !dbg !249

5086:                                             ; preds = %5080
  store i16 1, i16* %5081, align 2, !dbg !249
  br label %5268, !dbg !249

5087:                                             ; preds = %5061, %5012
  %5088 = load i16, i16* %5039, align 2, !dbg !250
  %5089 = icmp ule i16 %5088, 6, !dbg !251
  br i1 %5089, label %5172, label %5169, !dbg !252

5090:                                             ; preds = %5169, %5258
  %5091 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 1, !dbg !253
  %5092 = load i16, i16* %5091, align 2, !dbg !254
  %5093 = and i16 9216, %5092, !dbg !255
  %5094 = icmp eq i16 0, %5093, !dbg !256
  br i1 %5094, label %5095, label %5099, !dbg !257

5095:                                             ; preds = %5090
  %5096 = icmp ne i16 %5093, 0, !dbg !258
  br i1 %5096, label %5097, label %5098, !dbg !258

5097:                                             ; preds = %5095
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5024), !dbg !258
  br label %5099, !dbg !258

5098:                                             ; preds = %5095
  store i16 1, i16* %5091, align 2, !dbg !258
  br label %5099, !dbg !258

5099:                                             ; preds = %5097, %5098, %5090
  %5100 = load i32, i32* %5021, align 4, !dbg !259
  %5101 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 23, i32 6, !dbg !260
  %5102 = load i32, i32* %5101, align 4, !dbg !261
  %5103 = load i32, i32* %5037, align 4, !dbg !262
  %5104 = getelementptr i32, i32* %5028, i32 7, !dbg !263
  %5105 = load i32, i32* %5104, align 4, !dbg !264
  %5106 = icmp sge i32 %5103, %5105, !dbg !265
  br i1 %5106, label %5107, label %5147, !dbg !266

5107:                                             ; preds = %5099
  %5108 = load i8*, i8** %5038, align 8, !dbg !267
  %5109 = ptrtoint i8* %5108 to i64, !dbg !268
  %5110 = getelementptr i32, i32* %5028, i32 6, !dbg !509
  %5111 = load i32, i32* %5110, align 4, !dbg !269
  %5112 = zext i32 %5111 to i64, !dbg !270
  %5113 = add i64 %5109, %5112, !dbg !271
  %5114 = inttoptr i64 %5113 to i8*, !dbg !272
  store i8* %5114, i8** %5020, align 8, !dbg !273
  %5115 = load i32, i32* %5021, align 4, !dbg !274
  %5116 = icmp ult i32 %5115, 12, !dbg !275
  br i1 %5116, label %5117, label %5119, !dbg !276

5117:                                             ; preds = %5107
  %5118 = call i32 @sqlite3VdbeSerialGet(i8* %5114, i32 %5115, %struct.sqlite3_value* %5024), !dbg !277
  br label %5268, !dbg !278

5119:                                             ; preds = %5107
  %5120 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %5120, align 2, !dbg !280
  %5121 = getelementptr i16, i16* %5120, i32 1, !dbg !281
  store i16 514, i16* %5121, align 2, !dbg !282
  %5122 = load i32, i32* %5021, align 4, !dbg !283
  %5123 = sub i32 %5122, 12, !dbg !284
  %5124 = lshr i32 %5123, 1, !dbg !285
  %5125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 4, !dbg !286
  store i32 %5124, i32* %5125, align 4, !dbg !287
  %5126 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 2, !dbg !288
  store i8 %5015, i8* %5126, align 1, !dbg !289
  %5127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 5, !dbg !290
  %5128 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 7, !dbg !291
  %5129 = load i32, i32* %5128, align 4, !dbg !292
  %5130 = add i32 %5124, 2, !dbg !293
  %5131 = icmp slt i32 %5129, %5130, !dbg !294
  br i1 %5131, label %5132, label %5134, !dbg !295

5132:                                             ; preds = %5119
  store i16 1, i16* %5091, align 2, !dbg !296
  %5133 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5024, i32 %5130, i32 0), !dbg !297
  br label %5137, !dbg !298

5134:                                             ; preds = %5119
  %5135 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 6, !dbg !299
  %5136 = load i8*, i8** %5135, align 8, !dbg !300
  store i8* %5136, i8** %5127, align 8, !dbg !301
  br label %5137, !dbg !302

5137:                                             ; preds = %5134, %5132
  %5138 = zext i32 %5124 to i64, !dbg !303
  %5139 = load i8*, i8** %5127, align 8, !dbg !304
  %5140 = load i8*, i8** %5020, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5139, i8* %5140, i64 %5138, i1 false), !dbg !306
  %5141 = getelementptr i8, i8* %5139, i32 %5124, !dbg !307
  store i8 0, i8* %5141, align 1, !dbg !308
  %5142 = add i32 %5124, 1, !dbg !309
  %5143 = getelementptr i8, i8* %5139, i32 %5142, !dbg !310
  store i8 0, i8* %5143, align 1, !dbg !311
  %5144 = and i32 %5122, 1, !dbg !312
  %5145 = getelementptr i16, i16* %5120, i32 %5144, !dbg !313
  %5146 = load i16, i16* %5145, align 2, !dbg !314
  store i16 %5146, i16* %5091, align 2, !dbg !315
  br label %5268, !dbg !316

5147:                                             ; preds = %5099
  %5148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 2, !dbg !317
  store i8 %5015, i8* %5148, align 1, !dbg !318
  %5149 = load i32, i32* %5021, align 4, !dbg !319
  %5150 = and i32 %5149, 1, !dbg !320
  %5151 = icmp eq i32 %5150, 0, !dbg !321
  %5152 = icmp sge i32 %5149, 12, !dbg !322
  %5153 = and i1 %5152, %5151, !dbg !323
  %5154 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5149), !dbg !324
  %5155 = icmp eq i32 %5154, 0, !dbg !325
  br i1 %5155, label %5167, label %5156, !dbg !326

5156:                                             ; preds = %5147
  %5157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 12, i32 0, !dbg !327
  %5158 = load %struct.BtCursor*, %struct.BtCursor** %5157, align 8, !dbg !328
  %5159 = getelementptr i32, i32* %5028, i32 6, !dbg !510
  %5160 = load i32, i32* %5159, align 4, !dbg !329
  %5161 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5158, i32 %5160, i32 %5154, %struct.sqlite3_value* %5024), !dbg !330
  %5162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 5, !dbg !331
  %5163 = load i8*, i8** %5162, align 8, !dbg !332
  %5164 = call i32 @sqlite3VdbeSerialGet(i8* %5163, i32 %5149, %struct.sqlite3_value* %5024), !dbg !333
  %5165 = load i16, i16* %5091, align 2, !dbg !334
  %5166 = and i16 %5165, -4097, !dbg !335
  store i16 %5166, i16* %5091, align 2, !dbg !336
  br label %5268, !dbg !337

5167:                                             ; preds = %5147
  %5168 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5149, %struct.sqlite3_value* %5024), !dbg !338
  br label %5268, !dbg !339

5169:                                             ; preds = %5087
  %5170 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 23, i32 6, !dbg !340
  %5171 = load i32, i32* %5170, align 4, !dbg !341
  store i32 %5171, i32* %5021, align 4, !dbg !342
  br label %5090, !dbg !343

5172:                                             ; preds = %5087
  %5173 = load i32, i32* %5035, align 4, !dbg !344
  %5174 = load i32, i32* %5028, align 4, !dbg !345
  %5175 = icmp ult i32 %5173, %5174, !dbg !346
  br i1 %5175, label %5176, label %5257, !dbg !347

5176:                                             ; preds = %5172
  %5177 = load i8*, i8** %5038, align 8, !dbg !348
  %5178 = icmp eq i8* %5177, null, !dbg !349
  br i1 %5178, label %5180, label %5179, !dbg !350

5179:                                             ; preds = %5176
  store i8* %5177, i8** %5020, align 8, !dbg !351
  br label %5180, !dbg !352

5180:                                             ; preds = %5179, %5176, %5060
  %5181 = alloca i32, align 4, !dbg !353
  %5182 = load i16, i16* %5039, align 2, !dbg !354
  %5183 = zext i16 %5182 to i32, !dbg !355
  store i32 %5183, i32* %5181, align 4, !dbg !356
  %5184 = alloca i64, align 8, !dbg !357
  %5185 = getelementptr i32, i32* %5028, i32 %5183, !dbg !358
  %5186 = load i32, i32* %5185, align 4, !dbg !359
  %5187 = zext i32 %5186 to i64, !dbg !360
  store i64 %5187, i64* %5184, align 4, !dbg !361
  %5188 = load i8*, i8** %5020, align 8, !dbg !362
  %5189 = load i32, i32* %5035, align 4, !dbg !363
  %5190 = alloca i8*, align 8, !dbg !364
  %5191 = getelementptr i8, i8* %5188, i32 %5189, !dbg !365
  store i8* %5191, i8** %5190, align 8, !dbg !366
  %5192 = load i32, i32* %5028, align 4, !dbg !367
  %5193 = getelementptr i8, i8* %5188, i32 %5192, !dbg !368
  br label %5194, !dbg !369

5194:                                             ; preds = %5201, %5180
  %5195 = load i32, i32* %5181, align 4, !dbg !370
  %5196 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5023, i32 0, i32 23, i32 %5195, !dbg !371
  %5197 = load i8*, i8** %5190, align 8, !dbg !372
  %5198 = load i8, i8* %5197, align 1, !dbg !373
  %5199 = zext i8 %5198 to i32, !dbg !374
  store i32 %5199, i32* %5021, align 4, !dbg !375
  store i32 %5199, i32* %5196, align 4, !dbg !376
  %5200 = icmp sgt i8 %5198, -1, !dbg !377
  br i1 %5200, label %5224, label %5215, !dbg !378

5201:                                             ; preds = %5215, %5224
  %5202 = load i32, i32* %5181, align 4, !dbg !379
  %5203 = add i32 %5202, 1, !dbg !380
  store i32 %5203, i32* %5181, align 4, !dbg !381
  %5204 = load i64, i64* %5184, align 4, !dbg !382
  %5205 = and i64 4294967295, %5204, !dbg !383
  %5206 = trunc i64 %5205 to i32, !dbg !384
  %5207 = getelementptr i32, i32* %5028, i32 %5203, !dbg !385
  store i32 %5206, i32* %5207, align 4, !dbg !386
  %5208 = load i32, i32* %5181, align 4, !dbg !387
  %5209 = icmp sle i32 %5208, 6, !dbg !388
  %5210 = load i8*, i8** %5190, align 8, !dbg !389
  %5211 = ptrtoint i8* %5210 to i64, !dbg !390
  %5212 = ptrtoint i8* %5193 to i64, !dbg !391
  %5213 = icmp ult i64 %5211, %5212, !dbg !392
  %5214 = and i1 %5209, %5213, !dbg !393
  br i1 %5214, label %5194, label %5233, !dbg !394

5215:                                             ; preds = %5194
  %5216 = load i8*, i8** %5190, align 8, !dbg !395
  %5217 = call i8 @sqlite3GetVarint32(i8* %5216, i32* %5021), !dbg !396
  %5218 = getelementptr i8, i8* %5216, i8 %5217, !dbg !397
  store i8* %5218, i8** %5190, align 8, !dbg !398
  %5219 = load i32, i32* %5021, align 4, !dbg !399
  store i32 %5219, i32* %5196, align 4, !dbg !400
  %5220 = load i64, i64* %5184, align 4, !dbg !401
  %5221 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5219), !dbg !402
  %5222 = zext i32 %5221 to i64, !dbg !403
  %5223 = add i64 %5220, %5222, !dbg !404
  store i64 %5223, i64* %5184, align 4, !dbg !405
  br label %5201, !dbg !406

5224:                                             ; preds = %5194
  %5225 = getelementptr i8, i8* %5197, i32 1, !dbg !407
  store i8* %5225, i8** %5190, align 8, !dbg !408
  %5226 = load i32, i32* %5021, align 4, !dbg !409
  %5227 = trunc i32 %5226 to i8, !dbg !410
  %5228 = getelementptr i8, i8* %4, i8 %5227, !dbg !411
  %5229 = load i8, i8* %5228, align 1, !dbg !412
  %5230 = zext i8 %5229 to i64, !dbg !413
  %5231 = load i64, i64* %5184, align 4, !dbg !414
  %5232 = add i64 %5231, %5230, !dbg !415
  store i64 %5232, i64* %5184, align 4, !dbg !416
  br label %5201, !dbg !417

5233:                                             ; preds = %5201
  %5234 = load i64, i64* %5184, align 4, !dbg !418
  %5235 = load i32, i32* %5036, align 4, !dbg !419
  %5236 = zext i32 %5235 to i64, !dbg !420
  %5237 = icmp uge i64 %5211, %5212, !dbg !421
  %5238 = icmp ugt i64 %5211, %5212, !dbg !422
  %5239 = icmp ne i64 %5234, %5236, !dbg !423
  %5240 = icmp ugt i64 %5234, %5236, !dbg !424
  %5241 = or i1 %5238, %5239, !dbg !425
  %5242 = and i1 %5237, %5241, !dbg !426
  %5243 = or i1 %5242, %5240, !dbg !427
  br i1 %5243, label %5244, label %5248, !dbg !428

5244:                                             ; preds = %5233
  %5245 = load i32, i32* %5028, align 4, !dbg !429
  %5246 = icmp eq i32 %5245, 0, !dbg !430
  br i1 %5246, label %5247, label %5248, !dbg !431

5247:                                             ; preds = %5244
  store i32 0, i32* %5181, align 4, !dbg !432
  store i8* %5193, i8** %5190, align 8, !dbg !433
  br label %5248, !dbg !434

5248:                                             ; preds = %5247, %5244, %5233
  %5249 = load i32, i32* %5181, align 4, !dbg !435
  %5250 = trunc i32 %5249 to i16, !dbg !436
  store i16 %5250, i16* %5039, align 2, !dbg !437
  %5251 = load i8*, i8** %5190, align 8, !dbg !438
  %5252 = ptrtoint i8* %5251 to i64, !dbg !439
  %5253 = load i8*, i8** %5020, align 8, !dbg !440
  %5254 = ptrtoint i8* %5253 to i64, !dbg !441
  %5255 = sub i64 %5252, %5254, !dbg !442
  %5256 = trunc i64 %5255 to i32, !dbg !443
  store i32 %5256, i32* %5035, align 4, !dbg !444
  br label %5258, !dbg !445

5257:                                             ; preds = %5172
  store i32 0, i32* %5021, align 4, !dbg !446
  br label %5258, !dbg !447

5258:                                             ; preds = %5248, %5257
  %5259 = load i16, i16* %5039, align 2, !dbg !448
  %5260 = icmp sle i16 %5259, 6, !dbg !449
  br i1 %5260, label %5261, label %5090, !dbg !450

5261:                                             ; preds = %5258
  %5262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5024, i32 0, i32 1, !dbg !451
  %5263 = load i16, i16* %5262, align 2, !dbg !451
  %5264 = and i16 %5263, 9216, !dbg !451
  %5265 = icmp ne i16 %5264, 0, !dbg !451
  br i1 %5265, label %5266, label %5267, !dbg !451

5266:                                             ; preds = %5261
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5024), !dbg !451
  br label %5268, !dbg !451

5267:                                             ; preds = %5261
  store i16 1, i16* %5262, align 2, !dbg !451
  br label %5268, !dbg !451

5268:                                             ; preds = %5266, %5267, %5137, %5117, %5156, %5167, %5085, %5086
  call void @llvm.stackrestore(i8* %5013), !dbg !452
  br label %5269, !dbg !74

5269:                                             ; preds = %17, %5268
  %5270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !749
  %5271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5270, i32 0, i32 1, !dbg !752
  %5272 = load i16, i16* %5271, align 2, !dbg !753
  %5273 = and i16 %5272, 36, !dbg !754
  %5274 = icmp ne i16 %5273, 0, !dbg !755
  br i1 %5274, label %5275, label %5276, !dbg !756

5275:                                             ; preds = %5269
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %5270), !dbg !757
  br label %5276, !dbg !758

5276:                                             ; preds = %5275, %5269, %17
  %5277 = call i8* @llvm.stacksave(), !dbg !759
  %5278 = alloca i64, align 8, !dbg !762
  store i64 0, i64* %5278, align 4, !dbg !763
  %5279 = alloca i32, align 8, !dbg !764
  store i32 0, i32* %5279, align 4, !dbg !765
  %5280 = alloca i64, align 8, !dbg !766
  store i64 0, i64* %5280, align 4, !dbg !767
  %5281 = alloca i8*, align 8, !dbg !768
  %5282 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 50, !dbg !769
  %5283 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5282, i32 0, i32 6, !dbg !770
  %5284 = bitcast %union.p4union* %5283 to i8**, !dbg !771
  %5285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !772
  %5286 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5285, i32 2, !dbg !773
  %5287 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !774
  %5288 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 0, i32 1, !dbg !775
  %5289 = load i16, i16* %5288, align 2, !dbg !776
  %5290 = and i16 %5289, 1, !dbg !777
  %5291 = icmp ne i16 %5290, 0, !dbg !777
  %5292 = and i16 %5289, 36, !dbg !778
  %5293 = icmp ne i16 %5292, 0, !dbg !778
  %5294 = and i16 %5289, 8, !dbg !779
  %5295 = icmp ne i16 %5294, 0, !dbg !779
  %5296 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 0, i32 8, !dbg !780
  br i1 %5291, label %5297, label %5305, !dbg !781

5297:                                             ; preds = %5276
  %5298 = and i16 %5289, 16384, !dbg !782
  %5299 = icmp ne i16 %5298, 0, !dbg !782
  br i1 %5299, label %5300, label %5301, !dbg !783

5300:                                             ; preds = %5297
  store i32 10, i32* %5296, align 4, !dbg !784
  br label %5302, !dbg !785

5301:                                             ; preds = %5297
  store i32 0, i32* %5296, align 4, !dbg !786
  br label %5302, !dbg !787

5302:                                             ; preds = %5301, %5300
  %5303 = load i32, i32* %5279, align 4, !dbg !788
  %5304 = add i32 %5303, 1, !dbg !788
  store i32 %5304, i32* %5279, align 4, !dbg !788
  br label %5395, !dbg !789

5305:                                             ; preds = %5276
  br i1 %5293, label %5306, label %5350, !dbg !790

5306:                                             ; preds = %5305
  %5307 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 0, i32 0, !dbg !791
  %5308 = bitcast %union.MemValue* %5307 to i64*, !dbg !792
  %5309 = load i64, i64* %5308, align 4, !dbg !793
  %5310 = alloca i64, align 8, !dbg !794
  %5311 = icmp slt i64 %5309, 0, !dbg !795
  br i1 %5311, label %5312, label %5314, !dbg !796

5312:                                             ; preds = %5306
  %5313 = xor i64 %5309, -1, !dbg !797
  store i64 %5313, i64* %5310, align 4, !dbg !798
  br label %5315, !dbg !799

5314:                                             ; preds = %5306
  store i64 %5309, i64* %5310, align 4, !dbg !800
  br label %5315, !dbg !801

5315:                                             ; preds = %5314, %5312
  %5316 = load i32, i32* %5279, align 4, !dbg !802
  %5317 = add i32 %5316, 1, !dbg !802
  store i32 %5317, i32* %5279, align 4, !dbg !802
  %5318 = load i64, i64* %5310, align 4, !dbg !803
  %5319 = icmp slt i64 %5318, 127, !dbg !804
  %5320 = icmp slt i64 %5318, 32767, !dbg !805
  %5321 = icmp slt i64 %5318, 8388607, !dbg !806
  %5322 = icmp slt i64 %5318, 2147483647, !dbg !807
  br i1 %5319, label %5323, label %5332, !dbg !808

5323:                                             ; preds = %5315
  %5324 = and i64 %5309, 1, !dbg !809
  %5325 = icmp eq i64 %5324, %5309, !dbg !810
  br i1 %5325, label %5326, label %5329, !dbg !811

5326:                                             ; preds = %5323
  %5327 = trunc i64 %5318 to i32, !dbg !812
  %5328 = add i32 %5327, 8, !dbg !813
  store i32 %5328, i32* %5296, align 4, !dbg !814
  br label %5395, !dbg !815

5329:                                             ; preds = %5323
  %5330 = load i64, i64* %5278, align 4, !dbg !816
  %5331 = add i64 %5330, 1, !dbg !816
  store i64 %5331, i64* %5278, align 4, !dbg !816
  store i32 1, i32* %5296, align 4, !dbg !817
  br label %5395, !dbg !818

5332:                                             ; preds = %5315
  %5333 = load i64, i64* %5278, align 4, !dbg !819
  br i1 %5320, label %5334, label %5336, !dbg !820

5334:                                             ; preds = %5332
  %5335 = add i64 %5333, 2, !dbg !821
  store i64 %5335, i64* %5278, align 4, !dbg !821
  store i32 2, i32* %5296, align 4, !dbg !822
  br label %5395, !dbg !823

5336:                                             ; preds = %5332
  br i1 %5321, label %5337, label %5339, !dbg !824

5337:                                             ; preds = %5336
  %5338 = add i64 %5333, 3, !dbg !825
  store i64 %5338, i64* %5278, align 4, !dbg !825
  store i32 3, i32* %5296, align 4, !dbg !826
  br label %5395, !dbg !827

5339:                                             ; preds = %5336
  br i1 %5322, label %5340, label %5342, !dbg !828

5340:                                             ; preds = %5339
  %5341 = add i64 %5333, 4, !dbg !829
  store i64 %5341, i64* %5278, align 4, !dbg !829
  store i32 4, i32* %5296, align 4, !dbg !830
  br label %5395, !dbg !831

5342:                                             ; preds = %5339
  %5343 = add i64 %5333, 8, !dbg !832
  store i64 %5343, i64* %5278, align 4, !dbg !832
  %5344 = and i16 %5289, 32, !dbg !833
  %5345 = icmp ne i16 %5344, 0, !dbg !833
  br i1 %5345, label %5346, label %5349, !dbg !834

5346:                                             ; preds = %5342
  %5347 = and i16 %5289, -33, !dbg !835
  %5348 = or i16 %5347, 8, !dbg !836
  store i16 %5348, i16* %5288, align 2, !dbg !837
  store i32 7, i32* %5296, align 4, !dbg !838
  br label %5395, !dbg !839

5349:                                             ; preds = %5342
  store i32 6, i32* %5296, align 4, !dbg !840
  br label %5395, !dbg !841

5350:                                             ; preds = %5305
  br i1 %5295, label %5351, label %5356, !dbg !842

5351:                                             ; preds = %5350
  %5352 = load i32, i32* %5279, align 4, !dbg !843
  %5353 = add i32 %5352, 1, !dbg !843
  store i32 %5353, i32* %5279, align 4, !dbg !843
  %5354 = load i64, i64* %5278, align 4, !dbg !844
  %5355 = add i64 %5354, 8, !dbg !844
  store i64 %5355, i64* %5278, align 4, !dbg !844
  store i32 7, i32* %5296, align 4, !dbg !845
  br label %5395, !dbg !846

5356:                                             ; preds = %5350
  %5357 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 0, i32 4, !dbg !847
  %5358 = load i32, i32* %5357, align 4, !dbg !848
  %5359 = alloca i32, align 8, !dbg !849
  store i32 %5358, i32* %5359, align 4, !dbg !850
  %5360 = alloca i32, align 8, !dbg !851
  %5361 = add i32 %5358, %5358, !dbg !852
  %5362 = add i32 %5361, 12, !dbg !853
  %5363 = and i16 %5289, 2, !dbg !854
  %5364 = icmp ne i16 %5363, 0, !dbg !855
  %5365 = zext i1 %5364 to i32, !dbg !856
  %5366 = add i32 %5362, %5365, !dbg !857
  store i32 %5366, i32* %5360, align 4, !dbg !858
  %5367 = and i16 %5289, 16384, !dbg !859
  %5368 = icmp ne i16 %5367, 0, !dbg !860
  br i1 %5368, label %5369, label %5385, !dbg !861

5369:                                             ; preds = %5356
  %5370 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 0, i32 0, !dbg !862
  %5371 = bitcast %union.MemValue* %5370 to i32*, !dbg !863
  %5372 = load i32, i32* %5371, align 4, !dbg !864
  %5373 = add i32 %5372, %5372, !dbg !865
  %5374 = add i32 %5366, %5373, !dbg !866
  store i32 %5374, i32* %5360, align 4, !dbg !866
  %5375 = load i64, i64* %5278, align 4, !dbg !867
  %5376 = icmp ne i64 %5375, 0, !dbg !867
  br i1 %5376, label %5381, label %5377, !dbg !868

5377:                                             ; preds = %5369
  %5378 = zext i32 %5372 to i64, !dbg !869
  %5379 = load i64, i64* %5280, align 4, !dbg !870
  %5380 = add i64 %5379, %5378, !dbg !870
  store i64 %5380, i64* %5280, align 4, !dbg !870
  br label %5385, !dbg !871

5381:                                             ; preds = %5369
  %5382 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %5286), !dbg !872
  %5383 = load i32, i32* %5359, align 4, !dbg !873
  %5384 = add i32 %5383, %5372, !dbg !873
  store i32 %5384, i32* %5359, align 4, !dbg !873
  br label %5385, !dbg !874

5385:                                             ; preds = %5377, %5381, %5356
  %5386 = load i32, i32* %5359, align 4, !dbg !875
  %5387 = zext i32 %5386 to i64, !dbg !876
  %5388 = load i64, i64* %5278, align 4, !dbg !877
  %5389 = add i64 %5388, %5387, !dbg !877
  store i64 %5389, i64* %5278, align 4, !dbg !877
  %5390 = load i32, i32* %5360, align 4, !dbg !878
  %5391 = zext i32 %5390 to i64, !dbg !879
  %5392 = call i32 @sqlite3VarintLen(i64 %5391), !dbg !880
  %5393 = load i32, i32* %5279, align 4, !dbg !881
  %5394 = add i32 %5393, %5392, !dbg !881
  store i32 %5394, i32* %5279, align 4, !dbg !881
  store i32 %5390, i32* %5296, align 4, !dbg !882
  br label %5395, !dbg !883

5395:                                             ; preds = %5334, %5337, %5340, %5346, %5349, %5329, %5326, %5385, %5351, %5302
  %5396 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5286, i32 -1, !dbg !884
  %5397 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 0, i32 1, !dbg !775
  %5398 = load i16, i16* %5397, align 2, !dbg !776
  %5399 = and i16 %5398, 1, !dbg !777
  %5400 = icmp ne i16 %5399, 0, !dbg !777
  %5401 = and i16 %5398, 36, !dbg !778
  %5402 = icmp ne i16 %5401, 0, !dbg !778
  %5403 = and i16 %5398, 8, !dbg !779
  %5404 = icmp ne i16 %5403, 0, !dbg !779
  %5405 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 0, i32 8, !dbg !780
  br i1 %5400, label %5406, label %5414, !dbg !781

5406:                                             ; preds = %5395
  %5407 = and i16 %5398, 16384, !dbg !782
  %5408 = icmp ne i16 %5407, 0, !dbg !782
  br i1 %5408, label %5409, label %5410, !dbg !783

5409:                                             ; preds = %5406
  store i32 10, i32* %5405, align 4, !dbg !784
  br label %5411, !dbg !785

5410:                                             ; preds = %5406
  store i32 0, i32* %5405, align 4, !dbg !786
  br label %5411, !dbg !787

5411:                                             ; preds = %5410, %5409
  %5412 = load i32, i32* %5279, align 4, !dbg !788
  %5413 = add i32 %5412, 1, !dbg !788
  store i32 %5413, i32* %5279, align 4, !dbg !788
  br label %5504, !dbg !789

5414:                                             ; preds = %5395
  br i1 %5402, label %5415, label %5459, !dbg !790

5415:                                             ; preds = %5414
  %5416 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 0, i32 0, !dbg !791
  %5417 = bitcast %union.MemValue* %5416 to i64*, !dbg !792
  %5418 = load i64, i64* %5417, align 4, !dbg !793
  %5419 = alloca i64, align 8, !dbg !794
  %5420 = icmp slt i64 %5418, 0, !dbg !795
  br i1 %5420, label %5421, label %5423, !dbg !796

5421:                                             ; preds = %5415
  %5422 = xor i64 %5418, -1, !dbg !797
  store i64 %5422, i64* %5419, align 4, !dbg !798
  br label %5424, !dbg !799

5423:                                             ; preds = %5415
  store i64 %5418, i64* %5419, align 4, !dbg !800
  br label %5424, !dbg !801

5424:                                             ; preds = %5423, %5421
  %5425 = load i32, i32* %5279, align 4, !dbg !802
  %5426 = add i32 %5425, 1, !dbg !802
  store i32 %5426, i32* %5279, align 4, !dbg !802
  %5427 = load i64, i64* %5419, align 4, !dbg !803
  %5428 = icmp slt i64 %5427, 127, !dbg !804
  %5429 = icmp slt i64 %5427, 32767, !dbg !805
  %5430 = icmp slt i64 %5427, 8388607, !dbg !806
  %5431 = icmp slt i64 %5427, 2147483647, !dbg !807
  br i1 %5428, label %5432, label %5441, !dbg !808

5432:                                             ; preds = %5424
  %5433 = and i64 %5418, 1, !dbg !809
  %5434 = icmp eq i64 %5433, %5418, !dbg !810
  br i1 %5434, label %5435, label %5438, !dbg !811

5435:                                             ; preds = %5432
  %5436 = trunc i64 %5427 to i32, !dbg !812
  %5437 = add i32 %5436, 8, !dbg !813
  store i32 %5437, i32* %5405, align 4, !dbg !814
  br label %5504, !dbg !815

5438:                                             ; preds = %5432
  %5439 = load i64, i64* %5278, align 4, !dbg !816
  %5440 = add i64 %5439, 1, !dbg !816
  store i64 %5440, i64* %5278, align 4, !dbg !816
  store i32 1, i32* %5405, align 4, !dbg !817
  br label %5504, !dbg !818

5441:                                             ; preds = %5424
  %5442 = load i64, i64* %5278, align 4, !dbg !819
  br i1 %5429, label %5443, label %5445, !dbg !820

5443:                                             ; preds = %5441
  %5444 = add i64 %5442, 2, !dbg !821
  store i64 %5444, i64* %5278, align 4, !dbg !821
  store i32 2, i32* %5405, align 4, !dbg !822
  br label %5504, !dbg !823

5445:                                             ; preds = %5441
  br i1 %5430, label %5446, label %5448, !dbg !824

5446:                                             ; preds = %5445
  %5447 = add i64 %5442, 3, !dbg !825
  store i64 %5447, i64* %5278, align 4, !dbg !825
  store i32 3, i32* %5405, align 4, !dbg !826
  br label %5504, !dbg !827

5448:                                             ; preds = %5445
  br i1 %5431, label %5449, label %5451, !dbg !828

5449:                                             ; preds = %5448
  %5450 = add i64 %5442, 4, !dbg !829
  store i64 %5450, i64* %5278, align 4, !dbg !829
  store i32 4, i32* %5405, align 4, !dbg !830
  br label %5504, !dbg !831

5451:                                             ; preds = %5448
  %5452 = add i64 %5442, 8, !dbg !832
  store i64 %5452, i64* %5278, align 4, !dbg !832
  %5453 = and i16 %5398, 32, !dbg !833
  %5454 = icmp ne i16 %5453, 0, !dbg !833
  br i1 %5454, label %5455, label %5458, !dbg !834

5455:                                             ; preds = %5451
  %5456 = and i16 %5398, -33, !dbg !835
  %5457 = or i16 %5456, 8, !dbg !836
  store i16 %5457, i16* %5397, align 2, !dbg !837
  store i32 7, i32* %5405, align 4, !dbg !838
  br label %5504, !dbg !839

5458:                                             ; preds = %5451
  store i32 6, i32* %5405, align 4, !dbg !840
  br label %5504, !dbg !841

5459:                                             ; preds = %5414
  br i1 %5404, label %5460, label %5465, !dbg !842

5460:                                             ; preds = %5459
  %5461 = load i32, i32* %5279, align 4, !dbg !843
  %5462 = add i32 %5461, 1, !dbg !843
  store i32 %5462, i32* %5279, align 4, !dbg !843
  %5463 = load i64, i64* %5278, align 4, !dbg !844
  %5464 = add i64 %5463, 8, !dbg !844
  store i64 %5464, i64* %5278, align 4, !dbg !844
  store i32 7, i32* %5405, align 4, !dbg !845
  br label %5504, !dbg !846

5465:                                             ; preds = %5459
  %5466 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 0, i32 4, !dbg !847
  %5467 = load i32, i32* %5466, align 4, !dbg !848
  %5468 = alloca i32, align 8, !dbg !849
  store i32 %5467, i32* %5468, align 4, !dbg !850
  %5469 = alloca i32, align 8, !dbg !851
  %5470 = add i32 %5467, %5467, !dbg !852
  %5471 = add i32 %5470, 12, !dbg !853
  %5472 = and i16 %5398, 2, !dbg !854
  %5473 = icmp ne i16 %5472, 0, !dbg !855
  %5474 = zext i1 %5473 to i32, !dbg !856
  %5475 = add i32 %5471, %5474, !dbg !857
  store i32 %5475, i32* %5469, align 4, !dbg !858
  %5476 = and i16 %5398, 16384, !dbg !859
  %5477 = icmp ne i16 %5476, 0, !dbg !860
  br i1 %5477, label %5478, label %5494, !dbg !861

5478:                                             ; preds = %5465
  %5479 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 0, i32 0, !dbg !862
  %5480 = bitcast %union.MemValue* %5479 to i32*, !dbg !863
  %5481 = load i32, i32* %5480, align 4, !dbg !864
  %5482 = add i32 %5481, %5481, !dbg !865
  %5483 = add i32 %5475, %5482, !dbg !866
  store i32 %5483, i32* %5469, align 4, !dbg !866
  %5484 = load i64, i64* %5278, align 4, !dbg !867
  %5485 = icmp ne i64 %5484, 0, !dbg !867
  br i1 %5485, label %5490, label %5486, !dbg !868

5486:                                             ; preds = %5478
  %5487 = zext i32 %5481 to i64, !dbg !869
  %5488 = load i64, i64* %5280, align 4, !dbg !870
  %5489 = add i64 %5488, %5487, !dbg !870
  store i64 %5489, i64* %5280, align 4, !dbg !870
  br label %5494, !dbg !871

5490:                                             ; preds = %5478
  %5491 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %5396), !dbg !872
  %5492 = load i32, i32* %5468, align 4, !dbg !873
  %5493 = add i32 %5492, %5481, !dbg !873
  store i32 %5493, i32* %5468, align 4, !dbg !873
  br label %5494, !dbg !874

5494:                                             ; preds = %5486, %5490, %5465
  %5495 = load i32, i32* %5468, align 4, !dbg !875
  %5496 = zext i32 %5495 to i64, !dbg !876
  %5497 = load i64, i64* %5278, align 4, !dbg !877
  %5498 = add i64 %5497, %5496, !dbg !877
  store i64 %5498, i64* %5278, align 4, !dbg !877
  %5499 = load i32, i32* %5469, align 4, !dbg !878
  %5500 = zext i32 %5499 to i64, !dbg !879
  %5501 = call i32 @sqlite3VarintLen(i64 %5500), !dbg !880
  %5502 = load i32, i32* %5279, align 4, !dbg !881
  %5503 = add i32 %5502, %5501, !dbg !881
  store i32 %5503, i32* %5279, align 4, !dbg !881
  store i32 %5499, i32* %5405, align 4, !dbg !882
  br label %5504, !dbg !883

5504:                                             ; preds = %5443, %5446, %5449, %5455, %5458, %5438, %5435, %5494, %5460, %5411
  %5505 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5396, i32 -1, !dbg !884
  %5506 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5505, i32 0, i32 1, !dbg !775
  %5507 = load i16, i16* %5506, align 2, !dbg !776
  %5508 = and i16 %5507, 1, !dbg !777
  %5509 = icmp ne i16 %5508, 0, !dbg !777
  %5510 = and i16 %5507, 36, !dbg !778
  %5511 = icmp ne i16 %5510, 0, !dbg !778
  %5512 = and i16 %5507, 8, !dbg !779
  %5513 = icmp ne i16 %5512, 0, !dbg !779
  %5514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5505, i32 0, i32 8, !dbg !780
  br i1 %5509, label %5515, label %5523, !dbg !781

5515:                                             ; preds = %5504
  %5516 = and i16 %5507, 16384, !dbg !782
  %5517 = icmp ne i16 %5516, 0, !dbg !782
  br i1 %5517, label %5518, label %5519, !dbg !783

5518:                                             ; preds = %5515
  store i32 10, i32* %5514, align 4, !dbg !784
  br label %5520, !dbg !785

5519:                                             ; preds = %5515
  store i32 0, i32* %5514, align 4, !dbg !786
  br label %5520, !dbg !787

5520:                                             ; preds = %5519, %5518
  %5521 = load i32, i32* %5279, align 4, !dbg !788
  %5522 = add i32 %5521, 1, !dbg !788
  store i32 %5522, i32* %5279, align 4, !dbg !788
  br label %5613, !dbg !789

5523:                                             ; preds = %5504
  br i1 %5511, label %5524, label %5568, !dbg !790

5524:                                             ; preds = %5523
  %5525 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5505, i32 0, i32 0, !dbg !791
  %5526 = bitcast %union.MemValue* %5525 to i64*, !dbg !792
  %5527 = load i64, i64* %5526, align 4, !dbg !793
  %5528 = alloca i64, align 8, !dbg !794
  %5529 = icmp slt i64 %5527, 0, !dbg !795
  br i1 %5529, label %5530, label %5532, !dbg !796

5530:                                             ; preds = %5524
  %5531 = xor i64 %5527, -1, !dbg !797
  store i64 %5531, i64* %5528, align 4, !dbg !798
  br label %5533, !dbg !799

5532:                                             ; preds = %5524
  store i64 %5527, i64* %5528, align 4, !dbg !800
  br label %5533, !dbg !801

5533:                                             ; preds = %5532, %5530
  %5534 = load i32, i32* %5279, align 4, !dbg !802
  %5535 = add i32 %5534, 1, !dbg !802
  store i32 %5535, i32* %5279, align 4, !dbg !802
  %5536 = load i64, i64* %5528, align 4, !dbg !803
  %5537 = icmp slt i64 %5536, 127, !dbg !804
  %5538 = icmp slt i64 %5536, 32767, !dbg !805
  %5539 = icmp slt i64 %5536, 8388607, !dbg !806
  %5540 = icmp slt i64 %5536, 2147483647, !dbg !807
  br i1 %5537, label %5541, label %5550, !dbg !808

5541:                                             ; preds = %5533
  %5542 = and i64 %5527, 1, !dbg !809
  %5543 = icmp eq i64 %5542, %5527, !dbg !810
  br i1 %5543, label %5544, label %5547, !dbg !811

5544:                                             ; preds = %5541
  %5545 = trunc i64 %5536 to i32, !dbg !812
  %5546 = add i32 %5545, 8, !dbg !813
  store i32 %5546, i32* %5514, align 4, !dbg !814
  br label %5613, !dbg !815

5547:                                             ; preds = %5541
  %5548 = load i64, i64* %5278, align 4, !dbg !816
  %5549 = add i64 %5548, 1, !dbg !816
  store i64 %5549, i64* %5278, align 4, !dbg !816
  store i32 1, i32* %5514, align 4, !dbg !817
  br label %5613, !dbg !818

5550:                                             ; preds = %5533
  %5551 = load i64, i64* %5278, align 4, !dbg !819
  br i1 %5538, label %5552, label %5554, !dbg !820

5552:                                             ; preds = %5550
  %5553 = add i64 %5551, 2, !dbg !821
  store i64 %5553, i64* %5278, align 4, !dbg !821
  store i32 2, i32* %5514, align 4, !dbg !822
  br label %5613, !dbg !823

5554:                                             ; preds = %5550
  br i1 %5539, label %5555, label %5557, !dbg !824

5555:                                             ; preds = %5554
  %5556 = add i64 %5551, 3, !dbg !825
  store i64 %5556, i64* %5278, align 4, !dbg !825
  store i32 3, i32* %5514, align 4, !dbg !826
  br label %5613, !dbg !827

5557:                                             ; preds = %5554
  br i1 %5540, label %5558, label %5560, !dbg !828

5558:                                             ; preds = %5557
  %5559 = add i64 %5551, 4, !dbg !829
  store i64 %5559, i64* %5278, align 4, !dbg !829
  store i32 4, i32* %5514, align 4, !dbg !830
  br label %5613, !dbg !831

5560:                                             ; preds = %5557
  %5561 = add i64 %5551, 8, !dbg !832
  store i64 %5561, i64* %5278, align 4, !dbg !832
  %5562 = and i16 %5507, 32, !dbg !833
  %5563 = icmp ne i16 %5562, 0, !dbg !833
  br i1 %5563, label %5564, label %5567, !dbg !834

5564:                                             ; preds = %5560
  %5565 = and i16 %5507, -33, !dbg !835
  %5566 = or i16 %5565, 8, !dbg !836
  store i16 %5566, i16* %5506, align 2, !dbg !837
  store i32 7, i32* %5514, align 4, !dbg !838
  br label %5613, !dbg !839

5567:                                             ; preds = %5560
  store i32 6, i32* %5514, align 4, !dbg !840
  br label %5613, !dbg !841

5568:                                             ; preds = %5523
  br i1 %5513, label %5569, label %5574, !dbg !842

5569:                                             ; preds = %5568
  %5570 = load i32, i32* %5279, align 4, !dbg !843
  %5571 = add i32 %5570, 1, !dbg !843
  store i32 %5571, i32* %5279, align 4, !dbg !843
  %5572 = load i64, i64* %5278, align 4, !dbg !844
  %5573 = add i64 %5572, 8, !dbg !844
  store i64 %5573, i64* %5278, align 4, !dbg !844
  store i32 7, i32* %5514, align 4, !dbg !845
  br label %5613, !dbg !846

5574:                                             ; preds = %5568
  %5575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5505, i32 0, i32 4, !dbg !847
  %5576 = load i32, i32* %5575, align 4, !dbg !848
  %5577 = alloca i32, align 8, !dbg !849
  store i32 %5576, i32* %5577, align 4, !dbg !850
  %5578 = alloca i32, align 8, !dbg !851
  %5579 = add i32 %5576, %5576, !dbg !852
  %5580 = add i32 %5579, 12, !dbg !853
  %5581 = and i16 %5507, 2, !dbg !854
  %5582 = icmp ne i16 %5581, 0, !dbg !855
  %5583 = zext i1 %5582 to i32, !dbg !856
  %5584 = add i32 %5580, %5583, !dbg !857
  store i32 %5584, i32* %5578, align 4, !dbg !858
  %5585 = and i16 %5507, 16384, !dbg !859
  %5586 = icmp ne i16 %5585, 0, !dbg !860
  br i1 %5586, label %5587, label %5603, !dbg !861

5587:                                             ; preds = %5574
  %5588 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5505, i32 0, i32 0, !dbg !862
  %5589 = bitcast %union.MemValue* %5588 to i32*, !dbg !863
  %5590 = load i32, i32* %5589, align 4, !dbg !864
  %5591 = add i32 %5590, %5590, !dbg !865
  %5592 = add i32 %5584, %5591, !dbg !866
  store i32 %5592, i32* %5578, align 4, !dbg !866
  %5593 = load i64, i64* %5278, align 4, !dbg !867
  %5594 = icmp ne i64 %5593, 0, !dbg !867
  br i1 %5594, label %5599, label %5595, !dbg !868

5595:                                             ; preds = %5587
  %5596 = zext i32 %5590 to i64, !dbg !869
  %5597 = load i64, i64* %5280, align 4, !dbg !870
  %5598 = add i64 %5597, %5596, !dbg !870
  store i64 %5598, i64* %5280, align 4, !dbg !870
  br label %5603, !dbg !871

5599:                                             ; preds = %5587
  %5600 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %5505), !dbg !872
  %5601 = load i32, i32* %5577, align 4, !dbg !873
  %5602 = add i32 %5601, %5590, !dbg !873
  store i32 %5602, i32* %5577, align 4, !dbg !873
  br label %5603, !dbg !874

5603:                                             ; preds = %5595, %5599, %5574
  %5604 = load i32, i32* %5577, align 4, !dbg !875
  %5605 = zext i32 %5604 to i64, !dbg !876
  %5606 = load i64, i64* %5278, align 4, !dbg !877
  %5607 = add i64 %5606, %5605, !dbg !877
  store i64 %5607, i64* %5278, align 4, !dbg !877
  %5608 = load i32, i32* %5578, align 4, !dbg !878
  %5609 = zext i32 %5608 to i64, !dbg !879
  %5610 = call i32 @sqlite3VarintLen(i64 %5609), !dbg !880
  %5611 = load i32, i32* %5279, align 4, !dbg !881
  %5612 = add i32 %5611, %5610, !dbg !881
  store i32 %5612, i32* %5279, align 4, !dbg !881
  store i32 %5608, i32* %5514, align 4, !dbg !882
  br label %5613, !dbg !883

5613:                                             ; preds = %5552, %5555, %5558, %5564, %5567, %5547, %5544, %5603, %5569, %5520
  %5614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 5, !dbg !885
  %5615 = load i32, i32* %5279, align 4, !dbg !886
  %5616 = zext i32 %5615 to i64, !dbg !887
  %5617 = icmp slt i32 %5615, 126, !dbg !888
  br i1 %5617, label %5618, label %5620, !dbg !889

5618:                                             ; preds = %5613
  %5619 = add i32 %5615, 1, !dbg !890
  store i32 %5619, i32* %5279, align 4, !dbg !890
  br label %5629, !dbg !891

5620:                                             ; preds = %5613
  %5621 = call i32 @sqlite3VarintLen(i64 %5616), !dbg !892
  %5622 = load i32, i32* %5279, align 4, !dbg !893
  %5623 = add i32 %5622, %5621, !dbg !893
  store i32 %5623, i32* %5279, align 4, !dbg !893
  %5624 = call i32 @sqlite3VarintLen(i64 %5616), !dbg !894
  %5625 = icmp slt i32 %5621, %5624, !dbg !895
  br i1 %5625, label %5626, label %5629, !dbg !896

5626:                                             ; preds = %5620
  %5627 = load i32, i32* %5279, align 4, !dbg !897
  %5628 = add i32 %5627, 1, !dbg !897
  store i32 %5628, i32* %5279, align 4, !dbg !897
  br label %5629, !dbg !898

5629:                                             ; preds = %5626, %5620, %5618
  %5630 = load i32, i32* %5279, align 4, !dbg !899
  %5631 = zext i32 %5630 to i64, !dbg !899
  %5632 = load i64, i64* %5278, align 4, !dbg !900
  %5633 = add i64 %5631, %5632, !dbg !900
  %5634 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 7, !dbg !901
  %5635 = load i32, i32* %5634, align 4, !dbg !902
  %5636 = zext i32 %5635 to i64, !dbg !903
  %5637 = load i64, i64* %5280, align 4, !dbg !904
  %5638 = add i64 %5633, %5637, !dbg !905
  %5639 = icmp sle i64 %5638, %5636, !dbg !906
  br i1 %5639, label %5640, label %5643, !dbg !907

5640:                                             ; preds = %5629
  %5641 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 6, !dbg !908
  %5642 = load i8*, i8** %5641, align 8, !dbg !909
  store i8* %5642, i8** %5614, align 8, !dbg !910
  br label %5646, !dbg !911

5643:                                             ; preds = %5629
  %5644 = trunc i64 %5633 to i32, !dbg !912
  %5645 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %5287, i32 %5644), !dbg !913
  br label %5646, !dbg !914

5646:                                             ; preds = %5643, %5640
  %5647 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 4, !dbg !915
  %5648 = trunc i64 %5633 to i32, !dbg !916
  store i32 %5648, i32* %5647, align 4, !dbg !917
  %5649 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 1, !dbg !918
  store i16 16, i16* %5649, align 2, !dbg !919
  %5650 = load i64, i64* %5280, align 4, !dbg !920
  %5651 = icmp ne i64 %5650, 0, !dbg !921
  br i1 %5651, label %5652, label %5658, !dbg !922

5652:                                             ; preds = %5646
  %5653 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5287, i32 0, i32 0, i32 0, !dbg !923
  %5654 = bitcast double* %5653 to i32*, !dbg !924
  %5655 = trunc i64 %5650 to i32, !dbg !925
  store i32 %5655, i32* %5654, align 4, !dbg !926
  %5656 = load i16, i16* %5649, align 2, !dbg !927
  %5657 = or i16 %5656, 16384, !dbg !928
  store i16 %5657, i16* %5649, align 2, !dbg !929
  br label %5658, !dbg !930

5658:                                             ; preds = %5652, %5646
  %5659 = alloca i8*, align 8, !dbg !931
  %5660 = load i8*, i8** %5614, align 8, !dbg !932
  store i8* %5660, i8** %5659, align 8, !dbg !933
  %5661 = load i32, i32* %5279, align 4, !dbg !934
  %5662 = zext i32 %5661 to i64, !dbg !935
  %5663 = getelementptr i8, i8* %5660, i32 %5661, !dbg !936
  store i8* %5663, i8** %5281, align 8, !dbg !937
  %5664 = call i32 @sqlite3PutVarint(i8* %5660, i64 %5662), !dbg !938
  %5665 = getelementptr i8, i8* %5660, i32 %5664, !dbg !939
  store i8* %5665, i8** %5659, align 8, !dbg !940
  %5666 = load i8*, i8** %5281, align 8, !dbg !941
  %5667 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5285, i32 0, i32 8, !dbg !942
  %5668 = load i32, i32* %5667, align 4, !dbg !943
  %5669 = zext i32 %5668 to i64, !dbg !944
  %5670 = call i32 @sqlite3PutVarint(i8* %5665, i64 %5669), !dbg !945
  %5671 = getelementptr i8, i8* %5665, i32 %5670, !dbg !946
  store i8* %5671, i8** %5659, align 8, !dbg !947
  %5672 = call i32 @sqlite3VdbeSerialPut(i8* %5666, %struct.sqlite3_value* %5285, i32 %5668), !dbg !948
  %5673 = getelementptr i8, i8* %5666, i32 %5672, !dbg !949
  %5674 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5285, i32 1, !dbg !950
  %5675 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5674, i32 0, i32 8, !dbg !942
  %5676 = load i32, i32* %5675, align 4, !dbg !943
  %5677 = zext i32 %5676 to i64, !dbg !944
  %5678 = call i32 @sqlite3PutVarint(i8* %5671, i64 %5677), !dbg !945
  %5679 = getelementptr i8, i8* %5671, i32 %5678, !dbg !946
  store i8* %5679, i8** %5659, align 8, !dbg !947
  %5680 = call i32 @sqlite3VdbeSerialPut(i8* %5673, %struct.sqlite3_value* %5674, i32 %5676), !dbg !948
  %5681 = getelementptr i8, i8* %5673, i32 %5680, !dbg !949
  %5682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5674, i32 1, !dbg !950
  %5683 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5682, i32 0, i32 8, !dbg !942
  %5684 = load i32, i32* %5683, align 4, !dbg !943
  %5685 = zext i32 %5684 to i64, !dbg !944
  %5686 = call i32 @sqlite3PutVarint(i8* %5679, i64 %5685), !dbg !945
  %5687 = getelementptr i8, i8* %5679, i32 %5686, !dbg !946
  store i8* %5687, i8** %5659, align 8, !dbg !947
  %5688 = call i32 @sqlite3VdbeSerialPut(i8* %5681, %struct.sqlite3_value* %5682, i32 %5684), !dbg !948
  call void @llvm.stackrestore(i8* %5277), !dbg !951
  br label %5689, !dbg !74

5689:                                             ; preds = %17, %5658
  %5690 = call i8* @llvm.stacksave(), !dbg !952
  %5691 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !955
  %5692 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5691, align 8, !dbg !956
  %5693 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !957
  %5694 = call i8* @llvm.stacksave(), !dbg !958
  %5695 = alloca i32, align 8, !dbg !959
  store i32 0, i32* %5695, align 4, !dbg !958
  %5696 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5693, i32 0, i32 1, !dbg !958
  %5697 = load i16, i16* %5696, align 2, !dbg !958
  %5698 = and i16 %5697, 16384, !dbg !958
  %5699 = icmp ne i16 %5698, 0, !dbg !958
  br i1 %5699, label %5700, label %5702, !dbg !958

5700:                                             ; preds = %5689
  %5701 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %5693), !dbg !958
  store i32 %5701, i32* %5695, align 4, !dbg !958
  br label %5702, !dbg !959

5702:                                             ; preds = %5700, %5689
  call void @llvm.stackrestore(i8* %5694), !dbg !958
  %5703 = load i32, i32* %5695, align 4, !dbg !958
  %5704 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %5692, %struct.sqlite3_value* %5693), !dbg !960
  call void @llvm.stackrestore(i8* %5690), !dbg !961
  br label %5705, !dbg !74

5705:                                             ; preds = %17, %5702, %4488, %4451, %4176, %4147, %3877, %3783, %3457, %3428, %3158, %3064, %2533, %2439, %1908, %1879, %1609, %1581, %1311, %1277, %895, %861, %504, %475
  %5706 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !962
  %5707 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5706, align 8, !dbg !965
  %5708 = ptrtoint %struct.VdbeCursor* %5707 to i64, !dbg !966
  %5709 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5707, i32 0, i32 12, i32 0, !dbg !967
  %5710 = load %struct.BtCursor*, %struct.BtCursor** %5709, align 8, !dbg !968
  %5711 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %5710, i32 0), !dbg !969
  %5712 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5707, i32 0, i32 2, !dbg !970
  %5713 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5707, i32 0, i32 9, !dbg !971
  store i32 0, i32* %5713, align 4, !dbg !972
  %5714 = icmp eq i32 %5711, 0, !dbg !973
  br i1 %5714, label %5715, label %5716, !dbg !974

5715:                                             ; preds = %5705
  store i8 0, i8* %5712, align 1, !dbg !975
  br label %210, !dbg !976

5716:                                             ; preds = %5705
  store i8 1, i8* %5712, align 1, !dbg !977
  br label %5717, !dbg !978

5717:                                             ; preds = %17, %5716, %204
  %5718 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 8, i32 3, i32 -1, i8 3), !dbg !979
  %5719 = ptrtoint %struct.VdbeCursor* %5718 to i64, !dbg !982
  %5720 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5718, i32 0, i32 2, !dbg !983
  store i8 1, i8* %5720, align 1, !dbg !984
  %5721 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5718, i32 0, i32 10, !dbg !985
  store i32 20, i32* %5721, align 4, !dbg !986
  %5722 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5718, i32 0, i32 4, !dbg !987
  store i8 1, i8* %5722, align 1, !dbg !988
  %5723 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !989
  %5724 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5718, i32 0, i32 12, i32 0, !dbg !990
  store %struct.BtCursor* %5723, %struct.BtCursor** %5724, align 8, !dbg !991
  br label %5725, !dbg !74

5725:                                             ; preds = %17, %5717
  %5726 = call i8* @llvm.stacksave(), !dbg !128
  %5727 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !131
  %5728 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %5727, i32 7, !dbg !132
  %5729 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5728, align 8, !dbg !133
  %5730 = alloca i32, align 4, !dbg !134
  store i32 1, i32* %5730, align 4, !dbg !135
  %5731 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5729, i32 0, i32 0, !dbg !136
  %5732 = load i8, i8* %5731, align 1, !dbg !137
  %5733 = icmp eq i8 %5732, 1, !dbg !138
  %5734 = alloca i32, align 4, !dbg !139
  store i32 0, i32* %5734, align 4, !dbg !140
  br i1 %5733, label %5735, label %5737, !dbg !141

5735:                                             ; preds = %5725
  %5736 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %5729, i32* %5730), !dbg !142
  store i32 %5736, i32* %5734, align 4, !dbg !143
  br label %5743, !dbg !144

5737:                                             ; preds = %5725
  %5738 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5729, i32 0, i32 12, i32 0, !dbg !145
  %5739 = load %struct.BtCursor*, %struct.BtCursor** %5738, align 8, !dbg !146
  %5740 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %5739, i32* %5730), !dbg !147
  store i32 %5740, i32* %5734, align 4, !dbg !148
  %5741 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5729, i32 0, i32 3, !dbg !149
  store i8 0, i8* %5741, align 1, !dbg !150
  %5742 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5729, i32 0, i32 9, !dbg !151
  store i32 0, i32* %5742, align 4, !dbg !152
  br label %5743, !dbg !153

5743:                                             ; preds = %5737, %5735
  %5744 = load i32, i32* %5734, align 4, !dbg !154
  %5745 = load i32, i32* %5730, align 4, !dbg !155
  %5746 = trunc i32 %5745 to i8, !dbg !156
  %5747 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5729, i32 0, i32 2, !dbg !157
  store i8 %5746, i8* %5747, align 1, !dbg !158
  call void @llvm.stackrestore(i8* %5726), !dbg !159
  %5748 = icmp ne i32 %5745, 0, !dbg !160
  br i1 %5748, label %7577, label %5749, !dbg !161

5749:                                             ; preds = %17, %7128, %5743
  %5750 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !992
  %5751 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !995
  %5752 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %5751, i32 7, !dbg !996
  %5753 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5752, align 8, !dbg !997
  %5754 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %5753, %struct.sqlite3_value* %5750), !dbg !998
  %5755 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %5751, i32 8, !dbg !999
  %5756 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5755, align 8, !dbg !1000
  %5757 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5756, i32 0, i32 9, !dbg !1001
  store i32 0, i32* %5757, align 4, !dbg !1002
  br label %5758, !dbg !74

5758:                                             ; preds = %17, %5749
  %5759 = call i8* @llvm.stacksave(), !dbg !162
  %5760 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %5761 = load i8, i8* %5760, align 1, !dbg !166
  %5762 = alloca i32, align 4, !dbg !167
  store i32 8, i32* %5762, align 4, !dbg !168
  %5763 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !169
  %5764 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %5765 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5763, align 8, !dbg !171
  store %struct.VdbeCursor* %5765, %struct.VdbeCursor** %5764, align 8, !dbg !172
  %5766 = alloca i8*, align 8, !dbg !173
  %5767 = alloca i32, align 4, !dbg !174
  %5768 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5764, i32* %5762), !dbg !175
  %5769 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5764, align 8, !dbg !176
  %5770 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !177
  %5771 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 16, !dbg !178
  %5772 = load i16, i16* %5771, align 2, !dbg !179
  %5773 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 19, !dbg !180
  %5774 = load i32*, i32** %5773, align 8, !dbg !181
  %5775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 0, !dbg !182
  %5776 = load i8, i8* %5775, align 1, !dbg !183
  %5777 = icmp ne i8 %5776, 3, !dbg !184
  %5778 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 2, !dbg !185
  %5779 = load i8, i8* %5778, align 1, !dbg !186
  %5780 = icmp ne i8 %5779, 0, !dbg !187
  %5781 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 14, !dbg !188
  %5782 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 21, !dbg !189
  %5783 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 22, !dbg !190
  %5784 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 20, !dbg !191
  %5785 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 17, !dbg !192
  %5786 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 9, !dbg !193
  %5787 = load i32, i32* %5786, align 4, !dbg !194
  %5788 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %5789 = load i32, i32* %5788, align 4, !dbg !196
  %5790 = icmp ne i32 %5787, %5789, !dbg !197
  br i1 %5790, label %5791, label %5833, !dbg !198

5791:                                             ; preds = %5758
  br i1 %5780, label %5813, label %5808, !dbg !199

5792:                                             ; preds = %5808, %5815
  %5793 = load i32, i32* %5788, align 4, !dbg !200
  store i32 %5793, i32* %5786, align 4, !dbg !201
  %5794 = load i8*, i8** %5784, align 8, !dbg !202
  %5795 = load i8, i8* %5794, align 1, !dbg !203
  %5796 = icmp sgt i8 %5795, -1, !dbg !206
  br i1 %5796, label %5797, label %5799, !dbg !207

5797:                                             ; preds = %5792
  %5798 = zext i8 %5795 to i32, !dbg !208
  store i32 %5798, i32* %5774, align 4, !dbg !209
  store i32 1, i32* %5781, align 4, !dbg !210
  br label %5802, !dbg !211

5799:                                             ; preds = %5792
  %5800 = call i8 @sqlite3GetVarint32(i8* %5794, i32* %5774), !dbg !212
  %5801 = zext i8 %5800 to i32, !dbg !213
  store i32 %5801, i32* %5781, align 4, !dbg !214
  br label %5802, !dbg !215

5802:                                             ; preds = %5799, %5797
  store i16 0, i16* %5785, align 2, !dbg !216
  %5803 = load i32, i32* %5783, align 4, !dbg !217
  %5804 = load i32, i32* %5774, align 4, !dbg !218
  %5805 = icmp ult i32 %5803, %5804, !dbg !219
  br i1 %5805, label %5807, label %5806, !dbg !220

5806:                                             ; preds = %5802
  store i8* %5794, i8** %5766, align 8, !dbg !221
  br label %5924, !dbg !222

5807:                                             ; preds = %5802
  store i8* null, i8** %5784, align 8, !dbg !223
  store i32 0, i32* %5783, align 4, !dbg !224
  br label %5833, !dbg !225

5808:                                             ; preds = %5791
  %5809 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 12, i32 0, !dbg !226
  %5810 = load %struct.BtCursor*, %struct.BtCursor** %5809, align 8, !dbg !227
  %5811 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5810), !dbg !228
  store i32 %5811, i32* %5782, align 4, !dbg !229
  %5812 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5810, i32* %5783), !dbg !230
  store i8* %5812, i8** %5784, align 8, !dbg !231
  br label %5792, !dbg !232

5813:                                             ; preds = %5791
  %5814 = icmp eq i8 %5776, 3, !dbg !233
  br i1 %5814, label %5815, label %5826, !dbg !234

5815:                                             ; preds = %5813
  %5816 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 10, !dbg !235
  %5817 = load i32, i32* %5816, align 4, !dbg !236
  %5818 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5817, !dbg !237
  %5819 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5818, i32 0, i32 1, !dbg !238
  %5820 = load i16, i16* %5819, align 2, !dbg !239
  %5821 = and i16 %5820, 16, !dbg !240
  %5822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5818, i32 0, i32 4, !dbg !241
  %5823 = load i32, i32* %5822, align 4, !dbg !242
  store i32 %5823, i32* %5782, align 4, !dbg !243
  store i32 %5823, i32* %5783, align 4, !dbg !244
  %5824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5818, i32 0, i32 5, !dbg !245
  %5825 = load i8*, i8** %5824, align 8, !dbg !246
  store i8* %5825, i8** %5784, align 8, !dbg !247
  br label %5792, !dbg !248

5826:                                             ; preds = %5813
  %5827 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 1, !dbg !249
  %5828 = load i16, i16* %5827, align 2, !dbg !249
  %5829 = and i16 %5828, 9216, !dbg !249
  %5830 = icmp ne i16 %5829, 0, !dbg !249
  br i1 %5830, label %5831, label %5832, !dbg !249

5831:                                             ; preds = %5826
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5770), !dbg !249
  br label %6012, !dbg !249

5832:                                             ; preds = %5826
  store i16 1, i16* %5827, align 2, !dbg !249
  br label %6012, !dbg !249

5833:                                             ; preds = %5807, %5758
  %5834 = load i16, i16* %5785, align 2, !dbg !250
  %5835 = icmp ule i16 %5834, 0, !dbg !251
  br i1 %5835, label %5916, label %5913, !dbg !252

5836:                                             ; preds = %5913, %6002
  %5837 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 1, !dbg !253
  %5838 = load i16, i16* %5837, align 2, !dbg !254
  %5839 = and i16 9216, %5838, !dbg !255
  %5840 = icmp eq i16 0, %5839, !dbg !256
  br i1 %5840, label %5841, label %5845, !dbg !257

5841:                                             ; preds = %5836
  %5842 = icmp ne i16 %5839, 0, !dbg !258
  br i1 %5842, label %5843, label %5844, !dbg !258

5843:                                             ; preds = %5841
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5770), !dbg !258
  br label %5845, !dbg !258

5844:                                             ; preds = %5841
  store i16 1, i16* %5837, align 2, !dbg !258
  br label %5845, !dbg !258

5845:                                             ; preds = %5843, %5844, %5836
  %5846 = load i32, i32* %5767, align 4, !dbg !259
  %5847 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 23, i32 0, !dbg !260
  %5848 = load i32, i32* %5847, align 4, !dbg !261
  %5849 = load i32, i32* %5783, align 4, !dbg !262
  %5850 = getelementptr i32, i32* %5774, i32 1, !dbg !263
  %5851 = load i32, i32* %5850, align 4, !dbg !264
  %5852 = icmp sge i32 %5849, %5851, !dbg !265
  br i1 %5852, label %5853, label %5892, !dbg !266

5853:                                             ; preds = %5845
  %5854 = load i8*, i8** %5784, align 8, !dbg !267
  %5855 = ptrtoint i8* %5854 to i64, !dbg !268
  %5856 = load i32, i32* %5774, align 4, !dbg !269
  %5857 = zext i32 %5856 to i64, !dbg !270
  %5858 = add i64 %5855, %5857, !dbg !271
  %5859 = inttoptr i64 %5858 to i8*, !dbg !272
  store i8* %5859, i8** %5766, align 8, !dbg !273
  %5860 = load i32, i32* %5767, align 4, !dbg !274
  %5861 = icmp ult i32 %5860, 12, !dbg !275
  br i1 %5861, label %5862, label %5864, !dbg !276

5862:                                             ; preds = %5853
  %5863 = call i32 @sqlite3VdbeSerialGet(i8* %5859, i32 %5860, %struct.sqlite3_value* %5770), !dbg !277
  br label %6012, !dbg !278

5864:                                             ; preds = %5853
  %5865 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %5865, align 2, !dbg !280
  %5866 = getelementptr i16, i16* %5865, i32 1, !dbg !281
  store i16 514, i16* %5866, align 2, !dbg !282
  %5867 = load i32, i32* %5767, align 4, !dbg !283
  %5868 = sub i32 %5867, 12, !dbg !284
  %5869 = lshr i32 %5868, 1, !dbg !285
  %5870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 4, !dbg !286
  store i32 %5869, i32* %5870, align 4, !dbg !287
  %5871 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 2, !dbg !288
  store i8 %5761, i8* %5871, align 1, !dbg !289
  %5872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 5, !dbg !290
  %5873 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 7, !dbg !291
  %5874 = load i32, i32* %5873, align 4, !dbg !292
  %5875 = add i32 %5869, 2, !dbg !293
  %5876 = icmp slt i32 %5874, %5875, !dbg !294
  br i1 %5876, label %5877, label %5879, !dbg !295

5877:                                             ; preds = %5864
  store i16 1, i16* %5837, align 2, !dbg !296
  %5878 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5770, i32 %5875, i32 0), !dbg !297
  br label %5882, !dbg !298

5879:                                             ; preds = %5864
  %5880 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 6, !dbg !299
  %5881 = load i8*, i8** %5880, align 8, !dbg !300
  store i8* %5881, i8** %5872, align 8, !dbg !301
  br label %5882, !dbg !302

5882:                                             ; preds = %5879, %5877
  %5883 = zext i32 %5869 to i64, !dbg !303
  %5884 = load i8*, i8** %5872, align 8, !dbg !304
  %5885 = load i8*, i8** %5766, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5884, i8* %5885, i64 %5883, i1 false), !dbg !306
  %5886 = getelementptr i8, i8* %5884, i32 %5869, !dbg !307
  store i8 0, i8* %5886, align 1, !dbg !308
  %5887 = add i32 %5869, 1, !dbg !309
  %5888 = getelementptr i8, i8* %5884, i32 %5887, !dbg !310
  store i8 0, i8* %5888, align 1, !dbg !311
  %5889 = and i32 %5867, 1, !dbg !312
  %5890 = getelementptr i16, i16* %5865, i32 %5889, !dbg !313
  %5891 = load i16, i16* %5890, align 2, !dbg !314
  store i16 %5891, i16* %5837, align 2, !dbg !315
  br label %6012, !dbg !316

5892:                                             ; preds = %5845
  %5893 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 2, !dbg !317
  store i8 %5761, i8* %5893, align 1, !dbg !318
  %5894 = load i32, i32* %5767, align 4, !dbg !319
  %5895 = and i32 %5894, 1, !dbg !320
  %5896 = icmp eq i32 %5895, 0, !dbg !321
  %5897 = icmp sge i32 %5894, 12, !dbg !322
  %5898 = and i1 %5897, %5896, !dbg !323
  %5899 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5894), !dbg !324
  %5900 = icmp eq i32 %5899, 0, !dbg !325
  br i1 %5900, label %5911, label %5901, !dbg !326

5901:                                             ; preds = %5892
  %5902 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 12, i32 0, !dbg !327
  %5903 = load %struct.BtCursor*, %struct.BtCursor** %5902, align 8, !dbg !328
  %5904 = load i32, i32* %5774, align 4, !dbg !329
  %5905 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5903, i32 %5904, i32 %5899, %struct.sqlite3_value* %5770), !dbg !330
  %5906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 5, !dbg !331
  %5907 = load i8*, i8** %5906, align 8, !dbg !332
  %5908 = call i32 @sqlite3VdbeSerialGet(i8* %5907, i32 %5894, %struct.sqlite3_value* %5770), !dbg !333
  %5909 = load i16, i16* %5837, align 2, !dbg !334
  %5910 = and i16 %5909, -4097, !dbg !335
  store i16 %5910, i16* %5837, align 2, !dbg !336
  br label %6012, !dbg !337

5911:                                             ; preds = %5892
  %5912 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5894, %struct.sqlite3_value* %5770), !dbg !338
  br label %6012, !dbg !339

5913:                                             ; preds = %5833
  %5914 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 23, i32 0, !dbg !340
  %5915 = load i32, i32* %5914, align 4, !dbg !341
  store i32 %5915, i32* %5767, align 4, !dbg !342
  br label %5836, !dbg !343

5916:                                             ; preds = %5833
  %5917 = load i32, i32* %5781, align 4, !dbg !344
  %5918 = load i32, i32* %5774, align 4, !dbg !345
  %5919 = icmp ult i32 %5917, %5918, !dbg !346
  br i1 %5919, label %5920, label %6001, !dbg !347

5920:                                             ; preds = %5916
  %5921 = load i8*, i8** %5784, align 8, !dbg !348
  %5922 = icmp eq i8* %5921, null, !dbg !349
  br i1 %5922, label %5924, label %5923, !dbg !350

5923:                                             ; preds = %5920
  store i8* %5921, i8** %5766, align 8, !dbg !351
  br label %5924, !dbg !352

5924:                                             ; preds = %5923, %5920, %5806
  %5925 = alloca i32, align 4, !dbg !353
  %5926 = load i16, i16* %5785, align 2, !dbg !354
  %5927 = zext i16 %5926 to i32, !dbg !355
  store i32 %5927, i32* %5925, align 4, !dbg !356
  %5928 = alloca i64, align 8, !dbg !357
  %5929 = getelementptr i32, i32* %5774, i32 %5927, !dbg !358
  %5930 = load i32, i32* %5929, align 4, !dbg !359
  %5931 = zext i32 %5930 to i64, !dbg !360
  store i64 %5931, i64* %5928, align 4, !dbg !361
  %5932 = load i8*, i8** %5766, align 8, !dbg !362
  %5933 = load i32, i32* %5781, align 4, !dbg !363
  %5934 = alloca i8*, align 8, !dbg !364
  %5935 = getelementptr i8, i8* %5932, i32 %5933, !dbg !365
  store i8* %5935, i8** %5934, align 8, !dbg !366
  %5936 = load i32, i32* %5774, align 4, !dbg !367
  %5937 = getelementptr i8, i8* %5932, i32 %5936, !dbg !368
  br label %5938, !dbg !369

5938:                                             ; preds = %5945, %5924
  %5939 = load i32, i32* %5925, align 4, !dbg !370
  %5940 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5769, i32 0, i32 23, i32 %5939, !dbg !371
  %5941 = load i8*, i8** %5934, align 8, !dbg !372
  %5942 = load i8, i8* %5941, align 1, !dbg !373
  %5943 = zext i8 %5942 to i32, !dbg !374
  store i32 %5943, i32* %5767, align 4, !dbg !375
  store i32 %5943, i32* %5940, align 4, !dbg !376
  %5944 = icmp sgt i8 %5942, -1, !dbg !377
  br i1 %5944, label %5968, label %5959, !dbg !378

5945:                                             ; preds = %5959, %5968
  %5946 = load i32, i32* %5925, align 4, !dbg !379
  %5947 = add i32 %5946, 1, !dbg !380
  store i32 %5947, i32* %5925, align 4, !dbg !381
  %5948 = load i64, i64* %5928, align 4, !dbg !382
  %5949 = and i64 4294967295, %5948, !dbg !383
  %5950 = trunc i64 %5949 to i32, !dbg !384
  %5951 = getelementptr i32, i32* %5774, i32 %5947, !dbg !385
  store i32 %5950, i32* %5951, align 4, !dbg !386
  %5952 = load i32, i32* %5925, align 4, !dbg !387
  %5953 = icmp sle i32 %5952, 0, !dbg !388
  %5954 = load i8*, i8** %5934, align 8, !dbg !389
  %5955 = ptrtoint i8* %5954 to i64, !dbg !390
  %5956 = ptrtoint i8* %5937 to i64, !dbg !391
  %5957 = icmp ult i64 %5955, %5956, !dbg !392
  %5958 = and i1 %5953, %5957, !dbg !393
  br i1 %5958, label %5938, label %5977, !dbg !394

5959:                                             ; preds = %5938
  %5960 = load i8*, i8** %5934, align 8, !dbg !395
  %5961 = call i8 @sqlite3GetVarint32(i8* %5960, i32* %5767), !dbg !396
  %5962 = getelementptr i8, i8* %5960, i8 %5961, !dbg !397
  store i8* %5962, i8** %5934, align 8, !dbg !398
  %5963 = load i32, i32* %5767, align 4, !dbg !399
  store i32 %5963, i32* %5940, align 4, !dbg !400
  %5964 = load i64, i64* %5928, align 4, !dbg !401
  %5965 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5963), !dbg !402
  %5966 = zext i32 %5965 to i64, !dbg !403
  %5967 = add i64 %5964, %5966, !dbg !404
  store i64 %5967, i64* %5928, align 4, !dbg !405
  br label %5945, !dbg !406

5968:                                             ; preds = %5938
  %5969 = getelementptr i8, i8* %5941, i32 1, !dbg !407
  store i8* %5969, i8** %5934, align 8, !dbg !408
  %5970 = load i32, i32* %5767, align 4, !dbg !409
  %5971 = trunc i32 %5970 to i8, !dbg !410
  %5972 = getelementptr i8, i8* %4, i8 %5971, !dbg !411
  %5973 = load i8, i8* %5972, align 1, !dbg !412
  %5974 = zext i8 %5973 to i64, !dbg !413
  %5975 = load i64, i64* %5928, align 4, !dbg !414
  %5976 = add i64 %5975, %5974, !dbg !415
  store i64 %5976, i64* %5928, align 4, !dbg !416
  br label %5945, !dbg !417

5977:                                             ; preds = %5945
  %5978 = load i64, i64* %5928, align 4, !dbg !418
  %5979 = load i32, i32* %5782, align 4, !dbg !419
  %5980 = zext i32 %5979 to i64, !dbg !420
  %5981 = icmp uge i64 %5955, %5956, !dbg !421
  %5982 = icmp ugt i64 %5955, %5956, !dbg !422
  %5983 = icmp ne i64 %5978, %5980, !dbg !423
  %5984 = icmp ugt i64 %5978, %5980, !dbg !424
  %5985 = or i1 %5982, %5983, !dbg !425
  %5986 = and i1 %5981, %5985, !dbg !426
  %5987 = or i1 %5986, %5984, !dbg !427
  br i1 %5987, label %5988, label %5992, !dbg !428

5988:                                             ; preds = %5977
  %5989 = load i32, i32* %5774, align 4, !dbg !429
  %5990 = icmp eq i32 %5989, 0, !dbg !430
  br i1 %5990, label %5991, label %5992, !dbg !431

5991:                                             ; preds = %5988
  store i32 0, i32* %5925, align 4, !dbg !432
  store i8* %5937, i8** %5934, align 8, !dbg !433
  br label %5992, !dbg !434

5992:                                             ; preds = %5991, %5988, %5977
  %5993 = load i32, i32* %5925, align 4, !dbg !435
  %5994 = trunc i32 %5993 to i16, !dbg !436
  store i16 %5994, i16* %5785, align 2, !dbg !437
  %5995 = load i8*, i8** %5934, align 8, !dbg !438
  %5996 = ptrtoint i8* %5995 to i64, !dbg !439
  %5997 = load i8*, i8** %5766, align 8, !dbg !440
  %5998 = ptrtoint i8* %5997 to i64, !dbg !441
  %5999 = sub i64 %5996, %5998, !dbg !442
  %6000 = trunc i64 %5999 to i32, !dbg !443
  store i32 %6000, i32* %5781, align 4, !dbg !444
  br label %6002, !dbg !445

6001:                                             ; preds = %5916
  store i32 0, i32* %5767, align 4, !dbg !446
  br label %6002, !dbg !447

6002:                                             ; preds = %5992, %6001
  %6003 = load i16, i16* %5785, align 2, !dbg !448
  %6004 = icmp sle i16 %6003, 0, !dbg !449
  br i1 %6004, label %6005, label %5836, !dbg !450

6005:                                             ; preds = %6002
  %6006 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5770, i32 0, i32 1, !dbg !451
  %6007 = load i16, i16* %6006, align 2, !dbg !451
  %6008 = and i16 %6007, 9216, !dbg !451
  %6009 = icmp ne i16 %6008, 0, !dbg !451
  br i1 %6009, label %6010, label %6011, !dbg !451

6010:                                             ; preds = %6005
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5770), !dbg !451
  br label %6012, !dbg !451

6011:                                             ; preds = %6005
  store i16 1, i16* %6006, align 2, !dbg !451
  br label %6012, !dbg !451

6012:                                             ; preds = %6010, %6011, %5882, %5862, %5901, %5911, %5831, %5832
  call void @llvm.stackrestore(i8* %5759), !dbg !452
  br label %6013, !dbg !74

6013:                                             ; preds = %17, %6012
  %6014 = call i8* @llvm.stacksave(), !dbg !1003
  %6015 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 57, !dbg !1006
  %6016 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6015, i32 0, i32 6, !dbg !1007
  %6017 = bitcast %union.p4union* %6016 to %struct.KeyInfo**, !dbg !1008
  %6018 = load %struct.KeyInfo*, %struct.KeyInfo** %6017, align 8, !dbg !1009
  %6019 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %6018, i32 0, i32 6, i32 0, !dbg !1010
  %6020 = alloca i32*, align 8, !dbg !1011
  store i32* null, i32** %6020, align 8, !dbg !1012
  %6021 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %6018, i32 0, i32 5, !dbg !1013
  %6022 = load i8*, i8** %6021, align 8, !dbg !1014
  %6023 = load %struct.CollSeq*, %struct.CollSeq** %6019, align 8, !dbg !1015
  %6024 = load i8, i8* %6022, align 1, !dbg !1016
  %6025 = and i8 %6024, 1, !dbg !1017
  %6026 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1018
  %6027 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1019
  %6028 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %6026, %struct.sqlite3_value* %6027, %struct.CollSeq* %6023), !dbg !1020
  store i32 %6028, i32* %2, align 4, !dbg !1021
  %6029 = icmp ne i32 %6028, 0, !dbg !1022
  br i1 %6029, label %6030, label %6050, !dbg !1023

6030:                                             ; preds = %6013
  %6031 = and i8 %6024, 2, !dbg !1024
  %6032 = icmp ne i8 %6031, 0, !dbg !1025
  br i1 %6032, label %6033, label %6045, !dbg !1026

6033:                                             ; preds = %6030
  %6034 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, i32 1, !dbg !1027
  %6035 = load i16, i16* %6034, align 2, !dbg !1028
  %6036 = and i16 %6035, 1, !dbg !1029
  %6037 = icmp ne i16 %6036, 0, !dbg !1030
  %6038 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, i32 1, !dbg !1031
  %6039 = load i16, i16* %6038, align 2, !dbg !1032
  %6040 = and i16 %6039, 1, !dbg !1033
  %6041 = icmp ne i16 %6040, 0, !dbg !1034
  %6042 = or i1 %6037, %6041, !dbg !1035
  br i1 %6042, label %6043, label %6045, !dbg !1036

6043:                                             ; preds = %6033
  %6044 = sub i32 0, %6028, !dbg !1037
  store i32 %6044, i32* %2, align 4, !dbg !1038
  br label %6045, !dbg !1039

6045:                                             ; preds = %6033, %6043, %6030
  %6046 = icmp ne i8 %6025, 0, !dbg !1040
  br i1 %6046, label %6047, label %6050, !dbg !1041

6047:                                             ; preds = %6045
  %6048 = load i32, i32* %2, align 4, !dbg !1042
  %6049 = sub i32 0, %6048, !dbg !1043
  store i32 %6049, i32* %2, align 4, !dbg !1044
  br label %6050, !dbg !1045

6050:                                             ; preds = %6047, %6045, %6013
  call void @llvm.stackrestore(i8* %6014), !dbg !1046
  br label %6051, !dbg !74

6051:                                             ; preds = %17, %6050
  %6052 = load i32, i32* %2, align 4, !dbg !1047
  %6053 = icmp slt i32 %6052, 0, !dbg !1050
  %6054 = icmp sgt i32 %6052, 0, !dbg !1051
  %or.cond = or i1 %6053, %6054, !dbg !1052
  br i1 %or.cond, label %6055, label %6074, !dbg !1052

6055:                                             ; preds = %17, %6051
  %6056 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1053
  %6057 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1056
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %6057, %struct.sqlite3_value* %6056), !dbg !1057
  br label %6058, !dbg !74

6058:                                             ; preds = %17, %6055
  %6059 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !95
  %6060 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6059, i32 0, i32 1, !dbg !98
  store i16 4, i16* %6060, align 2, !dbg !99
  %6061 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6059, i32 0, i32 0, i32 0, !dbg !100
  %6062 = bitcast double* %6061 to i64*, !dbg !101
  store i64 60, i64* %6062, align 4, !dbg !102
  br label %7160, !dbg !103

6063:                                             ; preds = %17
  %6064 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !1058
  %6065 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6064, i32 0, i32 0, i32 0, !dbg !1061
  %6066 = bitcast double* %6065 to i64*, !dbg !1062
  %6067 = load i64, i64* %6066, align 4, !dbg !1063
  %6068 = icmp sgt i64 %6067, 0, !dbg !1064
  br i1 %6068, label %6069, label %.critedge, !dbg !1065

6069:                                             ; preds = %6063
  br label %7577, !dbg !1066

.critedge:                                        ; preds = %6063, %17
  %6070 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !95
  %6071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6070, i32 0, i32 1, !dbg !98
  store i16 4, i16* %6071, align 2, !dbg !99
  %6072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6070, i32 0, i32 0, i32 0, !dbg !100
  %6073 = bitcast double* %6072 to i64*, !dbg !101
  store i64 62, i64* %6073, align 4, !dbg !102
  br label %7507, !dbg !103

6074:                                             ; preds = %6051, %17
  %6075 = call i8* @llvm.stacksave(), !dbg !162
  %6076 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %6077 = load i8, i8* %6076, align 1, !dbg !166
  %6078 = alloca i32, align 4, !dbg !167
  store i32 8, i32* %6078, align 4, !dbg !168
  %6079 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !169
  %6080 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %6081 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6079, align 8, !dbg !171
  store %struct.VdbeCursor* %6081, %struct.VdbeCursor** %6080, align 8, !dbg !172
  %6082 = alloca i8*, align 8, !dbg !173
  %6083 = alloca i32, align 4, !dbg !174
  %6084 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6080, i32* %6078), !dbg !175
  %6085 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6080, align 8, !dbg !176
  %6086 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !177
  %6087 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 16, !dbg !178
  %6088 = load i16, i16* %6087, align 2, !dbg !179
  %6089 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 19, !dbg !180
  %6090 = load i32*, i32** %6089, align 8, !dbg !181
  %6091 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 0, !dbg !182
  %6092 = load i8, i8* %6091, align 1, !dbg !183
  %6093 = icmp ne i8 %6092, 3, !dbg !184
  %6094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 2, !dbg !185
  %6095 = load i8, i8* %6094, align 1, !dbg !186
  %6096 = icmp ne i8 %6095, 0, !dbg !187
  %6097 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 14, !dbg !188
  %6098 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 21, !dbg !189
  %6099 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 22, !dbg !190
  %6100 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 20, !dbg !191
  %6101 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 17, !dbg !192
  %6102 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 9, !dbg !193
  %6103 = load i32, i32* %6102, align 4, !dbg !194
  %6104 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %6105 = load i32, i32* %6104, align 4, !dbg !196
  %6106 = icmp ne i32 %6103, %6105, !dbg !197
  br i1 %6106, label %6107, label %6149, !dbg !198

6107:                                             ; preds = %6074
  br i1 %6096, label %6129, label %6124, !dbg !199

6108:                                             ; preds = %6124, %6131
  %6109 = load i32, i32* %6104, align 4, !dbg !200
  store i32 %6109, i32* %6102, align 4, !dbg !201
  %6110 = load i8*, i8** %6100, align 8, !dbg !202
  %6111 = load i8, i8* %6110, align 1, !dbg !203
  %6112 = icmp sgt i8 %6111, -1, !dbg !206
  br i1 %6112, label %6113, label %6115, !dbg !207

6113:                                             ; preds = %6108
  %6114 = zext i8 %6111 to i32, !dbg !208
  store i32 %6114, i32* %6090, align 4, !dbg !209
  store i32 1, i32* %6097, align 4, !dbg !210
  br label %6118, !dbg !211

6115:                                             ; preds = %6108
  %6116 = call i8 @sqlite3GetVarint32(i8* %6110, i32* %6090), !dbg !212
  %6117 = zext i8 %6116 to i32, !dbg !213
  store i32 %6117, i32* %6097, align 4, !dbg !214
  br label %6118, !dbg !215

6118:                                             ; preds = %6115, %6113
  store i16 0, i16* %6101, align 2, !dbg !216
  %6119 = load i32, i32* %6099, align 4, !dbg !217
  %6120 = load i32, i32* %6090, align 4, !dbg !218
  %6121 = icmp ult i32 %6119, %6120, !dbg !219
  br i1 %6121, label %6123, label %6122, !dbg !220

6122:                                             ; preds = %6118
  store i8* %6110, i8** %6082, align 8, !dbg !221
  br label %6242, !dbg !222

6123:                                             ; preds = %6118
  store i8* null, i8** %6100, align 8, !dbg !223
  store i32 0, i32* %6099, align 4, !dbg !224
  br label %6149, !dbg !225

6124:                                             ; preds = %6107
  %6125 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 12, i32 0, !dbg !226
  %6126 = load %struct.BtCursor*, %struct.BtCursor** %6125, align 8, !dbg !227
  %6127 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6126), !dbg !228
  store i32 %6127, i32* %6098, align 4, !dbg !229
  %6128 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6126, i32* %6099), !dbg !230
  store i8* %6128, i8** %6100, align 8, !dbg !231
  br label %6108, !dbg !232

6129:                                             ; preds = %6107
  %6130 = icmp eq i8 %6092, 3, !dbg !233
  br i1 %6130, label %6131, label %6142, !dbg !234

6131:                                             ; preds = %6129
  %6132 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 10, !dbg !235
  %6133 = load i32, i32* %6132, align 4, !dbg !236
  %6134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6133, !dbg !237
  %6135 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6134, i32 0, i32 1, !dbg !238
  %6136 = load i16, i16* %6135, align 2, !dbg !239
  %6137 = and i16 %6136, 16, !dbg !240
  %6138 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6134, i32 0, i32 4, !dbg !241
  %6139 = load i32, i32* %6138, align 4, !dbg !242
  store i32 %6139, i32* %6098, align 4, !dbg !243
  store i32 %6139, i32* %6099, align 4, !dbg !244
  %6140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6134, i32 0, i32 5, !dbg !245
  %6141 = load i8*, i8** %6140, align 8, !dbg !246
  store i8* %6141, i8** %6100, align 8, !dbg !247
  br label %6108, !dbg !248

6142:                                             ; preds = %6129
  %6143 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 1, !dbg !249
  %6144 = load i16, i16* %6143, align 2, !dbg !249
  %6145 = and i16 %6144, 9216, !dbg !249
  %6146 = icmp ne i16 %6145, 0, !dbg !249
  br i1 %6146, label %6147, label %6148, !dbg !249

6147:                                             ; preds = %6142
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6086), !dbg !249
  br label %6330, !dbg !249

6148:                                             ; preds = %6142
  store i16 1, i16* %6143, align 2, !dbg !249
  br label %6330, !dbg !249

6149:                                             ; preds = %6123, %6074
  %6150 = load i16, i16* %6101, align 2, !dbg !250
  %6151 = icmp ule i16 %6150, 1, !dbg !251
  br i1 %6151, label %6234, label %6231, !dbg !252

6152:                                             ; preds = %6231, %6320
  %6153 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 1, !dbg !253
  %6154 = load i16, i16* %6153, align 2, !dbg !254
  %6155 = and i16 9216, %6154, !dbg !255
  %6156 = icmp eq i16 0, %6155, !dbg !256
  br i1 %6156, label %6157, label %6161, !dbg !257

6157:                                             ; preds = %6152
  %6158 = icmp ne i16 %6155, 0, !dbg !258
  br i1 %6158, label %6159, label %6160, !dbg !258

6159:                                             ; preds = %6157
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6086), !dbg !258
  br label %6161, !dbg !258

6160:                                             ; preds = %6157
  store i16 1, i16* %6153, align 2, !dbg !258
  br label %6161, !dbg !258

6161:                                             ; preds = %6159, %6160, %6152
  %6162 = load i32, i32* %6083, align 4, !dbg !259
  %6163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 23, i32 1, !dbg !260
  %6164 = load i32, i32* %6163, align 4, !dbg !261
  %6165 = load i32, i32* %6099, align 4, !dbg !262
  %6166 = getelementptr i32, i32* %6090, i32 2, !dbg !263
  %6167 = load i32, i32* %6166, align 4, !dbg !264
  %6168 = icmp sge i32 %6165, %6167, !dbg !265
  br i1 %6168, label %6169, label %6209, !dbg !266

6169:                                             ; preds = %6161
  %6170 = load i8*, i8** %6100, align 8, !dbg !267
  %6171 = ptrtoint i8* %6170 to i64, !dbg !268
  %6172 = getelementptr i32, i32* %6090, i32 1, !dbg !509
  %6173 = load i32, i32* %6172, align 4, !dbg !269
  %6174 = zext i32 %6173 to i64, !dbg !270
  %6175 = add i64 %6171, %6174, !dbg !271
  %6176 = inttoptr i64 %6175 to i8*, !dbg !272
  store i8* %6176, i8** %6082, align 8, !dbg !273
  %6177 = load i32, i32* %6083, align 4, !dbg !274
  %6178 = icmp ult i32 %6177, 12, !dbg !275
  br i1 %6178, label %6179, label %6181, !dbg !276

6179:                                             ; preds = %6169
  %6180 = call i32 @sqlite3VdbeSerialGet(i8* %6176, i32 %6177, %struct.sqlite3_value* %6086), !dbg !277
  br label %6330, !dbg !278

6181:                                             ; preds = %6169
  %6182 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %6182, align 2, !dbg !280
  %6183 = getelementptr i16, i16* %6182, i32 1, !dbg !281
  store i16 514, i16* %6183, align 2, !dbg !282
  %6184 = load i32, i32* %6083, align 4, !dbg !283
  %6185 = sub i32 %6184, 12, !dbg !284
  %6186 = lshr i32 %6185, 1, !dbg !285
  %6187 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 4, !dbg !286
  store i32 %6186, i32* %6187, align 4, !dbg !287
  %6188 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 2, !dbg !288
  store i8 %6077, i8* %6188, align 1, !dbg !289
  %6189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 5, !dbg !290
  %6190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 7, !dbg !291
  %6191 = load i32, i32* %6190, align 4, !dbg !292
  %6192 = add i32 %6186, 2, !dbg !293
  %6193 = icmp slt i32 %6191, %6192, !dbg !294
  br i1 %6193, label %6194, label %6196, !dbg !295

6194:                                             ; preds = %6181
  store i16 1, i16* %6153, align 2, !dbg !296
  %6195 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6086, i32 %6192, i32 0), !dbg !297
  br label %6199, !dbg !298

6196:                                             ; preds = %6181
  %6197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 6, !dbg !299
  %6198 = load i8*, i8** %6197, align 8, !dbg !300
  store i8* %6198, i8** %6189, align 8, !dbg !301
  br label %6199, !dbg !302

6199:                                             ; preds = %6196, %6194
  %6200 = zext i32 %6186 to i64, !dbg !303
  %6201 = load i8*, i8** %6189, align 8, !dbg !304
  %6202 = load i8*, i8** %6082, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6201, i8* %6202, i64 %6200, i1 false), !dbg !306
  %6203 = getelementptr i8, i8* %6201, i32 %6186, !dbg !307
  store i8 0, i8* %6203, align 1, !dbg !308
  %6204 = add i32 %6186, 1, !dbg !309
  %6205 = getelementptr i8, i8* %6201, i32 %6204, !dbg !310
  store i8 0, i8* %6205, align 1, !dbg !311
  %6206 = and i32 %6184, 1, !dbg !312
  %6207 = getelementptr i16, i16* %6182, i32 %6206, !dbg !313
  %6208 = load i16, i16* %6207, align 2, !dbg !314
  store i16 %6208, i16* %6153, align 2, !dbg !315
  br label %6330, !dbg !316

6209:                                             ; preds = %6161
  %6210 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 2, !dbg !317
  store i8 %6077, i8* %6210, align 1, !dbg !318
  %6211 = load i32, i32* %6083, align 4, !dbg !319
  %6212 = and i32 %6211, 1, !dbg !320
  %6213 = icmp eq i32 %6212, 0, !dbg !321
  %6214 = icmp sge i32 %6211, 12, !dbg !322
  %6215 = and i1 %6214, %6213, !dbg !323
  %6216 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6211), !dbg !324
  %6217 = icmp eq i32 %6216, 0, !dbg !325
  br i1 %6217, label %6229, label %6218, !dbg !326

6218:                                             ; preds = %6209
  %6219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 12, i32 0, !dbg !327
  %6220 = load %struct.BtCursor*, %struct.BtCursor** %6219, align 8, !dbg !328
  %6221 = getelementptr i32, i32* %6090, i32 1, !dbg !510
  %6222 = load i32, i32* %6221, align 4, !dbg !329
  %6223 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6220, i32 %6222, i32 %6216, %struct.sqlite3_value* %6086), !dbg !330
  %6224 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 5, !dbg !331
  %6225 = load i8*, i8** %6224, align 8, !dbg !332
  %6226 = call i32 @sqlite3VdbeSerialGet(i8* %6225, i32 %6211, %struct.sqlite3_value* %6086), !dbg !333
  %6227 = load i16, i16* %6153, align 2, !dbg !334
  %6228 = and i16 %6227, -4097, !dbg !335
  store i16 %6228, i16* %6153, align 2, !dbg !336
  br label %6330, !dbg !337

6229:                                             ; preds = %6209
  %6230 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6211, %struct.sqlite3_value* %6086), !dbg !338
  br label %6330, !dbg !339

6231:                                             ; preds = %6149
  %6232 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 23, i32 1, !dbg !340
  %6233 = load i32, i32* %6232, align 4, !dbg !341
  store i32 %6233, i32* %6083, align 4, !dbg !342
  br label %6152, !dbg !343

6234:                                             ; preds = %6149
  %6235 = load i32, i32* %6097, align 4, !dbg !344
  %6236 = load i32, i32* %6090, align 4, !dbg !345
  %6237 = icmp ult i32 %6235, %6236, !dbg !346
  br i1 %6237, label %6238, label %6319, !dbg !347

6238:                                             ; preds = %6234
  %6239 = load i8*, i8** %6100, align 8, !dbg !348
  %6240 = icmp eq i8* %6239, null, !dbg !349
  br i1 %6240, label %6242, label %6241, !dbg !350

6241:                                             ; preds = %6238
  store i8* %6239, i8** %6082, align 8, !dbg !351
  br label %6242, !dbg !352

6242:                                             ; preds = %6241, %6238, %6122
  %6243 = alloca i32, align 4, !dbg !353
  %6244 = load i16, i16* %6101, align 2, !dbg !354
  %6245 = zext i16 %6244 to i32, !dbg !355
  store i32 %6245, i32* %6243, align 4, !dbg !356
  %6246 = alloca i64, align 8, !dbg !357
  %6247 = getelementptr i32, i32* %6090, i32 %6245, !dbg !358
  %6248 = load i32, i32* %6247, align 4, !dbg !359
  %6249 = zext i32 %6248 to i64, !dbg !360
  store i64 %6249, i64* %6246, align 4, !dbg !361
  %6250 = load i8*, i8** %6082, align 8, !dbg !362
  %6251 = load i32, i32* %6097, align 4, !dbg !363
  %6252 = alloca i8*, align 8, !dbg !364
  %6253 = getelementptr i8, i8* %6250, i32 %6251, !dbg !365
  store i8* %6253, i8** %6252, align 8, !dbg !366
  %6254 = load i32, i32* %6090, align 4, !dbg !367
  %6255 = getelementptr i8, i8* %6250, i32 %6254, !dbg !368
  br label %6256, !dbg !369

6256:                                             ; preds = %6263, %6242
  %6257 = load i32, i32* %6243, align 4, !dbg !370
  %6258 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6085, i32 0, i32 23, i32 %6257, !dbg !371
  %6259 = load i8*, i8** %6252, align 8, !dbg !372
  %6260 = load i8, i8* %6259, align 1, !dbg !373
  %6261 = zext i8 %6260 to i32, !dbg !374
  store i32 %6261, i32* %6083, align 4, !dbg !375
  store i32 %6261, i32* %6258, align 4, !dbg !376
  %6262 = icmp sgt i8 %6260, -1, !dbg !377
  br i1 %6262, label %6286, label %6277, !dbg !378

6263:                                             ; preds = %6277, %6286
  %6264 = load i32, i32* %6243, align 4, !dbg !379
  %6265 = add i32 %6264, 1, !dbg !380
  store i32 %6265, i32* %6243, align 4, !dbg !381
  %6266 = load i64, i64* %6246, align 4, !dbg !382
  %6267 = and i64 4294967295, %6266, !dbg !383
  %6268 = trunc i64 %6267 to i32, !dbg !384
  %6269 = getelementptr i32, i32* %6090, i32 %6265, !dbg !385
  store i32 %6268, i32* %6269, align 4, !dbg !386
  %6270 = load i32, i32* %6243, align 4, !dbg !387
  %6271 = icmp sle i32 %6270, 1, !dbg !388
  %6272 = load i8*, i8** %6252, align 8, !dbg !389
  %6273 = ptrtoint i8* %6272 to i64, !dbg !390
  %6274 = ptrtoint i8* %6255 to i64, !dbg !391
  %6275 = icmp ult i64 %6273, %6274, !dbg !392
  %6276 = and i1 %6271, %6275, !dbg !393
  br i1 %6276, label %6256, label %6295, !dbg !394

6277:                                             ; preds = %6256
  %6278 = load i8*, i8** %6252, align 8, !dbg !395
  %6279 = call i8 @sqlite3GetVarint32(i8* %6278, i32* %6083), !dbg !396
  %6280 = getelementptr i8, i8* %6278, i8 %6279, !dbg !397
  store i8* %6280, i8** %6252, align 8, !dbg !398
  %6281 = load i32, i32* %6083, align 4, !dbg !399
  store i32 %6281, i32* %6258, align 4, !dbg !400
  %6282 = load i64, i64* %6246, align 4, !dbg !401
  %6283 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6281), !dbg !402
  %6284 = zext i32 %6283 to i64, !dbg !403
  %6285 = add i64 %6282, %6284, !dbg !404
  store i64 %6285, i64* %6246, align 4, !dbg !405
  br label %6263, !dbg !406

6286:                                             ; preds = %6256
  %6287 = getelementptr i8, i8* %6259, i32 1, !dbg !407
  store i8* %6287, i8** %6252, align 8, !dbg !408
  %6288 = load i32, i32* %6083, align 4, !dbg !409
  %6289 = trunc i32 %6288 to i8, !dbg !410
  %6290 = getelementptr i8, i8* %4, i8 %6289, !dbg !411
  %6291 = load i8, i8* %6290, align 1, !dbg !412
  %6292 = zext i8 %6291 to i64, !dbg !413
  %6293 = load i64, i64* %6246, align 4, !dbg !414
  %6294 = add i64 %6293, %6292, !dbg !415
  store i64 %6294, i64* %6246, align 4, !dbg !416
  br label %6263, !dbg !417

6295:                                             ; preds = %6263
  %6296 = load i64, i64* %6246, align 4, !dbg !418
  %6297 = load i32, i32* %6098, align 4, !dbg !419
  %6298 = zext i32 %6297 to i64, !dbg !420
  %6299 = icmp uge i64 %6273, %6274, !dbg !421
  %6300 = icmp ugt i64 %6273, %6274, !dbg !422
  %6301 = icmp ne i64 %6296, %6298, !dbg !423
  %6302 = icmp ugt i64 %6296, %6298, !dbg !424
  %6303 = or i1 %6300, %6301, !dbg !425
  %6304 = and i1 %6299, %6303, !dbg !426
  %6305 = or i1 %6304, %6302, !dbg !427
  br i1 %6305, label %6306, label %6310, !dbg !428

6306:                                             ; preds = %6295
  %6307 = load i32, i32* %6090, align 4, !dbg !429
  %6308 = icmp eq i32 %6307, 0, !dbg !430
  br i1 %6308, label %6309, label %6310, !dbg !431

6309:                                             ; preds = %6306
  store i32 0, i32* %6243, align 4, !dbg !432
  store i8* %6255, i8** %6252, align 8, !dbg !433
  br label %6310, !dbg !434

6310:                                             ; preds = %6309, %6306, %6295
  %6311 = load i32, i32* %6243, align 4, !dbg !435
  %6312 = trunc i32 %6311 to i16, !dbg !436
  store i16 %6312, i16* %6101, align 2, !dbg !437
  %6313 = load i8*, i8** %6252, align 8, !dbg !438
  %6314 = ptrtoint i8* %6313 to i64, !dbg !439
  %6315 = load i8*, i8** %6082, align 8, !dbg !440
  %6316 = ptrtoint i8* %6315 to i64, !dbg !441
  %6317 = sub i64 %6314, %6316, !dbg !442
  %6318 = trunc i64 %6317 to i32, !dbg !443
  store i32 %6318, i32* %6097, align 4, !dbg !444
  br label %6320, !dbg !445

6319:                                             ; preds = %6234
  store i32 0, i32* %6083, align 4, !dbg !446
  br label %6320, !dbg !447

6320:                                             ; preds = %6310, %6319
  %6321 = load i16, i16* %6101, align 2, !dbg !448
  %6322 = icmp sle i16 %6321, 1, !dbg !449
  br i1 %6322, label %6323, label %6152, !dbg !450

6323:                                             ; preds = %6320
  %6324 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6086, i32 0, i32 1, !dbg !451
  %6325 = load i16, i16* %6324, align 2, !dbg !451
  %6326 = and i16 %6325, 9216, !dbg !451
  %6327 = icmp ne i16 %6326, 0, !dbg !451
  br i1 %6327, label %6328, label %6329, !dbg !451

6328:                                             ; preds = %6323
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6086), !dbg !451
  br label %6330, !dbg !451

6329:                                             ; preds = %6323
  store i16 1, i16* %6324, align 2, !dbg !451
  br label %6330, !dbg !451

6330:                                             ; preds = %6328, %6329, %6199, %6179, %6218, %6229, %6147, %6148
  call void @llvm.stackrestore(i8* %6075), !dbg !452
  br label %6331, !dbg !74

6331:                                             ; preds = %17, %6330
  %6332 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !749
  %6333 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6332, i32 0, i32 1, !dbg !752
  %6334 = load i16, i16* %6333, align 2, !dbg !753
  %6335 = and i16 %6334, 36, !dbg !754
  %6336 = icmp ne i16 %6335, 0, !dbg !755
  br i1 %6336, label %6337, label %6338, !dbg !756

6337:                                             ; preds = %6331
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6332), !dbg !757
  br label %6338, !dbg !758

6338:                                             ; preds = %6337, %6331, %17
  %6339 = call i8* @llvm.stacksave(), !dbg !162
  %6340 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %6341 = load i8, i8* %6340, align 1, !dbg !166
  %6342 = alloca i32, align 4, !dbg !167
  store i32 8, i32* %6342, align 4, !dbg !168
  %6343 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !169
  %6344 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %6345 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6343, align 8, !dbg !171
  store %struct.VdbeCursor* %6345, %struct.VdbeCursor** %6344, align 8, !dbg !172
  %6346 = alloca i8*, align 8, !dbg !173
  %6347 = alloca i32, align 4, !dbg !174
  %6348 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6344, i32* %6342), !dbg !175
  %6349 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6344, align 8, !dbg !176
  %6350 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !177
  %6351 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 16, !dbg !178
  %6352 = load i16, i16* %6351, align 2, !dbg !179
  %6353 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 19, !dbg !180
  %6354 = load i32*, i32** %6353, align 8, !dbg !181
  %6355 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 0, !dbg !182
  %6356 = load i8, i8* %6355, align 1, !dbg !183
  %6357 = icmp ne i8 %6356, 3, !dbg !184
  %6358 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 2, !dbg !185
  %6359 = load i8, i8* %6358, align 1, !dbg !186
  %6360 = icmp ne i8 %6359, 0, !dbg !187
  %6361 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 14, !dbg !188
  %6362 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 21, !dbg !189
  %6363 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 22, !dbg !190
  %6364 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 20, !dbg !191
  %6365 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 17, !dbg !192
  %6366 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 9, !dbg !193
  %6367 = load i32, i32* %6366, align 4, !dbg !194
  %6368 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %6369 = load i32, i32* %6368, align 4, !dbg !196
  %6370 = icmp ne i32 %6367, %6369, !dbg !197
  br i1 %6370, label %6371, label %6413, !dbg !198

6371:                                             ; preds = %6338
  br i1 %6360, label %6393, label %6388, !dbg !199

6372:                                             ; preds = %6388, %6395
  %6373 = load i32, i32* %6368, align 4, !dbg !200
  store i32 %6373, i32* %6366, align 4, !dbg !201
  %6374 = load i8*, i8** %6364, align 8, !dbg !202
  %6375 = load i8, i8* %6374, align 1, !dbg !203
  %6376 = icmp sgt i8 %6375, -1, !dbg !206
  br i1 %6376, label %6377, label %6379, !dbg !207

6377:                                             ; preds = %6372
  %6378 = zext i8 %6375 to i32, !dbg !208
  store i32 %6378, i32* %6354, align 4, !dbg !209
  store i32 1, i32* %6361, align 4, !dbg !210
  br label %6382, !dbg !211

6379:                                             ; preds = %6372
  %6380 = call i8 @sqlite3GetVarint32(i8* %6374, i32* %6354), !dbg !212
  %6381 = zext i8 %6380 to i32, !dbg !213
  store i32 %6381, i32* %6361, align 4, !dbg !214
  br label %6382, !dbg !215

6382:                                             ; preds = %6379, %6377
  store i16 0, i16* %6365, align 2, !dbg !216
  %6383 = load i32, i32* %6363, align 4, !dbg !217
  %6384 = load i32, i32* %6354, align 4, !dbg !218
  %6385 = icmp ult i32 %6383, %6384, !dbg !219
  br i1 %6385, label %6387, label %6386, !dbg !220

6386:                                             ; preds = %6382
  store i8* %6374, i8** %6346, align 8, !dbg !221
  br label %6506, !dbg !222

6387:                                             ; preds = %6382
  store i8* null, i8** %6364, align 8, !dbg !223
  store i32 0, i32* %6363, align 4, !dbg !224
  br label %6413, !dbg !225

6388:                                             ; preds = %6371
  %6389 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 12, i32 0, !dbg !226
  %6390 = load %struct.BtCursor*, %struct.BtCursor** %6389, align 8, !dbg !227
  %6391 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6390), !dbg !228
  store i32 %6391, i32* %6362, align 4, !dbg !229
  %6392 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6390, i32* %6363), !dbg !230
  store i8* %6392, i8** %6364, align 8, !dbg !231
  br label %6372, !dbg !232

6393:                                             ; preds = %6371
  %6394 = icmp eq i8 %6356, 3, !dbg !233
  br i1 %6394, label %6395, label %6406, !dbg !234

6395:                                             ; preds = %6393
  %6396 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 10, !dbg !235
  %6397 = load i32, i32* %6396, align 4, !dbg !236
  %6398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6397, !dbg !237
  %6399 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6398, i32 0, i32 1, !dbg !238
  %6400 = load i16, i16* %6399, align 2, !dbg !239
  %6401 = and i16 %6400, 16, !dbg !240
  %6402 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6398, i32 0, i32 4, !dbg !241
  %6403 = load i32, i32* %6402, align 4, !dbg !242
  store i32 %6403, i32* %6362, align 4, !dbg !243
  store i32 %6403, i32* %6363, align 4, !dbg !244
  %6404 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6398, i32 0, i32 5, !dbg !245
  %6405 = load i8*, i8** %6404, align 8, !dbg !246
  store i8* %6405, i8** %6364, align 8, !dbg !247
  br label %6372, !dbg !248

6406:                                             ; preds = %6393
  %6407 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 1, !dbg !249
  %6408 = load i16, i16* %6407, align 2, !dbg !249
  %6409 = and i16 %6408, 9216, !dbg !249
  %6410 = icmp ne i16 %6409, 0, !dbg !249
  br i1 %6410, label %6411, label %6412, !dbg !249

6411:                                             ; preds = %6406
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6350), !dbg !249
  br label %6594, !dbg !249

6412:                                             ; preds = %6406
  store i16 1, i16* %6407, align 2, !dbg !249
  br label %6594, !dbg !249

6413:                                             ; preds = %6387, %6338
  %6414 = load i16, i16* %6365, align 2, !dbg !250
  %6415 = icmp ule i16 %6414, 2, !dbg !251
  br i1 %6415, label %6498, label %6495, !dbg !252

6416:                                             ; preds = %6495, %6584
  %6417 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 1, !dbg !253
  %6418 = load i16, i16* %6417, align 2, !dbg !254
  %6419 = and i16 9216, %6418, !dbg !255
  %6420 = icmp eq i16 0, %6419, !dbg !256
  br i1 %6420, label %6421, label %6425, !dbg !257

6421:                                             ; preds = %6416
  %6422 = icmp ne i16 %6419, 0, !dbg !258
  br i1 %6422, label %6423, label %6424, !dbg !258

6423:                                             ; preds = %6421
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6350), !dbg !258
  br label %6425, !dbg !258

6424:                                             ; preds = %6421
  store i16 1, i16* %6417, align 2, !dbg !258
  br label %6425, !dbg !258

6425:                                             ; preds = %6423, %6424, %6416
  %6426 = load i32, i32* %6347, align 4, !dbg !259
  %6427 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 23, i32 2, !dbg !260
  %6428 = load i32, i32* %6427, align 4, !dbg !261
  %6429 = load i32, i32* %6363, align 4, !dbg !262
  %6430 = getelementptr i32, i32* %6354, i32 3, !dbg !263
  %6431 = load i32, i32* %6430, align 4, !dbg !264
  %6432 = icmp sge i32 %6429, %6431, !dbg !265
  br i1 %6432, label %6433, label %6473, !dbg !266

6433:                                             ; preds = %6425
  %6434 = load i8*, i8** %6364, align 8, !dbg !267
  %6435 = ptrtoint i8* %6434 to i64, !dbg !268
  %6436 = getelementptr i32, i32* %6354, i32 2, !dbg !509
  %6437 = load i32, i32* %6436, align 4, !dbg !269
  %6438 = zext i32 %6437 to i64, !dbg !270
  %6439 = add i64 %6435, %6438, !dbg !271
  %6440 = inttoptr i64 %6439 to i8*, !dbg !272
  store i8* %6440, i8** %6346, align 8, !dbg !273
  %6441 = load i32, i32* %6347, align 4, !dbg !274
  %6442 = icmp ult i32 %6441, 12, !dbg !275
  br i1 %6442, label %6443, label %6445, !dbg !276

6443:                                             ; preds = %6433
  %6444 = call i32 @sqlite3VdbeSerialGet(i8* %6440, i32 %6441, %struct.sqlite3_value* %6350), !dbg !277
  br label %6594, !dbg !278

6445:                                             ; preds = %6433
  %6446 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %6446, align 2, !dbg !280
  %6447 = getelementptr i16, i16* %6446, i32 1, !dbg !281
  store i16 514, i16* %6447, align 2, !dbg !282
  %6448 = load i32, i32* %6347, align 4, !dbg !283
  %6449 = sub i32 %6448, 12, !dbg !284
  %6450 = lshr i32 %6449, 1, !dbg !285
  %6451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 4, !dbg !286
  store i32 %6450, i32* %6451, align 4, !dbg !287
  %6452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 2, !dbg !288
  store i8 %6341, i8* %6452, align 1, !dbg !289
  %6453 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 5, !dbg !290
  %6454 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 7, !dbg !291
  %6455 = load i32, i32* %6454, align 4, !dbg !292
  %6456 = add i32 %6450, 2, !dbg !293
  %6457 = icmp slt i32 %6455, %6456, !dbg !294
  br i1 %6457, label %6458, label %6460, !dbg !295

6458:                                             ; preds = %6445
  store i16 1, i16* %6417, align 2, !dbg !296
  %6459 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6350, i32 %6456, i32 0), !dbg !297
  br label %6463, !dbg !298

6460:                                             ; preds = %6445
  %6461 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 6, !dbg !299
  %6462 = load i8*, i8** %6461, align 8, !dbg !300
  store i8* %6462, i8** %6453, align 8, !dbg !301
  br label %6463, !dbg !302

6463:                                             ; preds = %6460, %6458
  %6464 = zext i32 %6450 to i64, !dbg !303
  %6465 = load i8*, i8** %6453, align 8, !dbg !304
  %6466 = load i8*, i8** %6346, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6465, i8* %6466, i64 %6464, i1 false), !dbg !306
  %6467 = getelementptr i8, i8* %6465, i32 %6450, !dbg !307
  store i8 0, i8* %6467, align 1, !dbg !308
  %6468 = add i32 %6450, 1, !dbg !309
  %6469 = getelementptr i8, i8* %6465, i32 %6468, !dbg !310
  store i8 0, i8* %6469, align 1, !dbg !311
  %6470 = and i32 %6448, 1, !dbg !312
  %6471 = getelementptr i16, i16* %6446, i32 %6470, !dbg !313
  %6472 = load i16, i16* %6471, align 2, !dbg !314
  store i16 %6472, i16* %6417, align 2, !dbg !315
  br label %6594, !dbg !316

6473:                                             ; preds = %6425
  %6474 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 2, !dbg !317
  store i8 %6341, i8* %6474, align 1, !dbg !318
  %6475 = load i32, i32* %6347, align 4, !dbg !319
  %6476 = and i32 %6475, 1, !dbg !320
  %6477 = icmp eq i32 %6476, 0, !dbg !321
  %6478 = icmp sge i32 %6475, 12, !dbg !322
  %6479 = and i1 %6478, %6477, !dbg !323
  %6480 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6475), !dbg !324
  %6481 = icmp eq i32 %6480, 0, !dbg !325
  br i1 %6481, label %6493, label %6482, !dbg !326

6482:                                             ; preds = %6473
  %6483 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 12, i32 0, !dbg !327
  %6484 = load %struct.BtCursor*, %struct.BtCursor** %6483, align 8, !dbg !328
  %6485 = getelementptr i32, i32* %6354, i32 2, !dbg !510
  %6486 = load i32, i32* %6485, align 4, !dbg !329
  %6487 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6484, i32 %6486, i32 %6480, %struct.sqlite3_value* %6350), !dbg !330
  %6488 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 5, !dbg !331
  %6489 = load i8*, i8** %6488, align 8, !dbg !332
  %6490 = call i32 @sqlite3VdbeSerialGet(i8* %6489, i32 %6475, %struct.sqlite3_value* %6350), !dbg !333
  %6491 = load i16, i16* %6417, align 2, !dbg !334
  %6492 = and i16 %6491, -4097, !dbg !335
  store i16 %6492, i16* %6417, align 2, !dbg !336
  br label %6594, !dbg !337

6493:                                             ; preds = %6473
  %6494 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6475, %struct.sqlite3_value* %6350), !dbg !338
  br label %6594, !dbg !339

6495:                                             ; preds = %6413
  %6496 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 23, i32 2, !dbg !340
  %6497 = load i32, i32* %6496, align 4, !dbg !341
  store i32 %6497, i32* %6347, align 4, !dbg !342
  br label %6416, !dbg !343

6498:                                             ; preds = %6413
  %6499 = load i32, i32* %6361, align 4, !dbg !344
  %6500 = load i32, i32* %6354, align 4, !dbg !345
  %6501 = icmp ult i32 %6499, %6500, !dbg !346
  br i1 %6501, label %6502, label %6583, !dbg !347

6502:                                             ; preds = %6498
  %6503 = load i8*, i8** %6364, align 8, !dbg !348
  %6504 = icmp eq i8* %6503, null, !dbg !349
  br i1 %6504, label %6506, label %6505, !dbg !350

6505:                                             ; preds = %6502
  store i8* %6503, i8** %6346, align 8, !dbg !351
  br label %6506, !dbg !352

6506:                                             ; preds = %6505, %6502, %6386
  %6507 = alloca i32, align 4, !dbg !353
  %6508 = load i16, i16* %6365, align 2, !dbg !354
  %6509 = zext i16 %6508 to i32, !dbg !355
  store i32 %6509, i32* %6507, align 4, !dbg !356
  %6510 = alloca i64, align 8, !dbg !357
  %6511 = getelementptr i32, i32* %6354, i32 %6509, !dbg !358
  %6512 = load i32, i32* %6511, align 4, !dbg !359
  %6513 = zext i32 %6512 to i64, !dbg !360
  store i64 %6513, i64* %6510, align 4, !dbg !361
  %6514 = load i8*, i8** %6346, align 8, !dbg !362
  %6515 = load i32, i32* %6361, align 4, !dbg !363
  %6516 = alloca i8*, align 8, !dbg !364
  %6517 = getelementptr i8, i8* %6514, i32 %6515, !dbg !365
  store i8* %6517, i8** %6516, align 8, !dbg !366
  %6518 = load i32, i32* %6354, align 4, !dbg !367
  %6519 = getelementptr i8, i8* %6514, i32 %6518, !dbg !368
  br label %6520, !dbg !369

6520:                                             ; preds = %6527, %6506
  %6521 = load i32, i32* %6507, align 4, !dbg !370
  %6522 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6349, i32 0, i32 23, i32 %6521, !dbg !371
  %6523 = load i8*, i8** %6516, align 8, !dbg !372
  %6524 = load i8, i8* %6523, align 1, !dbg !373
  %6525 = zext i8 %6524 to i32, !dbg !374
  store i32 %6525, i32* %6347, align 4, !dbg !375
  store i32 %6525, i32* %6522, align 4, !dbg !376
  %6526 = icmp sgt i8 %6524, -1, !dbg !377
  br i1 %6526, label %6550, label %6541, !dbg !378

6527:                                             ; preds = %6541, %6550
  %6528 = load i32, i32* %6507, align 4, !dbg !379
  %6529 = add i32 %6528, 1, !dbg !380
  store i32 %6529, i32* %6507, align 4, !dbg !381
  %6530 = load i64, i64* %6510, align 4, !dbg !382
  %6531 = and i64 4294967295, %6530, !dbg !383
  %6532 = trunc i64 %6531 to i32, !dbg !384
  %6533 = getelementptr i32, i32* %6354, i32 %6529, !dbg !385
  store i32 %6532, i32* %6533, align 4, !dbg !386
  %6534 = load i32, i32* %6507, align 4, !dbg !387
  %6535 = icmp sle i32 %6534, 2, !dbg !388
  %6536 = load i8*, i8** %6516, align 8, !dbg !389
  %6537 = ptrtoint i8* %6536 to i64, !dbg !390
  %6538 = ptrtoint i8* %6519 to i64, !dbg !391
  %6539 = icmp ult i64 %6537, %6538, !dbg !392
  %6540 = and i1 %6535, %6539, !dbg !393
  br i1 %6540, label %6520, label %6559, !dbg !394

6541:                                             ; preds = %6520
  %6542 = load i8*, i8** %6516, align 8, !dbg !395
  %6543 = call i8 @sqlite3GetVarint32(i8* %6542, i32* %6347), !dbg !396
  %6544 = getelementptr i8, i8* %6542, i8 %6543, !dbg !397
  store i8* %6544, i8** %6516, align 8, !dbg !398
  %6545 = load i32, i32* %6347, align 4, !dbg !399
  store i32 %6545, i32* %6522, align 4, !dbg !400
  %6546 = load i64, i64* %6510, align 4, !dbg !401
  %6547 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6545), !dbg !402
  %6548 = zext i32 %6547 to i64, !dbg !403
  %6549 = add i64 %6546, %6548, !dbg !404
  store i64 %6549, i64* %6510, align 4, !dbg !405
  br label %6527, !dbg !406

6550:                                             ; preds = %6520
  %6551 = getelementptr i8, i8* %6523, i32 1, !dbg !407
  store i8* %6551, i8** %6516, align 8, !dbg !408
  %6552 = load i32, i32* %6347, align 4, !dbg !409
  %6553 = trunc i32 %6552 to i8, !dbg !410
  %6554 = getelementptr i8, i8* %4, i8 %6553, !dbg !411
  %6555 = load i8, i8* %6554, align 1, !dbg !412
  %6556 = zext i8 %6555 to i64, !dbg !413
  %6557 = load i64, i64* %6510, align 4, !dbg !414
  %6558 = add i64 %6557, %6556, !dbg !415
  store i64 %6558, i64* %6510, align 4, !dbg !416
  br label %6527, !dbg !417

6559:                                             ; preds = %6527
  %6560 = load i64, i64* %6510, align 4, !dbg !418
  %6561 = load i32, i32* %6362, align 4, !dbg !419
  %6562 = zext i32 %6561 to i64, !dbg !420
  %6563 = icmp uge i64 %6537, %6538, !dbg !421
  %6564 = icmp ugt i64 %6537, %6538, !dbg !422
  %6565 = icmp ne i64 %6560, %6562, !dbg !423
  %6566 = icmp ugt i64 %6560, %6562, !dbg !424
  %6567 = or i1 %6564, %6565, !dbg !425
  %6568 = and i1 %6563, %6567, !dbg !426
  %6569 = or i1 %6568, %6566, !dbg !427
  br i1 %6569, label %6570, label %6574, !dbg !428

6570:                                             ; preds = %6559
  %6571 = load i32, i32* %6354, align 4, !dbg !429
  %6572 = icmp eq i32 %6571, 0, !dbg !430
  br i1 %6572, label %6573, label %6574, !dbg !431

6573:                                             ; preds = %6570
  store i32 0, i32* %6507, align 4, !dbg !432
  store i8* %6519, i8** %6516, align 8, !dbg !433
  br label %6574, !dbg !434

6574:                                             ; preds = %6573, %6570, %6559
  %6575 = load i32, i32* %6507, align 4, !dbg !435
  %6576 = trunc i32 %6575 to i16, !dbg !436
  store i16 %6576, i16* %6365, align 2, !dbg !437
  %6577 = load i8*, i8** %6516, align 8, !dbg !438
  %6578 = ptrtoint i8* %6577 to i64, !dbg !439
  %6579 = load i8*, i8** %6346, align 8, !dbg !440
  %6580 = ptrtoint i8* %6579 to i64, !dbg !441
  %6581 = sub i64 %6578, %6580, !dbg !442
  %6582 = trunc i64 %6581 to i32, !dbg !443
  store i32 %6582, i32* %6361, align 4, !dbg !444
  br label %6584, !dbg !445

6583:                                             ; preds = %6498
  store i32 0, i32* %6347, align 4, !dbg !446
  br label %6584, !dbg !447

6584:                                             ; preds = %6574, %6583
  %6585 = load i16, i16* %6365, align 2, !dbg !448
  %6586 = icmp sle i16 %6585, 2, !dbg !449
  br i1 %6586, label %6587, label %6416, !dbg !450

6587:                                             ; preds = %6584
  %6588 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6350, i32 0, i32 1, !dbg !451
  %6589 = load i16, i16* %6588, align 2, !dbg !451
  %6590 = and i16 %6589, 9216, !dbg !451
  %6591 = icmp ne i16 %6590, 0, !dbg !451
  br i1 %6591, label %6592, label %6593, !dbg !451

6592:                                             ; preds = %6587
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6350), !dbg !451
  br label %6594, !dbg !451

6593:                                             ; preds = %6587
  store i16 1, i16* %6588, align 2, !dbg !451
  br label %6594, !dbg !451

6594:                                             ; preds = %6592, %6593, %6463, %6443, %6482, %6493, %6411, %6412
  call void @llvm.stackrestore(i8* %6339), !dbg !452
  br label %6595, !dbg !74

6595:                                             ; preds = %17, %6594
  %6596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !749
  %6597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6596, i32 0, i32 1, !dbg !752
  %6598 = load i16, i16* %6597, align 2, !dbg !753
  %6599 = and i16 %6598, 36, !dbg !754
  %6600 = icmp ne i16 %6599, 0, !dbg !755
  br i1 %6600, label %6601, label %6602, !dbg !756

6601:                                             ; preds = %6595
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6596), !dbg !757
  br label %6602, !dbg !758

6602:                                             ; preds = %6601, %6595, %17
  %6603 = call i8* @llvm.stacksave(), !dbg !1067
  %6604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !1070
  %6605 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 29, !dbg !1071
  %6606 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !1072
  %6607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6606, i32 0, i32 1, !dbg !1073
  %6608 = alloca i16, align 2, !dbg !1074
  %6609 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6604, i32 0, i32 1, !dbg !1075
  %6610 = load i16, i16* %6609, align 2, !dbg !1078
  %6611 = and i16 %6610, 44, !dbg !1079
  %6612 = icmp ne i16 %6611, 0, !dbg !1080
  br i1 %6612, label %6613, label %6614, !dbg !1081

6613:                                             ; preds = %6602
  store i16 %6611, i16* %6608, align 2, !dbg !1074
  br label %6620, !dbg !1082

6614:                                             ; preds = %6602
  %6615 = and i16 %6610, 18, !dbg !1074
  %6616 = icmp ne i16 %6615, 0, !dbg !1083
  br i1 %6616, label %6617, label %6619, !dbg !1084

6617:                                             ; preds = %6614
  %6618 = call i16 @computeNumericType(%struct.sqlite3_value* %6604), !dbg !1085
  br label %6620, !dbg !1086

6619:                                             ; preds = %6614
  store i16 0, i16* %6608, align 2, !dbg !1074
  br label %6620, !dbg !1087

6620:                                             ; preds = %6617, %6619, %6613
  %6621 = load i16, i16* %6608, align 2, !dbg !1074
  %6622 = alloca i16, align 2, !dbg !1088
  %6623 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6605, i32 0, i32 1, !dbg !1075
  %6624 = load i16, i16* %6623, align 2, !dbg !1078
  %6625 = and i16 %6624, 44, !dbg !1079
  %6626 = icmp ne i16 %6625, 0, !dbg !1080
  br i1 %6626, label %6627, label %6628, !dbg !1081

6627:                                             ; preds = %6620
  store i16 %6625, i16* %6622, align 2, !dbg !1088
  br label %6634, !dbg !1082

6628:                                             ; preds = %6620
  %6629 = and i16 %6624, 18, !dbg !1088
  %6630 = icmp ne i16 %6629, 0, !dbg !1083
  br i1 %6630, label %6631, label %6633, !dbg !1084

6631:                                             ; preds = %6628
  %6632 = call i16 @computeNumericType(%struct.sqlite3_value* %6605), !dbg !1085
  br label %6634, !dbg !1086

6633:                                             ; preds = %6628
  store i16 0, i16* %6622, align 2, !dbg !1088
  br label %6634, !dbg !1087

6634:                                             ; preds = %6631, %6633, %6627
  %6635 = load i16, i16* %6622, align 2, !dbg !1088
  %6636 = load i16, i16* %6609, align 2, !dbg !1089
  %6637 = load i16, i16* %6623, align 2, !dbg !1090
  %6638 = or i16 %6636, %6637, !dbg !1091
  %6639 = and i16 %6621, %6635, !dbg !1092
  %6640 = and i16 %6639, 4, !dbg !1093
  %6641 = icmp ne i16 %6640, 0, !dbg !1094
  br i1 %6641, label %6642, label %6659, !dbg !1095

6642:                                             ; preds = %6634
  %6643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6604, i32 0, i32 0, !dbg !1096
  %6644 = bitcast %union.MemValue* %6643 to i64*, !dbg !1097
  %6645 = load i64, i64* %6644, align 4, !dbg !1098
  %6646 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6605, i32 0, i32 0, !dbg !1099
  %6647 = bitcast %union.MemValue* %6646 to i64*, !dbg !1100
  %6648 = load i64, i64* %6647, align 4, !dbg !1101
  %6649 = alloca i64, align 8, !dbg !1102
  store i64 %6648, i64* %6649, align 4, !dbg !1103
  %6650 = call i32 @sqlite3SubInt64(i64* %6649, i64 %6645), !dbg !1104
  %6651 = icmp eq i32 %6650, 0, !dbg !1105
  br i1 %6651, label %6652, label %6662, !dbg !1106

6652:                                             ; preds = %6642
  %6653 = load i64, i64* %6649, align 4, !dbg !1107
  %6654 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6606, i32 0, i32 0, !dbg !1108
  %6655 = bitcast %union.MemValue* %6654 to i64*, !dbg !1109
  store i64 %6653, i64* %6655, align 4, !dbg !1110
  %6656 = load i16, i16* %6607, align 2, !dbg !1111
  %6657 = and i16 %6656, 15936, !dbg !1111
  %6658 = or i16 %6657, 4, !dbg !1111
  store i16 %6658, i16* %6607, align 2, !dbg !1111
  br label %6680, !dbg !1112

6659:                                             ; preds = %6634
  %6660 = and i16 %6638, 1, !dbg !1113
  %6661 = icmp ne i16 %6660, 0, !dbg !1114
  br i1 %6661, label %6674, label %6662, !dbg !1115

6662:                                             ; preds = %6659, %6642
  %6663 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %6604), !dbg !1116
  %6664 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %6605), !dbg !1117
  %6665 = fsub double %6664, %6663, !dbg !1118
  %6666 = call i32 @sqlite3IsNaN(double %6665), !dbg !1119
  %6667 = icmp ne i32 %6666, 0, !dbg !1120
  br i1 %6667, label %6674, label %6668, !dbg !1121

6668:                                             ; preds = %6662
  %6669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6606, i32 0, i32 0, !dbg !1122
  %6670 = bitcast %union.MemValue* %6669 to double*, !dbg !1123
  store double %6665, double* %6670, align 8, !dbg !1124
  %6671 = load i16, i16* %6607, align 2, !dbg !1111
  %6672 = and i16 %6671, 15936, !dbg !1111
  %6673 = or i16 %6672, 8, !dbg !1111
  store i16 %6673, i16* %6607, align 2, !dbg !1111
  br label %6680, !dbg !1125

6674:                                             ; preds = %6659, %6662
  %6675 = load i16, i16* %6607, align 2, !dbg !1126
  %6676 = and i16 %6675, 9216, !dbg !1126
  %6677 = icmp ne i16 %6676, 0, !dbg !1126
  br i1 %6677, label %6678, label %6679, !dbg !1126

6678:                                             ; preds = %6674
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6606), !dbg !1126
  br label %6680, !dbg !1126

6679:                                             ; preds = %6674
  store i16 1, i16* %6607, align 2, !dbg !1126
  br label %6680, !dbg !1126

6680:                                             ; preds = %6678, %6679, %6652, %6668
  call void @llvm.stackrestore(i8* %6603), !dbg !1127
  br label %6681, !dbg !74

6681:                                             ; preds = %17, %6680
  %6682 = call i8* @llvm.stacksave(), !dbg !1067
  %6683 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !1070
  %6684 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !1071
  %6685 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !1072
  %6686 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6685, i32 0, i32 1, !dbg !1073
  %6687 = alloca i16, align 2, !dbg !1074
  %6688 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6683, i32 0, i32 1, !dbg !1075
  %6689 = load i16, i16* %6688, align 2, !dbg !1078
  %6690 = and i16 %6689, 44, !dbg !1079
  %6691 = icmp ne i16 %6690, 0, !dbg !1080
  br i1 %6691, label %6692, label %6693, !dbg !1081

6692:                                             ; preds = %6681
  store i16 %6690, i16* %6687, align 2, !dbg !1074
  br label %6699, !dbg !1082

6693:                                             ; preds = %6681
  %6694 = and i16 %6689, 18, !dbg !1074
  %6695 = icmp ne i16 %6694, 0, !dbg !1083
  br i1 %6695, label %6696, label %6698, !dbg !1084

6696:                                             ; preds = %6693
  %6697 = call i16 @computeNumericType(%struct.sqlite3_value* %6683), !dbg !1085
  br label %6699, !dbg !1086

6698:                                             ; preds = %6693
  store i16 0, i16* %6687, align 2, !dbg !1074
  br label %6699, !dbg !1087

6699:                                             ; preds = %6696, %6698, %6692
  %6700 = load i16, i16* %6687, align 2, !dbg !1074
  %6701 = alloca i16, align 2, !dbg !1088
  %6702 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6684, i32 0, i32 1, !dbg !1075
  %6703 = load i16, i16* %6702, align 2, !dbg !1078
  %6704 = and i16 %6703, 44, !dbg !1079
  %6705 = icmp ne i16 %6704, 0, !dbg !1080
  br i1 %6705, label %6706, label %6707, !dbg !1081

6706:                                             ; preds = %6699
  store i16 %6704, i16* %6701, align 2, !dbg !1088
  br label %6713, !dbg !1082

6707:                                             ; preds = %6699
  %6708 = and i16 %6703, 18, !dbg !1088
  %6709 = icmp ne i16 %6708, 0, !dbg !1083
  br i1 %6709, label %6710, label %6712, !dbg !1084

6710:                                             ; preds = %6707
  %6711 = call i16 @computeNumericType(%struct.sqlite3_value* %6684), !dbg !1085
  br label %6713, !dbg !1086

6712:                                             ; preds = %6707
  store i16 0, i16* %6701, align 2, !dbg !1088
  br label %6713, !dbg !1087

6713:                                             ; preds = %6710, %6712, %6706
  %6714 = load i16, i16* %6701, align 2, !dbg !1088
  %6715 = load i16, i16* %6688, align 2, !dbg !1089
  %6716 = load i16, i16* %6702, align 2, !dbg !1090
  %6717 = or i16 %6715, %6716, !dbg !1091
  %6718 = and i16 %6700, %6714, !dbg !1092
  %6719 = and i16 %6718, 4, !dbg !1093
  %6720 = icmp ne i16 %6719, 0, !dbg !1094
  br i1 %6720, label %6721, label %6738, !dbg !1095

6721:                                             ; preds = %6713
  %6722 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6683, i32 0, i32 0, !dbg !1096
  %6723 = bitcast %union.MemValue* %6722 to i64*, !dbg !1097
  %6724 = load i64, i64* %6723, align 4, !dbg !1098
  %6725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6684, i32 0, i32 0, !dbg !1099
  %6726 = bitcast %union.MemValue* %6725 to i64*, !dbg !1100
  %6727 = load i64, i64* %6726, align 4, !dbg !1101
  %6728 = alloca i64, align 8, !dbg !1102
  store i64 %6727, i64* %6728, align 4, !dbg !1103
  %6729 = call i32 @sqlite3MulInt64(i64* %6728, i64 %6724), !dbg !1128
  %6730 = icmp eq i32 %6729, 0, !dbg !1129
  br i1 %6730, label %6731, label %6741, !dbg !1130

6731:                                             ; preds = %6721
  %6732 = load i64, i64* %6728, align 4, !dbg !1107
  %6733 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6685, i32 0, i32 0, !dbg !1108
  %6734 = bitcast %union.MemValue* %6733 to i64*, !dbg !1109
  store i64 %6732, i64* %6734, align 4, !dbg !1110
  %6735 = load i16, i16* %6686, align 2, !dbg !1111
  %6736 = and i16 %6735, 15936, !dbg !1111
  %6737 = or i16 %6736, 4, !dbg !1111
  store i16 %6737, i16* %6686, align 2, !dbg !1111
  br label %6759, !dbg !1112

6738:                                             ; preds = %6713
  %6739 = and i16 %6717, 1, !dbg !1113
  %6740 = icmp ne i16 %6739, 0, !dbg !1114
  br i1 %6740, label %6753, label %6741, !dbg !1115

6741:                                             ; preds = %6738, %6721
  %6742 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %6683), !dbg !1116
  %6743 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %6684), !dbg !1117
  %6744 = fmul double %6743, %6742, !dbg !1131
  %6745 = call i32 @sqlite3IsNaN(double %6744), !dbg !1119
  %6746 = icmp ne i32 %6745, 0, !dbg !1120
  br i1 %6746, label %6753, label %6747, !dbg !1121

6747:                                             ; preds = %6741
  %6748 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6685, i32 0, i32 0, !dbg !1122
  %6749 = bitcast %union.MemValue* %6748 to double*, !dbg !1123
  store double %6744, double* %6749, align 8, !dbg !1124
  %6750 = load i16, i16* %6686, align 2, !dbg !1111
  %6751 = and i16 %6750, 15936, !dbg !1111
  %6752 = or i16 %6751, 8, !dbg !1111
  store i16 %6752, i16* %6686, align 2, !dbg !1111
  br label %6759, !dbg !1125

6753:                                             ; preds = %6738, %6741
  %6754 = load i16, i16* %6686, align 2, !dbg !1126
  %6755 = and i16 %6754, 9216, !dbg !1126
  %6756 = icmp ne i16 %6755, 0, !dbg !1126
  br i1 %6756, label %6757, label %6758, !dbg !1126

6757:                                             ; preds = %6753
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6685), !dbg !1126
  br label %6759, !dbg !1126

6758:                                             ; preds = %6753
  store i16 1, i16* %6686, align 2, !dbg !1126
  br label %6759, !dbg !1126

6759:                                             ; preds = %6757, %6758, %6731, %6747
  call void @llvm.stackrestore(i8* %6682), !dbg !1127
  br label %6760, !dbg !74

6760:                                             ; preds = %17, %6759
  %6761 = call i8* @llvm.stacksave(), !dbg !1132
  %6762 = alloca i32, align 8, !dbg !1135
  store i32 0, i32* %6762, align 4, !dbg !1136
  %6763 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 69, i32 1, !dbg !1137
  %6764 = load i8, i8* %6763, align 1, !dbg !1138
  %6765 = icmp eq i8 %6764, -8, !dbg !1139
  br i1 %6765, label %6766, label %6788, !dbg !1140

6766:                                             ; preds = %6760
  %6767 = alloca %struct.sqlite3_context*, align 8, !dbg !1141
  %6768 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1142
  %6769 = bitcast i8* %6768 to %struct.sqlite3_context*, !dbg !1143
  store %struct.sqlite3_context* %6769, %struct.sqlite3_context** %6767, align 8, !dbg !1144
  %6770 = ptrtoint %struct.sqlite3_context* %6769 to i64, !dbg !1145
  %6771 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 0, !dbg !1146
  %6772 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 1, !dbg !1147
  %6773 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 2, !dbg !1148
  %6774 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 3, !dbg !1149
  %6775 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 4, !dbg !1150
  %6776 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 5, !dbg !1151
  %6777 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 6, !dbg !1152
  %6778 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 7, !dbg !1153
  %6779 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6769, i32 0, i32 8, !dbg !1154
  %6780 = bitcast [1 x %struct.sqlite3_value*]* %6779 to %struct.sqlite3_value**, !dbg !1155
  %6781 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 69, i32 6, i32 0, !dbg !1156
  %6782 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %6780, i32 1, !dbg !1157
  %6783 = bitcast %struct.sqlite3_value** %6782 to %struct.sqlite3_value*, !dbg !1158
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %6783, %struct.sqlite3* %13, i16 1), !dbg !1159
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %6773, align 8, !dbg !1160
  store %struct.sqlite3_value* %6783, %struct.sqlite3_value** %6771, align 8, !dbg !1161
  %6784 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 69, !dbg !1162
  %6785 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6784, i32 0, i32 6, !dbg !1163
  %6786 = bitcast %union.p4union* %6785 to %struct.FuncDef**, !dbg !1164
  %6787 = load %struct.FuncDef*, %struct.FuncDef** %6786, align 8, !dbg !1165
  store %struct.FuncDef* %6787, %struct.FuncDef** %6772, align 8, !dbg !1166
  store i32 69, i32* %6775, align 4, !dbg !1167
  store %struct.Vdbe* %0, %struct.Vdbe** %6774, align 8, !dbg !1168
  store i8 0, i8* %6777, align 1, !dbg !1169
  store i32 0, i32* %6776, align 4, !dbg !1170
  store i8 1, i8* %6778, align 1, !dbg !1171
  store i8 -16, i8* %6763, align 1, !dbg !1172
  store i8* %6768, i8** %6781, align 8, !dbg !1173
  br label %6788, !dbg !1174

6788:                                             ; preds = %6766, %6760
  %6789 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 69, i32 6, i32 0, !dbg !1175
  %6790 = bitcast i8** %6789 to %struct.sqlite3_context**, !dbg !1176
  %6791 = load %struct.sqlite3_context*, %struct.sqlite3_context** %6790, align 8, !dbg !1177
  %6792 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 0, !dbg !1178
  %6793 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 1, !dbg !1179
  %6794 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 5, !dbg !1180
  %6795 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 6, !dbg !1181
  %6796 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 7, !dbg !1182
  %6797 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 8, !dbg !1183
  %6798 = bitcast [1 x %struct.sqlite3_value*]* %6797 to %struct.sqlite3_value**, !dbg !1184
  %6799 = alloca i32, align 8, !dbg !1185
  %6800 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1186
  %6801 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %6791, i32 0, i32 2, !dbg !1187
  %6802 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6801, align 8, !dbg !1188
  %6803 = icmp ne %struct.sqlite3_value* %6802, %6800, !dbg !1189
  br i1 %6803, label %6804, label %6817, !dbg !1190

6804:                                             ; preds = %6788
  store %struct.sqlite3_value* %6800, %struct.sqlite3_value** %6801, align 8, !dbg !1191
  %6805 = load i8, i8* %6796, align 1, !dbg !1192
  %6806 = zext i8 %6805 to i32, !dbg !1193
  %6807 = add i32 %6806, -1, !dbg !1194
  %6808 = alloca i32, align 8, !dbg !1195
  store i32 %6807, i32* %6808, align 4, !dbg !1196
  br label %6814, !dbg !1197

6809:                                             ; preds = %6814
  %6810 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %6798, i32 %6815, !dbg !1198
  %6811 = add i32 %6815, 12, !dbg !1199
  %6812 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6811, !dbg !1200
  store %struct.sqlite3_value* %6812, %struct.sqlite3_value** %6810, align 8, !dbg !1201
  %6813 = add i32 %6815, -1, !dbg !1202
  store i32 %6813, i32* %6808, align 4, !dbg !1203
  br label %6814, !dbg !1204

6814:                                             ; preds = %6809, %6804
  %6815 = load i32, i32* %6808, align 4, !dbg !1205
  %6816 = icmp sge i32 %6815, 0, !dbg !1206
  br i1 %6816, label %6809, label %6817, !dbg !1207

6817:                                             ; preds = %6814, %6788
  %6818 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6800, i32 0, i32 4, !dbg !1208
  %6819 = load i32, i32* %6818, align 4, !dbg !1209
  %6820 = add i32 %6819, 1, !dbg !1210
  store i32 %6820, i32* %6818, align 4, !dbg !1211
  %6821 = load %struct.FuncDef*, %struct.FuncDef** %6793, align 8, !dbg !1212
  %6822 = load i8, i8* %6796, align 1, !dbg !1213
  %6823 = zext i8 %6822 to i32, !dbg !1214
  %6824 = getelementptr %struct.FuncDef, %struct.FuncDef* %6821, i32 0, i32 4, !dbg !1215
  %6825 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %6824, align 8, !dbg !1216
  call void %6825(%struct.sqlite3_context* %6791, i32 %6823, %struct.sqlite3_value** %6798), !dbg !1217
  %6826 = load i32, i32* %6794, align 4, !dbg !1218
  %6827 = icmp ne i32 %6826, 0, !dbg !1219
  br i1 %6827, label %6828, label %6843, !dbg !1220

6828:                                             ; preds = %6817
  %6829 = icmp sgt i32 %6826, 0, !dbg !1221
  br i1 %6829, label %6830, label %6834, !dbg !1222

6830:                                             ; preds = %6828
  %6831 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6792, align 8, !dbg !1223
  %6832 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %6831), !dbg !1224
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %6832), !dbg !1225
  %6833 = load i32, i32* %6794, align 4, !dbg !1226
  store i32 %6833, i32* %6762, align 4, !dbg !1227
  br label %6834, !dbg !1228

6834:                                             ; preds = %6830, %6828
  %6835 = load i8, i8* %6795, align 1, !dbg !1229
  %6836 = icmp ne i8 %6835, 0, !dbg !1230
  br i1 %6836, label %6837, label %6839, !dbg !1231

6837:                                             ; preds = %6834
  store i32 28, i32* %6799, align 4, !dbg !1232
  %6838 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !1233
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %6838, i64 1), !dbg !1234
  store i8 0, i8* %6795, align 1, !dbg !1235
  br label %6839, !dbg !1236

6839:                                             ; preds = %6837, %6834
  %6840 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6792, align 8, !dbg !1237
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %6840), !dbg !1238
  %6841 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6840, i32 0, i32 1, !dbg !1239
  store i16 1, i16* %6841, align 2, !dbg !1240
  store i32 0, i32* %6794, align 4, !dbg !1241
  %6842 = load i32, i32* %6762, align 4, !dbg !1242
  br label %6843, !dbg !1243

6843:                                             ; preds = %6817, %6839
  call void @llvm.stackrestore(i8* %6761), !dbg !1244
  br label %6844, !dbg !74

6844:                                             ; preds = %17, %6843
  %6845 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 5, !dbg !1245
  %6846 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %6845, i32 0), !dbg !1248
  %6847 = icmp ne i32 %6846, 0, !dbg !1249
  br i1 %6847, label %7103, label %6848, !dbg !1250

6848:                                             ; preds = %17, %6844
  %6849 = call i8* @llvm.stacksave(), !dbg !162
  %6850 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %6851 = load i8, i8* %6850, align 1, !dbg !166
  %6852 = alloca i32, align 4, !dbg !167
  store i32 8, i32* %6852, align 4, !dbg !168
  %6853 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !169
  %6854 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %6855 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6853, align 8, !dbg !171
  store %struct.VdbeCursor* %6855, %struct.VdbeCursor** %6854, align 8, !dbg !172
  %6856 = alloca i8*, align 8, !dbg !173
  %6857 = alloca i32, align 4, !dbg !174
  %6858 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6854, i32* %6852), !dbg !175
  %6859 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6854, align 8, !dbg !176
  %6860 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !177
  %6861 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 16, !dbg !178
  %6862 = load i16, i16* %6861, align 2, !dbg !179
  %6863 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 19, !dbg !180
  %6864 = load i32*, i32** %6863, align 8, !dbg !181
  %6865 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 0, !dbg !182
  %6866 = load i8, i8* %6865, align 1, !dbg !183
  %6867 = icmp ne i8 %6866, 3, !dbg !184
  %6868 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 2, !dbg !185
  %6869 = load i8, i8* %6868, align 1, !dbg !186
  %6870 = icmp ne i8 %6869, 0, !dbg !187
  %6871 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 14, !dbg !188
  %6872 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 21, !dbg !189
  %6873 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 22, !dbg !190
  %6874 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 20, !dbg !191
  %6875 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 17, !dbg !192
  %6876 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 9, !dbg !193
  %6877 = load i32, i32* %6876, align 4, !dbg !194
  %6878 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %6879 = load i32, i32* %6878, align 4, !dbg !196
  %6880 = icmp ne i32 %6877, %6879, !dbg !197
  br i1 %6880, label %6881, label %6923, !dbg !198

6881:                                             ; preds = %6848
  br i1 %6870, label %6903, label %6898, !dbg !199

6882:                                             ; preds = %6898, %6905
  %6883 = load i32, i32* %6878, align 4, !dbg !200
  store i32 %6883, i32* %6876, align 4, !dbg !201
  %6884 = load i8*, i8** %6874, align 8, !dbg !202
  %6885 = load i8, i8* %6884, align 1, !dbg !203
  %6886 = icmp sgt i8 %6885, -1, !dbg !206
  br i1 %6886, label %6887, label %6889, !dbg !207

6887:                                             ; preds = %6882
  %6888 = zext i8 %6885 to i32, !dbg !208
  store i32 %6888, i32* %6864, align 4, !dbg !209
  store i32 1, i32* %6871, align 4, !dbg !210
  br label %6892, !dbg !211

6889:                                             ; preds = %6882
  %6890 = call i8 @sqlite3GetVarint32(i8* %6884, i32* %6864), !dbg !212
  %6891 = zext i8 %6890 to i32, !dbg !213
  store i32 %6891, i32* %6871, align 4, !dbg !214
  br label %6892, !dbg !215

6892:                                             ; preds = %6889, %6887
  store i16 0, i16* %6875, align 2, !dbg !216
  %6893 = load i32, i32* %6873, align 4, !dbg !217
  %6894 = load i32, i32* %6864, align 4, !dbg !218
  %6895 = icmp ult i32 %6893, %6894, !dbg !219
  br i1 %6895, label %6897, label %6896, !dbg !220

6896:                                             ; preds = %6892
  store i8* %6884, i8** %6856, align 8, !dbg !221
  br label %7014, !dbg !222

6897:                                             ; preds = %6892
  store i8* null, i8** %6874, align 8, !dbg !223
  store i32 0, i32* %6873, align 4, !dbg !224
  br label %6923, !dbg !225

6898:                                             ; preds = %6881
  %6899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 12, i32 0, !dbg !226
  %6900 = load %struct.BtCursor*, %struct.BtCursor** %6899, align 8, !dbg !227
  %6901 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6900), !dbg !228
  store i32 %6901, i32* %6872, align 4, !dbg !229
  %6902 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6900, i32* %6873), !dbg !230
  store i8* %6902, i8** %6874, align 8, !dbg !231
  br label %6882, !dbg !232

6903:                                             ; preds = %6881
  %6904 = icmp eq i8 %6866, 3, !dbg !233
  br i1 %6904, label %6905, label %6916, !dbg !234

6905:                                             ; preds = %6903
  %6906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 10, !dbg !235
  %6907 = load i32, i32* %6906, align 4, !dbg !236
  %6908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6907, !dbg !237
  %6909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6908, i32 0, i32 1, !dbg !238
  %6910 = load i16, i16* %6909, align 2, !dbg !239
  %6911 = and i16 %6910, 16, !dbg !240
  %6912 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6908, i32 0, i32 4, !dbg !241
  %6913 = load i32, i32* %6912, align 4, !dbg !242
  store i32 %6913, i32* %6872, align 4, !dbg !243
  store i32 %6913, i32* %6873, align 4, !dbg !244
  %6914 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6908, i32 0, i32 5, !dbg !245
  %6915 = load i8*, i8** %6914, align 8, !dbg !246
  store i8* %6915, i8** %6874, align 8, !dbg !247
  br label %6882, !dbg !248

6916:                                             ; preds = %6903
  %6917 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 1, !dbg !249
  %6918 = load i16, i16* %6917, align 2, !dbg !249
  %6919 = and i16 %6918, 9216, !dbg !249
  %6920 = icmp ne i16 %6919, 0, !dbg !249
  br i1 %6920, label %6921, label %6922, !dbg !249

6921:                                             ; preds = %6916
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6860), !dbg !249
  br label %7102, !dbg !249

6922:                                             ; preds = %6916
  store i16 1, i16* %6917, align 2, !dbg !249
  br label %7102, !dbg !249

6923:                                             ; preds = %6897, %6848
  %6924 = load i16, i16* %6875, align 2, !dbg !250
  %6925 = icmp ule i16 %6924, 0, !dbg !251
  br i1 %6925, label %7006, label %7003, !dbg !252

6926:                                             ; preds = %7003, %7092
  %6927 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 1, !dbg !253
  %6928 = load i16, i16* %6927, align 2, !dbg !254
  %6929 = and i16 9216, %6928, !dbg !255
  %6930 = icmp eq i16 0, %6929, !dbg !256
  br i1 %6930, label %6931, label %6935, !dbg !257

6931:                                             ; preds = %6926
  %6932 = icmp ne i16 %6929, 0, !dbg !258
  br i1 %6932, label %6933, label %6934, !dbg !258

6933:                                             ; preds = %6931
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6860), !dbg !258
  br label %6935, !dbg !258

6934:                                             ; preds = %6931
  store i16 1, i16* %6927, align 2, !dbg !258
  br label %6935, !dbg !258

6935:                                             ; preds = %6933, %6934, %6926
  %6936 = load i32, i32* %6857, align 4, !dbg !259
  %6937 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 23, i32 0, !dbg !260
  %6938 = load i32, i32* %6937, align 4, !dbg !261
  %6939 = load i32, i32* %6873, align 4, !dbg !262
  %6940 = getelementptr i32, i32* %6864, i32 1, !dbg !263
  %6941 = load i32, i32* %6940, align 4, !dbg !264
  %6942 = icmp sge i32 %6939, %6941, !dbg !265
  br i1 %6942, label %6943, label %6982, !dbg !266

6943:                                             ; preds = %6935
  %6944 = load i8*, i8** %6874, align 8, !dbg !267
  %6945 = ptrtoint i8* %6944 to i64, !dbg !268
  %6946 = load i32, i32* %6864, align 4, !dbg !269
  %6947 = zext i32 %6946 to i64, !dbg !270
  %6948 = add i64 %6945, %6947, !dbg !271
  %6949 = inttoptr i64 %6948 to i8*, !dbg !272
  store i8* %6949, i8** %6856, align 8, !dbg !273
  %6950 = load i32, i32* %6857, align 4, !dbg !274
  %6951 = icmp ult i32 %6950, 12, !dbg !275
  br i1 %6951, label %6952, label %6954, !dbg !276

6952:                                             ; preds = %6943
  %6953 = call i32 @sqlite3VdbeSerialGet(i8* %6949, i32 %6950, %struct.sqlite3_value* %6860), !dbg !277
  br label %7102, !dbg !278

6954:                                             ; preds = %6943
  %6955 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %6955, align 2, !dbg !280
  %6956 = getelementptr i16, i16* %6955, i32 1, !dbg !281
  store i16 514, i16* %6956, align 2, !dbg !282
  %6957 = load i32, i32* %6857, align 4, !dbg !283
  %6958 = sub i32 %6957, 12, !dbg !284
  %6959 = lshr i32 %6958, 1, !dbg !285
  %6960 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 4, !dbg !286
  store i32 %6959, i32* %6960, align 4, !dbg !287
  %6961 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 2, !dbg !288
  store i8 %6851, i8* %6961, align 1, !dbg !289
  %6962 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 5, !dbg !290
  %6963 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 7, !dbg !291
  %6964 = load i32, i32* %6963, align 4, !dbg !292
  %6965 = add i32 %6959, 2, !dbg !293
  %6966 = icmp slt i32 %6964, %6965, !dbg !294
  br i1 %6966, label %6967, label %6969, !dbg !295

6967:                                             ; preds = %6954
  store i16 1, i16* %6927, align 2, !dbg !296
  %6968 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6860, i32 %6965, i32 0), !dbg !297
  br label %6972, !dbg !298

6969:                                             ; preds = %6954
  %6970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 6, !dbg !299
  %6971 = load i8*, i8** %6970, align 8, !dbg !300
  store i8* %6971, i8** %6962, align 8, !dbg !301
  br label %6972, !dbg !302

6972:                                             ; preds = %6969, %6967
  %6973 = zext i32 %6959 to i64, !dbg !303
  %6974 = load i8*, i8** %6962, align 8, !dbg !304
  %6975 = load i8*, i8** %6856, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6974, i8* %6975, i64 %6973, i1 false), !dbg !306
  %6976 = getelementptr i8, i8* %6974, i32 %6959, !dbg !307
  store i8 0, i8* %6976, align 1, !dbg !308
  %6977 = add i32 %6959, 1, !dbg !309
  %6978 = getelementptr i8, i8* %6974, i32 %6977, !dbg !310
  store i8 0, i8* %6978, align 1, !dbg !311
  %6979 = and i32 %6957, 1, !dbg !312
  %6980 = getelementptr i16, i16* %6955, i32 %6979, !dbg !313
  %6981 = load i16, i16* %6980, align 2, !dbg !314
  store i16 %6981, i16* %6927, align 2, !dbg !315
  br label %7102, !dbg !316

6982:                                             ; preds = %6935
  %6983 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 2, !dbg !317
  store i8 %6851, i8* %6983, align 1, !dbg !318
  %6984 = load i32, i32* %6857, align 4, !dbg !319
  %6985 = and i32 %6984, 1, !dbg !320
  %6986 = icmp eq i32 %6985, 0, !dbg !321
  %6987 = icmp sge i32 %6984, 12, !dbg !322
  %6988 = and i1 %6987, %6986, !dbg !323
  %6989 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6984), !dbg !324
  %6990 = icmp eq i32 %6989, 0, !dbg !325
  br i1 %6990, label %7001, label %6991, !dbg !326

6991:                                             ; preds = %6982
  %6992 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 12, i32 0, !dbg !327
  %6993 = load %struct.BtCursor*, %struct.BtCursor** %6992, align 8, !dbg !328
  %6994 = load i32, i32* %6864, align 4, !dbg !329
  %6995 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6993, i32 %6994, i32 %6989, %struct.sqlite3_value* %6860), !dbg !330
  %6996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 5, !dbg !331
  %6997 = load i8*, i8** %6996, align 8, !dbg !332
  %6998 = call i32 @sqlite3VdbeSerialGet(i8* %6997, i32 %6984, %struct.sqlite3_value* %6860), !dbg !333
  %6999 = load i16, i16* %6927, align 2, !dbg !334
  %7000 = and i16 %6999, -4097, !dbg !335
  store i16 %7000, i16* %6927, align 2, !dbg !336
  br label %7102, !dbg !337

7001:                                             ; preds = %6982
  %7002 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6984, %struct.sqlite3_value* %6860), !dbg !338
  br label %7102, !dbg !339

7003:                                             ; preds = %6923
  %7004 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 23, i32 0, !dbg !340
  %7005 = load i32, i32* %7004, align 4, !dbg !341
  store i32 %7005, i32* %6857, align 4, !dbg !342
  br label %6926, !dbg !343

7006:                                             ; preds = %6923
  %7007 = load i32, i32* %6871, align 4, !dbg !344
  %7008 = load i32, i32* %6864, align 4, !dbg !345
  %7009 = icmp ult i32 %7007, %7008, !dbg !346
  br i1 %7009, label %7010, label %7091, !dbg !347

7010:                                             ; preds = %7006
  %7011 = load i8*, i8** %6874, align 8, !dbg !348
  %7012 = icmp eq i8* %7011, null, !dbg !349
  br i1 %7012, label %7014, label %7013, !dbg !350

7013:                                             ; preds = %7010
  store i8* %7011, i8** %6856, align 8, !dbg !351
  br label %7014, !dbg !352

7014:                                             ; preds = %7013, %7010, %6896
  %7015 = alloca i32, align 4, !dbg !353
  %7016 = load i16, i16* %6875, align 2, !dbg !354
  %7017 = zext i16 %7016 to i32, !dbg !355
  store i32 %7017, i32* %7015, align 4, !dbg !356
  %7018 = alloca i64, align 8, !dbg !357
  %7019 = getelementptr i32, i32* %6864, i32 %7017, !dbg !358
  %7020 = load i32, i32* %7019, align 4, !dbg !359
  %7021 = zext i32 %7020 to i64, !dbg !360
  store i64 %7021, i64* %7018, align 4, !dbg !361
  %7022 = load i8*, i8** %6856, align 8, !dbg !362
  %7023 = load i32, i32* %6871, align 4, !dbg !363
  %7024 = alloca i8*, align 8, !dbg !364
  %7025 = getelementptr i8, i8* %7022, i32 %7023, !dbg !365
  store i8* %7025, i8** %7024, align 8, !dbg !366
  %7026 = load i32, i32* %6864, align 4, !dbg !367
  %7027 = getelementptr i8, i8* %7022, i32 %7026, !dbg !368
  br label %7028, !dbg !369

7028:                                             ; preds = %7035, %7014
  %7029 = load i32, i32* %7015, align 4, !dbg !370
  %7030 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6859, i32 0, i32 23, i32 %7029, !dbg !371
  %7031 = load i8*, i8** %7024, align 8, !dbg !372
  %7032 = load i8, i8* %7031, align 1, !dbg !373
  %7033 = zext i8 %7032 to i32, !dbg !374
  store i32 %7033, i32* %6857, align 4, !dbg !375
  store i32 %7033, i32* %7030, align 4, !dbg !376
  %7034 = icmp sgt i8 %7032, -1, !dbg !377
  br i1 %7034, label %7058, label %7049, !dbg !378

7035:                                             ; preds = %7049, %7058
  %7036 = load i32, i32* %7015, align 4, !dbg !379
  %7037 = add i32 %7036, 1, !dbg !380
  store i32 %7037, i32* %7015, align 4, !dbg !381
  %7038 = load i64, i64* %7018, align 4, !dbg !382
  %7039 = and i64 4294967295, %7038, !dbg !383
  %7040 = trunc i64 %7039 to i32, !dbg !384
  %7041 = getelementptr i32, i32* %6864, i32 %7037, !dbg !385
  store i32 %7040, i32* %7041, align 4, !dbg !386
  %7042 = load i32, i32* %7015, align 4, !dbg !387
  %7043 = icmp sle i32 %7042, 0, !dbg !388
  %7044 = load i8*, i8** %7024, align 8, !dbg !389
  %7045 = ptrtoint i8* %7044 to i64, !dbg !390
  %7046 = ptrtoint i8* %7027 to i64, !dbg !391
  %7047 = icmp ult i64 %7045, %7046, !dbg !392
  %7048 = and i1 %7043, %7047, !dbg !393
  br i1 %7048, label %7028, label %7067, !dbg !394

7049:                                             ; preds = %7028
  %7050 = load i8*, i8** %7024, align 8, !dbg !395
  %7051 = call i8 @sqlite3GetVarint32(i8* %7050, i32* %6857), !dbg !396
  %7052 = getelementptr i8, i8* %7050, i8 %7051, !dbg !397
  store i8* %7052, i8** %7024, align 8, !dbg !398
  %7053 = load i32, i32* %6857, align 4, !dbg !399
  store i32 %7053, i32* %7030, align 4, !dbg !400
  %7054 = load i64, i64* %7018, align 4, !dbg !401
  %7055 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7053), !dbg !402
  %7056 = zext i32 %7055 to i64, !dbg !403
  %7057 = add i64 %7054, %7056, !dbg !404
  store i64 %7057, i64* %7018, align 4, !dbg !405
  br label %7035, !dbg !406

7058:                                             ; preds = %7028
  %7059 = getelementptr i8, i8* %7031, i32 1, !dbg !407
  store i8* %7059, i8** %7024, align 8, !dbg !408
  %7060 = load i32, i32* %6857, align 4, !dbg !409
  %7061 = trunc i32 %7060 to i8, !dbg !410
  %7062 = getelementptr i8, i8* %4, i8 %7061, !dbg !411
  %7063 = load i8, i8* %7062, align 1, !dbg !412
  %7064 = zext i8 %7063 to i64, !dbg !413
  %7065 = load i64, i64* %7018, align 4, !dbg !414
  %7066 = add i64 %7065, %7064, !dbg !415
  store i64 %7066, i64* %7018, align 4, !dbg !416
  br label %7035, !dbg !417

7067:                                             ; preds = %7035
  %7068 = load i64, i64* %7018, align 4, !dbg !418
  %7069 = load i32, i32* %6872, align 4, !dbg !419
  %7070 = zext i32 %7069 to i64, !dbg !420
  %7071 = icmp uge i64 %7045, %7046, !dbg !421
  %7072 = icmp ugt i64 %7045, %7046, !dbg !422
  %7073 = icmp ne i64 %7068, %7070, !dbg !423
  %7074 = icmp ugt i64 %7068, %7070, !dbg !424
  %7075 = or i1 %7072, %7073, !dbg !425
  %7076 = and i1 %7071, %7075, !dbg !426
  %7077 = or i1 %7076, %7074, !dbg !427
  br i1 %7077, label %7078, label %7082, !dbg !428

7078:                                             ; preds = %7067
  %7079 = load i32, i32* %6864, align 4, !dbg !429
  %7080 = icmp eq i32 %7079, 0, !dbg !430
  br i1 %7080, label %7081, label %7082, !dbg !431

7081:                                             ; preds = %7078
  store i32 0, i32* %7015, align 4, !dbg !432
  store i8* %7027, i8** %7024, align 8, !dbg !433
  br label %7082, !dbg !434

7082:                                             ; preds = %7081, %7078, %7067
  %7083 = load i32, i32* %7015, align 4, !dbg !435
  %7084 = trunc i32 %7083 to i16, !dbg !436
  store i16 %7084, i16* %6875, align 2, !dbg !437
  %7085 = load i8*, i8** %7024, align 8, !dbg !438
  %7086 = ptrtoint i8* %7085 to i64, !dbg !439
  %7087 = load i8*, i8** %6856, align 8, !dbg !440
  %7088 = ptrtoint i8* %7087 to i64, !dbg !441
  %7089 = sub i64 %7086, %7088, !dbg !442
  %7090 = trunc i64 %7089 to i32, !dbg !443
  store i32 %7090, i32* %6871, align 4, !dbg !444
  br label %7092, !dbg !445

7091:                                             ; preds = %7006
  store i32 0, i32* %6857, align 4, !dbg !446
  br label %7092, !dbg !447

7092:                                             ; preds = %7082, %7091
  %7093 = load i16, i16* %6875, align 2, !dbg !448
  %7094 = icmp sle i16 %7093, 0, !dbg !449
  br i1 %7094, label %7095, label %6926, !dbg !450

7095:                                             ; preds = %7092
  %7096 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6860, i32 0, i32 1, !dbg !451
  %7097 = load i16, i16* %7096, align 2, !dbg !451
  %7098 = and i16 %7097, 9216, !dbg !451
  %7099 = icmp ne i16 %7098, 0, !dbg !451
  br i1 %7099, label %7100, label %7101, !dbg !451

7100:                                             ; preds = %7095
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6860), !dbg !451
  br label %7102, !dbg !451

7101:                                             ; preds = %7095
  store i16 1, i16* %7096, align 2, !dbg !451
  br label %7102, !dbg !451

7102:                                             ; preds = %7100, %7101, %6972, %6952, %6991, %7001, %6921, %6922
  call void @llvm.stackrestore(i8* %6849), !dbg !452
  br label %7103, !dbg !74

7103:                                             ; preds = %17, %7102, %6844
  %7104 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, !dbg !75
  %7105 = call i8* @llvm.stacksave(), !dbg !78
  %7106 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7104, i32 0, i32 4, !dbg !79
  %7107 = load i32, i32* %7106, align 4, !dbg !82
  %7108 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7107, !dbg !83
  %7109 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7108, i32 0, i32 1, !dbg !78
  %7110 = load i16, i16* %7109, align 2, !dbg !78
  %7111 = and i16 %7110, 9216, !dbg !78
  %7112 = icmp ne i16 %7111, 0, !dbg !78
  %7113 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %7112, label %7114, label %7116, !dbg !78

7114:                                             ; preds = %7103
  %7115 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %7108), !dbg !78
  store %struct.sqlite3_value* %7115, %struct.sqlite3_value** %7113, align 8, !dbg !78
  br label %7117, !dbg !78

7116:                                             ; preds = %7103
  store i16 4, i16* %7109, align 2, !dbg !78
  store %struct.sqlite3_value* %7108, %struct.sqlite3_value** %7113, align 8, !dbg !78
  br label %7117, !dbg !78

7117:                                             ; preds = %7116, %7114
  %7118 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7113, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %7105), !dbg !78
  %7119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7118, i32 0, i32 0, i32 0, !dbg !84
  %7120 = bitcast double* %7119 to i64*, !dbg !85
  store i64 1, i64* %7120, align 4, !dbg !86
  br label %7121, !dbg !74

7121:                                             ; preds = %17, %7117
  %7122 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !1251
  %7123 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7122, align 8, !dbg !1254
  %7124 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %7123), !dbg !1255
  %7125 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7123, i32 0, i32 9, !dbg !1256
  store i32 0, i32* %7125, align 4, !dbg !1257
  %7126 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7123, i32 0, i32 2, !dbg !1258
  %7127 = icmp eq i32 %7124, 0, !dbg !1259
  br i1 %7127, label %7128, label %7129, !dbg !1260

7128:                                             ; preds = %7121
  store i8 0, i8* %7126, align 1, !dbg !1261
  br label %5749, !dbg !1262

7129:                                             ; preds = %7121
  store i8 1, i8* %7126, align 1, !dbg !1263
  br label %7130, !dbg !1264

7130:                                             ; preds = %17, %7129
  %7131 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !95
  %7132 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7131, i32 0, i32 1, !dbg !98
  store i16 4, i16* %7132, align 2, !dbg !99
  %7133 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7131, i32 0, i32 0, i32 0, !dbg !100
  %7134 = bitcast double* %7133 to i64*, !dbg !101
  store i64 74, i64* %7134, align 4, !dbg !102
  br label %7160, !dbg !103

7135:                                             ; preds = %17
  %7136 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 76, !dbg !75
  %7137 = call i8* @llvm.stacksave(), !dbg !78
  %7138 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7136, i32 0, i32 4, !dbg !79
  %7139 = load i32, i32* %7138, align 4, !dbg !82
  %7140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7139, !dbg !83
  %7141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7140, i32 0, i32 1, !dbg !78
  %7142 = load i16, i16* %7141, align 2, !dbg !78
  %7143 = and i16 %7142, 9216, !dbg !78
  %7144 = icmp ne i16 %7143, 0, !dbg !78
  %7145 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %7144, label %7146, label %7148, !dbg !78

7146:                                             ; preds = %7135
  %7147 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %7140), !dbg !78
  store %struct.sqlite3_value* %7147, %struct.sqlite3_value** %7145, align 8, !dbg !78
  br label %7149, !dbg !78

7148:                                             ; preds = %7135
  store i16 4, i16* %7141, align 2, !dbg !78
  store %struct.sqlite3_value* %7140, %struct.sqlite3_value** %7145, align 8, !dbg !78
  br label %7149, !dbg !78

7149:                                             ; preds = %7148, %7146
  %7150 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7145, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %7137), !dbg !78
  %7151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7150, i32 0, i32 0, i32 0, !dbg !84
  %7152 = bitcast double* %7151 to i64*, !dbg !85
  store i64 1, i64* %7152, align 4, !dbg !86
  br label %7153, !dbg !74

7153:                                             ; preds = %17, %7149
  %7154 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1265
  %7155 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7154, i32 0, i32 0, i32 0, !dbg !1268
  %7156 = bitcast double* %7155 to i64*, !dbg !1269
  %7157 = load i64, i64* %7156, align 4, !dbg !1270
  %7158 = add i64 %7157, 1, !dbg !1271
  %7159 = trunc i64 %7158 to i32, !dbg !1272
  store i32 %7159, i32* %15, align 4, !dbg !1273
  br label %14, !dbg !1274

7160:                                             ; preds = %17, %7130, %6058
  %7161 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 5, !dbg !1058
  %7162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7161, i32 0, i32 0, i32 0, !dbg !1061
  %7163 = bitcast double* %7162 to i64*, !dbg !1062
  %7164 = load i64, i64* %7163, align 4, !dbg !1063
  %7165 = icmp sgt i64 %7164, 0, !dbg !1064
  br i1 %7165, label %7166, label %.critedge1, !dbg !1065

7166:                                             ; preds = %7160
  br label %7173, !dbg !1066

.critedge1:                                       ; preds = %7160, %17
  %7167 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1265
  %7168 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7167, i32 0, i32 0, i32 0, !dbg !1268
  %7169 = bitcast double* %7168 to i64*, !dbg !1269
  %7170 = load i64, i64* %7169, align 4, !dbg !1270
  %7171 = add i64 %7170, 1, !dbg !1271
  %7172 = trunc i64 %7171 to i32, !dbg !1272
  store i32 %7172, i32* %15, align 4, !dbg !1273
  br label %14, !dbg !1274

7173:                                             ; preds = %7166, %17
  %7174 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 80, !dbg !1275
  %7175 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7174, i32 0, i32 6, !dbg !1278
  %7176 = bitcast %union.p4union* %7175 to %struct.FuncDef**, !dbg !1279
  %7177 = load %struct.FuncDef*, %struct.FuncDef** %7176, align 8, !dbg !1280
  %7178 = call i8* @llvm.stacksave(), !dbg !1281
  %7179 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1282
  %7180 = alloca i32, align 8, !dbg !1283
  %7181 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %7179, %struct.FuncDef* %7177), !dbg !1284
  store i32 %7181, i32* %7180, align 4, !dbg !1285
  %7182 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %7179, i32 1), !dbg !1286
  %7183 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %7179), !dbg !1287
  call void @llvm.stackrestore(i8* %7178), !dbg !1288
  br label %7184, !dbg !74

7184:                                             ; preds = %17, %7173
  %7185 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1289
  %7186 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1292
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %7186, %struct.sqlite3_value* %7185, i32 4096), !dbg !1293
  br label %7187, !dbg !74

7187:                                             ; preds = %17, %7184
  %7188 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1289
  %7189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1292
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %7189, %struct.sqlite3_value* %7188, i32 4096), !dbg !1293
  br label %7190, !dbg !74

7190:                                             ; preds = %17, %7187
  %7191 = call i8* @llvm.stacksave(), !dbg !759
  %7192 = alloca i64, align 8, !dbg !762
  store i64 0, i64* %7192, align 4, !dbg !763
  %7193 = alloca i32, align 8, !dbg !764
  store i32 0, i32* %7193, align 4, !dbg !765
  %7194 = alloca i64, align 8, !dbg !766
  store i64 0, i64* %7194, align 4, !dbg !767
  %7195 = alloca i8*, align 8, !dbg !768
  %7196 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 83, !dbg !769
  %7197 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7196, i32 0, i32 6, !dbg !770
  %7198 = bitcast %union.p4union* %7197 to i8**, !dbg !771
  %7199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !772
  %7200 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7199, i32 1, !dbg !773
  %7201 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !774
  %7202 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 0, i32 1, !dbg !775
  %7203 = load i16, i16* %7202, align 2, !dbg !776
  %7204 = and i16 %7203, 1, !dbg !777
  %7205 = icmp ne i16 %7204, 0, !dbg !777
  %7206 = and i16 %7203, 36, !dbg !778
  %7207 = icmp ne i16 %7206, 0, !dbg !778
  %7208 = and i16 %7203, 8, !dbg !779
  %7209 = icmp ne i16 %7208, 0, !dbg !779
  %7210 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 0, i32 8, !dbg !780
  br i1 %7205, label %7211, label %7219, !dbg !781

7211:                                             ; preds = %7190
  %7212 = and i16 %7203, 16384, !dbg !782
  %7213 = icmp ne i16 %7212, 0, !dbg !782
  br i1 %7213, label %7214, label %7215, !dbg !783

7214:                                             ; preds = %7211
  store i32 10, i32* %7210, align 4, !dbg !784
  br label %7216, !dbg !785

7215:                                             ; preds = %7211
  store i32 0, i32* %7210, align 4, !dbg !786
  br label %7216, !dbg !787

7216:                                             ; preds = %7215, %7214
  %7217 = load i32, i32* %7193, align 4, !dbg !788
  %7218 = add i32 %7217, 1, !dbg !788
  store i32 %7218, i32* %7193, align 4, !dbg !788
  br label %7309, !dbg !789

7219:                                             ; preds = %7190
  br i1 %7207, label %7220, label %7264, !dbg !790

7220:                                             ; preds = %7219
  %7221 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 0, i32 0, !dbg !791
  %7222 = bitcast %union.MemValue* %7221 to i64*, !dbg !792
  %7223 = load i64, i64* %7222, align 4, !dbg !793
  %7224 = alloca i64, align 8, !dbg !794
  %7225 = icmp slt i64 %7223, 0, !dbg !795
  br i1 %7225, label %7226, label %7228, !dbg !796

7226:                                             ; preds = %7220
  %7227 = xor i64 %7223, -1, !dbg !797
  store i64 %7227, i64* %7224, align 4, !dbg !798
  br label %7229, !dbg !799

7228:                                             ; preds = %7220
  store i64 %7223, i64* %7224, align 4, !dbg !800
  br label %7229, !dbg !801

7229:                                             ; preds = %7228, %7226
  %7230 = load i32, i32* %7193, align 4, !dbg !802
  %7231 = add i32 %7230, 1, !dbg !802
  store i32 %7231, i32* %7193, align 4, !dbg !802
  %7232 = load i64, i64* %7224, align 4, !dbg !803
  %7233 = icmp slt i64 %7232, 127, !dbg !804
  %7234 = icmp slt i64 %7232, 32767, !dbg !805
  %7235 = icmp slt i64 %7232, 8388607, !dbg !806
  %7236 = icmp slt i64 %7232, 2147483647, !dbg !807
  br i1 %7233, label %7237, label %7246, !dbg !808

7237:                                             ; preds = %7229
  %7238 = and i64 %7223, 1, !dbg !809
  %7239 = icmp eq i64 %7238, %7223, !dbg !810
  br i1 %7239, label %7240, label %7243, !dbg !811

7240:                                             ; preds = %7237
  %7241 = trunc i64 %7232 to i32, !dbg !812
  %7242 = add i32 %7241, 8, !dbg !813
  store i32 %7242, i32* %7210, align 4, !dbg !814
  br label %7309, !dbg !815

7243:                                             ; preds = %7237
  %7244 = load i64, i64* %7192, align 4, !dbg !816
  %7245 = add i64 %7244, 1, !dbg !816
  store i64 %7245, i64* %7192, align 4, !dbg !816
  store i32 1, i32* %7210, align 4, !dbg !817
  br label %7309, !dbg !818

7246:                                             ; preds = %7229
  %7247 = load i64, i64* %7192, align 4, !dbg !819
  br i1 %7234, label %7248, label %7250, !dbg !820

7248:                                             ; preds = %7246
  %7249 = add i64 %7247, 2, !dbg !821
  store i64 %7249, i64* %7192, align 4, !dbg !821
  store i32 2, i32* %7210, align 4, !dbg !822
  br label %7309, !dbg !823

7250:                                             ; preds = %7246
  br i1 %7235, label %7251, label %7253, !dbg !824

7251:                                             ; preds = %7250
  %7252 = add i64 %7247, 3, !dbg !825
  store i64 %7252, i64* %7192, align 4, !dbg !825
  store i32 3, i32* %7210, align 4, !dbg !826
  br label %7309, !dbg !827

7253:                                             ; preds = %7250
  br i1 %7236, label %7254, label %7256, !dbg !828

7254:                                             ; preds = %7253
  %7255 = add i64 %7247, 4, !dbg !829
  store i64 %7255, i64* %7192, align 4, !dbg !829
  store i32 4, i32* %7210, align 4, !dbg !830
  br label %7309, !dbg !831

7256:                                             ; preds = %7253
  %7257 = add i64 %7247, 8, !dbg !832
  store i64 %7257, i64* %7192, align 4, !dbg !832
  %7258 = and i16 %7203, 32, !dbg !833
  %7259 = icmp ne i16 %7258, 0, !dbg !833
  br i1 %7259, label %7260, label %7263, !dbg !834

7260:                                             ; preds = %7256
  %7261 = and i16 %7203, -33, !dbg !835
  %7262 = or i16 %7261, 8, !dbg !836
  store i16 %7262, i16* %7202, align 2, !dbg !837
  store i32 7, i32* %7210, align 4, !dbg !838
  br label %7309, !dbg !839

7263:                                             ; preds = %7256
  store i32 6, i32* %7210, align 4, !dbg !840
  br label %7309, !dbg !841

7264:                                             ; preds = %7219
  br i1 %7209, label %7265, label %7270, !dbg !842

7265:                                             ; preds = %7264
  %7266 = load i32, i32* %7193, align 4, !dbg !843
  %7267 = add i32 %7266, 1, !dbg !843
  store i32 %7267, i32* %7193, align 4, !dbg !843
  %7268 = load i64, i64* %7192, align 4, !dbg !844
  %7269 = add i64 %7268, 8, !dbg !844
  store i64 %7269, i64* %7192, align 4, !dbg !844
  store i32 7, i32* %7210, align 4, !dbg !845
  br label %7309, !dbg !846

7270:                                             ; preds = %7264
  %7271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 0, i32 4, !dbg !847
  %7272 = load i32, i32* %7271, align 4, !dbg !848
  %7273 = alloca i32, align 8, !dbg !849
  store i32 %7272, i32* %7273, align 4, !dbg !850
  %7274 = alloca i32, align 8, !dbg !851
  %7275 = add i32 %7272, %7272, !dbg !852
  %7276 = add i32 %7275, 12, !dbg !853
  %7277 = and i16 %7203, 2, !dbg !854
  %7278 = icmp ne i16 %7277, 0, !dbg !855
  %7279 = zext i1 %7278 to i32, !dbg !856
  %7280 = add i32 %7276, %7279, !dbg !857
  store i32 %7280, i32* %7274, align 4, !dbg !858
  %7281 = and i16 %7203, 16384, !dbg !859
  %7282 = icmp ne i16 %7281, 0, !dbg !860
  br i1 %7282, label %7283, label %7299, !dbg !861

7283:                                             ; preds = %7270
  %7284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 0, i32 0, !dbg !862
  %7285 = bitcast %union.MemValue* %7284 to i32*, !dbg !863
  %7286 = load i32, i32* %7285, align 4, !dbg !864
  %7287 = add i32 %7286, %7286, !dbg !865
  %7288 = add i32 %7280, %7287, !dbg !866
  store i32 %7288, i32* %7274, align 4, !dbg !866
  %7289 = load i64, i64* %7192, align 4, !dbg !867
  %7290 = icmp ne i64 %7289, 0, !dbg !867
  br i1 %7290, label %7295, label %7291, !dbg !868

7291:                                             ; preds = %7283
  %7292 = zext i32 %7286 to i64, !dbg !869
  %7293 = load i64, i64* %7194, align 4, !dbg !870
  %7294 = add i64 %7293, %7292, !dbg !870
  store i64 %7294, i64* %7194, align 4, !dbg !870
  br label %7299, !dbg !871

7295:                                             ; preds = %7283
  %7296 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7200), !dbg !872
  %7297 = load i32, i32* %7273, align 4, !dbg !873
  %7298 = add i32 %7297, %7286, !dbg !873
  store i32 %7298, i32* %7273, align 4, !dbg !873
  br label %7299, !dbg !874

7299:                                             ; preds = %7291, %7295, %7270
  %7300 = load i32, i32* %7273, align 4, !dbg !875
  %7301 = zext i32 %7300 to i64, !dbg !876
  %7302 = load i64, i64* %7192, align 4, !dbg !877
  %7303 = add i64 %7302, %7301, !dbg !877
  store i64 %7303, i64* %7192, align 4, !dbg !877
  %7304 = load i32, i32* %7274, align 4, !dbg !878
  %7305 = zext i32 %7304 to i64, !dbg !879
  %7306 = call i32 @sqlite3VarintLen(i64 %7305), !dbg !880
  %7307 = load i32, i32* %7193, align 4, !dbg !881
  %7308 = add i32 %7307, %7306, !dbg !881
  store i32 %7308, i32* %7193, align 4, !dbg !881
  store i32 %7304, i32* %7210, align 4, !dbg !882
  br label %7309, !dbg !883

7309:                                             ; preds = %7248, %7251, %7254, %7260, %7263, %7243, %7240, %7299, %7265, %7216
  %7310 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7200, i32 -1, !dbg !884
  %7311 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7310, i32 0, i32 1, !dbg !775
  %7312 = load i16, i16* %7311, align 2, !dbg !776
  %7313 = and i16 %7312, 1, !dbg !777
  %7314 = icmp ne i16 %7313, 0, !dbg !777
  %7315 = and i16 %7312, 36, !dbg !778
  %7316 = icmp ne i16 %7315, 0, !dbg !778
  %7317 = and i16 %7312, 8, !dbg !779
  %7318 = icmp ne i16 %7317, 0, !dbg !779
  %7319 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7310, i32 0, i32 8, !dbg !780
  br i1 %7314, label %7320, label %7328, !dbg !781

7320:                                             ; preds = %7309
  %7321 = and i16 %7312, 16384, !dbg !782
  %7322 = icmp ne i16 %7321, 0, !dbg !782
  br i1 %7322, label %7323, label %7324, !dbg !783

7323:                                             ; preds = %7320
  store i32 10, i32* %7319, align 4, !dbg !784
  br label %7325, !dbg !785

7324:                                             ; preds = %7320
  store i32 0, i32* %7319, align 4, !dbg !786
  br label %7325, !dbg !787

7325:                                             ; preds = %7324, %7323
  %7326 = load i32, i32* %7193, align 4, !dbg !788
  %7327 = add i32 %7326, 1, !dbg !788
  store i32 %7327, i32* %7193, align 4, !dbg !788
  br label %7418, !dbg !789

7328:                                             ; preds = %7309
  br i1 %7316, label %7329, label %7373, !dbg !790

7329:                                             ; preds = %7328
  %7330 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7310, i32 0, i32 0, !dbg !791
  %7331 = bitcast %union.MemValue* %7330 to i64*, !dbg !792
  %7332 = load i64, i64* %7331, align 4, !dbg !793
  %7333 = alloca i64, align 8, !dbg !794
  %7334 = icmp slt i64 %7332, 0, !dbg !795
  br i1 %7334, label %7335, label %7337, !dbg !796

7335:                                             ; preds = %7329
  %7336 = xor i64 %7332, -1, !dbg !797
  store i64 %7336, i64* %7333, align 4, !dbg !798
  br label %7338, !dbg !799

7337:                                             ; preds = %7329
  store i64 %7332, i64* %7333, align 4, !dbg !800
  br label %7338, !dbg !801

7338:                                             ; preds = %7337, %7335
  %7339 = load i32, i32* %7193, align 4, !dbg !802
  %7340 = add i32 %7339, 1, !dbg !802
  store i32 %7340, i32* %7193, align 4, !dbg !802
  %7341 = load i64, i64* %7333, align 4, !dbg !803
  %7342 = icmp slt i64 %7341, 127, !dbg !804
  %7343 = icmp slt i64 %7341, 32767, !dbg !805
  %7344 = icmp slt i64 %7341, 8388607, !dbg !806
  %7345 = icmp slt i64 %7341, 2147483647, !dbg !807
  br i1 %7342, label %7346, label %7355, !dbg !808

7346:                                             ; preds = %7338
  %7347 = and i64 %7332, 1, !dbg !809
  %7348 = icmp eq i64 %7347, %7332, !dbg !810
  br i1 %7348, label %7349, label %7352, !dbg !811

7349:                                             ; preds = %7346
  %7350 = trunc i64 %7341 to i32, !dbg !812
  %7351 = add i32 %7350, 8, !dbg !813
  store i32 %7351, i32* %7319, align 4, !dbg !814
  br label %7418, !dbg !815

7352:                                             ; preds = %7346
  %7353 = load i64, i64* %7192, align 4, !dbg !816
  %7354 = add i64 %7353, 1, !dbg !816
  store i64 %7354, i64* %7192, align 4, !dbg !816
  store i32 1, i32* %7319, align 4, !dbg !817
  br label %7418, !dbg !818

7355:                                             ; preds = %7338
  %7356 = load i64, i64* %7192, align 4, !dbg !819
  br i1 %7343, label %7357, label %7359, !dbg !820

7357:                                             ; preds = %7355
  %7358 = add i64 %7356, 2, !dbg !821
  store i64 %7358, i64* %7192, align 4, !dbg !821
  store i32 2, i32* %7319, align 4, !dbg !822
  br label %7418, !dbg !823

7359:                                             ; preds = %7355
  br i1 %7344, label %7360, label %7362, !dbg !824

7360:                                             ; preds = %7359
  %7361 = add i64 %7356, 3, !dbg !825
  store i64 %7361, i64* %7192, align 4, !dbg !825
  store i32 3, i32* %7319, align 4, !dbg !826
  br label %7418, !dbg !827

7362:                                             ; preds = %7359
  br i1 %7345, label %7363, label %7365, !dbg !828

7363:                                             ; preds = %7362
  %7364 = add i64 %7356, 4, !dbg !829
  store i64 %7364, i64* %7192, align 4, !dbg !829
  store i32 4, i32* %7319, align 4, !dbg !830
  br label %7418, !dbg !831

7365:                                             ; preds = %7362
  %7366 = add i64 %7356, 8, !dbg !832
  store i64 %7366, i64* %7192, align 4, !dbg !832
  %7367 = and i16 %7312, 32, !dbg !833
  %7368 = icmp ne i16 %7367, 0, !dbg !833
  br i1 %7368, label %7369, label %7372, !dbg !834

7369:                                             ; preds = %7365
  %7370 = and i16 %7312, -33, !dbg !835
  %7371 = or i16 %7370, 8, !dbg !836
  store i16 %7371, i16* %7311, align 2, !dbg !837
  store i32 7, i32* %7319, align 4, !dbg !838
  br label %7418, !dbg !839

7372:                                             ; preds = %7365
  store i32 6, i32* %7319, align 4, !dbg !840
  br label %7418, !dbg !841

7373:                                             ; preds = %7328
  br i1 %7318, label %7374, label %7379, !dbg !842

7374:                                             ; preds = %7373
  %7375 = load i32, i32* %7193, align 4, !dbg !843
  %7376 = add i32 %7375, 1, !dbg !843
  store i32 %7376, i32* %7193, align 4, !dbg !843
  %7377 = load i64, i64* %7192, align 4, !dbg !844
  %7378 = add i64 %7377, 8, !dbg !844
  store i64 %7378, i64* %7192, align 4, !dbg !844
  store i32 7, i32* %7319, align 4, !dbg !845
  br label %7418, !dbg !846

7379:                                             ; preds = %7373
  %7380 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7310, i32 0, i32 4, !dbg !847
  %7381 = load i32, i32* %7380, align 4, !dbg !848
  %7382 = alloca i32, align 8, !dbg !849
  store i32 %7381, i32* %7382, align 4, !dbg !850
  %7383 = alloca i32, align 8, !dbg !851
  %7384 = add i32 %7381, %7381, !dbg !852
  %7385 = add i32 %7384, 12, !dbg !853
  %7386 = and i16 %7312, 2, !dbg !854
  %7387 = icmp ne i16 %7386, 0, !dbg !855
  %7388 = zext i1 %7387 to i32, !dbg !856
  %7389 = add i32 %7385, %7388, !dbg !857
  store i32 %7389, i32* %7383, align 4, !dbg !858
  %7390 = and i16 %7312, 16384, !dbg !859
  %7391 = icmp ne i16 %7390, 0, !dbg !860
  br i1 %7391, label %7392, label %7408, !dbg !861

7392:                                             ; preds = %7379
  %7393 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7310, i32 0, i32 0, !dbg !862
  %7394 = bitcast %union.MemValue* %7393 to i32*, !dbg !863
  %7395 = load i32, i32* %7394, align 4, !dbg !864
  %7396 = add i32 %7395, %7395, !dbg !865
  %7397 = add i32 %7389, %7396, !dbg !866
  store i32 %7397, i32* %7383, align 4, !dbg !866
  %7398 = load i64, i64* %7192, align 4, !dbg !867
  %7399 = icmp ne i64 %7398, 0, !dbg !867
  br i1 %7399, label %7404, label %7400, !dbg !868

7400:                                             ; preds = %7392
  %7401 = zext i32 %7395 to i64, !dbg !869
  %7402 = load i64, i64* %7194, align 4, !dbg !870
  %7403 = add i64 %7402, %7401, !dbg !870
  store i64 %7403, i64* %7194, align 4, !dbg !870
  br label %7408, !dbg !871

7404:                                             ; preds = %7392
  %7405 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7310), !dbg !872
  %7406 = load i32, i32* %7382, align 4, !dbg !873
  %7407 = add i32 %7406, %7395, !dbg !873
  store i32 %7407, i32* %7382, align 4, !dbg !873
  br label %7408, !dbg !874

7408:                                             ; preds = %7400, %7404, %7379
  %7409 = load i32, i32* %7382, align 4, !dbg !875
  %7410 = zext i32 %7409 to i64, !dbg !876
  %7411 = load i64, i64* %7192, align 4, !dbg !877
  %7412 = add i64 %7411, %7410, !dbg !877
  store i64 %7412, i64* %7192, align 4, !dbg !877
  %7413 = load i32, i32* %7383, align 4, !dbg !878
  %7414 = zext i32 %7413 to i64, !dbg !879
  %7415 = call i32 @sqlite3VarintLen(i64 %7414), !dbg !880
  %7416 = load i32, i32* %7193, align 4, !dbg !881
  %7417 = add i32 %7416, %7415, !dbg !881
  store i32 %7417, i32* %7193, align 4, !dbg !881
  store i32 %7413, i32* %7319, align 4, !dbg !882
  br label %7418, !dbg !883

7418:                                             ; preds = %7357, %7360, %7363, %7369, %7372, %7352, %7349, %7408, %7374, %7325
  %7419 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 5, !dbg !885
  %7420 = load i32, i32* %7193, align 4, !dbg !886
  %7421 = zext i32 %7420 to i64, !dbg !887
  %7422 = icmp slt i32 %7420, 126, !dbg !888
  br i1 %7422, label %7423, label %7425, !dbg !889

7423:                                             ; preds = %7418
  %7424 = add i32 %7420, 1, !dbg !890
  store i32 %7424, i32* %7193, align 4, !dbg !890
  br label %7434, !dbg !891

7425:                                             ; preds = %7418
  %7426 = call i32 @sqlite3VarintLen(i64 %7421), !dbg !892
  %7427 = load i32, i32* %7193, align 4, !dbg !893
  %7428 = add i32 %7427, %7426, !dbg !893
  store i32 %7428, i32* %7193, align 4, !dbg !893
  %7429 = call i32 @sqlite3VarintLen(i64 %7421), !dbg !894
  %7430 = icmp slt i32 %7426, %7429, !dbg !895
  br i1 %7430, label %7431, label %7434, !dbg !896

7431:                                             ; preds = %7425
  %7432 = load i32, i32* %7193, align 4, !dbg !897
  %7433 = add i32 %7432, 1, !dbg !897
  store i32 %7433, i32* %7193, align 4, !dbg !897
  br label %7434, !dbg !898

7434:                                             ; preds = %7431, %7425, %7423
  %7435 = load i32, i32* %7193, align 4, !dbg !899
  %7436 = zext i32 %7435 to i64, !dbg !899
  %7437 = load i64, i64* %7192, align 4, !dbg !900
  %7438 = add i64 %7436, %7437, !dbg !900
  %7439 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 7, !dbg !901
  %7440 = load i32, i32* %7439, align 4, !dbg !902
  %7441 = zext i32 %7440 to i64, !dbg !903
  %7442 = load i64, i64* %7194, align 4, !dbg !904
  %7443 = add i64 %7438, %7442, !dbg !905
  %7444 = icmp sle i64 %7443, %7441, !dbg !906
  br i1 %7444, label %7445, label %7448, !dbg !907

7445:                                             ; preds = %7434
  %7446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 6, !dbg !908
  %7447 = load i8*, i8** %7446, align 8, !dbg !909
  store i8* %7447, i8** %7419, align 8, !dbg !910
  br label %7451, !dbg !911

7448:                                             ; preds = %7434
  %7449 = trunc i64 %7438 to i32, !dbg !912
  %7450 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %7201, i32 %7449), !dbg !913
  br label %7451, !dbg !914

7451:                                             ; preds = %7448, %7445
  %7452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 4, !dbg !915
  %7453 = trunc i64 %7438 to i32, !dbg !916
  store i32 %7453, i32* %7452, align 4, !dbg !917
  %7454 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 1, !dbg !918
  store i16 16, i16* %7454, align 2, !dbg !919
  %7455 = load i64, i64* %7194, align 4, !dbg !920
  %7456 = icmp ne i64 %7455, 0, !dbg !921
  br i1 %7456, label %7457, label %7463, !dbg !922

7457:                                             ; preds = %7451
  %7458 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7201, i32 0, i32 0, i32 0, !dbg !923
  %7459 = bitcast double* %7458 to i32*, !dbg !924
  %7460 = trunc i64 %7455 to i32, !dbg !925
  store i32 %7460, i32* %7459, align 4, !dbg !926
  %7461 = load i16, i16* %7454, align 2, !dbg !927
  %7462 = or i16 %7461, 16384, !dbg !928
  store i16 %7462, i16* %7454, align 2, !dbg !929
  br label %7463, !dbg !930

7463:                                             ; preds = %7457, %7451
  %7464 = alloca i8*, align 8, !dbg !931
  %7465 = load i8*, i8** %7419, align 8, !dbg !932
  store i8* %7465, i8** %7464, align 8, !dbg !933
  %7466 = load i32, i32* %7193, align 4, !dbg !934
  %7467 = zext i32 %7466 to i64, !dbg !935
  %7468 = getelementptr i8, i8* %7465, i32 %7466, !dbg !936
  store i8* %7468, i8** %7195, align 8, !dbg !937
  %7469 = call i32 @sqlite3PutVarint(i8* %7465, i64 %7467), !dbg !938
  %7470 = getelementptr i8, i8* %7465, i32 %7469, !dbg !939
  store i8* %7470, i8** %7464, align 8, !dbg !940
  %7471 = load i8*, i8** %7195, align 8, !dbg !941
  %7472 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7199, i32 0, i32 8, !dbg !942
  %7473 = load i32, i32* %7472, align 4, !dbg !943
  %7474 = zext i32 %7473 to i64, !dbg !944
  %7475 = call i32 @sqlite3PutVarint(i8* %7470, i64 %7474), !dbg !945
  %7476 = getelementptr i8, i8* %7470, i32 %7475, !dbg !946
  store i8* %7476, i8** %7464, align 8, !dbg !947
  %7477 = call i32 @sqlite3VdbeSerialPut(i8* %7471, %struct.sqlite3_value* %7199, i32 %7473), !dbg !948
  %7478 = getelementptr i8, i8* %7471, i32 %7477, !dbg !949
  %7479 = load i32, i32* %7210, align 4, !dbg !943
  %7480 = zext i32 %7479 to i64, !dbg !944
  %7481 = call i32 @sqlite3PutVarint(i8* %7476, i64 %7480), !dbg !945
  %7482 = getelementptr i8, i8* %7476, i32 %7481, !dbg !946
  store i8* %7482, i8** %7464, align 8, !dbg !947
  %7483 = call i32 @sqlite3VdbeSerialPut(i8* %7478, %struct.sqlite3_value* %7200, i32 %7479), !dbg !948
  call void @llvm.stackrestore(i8* %7191), !dbg !951
  br label %7484, !dbg !74

7484:                                             ; preds = %17, %7463
  %7485 = call i8* @llvm.stacksave(), !dbg !952
  %7486 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !955
  %7487 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7486, align 8, !dbg !956
  %7488 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !957
  %7489 = call i8* @llvm.stacksave(), !dbg !958
  %7490 = alloca i32, align 8, !dbg !959
  store i32 0, i32* %7490, align 4, !dbg !958
  %7491 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7488, i32 0, i32 1, !dbg !958
  %7492 = load i16, i16* %7491, align 2, !dbg !958
  %7493 = and i16 %7492, 16384, !dbg !958
  %7494 = icmp ne i16 %7493, 0, !dbg !958
  br i1 %7494, label %7495, label %7497, !dbg !958

7495:                                             ; preds = %7484
  %7496 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %7488), !dbg !958
  store i32 %7496, i32* %7490, align 4, !dbg !958
  br label %7497, !dbg !959

7497:                                             ; preds = %7495, %7484
  call void @llvm.stackrestore(i8* %7489), !dbg !958
  %7498 = load i32, i32* %7490, align 4, !dbg !958
  %7499 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %7487, %struct.sqlite3_value* %7488), !dbg !960
  call void @llvm.stackrestore(i8* %7485), !dbg !961
  br label %7500, !dbg !74

7500:                                             ; preds = %18, %7497
  %7501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1265
  %7502 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7501, i32 0, i32 0, i32 0, !dbg !1268
  %7503 = bitcast double* %7502 to i64*, !dbg !1269
  %7504 = load i64, i64* %7503, align 4, !dbg !1270
  %7505 = add i64 %7504, 1, !dbg !1271
  %7506 = trunc i64 %7505 to i32, !dbg !1272
  store i32 %7506, i32* %15, align 4, !dbg !1273
  br label %14, !dbg !1274

7507:                                             ; preds = %18, %.critedge, %79
  %7508 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 86, !dbg !87
  %7509 = call i8* @llvm.stacksave(), !dbg !90
  %7510 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7508, i32 0, i32 4, !dbg !79
  %7511 = load i32, i32* %7510, align 4, !dbg !82
  %7512 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7511, !dbg !83
  %7513 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7512, i32 0, i32 1, !dbg !90
  %7514 = load i16, i16* %7513, align 2, !dbg !90
  %7515 = and i16 %7514, 9216, !dbg !90
  %7516 = icmp ne i16 %7515, 0, !dbg !90
  %7517 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %7516, label %7518, label %7520, !dbg !90

7518:                                             ; preds = %7507
  %7519 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %7512), !dbg !90
  store %struct.sqlite3_value* %7519, %struct.sqlite3_value** %7517, align 8, !dbg !90
  br label %7521, !dbg !90

7520:                                             ; preds = %7507
  store i16 4, i16* %7513, align 2, !dbg !90
  store %struct.sqlite3_value* %7512, %struct.sqlite3_value** %7517, align 8, !dbg !90
  br label %7521, !dbg !90

7521:                                             ; preds = %7520, %7518
  %7522 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7517, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %7509), !dbg !90
  %7523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7522, i32 0, i32 1, !dbg !91
  store i16 1, i16* %7523, align 2, !dbg !92
  %7524 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7522, i32 0, i32 4, !dbg !93
  store i32 0, i32* %7524, align 4, !dbg !94
  %7525 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7522, i32 1, !dbg !1294
  %7526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7525, i32 0, i32 1, !dbg !1295
  %7527 = load i16, i16* %7526, align 2, !dbg !1295
  %7528 = and i16 %7527, 9216, !dbg !1295
  %7529 = icmp ne i16 %7528, 0, !dbg !1295
  br i1 %7529, label %7530, label %7531, !dbg !1295

7530:                                             ; preds = %7521
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7525), !dbg !1295
  br label %7532, !dbg !1295

7531:                                             ; preds = %7521
  store i16 1, i16* %7526, align 2, !dbg !1295
  br label %7532, !dbg !1295

7532:                                             ; preds = %7531, %7530
  store i16 1, i16* %7526, align 2, !dbg !1296
  %7533 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7525, i32 0, i32 4, !dbg !1297
  store i32 0, i32* %7533, align 4, !dbg !1298
  %7534 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7525, i32 1, !dbg !1294
  %7535 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7534, i32 0, i32 1, !dbg !1295
  %7536 = load i16, i16* %7535, align 2, !dbg !1295
  %7537 = and i16 %7536, 9216, !dbg !1295
  %7538 = icmp ne i16 %7537, 0, !dbg !1295
  br i1 %7538, label %7539, label %7540, !dbg !1295

7539:                                             ; preds = %7532
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7534), !dbg !1295
  br label %7541, !dbg !1295

7540:                                             ; preds = %7532
  store i16 1, i16* %7535, align 2, !dbg !1295
  br label %7541, !dbg !1295

7541:                                             ; preds = %7540, %7539
  store i16 1, i16* %7535, align 2, !dbg !1296
  %7542 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7534, i32 0, i32 4, !dbg !1297
  store i32 0, i32* %7542, align 4, !dbg !1298
  %7543 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7534, i32 1, !dbg !1294
  %7544 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7543, i32 0, i32 1, !dbg !1295
  %7545 = load i16, i16* %7544, align 2, !dbg !1295
  %7546 = and i16 %7545, 9216, !dbg !1295
  %7547 = icmp ne i16 %7546, 0, !dbg !1295
  br i1 %7547, label %7548, label %7549, !dbg !1295

7548:                                             ; preds = %7541
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7543), !dbg !1295
  br label %7550, !dbg !1295

7549:                                             ; preds = %7541
  store i16 1, i16* %7544, align 2, !dbg !1295
  br label %7550, !dbg !1295

7550:                                             ; preds = %7549, %7548
  store i16 1, i16* %7544, align 2, !dbg !1296
  %7551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7543, i32 0, i32 4, !dbg !1297
  store i32 0, i32* %7551, align 4, !dbg !1298
  br label %7552, !dbg !74

7552:                                             ; preds = %18, %7550
  %7553 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 87, !dbg !75
  %7554 = call i8* @llvm.stacksave(), !dbg !78
  %7555 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7553, i32 0, i32 4, !dbg !79
  %7556 = load i32, i32* %7555, align 4, !dbg !82
  %7557 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7556, !dbg !83
  %7558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7557, i32 0, i32 1, !dbg !78
  %7559 = load i16, i16* %7558, align 2, !dbg !78
  %7560 = and i16 %7559, 9216, !dbg !78
  %7561 = icmp ne i16 %7560, 0, !dbg !78
  %7562 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %7561, label %7563, label %7565, !dbg !78

7563:                                             ; preds = %7552
  %7564 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %7557), !dbg !78
  store %struct.sqlite3_value* %7564, %struct.sqlite3_value** %7562, align 8, !dbg !78
  br label %7566, !dbg !78

7565:                                             ; preds = %7552
  store i16 4, i16* %7558, align 2, !dbg !78
  store %struct.sqlite3_value* %7557, %struct.sqlite3_value** %7562, align 8, !dbg !78
  br label %7566, !dbg !78

7566:                                             ; preds = %7565, %7563
  %7567 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7562, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %7554), !dbg !78
  %7568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7567, i32 0, i32 0, i32 0, !dbg !84
  %7569 = bitcast double* %7568 to i64*, !dbg !85
  store i64 0, i64* %7569, align 4, !dbg !86
  br label %7570, !dbg !74

7570:                                             ; preds = %18, %7566
  %7571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1265
  %7572 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7571, i32 0, i32 0, i32 0, !dbg !1268
  %7573 = bitcast double* %7572 to i64*, !dbg !1269
  %7574 = load i64, i64* %7573, align 4, !dbg !1270
  %7575 = add i64 %7574, 1, !dbg !1271
  %7576 = trunc i64 %7575 to i32, !dbg !1272
  store i32 %7576, i32* %15, align 4, !dbg !1273
  br label %14, !dbg !1274

7577:                                             ; preds = %6069, %17, %18, %5743
  %7578 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 9, i32 4, i32 -1, i8 3), !dbg !979
  %7579 = ptrtoint %struct.VdbeCursor* %7578 to i64, !dbg !982
  %7580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7578, i32 0, i32 2, !dbg !983
  store i8 1, i8* %7580, align 1, !dbg !984
  %7581 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7578, i32 0, i32 10, !dbg !985
  store i32 35, i32* %7581, align 4, !dbg !986
  %7582 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7578, i32 0, i32 4, !dbg !987
  store i8 1, i8* %7582, align 1, !dbg !988
  %7583 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !989
  %7584 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7578, i32 0, i32 12, i32 0, !dbg !990
  store %struct.BtCursor* %7583, %struct.BtCursor** %7584, align 8, !dbg !991
  br label %7585, !dbg !74

7585:                                             ; preds = %18, %7577
  %7586 = call i8* @llvm.stacksave(), !dbg !128
  %7587 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !131
  %7588 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %7587, i32 6, !dbg !132
  %7589 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7588, align 8, !dbg !133
  %7590 = alloca i32, align 4, !dbg !134
  store i32 1, i32* %7590, align 4, !dbg !135
  %7591 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7589, i32 0, i32 0, !dbg !136
  %7592 = load i8, i8* %7591, align 1, !dbg !137
  %7593 = icmp eq i8 %7592, 1, !dbg !138
  %7594 = alloca i32, align 4, !dbg !139
  store i32 0, i32* %7594, align 4, !dbg !140
  br i1 %7593, label %7595, label %7597, !dbg !141

7595:                                             ; preds = %7585
  %7596 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %7589, i32* %7590), !dbg !142
  store i32 %7596, i32* %7594, align 4, !dbg !143
  br label %7603, !dbg !144

7597:                                             ; preds = %7585
  %7598 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7589, i32 0, i32 12, i32 0, !dbg !145
  %7599 = load %struct.BtCursor*, %struct.BtCursor** %7598, align 8, !dbg !146
  %7600 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %7599, i32* %7590), !dbg !147
  store i32 %7600, i32* %7594, align 4, !dbg !148
  %7601 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7589, i32 0, i32 3, !dbg !149
  store i8 0, i8* %7601, align 1, !dbg !150
  %7602 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7589, i32 0, i32 9, !dbg !151
  store i32 0, i32* %7602, align 4, !dbg !152
  br label %7603, !dbg !153

7603:                                             ; preds = %7597, %7595
  %7604 = load i32, i32* %7594, align 4, !dbg !154
  %7605 = load i32, i32* %7590, align 4, !dbg !155
  %7606 = trunc i32 %7605 to i8, !dbg !156
  %7607 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7589, i32 0, i32 2, !dbg !157
  store i8 %7606, i8* %7607, align 1, !dbg !158
  call void @llvm.stackrestore(i8* %7586), !dbg !159
  %7608 = icmp ne i32 %7605, 0, !dbg !160
  br i1 %7608, label %8166, label %7609, !dbg !161

7609:                                             ; preds = %18, %8164, %7603
  %7610 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 35, !dbg !992
  %7611 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !995
  %7612 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %7611, i32 6, !dbg !996
  %7613 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7612, align 8, !dbg !997
  %7614 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %7613, %struct.sqlite3_value* %7610), !dbg !998
  %7615 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %7611, i32 9, !dbg !999
  %7616 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7615, align 8, !dbg !1000
  %7617 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7616, i32 0, i32 9, !dbg !1001
  store i32 0, i32* %7617, align 4, !dbg !1002
  br label %7618, !dbg !74

7618:                                             ; preds = %18, %7609
  %7619 = call i8* @llvm.stacksave(), !dbg !162
  %7620 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %7621 = load i8, i8* %7620, align 1, !dbg !166
  %7622 = alloca i32, align 4, !dbg !167
  store i32 9, i32* %7622, align 4, !dbg !168
  %7623 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !169
  %7624 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %7625 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7623, align 8, !dbg !171
  store %struct.VdbeCursor* %7625, %struct.VdbeCursor** %7624, align 8, !dbg !172
  %7626 = alloca i8*, align 8, !dbg !173
  %7627 = alloca i32, align 4, !dbg !174
  %7628 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7624, i32* %7622), !dbg !175
  %7629 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7624, align 8, !dbg !176
  %7630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !177
  %7631 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 16, !dbg !178
  %7632 = load i16, i16* %7631, align 2, !dbg !179
  %7633 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 19, !dbg !180
  %7634 = load i32*, i32** %7633, align 8, !dbg !181
  %7635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 0, !dbg !182
  %7636 = load i8, i8* %7635, align 1, !dbg !183
  %7637 = icmp ne i8 %7636, 3, !dbg !184
  %7638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 2, !dbg !185
  %7639 = load i8, i8* %7638, align 1, !dbg !186
  %7640 = icmp ne i8 %7639, 0, !dbg !187
  %7641 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 14, !dbg !188
  %7642 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 21, !dbg !189
  %7643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 22, !dbg !190
  %7644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 20, !dbg !191
  %7645 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 17, !dbg !192
  %7646 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 9, !dbg !193
  %7647 = load i32, i32* %7646, align 4, !dbg !194
  %7648 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %7649 = load i32, i32* %7648, align 4, !dbg !196
  %7650 = icmp ne i32 %7647, %7649, !dbg !197
  br i1 %7650, label %7651, label %7693, !dbg !198

7651:                                             ; preds = %7618
  br i1 %7640, label %7673, label %7668, !dbg !199

7652:                                             ; preds = %7668, %7675
  %7653 = load i32, i32* %7648, align 4, !dbg !200
  store i32 %7653, i32* %7646, align 4, !dbg !201
  %7654 = load i8*, i8** %7644, align 8, !dbg !202
  %7655 = load i8, i8* %7654, align 1, !dbg !203
  %7656 = icmp sgt i8 %7655, -1, !dbg !206
  br i1 %7656, label %7657, label %7659, !dbg !207

7657:                                             ; preds = %7652
  %7658 = zext i8 %7655 to i32, !dbg !208
  store i32 %7658, i32* %7634, align 4, !dbg !209
  store i32 1, i32* %7641, align 4, !dbg !210
  br label %7662, !dbg !211

7659:                                             ; preds = %7652
  %7660 = call i8 @sqlite3GetVarint32(i8* %7654, i32* %7634), !dbg !212
  %7661 = zext i8 %7660 to i32, !dbg !213
  store i32 %7661, i32* %7641, align 4, !dbg !214
  br label %7662, !dbg !215

7662:                                             ; preds = %7659, %7657
  store i16 0, i16* %7645, align 2, !dbg !216
  %7663 = load i32, i32* %7643, align 4, !dbg !217
  %7664 = load i32, i32* %7634, align 4, !dbg !218
  %7665 = icmp ult i32 %7663, %7664, !dbg !219
  br i1 %7665, label %7667, label %7666, !dbg !220

7666:                                             ; preds = %7662
  store i8* %7654, i8** %7626, align 8, !dbg !221
  br label %7784, !dbg !222

7667:                                             ; preds = %7662
  store i8* null, i8** %7644, align 8, !dbg !223
  store i32 0, i32* %7643, align 4, !dbg !224
  br label %7693, !dbg !225

7668:                                             ; preds = %7651
  %7669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 12, i32 0, !dbg !226
  %7670 = load %struct.BtCursor*, %struct.BtCursor** %7669, align 8, !dbg !227
  %7671 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7670), !dbg !228
  store i32 %7671, i32* %7642, align 4, !dbg !229
  %7672 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7670, i32* %7643), !dbg !230
  store i8* %7672, i8** %7644, align 8, !dbg !231
  br label %7652, !dbg !232

7673:                                             ; preds = %7651
  %7674 = icmp eq i8 %7636, 3, !dbg !233
  br i1 %7674, label %7675, label %7686, !dbg !234

7675:                                             ; preds = %7673
  %7676 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 10, !dbg !235
  %7677 = load i32, i32* %7676, align 4, !dbg !236
  %7678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7677, !dbg !237
  %7679 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7678, i32 0, i32 1, !dbg !238
  %7680 = load i16, i16* %7679, align 2, !dbg !239
  %7681 = and i16 %7680, 16, !dbg !240
  %7682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7678, i32 0, i32 4, !dbg !241
  %7683 = load i32, i32* %7682, align 4, !dbg !242
  store i32 %7683, i32* %7642, align 4, !dbg !243
  store i32 %7683, i32* %7643, align 4, !dbg !244
  %7684 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7678, i32 0, i32 5, !dbg !245
  %7685 = load i8*, i8** %7684, align 8, !dbg !246
  store i8* %7685, i8** %7644, align 8, !dbg !247
  br label %7652, !dbg !248

7686:                                             ; preds = %7673
  %7687 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 1, !dbg !249
  %7688 = load i16, i16* %7687, align 2, !dbg !249
  %7689 = and i16 %7688, 9216, !dbg !249
  %7690 = icmp ne i16 %7689, 0, !dbg !249
  br i1 %7690, label %7691, label %7692, !dbg !249

7691:                                             ; preds = %7686
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7630), !dbg !249
  br label %7872, !dbg !249

7692:                                             ; preds = %7686
  store i16 1, i16* %7687, align 2, !dbg !249
  br label %7872, !dbg !249

7693:                                             ; preds = %7667, %7618
  %7694 = load i16, i16* %7645, align 2, !dbg !250
  %7695 = icmp ule i16 %7694, 0, !dbg !251
  br i1 %7695, label %7776, label %7773, !dbg !252

7696:                                             ; preds = %7773, %7862
  %7697 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 1, !dbg !253
  %7698 = load i16, i16* %7697, align 2, !dbg !254
  %7699 = and i16 9216, %7698, !dbg !255
  %7700 = icmp eq i16 0, %7699, !dbg !256
  br i1 %7700, label %7701, label %7705, !dbg !257

7701:                                             ; preds = %7696
  %7702 = icmp ne i16 %7699, 0, !dbg !258
  br i1 %7702, label %7703, label %7704, !dbg !258

7703:                                             ; preds = %7701
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7630), !dbg !258
  br label %7705, !dbg !258

7704:                                             ; preds = %7701
  store i16 1, i16* %7697, align 2, !dbg !258
  br label %7705, !dbg !258

7705:                                             ; preds = %7703, %7704, %7696
  %7706 = load i32, i32* %7627, align 4, !dbg !259
  %7707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 23, i32 0, !dbg !260
  %7708 = load i32, i32* %7707, align 4, !dbg !261
  %7709 = load i32, i32* %7643, align 4, !dbg !262
  %7710 = getelementptr i32, i32* %7634, i32 1, !dbg !263
  %7711 = load i32, i32* %7710, align 4, !dbg !264
  %7712 = icmp sge i32 %7709, %7711, !dbg !265
  br i1 %7712, label %7713, label %7752, !dbg !266

7713:                                             ; preds = %7705
  %7714 = load i8*, i8** %7644, align 8, !dbg !267
  %7715 = ptrtoint i8* %7714 to i64, !dbg !268
  %7716 = load i32, i32* %7634, align 4, !dbg !269
  %7717 = zext i32 %7716 to i64, !dbg !270
  %7718 = add i64 %7715, %7717, !dbg !271
  %7719 = inttoptr i64 %7718 to i8*, !dbg !272
  store i8* %7719, i8** %7626, align 8, !dbg !273
  %7720 = load i32, i32* %7627, align 4, !dbg !274
  %7721 = icmp ult i32 %7720, 12, !dbg !275
  br i1 %7721, label %7722, label %7724, !dbg !276

7722:                                             ; preds = %7713
  %7723 = call i32 @sqlite3VdbeSerialGet(i8* %7719, i32 %7720, %struct.sqlite3_value* %7630), !dbg !277
  br label %7872, !dbg !278

7724:                                             ; preds = %7713
  %7725 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %7725, align 2, !dbg !280
  %7726 = getelementptr i16, i16* %7725, i32 1, !dbg !281
  store i16 514, i16* %7726, align 2, !dbg !282
  %7727 = load i32, i32* %7627, align 4, !dbg !283
  %7728 = sub i32 %7727, 12, !dbg !284
  %7729 = lshr i32 %7728, 1, !dbg !285
  %7730 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 4, !dbg !286
  store i32 %7729, i32* %7730, align 4, !dbg !287
  %7731 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 2, !dbg !288
  store i8 %7621, i8* %7731, align 1, !dbg !289
  %7732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 5, !dbg !290
  %7733 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 7, !dbg !291
  %7734 = load i32, i32* %7733, align 4, !dbg !292
  %7735 = add i32 %7729, 2, !dbg !293
  %7736 = icmp slt i32 %7734, %7735, !dbg !294
  br i1 %7736, label %7737, label %7739, !dbg !295

7737:                                             ; preds = %7724
  store i16 1, i16* %7697, align 2, !dbg !296
  %7738 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7630, i32 %7735, i32 0), !dbg !297
  br label %7742, !dbg !298

7739:                                             ; preds = %7724
  %7740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 6, !dbg !299
  %7741 = load i8*, i8** %7740, align 8, !dbg !300
  store i8* %7741, i8** %7732, align 8, !dbg !301
  br label %7742, !dbg !302

7742:                                             ; preds = %7739, %7737
  %7743 = zext i32 %7729 to i64, !dbg !303
  %7744 = load i8*, i8** %7732, align 8, !dbg !304
  %7745 = load i8*, i8** %7626, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7744, i8* %7745, i64 %7743, i1 false), !dbg !306
  %7746 = getelementptr i8, i8* %7744, i32 %7729, !dbg !307
  store i8 0, i8* %7746, align 1, !dbg !308
  %7747 = add i32 %7729, 1, !dbg !309
  %7748 = getelementptr i8, i8* %7744, i32 %7747, !dbg !310
  store i8 0, i8* %7748, align 1, !dbg !311
  %7749 = and i32 %7727, 1, !dbg !312
  %7750 = getelementptr i16, i16* %7725, i32 %7749, !dbg !313
  %7751 = load i16, i16* %7750, align 2, !dbg !314
  store i16 %7751, i16* %7697, align 2, !dbg !315
  br label %7872, !dbg !316

7752:                                             ; preds = %7705
  %7753 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 2, !dbg !317
  store i8 %7621, i8* %7753, align 1, !dbg !318
  %7754 = load i32, i32* %7627, align 4, !dbg !319
  %7755 = and i32 %7754, 1, !dbg !320
  %7756 = icmp eq i32 %7755, 0, !dbg !321
  %7757 = icmp sge i32 %7754, 12, !dbg !322
  %7758 = and i1 %7757, %7756, !dbg !323
  %7759 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7754), !dbg !324
  %7760 = icmp eq i32 %7759, 0, !dbg !325
  br i1 %7760, label %7771, label %7761, !dbg !326

7761:                                             ; preds = %7752
  %7762 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 12, i32 0, !dbg !327
  %7763 = load %struct.BtCursor*, %struct.BtCursor** %7762, align 8, !dbg !328
  %7764 = load i32, i32* %7634, align 4, !dbg !329
  %7765 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7763, i32 %7764, i32 %7759, %struct.sqlite3_value* %7630), !dbg !330
  %7766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 5, !dbg !331
  %7767 = load i8*, i8** %7766, align 8, !dbg !332
  %7768 = call i32 @sqlite3VdbeSerialGet(i8* %7767, i32 %7754, %struct.sqlite3_value* %7630), !dbg !333
  %7769 = load i16, i16* %7697, align 2, !dbg !334
  %7770 = and i16 %7769, -4097, !dbg !335
  store i16 %7770, i16* %7697, align 2, !dbg !336
  br label %7872, !dbg !337

7771:                                             ; preds = %7752
  %7772 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7754, %struct.sqlite3_value* %7630), !dbg !338
  br label %7872, !dbg !339

7773:                                             ; preds = %7693
  %7774 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 23, i32 0, !dbg !340
  %7775 = load i32, i32* %7774, align 4, !dbg !341
  store i32 %7775, i32* %7627, align 4, !dbg !342
  br label %7696, !dbg !343

7776:                                             ; preds = %7693
  %7777 = load i32, i32* %7641, align 4, !dbg !344
  %7778 = load i32, i32* %7634, align 4, !dbg !345
  %7779 = icmp ult i32 %7777, %7778, !dbg !346
  br i1 %7779, label %7780, label %7861, !dbg !347

7780:                                             ; preds = %7776
  %7781 = load i8*, i8** %7644, align 8, !dbg !348
  %7782 = icmp eq i8* %7781, null, !dbg !349
  br i1 %7782, label %7784, label %7783, !dbg !350

7783:                                             ; preds = %7780
  store i8* %7781, i8** %7626, align 8, !dbg !351
  br label %7784, !dbg !352

7784:                                             ; preds = %7783, %7780, %7666
  %7785 = alloca i32, align 4, !dbg !353
  %7786 = load i16, i16* %7645, align 2, !dbg !354
  %7787 = zext i16 %7786 to i32, !dbg !355
  store i32 %7787, i32* %7785, align 4, !dbg !356
  %7788 = alloca i64, align 8, !dbg !357
  %7789 = getelementptr i32, i32* %7634, i32 %7787, !dbg !358
  %7790 = load i32, i32* %7789, align 4, !dbg !359
  %7791 = zext i32 %7790 to i64, !dbg !360
  store i64 %7791, i64* %7788, align 4, !dbg !361
  %7792 = load i8*, i8** %7626, align 8, !dbg !362
  %7793 = load i32, i32* %7641, align 4, !dbg !363
  %7794 = alloca i8*, align 8, !dbg !364
  %7795 = getelementptr i8, i8* %7792, i32 %7793, !dbg !365
  store i8* %7795, i8** %7794, align 8, !dbg !366
  %7796 = load i32, i32* %7634, align 4, !dbg !367
  %7797 = getelementptr i8, i8* %7792, i32 %7796, !dbg !368
  br label %7798, !dbg !369

7798:                                             ; preds = %7805, %7784
  %7799 = load i32, i32* %7785, align 4, !dbg !370
  %7800 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7629, i32 0, i32 23, i32 %7799, !dbg !371
  %7801 = load i8*, i8** %7794, align 8, !dbg !372
  %7802 = load i8, i8* %7801, align 1, !dbg !373
  %7803 = zext i8 %7802 to i32, !dbg !374
  store i32 %7803, i32* %7627, align 4, !dbg !375
  store i32 %7803, i32* %7800, align 4, !dbg !376
  %7804 = icmp sgt i8 %7802, -1, !dbg !377
  br i1 %7804, label %7828, label %7819, !dbg !378

7805:                                             ; preds = %7819, %7828
  %7806 = load i32, i32* %7785, align 4, !dbg !379
  %7807 = add i32 %7806, 1, !dbg !380
  store i32 %7807, i32* %7785, align 4, !dbg !381
  %7808 = load i64, i64* %7788, align 4, !dbg !382
  %7809 = and i64 4294967295, %7808, !dbg !383
  %7810 = trunc i64 %7809 to i32, !dbg !384
  %7811 = getelementptr i32, i32* %7634, i32 %7807, !dbg !385
  store i32 %7810, i32* %7811, align 4, !dbg !386
  %7812 = load i32, i32* %7785, align 4, !dbg !387
  %7813 = icmp sle i32 %7812, 0, !dbg !388
  %7814 = load i8*, i8** %7794, align 8, !dbg !389
  %7815 = ptrtoint i8* %7814 to i64, !dbg !390
  %7816 = ptrtoint i8* %7797 to i64, !dbg !391
  %7817 = icmp ult i64 %7815, %7816, !dbg !392
  %7818 = and i1 %7813, %7817, !dbg !393
  br i1 %7818, label %7798, label %7837, !dbg !394

7819:                                             ; preds = %7798
  %7820 = load i8*, i8** %7794, align 8, !dbg !395
  %7821 = call i8 @sqlite3GetVarint32(i8* %7820, i32* %7627), !dbg !396
  %7822 = getelementptr i8, i8* %7820, i8 %7821, !dbg !397
  store i8* %7822, i8** %7794, align 8, !dbg !398
  %7823 = load i32, i32* %7627, align 4, !dbg !399
  store i32 %7823, i32* %7800, align 4, !dbg !400
  %7824 = load i64, i64* %7788, align 4, !dbg !401
  %7825 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7823), !dbg !402
  %7826 = zext i32 %7825 to i64, !dbg !403
  %7827 = add i64 %7824, %7826, !dbg !404
  store i64 %7827, i64* %7788, align 4, !dbg !405
  br label %7805, !dbg !406

7828:                                             ; preds = %7798
  %7829 = getelementptr i8, i8* %7801, i32 1, !dbg !407
  store i8* %7829, i8** %7794, align 8, !dbg !408
  %7830 = load i32, i32* %7627, align 4, !dbg !409
  %7831 = trunc i32 %7830 to i8, !dbg !410
  %7832 = getelementptr i8, i8* %4, i8 %7831, !dbg !411
  %7833 = load i8, i8* %7832, align 1, !dbg !412
  %7834 = zext i8 %7833 to i64, !dbg !413
  %7835 = load i64, i64* %7788, align 4, !dbg !414
  %7836 = add i64 %7835, %7834, !dbg !415
  store i64 %7836, i64* %7788, align 4, !dbg !416
  br label %7805, !dbg !417

7837:                                             ; preds = %7805
  %7838 = load i64, i64* %7788, align 4, !dbg !418
  %7839 = load i32, i32* %7642, align 4, !dbg !419
  %7840 = zext i32 %7839 to i64, !dbg !420
  %7841 = icmp uge i64 %7815, %7816, !dbg !421
  %7842 = icmp ugt i64 %7815, %7816, !dbg !422
  %7843 = icmp ne i64 %7838, %7840, !dbg !423
  %7844 = icmp ugt i64 %7838, %7840, !dbg !424
  %7845 = or i1 %7842, %7843, !dbg !425
  %7846 = and i1 %7841, %7845, !dbg !426
  %7847 = or i1 %7846, %7844, !dbg !427
  br i1 %7847, label %7848, label %7852, !dbg !428

7848:                                             ; preds = %7837
  %7849 = load i32, i32* %7634, align 4, !dbg !429
  %7850 = icmp eq i32 %7849, 0, !dbg !430
  br i1 %7850, label %7851, label %7852, !dbg !431

7851:                                             ; preds = %7848
  store i32 0, i32* %7785, align 4, !dbg !432
  store i8* %7797, i8** %7794, align 8, !dbg !433
  br label %7852, !dbg !434

7852:                                             ; preds = %7851, %7848, %7837
  %7853 = load i32, i32* %7785, align 4, !dbg !435
  %7854 = trunc i32 %7853 to i16, !dbg !436
  store i16 %7854, i16* %7645, align 2, !dbg !437
  %7855 = load i8*, i8** %7794, align 8, !dbg !438
  %7856 = ptrtoint i8* %7855 to i64, !dbg !439
  %7857 = load i8*, i8** %7626, align 8, !dbg !440
  %7858 = ptrtoint i8* %7857 to i64, !dbg !441
  %7859 = sub i64 %7856, %7858, !dbg !442
  %7860 = trunc i64 %7859 to i32, !dbg !443
  store i32 %7860, i32* %7641, align 4, !dbg !444
  br label %7862, !dbg !445

7861:                                             ; preds = %7776
  store i32 0, i32* %7627, align 4, !dbg !446
  br label %7862, !dbg !447

7862:                                             ; preds = %7852, %7861
  %7863 = load i16, i16* %7645, align 2, !dbg !448
  %7864 = icmp sle i16 %7863, 0, !dbg !449
  br i1 %7864, label %7865, label %7696, !dbg !450

7865:                                             ; preds = %7862
  %7866 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7630, i32 0, i32 1, !dbg !451
  %7867 = load i16, i16* %7866, align 2, !dbg !451
  %7868 = and i16 %7867, 9216, !dbg !451
  %7869 = icmp ne i16 %7868, 0, !dbg !451
  br i1 %7869, label %7870, label %7871, !dbg !451

7870:                                             ; preds = %7865
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7630), !dbg !451
  br label %7872, !dbg !451

7871:                                             ; preds = %7865
  store i16 1, i16* %7866, align 2, !dbg !451
  br label %7872, !dbg !451

7872:                                             ; preds = %7870, %7871, %7742, %7722, %7761, %7771, %7691, %7692
  call void @llvm.stackrestore(i8* %7619), !dbg !452
  br label %7873, !dbg !74

7873:                                             ; preds = %18, %7872
  %7874 = call i8* @llvm.stacksave(), !dbg !162
  %7875 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !165
  %7876 = load i8, i8* %7875, align 1, !dbg !166
  %7877 = alloca i32, align 4, !dbg !167
  store i32 9, i32* %7877, align 4, !dbg !168
  %7878 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !169
  %7879 = alloca %struct.VdbeCursor*, align 8, !dbg !170
  %7880 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7878, align 8, !dbg !171
  store %struct.VdbeCursor* %7880, %struct.VdbeCursor** %7879, align 8, !dbg !172
  %7881 = alloca i8*, align 8, !dbg !173
  %7882 = alloca i32, align 4, !dbg !174
  %7883 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7879, i32* %7877), !dbg !175
  %7884 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7879, align 8, !dbg !176
  %7885 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !177
  %7886 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 16, !dbg !178
  %7887 = load i16, i16* %7886, align 2, !dbg !179
  %7888 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 19, !dbg !180
  %7889 = load i32*, i32** %7888, align 8, !dbg !181
  %7890 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 0, !dbg !182
  %7891 = load i8, i8* %7890, align 1, !dbg !183
  %7892 = icmp ne i8 %7891, 3, !dbg !184
  %7893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 2, !dbg !185
  %7894 = load i8, i8* %7893, align 1, !dbg !186
  %7895 = icmp ne i8 %7894, 0, !dbg !187
  %7896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 14, !dbg !188
  %7897 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 21, !dbg !189
  %7898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 22, !dbg !190
  %7899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 20, !dbg !191
  %7900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 17, !dbg !192
  %7901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 9, !dbg !193
  %7902 = load i32, i32* %7901, align 4, !dbg !194
  %7903 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !195
  %7904 = load i32, i32* %7903, align 4, !dbg !196
  %7905 = icmp ne i32 %7902, %7904, !dbg !197
  br i1 %7905, label %7906, label %7948, !dbg !198

7906:                                             ; preds = %7873
  br i1 %7895, label %7928, label %7923, !dbg !199

7907:                                             ; preds = %7923, %7930
  %7908 = load i32, i32* %7903, align 4, !dbg !200
  store i32 %7908, i32* %7901, align 4, !dbg !201
  %7909 = load i8*, i8** %7899, align 8, !dbg !202
  %7910 = load i8, i8* %7909, align 1, !dbg !203
  %7911 = icmp sgt i8 %7910, -1, !dbg !206
  br i1 %7911, label %7912, label %7914, !dbg !207

7912:                                             ; preds = %7907
  %7913 = zext i8 %7910 to i32, !dbg !208
  store i32 %7913, i32* %7889, align 4, !dbg !209
  store i32 1, i32* %7896, align 4, !dbg !210
  br label %7917, !dbg !211

7914:                                             ; preds = %7907
  %7915 = call i8 @sqlite3GetVarint32(i8* %7909, i32* %7889), !dbg !212
  %7916 = zext i8 %7915 to i32, !dbg !213
  store i32 %7916, i32* %7896, align 4, !dbg !214
  br label %7917, !dbg !215

7917:                                             ; preds = %7914, %7912
  store i16 0, i16* %7900, align 2, !dbg !216
  %7918 = load i32, i32* %7898, align 4, !dbg !217
  %7919 = load i32, i32* %7889, align 4, !dbg !218
  %7920 = icmp ult i32 %7918, %7919, !dbg !219
  br i1 %7920, label %7922, label %7921, !dbg !220

7921:                                             ; preds = %7917
  store i8* %7909, i8** %7881, align 8, !dbg !221
  br label %8041, !dbg !222

7922:                                             ; preds = %7917
  store i8* null, i8** %7899, align 8, !dbg !223
  store i32 0, i32* %7898, align 4, !dbg !224
  br label %7948, !dbg !225

7923:                                             ; preds = %7906
  %7924 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 12, i32 0, !dbg !226
  %7925 = load %struct.BtCursor*, %struct.BtCursor** %7924, align 8, !dbg !227
  %7926 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7925), !dbg !228
  store i32 %7926, i32* %7897, align 4, !dbg !229
  %7927 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7925, i32* %7898), !dbg !230
  store i8* %7927, i8** %7899, align 8, !dbg !231
  br label %7907, !dbg !232

7928:                                             ; preds = %7906
  %7929 = icmp eq i8 %7891, 3, !dbg !233
  br i1 %7929, label %7930, label %7941, !dbg !234

7930:                                             ; preds = %7928
  %7931 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 10, !dbg !235
  %7932 = load i32, i32* %7931, align 4, !dbg !236
  %7933 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7932, !dbg !237
  %7934 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7933, i32 0, i32 1, !dbg !238
  %7935 = load i16, i16* %7934, align 2, !dbg !239
  %7936 = and i16 %7935, 16, !dbg !240
  %7937 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7933, i32 0, i32 4, !dbg !241
  %7938 = load i32, i32* %7937, align 4, !dbg !242
  store i32 %7938, i32* %7897, align 4, !dbg !243
  store i32 %7938, i32* %7898, align 4, !dbg !244
  %7939 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7933, i32 0, i32 5, !dbg !245
  %7940 = load i8*, i8** %7939, align 8, !dbg !246
  store i8* %7940, i8** %7899, align 8, !dbg !247
  br label %7907, !dbg !248

7941:                                             ; preds = %7928
  %7942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 1, !dbg !249
  %7943 = load i16, i16* %7942, align 2, !dbg !249
  %7944 = and i16 %7943, 9216, !dbg !249
  %7945 = icmp ne i16 %7944, 0, !dbg !249
  br i1 %7945, label %7946, label %7947, !dbg !249

7946:                                             ; preds = %7941
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7885), !dbg !249
  br label %8129, !dbg !249

7947:                                             ; preds = %7941
  store i16 1, i16* %7942, align 2, !dbg !249
  br label %8129, !dbg !249

7948:                                             ; preds = %7922, %7873
  %7949 = load i16, i16* %7900, align 2, !dbg !250
  %7950 = icmp ule i16 %7949, 1, !dbg !251
  br i1 %7950, label %8033, label %8030, !dbg !252

7951:                                             ; preds = %8030, %8119
  %7952 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 1, !dbg !253
  %7953 = load i16, i16* %7952, align 2, !dbg !254
  %7954 = and i16 9216, %7953, !dbg !255
  %7955 = icmp eq i16 0, %7954, !dbg !256
  br i1 %7955, label %7956, label %7960, !dbg !257

7956:                                             ; preds = %7951
  %7957 = icmp ne i16 %7954, 0, !dbg !258
  br i1 %7957, label %7958, label %7959, !dbg !258

7958:                                             ; preds = %7956
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7885), !dbg !258
  br label %7960, !dbg !258

7959:                                             ; preds = %7956
  store i16 1, i16* %7952, align 2, !dbg !258
  br label %7960, !dbg !258

7960:                                             ; preds = %7958, %7959, %7951
  %7961 = load i32, i32* %7882, align 4, !dbg !259
  %7962 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 23, i32 1, !dbg !260
  %7963 = load i32, i32* %7962, align 4, !dbg !261
  %7964 = load i32, i32* %7898, align 4, !dbg !262
  %7965 = getelementptr i32, i32* %7889, i32 2, !dbg !263
  %7966 = load i32, i32* %7965, align 4, !dbg !264
  %7967 = icmp sge i32 %7964, %7966, !dbg !265
  br i1 %7967, label %7968, label %8008, !dbg !266

7968:                                             ; preds = %7960
  %7969 = load i8*, i8** %7899, align 8, !dbg !267
  %7970 = ptrtoint i8* %7969 to i64, !dbg !268
  %7971 = getelementptr i32, i32* %7889, i32 1, !dbg !509
  %7972 = load i32, i32* %7971, align 4, !dbg !269
  %7973 = zext i32 %7972 to i64, !dbg !270
  %7974 = add i64 %7970, %7973, !dbg !271
  %7975 = inttoptr i64 %7974 to i8*, !dbg !272
  store i8* %7975, i8** %7881, align 8, !dbg !273
  %7976 = load i32, i32* %7882, align 4, !dbg !274
  %7977 = icmp ult i32 %7976, 12, !dbg !275
  br i1 %7977, label %7978, label %7980, !dbg !276

7978:                                             ; preds = %7968
  %7979 = call i32 @sqlite3VdbeSerialGet(i8* %7975, i32 %7976, %struct.sqlite3_value* %7885), !dbg !277
  br label %8129, !dbg !278

7980:                                             ; preds = %7968
  %7981 = alloca i16, i32 2, align 2, !dbg !279
  store i16 16, i16* %7981, align 2, !dbg !280
  %7982 = getelementptr i16, i16* %7981, i32 1, !dbg !281
  store i16 514, i16* %7982, align 2, !dbg !282
  %7983 = load i32, i32* %7882, align 4, !dbg !283
  %7984 = sub i32 %7983, 12, !dbg !284
  %7985 = lshr i32 %7984, 1, !dbg !285
  %7986 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 4, !dbg !286
  store i32 %7985, i32* %7986, align 4, !dbg !287
  %7987 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 2, !dbg !288
  store i8 %7876, i8* %7987, align 1, !dbg !289
  %7988 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 5, !dbg !290
  %7989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 7, !dbg !291
  %7990 = load i32, i32* %7989, align 4, !dbg !292
  %7991 = add i32 %7985, 2, !dbg !293
  %7992 = icmp slt i32 %7990, %7991, !dbg !294
  br i1 %7992, label %7993, label %7995, !dbg !295

7993:                                             ; preds = %7980
  store i16 1, i16* %7952, align 2, !dbg !296
  %7994 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7885, i32 %7991, i32 0), !dbg !297
  br label %7998, !dbg !298

7995:                                             ; preds = %7980
  %7996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 6, !dbg !299
  %7997 = load i8*, i8** %7996, align 8, !dbg !300
  store i8* %7997, i8** %7988, align 8, !dbg !301
  br label %7998, !dbg !302

7998:                                             ; preds = %7995, %7993
  %7999 = zext i32 %7985 to i64, !dbg !303
  %8000 = load i8*, i8** %7988, align 8, !dbg !304
  %8001 = load i8*, i8** %7881, align 8, !dbg !305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8000, i8* %8001, i64 %7999, i1 false), !dbg !306
  %8002 = getelementptr i8, i8* %8000, i32 %7985, !dbg !307
  store i8 0, i8* %8002, align 1, !dbg !308
  %8003 = add i32 %7985, 1, !dbg !309
  %8004 = getelementptr i8, i8* %8000, i32 %8003, !dbg !310
  store i8 0, i8* %8004, align 1, !dbg !311
  %8005 = and i32 %7983, 1, !dbg !312
  %8006 = getelementptr i16, i16* %7981, i32 %8005, !dbg !313
  %8007 = load i16, i16* %8006, align 2, !dbg !314
  store i16 %8007, i16* %7952, align 2, !dbg !315
  br label %8129, !dbg !316

8008:                                             ; preds = %7960
  %8009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 2, !dbg !317
  store i8 %7876, i8* %8009, align 1, !dbg !318
  %8010 = load i32, i32* %7882, align 4, !dbg !319
  %8011 = and i32 %8010, 1, !dbg !320
  %8012 = icmp eq i32 %8011, 0, !dbg !321
  %8013 = icmp sge i32 %8010, 12, !dbg !322
  %8014 = and i1 %8013, %8012, !dbg !323
  %8015 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8010), !dbg !324
  %8016 = icmp eq i32 %8015, 0, !dbg !325
  br i1 %8016, label %8028, label %8017, !dbg !326

8017:                                             ; preds = %8008
  %8018 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 12, i32 0, !dbg !327
  %8019 = load %struct.BtCursor*, %struct.BtCursor** %8018, align 8, !dbg !328
  %8020 = getelementptr i32, i32* %7889, i32 1, !dbg !510
  %8021 = load i32, i32* %8020, align 4, !dbg !329
  %8022 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8019, i32 %8021, i32 %8015, %struct.sqlite3_value* %7885), !dbg !330
  %8023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 5, !dbg !331
  %8024 = load i8*, i8** %8023, align 8, !dbg !332
  %8025 = call i32 @sqlite3VdbeSerialGet(i8* %8024, i32 %8010, %struct.sqlite3_value* %7885), !dbg !333
  %8026 = load i16, i16* %7952, align 2, !dbg !334
  %8027 = and i16 %8026, -4097, !dbg !335
  store i16 %8027, i16* %7952, align 2, !dbg !336
  br label %8129, !dbg !337

8028:                                             ; preds = %8008
  %8029 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8010, %struct.sqlite3_value* %7885), !dbg !338
  br label %8129, !dbg !339

8030:                                             ; preds = %7948
  %8031 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 23, i32 1, !dbg !340
  %8032 = load i32, i32* %8031, align 4, !dbg !341
  store i32 %8032, i32* %7882, align 4, !dbg !342
  br label %7951, !dbg !343

8033:                                             ; preds = %7948
  %8034 = load i32, i32* %7896, align 4, !dbg !344
  %8035 = load i32, i32* %7889, align 4, !dbg !345
  %8036 = icmp ult i32 %8034, %8035, !dbg !346
  br i1 %8036, label %8037, label %8118, !dbg !347

8037:                                             ; preds = %8033
  %8038 = load i8*, i8** %7899, align 8, !dbg !348
  %8039 = icmp eq i8* %8038, null, !dbg !349
  br i1 %8039, label %8041, label %8040, !dbg !350

8040:                                             ; preds = %8037
  store i8* %8038, i8** %7881, align 8, !dbg !351
  br label %8041, !dbg !352

8041:                                             ; preds = %8040, %8037, %7921
  %8042 = alloca i32, align 4, !dbg !353
  %8043 = load i16, i16* %7900, align 2, !dbg !354
  %8044 = zext i16 %8043 to i32, !dbg !355
  store i32 %8044, i32* %8042, align 4, !dbg !356
  %8045 = alloca i64, align 8, !dbg !357
  %8046 = getelementptr i32, i32* %7889, i32 %8044, !dbg !358
  %8047 = load i32, i32* %8046, align 4, !dbg !359
  %8048 = zext i32 %8047 to i64, !dbg !360
  store i64 %8048, i64* %8045, align 4, !dbg !361
  %8049 = load i8*, i8** %7881, align 8, !dbg !362
  %8050 = load i32, i32* %7896, align 4, !dbg !363
  %8051 = alloca i8*, align 8, !dbg !364
  %8052 = getelementptr i8, i8* %8049, i32 %8050, !dbg !365
  store i8* %8052, i8** %8051, align 8, !dbg !366
  %8053 = load i32, i32* %7889, align 4, !dbg !367
  %8054 = getelementptr i8, i8* %8049, i32 %8053, !dbg !368
  br label %8055, !dbg !369

8055:                                             ; preds = %8062, %8041
  %8056 = load i32, i32* %8042, align 4, !dbg !370
  %8057 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7884, i32 0, i32 23, i32 %8056, !dbg !371
  %8058 = load i8*, i8** %8051, align 8, !dbg !372
  %8059 = load i8, i8* %8058, align 1, !dbg !373
  %8060 = zext i8 %8059 to i32, !dbg !374
  store i32 %8060, i32* %7882, align 4, !dbg !375
  store i32 %8060, i32* %8057, align 4, !dbg !376
  %8061 = icmp sgt i8 %8059, -1, !dbg !377
  br i1 %8061, label %8085, label %8076, !dbg !378

8062:                                             ; preds = %8076, %8085
  %8063 = load i32, i32* %8042, align 4, !dbg !379
  %8064 = add i32 %8063, 1, !dbg !380
  store i32 %8064, i32* %8042, align 4, !dbg !381
  %8065 = load i64, i64* %8045, align 4, !dbg !382
  %8066 = and i64 4294967295, %8065, !dbg !383
  %8067 = trunc i64 %8066 to i32, !dbg !384
  %8068 = getelementptr i32, i32* %7889, i32 %8064, !dbg !385
  store i32 %8067, i32* %8068, align 4, !dbg !386
  %8069 = load i32, i32* %8042, align 4, !dbg !387
  %8070 = icmp sle i32 %8069, 1, !dbg !388
  %8071 = load i8*, i8** %8051, align 8, !dbg !389
  %8072 = ptrtoint i8* %8071 to i64, !dbg !390
  %8073 = ptrtoint i8* %8054 to i64, !dbg !391
  %8074 = icmp ult i64 %8072, %8073, !dbg !392
  %8075 = and i1 %8070, %8074, !dbg !393
  br i1 %8075, label %8055, label %8094, !dbg !394

8076:                                             ; preds = %8055
  %8077 = load i8*, i8** %8051, align 8, !dbg !395
  %8078 = call i8 @sqlite3GetVarint32(i8* %8077, i32* %7882), !dbg !396
  %8079 = getelementptr i8, i8* %8077, i8 %8078, !dbg !397
  store i8* %8079, i8** %8051, align 8, !dbg !398
  %8080 = load i32, i32* %7882, align 4, !dbg !399
  store i32 %8080, i32* %8057, align 4, !dbg !400
  %8081 = load i64, i64* %8045, align 4, !dbg !401
  %8082 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8080), !dbg !402
  %8083 = zext i32 %8082 to i64, !dbg !403
  %8084 = add i64 %8081, %8083, !dbg !404
  store i64 %8084, i64* %8045, align 4, !dbg !405
  br label %8062, !dbg !406

8085:                                             ; preds = %8055
  %8086 = getelementptr i8, i8* %8058, i32 1, !dbg !407
  store i8* %8086, i8** %8051, align 8, !dbg !408
  %8087 = load i32, i32* %7882, align 4, !dbg !409
  %8088 = trunc i32 %8087 to i8, !dbg !410
  %8089 = getelementptr i8, i8* %4, i8 %8088, !dbg !411
  %8090 = load i8, i8* %8089, align 1, !dbg !412
  %8091 = zext i8 %8090 to i64, !dbg !413
  %8092 = load i64, i64* %8045, align 4, !dbg !414
  %8093 = add i64 %8092, %8091, !dbg !415
  store i64 %8093, i64* %8045, align 4, !dbg !416
  br label %8062, !dbg !417

8094:                                             ; preds = %8062
  %8095 = load i64, i64* %8045, align 4, !dbg !418
  %8096 = load i32, i32* %7897, align 4, !dbg !419
  %8097 = zext i32 %8096 to i64, !dbg !420
  %8098 = icmp uge i64 %8072, %8073, !dbg !421
  %8099 = icmp ugt i64 %8072, %8073, !dbg !422
  %8100 = icmp ne i64 %8095, %8097, !dbg !423
  %8101 = icmp ugt i64 %8095, %8097, !dbg !424
  %8102 = or i1 %8099, %8100, !dbg !425
  %8103 = and i1 %8098, %8102, !dbg !426
  %8104 = or i1 %8103, %8101, !dbg !427
  br i1 %8104, label %8105, label %8109, !dbg !428

8105:                                             ; preds = %8094
  %8106 = load i32, i32* %7889, align 4, !dbg !429
  %8107 = icmp eq i32 %8106, 0, !dbg !430
  br i1 %8107, label %8108, label %8109, !dbg !431

8108:                                             ; preds = %8105
  store i32 0, i32* %8042, align 4, !dbg !432
  store i8* %8054, i8** %8051, align 8, !dbg !433
  br label %8109, !dbg !434

8109:                                             ; preds = %8108, %8105, %8094
  %8110 = load i32, i32* %8042, align 4, !dbg !435
  %8111 = trunc i32 %8110 to i16, !dbg !436
  store i16 %8111, i16* %7900, align 2, !dbg !437
  %8112 = load i8*, i8** %8051, align 8, !dbg !438
  %8113 = ptrtoint i8* %8112 to i64, !dbg !439
  %8114 = load i8*, i8** %7881, align 8, !dbg !440
  %8115 = ptrtoint i8* %8114 to i64, !dbg !441
  %8116 = sub i64 %8113, %8115, !dbg !442
  %8117 = trunc i64 %8116 to i32, !dbg !443
  store i32 %8117, i32* %7896, align 4, !dbg !444
  br label %8119, !dbg !445

8118:                                             ; preds = %8033
  store i32 0, i32* %7882, align 4, !dbg !446
  br label %8119, !dbg !447

8119:                                             ; preds = %8109, %8118
  %8120 = load i16, i16* %7900, align 2, !dbg !448
  %8121 = icmp sle i16 %8120, 1, !dbg !449
  br i1 %8121, label %8122, label %7951, !dbg !450

8122:                                             ; preds = %8119
  %8123 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7885, i32 0, i32 1, !dbg !451
  %8124 = load i16, i16* %8123, align 2, !dbg !451
  %8125 = and i16 %8124, 9216, !dbg !451
  %8126 = icmp ne i16 %8125, 0, !dbg !451
  br i1 %8126, label %8127, label %8128, !dbg !451

8127:                                             ; preds = %8122
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7885), !dbg !451
  br label %8129, !dbg !451

8128:                                             ; preds = %8122
  store i16 1, i16* %8123, align 2, !dbg !451
  br label %8129, !dbg !451

8129:                                             ; preds = %8127, %8128, %7998, %7978, %8017, %8028, %7946, %7947
  call void @llvm.stackrestore(i8* %7874), !dbg !452
  br label %8130, !dbg !74

8130:                                             ; preds = %18, %8129
  %8131 = call i8* @llvm.stacksave(), !dbg !1299
  %8132 = call i32 @sqlite3VdbeCheckFk(%struct.Vdbe* %0, i32 0), !dbg !1302
  %8133 = call i32 @sqlite3VdbeCloseStatement(%struct.Vdbe* %0, i32 1), !dbg !1303
  %8134 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !1304
  %8135 = load i32, i32* %8134, align 4, !dbg !1305
  %8136 = add i32 %8135, 2, !dbg !1306
  %8137 = or i32 %8136, 1, !dbg !1307
  store i32 %8137, i32* %8134, align 4, !dbg !1308
  %8138 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1309
  %8139 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 27, !dbg !1310
  store %struct.sqlite3_value* %8138, %struct.sqlite3_value** %8139, align 8, !dbg !1311
  %8140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8138, i32 1, !dbg !1312
  %8141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8140, i32 0, i32 1, !dbg !1313
  %8142 = load i16, i16* %8141, align 2, !dbg !1314
  %8143 = and i16 %8142, 4096, !dbg !1315
  %8144 = icmp ne i16 %8143, 0, !dbg !1316
  br i1 %8144, label %8145, label %8147, !dbg !1317

8145:                                             ; preds = %8130
  %8146 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %8140), !dbg !1318
  br label %8147, !dbg !1319

8147:                                             ; preds = %8145, %8130
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %8140), !dbg !1320
  %8148 = load i16, i16* %8141, align 2, !dbg !1314
  %8149 = and i16 %8148, 4096, !dbg !1315
  %8150 = icmp ne i16 %8149, 0, !dbg !1316
  br i1 %8150, label %8151, label %8153, !dbg !1317

8151:                                             ; preds = %8147
  %8152 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %8140), !dbg !1318
  br label %8153, !dbg !1319

8153:                                             ; preds = %8151, %8147
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %8140), !dbg !1320
  %8154 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1321
  %8155 = getelementptr %struct.sqlite3, %struct.sqlite3* %8154, i32 0, i32 19, !dbg !1322
  %8156 = load i8, i8* %8155, align 1, !dbg !1323
  store i32 95, i32* %15, align 4, !dbg !1324
  call void @llvm.stackrestore(i8* %8131), !dbg !1325
  ret i32 100, !dbg !1326

8157:                                             ; preds = %18
  %8158 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1251
  %8159 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8158, align 8, !dbg !1254
  %8160 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %8159), !dbg !1255
  %8161 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8159, i32 0, i32 9, !dbg !1256
  store i32 0, i32* %8161, align 4, !dbg !1257
  %8162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8159, i32 0, i32 2, !dbg !1258
  %8163 = icmp eq i32 %8160, 0, !dbg !1259
  br i1 %8163, label %8164, label %8165, !dbg !1260

8164:                                             ; preds = %8157
  store i8 0, i8* %8162, align 1, !dbg !1261
  br label %7609, !dbg !1262

8165:                                             ; preds = %8157
  store i8 1, i8* %8162, align 1, !dbg !1263
  br label %8166, !dbg !1264

8166:                                             ; preds = %18, %8165, %7603
  %8167 = call i32 @sqlite3VdbeHalt(%struct.Vdbe* %0), !dbg !1327
  ret i32 101, !dbg !1330

8168:                                             ; preds = %18, %19
  %8169 = call i8* @llvm.stacksave(), !dbg !1331
  %8170 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1334
  %8171 = load %struct.Db*, %struct.Db** %8170, align 8, !dbg !1335
  %8172 = getelementptr %struct.Db, %struct.Db* %8171, i32 0, i32 1, !dbg !1336
  %8173 = load %struct.Btree*, %struct.Btree** %8172, align 8, !dbg !1337
  %8174 = ptrtoint %struct.Btree* %8173 to i64, !dbg !1338
  %8175 = alloca i32, align 8, !dbg !1339
  %8176 = alloca i32, align 8, !dbg !1340
  %8177 = icmp ne i64 %8174, 0, !dbg !1341
  br i1 %8177, label %8178, label %8180, !dbg !1342

8178:                                             ; preds = %8168
  %8179 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %8173, i32 0, i32* %8175), !dbg !1343
  store i32 %8179, i32* %8176, align 4, !dbg !1344
  br label %8180, !dbg !1345

8180:                                             ; preds = %8178, %8168
  %8181 = load i32, i32* %8175, align 4, !dbg !1346
  %8182 = icmp ne i32 %8181, 8, !dbg !1347
  %8183 = getelementptr %struct.Db, %struct.Db* %8171, i32 0, i32 4, !dbg !1348
  %8184 = load %struct.Schema*, %struct.Schema** %8183, align 8, !dbg !1349
  %8185 = getelementptr %struct.Schema, %struct.Schema* %8184, i32 0, i32 1, !dbg !1350
  %8186 = load i32, i32* %8185, align 4, !dbg !1351
  %8187 = icmp ne i32 %8186, 0, !dbg !1352
  %8188 = or i1 %8187, %8182, !dbg !1353
  %8189 = load i32, i32* %8176, align 4, !dbg !1354
  call void @llvm.stackrestore(i8* %8169), !dbg !1355
  br label %8190, !dbg !74

8190:                                             ; preds = %18, %8180
  %8191 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 98, !dbg !531
  %8192 = call i8* @llvm.stacksave(), !dbg !534
  %8193 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8191, i32 0, i32 4, !dbg !79
  %8194 = load i32, i32* %8193, align 4, !dbg !82
  %8195 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8194, !dbg !83
  %8196 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8195, i32 0, i32 1, !dbg !534
  %8197 = load i16, i16* %8196, align 2, !dbg !534
  %8198 = and i16 %8197, 9216, !dbg !534
  %8199 = icmp ne i16 %8198, 0, !dbg !534
  %8200 = alloca %struct.sqlite3_value*, align 8, !dbg !534
  br i1 %8199, label %8201, label %8203, !dbg !534

8201:                                             ; preds = %8190
  %8202 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8195), !dbg !534
  store %struct.sqlite3_value* %8202, %struct.sqlite3_value** %8200, align 8, !dbg !534
  br label %8204, !dbg !534

8203:                                             ; preds = %8190
  store i16 4, i16* %8196, align 2, !dbg !534
  store %struct.sqlite3_value* %8195, %struct.sqlite3_value** %8200, align 8, !dbg !534
  br label %8204, !dbg !534

8204:                                             ; preds = %8203, %8201
  %8205 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8200, align 8, !dbg !534
  call void @llvm.stackrestore(i8* %8192), !dbg !534
  %8206 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8205, i32 0, i32 1, !dbg !535
  %8207 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8205, i32 0, i32 2, !dbg !536
  %8208 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8205, i32 0, i32 4, !dbg !537
  %8209 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8205, i32 0, i32 5, !dbg !538
  store i16 2562, i16* %8206, align 2, !dbg !539
  %8210 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8191, i32 0, i32 6, !dbg !540
  %8211 = bitcast %union.p4union* %8210 to i8**, !dbg !541
  %8212 = load i8*, i8** %8211, align 8, !dbg !542
  store i8* %8212, i8** %8209, align 8, !dbg !543
  store i32 14, i32* %8208, align 4, !dbg !544
  store i8 1, i8* %8207, align 1, !dbg !545
  br label %8213, !dbg !74

8213:                                             ; preds = %18, %8204
  %8214 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 99, !dbg !75
  %8215 = call i8* @llvm.stacksave(), !dbg !78
  %8216 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8214, i32 0, i32 4, !dbg !79
  %8217 = load i32, i32* %8216, align 4, !dbg !82
  %8218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8217, !dbg !83
  %8219 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8218, i32 0, i32 1, !dbg !78
  %8220 = load i16, i16* %8219, align 2, !dbg !78
  %8221 = and i16 %8220, 9216, !dbg !78
  %8222 = icmp ne i16 %8221, 0, !dbg !78
  %8223 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %8222, label %8224, label %8226, !dbg !78

8224:                                             ; preds = %8213
  %8225 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8218), !dbg !78
  store %struct.sqlite3_value* %8225, %struct.sqlite3_value** %8223, align 8, !dbg !78
  br label %8227, !dbg !78

8226:                                             ; preds = %8213
  store i16 4, i16* %8219, align 2, !dbg !78
  store %struct.sqlite3_value* %8218, %struct.sqlite3_value** %8223, align 8, !dbg !78
  br label %8227, !dbg !78

8227:                                             ; preds = %8226, %8224
  %8228 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8223, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %8215), !dbg !78
  %8229 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8228, i32 0, i32 0, i32 0, !dbg !84
  %8230 = bitcast double* %8229 to i64*, !dbg !85
  store i64 1, i64* %8230, align 4, !dbg !86
  br label %25, !dbg !74
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status64(i32, i64* nocapture, i64* nocapture, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_enter(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_leave(%struct.sqlite3_mutex*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status(i32, i32* nocapture, i32* nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @countLookasideSlots(%struct.LookasideSlot* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_status(%struct.sqlite3*, i32, i32* nocapture, i32*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_msize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeClearObject(%struct.sqlite3*, %struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFree(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getDigits(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
declare i32 @parseTimezone(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseHhMmSs(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @datetimeError(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeJD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @parseYyyyMmDd(i8* nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDateTimeToCurrent(%struct.sqlite3_context* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @setRawDateNumber(%struct.DateTime* nocapture, double) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @parseDateOrTime(%struct.sqlite3_context* nocapture, i8* readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @validJulianDay(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeHMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD_HMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @clearYMD_HMS_TZ(%struct.DateTime* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @osLocaltime(i64*, %struct.tm* nocapture) local_unnamed_addr #3

declare %struct.tm* @localtime(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i64 @localtimeOffset(%struct.DateTime* nocapture readonly, %struct.sqlite3_context* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseModifier(%struct.sqlite3_context* nocapture, i8* readonly, i32, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stricmp(i8* readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_strnicmp(i8* readonly, i8* readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDate(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_type(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_value_double(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @juliandayFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_double(%struct.sqlite3_context* nocapture readonly, double) #3

; Function Attrs: nounwind ssp uwtable
declare void @datetimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_snprintf(i32, i8* returned, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @timeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @strftimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_context_db_handle(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_toobig(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_nomem(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MallocSize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cdateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimestampFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_vfs* @sqlite3_vfs_find(i8* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_initialize() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vfsUnlink(%struct.sqlite3_vfs* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_register(%struct.sqlite3_vfs*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_unregister(%struct.sqlite3_vfs* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_mutex_alloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_free(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_mutex_try(%struct.sqlite3_mutex*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexEnd() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_mutex* @noopMutexAlloc(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexFree(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexEnter(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexTry(%struct.sqlite3_mutex* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexLeave(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexEnd() #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @pthreadMutexAlloc(i32) #3

declare i32 @pthread_mutexattr_init(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @pthread_mutexattr_settype(%struct._opaque_pthread_mutexattr_t*, i32) local_unnamed_addr #12

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @"\01_pthread_mutexattr_destroy"(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexFree(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexEnter(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @pthreadMutexTry(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_trylock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexLeave(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_release_memory(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_memory_alarm(void (i8*, i64, i32)* nocapture readnone, i8* nocapture readnone, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_soft_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_used() #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_soft_heap_limit(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_hard_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_highwater(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @mallocWithAlarm(i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc64(i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isLookaside(%struct.sqlite3* nocapture readonly, i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @lookasideMallocSize(%struct.sqlite3* nocapture readonly, i8* readnone) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @measureAllocationSize(%struct.sqlite3* readonly, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3Realloc(i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc64(i8*, i64) #3

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbMallocRawFinish(%struct.sqlite3*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3OomFault(%struct.sqlite3*) unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbReallocFinish(%struct.sqlite3*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @apiOomError(%struct.sqlite3*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare signext i8 @et_getdigit(x86_fp80* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @setStrAccumError(%struct.sqlite3_str* nocapture, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_reset(%struct.sqlite3_str* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @getIntArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_value_int64(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare double @getDoubleArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @getTextArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @printfTempBuf(%struct.sqlite3_str*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRaw(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_vappendf(%struct.sqlite3_str*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_append(%struct.sqlite3_str*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendchar(%struct.sqlite3_str*, i32, i8 signext) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendall(%struct.sqlite3_str*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3StrAccumEnlarge(%struct.sqlite3_str*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @enlargeAndAppend(%struct.sqlite3_str*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @strAccumFinishRealloc(%struct.sqlite3_str* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_str_finish(%struct.sqlite3_str*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_errcode(%struct.sqlite3_str* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_length(%struct.sqlite3_str* readonly) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @sqlite3_str_value(%struct.sqlite3_str* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_str* @sqlite3_str_new(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vmprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_mprintf(i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vsnprintf(i32, i8* returned, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @renderLogMsg(i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_log(i32, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendf(%struct.sqlite3_str*, i8*, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @compare2pow63(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable writeonly
declare i32 @putVarint64(i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
declare void @logBadConnection(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @strHash(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @insertElement(%struct.Hash* nocapture, %struct._ht*, %struct.HashElem*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @rehash(%struct.Hash* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.HashElem* @findElementWithHash(%struct.Hash* nocapture readonly, i8* nocapture readonly, i32*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @removeElementGivenHash(%struct.Hash* nocapture, %struct.HashElem*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @posixOpen(i8*, i32, i32) #3

declare i32 @"\01_open"(i8*, i32, ...) local_unnamed_addr #12

declare i32 @"\01_close"(i32) #12

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) #9

declare i8* @getcwd(i8*, i64) #12

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #12

declare i32 @"\01_fstat$INODE64"(i32, %struct.stat*) #12

declare i32 @ftruncate(i32, i64) #12

declare i32 @"\01_fcntl"(i32, i32, ...) #12

declare i64 @"\01_read"(i32, i8*, i64) #12

declare i64 @"\01_pread"(i32, i8*, i64, i64) #12

declare i64 @"\01_write"(i32, i8*, i64) #12

declare i64 @"\01_pwrite"(i32, i8*, i64, i64) #12

declare i32 @"\01_fchmod"(i32, i16 zeroext) #12

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) #9

; Function Attrs: nounwind ssp uwtable
declare i32 @openDirectory(i8*, i32* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i16 zeroext) #9

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) #9

declare i32 @fchown(i32, i32, i32) #12

declare i32 @geteuid() #12

declare i8* @"\01_mmap"(i8*, i64, i32, i32, i32, i64) #12

declare i32 @"\01_munmap"(i8*, i64) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetpagesize() #3

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #9

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @robustFchown(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @unixSetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly, void ()*) #8

; Function Attrs: nounwind readonly ssp uwtable
declare void ()* @unixGetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @unixNextSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_open(i8*, i32, i16 zeroext) local_unnamed_addr #3

declare i32* @__error() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixEnterMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixLeaveMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqliteErrorFromPosixError(i32, i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLogErrorAtLine(i32 returned, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @robust_close(%struct.unixFile* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @storeLastErrno(%struct.unixFile* nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @closePendingFds(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseInodeInfo(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findInodeInfo(%struct.unixFile* nocapture, %struct.unixInodeInfo** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @fileHasMoved(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @verifyDbFile(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileLock(%struct.unixFile* nocapture readonly, %struct.flock*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPendingFd(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @posixUnlock(%struct.sqlite3_file*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @closeUnixFile(%struct.sqlite3_file*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixUnmapfile(%struct.unixFile* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixClose(%struct.sqlite3_file*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @nolockCheckReservedLock(%struct.sqlite3_file* nocapture readnone, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockLock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockUnlock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @nolockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockCheckReservedLock(%struct.sqlite3_file* nocapture readonly, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree nounwind
declare i32 @utimes(i8* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_flock(i32, i32) local_unnamed_addr #3

declare i32 @flock(i32, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @flockCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpSetLock(i8*, %struct.unixFile* nocapture, i64, i64, i32) local_unnamed_addr #3

declare i32 @fsctl(i8*, i64, i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpLock(%struct.sqlite3_file* nocapture, i32) #3

declare i64 @random() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @nfsUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndRead(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWriteFd(i32, i64, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWrite(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixWrite(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @full_fsync(i32, i32, i32) local_unnamed_addr #3

declare i32 @"\01_fsync"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSync(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileSize(%struct.sqlite3_file* nocapture, i64* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fcntlSizeHint(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixMapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @unixModeBit(%struct.unixFile* nocapture, i8 zeroext, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileControl(%struct.sqlite3_file*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetTempname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyFileControl(%struct.sqlite3_file*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDeviceCharacteristics(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixSectorSize(%struct.sqlite3_file* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixDeviceCharacteristics(%struct.sqlite3_file* nocapture) #15

declare i64 @sysconf(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmSystemLock(%struct.unixFile* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmRegionPerMap() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmPurge(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLockSharedMemory(%struct.unixFile* nocapture readonly, %struct.unixShmNode* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpenSharedMemory(%struct.unixFile*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_uri_boolean(i8* readonly, i8* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmMap(%struct.sqlite3_file*, i32, i32, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmLock(%struct.sqlite3_file* nocapture readonly, i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmBarrier(%struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmUnmap(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixRemapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFetch(%struct.sqlite3_file* nocapture, i64, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnfetch(%struct.sqlite3_file* nocapture, i64, i8* readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @posixIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nolockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @dotlockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @flockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @afpIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyLock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCheckReservedLock(%struct.sqlite3_file*, i32*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @proxyIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nfsIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_io_methods* @autolockIoFinderImpl(i8*, %struct.unixFile* nocapture readonly) #3

declare i32 @"\01_statfs$INODE64"(i8*, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInUnixFile(%struct.sqlite3_vfs*, i32, %struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

declare void @srandomdev() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i8* @unixTempFileDir() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare %struct.UnixUnusedFd* @findReusableFd(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getFileMode(i8*, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findCreateFileMode(i8*, i32, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_parameter(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*) #3

declare i32 @getpid() local_unnamed_addr #12

declare i32 @"\01_fstatfs$INODE64"(i32, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTransformUnixFile(%struct.unixFile* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixDelete(%struct.sqlite3_vfs* nocapture readnone, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixAccess(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @mkFullPathname(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFullPathname(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @unixDlOpen(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i8* @dlopen(i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlError(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i8* @dlerror() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void ()* @unixDlSym(%struct.sqlite3_vfs* nocapture readnone, i8*, i8*) #3

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlClose(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i32 @dlclose(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRandomness(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i64 @time(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSleep(%struct.sqlite3_vfs* nocapture readnone, i32) #3

declare i32 @"\01_sleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTimeInt64(%struct.sqlite3_vfs* nocapture readnone, i64* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTime(%struct.sqlite3_vfs* nocapture readnone, double* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetLastError(%struct.sqlite3_vfs* nocapture readnone, i32, i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetLockPath(i8* nocapture readonly, i8*, i64) local_unnamed_addr #3

declare i64 @"\01_confstr"(i32, i8*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateLockPath(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateUnixFile(i8*, %struct.unixFile** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetHostID(i8*, i32*) local_unnamed_addr #3

declare i32 @gethostuuid(i8*, %struct.timespec*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyBreakConchLock(%struct.unixFile* readonly, i8* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @__strlcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyConchLock(%struct.unixFile*, i8* nocapture readonly, i32) local_unnamed_addr #3

declare i32 @"\01_usleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTakeConch(%struct.unixFile*) local_unnamed_addr #3

declare i32 @futimes(i32, %struct.timeval*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbStrDup(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyReleaseConch(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateConchPathname(i8*, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @switchLockProxyPath(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @proxyGetDbPathForUnixFile(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_os_init() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_os_end() local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcacheManageDirtyList(%struct.PgHdr*, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcacheUnpin(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @numberOfCachePages(%struct.PCache* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree noinline nounwind ssp uwtable
declare %struct.PgHdr* @pcacheFetchFinishWithInit(%struct.PCache*, i32, %struct.sqlite3_pcache_page*) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheMergeDirtyList(%struct.PgHdr*, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheSortDirtyList(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1InitBulk(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pcache1Alloc(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1AllocPage(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1FreePage(%struct.PgHdr1*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1UnderMemoryPressure(%struct.PCache1* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pcache1ResizeHash(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1PinPage(%struct.PgHdr1* returned) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1RemoveFromHash(%struct.PgHdr1*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1EnforceMaxPage(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1TruncateUnsafe(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1Init(i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable writeonly
declare void @pcache1Shutdown(i8* nocapture readnone) #20

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache* @pcache1Create(i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Destroy(%struct.sqlite3_pcache*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Cachesize(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Shrink(%struct.sqlite3_pcache* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1Pagecount(%struct.sqlite3_pcache* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchStage2(%struct.PCache1*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchNoMutex(%struct.sqlite3_pcache*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache_page* @pcache1Fetch(%struct.sqlite3_pcache*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Unpin(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcache1Rekey(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Truncate(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryAlloc(%struct.RowSet* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryMerge(%struct.RowSetEntry*, %struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntrySort(%struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @rowSetTreeToList(%struct.RowSetEntry*, %struct.RowSetEntry** nocapture, %struct.RowSetEntry** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetNDeepTree(%struct.RowSetEntry**, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetListToTree(%struct.RowSetEntry*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setGetterMethod(%struct.Pager* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @getPageError(%struct.Pager* nocapture readonly, i32, %struct.PgHdr** nocapture, i32) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageMMap(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageNormal(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @subjRequiresPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @read32bits(%struct.sqlite3_file*, i64, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @write32bits(%struct.sqlite3_file*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUnlockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerLockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @jrnlBufferSize(%struct.Pager* nocapture readnone) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @readMasterJournal(%struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @journalHdrOffset(%struct.Pager* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @zeroJournalHdr(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeJournalHdr(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readJournalHdr(%struct.Pager* nocapture, i32, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetPagesize(%struct.Pager* nocapture, i32* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeMasterJournal(%struct.Pager* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_reset(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseAllSavepoints(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BitvecDestroy(%struct.Bitvec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addToSavepointBitvecs(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BitvecSet(%struct.Bitvec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_unlock(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @pager_error(%struct.Pager* nocapture, i32 returned) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pagerFlushOnCommit(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_end_transaction(%struct.Pager*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_truncate(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockAndRollback(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerRollback(%struct.Pager*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pager_cksum(%struct.Pager* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback_one_page(%struct.Pager*, i64* nocapture, %struct.Bitvec*, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3PcacheRelease(%struct.PgHdr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_delmaster(%struct.Pager* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setSectorSize(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readDbPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalFindFrame(%struct.Wal* nocapture, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pager_write_changecounter(%struct.PgHdr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUndoCallback(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerRollbackWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerWalFrames(%struct.Pager* nocapture, %struct.PgHdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerBeginReadTransaction(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPagecount(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWalIfPresent(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPlaybackSavepoint(%struct.Pager*, %struct.PagerSavepoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFixMaplimit(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpentemp(%struct.Pager* nocapture readonly, %struct.sqlite3_file*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_wait_on_lock(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerSyncHotJournal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerAcquireMapPage(%struct.Pager*, i32, i8*, %struct.PgHdr** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerReleaseMapPage(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFreeMapHdrs(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @databaseIsUnmoved(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @syncJournal(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write_pagelist(%struct.Pager*, %struct.PgHdr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @openSubJournal(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPageIfRequired(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerStress(i8*, %struct.PgHdr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @hasHotJournal(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockIfUnused(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_open_journal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerAddPageToRollbackJournal(%struct.PgHdr* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerWriteLargeSector(%struct.PgHdr* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_incr_changecounter(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerOpenSavepoint(%struct.Pager* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerExclusiveLock(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walIndexPageRealloc(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexPage(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull %struct.WalCkptInfo* @walCkptInfo(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WalIndexHdr* @walIndexHdr(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare void @walChecksumBytes(i32, i8* readonly, i32, i32* readonly, i32* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walShmBarrier(%struct.Wal* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexWriteHdr(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @walEncodeFrame(%struct.Wal*, i32, i32, i8* readonly, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @walDecodeFrame(%struct.Wal* nocapture, i32* nocapture, i32* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walHash(i32) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walNextHash(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @walHashGet(%struct.Wal* nocapture, i32, %struct.WalHashLoc* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walFramePage(i32) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walFramePgno(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @walCleanupHash(%struct.Wal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexAppend(%struct.Wal* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexRecover(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexClose(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walIteratorNext(%struct.WalIterator* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare void @walMerge(i32* nocapture readonly, i16*, i32, i16** nocapture, i32* nocapture, i16*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walMergesort(i32* nocapture readonly, i16*, i16*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIteratorFree(%struct.WalIterator*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIteratorInit(%struct.Wal* nocapture, i32, %struct.WalIterator** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBusyLock(%struct.Wal* nocapture readonly, i32 (i8*)*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @walPagesize(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @walRestartHdr(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walLimitSize(%struct.Wal* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexTryHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexReadHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBeginShmUnreliable(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walTryBeginRead(%struct.Wal*, i32* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRestartLog(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteToLog(%struct.WalWriter* nocapture readonly, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteOneFrame(%struct.WalWriter* nocapture readonly, %struct.PgHdr* nocapture readonly, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRewriteChecksums(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @lockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @unlockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLockCarefully(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeEnterAll(%struct.sqlite3* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLeaveAll(%struct.sqlite3* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_enable_shared_cache(i32) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @querySharedCacheTableLock(%struct.Btree* readonly, i32, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @setSharedCacheTableLock(%struct.Btree*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @clearAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @downgradeAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateAllOverflowCache(%struct.BtShared* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateIncrblobCursors(%struct.Btree* nocapture, i32, i64, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeSetHasContent(%struct.BtShared* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreeGetHasContent(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @btreeClearHasContent(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeReleaseAllCursorPages(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageNotNull(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorKey(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveAllCursors(%struct.BtShared* nocapture readonly, i32, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @saveCursorsOnList(%struct.BtCursor*, i32, %struct.BtCursor* readnone) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeMoveto(%struct.BtCursor*, i8*, i64, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeRestoreCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @ptrmapPageno(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPut(%struct.BtShared* nocapture readonly, i32, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @ptrmapGet(%struct.BtShared* nocapture readonly, i32, i8* nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind ssp uwtable
declare void @btreeParseCellAdjustSizeForOverflow(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) local_unnamed_addr #21

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly, %struct.CellInfo* nocapture) #15

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local zeroext i8 @sqlite3GetVarint(i8* nocapture readonly %p, i64* nocapture %v) unnamed_addr #2 {
entry:
  %0 = load i8, i8* %p, align 1, !tbaa !10
  %cmp = icmp sgt i8 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv2 = zext i8 %0 to i64
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds i8, i8* %p, i64 1
  %1 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %cmp5 = icmp sgt i8 %1, -1
  %conv9 = zext i8 %0 to i32
  br i1 %cmp5, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end
  %and = shl nuw nsw i32 %conv9, 7
  %shl = and i32 %and, 16256
  %conv11 = zext i8 %1 to i32
  %or = or i32 %shl, %conv11
  %conv12 = zext i32 %or to i64
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %shl16 = shl nuw nsw i32 %conv9, 14
  %conv18 = zext i8 %1 to i32
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 2
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv19 = zext i8 %2 to i32
  %or20 = or i32 %shl16, %conv19
  %tobool = icmp slt i8 %2, 0
  %and29 = and i32 %or20, 2080895
  br i1 %tobool, label %if.end28, label %if.then22

if.then22:                                        ; preds = %if.end13
  %and24 = shl nuw nsw i32 %conv18, 7
  %shl25 = and i32 %and24, 16256
  %or26 = or i32 %and29, %shl25
  %conv27 = zext i32 %or26 to i64
  br label %cleanup

if.end28:                                         ; preds = %if.end13
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 3
  %shl30 = shl nuw nsw i32 %conv18, 14
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv31 = zext i8 %3 to i32
  %or32 = or i32 %shl30, %conv31
  %tobool34 = icmp slt i8 %3, 0
  %and41 = and i32 %or32, 2080895
  br i1 %tobool34, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end28
  %shl37 = shl nuw nsw i32 %and29, 7
  %or38 = or i32 %and41, %shl37
  %conv39 = zext i32 %or38 to i64
  br label %cleanup

if.end40:                                         ; preds = %if.end28
  %incdec.ptr42 = getelementptr inbounds i8, i8* %p, i64 4
  %shl43 = shl i32 %and29, 14
  %4 = load i8, i8* %incdec.ptr42, align 1, !tbaa !10
  %conv44 = zext i8 %4 to i32
  %or45 = or i32 %shl43, %conv44
  %tobool47 = icmp slt i8 %4, 0
  br i1 %tobool47, label %if.end55, label %if.then48

if.then48:                                        ; preds = %if.end40
  %shl49 = shl nuw nsw i32 %and41, 7
  %or50 = or i32 %or45, %shl49
  %shr = lshr i32 %and29, 18
  %conv51 = zext i32 %shr to i64
  %shl52 = shl nuw nsw i64 %conv51, 32
  %conv53 = zext i32 %or50 to i64
  %or54 = or i64 %shl52, %conv53
  br label %cleanup

if.end55:                                         ; preds = %if.end40
  %shl56 = shl nuw nsw i32 %and29, 7
  %or57 = or i32 %and41, %shl56
  %incdec.ptr58 = getelementptr inbounds i8, i8* %p, i64 5
  %shl59 = shl i32 %and41, 14
  %5 = load i8, i8* %incdec.ptr58, align 1, !tbaa !10
  %conv60 = zext i8 %5 to i32
  %or61 = or i32 %shl59, %conv60
  %tobool63 = icmp slt i8 %5, 0
  br i1 %tobool63, label %if.end73, label %if.then64

if.then64:                                        ; preds = %if.end55
  %and65 = shl i32 %or45, 7
  %shl66 = and i32 %and65, 266354560
  %or67 = or i32 %or61, %shl66
  %shr68 = lshr i32 %or57, 18
  %conv69 = zext i32 %shr68 to i64
  %shl70 = shl nuw nsw i64 %conv69, 32
  %conv71 = zext i32 %or67 to i64
  %or72 = or i64 %shl70, %conv71
  br label %cleanup

if.end73:                                         ; preds = %if.end55
  %incdec.ptr74 = getelementptr inbounds i8, i8* %p, i64 6
  %shl75 = shl i32 %or45, 14
  %6 = load i8, i8* %incdec.ptr74, align 1, !tbaa !10
  %conv76 = zext i8 %6 to i32
  %or77 = or i32 %shl75, %conv76
  %tobool79 = icmp slt i8 %6, 0
  br i1 %tobool79, label %if.end90, label %if.then80

if.then80:                                        ; preds = %if.end73
  %and81 = and i32 %or77, -266354561
  %and82 = shl i32 %or61, 7
  %shl83 = and i32 %and82, 266354560
  %or84 = or i32 %and81, %shl83
  %shr85 = lshr i32 %or57, 11
  %conv86 = zext i32 %shr85 to i64
  %shl87 = shl nuw nsw i64 %conv86, 32
  %conv88 = zext i32 %or84 to i64
  %or89 = or i64 %shl87, %conv88
  br label %cleanup

if.end90:                                         ; preds = %if.end73
  %and91 = and i32 %or77, 2080895
  %incdec.ptr92 = getelementptr inbounds i8, i8* %p, i64 7
  %shl93 = shl i32 %or61, 14
  %7 = load i8, i8* %incdec.ptr92, align 1, !tbaa !10
  %conv94 = zext i8 %7 to i32
  %or95 = or i32 %shl93, %conv94
  %tobool97 = icmp slt i8 %7, 0
  br i1 %tobool97, label %if.end107, label %if.then98

if.then98:                                        ; preds = %if.end90
  %and99 = and i32 %or95, -266354561
  %shl100 = shl nuw nsw i32 %and91, 7
  %or101 = or i32 %and99, %shl100
  %shr102 = lshr i32 %or57, 4
  %conv103 = zext i32 %shr102 to i64
  %shl104 = shl nuw nsw i64 %conv103, 32
  %conv105 = zext i32 %or101 to i64
  %or106 = or i64 %shl104, %conv105
  br label %cleanup

if.end107:                                        ; preds = %if.end90
  %incdec.ptr108 = getelementptr inbounds i8, i8* %p, i64 8
  %shl109 = shl i32 %and91, 15
  %8 = load i8, i8* %incdec.ptr108, align 1, !tbaa !10
  %conv110 = zext i8 %8 to i32
  %and112 = shl i32 %or95, 8
  %shl113 = and i32 %and112, 532709120
  %or111 = or i32 %shl113, %shl109
  %or114 = or i32 %or111, %conv110
  %shl115 = shl nuw i32 %or57, 4
  %9 = lshr i8 %4, 3
  %10 = and i8 %9, 15
  %shr119 = zext i8 %10 to i32
  %or120 = or i32 %shl115, %shr119
  %conv121 = zext i32 %or120 to i64
  %shl122 = shl nuw i64 %conv121, 32
  %conv123 = zext i32 %or114 to i64
  %or124 = or i64 %shl122, %conv123
  br label %cleanup

cleanup:                                          ; preds = %if.end107, %if.then98, %if.then80, %if.then64, %if.then48, %if.then35, %if.then22, %if.then7, %if.then
  %or124.sink = phi i64 [ %or124, %if.end107 ], [ %or106, %if.then98 ], [ %or89, %if.then80 ], [ %or72, %if.then64 ], [ %or54, %if.then48 ], [ %conv39, %if.then35 ], [ %conv27, %if.then22 ], [ %conv12, %if.then7 ], [ %conv2, %if.then ]
  %retval.0 = phi i8 [ 9, %if.end107 ], [ 8, %if.then98 ], [ 7, %if.then80 ], [ 6, %if.then64 ], [ 5, %if.then48 ], [ 4, %if.then35 ], [ 3, %if.then22 ], [ 2, %if.then7 ], [ 1, %if.then ]
  store i64 %or124.sink, i64* %v, align 8, !tbaa !16
  ret i8 %retval.0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtr(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrIndex(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @btreeParseCell(%struct.MemPage*, i32, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtr(%struct.MemPage* nocapture readonly, i8*) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPutOvflPtr(%struct.MemPage*, %struct.MemPage* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @defragmentPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pageFindSlot(%struct.MemPage* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateSpace(%struct.MemPage*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @freeSpace(%struct.MemPage* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @decodeFlags(%struct.MemPage* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeComputeFreeSpace(%struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeCellSizeCheck(%struct.MemPage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInitPage(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.MemPage* @btreePageFromDbPage(%struct.PgHdr*, i32, %struct.BtShared*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MemPage* @btreePageLookup(%struct.BtShared*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreePagecount(%struct.BtShared* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAndInitPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, %struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePage(%struct.MemPage* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageOne(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetUnusedPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pageReinit(%struct.PgHdr* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInvokeBusyHandler(i8* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @removeFromSharingList(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @allocateTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @lockBtree(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSharedLock(%struct.Pager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unlockBtreeIfUnused(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @newDatabase(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setChildPtrmaps(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @modifyPagePointer(%struct.MemPage*, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @relocatePage(%struct.BtShared*, %struct.MemPage*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @incrVacuumStep(%struct.BtShared*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateBtreePage(%struct.BtShared*, %struct.MemPage** nocapture, i32* nocapture, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @finalDbSize(%struct.BtShared* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @autoVacuumCommit(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeEndTransaction(%struct.Btree*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeSetNPage(%struct.BtShared* nocapture, %struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursorWithLock(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @getCellInfo(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @getOverflowPage(%struct.BtShared*, i32, %struct.MemPage**, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @copyPayload(i8*, i8*, i32, i32, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @accessPayload(%struct.BtCursor*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @accessPayloadChecked(%struct.BtCursor*, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @fetchPayload(%struct.BtCursor* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToChild(%struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @moveToParent(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRoot(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToLeftmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRightmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeNext(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreePrevious(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @freePage2(%struct.BtShared*, %struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freePage(%struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearCell(%struct.MemPage*, i8*, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInCell(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @dropCell(%struct.MemPage* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @insertCell(%struct.MemPage*, i32, i8*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @populateCellCache(%struct.CellArray* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @cachedCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @rebuildPage(%struct.CellArray* nocapture readonly, i32, i32, %struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageInsertArray(%struct.MemPage* nocapture readonly, i8*, i8** nocapture, i8* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageFreeArray(%struct.MemPage* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @editPage(%struct.MemPage*, i32, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_quick(%struct.MemPage*, %struct.MemPage*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @copyNodeContent(%struct.MemPage* nocapture readonly, %struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_nonroot(%struct.MemPage*, i32, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_deeper(%struct.MemPage*, %struct.MemPage** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @anotherValidCursor(%struct.BtCursor* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteContent(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteCell(%struct.BtCursor* nocapture readonly, %struct.BtreePayload* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCreateTable(%struct.Btree* nocapture, i32* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearDatabasePage(%struct.BtShared*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeDropTable(%struct.Btree*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkAppendMsg(%struct.IntegrityCk*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkRef(%struct.IntegrityCk*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkPtrmap(%struct.IntegrityCk*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkList(%struct.IntegrityCk*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeHeapInsert(i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @btreeHeapPull(i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkTreePage(%struct.IntegrityCk*, i32, i64* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Btree* @findBtree(%struct.sqlite3*, %struct.sqlite3*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTempDatabase(%struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorWithMsg(%struct.sqlite3*, i32, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDestPgsz(%struct.sqlite3_backup* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetPageSize(%struct.Btree* nocapture, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @checkReadTransaction(%struct.sqlite3*, %struct.Btree* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_backup* @sqlite3_backup_init(%struct.sqlite3*, i8*, %struct.sqlite3*, i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @isFatalError(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @backupOnePage(%struct.sqlite3_backup* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @backupTruncateFile(%struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @attachBackupObject(%struct.sqlite3_backup*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_step(%struct.sqlite3_backup*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ResetAllSchemasOfConnection(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerCommitPhaseOne(%struct.Pager*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseTwo(%struct.Btree*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseOne(%struct.Btree* nocapture, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_finish(%struct.sqlite3_backup*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeRollback(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3LeaveMutexAndCloseZombie(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_remaining(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_pagecount(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @backupUpdate(%struct.sqlite3_backup* nocapture, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMemRenderNum(i32, i8*, %struct.sqlite3_value* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeMemAddTerminator(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClear(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define i64 @doubleToInt64(double %r) local_unnamed_addr #22 {
entry:
  %cmp = fcmp ugt double %r, 0xC3E0000000000000
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult double %r, 0x43E0000000000000
  br i1 %cmp1, label %if.else3, label %return

if.else3:                                         ; preds = %if.else
  %conv = fptosi double %r to i64
  br label %return

return:                                           ; preds = %if.else3, %if.else, %entry
  %retval.0 = phi i64 [ %conv, %if.else3 ], [ -9223372036854775808, %entry ], [ 9223372036854775807, %if.else ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind ssp uwtable
declare i64 @memIntValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3Atoi64(i8* readonly %zNum, i64* nocapture %pNum, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  %conv = zext i8 %enc to i32
  %cmp = icmp eq i8 %enc, 1
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %sub = sub nsw i32 3, %conv
  %cmp3255 = icmp slt i32 %sub, %length
  br i1 %cmp3255, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %length to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv266 = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next267, %for.inc ]
  %i.0256 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %zNum, i64 %indvars.iv266
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %for.inc, label %for.end.loopexit.split.loop.exit295

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next267 = add i64 %indvars.iv266, 2
  %add = add nsw i32 %i.0256, 2
  %cmp3 = icmp slt i64 %indvars.iv.next267, %1
  br i1 %cmp3, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit295:              ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv266 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit295, %for.inc, %if.else
  %i.0.lcssa = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit295 ], [ %add, %for.inc ]
  %cmp3.lcssa = phi i32 [ 0, %if.else ], [ 1, %for.end.loopexit.split.loop.exit295 ], [ 0, %for.inc ]
  %xor = xor i32 %i.0.lcssa, 1
  %and = and i32 %conv, 1
  %idx.ext13 = zext i32 %and to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext13
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %zNum.addr.0 = phi i8* [ %add.ptr14, %for.end ], [ %zNum, %entry ]
  %incr.0 = phi i32 [ 2, %for.end ], [ 1, %entry ]
  %nonNum.0 = phi i32 [ %cmp3.lcssa, %for.end ], [ 0, %entry ]
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %entry ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext.pn
  %cmp15252 = icmp ult i8* %zNum.addr.0, %zEnd.0
  br i1 %cmp15252, label %land.rhs17.lr.ph, label %if.end43

land.rhs17.lr.ph:                                 ; preds = %if.end
  %idx.ext23 = zext i32 %incr.0 to i64
  br label %land.rhs17

land.rhs17:                                       ; preds = %while.body, %land.rhs17.lr.ph
  %zNum.addr.1253 = phi i8* [ %zNum.addr.0, %land.rhs17.lr.ph ], [ %add.ptr24, %while.body ]
  %4 = load i8, i8* %zNum.addr.1253, align 1, !tbaa !10
  %idxprom18 = zext i8 %4 to i64
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom18
  %5 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %6 = and i8 %5, 1
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.then27, label %while.body

while.body:                                       ; preds = %land.rhs17
  %add.ptr24 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  %cmp15 = icmp ult i8* %add.ptr24, %zEnd.0
  br i1 %cmp15, label %land.rhs17, label %if.end43

if.then27:                                        ; preds = %land.rhs17
  switch i8 %4, label %if.end43 [
    i8 45, label %if.then31
    i8 43, label %if.then38
  ]

if.then31:                                        ; preds = %if.then27
  %add.ptr33 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.then38:                                        ; preds = %if.then27
  %add.ptr40 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.then31, %if.then27, %while.body, %if.end
  %zNum.addr.2 = phi i8* [ %add.ptr33, %if.then31 ], [ %add.ptr40, %if.then38 ], [ %zNum.addr.1253, %if.then27 ], [ %zNum.addr.0, %if.end ], [ %add.ptr24, %while.body ]
  %neg.0 = phi i32 [ 1, %if.then31 ], [ 0, %if.then38 ], [ 0, %if.then27 ], [ 0, %if.end ], [ 0, %while.body ]
  %cmp45248 = icmp ult i8* %zNum.addr.2, %zEnd.0
  br i1 %cmp45248, label %land.rhs47.lr.ph, label %while.end56

land.rhs47.lr.ph:                                 ; preds = %if.end43
  %idx.ext54 = zext i32 %incr.0 to i64
  br label %land.rhs47

land.rhs47:                                       ; preds = %while.body53, %land.rhs47.lr.ph
  %zNum.addr.3249 = phi i8* [ %zNum.addr.2, %land.rhs47.lr.ph ], [ %add.ptr55, %while.body53 ]
  %7 = load i8, i8* %zNum.addr.3249, align 1, !tbaa !10
  %cmp50 = icmp eq i8 %7, 48
  br i1 %cmp50, label %while.body53, label %while.end56

while.body53:                                     ; preds = %land.rhs47
  %add.ptr55 = getelementptr inbounds i8, i8* %zNum.addr.3249, i64 %idx.ext54
  %cmp45 = icmp ult i8* %add.ptr55, %zEnd.0
  br i1 %cmp45, label %land.rhs47, label %while.end56

while.end56:                                      ; preds = %while.body53, %land.rhs47, %if.end43
  %zNum.addr.3.lcssa = phi i8* [ %zNum.addr.2, %if.end43 ], [ %add.ptr55, %while.body53 ], [ %zNum.addr.3249, %land.rhs47 ]
  %cmp60238 = icmp ult i8* %zNum.addr.3.lcssa, %zEnd.0
  br i1 %cmp60238, label %land.end70.preheader, label %for.end77.thread

for.end77.thread:                                 ; preds = %while.end56
  %tobool81272 = icmp eq i32 %neg.0, 0
  br i1 %tobool81272, label %if.end88, label %if.then84

land.end70.preheader:                             ; preds = %while.end56
  %8 = zext i32 %incr.0 to i64
  br label %land.end70

land.end70:                                       ; preds = %for.body71, %land.end70.preheader
  %indvars.iv264 = phi i64 [ 0, %land.end70.preheader ], [ %indvars.iv.next265, %for.body71 ]
  %arrayidx59241 = phi i8* [ %zNum.addr.3.lcssa, %land.end70.preheader ], [ %arrayidx59, %for.body71 ]
  %i.1240 = phi i32 [ 0, %land.end70.preheader ], [ %add76, %for.body71 ]
  %u.0239 = phi i64 [ 0, %land.end70.preheader ], [ %sub74, %for.body71 ]
  %9 = load i8, i8* %arrayidx59241, align 1, !tbaa !10
  %.off = add i8 %9, -48
  %10 = icmp ult i8 %.off, 10
  br i1 %10, label %for.body71, label %for.end77.split.loop.exit

for.body71:                                       ; preds = %land.end70
  %mul = mul i64 %u.0239, 10
  %conv72288 = zext i8 %9 to i64
  %add73 = add i64 %mul, -48
  %sub74 = add i64 %add73, %conv72288
  %indvars.iv.next265 = add i64 %indvars.iv264, %8
  %add76 = add nuw nsw i32 %i.1240, %incr.0
  %arrayidx59 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next265
  %cmp60 = icmp ult i8* %arrayidx59, %zEnd.0
  br i1 %cmp60, label %land.end70, label %for.end77

for.end77.split.loop.exit:                        ; preds = %land.end70
  %11 = trunc i64 %indvars.iv264 to i32
  br label %for.end77

for.end77:                                        ; preds = %for.end77.split.loop.exit, %for.body71
  %u.0.lcssa = phi i64 [ %u.0239, %for.end77.split.loop.exit ], [ %sub74, %for.body71 ]
  %i.1.lcssa = phi i32 [ %11, %for.end77.split.loop.exit ], [ %add76, %for.body71 ]
  %cmp60.lcssa = phi i1 [ true, %for.end77.split.loop.exit ], [ false, %for.body71 ]
  %cmp78 = icmp slt i64 %u.0.lcssa, 0
  %tobool81 = icmp ne i32 %neg.0, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %for.end77
  %cond = select i1 %tobool81, i64 -9223372036854775808, i64 9223372036854775807
  br label %if.end88

if.else82:                                        ; preds = %for.end77
  br i1 %tobool81, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.else82, %for.end77.thread
  %u.0.lcssa273286 = phi i64 [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %i.1.lcssa275284 = phi i32 [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  %cmp60.lcssa277282 = phi i1 [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %sub85 = sub nsw i64 0, %u.0.lcssa273286
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.else82, %if.then80, %for.end77.thread
  %sub85.sink = phi i64 [ %sub85, %if.then84 ], [ %cond, %if.then80 ], [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %tobool81279 = phi i1 [ true, %if.then84 ], [ %tobool81, %if.then80 ], [ false, %for.end77.thread ], [ false, %if.else82 ]
  %cmp60.lcssa276 = phi i1 [ %cmp60.lcssa277282, %if.then84 ], [ %cmp60.lcssa, %if.then80 ], [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %i.1.lcssa274 = phi i32 [ %i.1.lcssa275284, %if.then84 ], [ %i.1.lcssa, %if.then80 ], [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  store i64 %sub85.sink, i64* %pNum, align 8, !tbaa !16
  %cmp89 = icmp eq i32 %i.1.lcssa274, 0
  %cmp92 = icmp eq i8* %zNum.addr.2, %zNum.addr.3.lcssa
  %or.cond = and i1 %cmp92, %cmp89
  br i1 %or.cond, label %if.end120, label %if.else95

if.else95:                                        ; preds = %if.end88
  %tobool96 = icmp ne i32 %nonNum.0, 0
  %cmp60.not = xor i1 %cmp60.lcssa276, true
  %brmerge = or i1 %tobool96, %cmp60.not
  br i1 %brmerge, label %if.end120, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else95
  %12 = zext i32 %i.1.lcssa274 to i64
  %13 = zext i32 %incr.0 to i64
  br label %do.body

do.body:                                          ; preds = %if.end112, %do.body.preheader
  %indvars.iv = phi i64 [ %12, %do.body.preheader ], [ %indvars.iv.next, %if.end112 ]
  %arrayidx105 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %idxprom106 = zext i8 %14 to i64
  %arrayidx107 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom106
  %15 = load i8, i8* %arrayidx107, align 1, !tbaa !10
  %16 = and i8 %15, 1
  %tobool110 = icmp eq i8 %16, 0
  br i1 %tobool110, label %if.end120, label %if.end112

if.end112:                                        ; preds = %do.body
  %indvars.iv.next = add i64 %indvars.iv, %13
  %arrayidx115 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next
  %cmp116 = icmp ult i8* %arrayidx115, %zEnd.0
  br i1 %cmp116, label %do.body, label %if.end120

if.end120:                                        ; preds = %if.end112, %do.body, %if.else95, %if.end88
  %rc.1 = phi i32 [ -1, %if.end88 ], [ %nonNum.0, %if.else95 ], [ 1, %do.body ], [ 0, %if.end112 ]
  %mul121 = mul nuw nsw i32 %incr.0, 19
  %cmp122 = icmp ult i32 %i.1.lcssa274, %mul121
  br i1 %cmp122, label %cleanup, label %if.else125

if.else125:                                       ; preds = %if.end120
  %cmp127 = icmp ugt i32 %i.1.lcssa274, %mul121
  br i1 %cmp127, label %if.else133.thread, label %cond.false

if.else133.thread:                                ; preds = %if.else125
  %cond135233 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135233, i64* %pNum, align 8, !tbaa !16
  br label %cleanup

cond.false:                                       ; preds = %if.else125
  %17 = zext i32 %incr.0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %cond.false
  %indvars.iv.i = phi i64 [ 0, %cond.false ], [ %indvars.iv.next.i, %for.body.i ]
  %18 = mul nuw nsw i64 %indvars.iv.i, %17
  %arrayidx.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %18
  %19 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = sext i8 %19 to i32
  %arrayidx3.i = getelementptr inbounds [19 x i8], [19 x i8]* @.str.33, i64 0, i64 %indvars.iv.i
  %20 = load i8, i8* %arrayidx3.i, align 1, !tbaa !10
  %conv4.i = sext i8 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp eq i32 %sub.i, 0
  %cmp1.i = icmp ult i64 %indvars.iv.i, 17
  %21 = and i1 %cmp1.i, %cmp.i
  br i1 %21, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i
  %mul5.i = mul nsw i32 %sub.i, 10
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %for.end.i
  %mul8.i = mul nuw nsw i32 %incr.0, 18
  %idxprom9.i = zext i32 %mul8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %idxprom9.i
  %22 = load i8, i8* %arrayidx10.i, align 1, !tbaa !10
  %conv11.i = sext i8 %22 to i32
  %sub12.i = add nsw i32 %conv11.i, -56
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %for.end.i
  %cond129 = phi i32 [ %sub12.i, %if.then.i ], [ %mul5.i, %for.end.i ]
  %cmp130 = icmp slt i32 %cond129, 0
  br i1 %cmp130, label %cleanup, label %if.else133

if.else133:                                       ; preds = %cond.end
  %cond135 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135, i64* %pNum, align 8, !tbaa !16
  %cmp136 = icmp eq i32 %cond129, 0
  %cond144 = select i1 %tobool81279, i32 %rc.1, i32 3
  %spec.select236 = select i1 %cmp136, i32 %cond144, i32 2
  ret i32 %spec.select236

cleanup:                                          ; preds = %cond.end, %if.else133.thread, %if.end120
  %23 = phi i32 [ 2, %if.else133.thread ], [ %rc.1, %cond.end ], [ %rc.1, %if.end120 ]
  ret i32 %23
}

; Function Attrs: noinline nounwind ssp uwtable
declare double @memRealValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeReleaseAndSetInt64(%struct.sqlite3_value*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeClrCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @valueToText(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @valueNew(%struct.sqlite3*, %struct.ValueNewStat4Ctx* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @valueFromExpr(%struct.sqlite3*, %struct.Expr* nocapture readonly, i8 zeroext, i8 zeroext, %struct.sqlite3_value** nocapture, %struct.ValueNewStat4Ctx* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MPrintf(%struct.sqlite3*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMemNumerify(%struct.sqlite3_value* nocapture) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @valueBytes(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @growOpArray(%struct.Vdbe* nocapture, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @growOp3(%struct.Vdbe* nocapture, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp3(%struct.Vdbe*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @resizeResolveLabel(%struct.Parse* nocapture, %struct.Vdbe* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @resolveP2Values(%struct.Vdbe* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeEphemeralFunction(%struct.sqlite3*, %struct.FuncDef*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4Mem(%struct.sqlite3*, %struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4FuncCtx(%struct.sqlite3*, %struct.sqlite3_context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @freeP4(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeFreeOpArray(%struct.sqlite3*, %struct.VdbeOp*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeChangeP4Full(%struct.Vdbe* nocapture readonly, %struct.VdbeOp*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeChangeP4(%struct.Vdbe*, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @displayP4(%struct.VdbeOp* nocapture readonly, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeLeave(%struct.Vdbe* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @initMemArray(%struct.sqlite3_value* nocapture, i32, %struct.sqlite3*, i16 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @releaseMemArray(%struct.sqlite3_value*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @allocSpace(%struct.ReusableSpace* nocapture, i8* readnone, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @closeCursorsInFrame(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @closeAllCursors(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFrameRestore(%struct.VdbeFrame* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCommit(%struct.sqlite3*, %struct.Vdbe* nocapture readnone) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeCloseStatement(%struct.Vdbe* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSavepoint(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @handleMovedCursor(%struct.VdbeCursor* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @serialGet(i8* nocapture readonly, i32, %struct.sqlite3_value*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCompareMemString(%struct.sqlite3_value*, %struct.sqlite3_value*, %struct.CollSeq* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isAllZero(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @vdbeRecordDecodeInt(i32, i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareInt(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompare(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompareWithSkip(i32, i8*, %struct.UnpackedRecord*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareString(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_expired(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafety(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafetyNotNull(%struct.Vdbe* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_finalize(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_reset(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeReset(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_clear_bindings(%struct.sqlite3_stmt* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_blob(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_int(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_subtype(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_value_pointer(%struct.sqlite3_value* nocapture readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16be(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16le(%struct.sqlite3_value*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_nochange(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_frombind(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_value_dup(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_value_free(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @setResultStrOrError(%struct.sqlite3_context* nocapture, i8*, i32, i8 zeroext, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @invokeValueDestructor(i8*, void (i8*)*, %struct.sqlite3_context*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error16(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_null(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_pointer(%struct.sqlite3_context* nocapture readonly, i8*, i8*, void (i8*)*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_result_subtype(%struct.sqlite3_context* nocapture readonly, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16be(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16le(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_value(%struct.sqlite3_context* nocapture readonly, %struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_zeroblob(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_result_zeroblob64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_code(%struct.sqlite3_context* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @doWalCallbacks(%struct.sqlite3*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_step(%struct.sqlite3_stmt*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_user_data(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_vtab_nochange(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @createAggContext(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_aggregate_context(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_get_auxdata(%struct.sqlite3_context* nocapture readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_auxdata(%struct.sqlite3_context* nocapture, i32, i8*, void (i8*)*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_aggregate_count(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_column_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_data_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_value* @columnNullValue() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @columnMem(%struct.sqlite3_stmt* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @columnMallocFailure(%struct.sqlite3_stmt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_blob(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_column_double(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_int(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_column_int64(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_column_value(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_type(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @columnName(%struct.sqlite3_stmt* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeUnbind(%struct.Vdbe*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @bindText(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_null(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_pointer(%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_value(%struct.sqlite3_stmt*, i32, %struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_bind_parameter_name(%struct.sqlite3_stmt* readonly, i32) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_index(%struct.sqlite3_stmt* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_transfer_bindings(%struct.sqlite3_stmt* nocapture, %struct.sqlite3_stmt* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_db_handle(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_readonly(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_isexplain(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_busy(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_stmt* @sqlite3_next_stmt(%struct.sqlite3* nocapture readonly, %struct.sqlite3_stmt* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_stmt_status(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_sql(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare noalias i8* @sqlite3_expanded_sql(%struct.sqlite3_stmt* nocapture readnone) #11

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define i32 @alsoAnInt(%struct.sqlite3_value* nocapture readonly %pRec, double %rValue, i64* nocapture %piValue) local_unnamed_addr #2 {
entry:
  %conv = fptosi double %rValue to i64
  %cmp.i = fcmp oeq double %rValue, 0.000000e+00
  br i1 %cmp.i, label %if.then, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %entry
  %conv.i = sitofp i64 %conv to double
  %0 = bitcast double %conv.i to i64
  %1 = bitcast double %rValue to i64
  %2 = icmp ne i64 %1, %0
  %conv.off = add i64 %conv, 2251799813685248
  %3 = icmp ugt i64 %conv.off, 4503599627370495
  %4 = or i1 %3, %2
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.rhs.i, %entry
  store i64 %conv, i64* %piValue, align 8, !tbaa !16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %5 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %6 = load i32, i32* %n, align 4, !tbaa !29
  %enc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %7 = load i8, i8* %enc, align 2, !tbaa !21
  %call1 = call i32 @sqlite3Atoi64(i8* %5, i64* %piValue, i32 %6, i8 zeroext %7)
  %cmp = icmp eq i32 %call1, 0
  %conv2 = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %conv2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_numeric_type(%struct.sqlite3_value* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @out2Prerelease(%struct.Vdbe* nocapture readonly, %struct.VdbeOp* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobSeekToRow(%struct.Incrblob* nocapture, i64, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeExec(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_open(%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorMsg(%struct.Parse* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMakeReady(%struct.Vdbe*, %struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_close(%struct.sqlite3_blob*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobReadWrite(%struct.sqlite3_blob*, i8*, i32, i32, i32 (%struct.BtCursor*, i32, i32, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_read(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePayloadChecked(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_write(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePutData(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_blob_bytes(%struct.sqlite3_blob* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_reopen(%struct.sqlite3_blob*, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaReaderClear(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeIncrFree(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadBlob(%struct.PmaReader* nocapture, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadVarint(%struct.PmaReader* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMapFile(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderSeek(%struct.SortSubtask* nocapture readonly, %struct.PmaReader*, %struct.SorterFile* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderNext(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrSwap(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderInit(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i64, %struct.PmaReader*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareTail(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompare(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareText(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareInt(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterRecordFree(%struct.sqlite3*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSortSubtaskCleanup(%struct.sqlite3*, %struct.SortSubtask*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinThread(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCreateThread(%struct.SortSubtask* nocapture, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinAll(%struct.VdbeSorter* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MergeEngine* @vdbeMergeEngineNew(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineFree(%struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterExtendFile(%struct.sqlite3* nocapture readonly, %struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterOpenTempFile(%struct.sqlite3* nocapture readonly, i64, %struct.sqlite3_file** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSortAllocUnpacked(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SorterRecord* @vdbeSorterMerge(%struct.SortSubtask*, %struct.SorterRecord*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)* @vdbeSorterGetCompare(%struct.VdbeSorter* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSort(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriterInit(%struct.sqlite3_file*, %struct.PmaWriter*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteBlob(%struct.PmaWriter* nocapture, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaWriterFinish(%struct.PmaWriter*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteVarint(%struct.PmaWriter* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterListToPMA(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineStep(%struct.MergeEngine* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeSorterFlushThread(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterFlushPMA(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrPopulate(%struct.IncrMerger* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeIncrPopulateThread(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrBgPopulate(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrMergerNew(%struct.SortSubtask*, %struct.MergeEngine*, %struct.IncrMerger** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vdbeIncrMergerSetThreads(%struct.IncrMerger* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineCompare(%struct.MergeEngine* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineInit(%struct.SortSubtask*, %struct.MergeEngine* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrMergeInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbePmaReaderBgIncrInit(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineLevel0(%struct.SortSubtask* nocapture readonly, i32, i64* nocapture, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @vdbeSorterTreeDepth(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterAddToTree(%struct.SortSubtask*, i32, i32, %struct.MergeEngine* nocapture readonly, %struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMergeTreeBuild(%struct.VdbeSorter*, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSetupMerge(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @vdbeSorterRowkey(%struct.VdbeSorter* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @memjrnlRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #8

; Function Attrs: nounwind ssp uwtable
declare void @memjrnlFreeChunks(%struct.MemJournal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlCreateFile(%struct.MemJournal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlWrite(%struct.sqlite3_file*, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlClose(%struct.sqlite3_file* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @memjrnlSync(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @memjrnlFileSize(%struct.sqlite3_file* nocapture readonly, i64* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @walkWindowList(%struct.Walker*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walkExpr(%struct.Walker*, %struct.Expr*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelect(%struct.Walker*, %struct.Select*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @incrAggDepth(%struct.Walker* nocapture readonly, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @incrAggFunctionDepth(%struct.Expr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveAlias(%struct.Parse* nocapture readonly, %struct.ExprList* nocapture readonly, i32, %struct.Expr*, i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nameInUsingClause(%struct.IdList* readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @areDoubleQuotedStringsEnabled(%struct.sqlite3* nocapture readonly, %struct.NameContext* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @lookupName(%struct.Parse*, i8*, i8*, i8*, %struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3MatchEName(%struct.ExprList_item* nocapture readonly, i8* readonly, i8* readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @notValidImpl(%struct.Parse* nocapture, %struct.NameContext* nocapture readonly, i8*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprProbability(%struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveExprStep(%struct.Walker*, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.FuncDef* @sqlite3FindFunction(%struct.sqlite3*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @resolveAsName(%struct.Parse* nocapture readnone, %struct.ExprList* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderByTermToExprList(%struct.Parse*, %struct.Select* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCompare(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveOutOfRangeError(%struct.Parse* nocapture, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveCompoundOrderBy(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprIsInteger(%struct.Expr* readonly, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @resolveRemoveWindowsCb(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare void @windowRemoveExprFromSelect(%struct.Select*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderGroupBy(%struct.NameContext*, %struct.Select*, %struct.ExprList*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ResolveOrderGroupBy(%struct.Parse* nocapture, %struct.Select* nocapture readonly, %struct.ExprList* readonly, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveSelectStep(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectPrep(%struct.Parse*, %struct.Select*, %struct.NameContext*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare signext i8 @comparisonAffinity(%struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local signext i8 @sqlite3ExprAffinity(%struct.Expr* nocapture readonly) unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare zeroext i8 @binaryCompareP5(%struct.Expr* nocapture readonly, %struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @codeCompare(%struct.Parse* nocapture, %struct.Expr*, %struct.Expr*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp4(%struct.Vdbe*, i32, i32, i32, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeSubselect(%struct.Parse*, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CodeSubselect(%struct.Parse*, %struct.Expr* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprVectorRegister(%struct.Parse*, %struct.Expr*, i32, i32, %struct.Expr** nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTemp(%struct.Parse*, %struct.Expr*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeVectorCompare(%struct.Parse*, %struct.Expr* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExpr(%struct.Expr* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExprList(%struct.ExprList* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfSelect(%struct.Select* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @exprSetHeight(%struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @exprStructSize(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @dupedExprStructSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprNodeSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprSize(%struct.Expr* readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprDup(%struct.sqlite3*, %struct.Expr*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectDup(%struct.sqlite3*, %struct.Select* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListDup(%struct.sqlite3*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowDup(%struct.sqlite3*, %struct.Expr*, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.With* @withDup(%struct.sqlite3*, %struct.With* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @gatherSelectWindowsCallback(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @gatherSelectWindowsSelectCallback(%struct.Walker* nocapture readonly, %struct.Select* readnone) #7

; Function Attrs: nounwind ssp uwtable
declare void @gatherSelectWindows(%struct.Select*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @exprListDeleteNN(%struct.sqlite3*, %struct.ExprList*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsConstant(%struct.Walker* nocapture, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsConst(%struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare dso_local i32 @sqlite3SelectWalkFail(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #10

; Function Attrs: nounwind ssp uwtable
declare i32 @exprNodeIsConstantOrGroupBy(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @isCandidateForInOpt(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i8* @exprINAffinity(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeReal(%struct.Vdbe* nocapture, i8* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeInteger(%struct.Parse* nocapture, %struct.Expr* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3DecOrHexToI64(i8* readonly, i64*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @exprToRegister(%struct.Expr*, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeVector(%struct.Parse*, %struct.Expr*, i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDoNotMergeFlagOnCopy(%struct.Vdbe* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeInlineFunction(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCode(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTarget(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesExpr(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesNonNullRow(%struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprCodeBetween(%struct.Parse*, %struct.Expr* nocapture readonly, i32, void (%struct.Parse*, %struct.Expr*, i32, i32)*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCompareVariable(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprImpliesNotNull(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @impliesNotNullRow(%struct.Walker*, %struct.Expr* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprIdxCover(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprSrcCount(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoColumn(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoFunc(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeAggregate(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @analyzeAggregatesInSelect(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @analyzeAggregatesInSelectEnd(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @isAlterableTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTestSchema(%struct.Parse*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3NestedParse(%struct.Parse*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameReloadSchema(%struct.Parse* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @isRealTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameUnmapExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readnone) #15

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkWith(%struct.Walker*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameUnmapSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTokenFree(%struct.sqlite3*, %struct.RenameToken*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameTokenFind(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, i8* readnone) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameColumnSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameColumnExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.RenameToken* @renameColumnTokenNext(%struct.RenameCtx* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnParseError(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnElistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.ExprList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnIdlistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.IdList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameParseSql(%struct.Parse*, i8* readonly, %struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3RunParser(%struct.Parse*, i8*, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameEditSql(%struct.sqlite3_context* nocapture, %struct.RenameCtx* nocapture, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameResolveTrigger(%struct.Parse*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local %struct.Table* @sqlite3FindTable(%struct.sqlite3* nocapture readonly, i8* nocapture readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ViewGetColumnNames(%struct.Parse*, %struct.Table* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkTrigger(%struct.Walker*, %struct.Trigger* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameParseCleanup(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameTableExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameTableSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableTest(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @openStatTable(%struct.Parse*, i32, i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableLock(%struct.Parse* nocapture, i32, i32, i8 zeroext, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @statAccumDestructor(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @statInit(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statPush(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statGet(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @callStatGet(%struct.Parse* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeOneTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readnone, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strlike(i8* readonly, i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3OpenTable(%struct.Parse*, i32, i32, %struct.Table* nocapture readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @loadAnalysis(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeDatabase(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @decodeIntArray(i8* readonly, i32, i32* nocapture readnone, i16* nocapture, %struct.Index* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strglob(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @analysisLoader(i8* nocapture readonly, i32, i8** readonly, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveAttachExpr(%struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @attachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ParseUri(i8*, i8*, i32* nocapture, %struct.sqlite3_vfs** nocapture, i8** nocapture, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Schema* @sqlite3SchemaGet(%struct.sqlite3*, %struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeSetPagerFlags(%struct.Btree* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_filename(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeClose(%struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @detachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CollapseDatabaseArray(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeAttach(%struct.Parse*, i32, %struct.FuncDef*, %struct.Expr* readonly, %struct.Expr*, %struct.Expr*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_set_authorizer(%struct.sqlite3* nocapture, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteAuthBadReturnCode(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeTableLocks(%struct.Parse*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @deleteTable(%struct.sqlite3*, %struct.Table*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3HashInsert(%struct.Hash* nocapture, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @makeColumnPartOfPrimaryKey(%struct.Parse* nocapture, %struct.Column* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @identLength(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @identPut(i8* nocapture, i32* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @createTableStmt(%struct.sqlite3*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resizeIndexObject(%struct.sqlite3*, %struct.Index* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateTableWidth(%struct.Table* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateIndexWidth(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @hasColumn(i16* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isDupColumn(%struct.Index* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @recomputeColumnsNotIndexed(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @convertToWithoutRowidTable(%struct.Parse*, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppend(%struct.sqlite3*, %struct.ExprList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprAlloc(%struct.sqlite3*, i32, %struct.Token* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateIndex(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.SrcList*, %struct.ExprList*, i32, %struct.Token* readnone, %struct.Expr*, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteViewResetAll(%struct.sqlite3*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyRootPage(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyTable(%struct.Parse*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tableMayNotBeDropped(%struct.sqlite3* nocapture readnone, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @collationMatch(i8* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @reindexTable(%struct.Parse*, %struct.Table* nocapture readonly, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RefillIndex(%struct.Parse*, %struct.Index* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @reindexDatabases(%struct.Parse*, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @callCollNeeded(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @synthCollSeq(%struct.sqlite3* nocapture readonly, %struct.CollSeq*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @findCollSeqEntry(%struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @matchQuality(%struct.FuncDef* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tabIsReadOnly(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @minmaxFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @typeofFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lengthFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @absFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @instrFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @printfFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value**) #3

; Function Attrs: nounwind ssp uwtable
declare void @substrFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @roundFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @contextMalloc(%struct.sqlite3_context* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @upperFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lowerFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomBlob(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_insert_rowid(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @sqlite3_last_insert_rowid(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @total_changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_total_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @patternCompare(i8*, i8*, %struct.compareInfo* readonly, i32) local_unnamed_addr #18

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare void @likeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nullifFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @versionFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_libversion() #11

; Function Attrs: nounwind ssp uwtable
declare void @sourceidFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_sourceid() #11

; Function Attrs: nounwind ssp uwtable
declare void @errlogFunc(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @compileoptionusedFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_compileoption_used(i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare void @compileoptiongetFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readnone ssp uwtable
declare i8* @sqlite3_compileoption_get(i32) #23

; Function Attrs: nounwind ssp uwtable
declare void @quoteFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @unicodeFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @charFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @hexFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroblobFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @replaceFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @trimFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @loadExt(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_load_extension(%struct.sqlite3*, i8*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @avgFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @totalFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minmaxStep(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValueFinalize(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValue(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatValue(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @fkLookupParent(%struct.Parse*, i32, %struct.Table* readonly, %struct.Index*, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3IndexAffinityStr(%struct.sqlite3*, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableRegister(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableColumn(%struct.sqlite3*, %struct.Table*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkScanChildren(%struct.Parse*, %struct.SrcList*, %struct.Table*, %struct.Index* readonly, %struct.FKey* nocapture readonly, i32* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3PExpr(%struct.Parse* nocapture, i32, %struct.Expr*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.WhereInfo* @sqlite3WhereBegin(%struct.Parse*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.ExprList*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereEnd(%struct.WhereInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkTriggerDelete(%struct.sqlite3*, %struct.Trigger*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkChildIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkParentIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isSetNullAction(%struct.Parse* nocapture readonly, %struct.FKey* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.Trigger* @fkActionTrigger(%struct.Parse*, %struct.Table* nocapture readonly, %struct.FKey* nocapture, %struct.ExprList* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkLocateIndex(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, %struct.Index** nocapture, i32**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectNew(%struct.Parse* nocapture, %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, i32, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppend(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token* readonly, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readsTable(%struct.Parse*, i32, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprColumnFlagUnion(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @autoIncBegin(%struct.Parse* nocapture, i32, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @autoIncStep(%struct.Parse* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @autoIncrementEnd(%struct.Parse*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @checkConstraintExprNode(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @xferCompatibleIndex(%struct.Index* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @xferOptimization(%struct.Parse*, %struct.Table*, %struct.Select* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_exec(%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_enable_load_extension(%struct.sqlite3* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_auto_extension(void ()*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_cancel_auto_extension(void ()* readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_reset_auto_extension() #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @getSafetyLevel(i8* readonly, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getLockingMode(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAutoVacuum(i8* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getTempStore(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @invalidateTempStorage(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @changeTempStorage(%struct.Parse* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setPragmaResultColumnNames(%struct.Vdbe* nocapture, %struct.PragmaName* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleInt(%struct.Vdbe*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleText(%struct.Vdbe* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setAllPagerFlags(%struct.sqlite3* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @actionName(i8 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.PragmaName* @pragmaLocate(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pragmaFunclistLine(%struct.Vdbe* nocapture, %struct.FuncDef* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMultiLoad(%struct.Vdbe* nocapture, i32, i8* nocapture readonly, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @integrityCheckResultRow(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @corruptSchema(%struct.InitData* nocapture, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @schemaIsValid(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3LockAndPrepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare16(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @clearSelect(%struct.sqlite3*, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SrcListDelete(%struct.sqlite3*, %struct.SrcList*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @findRightmost(%struct.Select* readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @columnIndex(%struct.Table* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @tableAndColumnIndex(%struct.SrcList* nocapture readonly, i32, i8* nocapture readonly, i32*, i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @addWhereTerm(%struct.Parse* nocapture, %struct.SrcList* nocapture, i32, i32, i32, i32, i32, %struct.Expr** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @unsetJoinExpr(%struct.Expr*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteProcessJoin(%struct.Parse* nocapture, %struct.Select* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SetJoinExpr(%struct.Expr*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @innerLoopLoadRow(%struct.Parse*, %struct.Select* nocapture readonly, %struct.RowLoadInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeExprList(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @makeSorterRecord(%struct.Parse*, %struct.SortCtx* nocapture readonly, %struct.Select* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pushOntoSorter(%struct.Parse*, %struct.SortCtx* nocapture, %struct.Select* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeOffset(%struct.Vdbe* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeDistinct(%struct.Parse* nocapture, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @selectInnerLoop(%struct.Parse*, %struct.Select* nocapture readonly, i32, %struct.SortCtx*, %struct.DistinctCtx* readonly, %struct.SelectDest* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3ExprCollSeq(%struct.Parse* nocapture, %struct.Expr* readonly) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @selectOpName(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @explainTempTable(%struct.Parse* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeExplain(%struct.Parse* nocapture, i8 zeroext, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateSortTail(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SortCtx* nocapture readonly, i32, %struct.SelectDest* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @columnTypeImpl(%struct.NameContext*, %struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnTypes(%struct.Parse*, %struct.SrcList*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnNames(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @computeLimitRegisters(%struct.Parse*, %struct.Select* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @multiSelectCollSeq(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.KeyInfo* @multiSelectOrderByKeyInfo(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateWithRecursiveQuery(%struct.Parse*, %struct.Select*, %struct.SelectDest*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Select(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectValues(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelect(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectOrderBy(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @generateOutputSubroutine(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SelectDest* nocapture readonly, %struct.SelectDest* nocapture, i32, i32, %struct.KeyInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @substExpr(%struct.SubstContext* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substSelect(%struct.SubstContext* nocapture readonly, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substExprList(%struct.SubstContext*, %struct.ExprList*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flattenSubquery(%struct.Parse*, %struct.Select*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListEnlarge(%struct.Parse* nocapture, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @constInsert(%struct.WhereConst* nocapture, %struct.Expr*, %struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @findConstInWhere(%struct.WhereConst*, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstantExprRewrite(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstants(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3SelectWalkNoop(%struct.Walker* nocapture readnone, %struct.Select* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @pushDownWhereTerms(%struct.Parse*, %struct.Select*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @minMaxQuery(%struct.sqlite3*, %struct.Expr* nocapture readonly, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @isSimpleCount(%struct.Select* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @convertCompoundSelectToSubquery(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppendFromTerm(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token*, %struct.Token*, %struct.Token* readonly, %struct.Select*, %struct.Expr*, %struct.IdList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @cannotBeFunction(%struct.Parse* nocapture, %struct.SrcList_item* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.Cte* @searchWith(%struct.With*, %struct.SrcList_item* nocapture readonly, %struct.With** nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @withExpand(%struct.Walker*, %struct.SrcList_item* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ColumnsFromExprList(%struct.sqlite3*, %struct.ExprList* readonly, i16* nocapture, %struct.Column** nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @selectPopWith(%struct.Walker* nocapture readonly, %struct.Select* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @selectExpander(%struct.Walker*, %struct.Select* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SrcListAssignCursors(%struct.Parse* nocapture, %struct.SrcList*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @selectAddSubqueryTypeInfo(%struct.Walker* nocapture readonly, %struct.Select* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectAddColumnTypeAndCollation(%struct.Parse* nocapture, %struct.Table* nocapture, %struct.Select* nocapture readonly, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resetAccumulator(%struct.Parse* nocapture, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @finalizeAggFunctions(%struct.Parse* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @updateAccumulator(%struct.Parse*, i32, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfFalse(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @explainSimpleCount(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @havingToWhereExprCb(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @havingToWhere(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList_item* @isSelfJoinView(%struct.SrcList* readonly, %struct.SrcList_item* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table_cb(i8* nocapture, i32, i8** readonly, i8** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table(%struct.sqlite3*, i8*, i8*** nocapture, i32*, i32*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_table(i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @triggerSpanDup(%struct.sqlite3*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerStep* @triggerStepAllocate(%struct.Parse* nocapture, i8 zeroext, %struct.Token* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @tableOfTrigger(%struct.Trigger* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @checkColumnOverlap(%struct.IdList* readonly, %struct.ExprList* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList* @targetSrcList(%struct.Parse* nocapture readonly, %struct.TriggerStep* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeTriggerProgram(%struct.Parse*, %struct.TriggerStep* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Update(%struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.Expr*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Insert(%struct.Parse*, %struct.SrcList*, %struct.Select*, %struct.IdList*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListDup(%struct.sqlite3*, %struct.IdList* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteFrom(%struct.Parse*, %struct.SrcList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @transferParseError(%struct.Parse* nocapture, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @codeRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeDelete(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @getRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexColumnIsBeingUpdated(%struct.Index* nocapture readonly, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexWhereClauseMightChange(%struct.Index* nocapture readonly, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSql(%struct.sqlite3*, i8** nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSqlF(%struct.sqlite3*, i8** nocapture, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @explainIndexColumnName(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @explainAppendTerm(%struct.sqlite3_str*, %struct.Index* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @explainIndexRange(%struct.sqlite3_str*, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableTerm(%struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeApplyAffinity(%struct.Parse* nocapture readonly, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @updateRangeAffinityStr(%struct.Expr* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @removeUnindexableInClauseTerms(%struct.Parse* nocapture readonly, i32, %struct.WhereLoop* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeEqualityTerm(%struct.Parse*, %struct.WhereTerm* nocapture, %struct.WhereLevel* nocapture, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindInIndex(%struct.Parse*, %struct.Expr*, i32, i32*, i32*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeAllEqualityTerms(%struct.Parse*, %struct.WhereLevel*, i32, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLikeOptimizationStringFixup(%struct.Vdbe* nocapture readonly, %struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeDeferredSeek(%struct.WhereInfo* nocapture, %struct.Index* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeExprOrVector(%struct.Parse*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @preserveExpr(%struct.IdxExprTrans* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransNode(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransColumn(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @whereIndexExprTrans(%struct.Index* nocapture readonly, i32, i32, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereApplyPartialIndexConstraints(%struct.Expr* readonly, i32, %struct.WhereClause* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereOrInfoDelete(%struct.sqlite3*, %struct.WhereOrInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereClauseClear(%struct.WhereClause* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereAndInfoDelete(%struct.sqlite3*, %struct.WhereAndInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereClauseInsert(%struct.WhereClause*, %struct.Expr*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @allowedOp(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @exprCommute(%struct.Parse* nocapture, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @operatorMask(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @isLikeOrGlob(%struct.Parse*, %struct.Expr* nocapture readonly, %struct.Expr** nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @transferJoinMarkings(%struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @markTermAsChild(%struct.WhereClause* nocapture readonly, i32, i32) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereTerm* @whereNthSubterm(%struct.WhereTerm* readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @whereCombineDisjuncts(%struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.WhereTerm* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyze(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyzeOrTerm(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereSplit(%struct.WhereClause*, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @termIsEquivalence(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i64 @exprSelectUsage(%struct.WhereMaskSet* nocapture, %struct.Select* readonly) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @exprMightBeIndexed2(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @exprMightBeIndexed(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCheckIN(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereExprUsageNN(%struct.WhereMaskSet* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @whereOrMove(%struct.WhereOrSet*, %struct.WhereOrSet*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereOrInsert(%struct.WhereOrSet* nocapture, i64, i16 signext, i16 signext) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @createMask(%struct.WhereMaskSet* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanNext(%struct.WhereScan* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInitIndexExpr(%struct.WhereScan* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInit(%struct.WhereScan* nocapture, %struct.WhereClause*, i32, i32, i32, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findIndexCol(%struct.Parse* nocapture, %struct.ExprList* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @indexColumnNotNull(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDistinctRedundant(%struct.Parse* nocapture, %struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare signext i16 @estLog(i16 signext) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @translateColumnToCopy(%struct.Parse* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #15

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @termCanDriveIndex(%struct.WhereTerm* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @constructAutomaticIndex(%struct.Parse*, %struct.WhereClause* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64, %struct.WhereLevel* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopResize(%struct.sqlite3*, %struct.WhereLoop*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GenerateIndexKey(%struct.Parse*, %struct.Index* nocapture, i32, i32, i32, i32*, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereRangeAdjust(%struct.WhereTerm* readonly, i16 signext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereRangeScanEst(%struct.Parse* nocapture readnone, %struct.WhereLoopBuilder* nocapture readnone, %struct.WhereTerm* readonly, %struct.WhereTerm* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @whereLoopInit(%struct.WhereLoop*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClearUnion(%struct.sqlite3*, %struct.WhereLoop* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClear(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopXfer(%struct.sqlite3*, %struct.WhereLoop*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopDelete(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereInfoFree(%struct.sqlite3*, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @whereLoopCheaperProperSubset(%struct.WhereLoop* nocapture readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLoopAdjustCost(%struct.WhereLoop* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereLoop** @whereLoopFindLesser(%struct.WhereLoop** readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopInsert(%struct.WhereLoopBuilder* nocapture, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopOutputAdjust(%struct.WhereClause* nocapture readonly, %struct.WhereLoop* nocapture, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereRangeVectorLen(%struct.Parse* nocapture, i32, %struct.Index* nocapture readonly, i32, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtreeIndex(%struct.WhereLoopBuilder*, %struct.SrcList_item* readonly, %struct.Index* readonly, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexMightHelpWithOrderBy(%struct.WhereLoopBuilder* nocapture readonly, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereUsablePartialIndex(i32, i32, %struct.WhereClause* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtree(%struct.WhereLoopBuilder*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddOr(%struct.WhereLoopBuilder* nocapture, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddAll(%struct.WhereLoopBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare signext i8 @wherePathSatisfiesOrderBy(%struct.WhereInfo*, %struct.ExprList* nocapture readonly, %struct.WherePath* nocapture readonly, i16 zeroext, i16 zeroext, %struct.WhereLoop* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereSortingCost(%struct.WhereInfo* nocapture readonly, i16 signext, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @wherePathSolver(%struct.WhereInfo*, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereShortCut(%struct.WhereLoopBuilder* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsDeterministic(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsDeterministic(%struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopValueFunc(%struct.sqlite3_context* nocapture) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.Window* @windowFind(%struct.Parse* nocapture, %struct.Window*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteExprCb(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteSelectCb(%struct.Walker*, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare void @selectWindowRewriteEList(%struct.Parse*, %struct.Window*, %struct.SrcList*, %struct.ExprList* readonly, %struct.Table*, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.ExprList* @exprListAppendList(%struct.Parse* nocapture readonly, %struct.ExprList*, %struct.ExprList* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCheckValue(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowArgCount(%struct.Window* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowReadPeerValues(%struct.WindowCodeArg* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggStep(%struct.WindowCodeArg* nocapture readonly, %struct.Window* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggFinal(%struct.WindowCodeArg* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowFullScan(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowReturnOneRow(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowInitAccum(%struct.Parse*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowCacheFrame(%struct.Window* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowIfNewPeer(%struct.Parse*, %struct.ExprList* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCodeRangeTest(%struct.WindowCodeArg* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowCodeOp(%struct.WindowCodeArg*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowExprGtZero(%struct.Parse* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableLookaside(%struct.Parse* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @yy_destructor(%struct.yyParser* nocapture readonly, i16 zeroext, %union.YYMINORTYPE* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowDelete(%struct.sqlite3*, %struct.Window*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteTriggerStep(%struct.sqlite3*, %struct.TriggerStep*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_pop_parser_stack(%struct.yyParser* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_shift_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_reduce_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @yyStackOverflow(%struct.yyParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_shift(%struct.yyParser*, i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @yy_reduce(%struct.yyParser*, i32, i32, i8*, i32, %struct.Parse*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3StartTable(%struct.Parse*, %struct.Token*, %struct.Token*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3EndTable(%struct.Parse*, %struct.Token* nocapture readonly, %struct.Token* readonly, i8 zeroext, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddDefaultValue(%struct.Parse*, %struct.Expr*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @tokenExpr(%struct.Parse* nocapture, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddPrimaryKey(%struct.Parse*, %struct.ExprList*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateForeignKey(%struct.Parse* nocapture, %struct.ExprList*, %struct.Token*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddGenerated(%struct.Parse* nocapture, %struct.Expr*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTable(%struct.Parse*, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3JoinType(%struct.Parse* nocapture, %struct.Token*, %struct.Token*, %struct.Token*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppendVector(%struct.Parse*, %struct.ExprList*, %struct.IdList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListAppend(%struct.Parse* nocapture, %struct.IdList*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GetInt32(i8* nocapture readonly, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Vacuum(%struct.Parse*, %struct.Token*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Pragma(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.Token*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Analyze(%struct.Parse*, %struct.Token*, %struct.Token* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.With* @sqlite3WithAdd(%struct.Parse* nocapture, %struct.With*, %struct.Token* readonly, %struct.ExprList*, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowChain(%struct.Parse* nocapture, %struct.Window* nocapture, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowAlloc(%struct.Parse*, i32, i32, %struct.Expr*, i32, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_syntax_error(%struct.yyParser* nocapture, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @yy_accept(%struct.yyParser* nocapture) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @keywordCode(i8* nocapture readonly, i32 returned, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_keyword_name(i32, i8** nocapture, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_keyword_count() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_keyword_check(i8* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getToken(i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local i32 @sqlite3GetToken(i8* readonly, i32*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeWindowKeyword(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeOverKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeFilterKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_complete(i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_complete16(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_libversion_number() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_threadsafe() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_shutdown() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_config(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setupLookaside(%struct.sqlite3*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_db_mutex(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_release_memory(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_cacheflush(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_config(%struct.sqlite3*, i32, ...) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @binCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @rtrimCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nocaseCollatingFunc(i8* nocapture readnone, i32, i8* readonly, i32, i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_last_insert_rowid(%struct.sqlite3* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @functionDestroy(%struct.sqlite3*, %struct.FuncDef* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @disconnectAllVtab(%struct.sqlite3* nocapture) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @connectionIsBusy(%struct.sqlite3* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Close(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close_v2(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteDefaultBusyCallback(i8* nocapture readonly, i32, %struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_handler(%struct.sqlite3* nocapture, i32 (i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_progress_handler(%struct.sqlite3* nocapture, i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_timeout(%struct.sqlite3*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_interrupt(%struct.sqlite3*) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @createFunctionApi(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CreateFunc(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, %struct.FuncDestructor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function_v2(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_window_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function16(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_overload_function(%struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3InvalidFunction(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_commit_hook(%struct.sqlite3* nocapture, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_update_hook(%struct.sqlite3* nocapture, void (i8*, i32, i8*, i8*, i64)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_rollback_hook(%struct.sqlite3* nocapture, void (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_autocheckpoint(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_wal_hook(%struct.sqlite3* nocapture, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalDefaultHook(i8*, %struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint_v2(%struct.sqlite3*, i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Checkpoint(%struct.sqlite3* nocapture readonly, i32, i32, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint(%struct.sqlite3*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg16(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_system_errno(%struct.sqlite3* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_errstr(i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @createCollation(%struct.sqlite3*, i8*, i8 zeroext, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @sqlite3_limit(%struct.sqlite3* nocapture, i32, i32) #15

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @uriParameter(i8* readonly, i8* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @openDatabase(i8*, %struct.sqlite3** nocapture, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open_v2(i8*, %struct.sqlite3** nocapture, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open16(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation_v2(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation16(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed16(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_global_recover() local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_get_autocommit(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @sqlite3_thread_cleanup() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_table_column_metadata(%struct.sqlite3*, i8* readonly, i8*, i8*, i8**, i8**, i32*, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_sleep(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_result_codes(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_file_control(%struct.sqlite3* nocapture readonly, i8* readonly, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_test_control(i32, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @databaseName(i8* readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare nonnull i8* @appendText(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_create_filename(i8*, i8*, i8*, i32, i8** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_key(i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_uri_int64(i8* readonly, i8* readonly, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_filename_database(i8* readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_journal(i8* readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_wal(i8* readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_db_filename(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_db_readonly(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ErrorFinish(%struct.sqlite3* nocapture, i32) unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3BitvecClear(%struct.Bitvec*, i32, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeTripAllCursors(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeCloseCursor(%struct.BtCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeSorterReset(%struct.sqlite3*, %struct.VdbeSorter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeTransferError(%struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RollbackAll(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #24

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3NoopDestructor(i8* nocapture) #11

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFinishMoveto(%struct.VdbeCursor* nocapture) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SchemaClear(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitOne(%struct.sqlite3*, i32, i8**, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitCallback(i8* nocapture, i32, i8**, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AnalysisLoad(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFrameMemDel(i8*) #15

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetJournalMode(%struct.Pager*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3RunVacuum(i8** nocapture, %struct.sqlite3*, i32, %struct.sqlite3_value*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RowSetDelete(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalClose(%struct.Wal*, %struct.sqlite3*, i32, i32, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i32, i8*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetSpillSize(%struct.Btree* nocapture, i32) unnamed_addr #3

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) local_unnamed_addr #12

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelectExpr(%struct.Walker*, %struct.Select* nocapture readonly) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ExprDeleteNN(%struct.sqlite3*, %struct.Expr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListDup(%struct.sqlite3*, %struct.SrcList* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGeneratedColumn(%struct.Parse*, %struct.Column*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeRunJustOnce(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeIN(%struct.Parse*, %struct.Expr*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeCopy(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGetColumnOfTable(%struct.Vdbe* nocapture, %struct.Table* readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3BlobCompare(%struct.sqlite3_value* nocapture readonly, %struct.sqlite3_value* nocapture readonly) unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WindowCompare(%struct.Parse*, %struct.Window* readonly, %struct.Window* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.KeyInfo* @sqlite3KeyInfoOfIndex(%struct.Parse* nocapture, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3PagerClose(%struct.Pager*, %struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AuthReadCol(%struct.Parse* nocapture, i8*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ReadSchema(%struct.Parse*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Table* @sqlite3ResultSetOfSelect(%struct.Parse*, %struct.Select*, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSrcList(%struct.DbFixer* nocapture readonly, %struct.SrcList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CheckObjectName(%struct.Parse* nocapture, i8*, i8* readonly, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindDb(%struct.sqlite3*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSelect(%struct.DbFixer* nocapture readonly, %struct.Select* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixExpr(%struct.DbFixer* nocapture readonly, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UniqueConstraint(%struct.Parse*, i32, %struct.Index* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3GetCollSeq(%struct.Parse* nocapture, i8 zeroext, %struct.CollSeq*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3ExprWalkNoop(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readnone) #11

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprSimplifiedAndOr(%struct.Expr* readonly) unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfTrue(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTableAndIndices(%struct.Parse*, %struct.Table* nocapture readonly, i32, i8 zeroext, i32, i8* readonly, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ComputeGeneratedColumns(%struct.Parse*, i32, %struct.Table*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableAffinity(%struct.Vdbe* nocapture, %struct.Table* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeRowTrigger(%struct.Parse*, %struct.Trigger*, i32, %struct.ExprList* readonly, i32, %struct.Table*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateConstraintChecks(%struct.Parse*, %struct.Table*, i32* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i32, i32* nocapture, i32*, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3FkCheck(%struct.Parse*, %struct.Table*, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CompleteInsertion(%struct.Parse*, %struct.Table*, i32, i32, i32, i32* nocapture readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowDelete(%struct.Parse*, %struct.Table*, %struct.Trigger*, i32, i32, i32, i16 signext, i8 zeroext, i8 zeroext, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowIndexDelete(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UpsertDoUpdate(%struct.Parse*, %struct.Upsert*, %struct.Table* nocapture readonly, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkOldmask(%struct.Parse* nocapture, %struct.Table* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MaterializeView(%struct.Parse*, %struct.Table* nocapture readonly, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SetHasNullFlag(%struct.Vdbe* nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereExplainOneScan(%struct.Parse* nocapture readonly, %struct.SrcList* nocapture readonly, %struct.WhereLevel* nocapture readonly, i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereCodeOneLoopStart(%struct.Parse*, %struct.Vdbe*, %struct.WhereInfo*, i32, %struct.WhereLevel*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeVerifyNamedSchema(%struct.Parse* nocapture, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeDropTable(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTriggerPtr(%struct.Parse*, %struct.Trigger* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3WindowOffsetExpr(%struct.Parse*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemMalloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MemFree(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemRealloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemSize(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3MemRoundup(i32) #11

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemInit(i8* nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3MemShutdown(i8* nocapture) #11

; Function Attrs: allocsize(1)
declare i8* @malloc_zone_malloc(%struct._malloc_zone_t*, i64) local_unnamed_addr #26

declare void @malloc_zone_free(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: allocsize(2)
declare i8* @malloc_zone_realloc(%struct._malloc_zone_t*, i8*, i64) local_unnamed_addr #27

declare i64 @malloc_size(i8*) local_unnamed_addr #12

declare i32 @sysctlbyname(i8*, i8*, i64*, i8*, i64) local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_default_zone() local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_create_zone(i64, i32) local_unnamed_addr #12

declare void @malloc_set_zone_name(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #28

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #28

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) local_unnamed_addr #29

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #28

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #30

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #28

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree
declare i64 @strlcat(i8*, i8*, i64) #31

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) #31

attributes #0 = { norecurse nounwind nonlazybind uwtable willreturn "nonfree" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { alwaysinline nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noinline nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree noinline norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { noinline nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { allocsize(2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { nounwind readnone speculatable willreturn }
attributes #29 = { nofree nounwind }
attributes #30 = { cold noreturn nounwind }
attributes #31 = { nofree }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 7, !"PIC Level", i32 2}
!5 = !{!"clang version 11.0.0 (https://github.com/KowalskiThomas/LLVM 63660cfe7d4c851881497a874a10f82c1b74cd5a)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"double", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"UnpackedRecord", !13, i64 0, !13, i64 8, !14, i64 16, !8, i64 18, !8, i64 19, !8, i64 20, !8, i64 21, !8, i64 22}
!13 = !{!"any pointer", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!12, !8, i64 18}
!16 = !{!17, !17, i64 0}
!17 = !{!"long long", !8, i64 0}
!18 = !{!19, !8, i64 4}
!19 = !{!"KeyInfo", !20, i64 0, !8, i64 4, !14, i64 6, !14, i64 8, !13, i64 16, !13, i64 24, !8, i64 32}
!20 = !{!"int", !8, i64 0}
!21 = !{!22, !8, i64 10}
!22 = !{!"sqlite3_value", !8, i64 0, !14, i64 8, !8, i64 10, !8, i64 11, !20, i64 12, !13, i64 16, !13, i64 24, !20, i64 32, !20, i64 36, !13, i64 40, !13, i64 48}
!23 = !{!19, !13, i64 16}
!24 = !{!22, !13, i64 40}
!25 = !{!22, !20, i64 32}
!26 = !{!22, !13, i64 16}
!27 = !{!12, !14, i64 16}
!28 = !{!22, !14, i64 8}
!29 = !{!22, !20, i64 12}
!30 = !{!22, !13, i64 24}
!31 = !{!32, !13, i64 8}
!32 = !{!"sqlite3_str", !13, i64 0, !13, i64 8, !20, i64 16, !20, i64 20, !20, i64 24, !8, i64 28, !8, i64 29}
!33 = !{!32, !13, i64 0}
!34 = !{!32, !20, i64 16}
!35 = !{!32, !20, i64 24}
!36 = !{!14, !14, i64 0}
!37 = distinct !DISubprogram(name: "jittedFunction", linkageName: "jittedFunction", scope: null, file: !38, line: 1610, type: !39, scopeLine: 1610, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !40)
!38 = !DIFile(filename: "../src/mlir/thomas/ModuleWriter.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!39 = !DISubroutineType(types: !40)
!40 = !{}
!41 = !DILocation(line: 100, scope: !42)
!42 = !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!43 = !DILocation(line: 102, scope: !42)
!44 = !DILocation(line: 106, scope: !42)
!45 = !DILocation(line: 107, scope: !42)
!46 = !DILocation(line: 111, scope: !42)
!47 = !DILocation(line: 112, scope: !42)
!48 = !DILocation(line: 116, scope: !42)
!49 = !DILocation(line: 117, scope: !42)
!50 = !DILocation(line: 131, scope: !42)
!51 = !DILocation(line: 135, scope: !42)
!52 = !DILocation(line: 136, scope: !42)
!53 = !DILocation(line: 164, scope: !42)
!54 = !DILocation(line: 24, scope: !55)
!55 = !DILexicalBlockFile(scope: !37, file: !56, discriminator: 0)
!56 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!57 = !DILocation(line: 28, scope: !55)
!58 = !DILocation(line: 34, scope: !55)
!59 = !DILocation(line: 38, scope: !55)
!60 = !DILocation(line: 39, scope: !55)
!61 = !DILocation(line: 40, scope: !55)
!62 = !DILocation(line: 46, scope: !55)
!63 = !DILocation(line: 37, scope: !64)
!64 = !DILexicalBlockFile(scope: !37, file: !65, discriminator: 0)
!65 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterOpenLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!66 = !DILocation(line: 45, scope: !64)
!67 = !DILocation(line: 50, scope: !64)
!68 = !DILocation(line: 52, scope: !64)
!69 = !DILocation(line: 53, scope: !64)
!70 = !DILocation(line: 54, scope: !64)
!71 = !DILocation(line: 55, scope: !64)
!72 = !DILocation(line: 57, scope: !64)
!73 = !DILocation(line: 59, scope: !64)
!74 = !DILocation(line: 1567, scope: !42)
!75 = !DILocation(line: 30, scope: !76)
!76 = !DILexicalBlockFile(scope: !37, file: !77, discriminator: 0)
!77 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IntegerLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!78 = !DILocation(line: 36, scope: !76)
!79 = !DILocation(line: 34, scope: !80)
!80 = !DILexicalBlockFile(scope: !37, file: !81, discriminator: 0)
!81 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/OutToPrerelease.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!82 = !DILocation(line: 38, scope: !80)
!83 = !DILocation(line: 41, scope: !80)
!84 = !DILocation(line: 39, scope: !76)
!85 = !DILocation(line: 40, scope: !76)
!86 = !DILocation(line: 42, scope: !76)
!87 = !DILocation(line: 42, scope: !88)
!88 = !DILexicalBlockFile(scope: !37, file: !89, discriminator: 0)
!89 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!90 = !DILocation(line: 43, scope: !88)
!91 = !DILocation(line: 52, scope: !88)
!92 = !DILocation(line: 55, scope: !88)
!93 = !DILocation(line: 58, scope: !88)
!94 = !DILocation(line: 59, scope: !88)
!95 = !DILocation(line: 35, scope: !96)
!96 = !DILexicalBlockFile(scope: !37, file: !97, discriminator: 0)
!97 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/GosubLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!98 = !DILocation(line: 38, scope: !96)
!99 = !DILocation(line: 39, scope: !96)
!100 = !DILocation(line: 42, scope: !96)
!101 = !DILocation(line: 43, scope: !96)
!102 = !DILocation(line: 45, scope: !96)
!103 = !DILocation(line: 51, scope: !96)
!104 = !DILocation(line: 37, scope: !105)
!105 = !DILexicalBlockFile(scope: !37, file: !106, discriminator: 0)
!106 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenReadLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!107 = !DILocation(line: 38, scope: !105)
!108 = !DILocation(line: 39, scope: !105)
!109 = !DILocation(line: 43, scope: !105)
!110 = !DILocation(line: 45, scope: !105)
!111 = !DILocation(line: 94, scope: !105)
!112 = !DILocation(line: 103, scope: !105)
!113 = !DILocation(line: 104, scope: !105)
!114 = !DILocation(line: 107, scope: !105)
!115 = !DILocation(line: 109, scope: !105)
!116 = !DILocation(line: 111, scope: !105)
!117 = !DILocation(line: 112, scope: !105)
!118 = !DILocation(line: 115, scope: !105)
!119 = !DILocation(line: 117, scope: !105)
!120 = !DILocation(line: 120, scope: !105)
!121 = !DILocation(line: 126, scope: !105)
!122 = !DILocation(line: 129, scope: !105)
!123 = !DILocation(line: 136, scope: !105)
!124 = !DILocation(line: 138, scope: !105)
!125 = !DILocation(line: 141, scope: !105)
!126 = !DILocation(line: 142, scope: !105)
!127 = !DILocation(line: 145, scope: !105)
!128 = !DILocation(line: 28, scope: !129)
!129 = !DILexicalBlockFile(scope: !37, file: !130, discriminator: 0)
!130 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RewindLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!131 = !DILocation(line: 39, scope: !129)
!132 = !DILocation(line: 41, scope: !129)
!133 = !DILocation(line: 43, scope: !129)
!134 = !DILocation(line: 45, scope: !129)
!135 = !DILocation(line: 46, scope: !129)
!136 = !DILocation(line: 49, scope: !129)
!137 = !DILocation(line: 56, scope: !129)
!138 = !DILocation(line: 58, scope: !129)
!139 = !DILocation(line: 73, scope: !129)
!140 = !DILocation(line: 74, scope: !129)
!141 = !DILocation(line: 77, scope: !129)
!142 = !DILocation(line: 85, scope: !129)
!143 = !DILocation(line: 87, scope: !129)
!144 = !DILocation(line: 89, scope: !129)
!145 = !DILocation(line: 100, scope: !129)
!146 = !DILocation(line: 107, scope: !129)
!147 = !DILocation(line: 111, scope: !129)
!148 = !DILocation(line: 115, scope: !129)
!149 = !DILocation(line: 121, scope: !129)
!150 = !DILocation(line: 125, scope: !129)
!151 = !DILocation(line: 129, scope: !129)
!152 = !DILocation(line: 133, scope: !129)
!153 = !DILocation(line: 136, scope: !129)
!154 = !DILocation(line: 142, scope: !129)
!155 = !DILocation(line: 148, scope: !129)
!156 = !DILocation(line: 149, scope: !129)
!157 = !DILocation(line: 151, scope: !129)
!158 = !DILocation(line: 155, scope: !129)
!159 = !DILocation(line: 157, scope: !129)
!160 = !DILocation(line: 159, scope: !129)
!161 = !DILocation(line: 162, scope: !129)
!162 = !DILocation(line: 30, scope: !163)
!163 = !DILexicalBlockFile(scope: !37, file: !164, discriminator: 0)
!164 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ColumnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!165 = !DILocation(line: 42, scope: !163)
!166 = !DILocation(line: 43, scope: !163)
!167 = !DILocation(line: 60, scope: !163)
!168 = !DILocation(line: 61, scope: !163)
!169 = !DILocation(line: 67, scope: !163)
!170 = !DILocation(line: 72, scope: !163)
!171 = !DILocation(line: 73, scope: !163)
!172 = !DILocation(line: 74, scope: !163)
!173 = !DILocation(line: 85, scope: !163)
!174 = !DILocation(line: 88, scope: !163)
!175 = !DILocation(line: 93, scope: !163)
!176 = !DILocation(line: 103, scope: !163)
!177 = !DILocation(line: 120, scope: !163)
!178 = !DILocation(line: 126, scope: !163)
!179 = !DILocation(line: 130, scope: !163)
!180 = !DILocation(line: 142, scope: !163)
!181 = !DILocation(line: 147, scope: !163)
!182 = !DILocation(line: 153, scope: !163)
!183 = !DILocation(line: 159, scope: !163)
!184 = !DILocation(line: 168, scope: !163)
!185 = !DILocation(line: 174, scope: !163)
!186 = !DILocation(line: 179, scope: !163)
!187 = !DILocation(line: 181, scope: !163)
!188 = !DILocation(line: 199, scope: !163)
!189 = !DILocation(line: 206, scope: !163)
!190 = !DILocation(line: 214, scope: !163)
!191 = !DILocation(line: 222, scope: !163)
!192 = !DILocation(line: 230, scope: !163)
!193 = !DILocation(line: 248, scope: !163)
!194 = !DILocation(line: 253, scope: !163)
!195 = !DILocation(line: 257, scope: !163)
!196 = !DILocation(line: 261, scope: !163)
!197 = !DILocation(line: 264, scope: !163)
!198 = !DILocation(line: 268, scope: !163)
!199 = !DILocation(line: 303, scope: !163)
!200 = !DILocation(line: 498, scope: !163)
!201 = !DILocation(line: 499, scope: !163)
!202 = !DILocation(line: 504, scope: !163)
!203 = !DILocation(line: 23, scope: !204)
!204 = !DILexicalBlockFile(scope: !37, file: !205, discriminator: 0)
!205 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/GetVarint32.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!206 = !DILocation(line: 36, scope: !204)
!207 = !DILocation(line: 39, scope: !204)
!208 = !DILocation(line: 47, scope: !204)
!209 = !DILocation(line: 50, scope: !204)
!210 = !DILocation(line: 53, scope: !204)
!211 = !DILocation(line: 55, scope: !204)
!212 = !DILocation(line: 64, scope: !204)
!213 = !DILocation(line: 71, scope: !204)
!214 = !DILocation(line: 72, scope: !204)
!215 = !DILocation(line: 73, scope: !204)
!216 = !DILocation(line: 509, scope: !163)
!217 = !DILocation(line: 517, scope: !163)
!218 = !DILocation(line: 518, scope: !163)
!219 = !DILocation(line: 521, scope: !163)
!220 = !DILocation(line: 524, scope: !163)
!221 = !DILocation(line: 547, scope: !163)
!222 = !DILocation(line: 550, scope: !163)
!223 = !DILocation(line: 533, scope: !163)
!224 = !DILocation(line: 535, scope: !163)
!225 = !DILocation(line: 556, scope: !163)
!226 = !DILocation(line: 425, scope: !163)
!227 = !DILocation(line: 433, scope: !163)
!228 = !DILocation(line: 469, scope: !163)
!229 = !DILocation(line: 474, scope: !163)
!230 = !DILocation(line: 478, scope: !163)
!231 = !DILocation(line: 484, scope: !163)
!232 = !DILocation(line: 491, scope: !163)
!233 = !DILocation(line: 327, scope: !163)
!234 = !DILocation(line: 332, scope: !163)
!235 = !DILocation(line: 343, scope: !163)
!236 = !DILocation(line: 349, scope: !163)
!237 = !DILocation(line: 352, scope: !163)
!238 = !DILocation(line: 358, scope: !163)
!239 = !DILocation(line: 362, scope: !163)
!240 = !DILocation(line: 364, scope: !163)
!241 = !DILocation(line: 372, scope: !163)
!242 = !DILocation(line: 377, scope: !163)
!243 = !DILocation(line: 378, scope: !163)
!244 = !DILocation(line: 379, scope: !163)
!245 = !DILocation(line: 384, scope: !163)
!246 = !DILocation(line: 389, scope: !163)
!247 = !DILocation(line: 390, scope: !163)
!248 = !DILocation(line: 405, scope: !163)
!249 = !DILocation(line: 411, scope: !163)
!250 = !DILocation(line: 563, scope: !163)
!251 = !DILocation(line: 565, scope: !163)
!252 = !DILocation(line: 575, scope: !163)
!253 = !DILocation(line: 1037, scope: !163)
!254 = !DILocation(line: 1041, scope: !163)
!255 = !DILocation(line: 1042, scope: !163)
!256 = !DILocation(line: 1044, scope: !163)
!257 = !DILocation(line: 1057, scope: !163)
!258 = !DILocation(line: 1063, scope: !163)
!259 = !DILocation(line: 1072, scope: !163)
!260 = !DILocation(line: 1077, scope: !163)
!261 = !DILocation(line: 1083, scope: !163)
!262 = !DILocation(line: 1095, scope: !163)
!263 = !DILocation(line: 1097, scope: !163)
!264 = !DILocation(line: 1099, scope: !163)
!265 = !DILocation(line: 1101, scope: !163)
!266 = !DILocation(line: 1103, scope: !163)
!267 = !DILocation(line: 1109, scope: !163)
!268 = !DILocation(line: 1110, scope: !163)
!269 = !DILocation(line: 1112, scope: !163)
!270 = !DILocation(line: 1113, scope: !163)
!271 = !DILocation(line: 1114, scope: !163)
!272 = !DILocation(line: 1115, scope: !163)
!273 = !DILocation(line: 1116, scope: !163)
!274 = !DILocation(line: 1123, scope: !163)
!275 = !DILocation(line: 1124, scope: !163)
!276 = !DILocation(line: 1125, scope: !163)
!277 = !DILocation(line: 1130, scope: !163)
!278 = !DILocation(line: 1134, scope: !163)
!279 = !DILocation(line: 1140, scope: !163)
!280 = !DILocation(line: 1141, scope: !163)
!281 = !DILocation(line: 1142, scope: !163)
!282 = !DILocation(line: 1143, scope: !163)
!283 = !DILocation(line: 1145, scope: !163)
!284 = !DILocation(line: 1148, scope: !163)
!285 = !DILocation(line: 1149, scope: !163)
!286 = !DILocation(line: 1152, scope: !163)
!287 = !DILocation(line: 1157, scope: !163)
!288 = !DILocation(line: 1159, scope: !163)
!289 = !DILocation(line: 1163, scope: !163)
!290 = !DILocation(line: 1172, scope: !163)
!291 = !DILocation(line: 1182, scope: !163)
!292 = !DILocation(line: 1188, scope: !163)
!293 = !DILocation(line: 1190, scope: !163)
!294 = !DILocation(line: 1192, scope: !163)
!295 = !DILocation(line: 1194, scope: !163)
!296 = !DILocation(line: 1199, scope: !163)
!297 = !DILocation(line: 1201, scope: !163)
!298 = !DILocation(line: 1210, scope: !163)
!299 = !DILocation(line: 1217, scope: !163)
!300 = !DILocation(line: 1222, scope: !163)
!301 = !DILocation(line: 1225, scope: !163)
!302 = !DILocation(line: 1227, scope: !163)
!303 = !DILocation(line: 1234, scope: !163)
!304 = !DILocation(line: 1235, scope: !163)
!305 = !DILocation(line: 1236, scope: !163)
!306 = !DILocation(line: 1237, scope: !163)
!307 = !DILocation(line: 1242, scope: !163)
!308 = !DILocation(line: 1243, scope: !163)
!309 = !DILocation(line: 1245, scope: !163)
!310 = !DILocation(line: 1246, scope: !163)
!311 = !DILocation(line: 1247, scope: !163)
!312 = !DILocation(line: 1250, scope: !163)
!313 = !DILocation(line: 1252, scope: !163)
!314 = !DILocation(line: 1254, scope: !163)
!315 = !DILocation(line: 1256, scope: !163)
!316 = !DILocation(line: 1258, scope: !163)
!317 = !DILocation(line: 1268, scope: !163)
!318 = !DILocation(line: 1272, scope: !163)
!319 = !DILocation(line: 1281, scope: !163)
!320 = !DILocation(line: 1282, scope: !163)
!321 = !DILocation(line: 1283, scope: !163)
!322 = !DILocation(line: 1285, scope: !163)
!323 = !DILocation(line: 1287, scope: !163)
!324 = !DILocation(line: 1297, scope: !163)
!325 = !DILocation(line: 1300, scope: !163)
!326 = !DILocation(line: 1309, scope: !163)
!327 = !DILocation(line: 1326, scope: !163)
!328 = !DILocation(line: 1334, scope: !163)
!329 = !DILocation(line: 1340, scope: !163)
!330 = !DILocation(line: 1343, scope: !163)
!331 = !DILocation(line: 1354, scope: !163)
!332 = !DILocation(line: 1359, scope: !163)
!333 = !DILocation(line: 1363, scope: !163)
!334 = !DILocation(line: 1373, scope: !163)
!335 = !DILocation(line: 1375, scope: !163)
!336 = !DILocation(line: 1376, scope: !163)
!337 = !DILocation(line: 1378, scope: !163)
!338 = !DILocation(line: 1314, scope: !163)
!339 = !DILocation(line: 1318, scope: !163)
!340 = !DILocation(line: 1017, scope: !163)
!341 = !DILocation(line: 1023, scope: !163)
!342 = !DILocation(line: 1025, scope: !163)
!343 = !DILocation(line: 1027, scope: !163)
!344 = !DILocation(line: 584, scope: !163)
!345 = !DILocation(line: 585, scope: !163)
!346 = !DILocation(line: 586, scope: !163)
!347 = !DILocation(line: 595, scope: !163)
!348 = !DILocation(line: 605, scope: !163)
!349 = !DILocation(line: 607, scope: !163)
!350 = !DILocation(line: 614, scope: !163)
!351 = !DILocation(line: 628, scope: !163)
!352 = !DILocation(line: 629, scope: !163)
!353 = !DILocation(line: 644, scope: !163)
!354 = !DILocation(line: 645, scope: !163)
!355 = !DILocation(line: 646, scope: !163)
!356 = !DILocation(line: 647, scope: !163)
!357 = !DILocation(line: 649, scope: !163)
!358 = !DILocation(line: 651, scope: !163)
!359 = !DILocation(line: 654, scope: !163)
!360 = !DILocation(line: 655, scope: !163)
!361 = !DILocation(line: 656, scope: !163)
!362 = !DILocation(line: 658, scope: !163)
!363 = !DILocation(line: 659, scope: !163)
!364 = !DILocation(line: 662, scope: !163)
!365 = !DILocation(line: 664, scope: !163)
!366 = !DILocation(line: 666, scope: !163)
!367 = !DILocation(line: 668, scope: !163)
!368 = !DILocation(line: 670, scope: !163)
!369 = !DILocation(line: 684, scope: !163)
!370 = !DILocation(line: 695, scope: !163)
!371 = !DILocation(line: 697, scope: !163)
!372 = !DILocation(line: 703, scope: !163)
!373 = !DILocation(line: 704, scope: !163)
!374 = !DILocation(line: 705, scope: !163)
!375 = !DILocation(line: 708, scope: !163)
!376 = !DILocation(line: 710, scope: !163)
!377 = !DILocation(line: 713, scope: !163)
!378 = !DILocation(line: 717, scope: !163)
!379 = !DILocation(line: 786, scope: !163)
!380 = !DILocation(line: 788, scope: !163)
!381 = !DILocation(line: 790, scope: !163)
!382 = !DILocation(line: 794, scope: !163)
!383 = !DILocation(line: 795, scope: !163)
!384 = !DILocation(line: 796, scope: !163)
!385 = !DILocation(line: 799, scope: !163)
!386 = !DILocation(line: 804, scope: !163)
!387 = !DILocation(line: 814, scope: !163)
!388 = !DILocation(line: 817, scope: !163)
!389 = !DILocation(line: 821, scope: !163)
!390 = !DILocation(line: 822, scope: !163)
!391 = !DILocation(line: 823, scope: !163)
!392 = !DILocation(line: 825, scope: !163)
!393 = !DILocation(line: 830, scope: !163)
!394 = !DILocation(line: 833, scope: !163)
!395 = !DILocation(line: 750, scope: !163)
!396 = !DILocation(line: 753, scope: !163)
!397 = !DILocation(line: 760, scope: !163)
!398 = !DILocation(line: 766, scope: !163)
!399 = !DILocation(line: 769, scope: !163)
!400 = !DILocation(line: 770, scope: !163)
!401 = !DILocation(line: 773, scope: !163)
!402 = !DILocation(line: 775, scope: !163)
!403 = !DILocation(line: 778, scope: !163)
!404 = !DILocation(line: 779, scope: !163)
!405 = !DILocation(line: 780, scope: !163)
!406 = !DILocation(line: 782, scope: !163)
!407 = !DILocation(line: 723, scope: !163)
!408 = !DILocation(line: 726, scope: !163)
!409 = !DILocation(line: 730, scope: !163)
!410 = !DILocation(line: 731, scope: !163)
!411 = !DILocation(line: 732, scope: !163)
!412 = !DILocation(line: 733, scope: !163)
!413 = !DILocation(line: 734, scope: !163)
!414 = !DILocation(line: 737, scope: !163)
!415 = !DILocation(line: 739, scope: !163)
!416 = !DILocation(line: 741, scope: !163)
!417 = !DILocation(line: 743, scope: !163)
!418 = !DILocation(line: 843, scope: !163)
!419 = !DILocation(line: 844, scope: !163)
!420 = !DILocation(line: 845, scope: !163)
!421 = !DILocation(line: 853, scope: !163)
!422 = !DILocation(line: 857, scope: !163)
!423 = !DILocation(line: 861, scope: !163)
!424 = !DILocation(line: 865, scope: !163)
!425 = !DILocation(line: 869, scope: !163)
!426 = !DILocation(line: 870, scope: !163)
!427 = !DILocation(line: 871, scope: !163)
!428 = !DILocation(line: 877, scope: !163)
!429 = !DILocation(line: 887, scope: !163)
!430 = !DILocation(line: 889, scope: !163)
!431 = !DILocation(line: 892, scope: !163)
!432 = !DILocation(line: 897, scope: !163)
!433 = !DILocation(line: 898, scope: !163)
!434 = !DILocation(line: 900, scope: !163)
!435 = !DILocation(line: 922, scope: !163)
!436 = !DILocation(line: 923, scope: !163)
!437 = !DILocation(line: 924, scope: !163)
!438 = !DILocation(line: 927, scope: !163)
!439 = !DILocation(line: 928, scope: !163)
!440 = !DILocation(line: 929, scope: !163)
!441 = !DILocation(line: 930, scope: !163)
!442 = !DILocation(line: 931, scope: !163)
!443 = !DILocation(line: 932, scope: !163)
!444 = !DILocation(line: 933, scope: !163)
!445 = !DILocation(line: 946, scope: !163)
!446 = !DILocation(line: 961, scope: !163)
!447 = !DILocation(line: 963, scope: !163)
!448 = !DILocation(line: 972, scope: !163)
!449 = !DILocation(line: 974, scope: !163)
!450 = !DILocation(line: 975, scope: !163)
!451 = !DILocation(line: 1001, scope: !163)
!452 = !DILocation(line: 1391, scope: !163)
!453 = !DILocation(line: 41, scope: !454)
!454 = !DILexicalBlockFile(scope: !37, file: !455, discriminator: 0)
!455 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!456 = !DILocation(line: 43, scope: !454)
!457 = !DILocation(line: 44, scope: !454)
!458 = !DILocation(line: 45, scope: !454)
!459 = !DILocation(line: 47, scope: !454)
!460 = !DILocation(line: 49, scope: !454)
!461 = !DILocation(line: 50, scope: !454)
!462 = !DILocation(line: 51, scope: !454)
!463 = !DILocation(line: 58, scope: !454)
!464 = !DILocation(line: 60, scope: !454)
!465 = !DILocation(line: 65, scope: !454)
!466 = !DILocation(line: 66, scope: !454)
!467 = !DILocation(line: 69, scope: !454)
!468 = !DILocation(line: 72, scope: !454)
!469 = !DILocation(line: 73, scope: !454)
!470 = !DILocation(line: 74, scope: !454)
!471 = !DILocation(line: 75, scope: !454)
!472 = !DILocation(line: 81, scope: !454)
!473 = !DILocation(line: 85, scope: !454)
!474 = !DILocation(line: 86, scope: !454)
!475 = !DILocation(line: 87, scope: !454)
!476 = !DILocation(line: 88, scope: !454)
!477 = !DILocation(line: 90, scope: !454)
!478 = !DILocation(line: 95, scope: !454)
!479 = !DILocation(line: 96, scope: !454)
!480 = !DILocation(line: 97, scope: !454)
!481 = !DILocation(line: 98, scope: !454)
!482 = !DILocation(line: 100, scope: !454)
!483 = !DILocation(line: 106, scope: !454)
!484 = !DILocation(line: 107, scope: !454)
!485 = !DILocation(line: 110, scope: !454)
!486 = !DILocation(line: 111, scope: !454)
!487 = !DILocation(line: 114, scope: !454)
!488 = !DILocation(line: 117, scope: !454)
!489 = !DILocation(line: 118, scope: !454)
!490 = !DILocation(line: 125, scope: !454)
!491 = !DILocation(line: 128, scope: !454)
!492 = !DILocation(line: 129, scope: !454)
!493 = !DILocation(line: 132, scope: !454)
!494 = !DILocation(line: 133, scope: !454)
!495 = !DILocation(line: 136, scope: !454)
!496 = !DILocation(line: 137, scope: !454)
!497 = !DILocation(line: 140, scope: !454)
!498 = !DILocation(line: 141, scope: !454)
!499 = !DILocation(line: 144, scope: !454)
!500 = !DILocation(line: 145, scope: !454)
!501 = !DILocation(line: 146, scope: !454)
!502 = !DILocation(line: 155, scope: !454)
!503 = !DILocation(line: 157, scope: !454)
!504 = !DILocation(line: 165, scope: !454)
!505 = !DILocation(line: 166, scope: !454)
!506 = !DILocation(line: 178, scope: !454)
!507 = !DILocation(line: 183, scope: !454)
!508 = !DILocation(line: 184, scope: !454)
!509 = !DILocation(line: 1111, scope: !163)
!510 = !DILocation(line: 1339, scope: !163)
!511 = !DILocation(line: 36, scope: !512)
!512 = !DILexicalBlockFile(scope: !37, file: !513, discriminator: 0)
!513 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OnceLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!514 = !DILocation(line: 37, scope: !512)
!515 = !DILocation(line: 38, scope: !512)
!516 = !DILocation(line: 41, scope: !512)
!517 = !DILocation(line: 42, scope: !512)
!518 = !DILocation(line: 45, scope: !512)
!519 = !DILocation(line: 52, scope: !512)
!520 = !DILocation(line: 53, scope: !512)
!521 = !DILocation(line: 59, scope: !512)
!522 = !DILocation(line: 60, scope: !512)
!523 = !DILocation(line: 62, scope: !512)
!524 = !DILocation(line: 63, scope: !512)
!525 = !DILocation(line: 79, scope: !512)
!526 = !DILocation(line: 85, scope: !512)
!527 = !DILocation(line: 88, scope: !512)
!528 = !DILocation(line: 91, scope: !512)
!529 = !DILocation(line: 97, scope: !512)
!530 = !DILocation(line: 103, scope: !512)
!531 = !DILocation(line: 42, scope: !532)
!532 = !DILexicalBlockFile(scope: !37, file: !533, discriminator: 0)
!533 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/StringLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!534 = !DILocation(line: 43, scope: !532)
!535 = !DILocation(line: 48, scope: !532)
!536 = !DILocation(line: 49, scope: !532)
!537 = !DILocation(line: 50, scope: !532)
!538 = !DILocation(line: 51, scope: !532)
!539 = !DILocation(line: 52, scope: !532)
!540 = !DILocation(line: 55, scope: !532)
!541 = !DILocation(line: 56, scope: !532)
!542 = !DILocation(line: 57, scope: !532)
!543 = !DILocation(line: 58, scope: !532)
!544 = !DILocation(line: 59, scope: !532)
!545 = !DILocation(line: 60, scope: !532)
!546 = !DILocation(line: 40, scope: !547)
!547 = !DILexicalBlockFile(scope: !37, file: !548, discriminator: 0)
!548 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/FunctionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!549 = !DILocation(line: 42, scope: !547)
!550 = !DILocation(line: 44, scope: !547)
!551 = !DILocation(line: 45, scope: !547)
!552 = !DILocation(line: 46, scope: !547)
!553 = !DILocation(line: 47, scope: !547)
!554 = !DILocation(line: 48, scope: !547)
!555 = !DILocation(line: 49, scope: !547)
!556 = !DILocation(line: 50, scope: !547)
!557 = !DILocation(line: 51, scope: !547)
!558 = !DILocation(line: 52, scope: !547)
!559 = !DILocation(line: 53, scope: !547)
!560 = !DILocation(line: 55, scope: !547)
!561 = !DILocation(line: 56, scope: !547)
!562 = !DILocation(line: 66, scope: !547)
!563 = !DILocation(line: 67, scope: !547)
!564 = !DILocation(line: 65, scope: !547)
!565 = !DILocation(line: 70, scope: !547)
!566 = !DILocation(line: 75, scope: !547)
!567 = !DILocation(line: 76, scope: !547)
!568 = !DILocation(line: 79, scope: !547)
!569 = !DILocation(line: 83, scope: !547)
!570 = !DILocation(line: 85, scope: !547)
!571 = !DILocation(line: 88, scope: !547)
!572 = !DILocation(line: 98, scope: !547)
!573 = !DILocation(line: 25, scope: !547)
!574 = !DILocation(line: 102, scope: !547)
!575 = !DILocation(line: 109, scope: !547)
!576 = !DILocation(line: 110, scope: !547)
!577 = !DILocation(line: 111, scope: !547)
!578 = !DILocation(line: 114, scope: !547)
!579 = !DILocation(line: 115, scope: !547)
!580 = !DILocation(line: 121, scope: !547)
!581 = !DILocation(line: 127, scope: !547)
!582 = !DILocation(line: 123, scope: !547)
!583 = !DILocation(line: 136, scope: !547)
!584 = !DILocation(line: 138, scope: !547)
!585 = !DILocation(line: 144, scope: !547)
!586 = !DILocation(line: 163, scope: !547)
!587 = !DILocation(line: 164, scope: !547)
!588 = !DILocation(line: 165, scope: !547)
!589 = !DILocation(line: 167, scope: !547)
!590 = !DILocation(line: 171, scope: !547)
!591 = !DILocation(line: 174, scope: !547)
!592 = !DILocation(line: 179, scope: !547)
!593 = !DILocation(line: 58, scope: !594)
!594 = !DILexicalBlockFile(scope: !37, file: !595, discriminator: 0)
!595 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareJumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!596 = !DILocation(line: 61, scope: !594)
!597 = !DILocation(line: 63, scope: !594)
!598 = !DILocation(line: 66, scope: !594)
!599 = !DILocation(line: 69, scope: !594)
!600 = !DILocation(line: 72, scope: !594)
!601 = !DILocation(line: 73, scope: !594)
!602 = !DILocation(line: 74, scope: !594)
!603 = !DILocation(line: 75, scope: !594)
!604 = !DILocation(line: 78, scope: !594)
!605 = !DILocation(line: 79, scope: !594)
!606 = !DILocation(line: 80, scope: !594)
!607 = !DILocation(line: 81, scope: !594)
!608 = !DILocation(line: 236, scope: !594)
!609 = !DILocation(line: 238, scope: !594)
!610 = !DILocation(line: 244, scope: !594)
!611 = !DILocation(line: 246, scope: !594)
!612 = !DILocation(line: 332, scope: !594)
!613 = !DILocation(line: 334, scope: !594)
!614 = !DILocation(line: 503, scope: !594)
!615 = !DILocation(line: 505, scope: !594)
!616 = !DILocation(line: 508, scope: !594)
!617 = !DILocation(line: 510, scope: !594)
!618 = !DILocation(line: 513, scope: !594)
!619 = !DILocation(line: 515, scope: !594)
!620 = !DILocation(line: 518, scope: !594)
!621 = !DILocation(line: 520, scope: !594)
!622 = !DILocation(line: 526, scope: !594)
!623 = !DILocation(line: 528, scope: !594)
!624 = !DILocation(line: 532, scope: !594)
!625 = !DILocation(line: 539, scope: !594)
!626 = !DILocation(line: 540, scope: !594)
!627 = !DILocation(line: 541, scope: !594)
!628 = !DILocation(line: 542, scope: !594)
!629 = !DILocation(line: 544, scope: !594)
!630 = !DILocation(line: 553, scope: !594)
!631 = !DILocation(line: 555, scope: !594)
!632 = !DILocation(line: 559, scope: !594)
!633 = !DILocation(line: 566, scope: !594)
!634 = !DILocation(line: 567, scope: !594)
!635 = !DILocation(line: 568, scope: !594)
!636 = !DILocation(line: 569, scope: !594)
!637 = !DILocation(line: 571, scope: !594)
!638 = !DILocation(line: 579, scope: !594)
!639 = !DILocation(line: 580, scope: !594)
!640 = !DILocation(line: 581, scope: !594)
!641 = !DILocation(line: 582, scope: !594)
!642 = !DILocation(line: 583, scope: !594)
!643 = !DILocation(line: 588, scope: !594)
!644 = !DILocation(line: 612, scope: !594)
!645 = !DILocation(line: 614, scope: !594)
!646 = !DILocation(line: 619, scope: !594)
!647 = !DILocation(line: 621, scope: !594)
!648 = !DILocation(line: 0, scope: !594)
!649 = !DILocation(line: 650, scope: !594)
!650 = !DILocation(line: 652, scope: !594)
!651 = !DILocation(line: 688, scope: !594)
!652 = !DILocation(line: 689, scope: !594)
!653 = !DILocation(line: 690, scope: !594)
!654 = !DILocation(line: 691, scope: !594)
!655 = !DILocation(line: 84, scope: !547)
!656 = !DILocation(line: 356, scope: !594)
!657 = !DILocation(line: 358, scope: !594)
!658 = !DILocation(line: 360, scope: !594)
!659 = !DILocation(line: 369, scope: !594)
!660 = !DILocation(line: 370, scope: !594)
!661 = !DILocation(line: 372, scope: !594)
!662 = !DILocation(line: 377, scope: !594)
!663 = !DILocation(line: 42, scope: !664)
!664 = !DILexicalBlockFile(scope: !37, file: !665, discriminator: 0)
!665 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/ApplyNumericAffinity.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!666 = !DILocation(line: 384, scope: !594)
!667 = !DILocation(line: 385, scope: !594)
!668 = !DILocation(line: 387, scope: !594)
!669 = !DILocation(line: 398, scope: !594)
!670 = !DILocation(line: 400, scope: !594)
!671 = !DILocation(line: 402, scope: !594)
!672 = !DILocation(line: 407, scope: !594)
!673 = !DILocation(line: 413, scope: !594)
!674 = !DILocation(line: 425, scope: !594)
!675 = !DILocation(line: 427, scope: !594)
!676 = !DILocation(line: 430, scope: !594)
!677 = !DILocation(line: 432, scope: !594)
!678 = !DILocation(line: 439, scope: !594)
!679 = !DILocation(line: 441, scope: !594)
!680 = !DILocation(line: 444, scope: !594)
!681 = !DILocation(line: 445, scope: !594)
!682 = !DILocation(line: 446, scope: !594)
!683 = !DILocation(line: 447, scope: !594)
!684 = !DILocation(line: 449, scope: !594)
!685 = !DILocation(line: 450, scope: !594)
!686 = !DILocation(line: 456, scope: !594)
!687 = !DILocation(line: 458, scope: !594)
!688 = !DILocation(line: 462, scope: !594)
!689 = !DILocation(line: 464, scope: !594)
!690 = !DILocation(line: 474, scope: !594)
!691 = !DILocation(line: 476, scope: !594)
!692 = !DILocation(line: 480, scope: !594)
!693 = !DILocation(line: 482, scope: !594)
!694 = !DILocation(line: 487, scope: !594)
!695 = !DILocation(line: 489, scope: !594)
!696 = !DILocation(line: 595, scope: !594)
!697 = !DILocation(line: 611, scope: !594)
!698 = !DILocation(line: 626, scope: !594)
!699 = !DILocation(line: 628, scope: !594)
!700 = !DILocation(line: 634, scope: !594)
!701 = !DILocation(line: 636, scope: !594)
!702 = !DILocation(line: 642, scope: !594)
!703 = !DILocation(line: 644, scope: !594)
!704 = !DILocation(line: 39, scope: !705)
!705 = !DILexicalBlockFile(scope: !37, file: !706, discriminator: 0)
!706 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!707 = !DILocation(line: 40, scope: !705)
!708 = !DILocation(line: 43, scope: !705)
!709 = !DILocation(line: 44, scope: !705)
!710 = !DILocation(line: 47, scope: !705)
!711 = !DILocation(line: 48, scope: !705)
!712 = !DILocation(line: 51, scope: !705)
!713 = !DILocation(line: 52, scope: !705)
!714 = !DILocation(line: 53, scope: !705)
!715 = !DILocation(line: 68, scope: !705)
!716 = !DILocation(line: 73, scope: !705)
!717 = !DILocation(line: 74, scope: !705)
!718 = !DILocation(line: 77, scope: !705)
!719 = !DILocation(line: 82, scope: !705)
!720 = !DILocation(line: 83, scope: !705)
!721 = !DILocation(line: 84, scope: !705)
!722 = !DILocation(line: 86, scope: !705)
!723 = !DILocation(line: 92, scope: !705)
!724 = !DILocation(line: 93, scope: !705)
!725 = !DILocation(line: 94, scope: !705)
!726 = !DILocation(line: 96, scope: !705)
!727 = !DILocation(line: 102, scope: !705)
!728 = !DILocation(line: 103, scope: !705)
!729 = !DILocation(line: 104, scope: !705)
!730 = !DILocation(line: 106, scope: !705)
!731 = !DILocation(line: 120, scope: !705)
!732 = !DILocation(line: 128, scope: !705)
!733 = !DILocation(line: 129, scope: !705)
!734 = !DILocation(line: 135, scope: !705)
!735 = !DILocation(line: 140, scope: !705)
!736 = !DILocation(line: 141, scope: !705)
!737 = !DILocation(line: 144, scope: !705)
!738 = !DILocation(line: 149, scope: !705)
!739 = !DILocation(line: 150, scope: !705)
!740 = !DILocation(line: 151, scope: !705)
!741 = !DILocation(line: 152, scope: !705)
!742 = !DILocation(line: 154, scope: !705)
!743 = !DILocation(line: 159, scope: !705)
!744 = !DILocation(line: 160, scope: !705)
!745 = !DILocation(line: 161, scope: !705)
!746 = !DILocation(line: 162, scope: !705)
!747 = !DILocation(line: 164, scope: !705)
!748 = !DILocation(line: 167, scope: !705)
!749 = !DILocation(line: 35, scope: !750)
!750 = !DILexicalBlockFile(scope: !37, file: !751, discriminator: 0)
!751 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RealAffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!752 = !DILocation(line: 38, scope: !750)
!753 = !DILocation(line: 39, scope: !750)
!754 = !DILocation(line: 41, scope: !750)
!755 = !DILocation(line: 47, scope: !750)
!756 = !DILocation(line: 49, scope: !750)
!757 = !DILocation(line: 53, scope: !750)
!758 = !DILocation(line: 55, scope: !750)
!759 = !DILocation(line: 48, scope: !760)
!760 = !DILexicalBlockFile(scope: !37, file: !761, discriminator: 0)
!761 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MakeRecordLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!762 = !DILocation(line: 54, scope: !760)
!763 = !DILocation(line: 55, scope: !760)
!764 = !DILocation(line: 58, scope: !760)
!765 = !DILocation(line: 59, scope: !760)
!766 = !DILocation(line: 62, scope: !760)
!767 = !DILocation(line: 63, scope: !760)
!768 = !DILocation(line: 66, scope: !760)
!769 = !DILocation(line: 72, scope: !760)
!770 = !DILocation(line: 73, scope: !760)
!771 = !DILocation(line: 74, scope: !760)
!772 = !DILocation(line: 80, scope: !760)
!773 = !DILocation(line: 87, scope: !760)
!774 = !DILocation(line: 94, scope: !760)
!775 = !DILocation(line: 145, scope: !760)
!776 = !DILocation(line: 146, scope: !760)
!777 = !DILocation(line: 148, scope: !760)
!778 = !DILocation(line: 149, scope: !760)
!779 = !DILocation(line: 150, scope: !760)
!780 = !DILocation(line: 151, scope: !760)
!781 = !DILocation(line: 162, scope: !760)
!782 = !DILocation(line: 171, scope: !760)
!783 = !DILocation(line: 172, scope: !760)
!784 = !DILocation(line: 177, scope: !760)
!785 = !DILocation(line: 179, scope: !760)
!786 = !DILocation(line: 185, scope: !760)
!787 = !DILocation(line: 187, scope: !760)
!788 = !DILocation(line: 193, scope: !760)
!789 = !DILocation(line: 195, scope: !760)
!790 = !DILocation(line: 199, scope: !760)
!791 = !DILocation(line: 205, scope: !760)
!792 = !DILocation(line: 206, scope: !760)
!793 = !DILocation(line: 207, scope: !760)
!794 = !DILocation(line: 209, scope: !760)
!795 = !DILocation(line: 211, scope: !760)
!796 = !DILocation(line: 218, scope: !760)
!797 = !DILocation(line: 224, scope: !760)
!798 = !DILocation(line: 225, scope: !760)
!799 = !DILocation(line: 227, scope: !760)
!800 = !DILocation(line: 232, scope: !760)
!801 = !DILocation(line: 234, scope: !760)
!802 = !DILocation(line: 239, scope: !760)
!803 = !DILocation(line: 241, scope: !760)
!804 = !DILocation(line: 242, scope: !760)
!805 = !DILocation(line: 243, scope: !760)
!806 = !DILocation(line: 244, scope: !760)
!807 = !DILocation(line: 245, scope: !760)
!808 = !DILocation(line: 261, scope: !760)
!809 = !DILocation(line: 271, scope: !760)
!810 = !DILocation(line: 272, scope: !760)
!811 = !DILocation(line: 276, scope: !760)
!812 = !DILocation(line: 282, scope: !760)
!813 = !DILocation(line: 283, scope: !760)
!814 = !DILocation(line: 284, scope: !760)
!815 = !DILocation(line: 286, scope: !760)
!816 = !DILocation(line: 292, scope: !760)
!817 = !DILocation(line: 295, scope: !760)
!818 = !DILocation(line: 297, scope: !760)
!819 = !DILocation(line: 0, scope: !760)
!820 = !DILocation(line: 306, scope: !760)
!821 = !DILocation(line: 311, scope: !760)
!822 = !DILocation(line: 312, scope: !760)
!823 = !DILocation(line: 314, scope: !760)
!824 = !DILocation(line: 318, scope: !760)
!825 = !DILocation(line: 323, scope: !760)
!826 = !DILocation(line: 324, scope: !760)
!827 = !DILocation(line: 326, scope: !760)
!828 = !DILocation(line: 330, scope: !760)
!829 = !DILocation(line: 335, scope: !760)
!830 = !DILocation(line: 336, scope: !760)
!831 = !DILocation(line: 338, scope: !760)
!832 = !DILocation(line: 355, scope: !760)
!833 = !DILocation(line: 361, scope: !760)
!834 = !DILocation(line: 362, scope: !760)
!835 = !DILocation(line: 368, scope: !760)
!836 = !DILocation(line: 369, scope: !760)
!837 = !DILocation(line: 370, scope: !760)
!838 = !DILocation(line: 371, scope: !760)
!839 = !DILocation(line: 373, scope: !760)
!840 = !DILocation(line: 377, scope: !760)
!841 = !DILocation(line: 378, scope: !760)
!842 = !DILocation(line: 391, scope: !760)
!843 = !DILocation(line: 396, scope: !760)
!844 = !DILocation(line: 397, scope: !760)
!845 = !DILocation(line: 398, scope: !760)
!846 = !DILocation(line: 400, scope: !760)
!847 = !DILocation(line: 406, scope: !760)
!848 = !DILocation(line: 407, scope: !760)
!849 = !DILocation(line: 408, scope: !760)
!850 = !DILocation(line: 409, scope: !760)
!851 = !DILocation(line: 412, scope: !760)
!852 = !DILocation(line: 413, scope: !760)
!853 = !DILocation(line: 414, scope: !760)
!854 = !DILocation(line: 415, scope: !760)
!855 = !DILocation(line: 416, scope: !760)
!856 = !DILocation(line: 417, scope: !760)
!857 = !DILocation(line: 418, scope: !760)
!858 = !DILocation(line: 419, scope: !760)
!859 = !DILocation(line: 421, scope: !760)
!860 = !DILocation(line: 427, scope: !760)
!861 = !DILocation(line: 428, scope: !760)
!862 = !DILocation(line: 434, scope: !760)
!863 = !DILocation(line: 436, scope: !760)
!864 = !DILocation(line: 438, scope: !760)
!865 = !DILocation(line: 440, scope: !760)
!866 = !DILocation(line: 442, scope: !760)
!867 = !DILocation(line: 448, scope: !760)
!868 = !DILocation(line: 449, scope: !760)
!869 = !DILocation(line: 468, scope: !760)
!870 = !DILocation(line: 469, scope: !760)
!871 = !DILocation(line: 470, scope: !760)
!872 = !DILocation(line: 454, scope: !760)
!873 = !DILocation(line: 461, scope: !760)
!874 = !DILocation(line: 463, scope: !760)
!875 = !DILocation(line: 479, scope: !760)
!876 = !DILocation(line: 480, scope: !760)
!877 = !DILocation(line: 481, scope: !760)
!878 = !DILocation(line: 484, scope: !760)
!879 = !DILocation(line: 485, scope: !760)
!880 = !DILocation(line: 486, scope: !760)
!881 = !DILocation(line: 487, scope: !760)
!882 = !DILocation(line: 490, scope: !760)
!883 = !DILocation(line: 492, scope: !760)
!884 = !DILocation(line: 500, scope: !760)
!885 = !DILocation(line: 506, scope: !760)
!886 = !DILocation(line: 508, scope: !760)
!887 = !DILocation(line: 509, scope: !760)
!888 = !DILocation(line: 510, scope: !760)
!889 = !DILocation(line: 516, scope: !760)
!890 = !DILocation(line: 520, scope: !760)
!891 = !DILocation(line: 521, scope: !760)
!892 = !DILocation(line: 527, scope: !760)
!893 = !DILocation(line: 530, scope: !760)
!894 = !DILocation(line: 535, scope: !760)
!895 = !DILocation(line: 536, scope: !760)
!896 = !DILocation(line: 537, scope: !760)
!897 = !DILocation(line: 541, scope: !760)
!898 = !DILocation(line: 542, scope: !760)
!899 = !DILocation(line: 550, scope: !760)
!900 = !DILocation(line: 551, scope: !760)
!901 = !DILocation(line: 554, scope: !760)
!902 = !DILocation(line: 555, scope: !760)
!903 = !DILocation(line: 556, scope: !760)
!904 = !DILocation(line: 557, scope: !760)
!905 = !DILocation(line: 558, scope: !760)
!906 = !DILocation(line: 559, scope: !760)
!907 = !DILocation(line: 566, scope: !760)
!908 = !DILocation(line: 571, scope: !760)
!909 = !DILocation(line: 572, scope: !760)
!910 = !DILocation(line: 573, scope: !760)
!911 = !DILocation(line: 575, scope: !760)
!912 = !DILocation(line: 603, scope: !760)
!913 = !DILocation(line: 604, scope: !760)
!914 = !DILocation(line: 619, scope: !760)
!915 = !DILocation(line: 625, scope: !760)
!916 = !DILocation(line: 626, scope: !760)
!917 = !DILocation(line: 627, scope: !760)
!918 = !DILocation(line: 630, scope: !760)
!919 = !DILocation(line: 631, scope: !760)
!920 = !DILocation(line: 638, scope: !760)
!921 = !DILocation(line: 639, scope: !760)
!922 = !DILocation(line: 641, scope: !760)
!923 = !DILocation(line: 646, scope: !760)
!924 = !DILocation(line: 647, scope: !760)
!925 = !DILocation(line: 648, scope: !760)
!926 = !DILocation(line: 649, scope: !760)
!927 = !DILocation(line: 652, scope: !760)
!928 = !DILocation(line: 653, scope: !760)
!929 = !DILocation(line: 654, scope: !760)
!930 = !DILocation(line: 656, scope: !760)
!931 = !DILocation(line: 662, scope: !760)
!932 = !DILocation(line: 663, scope: !760)
!933 = !DILocation(line: 664, scope: !760)
!934 = !DILocation(line: 667, scope: !760)
!935 = !DILocation(line: 668, scope: !760)
!936 = !DILocation(line: 671, scope: !760)
!937 = !DILocation(line: 673, scope: !760)
!938 = !DILocation(line: 677, scope: !760)
!939 = !DILocation(line: 678, scope: !760)
!940 = !DILocation(line: 679, scope: !760)
!941 = !DILocation(line: 684, scope: !760)
!942 = !DILocation(line: 687, scope: !760)
!943 = !DILocation(line: 688, scope: !760)
!944 = !DILocation(line: 689, scope: !760)
!945 = !DILocation(line: 693, scope: !760)
!946 = !DILocation(line: 694, scope: !760)
!947 = !DILocation(line: 695, scope: !760)
!948 = !DILocation(line: 698, scope: !760)
!949 = !DILocation(line: 699, scope: !760)
!950 = !DILocation(line: 701, scope: !760)
!951 = !DILocation(line: 707, scope: !760)
!952 = !DILocation(line: 26, scope: !953)
!953 = !DILexicalBlockFile(scope: !37, file: !954, discriminator: 0)
!954 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!955 = !DILocation(line: 41, scope: !953)
!956 = !DILocation(line: 42, scope: !953)
!957 = !DILocation(line: 45, scope: !953)
!958 = !DILocation(line: 48, scope: !953)
!959 = !DILocation(line: 24, scope: !953)
!960 = !DILocation(line: 56, scope: !953)
!961 = !DILocation(line: 66, scope: !953)
!962 = !DILocation(line: 42, scope: !963)
!963 = !DILexicalBlockFile(scope: !37, file: !964, discriminator: 0)
!964 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!965 = !DILocation(line: 43, scope: !963)
!966 = !DILocation(line: 46, scope: !963)
!967 = !DILocation(line: 65, scope: !963)
!968 = !DILocation(line: 71, scope: !963)
!969 = !DILocation(line: 75, scope: !963)
!970 = !DILocation(line: 80, scope: !963)
!971 = !DILocation(line: 83, scope: !963)
!972 = !DILocation(line: 84, scope: !963)
!973 = !DILocation(line: 87, scope: !963)
!974 = !DILocation(line: 93, scope: !963)
!975 = !DILocation(line: 99, scope: !963)
!976 = !DILocation(line: 101, scope: !963)
!977 = !DILocation(line: 114, scope: !963)
!978 = !DILocation(line: 116, scope: !963)
!979 = !DILocation(line: 32, scope: !980)
!980 = !DILexicalBlockFile(scope: !37, file: !981, discriminator: 0)
!981 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenPseudoLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!982 = !DILocation(line: 41, scope: !980)
!983 = !DILocation(line: 46, scope: !980)
!984 = !DILocation(line: 47, scope: !980)
!985 = !DILocation(line: 49, scope: !980)
!986 = !DILocation(line: 50, scope: !980)
!987 = !DILocation(line: 52, scope: !980)
!988 = !DILocation(line: 53, scope: !980)
!989 = !DILocation(line: 55, scope: !980)
!990 = !DILocation(line: 56, scope: !980)
!991 = !DILocation(line: 57, scope: !980)
!992 = !DILocation(line: 36, scope: !993)
!993 = !DILexicalBlockFile(scope: !37, file: !994, discriminator: 0)
!994 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterDataLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!995 = !DILocation(line: 39, scope: !993)
!996 = !DILocation(line: 40, scope: !993)
!997 = !DILocation(line: 41, scope: !993)
!998 = !DILocation(line: 46, scope: !993)
!999 = !DILocation(line: 60, scope: !993)
!1000 = !DILocation(line: 61, scope: !993)
!1001 = !DILocation(line: 62, scope: !993)
!1002 = !DILocation(line: 63, scope: !993)
!1003 = !DILocation(line: 31, scope: !1004)
!1004 = !DILexicalBlockFile(scope: !37, file: !1005, discriminator: 0)
!1005 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1006 = !DILocation(line: 52, scope: !1004)
!1007 = !DILocation(line: 53, scope: !1004)
!1008 = !DILocation(line: 54, scope: !1004)
!1009 = !DILocation(line: 55, scope: !1004)
!1010 = !DILocation(line: 56, scope: !1004)
!1011 = !DILocation(line: 130, scope: !1004)
!1012 = !DILocation(line: 134, scope: !1004)
!1013 = !DILocation(line: 154, scope: !1004)
!1014 = !DILocation(line: 155, scope: !1004)
!1015 = !DILocation(line: 161, scope: !1004)
!1016 = !DILocation(line: 165, scope: !1004)
!1017 = !DILocation(line: 166, scope: !1004)
!1018 = !DILocation(line: 168, scope: !1004)
!1019 = !DILocation(line: 169, scope: !1004)
!1020 = !DILocation(line: 170, scope: !1004)
!1021 = !DILocation(line: 171, scope: !1004)
!1022 = !DILocation(line: 172, scope: !1004)
!1023 = !DILocation(line: 178, scope: !1004)
!1024 = !DILocation(line: 186, scope: !1004)
!1025 = !DILocation(line: 187, scope: !1004)
!1026 = !DILocation(line: 189, scope: !1004)
!1027 = !DILocation(line: 199, scope: !1004)
!1028 = !DILocation(line: 200, scope: !1004)
!1029 = !DILocation(line: 201, scope: !1004)
!1030 = !DILocation(line: 202, scope: !1004)
!1031 = !DILocation(line: 204, scope: !1004)
!1032 = !DILocation(line: 205, scope: !1004)
!1033 = !DILocation(line: 206, scope: !1004)
!1034 = !DILocation(line: 207, scope: !1004)
!1035 = !DILocation(line: 209, scope: !1004)
!1036 = !DILocation(line: 212, scope: !1004)
!1037 = !DILocation(line: 216, scope: !1004)
!1038 = !DILocation(line: 217, scope: !1004)
!1039 = !DILocation(line: 219, scope: !1004)
!1040 = !DILocation(line: 233, scope: !1004)
!1041 = !DILocation(line: 234, scope: !1004)
!1042 = !DILocation(line: 238, scope: !1004)
!1043 = !DILocation(line: 239, scope: !1004)
!1044 = !DILocation(line: 240, scope: !1004)
!1045 = !DILocation(line: 242, scope: !1004)
!1046 = !DILocation(line: 260, scope: !1004)
!1047 = !DILocation(line: 36, scope: !1048)
!1048 = !DILexicalBlockFile(scope: !37, file: !1049, discriminator: 0)
!1049 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/JumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1050 = !DILocation(line: 38, scope: !1048)
!1051 = !DILocation(line: 42, scope: !1048)
!1052 = !DILocation(line: 39, scope: !1048)
!1053 = !DILocation(line: 36, scope: !1054)
!1054 = !DILexicalBlockFile(scope: !37, file: !1055, discriminator: 0)
!1055 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MoveLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1056 = !DILocation(line: 37, scope: !1054)
!1057 = !DILocation(line: 39, scope: !1054)
!1058 = !DILocation(line: 34, scope: !1059)
!1059 = !DILexicalBlockFile(scope: !37, file: !1060, discriminator: 0)
!1060 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfPosLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1061 = !DILocation(line: 35, scope: !1059)
!1062 = !DILocation(line: 36, scope: !1059)
!1063 = !DILocation(line: 37, scope: !1059)
!1064 = !DILocation(line: 43, scope: !1059)
!1065 = !DILocation(line: 45, scope: !1059)
!1066 = !DILocation(line: 61, scope: !1059)
!1067 = !DILocation(line: 66, scope: !1068)
!1068 = !DILexicalBlockFile(scope: !37, file: !1069, discriminator: 0)
!1069 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ArithmeticLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1070 = !DILocation(line: 71, scope: !1068)
!1071 = !DILocation(line: 74, scope: !1068)
!1072 = !DILocation(line: 78, scope: !1068)
!1073 = !DILocation(line: 79, scope: !1068)
!1074 = !DILocation(line: 185, scope: !1068)
!1075 = !DILocation(line: 39, scope: !1076)
!1076 = !DILexicalBlockFile(scope: !37, file: !1077, discriminator: 0)
!1077 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/NumericType.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1078 = !DILocation(line: 43, scope: !1076)
!1079 = !DILocation(line: 45, scope: !1076)
!1080 = !DILocation(line: 56, scope: !1076)
!1081 = !DILocation(line: 61, scope: !1076)
!1082 = !DILocation(line: 67, scope: !1076)
!1083 = !DILocation(line: 83, scope: !1076)
!1084 = !DILocation(line: 88, scope: !1076)
!1085 = !DILocation(line: 94, scope: !1076)
!1086 = !DILocation(line: 98, scope: !1076)
!1087 = !DILocation(line: 106, scope: !1076)
!1088 = !DILocation(line: 188, scope: !1068)
!1089 = !DILocation(line: 193, scope: !1068)
!1090 = !DILocation(line: 197, scope: !1068)
!1091 = !DILocation(line: 200, scope: !1068)
!1092 = !DILocation(line: 203, scope: !1068)
!1093 = !DILocation(line: 204, scope: !1068)
!1094 = !DILocation(line: 205, scope: !1068)
!1095 = !DILocation(line: 214, scope: !1068)
!1096 = !DILocation(line: 222, scope: !1068)
!1097 = !DILocation(line: 223, scope: !1068)
!1098 = !DILocation(line: 224, scope: !1068)
!1099 = !DILocation(line: 227, scope: !1068)
!1100 = !DILocation(line: 228, scope: !1068)
!1101 = !DILocation(line: 229, scope: !1068)
!1102 = !DILocation(line: 230, scope: !1068)
!1103 = !DILocation(line: 231, scope: !1068)
!1104 = !DILocation(line: 247, scope: !1068)
!1105 = !DILocation(line: 250, scope: !1068)
!1106 = !DILocation(line: 251, scope: !1068)
!1107 = !DILocation(line: 346, scope: !1068)
!1108 = !DILocation(line: 347, scope: !1068)
!1109 = !DILocation(line: 348, scope: !1068)
!1110 = !DILocation(line: 349, scope: !1068)
!1111 = !DILocation(line: 39, scope: !1068)
!1112 = !DILocation(line: 354, scope: !1068)
!1113 = !DILocation(line: 358, scope: !1068)
!1114 = !DILocation(line: 359, scope: !1068)
!1115 = !DILocation(line: 360, scope: !1068)
!1116 = !DILocation(line: 370, scope: !1068)
!1117 = !DILocation(line: 373, scope: !1068)
!1118 = !DILocation(line: 384, scope: !1068)
!1119 = !DILocation(line: 445, scope: !1068)
!1120 = !DILocation(line: 446, scope: !1068)
!1121 = !DILocation(line: 448, scope: !1068)
!1122 = !DILocation(line: 453, scope: !1068)
!1123 = !DILocation(line: 454, scope: !1068)
!1124 = !DILocation(line: 455, scope: !1068)
!1125 = !DILocation(line: 460, scope: !1068)
!1126 = !DILocation(line: 476, scope: !1068)
!1127 = !DILocation(line: 469, scope: !1068)
!1128 = !DILocation(line: 257, scope: !1068)
!1129 = !DILocation(line: 260, scope: !1068)
!1130 = !DILocation(line: 261, scope: !1068)
!1131 = !DILocation(line: 390, scope: !1068)
!1132 = !DILocation(line: 25, scope: !1133)
!1133 = !DILexicalBlockFile(scope: !37, file: !1134, discriminator: 0)
!1134 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggStepLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1135 = !DILocation(line: 47, scope: !1133)
!1136 = !DILocation(line: 48, scope: !1133)
!1137 = !DILocation(line: 58, scope: !1133)
!1138 = !DILocation(line: 63, scope: !1133)
!1139 = !DILocation(line: 64, scope: !1133)
!1140 = !DILocation(line: 66, scope: !1133)
!1141 = !DILocation(line: 73, scope: !1133)
!1142 = !DILocation(line: 75, scope: !1133)
!1143 = !DILocation(line: 79, scope: !1133)
!1144 = !DILocation(line: 80, scope: !1133)
!1145 = !DILocation(line: 83, scope: !1133)
!1146 = !DILocation(line: 88, scope: !1133)
!1147 = !DILocation(line: 89, scope: !1133)
!1148 = !DILocation(line: 90, scope: !1133)
!1149 = !DILocation(line: 91, scope: !1133)
!1150 = !DILocation(line: 92, scope: !1133)
!1151 = !DILocation(line: 93, scope: !1133)
!1152 = !DILocation(line: 94, scope: !1133)
!1153 = !DILocation(line: 95, scope: !1133)
!1154 = !DILocation(line: 96, scope: !1133)
!1155 = !DILocation(line: 97, scope: !1133)
!1156 = !DILocation(line: 108, scope: !1133)
!1157 = !DILocation(line: 116, scope: !1133)
!1158 = !DILocation(line: 117, scope: !1133)
!1159 = !DILocation(line: 119, scope: !1133)
!1160 = !DILocation(line: 125, scope: !1133)
!1161 = !DILocation(line: 126, scope: !1133)
!1162 = !DILocation(line: 128, scope: !1133)
!1163 = !DILocation(line: 129, scope: !1133)
!1164 = !DILocation(line: 130, scope: !1133)
!1165 = !DILocation(line: 131, scope: !1133)
!1166 = !DILocation(line: 133, scope: !1133)
!1167 = !DILocation(line: 136, scope: !1133)
!1168 = !DILocation(line: 137, scope: !1133)
!1169 = !DILocation(line: 138, scope: !1133)
!1170 = !DILocation(line: 139, scope: !1133)
!1171 = !DILocation(line: 140, scope: !1133)
!1172 = !DILocation(line: 143, scope: !1133)
!1173 = !DILocation(line: 146, scope: !1133)
!1174 = !DILocation(line: 150, scope: !1133)
!1175 = !DILocation(line: 158, scope: !1133)
!1176 = !DILocation(line: 164, scope: !1133)
!1177 = !DILocation(line: 165, scope: !1133)
!1178 = !DILocation(line: 166, scope: !1133)
!1179 = !DILocation(line: 167, scope: !1133)
!1180 = !DILocation(line: 171, scope: !1133)
!1181 = !DILocation(line: 172, scope: !1133)
!1182 = !DILocation(line: 173, scope: !1133)
!1183 = !DILocation(line: 174, scope: !1133)
!1184 = !DILocation(line: 175, scope: !1133)
!1185 = !DILocation(line: 178, scope: !1133)
!1186 = !DILocation(line: 182, scope: !1133)
!1187 = !DILocation(line: 187, scope: !1133)
!1188 = !DILocation(line: 188, scope: !1133)
!1189 = !DILocation(line: 189, scope: !1133)
!1190 = !DILocation(line: 194, scope: !1133)
!1191 = !DILocation(line: 198, scope: !1133)
!1192 = !DILocation(line: 199, scope: !1133)
!1193 = !DILocation(line: 200, scope: !1133)
!1194 = !DILocation(line: 201, scope: !1133)
!1195 = !DILocation(line: 202, scope: !1133)
!1196 = !DILocation(line: 203, scope: !1133)
!1197 = !DILocation(line: 210, scope: !1133)
!1198 = !DILocation(line: 231, scope: !1133)
!1199 = !DILocation(line: 233, scope: !1133)
!1200 = !DILocation(line: 234, scope: !1133)
!1201 = !DILocation(line: 239, scope: !1133)
!1202 = !DILocation(line: 242, scope: !1133)
!1203 = !DILocation(line: 243, scope: !1133)
!1204 = !DILocation(line: 246, scope: !1133)
!1205 = !DILocation(line: 216, scope: !1133)
!1206 = !DILocation(line: 219, scope: !1133)
!1207 = !DILocation(line: 221, scope: !1133)
!1208 = !DILocation(line: 256, scope: !1133)
!1209 = !DILocation(line: 258, scope: !1133)
!1210 = !DILocation(line: 259, scope: !1133)
!1211 = !DILocation(line: 260, scope: !1133)
!1212 = !DILocation(line: 263, scope: !1133)
!1213 = !DILocation(line: 270, scope: !1133)
!1214 = !DILocation(line: 271, scope: !1133)
!1215 = !DILocation(line: 277, scope: !1133)
!1216 = !DILocation(line: 278, scope: !1133)
!1217 = !DILocation(line: 279, scope: !1133)
!1218 = !DILocation(line: 282, scope: !1133)
!1219 = !DILocation(line: 283, scope: !1133)
!1220 = !DILocation(line: 289, scope: !1133)
!1221 = !DILocation(line: 293, scope: !1133)
!1222 = !DILocation(line: 297, scope: !1133)
!1223 = !DILocation(line: 302, scope: !1133)
!1224 = !DILocation(line: 303, scope: !1133)
!1225 = !DILocation(line: 305, scope: !1133)
!1226 = !DILocation(line: 311, scope: !1133)
!1227 = !DILocation(line: 312, scope: !1133)
!1228 = !DILocation(line: 314, scope: !1133)
!1229 = !DILocation(line: 319, scope: !1133)
!1230 = !DILocation(line: 320, scope: !1133)
!1231 = !DILocation(line: 325, scope: !1133)
!1232 = !DILocation(line: 336, scope: !1133)
!1233 = !DILocation(line: 342, scope: !1133)
!1234 = !DILocation(line: 341, scope: !1133)
!1235 = !DILocation(line: 350, scope: !1133)
!1236 = !DILocation(line: 352, scope: !1133)
!1237 = !DILocation(line: 358, scope: !1133)
!1238 = !DILocation(line: 359, scope: !1133)
!1239 = !DILocation(line: 362, scope: !1133)
!1240 = !DILocation(line: 363, scope: !1133)
!1241 = !DILocation(line: 366, scope: !1133)
!1242 = !DILocation(line: 369, scope: !1133)
!1243 = !DILocation(line: 374, scope: !1133)
!1244 = !DILocation(line: 382, scope: !1133)
!1245 = !DILocation(line: 34, scope: !1246)
!1246 = !DILexicalBlockFile(scope: !37, file: !1247, discriminator: 0)
!1247 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1248 = !DILocation(line: 35, scope: !1246)
!1249 = !DILocation(line: 40, scope: !1246)
!1250 = !DILocation(line: 41, scope: !1246)
!1251 = !DILocation(line: 36, scope: !1252)
!1252 = !DILexicalBlockFile(scope: !37, file: !1253, discriminator: 0)
!1253 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterNextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1254 = !DILocation(line: 37, scope: !1252)
!1255 = !DILocation(line: 43, scope: !1252)
!1256 = !DILocation(line: 46, scope: !1252)
!1257 = !DILocation(line: 47, scope: !1252)
!1258 = !DILocation(line: 49, scope: !1252)
!1259 = !DILocation(line: 55, scope: !1252)
!1260 = !DILocation(line: 56, scope: !1252)
!1261 = !DILocation(line: 60, scope: !1252)
!1262 = !DILocation(line: 62, scope: !1252)
!1263 = !DILocation(line: 75, scope: !1252)
!1264 = !DILocation(line: 85, scope: !1252)
!1265 = !DILocation(line: 31, scope: !1266)
!1266 = !DILexicalBlockFile(scope: !37, file: !1267, discriminator: 0)
!1267 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ReturnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1268 = !DILocation(line: 33, scope: !1266)
!1269 = !DILocation(line: 35, scope: !1266)
!1270 = !DILocation(line: 37, scope: !1266)
!1271 = !DILocation(line: 39, scope: !1266)
!1272 = !DILocation(line: 41, scope: !1266)
!1273 = !DILocation(line: 45, scope: !1266)
!1274 = !DILocation(line: 48, scope: !1266)
!1275 = !DILocation(line: 31, scope: !1276)
!1276 = !DILexicalBlockFile(scope: !37, file: !1277, discriminator: 0)
!1277 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggFinalLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1278 = !DILocation(line: 32, scope: !1276)
!1279 = !DILocation(line: 33, scope: !1276)
!1280 = !DILocation(line: 34, scope: !1276)
!1281 = !DILocation(line: 39, scope: !1276)
!1282 = !DILocation(line: 45, scope: !1276)
!1283 = !DILocation(line: 47, scope: !1276)
!1284 = !DILocation(line: 48, scope: !1276)
!1285 = !DILocation(line: 49, scope: !1276)
!1286 = !DILocation(line: 56, scope: !1276)
!1287 = !DILocation(line: 59, scope: !1276)
!1288 = !DILocation(line: 67, scope: !1276)
!1289 = !DILocation(line: 40, scope: !1290)
!1290 = !DILexicalBlockFile(scope: !37, file: !1291, discriminator: 0)
!1291 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1292 = !DILocation(line: 41, scope: !1290)
!1293 = !DILocation(line: 43, scope: !1290)
!1294 = !DILocation(line: 63, scope: !88)
!1295 = !DILocation(line: 66, scope: !88)
!1296 = !DILocation(line: 71, scope: !88)
!1297 = !DILocation(line: 74, scope: !88)
!1298 = !DILocation(line: 75, scope: !88)
!1299 = !DILocation(line: 23, scope: !1300)
!1300 = !DILexicalBlockFile(scope: !37, file: !1301, discriminator: 0)
!1301 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ResultRowLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1302 = !DILocation(line: 28, scope: !1300)
!1303 = !DILocation(line: 52, scope: !1300)
!1304 = !DILocation(line: 56, scope: !1300)
!1305 = !DILocation(line: 62, scope: !1300)
!1306 = !DILocation(line: 63, scope: !1300)
!1307 = !DILocation(line: 64, scope: !1300)
!1308 = !DILocation(line: 65, scope: !1300)
!1309 = !DILocation(line: 71, scope: !1300)
!1310 = !DILocation(line: 75, scope: !1300)
!1311 = !DILocation(line: 76, scope: !1300)
!1312 = !DILocation(line: 80, scope: !1300)
!1313 = !DILocation(line: 82, scope: !1300)
!1314 = !DILocation(line: 83, scope: !1300)
!1315 = !DILocation(line: 84, scope: !1300)
!1316 = !DILocation(line: 85, scope: !1300)
!1317 = !DILocation(line: 91, scope: !1300)
!1318 = !DILocation(line: 95, scope: !1300)
!1319 = !DILocation(line: 99, scope: !1300)
!1320 = !DILocation(line: 106, scope: !1300)
!1321 = !DILocation(line: 111, scope: !1300)
!1322 = !DILocation(line: 112, scope: !1300)
!1323 = !DILocation(line: 113, scope: !1300)
!1324 = !DILocation(line: 121, scope: !1300)
!1325 = !DILocation(line: 127, scope: !1300)
!1326 = !DILocation(line: 128, scope: !1300)
!1327 = !DILocation(line: 26, scope: !1328)
!1328 = !DILexicalBlockFile(scope: !37, file: !1329, discriminator: 0)
!1329 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/HaltLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1330 = !DILocation(line: 29, scope: !1328)
!1331 = !DILocation(line: 25, scope: !1332)
!1332 = !DILexicalBlockFile(scope: !37, file: !1333, discriminator: 0)
!1333 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/TransactionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1334 = !DILocation(line: 48, scope: !1332)
!1335 = !DILocation(line: 52, scope: !1332)
!1336 = !DILocation(line: 53, scope: !1332)
!1337 = !DILocation(line: 54, scope: !1332)
!1338 = !DILocation(line: 55, scope: !1332)
!1339 = !DILocation(line: 57, scope: !1332)
!1340 = !DILocation(line: 58, scope: !1332)
!1341 = !DILocation(line: 60, scope: !1332)
!1342 = !DILocation(line: 65, scope: !1332)
!1343 = !DILocation(line: 69, scope: !1332)
!1344 = !DILocation(line: 71, scope: !1332)
!1345 = !DILocation(line: 143, scope: !1332)
!1346 = !DILocation(line: 152, scope: !1332)
!1347 = !DILocation(line: 153, scope: !1332)
!1348 = !DILocation(line: 156, scope: !1332)
!1349 = !DILocation(line: 157, scope: !1332)
!1350 = !DILocation(line: 158, scope: !1332)
!1351 = !DILocation(line: 159, scope: !1332)
!1352 = !DILocation(line: 161, scope: !1332)
!1353 = !DILocation(line: 162, scope: !1332)
!1354 = !DILocation(line: 181, scope: !1332)
!1355 = !DILocation(line: 189, scope: !1332)
