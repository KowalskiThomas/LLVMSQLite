; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%struct.sqlite3StatType = type { [10 x i64], [10 x i64] }
%struct.Sqlite3Config = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.sqlite3_mem_methods, %struct.sqlite3_mutex_methods, %struct.sqlite3_pcache_methods2, i8*, i32, i32, i32, i64, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sqlite3_mutex*, void (i8*, i32, i8*)*, i8*, i32 (i32)*, i32, i32, i32, i32 }
%struct.sqlite3_mem_methods = type { i8* (i32)*, void (i8*)*, i8* (i8*, i32)*, i32 (i8*)*, i32 (i32)*, i32 (i8*)*, void (i8*)*, i8* }
%struct.sqlite3_mutex_methods = type { i32 ()*, i32 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)* }
%struct.sqlite3_pcache_methods2 = type { i32, i8*, i32 (i8*)*, void (i8*)*, %struct.sqlite3_pcache* (i32, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, i32 (%struct.sqlite3_pcache*)*, %struct.sqlite3_pcache_page* (%struct.sqlite3_pcache*, i32, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, void (%struct.sqlite3_pcache*)*, void (%struct.sqlite3_pcache*)* }
%struct.sqlite3_pcache = type opaque
%struct.sqlite3_pcache_page = type { i8*, i8* }
%struct.sqlite3_mutex = type { %struct._opaque_pthread_mutex_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.anon.9 = type { i8, i8, i8*, double, double }
%struct.sqlite3_vfs = type { i32, i32, i32, %struct.sqlite3_vfs*, i8*, i8*, i32 (%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)*, void (%struct.sqlite3_vfs*, i32, i8*)*, void ()* (%struct.sqlite3_vfs*, i8*, i8*)*, void (%struct.sqlite3_vfs*, i8*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*, double*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i64*)*, i32 (%struct.sqlite3_vfs*, i8*, void ()*)*, void ()* (%struct.sqlite3_vfs*, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)* }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%struct.BenignMallocHooks = type { void ()*, void ()* }
%struct.Mem0Global = type { %struct.sqlite3_mutex*, i64, i64, i32 }
%struct.et_info = type { i8, i8, i8, i8, i8, i8 }
%struct.sqlite3_str = type { %struct.sqlite3*, i8*, i32, i32, i32, i8, i8 }
%struct.sqlite3 = type { %struct.sqlite3_vfs*, %struct.Vdbe*, %struct.CollSeq*, %struct.sqlite3_mutex*, %struct.Db*, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [12 x i32], i32, %struct.sqlite3InitInfo, i32, i32, i32, i32, i32, i32, i8**, i32 (i32, i8*, i8*, i8*)*, i8*, void (i8*, i8*, i64)*, i8*, i8*, i32 (i8*)*, i8*, void (i8*)*, i8*, void (i8*, i32, i8*, i8*, i64)*, %struct.Parse*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*, void (i8*, %struct.sqlite3*, i32, i8*)*, i8*, %struct.sqlite3_value*, %union.anon.8, %struct.Lookaside, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*, i32 (i8*)*, i8*, i32, %struct.Hash, %struct.Hash, %struct.BusyHandler, [2 x %struct.Db], %struct.Savepoint*, i32, i32, i32, i64, i64, i32* }
%struct.Vdbe = type <{ %struct.sqlite3*, %struct.Vdbe*, %struct.Vdbe*, %struct.Parse*, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i64, i64, %struct.sqlite3_value*, %struct.sqlite3_value**, %struct.VdbeCursor**, %struct.sqlite3_value*, %struct.VdbeOp*, i32, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, i8*, i32*, i16, i8, i8, i8, i16, i8, i32, i32, [7 x i32], [4 x i8], i8*, i8*, %struct.VdbeFrame*, %struct.VdbeFrame*, i32, i32, %struct.SubProgram*, %struct.AuxData* }>
%struct.VdbeCursor = type { i8, i8, i8, i8, i8, i8, %struct.Btree*, i64, i32*, i32, i32, %struct.VdbeCursor*, %union.anon.7, %struct.KeyInfo*, i32, i32, i16, i16, i64, i32*, i8*, i32, i32, [1 x i32] }
%struct.Btree = type { %struct.sqlite3*, %struct.BtShared*, i8, i8, i8, i8, i32, i32, i32, %struct.Btree*, %struct.Btree*, %struct.BtLock }
%struct.BtShared = type { %struct.Pager*, %struct.sqlite3*, %struct.BtCursor*, %struct.MemPage*, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i32, i32, i32, i32, i8*, void (i8*)*, %struct.sqlite3_mutex*, %struct.Bitvec*, i32, %struct.BtShared*, %struct.BtLock*, %struct.Btree*, i8* }
%struct.Pager = type { %struct.sqlite3_vfs*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Bitvec*, %struct.sqlite3_file*, %struct.sqlite3_file*, %struct.sqlite3_file*, i64, i64, %struct.sqlite3_backup*, %struct.PagerSavepoint*, i32, i32, [16 x i8], i32, i64, %struct.PgHdr*, i16, i16, i32, i32, i32, i32, i64, i8*, i8*, i32 (i8*)*, i8*, [4 x i32], void (%struct.PgHdr*)*, i32 (%struct.Pager*, i32, %struct.PgHdr**, i32)*, i8*, %struct.PCache*, %struct.Wal*, i8* }
%struct.sqlite3_backup = type { %struct.sqlite3*, %struct.Btree*, i32, i32, i32, %struct.sqlite3*, %struct.Btree*, i32, i32, i32, i32, %struct.sqlite3_backup* }
%struct.PagerSavepoint = type { i64, i64, %struct.Bitvec*, i32, i32, [4 x i32] }
%struct.PgHdr = type { %struct.sqlite3_pcache_page*, i8*, i8*, %struct.PCache*, %struct.PgHdr*, %struct.Pager*, i32, i16, i16, %struct.PgHdr*, %struct.PgHdr* }
%struct.PCache = type { %struct.PgHdr*, %struct.PgHdr*, %struct.PgHdr*, i32, i32, i32, i32, i32, i8, i8, i32 (i8*, %struct.PgHdr*)*, i8*, %struct.sqlite3_pcache* }
%struct.Wal = type { %struct.sqlite3_vfs*, %struct.sqlite3_file*, %struct.sqlite3_file*, i32, i64, i32, i32, i32**, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.WalIndexHdr, i32, i32, i8*, i32 }
%struct.WalIndexHdr = type { i32, i32, i32, i8, i8, i16, i32, i32, [2 x i32], [2 x i32], [2 x i32] }
%struct.BtCursor = type { i8, i8, i8, i8, i32, %struct.Btree*, i32*, i8*, %struct.BtShared*, %struct.BtCursor*, %struct.CellInfo, i64, i32, i8, i8, i16, [19 x i16], %struct.KeyInfo*, %struct.MemPage*, [19 x %struct.MemPage*] }
%struct.CellInfo = type { i64, i8*, i32, i16, i16 }
%struct.MemPage = type { i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i32, i16, i16, [4 x i16], [4 x i8*], %struct.BtShared*, i8*, i8*, i8*, i8*, %struct.PgHdr*, i16 (%struct.MemPage*, i8*)*, void (%struct.MemPage*, i8*, %struct.CellInfo*)* }
%struct.Bitvec = type { i32, i32, i32, %union.anon.10 }
%union.anon.10 = type { [62 x %struct.Bitvec*] }
%struct.BtLock = type { %struct.Btree*, i32, i8, %struct.BtLock* }
%union.anon.7 = type { %struct.BtCursor* }
%struct.KeyInfo = type { i32, i8, i16, i16, %struct.sqlite3*, i8*, [1 x %struct.CollSeq*] }
%struct.VdbeOp = type { i8, i8, i16, i32, i32, i32, %union.p4union }
%union.p4union = type { i8* }
%struct.VdbeFrame = type { %struct.Vdbe*, %struct.VdbeFrame*, %struct.VdbeOp*, i64*, %struct.sqlite3_value*, %struct.VdbeCursor**, i8*, i8*, i64, %struct.AuxData*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SubProgram = type { %struct.VdbeOp*, i32, i32, i32, i8*, i8*, %struct.SubProgram* }
%struct.AuxData = type { i32, i32, i8*, void (i8*)*, %struct.AuxData* }
%struct.CollSeq = type { i8*, i8, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)* }
%struct.Db = type { i8*, %struct.Btree*, i8, i8, %struct.Schema* }
%struct.Schema = type { i32, i32, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Table*, i8, i8, i16, i32 }
%struct.Table = type { i8*, %struct.Column*, %struct.Index*, %struct.Select*, %struct.FKey*, i8*, %struct.ExprList*, i32, i32, i32, i16, i16, i16, i16, i16, i8, i32, %struct.Trigger*, %struct.Schema*, %struct.Table* }
%struct.Column = type { i8*, %struct.Expr*, i8*, i8, i8, i8, i16 }
%struct.Expr = type { i8, i8, i8, i32, %union.anon, %struct.Expr*, %struct.Expr*, %union.anon.0, i32, i32, i16, i16, i16, %struct.AggInfo*, %union.anon.3 }
%union.anon = type { i8* }
%union.anon.0 = type { %struct.ExprList* }
%struct.AggInfo = type { i8, i8, i32, i32, i32, i32, i32, %struct.ExprList*, %struct.AggInfo_col*, i32, i32, %struct.AggInfo_func*, i32 }
%struct.AggInfo_col = type { %struct.Table*, i32, i32, i32, i32, %struct.Expr* }
%struct.AggInfo_func = type { %struct.Expr*, %struct.FuncDef*, i32, i32 }
%struct.FuncDef = type { i8, i32, i8*, %struct.FuncDef*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, i8*, %union.anon.2 }
%struct.sqlite3_context = type { %struct.sqlite3_value*, %struct.FuncDef*, %struct.sqlite3_value*, %struct.Vdbe*, i32, i32, i8, i8, [1 x %struct.sqlite3_value*] }
%union.anon.2 = type { %struct.FuncDef* }
%union.anon.3 = type { %struct.Table* }
%struct.Index = type <{ i8*, i16*, i16*, %struct.Table*, i8*, %struct.Index*, %struct.Schema*, i8*, i8**, %struct.Expr*, %struct.ExprList*, i32, i16, i16, i16, i8, i16, [3 x i8], i64 }>
%struct.Select = type { i8, i16, i32, i32, i32, i32, [2 x i32], %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Select*, %struct.Select*, %struct.Expr*, %struct.With*, %struct.Window*, %struct.Window* }
%struct.SrcList = type { i32, i32, [1 x %struct.SrcList_item] }
%struct.SrcList_item = type { %struct.Schema*, i8*, i8*, i8*, %struct.Table*, %struct.Select*, i32, i32, i32, %struct.anon, i32, %struct.Expr*, %struct.IdList*, i64, %union.anon.1, %struct.Index* }
%struct.anon = type { i8, i8, [2 x i8] }
%struct.IdList = type { %struct.IdList_item*, i32 }
%struct.IdList_item = type { i8*, i32 }
%union.anon.1 = type { i8* }
%struct.With = type { i32, %struct.With*, [1 x %struct.Cte] }
%struct.Cte = type { i8*, %struct.ExprList*, %struct.Select*, i8* }
%struct.Window = type { i8*, i8*, %struct.ExprList*, %struct.ExprList*, i8, i8, i8, i8, i8, %struct.Expr*, %struct.Expr*, %struct.Window**, %struct.Window*, %struct.Expr*, %struct.FuncDef*, i32, i32, i32, i32, i32, i32, %struct.Expr*, i32, i32, i32, i32, i32, i8 }
%struct.FKey = type { %struct.Table*, %struct.FKey*, i8*, %struct.FKey*, %struct.FKey*, i32, i8, [2 x i8], [2 x %struct.Trigger*], [1 x %struct.sColMap] }
%struct.sColMap = type { i32, i8* }
%struct.ExprList = type { i32, [1 x %struct.ExprList_item] }
%struct.ExprList_item = type { %struct.Expr*, i8*, i8, i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.Trigger = type { i8*, i8*, i8, i8, %struct.Expr*, %struct.IdList*, %struct.Schema*, %struct.Schema*, %struct.TriggerStep*, %struct.Trigger* }
%struct.TriggerStep = type { i8, i8, %struct.Trigger*, %struct.Select*, i8*, %struct.Expr*, %struct.ExprList*, %struct.IdList*, %struct.Upsert*, i8*, %struct.TriggerStep*, %struct.TriggerStep* }
%struct.Upsert = type { %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.Index*, %struct.SrcList*, i32, i32, i32 }
%struct.sqlite3InitInfo = type { i32, i8, i8, i8, i8** }
%struct.Parse = type { %struct.sqlite3*, i8*, %struct.Vdbe*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.ExprList*, %struct.Token, i32, i32, i32, i32, i32, i32, i32, %struct.TableLock*, %struct.AutoincInfo*, %struct.Parse*, %struct.Table*, %struct.Parse*, i32, i32, i32, i32, i8, i8, i8, [8 x i32], %struct.Token, %struct.Token, i16, i8, i8, i8, i32, i32, i32*, %struct.Vdbe*, i8*, %struct.Table*, %struct.Index*, %struct.Trigger*, i8*, %struct.Table*, %struct.TriggerPrg*, %struct.With*, %struct.With*, %struct.RenameToken* }
%struct.TableLock = type { i32, i32, i8, i8* }
%struct.AutoincInfo = type { %struct.AutoincInfo*, %struct.Table*, i32, i32 }
%struct.Token = type { i8*, i32 }
%struct.TriggerPrg = type { %struct.Trigger*, %struct.TriggerPrg*, %struct.SubProgram*, i32, [2 x i32] }
%struct.RenameToken = type { i8*, %struct.Token, %struct.RenameToken* }
%struct.sqlite3_value = type { %union.MemValue, i16, i8, i8, i32, i8*, i8*, i32, i32, %struct.sqlite3*, void (i8*)* }
%union.MemValue = type { double }
%union.anon.8 = type { double }
%struct.Lookaside = type { i32, i16, i16, i8, i32, [3 x i32], %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, i8*, i8*, i8* }
%struct.LookasideSlot = type { %struct.LookasideSlot* }
%struct.Hash = type { i32, i32, %struct.HashElem*, %struct._ht* }
%struct.HashElem = type { %struct.HashElem*, %struct.HashElem*, i8*, i8* }
%struct._ht = type { i32, %struct.HashElem* }
%struct.BusyHandler = type { i32 (i8*, i32)*, i8*, i32, i8 }
%struct.Savepoint = type { i8*, i64, i64, %struct.Savepoint* }
%struct.sqlite3PrngType = type { i8, i8, i8, [256 x i8] }
%struct.unix_syscall = type { i8*, void ()*, void ()* }
%struct.unixInodeInfo = type { %struct.unixFileId, %struct.sqlite3_mutex*, i32, i32, i8, i8, %struct.UnixUnusedFd*, i32, %struct.unixShmNode*, %struct.unixInodeInfo*, %struct.unixInodeInfo*, i64 }
%struct.unixFileId = type { i32, i64 }
%struct.UnixUnusedFd = type { i32, i32, %struct.UnixUnusedFd* }
%struct.unixShmNode = type { %struct.unixInodeInfo*, %struct.sqlite3_mutex*, i8*, i32, i32, i16, i8, i8, i8**, i32, %struct.unixShm* }
%struct.unixShm = type { %struct.unixShmNode*, %struct.unixShm*, i8, i8, i16, i16 }
%struct.unixFile = type { %struct.sqlite3_io_methods*, %struct.sqlite3_vfs*, %struct.unixInodeInfo*, i32, i8, i16, i32, i8*, %struct.UnixUnusedFd*, i8*, %struct.unixShm*, i32, i32, i64, i64, i64, i8*, i32, i32, i32, i32 }
%struct.Mapping = type { i8*, %struct.sqlite3_io_methods* }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.PCacheGlobal = type { %struct.PGroup, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.sqlite3_mutex*, %struct.PgFreeslot*, i32, i32 }
%struct.PGroup = type { %struct.sqlite3_mutex*, i32, i32, i32, i32, %struct.PgHdr1 }
%struct.PgHdr1 = type { %struct.sqlite3_pcache_page, i32, i16, i16, %struct.PgHdr1*, %struct.PCache1*, %struct.PgHdr1*, %struct.PgHdr1* }
%struct.PCache1 = type { %struct.PGroup*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PgHdr1**, %struct.PgHdr1*, i8* }
%struct.PgFreeslot = type { %struct.PgFreeslot* }
%struct.compareInfo = type { i8, i8, i8, i8 }
%struct.sqlite3AutoExtList = type { i32, void ()** }
%struct.PragmaName = type { i8*, i8, i8, i8, i8, i64 }
%struct.SelectDest = type { i8, i32, i32, i32, i8*, %struct.ExprList* }
%struct.FuncDefHash = type { [23 x %struct.FuncDef*] }
%struct.anon.22 = type { i32, i32 }
%struct._malloc_zone_t = type { i8*, i8*, i64 (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i64)*, i8* (%struct._malloc_zone_t*, i64, i64)*, i8* (%struct._malloc_zone_t*, i64)*, void (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i8*, i64)*, void (%struct._malloc_zone_t*)*, i8*, i32 (%struct._malloc_zone_t*, i64, i8**, i32)*, void (%struct._malloc_zone_t*, i8**, i32)*, %struct.malloc_introspection_t*, i32, i8* (%struct._malloc_zone_t*, i64, i64)*, void (%struct._malloc_zone_t*, i8*, i64)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*, i8*)* }
%struct.malloc_introspection_t = type { i32 (i32, i8*, i32, i64, i32 (i32, i64, i64, i8**)*, void (i32, i8*, i32, %struct.vm_range_t*, i32)*)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i32)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, %struct.malloc_statistics_t*)*, i32 (%struct._malloc_zone_t*)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*, void (i8*, i8*)*)*, void (%struct._malloc_zone_t*)*, void (i32, i32, i64, i32 (i32, i64, i64, i8**)*, void (i8*, ...)*)*, void (i32, i64, i32 (i32, i64, i64, i8**)*, %struct.malloc_statistics_t*)* }
%struct.vm_range_t = type { i64, i64 }
%struct.malloc_statistics_t = type { i32, i64, i64, i64 }
%struct.sqlite3_api_routines = type { i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, double)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*, i8*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, %struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i32 (i8*, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, double (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i64 (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, %struct.sqlite3_value* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3*, i32 (i8*)*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*)*, i32 (%struct.sqlite3_stmt*)*, %struct.sqlite3* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*)*, i32 (i32)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, void (i8*)*, void (i8**)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3*, i8*, i8***, i32*, i32*, i8**)*, i32 ()*, void (%struct.sqlite3*)*, i64 (%struct.sqlite3*)*, i8* ()*, i32 ()*, i8* (i32)*, i8* (i8*, ...)*, i32 (i8*, %struct.sqlite3**)*, i32 (i8*, %struct.sqlite3**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i8* (%struct.sqlite3*, void (i8*, i8*, i64)*, i8*)*, void (%struct.sqlite3*, i32, i32 (i8*)*, i8*)*, i8* (i8*, i32)*, i32 (%struct.sqlite3_stmt*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, double)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i64)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, %struct.sqlite3_value*)*, i8* (%struct.sqlite3*, void (i8*)*, i8*)*, i32 (%struct.sqlite3*, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*)*, void (%struct.sqlite3_context*, i32, i8*, void (i8*)*)*, i8* (i32, i8*, i8*, ...)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i8**, i8**, i32*, i32*, i32*)*, void ()*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, void (i8*, i8*)*, i8*)*, i32 (%struct.sqlite3_stmt*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3*, void (i8*, i32, i8*, i8*, i64)*, i8*)*, i8* (%struct.sqlite3_context*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, double (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i64 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob**)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*)*, i64 (i32)*, i64 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (i8*, %struct.sqlite3**, i32, i8*)*, i32 (i32)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, i32 (i32)*, void (i32)*, %struct.sqlite3_vfs* (i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*)*, i32 ()*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, ...)*, void (i32, i8*)*, %struct.sqlite3* (%struct.sqlite3_context*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i32, i32)*, %struct.sqlite3_stmt* (%struct.sqlite3*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*)*, i32 (i32, i32*, i32*, i32)*, i32 (%struct.sqlite3_backup*)*, %struct.sqlite3_backup* (%struct.sqlite3*, i8*, %struct.sqlite3*, i8*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*, i32)*, i8* (i32)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i32, ...)*, %struct.sqlite3_mutex* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32*, i32*, i32)*, i32 (%struct.sqlite3*)*, void (i32, i8*, ...)*, i64 (i64)*, i8* ()*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*, void (i8**, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i8*)*, i8* (%struct.sqlite3*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*)*, i32 (%struct.sqlite3_blob*, i64)*, i32 (%struct.sqlite3*, i32, ...)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*)*, i8* (i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i8*, i64)*, i8* (i8*, i8*)*, i8* (i32, i8*, i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32, i32*, i32*)*, i32 (void ()*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8)*, i32 (void ()*)*, i32 (%struct.sqlite3*, i8*, i8*, i8**)*, i8* (i64)*, i64 (i8*)*, i8* (i8*, i64)*, void ()*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8)*, i32 (i8*, i8*)*, %struct.sqlite3_value* (%struct.sqlite3_value*)*, void (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_context*, i64)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_value*)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, i64*, i64*, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32 (i32, i8*, i8*, i8*)*, i8*)*, i8* (%struct.sqlite3_stmt*)*, void (%struct.sqlite3*, i64)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i8*, void (i8*)*)*, i8* (%struct.sqlite3_value*, i8*)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_index_info*, i32)*, i32 ()*, i32 (i32, i8**, i32*)*, i32 (i8*, i32)*, %struct.sqlite3_str* (%struct.sqlite3*)*, i8* (%struct.sqlite3_str*)*, void (%struct.sqlite3_str*, i8*, ...)*, void (%struct.sqlite3_str*, i8*, %struct.__va_list_tag*)*, void (%struct.sqlite3_str*, i8*, i32)*, void (%struct.sqlite3_str*, i8*)*, void (%struct.sqlite3_str*, i32, i8)*, void (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i8* (%struct.sqlite3_str*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*)*, i8* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i8**)*, i64 (i64)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*, i8*, i8*, i32, i8**)*, void (i8*)* }
%struct.sqlite3_stmt = type opaque
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %struct.sqlite3_index_constraint*, i32, %struct.sqlite3_index_orderby*, %struct.sqlite3_index_constraint_usage*, i32, i8*, i32, i32, double, i64, i32, i64 }
%struct.sqlite3_index_constraint = type { i32, i8, i8, i32 }
%struct.sqlite3_index_orderby = type { i32, i8 }
%struct.sqlite3_index_constraint_usage = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sqlite3_blob = type opaque
%struct.WindowUpdate = type { i8*, i32, i32, i32 }
%struct.anon.23 = type { i8, i8, i8 }
%struct.EncName = type { i8*, i8 }
%struct.OpenMode = type { i8*, i32 }
%struct.RowSet = type { %struct.RowSetChunk*, %struct.sqlite3*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, i16, i16, i32 }
%struct.RowSetChunk = type { %struct.RowSetChunk*, [42 x %struct.RowSetEntry] }
%struct.RowSetEntry = type { i64, %struct.RowSetEntry*, %struct.RowSetEntry* }
%struct.UnpackedRecord = type { %struct.KeyInfo*, %struct.sqlite3_value*, i16, i8, i8, i8, i8, i8 }
%struct.BtreePayload = type { i8*, i64, i8*, %struct.sqlite3_value*, i16, i32, i32 }
%struct.DateTime = type { i64, i32, i32, i32, i32, i32, i32, double, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct.PrintfArguments = type { i32, i32, %struct.sqlite3_value** }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.flock = type { i64, i64, i32, i16, i16 }
%struct.timeval = type { i64, i32 }
%struct.statfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.fsid, i32, i32, i32, i32, [16 x i8], [1024 x i8], [1024 x i8], i32, [7 x i32] }
%struct.fsid = type { [2 x i32] }
%struct.WalCkptInfo = type { i32, [5 x i32], [8 x i8], i32, i32 }
%struct.WalHashLoc = type { i16*, i32*, i32 }
%struct.WalIterator = type { i32, i32, [1 x %struct.WalSegment] }
%struct.WalSegment = type { i32, i16*, i32*, i32, i32 }
%struct.WalWriter = type { %struct.Wal*, %struct.sqlite3_file*, i64, i32, i32 }
%struct.CellArray = type { i32, %struct.MemPage*, i8**, i16*, [6 x i8*], [6 x i32] }
%struct.IntegrityCk = type { %struct.BtShared*, %struct.Pager*, i8*, i32, i32, i32, i32, i8*, i32, i32, %struct.sqlite3_str, i32*, %struct.sqlite3* }
%struct.ValueNewStat4Ctx = type { %struct.Parse*, %struct.Index*, %struct.UnpackedRecord**, i32 }
%struct.ReusableSpace = type { i8*, i64, i64 }
%struct.Incrblob = type { i32, i32, i16, %struct.BtCursor*, %struct.sqlite3_stmt*, %struct.sqlite3*, i8*, %struct.Table* }
%struct.PmaReader = type { i64, i64, i32, i32, %struct.sqlite3_file*, i8*, i8*, i8*, i32, i8*, %struct.IncrMerger* }
%struct.IncrMerger = type { %struct.SortSubtask*, %struct.MergeEngine*, i64, i32, i32, i32, [2 x %struct.SorterFile] }
%struct.SortSubtask = type { %struct.SQLiteThread*, i32, %struct.VdbeSorter*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)*, %struct.SorterFile, %struct.SorterFile }
%struct.SQLiteThread = type { %struct._opaque_pthread_t*, i32, i8*, i8* (i8*)*, i8* }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.VdbeSorter = type { i32, i32, i32, i32, %struct.PmaReader*, %struct.MergeEngine*, %struct.sqlite3*, %struct.KeyInfo*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32, i8, i8, i8, i8, i8, [1 x %struct.SortSubtask] }
%struct.SorterList = type { %struct.SorterRecord*, i8*, i32 }
%struct.SorterRecord = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.SorterRecord* }
%struct.SorterFile = type { %struct.sqlite3_file*, i64 }
%struct.MergeEngine = type { i32, %struct.SortSubtask*, i32*, %struct.PmaReader* }
%struct.PmaWriter = type { i32, i8*, i32, i32, i32, i64, %struct.sqlite3_file* }
%struct.MemJournal = type { %struct.sqlite3_io_methods*, i32, i32, i32, %struct.FileChunk*, %struct.FilePoint, %struct.FilePoint, i32, %struct.sqlite3_vfs*, i8* }
%struct.FileChunk = type { %struct.FileChunk*, [8 x i8] }
%struct.FilePoint = type { i64, %struct.FileChunk* }
%struct.Walker = type { %struct.Parse*, i32 (%struct.Walker*, %struct.Expr*)*, i32 (%struct.Walker*, %struct.Select*)*, void (%struct.Walker*, %struct.Select*)*, i32, i16, %union.anon.12 }
%union.anon.12 = type { %struct.NameContext* }
%struct.NameContext = type { %struct.Parse*, %struct.SrcList*, %union.anon.13, %struct.NameContext*, i32, i32, i32, %struct.Select* }
%union.anon.13 = type { %struct.ExprList* }
%struct.RenameCtx = type { %struct.RenameToken*, i32, i32, %struct.Table*, i8* }
%struct.WhereInfo = type { %struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.ExprList*, %struct.Expr*, [2 x i32], i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i16, i32, %struct.WhereLoop*, %struct.WhereExprMod*, i64, %struct.WhereClause, %struct.WhereMaskSet, [1 x %struct.WhereLevel] }
%struct.WhereLoop = type { i64, i64, i8, i8, i16, i16, i16, %union.anon.15, i32, i16, i16, i16, %struct.WhereTerm**, %struct.WhereLoop*, [3 x %struct.WhereTerm*] }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i16, i16, i16, i16, %struct.Index* }
%struct.WhereTerm = type { %struct.Expr*, %struct.WhereClause*, i16, i16, i16, i8, i8, i32, i32, i32, %union.anon.18, i64, i64 }
%union.anon.18 = type { %struct.WhereOrInfo* }
%struct.WhereOrInfo = type { %struct.WhereClause, i64 }
%struct.WhereExprMod = type { %struct.WhereExprMod*, %struct.Expr*, %struct.Expr }
%struct.WhereClause = type { %struct.WhereInfo*, %struct.WhereClause*, i8, i8, i32, i32, %struct.WhereTerm*, [8 x %struct.WhereTerm] }
%struct.WhereMaskSet = type { i32, i32, [64 x i32] }
%struct.WhereLevel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %union.anon.19, %struct.WhereLoop*, i64 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32, %struct.InLoop* }
%struct.InLoop = type { i32, i32, i32, i32, i8 }
%struct.InitData = type { %struct.sqlite3*, i8**, i32, i32, i32, i32 }
%struct.RowLoadInfo = type { i32, i8 }
%struct.SortCtx = type { %struct.ExprList*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.RowLoadInfo* }
%struct.DistinctCtx = type { i8, i8, i32, i32 }
%struct.SubstContext = type { %struct.Parse*, i32, i32, i32, %struct.ExprList* }
%struct.WhereConst = type { %struct.Parse*, i32, i32, %struct.Expr** }
%struct.IdxExprTrans = type { %struct.Expr*, i32, i32, i32, i32, %struct.WhereInfo*, %struct.sqlite3* }
%struct.WhereAndInfo = type { %struct.WhereClause }
%struct.WhereOrSet = type { i16, [3 x %struct.WhereOrCost] }
%struct.WhereOrCost = type { i64, i16, i16 }
%struct.WhereScan = type { %struct.WhereClause*, %struct.WhereClause*, i8*, %struct.Expr*, i8, i8, i8, i32, i32, [11 x i32], [11 x i16] }
%struct.WhereLoopBuilder = type { %struct.WhereInfo*, %struct.WhereClause*, %struct.ExprList*, %struct.WhereLoop*, %struct.WhereOrSet*, i8, i8, i32 }
%struct.WherePath = type { i64, i64, i16, i16, i16, i8, %struct.WhereLoop** }
%struct.WindowCodeArg = type { %struct.Parse*, %struct.Window*, %struct.Vdbe*, i32, i32, i32, i32, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg }
%struct.WindowCsrAndReg = type { i32, i32 }
%struct.yyParser = type { %struct.yyStackEntry*, %struct.Parse*, [100 x %struct.yyStackEntry], %struct.yyStackEntry* }
%struct.yyStackEntry = type { i16, i16, %union.YYMINORTYPE }
%union.YYMINORTYPE = type { %struct.Token }
%struct.FuncDestructor = type { i32, void (i8*)*, i8* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }
%struct.DbFixer = type { %struct.Parse*, %struct.Schema*, i8, i8*, i8*, %struct.Token* }

@sqlite3_version = constant [7 x i8] c"3.32.0\00", align 1
@sqlite3Stat = local_unnamed_addr global %struct.sqlite3StatType zeroinitializer, align 8
@statMutex = local_unnamed_addr constant [10 x i8] c"\00\01\01\00\00\00\00\01\00\00", align 1
@sqlite3Config = external dso_local global %struct.Sqlite3Config, align 8
@getDigits.aMx = internal unnamed_addr constant [6 x i16] [i16 12, i16 14, i16 24, i16 31, i16 59, i16 9999], align 2
@sqlite3CtypeMap = internal constant [256 x i8] calign 16
@.str = private unnamed_addr constant [8 x i8] c"20b:20e\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"20c:20e\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"20e\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"40f-21a-21d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"local time unavailable\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@aXformType = local_unnamed_addr constant [6 x %struct.anon.9] [%struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), double 0x425B0625EAB00000, double 1.000000e+03 }, %struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double 0x41FCD35BA5000000, double 6.000000e+04 }, %struct.anon.9 { i8 0, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), double 0x419EBF50B0000000, double 3.600000e+06 }, %struct.anon.9 { i8 0, i8 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), double 0x41547F8B40000000, double 8.640000e+07 }, %struct.anon.9 { i8 1, i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), double 1.765460e+05, double 2.592000e+09 }, %struct.anon.9 { i8 2, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), double 1.471300e+04, double 3.153600e+10 }], align 16
@sqlite3UpperToLower = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@.str.12 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"unixepoch\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"weekday \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"start of \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"%06.3f\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"%.16g\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@vfsList = local_unnamed_addr global %struct.sqlite3_vfs* null, align 8
@sqlite3Hooks = local_unnamed_addr global %struct.BenignMallocHooks zeroinitializer, align 8
@pthreadMutexAlloc.staticMutexes = internal global [12 x %struct.sqlite3_mutex] [%struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }], align 16
@mem0 = local_unnamed_addr global %struct.Mem0Global zeroinitializer, align 8
@aDigits = local_unnamed_addr constant [33 x i8] c"0123456789ABCDEF0123456789abcdef\00", align 16
@aPrefix = local_unnamed_addr constant [7 x i8] c"-x0\00X0\00", align 1
@fmtinfo = local_unnamed_addr constant [23 x %struct.et_info] [%struct.et_info { i8 100, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 115, i8 0, i8 4, i8 5, i8 0, i8 0 }, %struct.et_info { i8 103, i8 0, i8 1, i8 3, i8 30, i8 0 }, %struct.et_info { i8 122, i8 0, i8 4, i8 6, i8 0, i8 0 }, %struct.et_info { i8 113, i8 0, i8 4, i8 9, i8 0, i8 0 }, %struct.et_info { i8 81, i8 0, i8 4, i8 10, i8 0, i8 0 }, %struct.et_info { i8 119, i8 0, i8 4, i8 14, i8 0, i8 0 }, %struct.et_info { i8 99, i8 0, i8 0, i8 8, i8 0, i8 0 }, %struct.et_info { i8 111, i8 8, i8 0, i8 0, i8 0, i8 2 }, %struct.et_info { i8 117, i8 10, i8 0, i8 16, i8 0, i8 0 }, %struct.et_info { i8 120, i8 16, i8 0, i8 0, i8 16, i8 1 }, %struct.et_info { i8 88, i8 16, i8 0, i8 0, i8 0, i8 4 }, %struct.et_info { i8 102, i8 0, i8 1, i8 1, i8 0, i8 0 }, %struct.et_info { i8 101, i8 0, i8 1, i8 2, i8 30, i8 0 }, %struct.et_info { i8 69, i8 0, i8 1, i8 2, i8 14, i8 0 }, %struct.et_info { i8 71, i8 0, i8 1, i8 3, i8 14, i8 0 }, %struct.et_info { i8 105, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 110, i8 0, i8 0, i8 4, i8 0, i8 0 }, %struct.et_info { i8 37, i8 0, i8 0, i8 7, i8 0, i8 0 }, %struct.et_info { i8 112, i8 16, i8 0, i8 13, i8 0, i8 1 }, %struct.et_info { i8 84, i8 0, i8 0, i8 11, i8 0, i8 0 }, %struct.et_info { i8 83, i8 0, i8 0, i8 12, i8 0, i8 0 }, %struct.et_info { i8 114, i8 10, i8 1, i8 15, i8 0, i8 0 }], align 16
@arRound = local_unnamed_addr constant [10 x double] [double 5.000000e-01, double 5.000000e-02, double 5.000000e-03, double 5.000000e-04, double 5.000000e-05, double 5.000000e-06, double 5.000000e-07, double 5.000000e-08, double 5.000000e-09, double 5.000000e-10], align 16
@.str.26 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@sqlite3_str_vappendf.zOrd = internal unnamed_addr constant [9 x i8] c"thstndrd\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@sqlite3OomStr = internal global %struct.sqlite3_str { %struct.sqlite3* null, i8* null, i32 0, i32 0, i32 0, i8 7, i8 0 }, align 8
@sqlite3Prng = local_unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"922337203685477580\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"API call with %s database connection pointer\00", align 1
@findElementWithHash.nullElement = internal global %struct.HashElem zeroinitializer, align 8
@randomnessPid = global i32 0, align 4
@.str.35 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"pread64\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"pwrite64\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"fallocate\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"openDirectory\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"mremap\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@aSyscall = external local_unnamed_addr global [29 x %struct.unix_syscall], align 16
@.str.64 = private unnamed_addr constant [43 x i8] c"attempt to open \22%s\22 as file descriptor %d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@unixBigLock = local_unnamed_addr global %struct.sqlite3_mutex* null, align 8
@inodeList = local_unnamed_addr global %struct.unixInodeInfo* null, align 8
@.str.66 = private unnamed_addr constant [31 x i8] c"os_unix.c:%d: (%d) %s(%s) - %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"cannot fstat db file %s\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"file unlinked while open: %s\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"multiple links to file: %s\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"file renamed while open: %s\00", align 1
@sqlite3PendingByte = internal unnamed_addr global i32 1073741824, align 4
@.str.72 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"full_fsync\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s-shm\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"readonly_shm\00", align 1
@posixIoMethods = external constant %struct.sqlite3_io_methods, align 8
@posixIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nolockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@dotlockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@dotlockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@flockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@flockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@afpIoMethods = external constant %struct.sqlite3_io_methods, align 8
@afpIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@proxyIoMethods = external constant %struct.sqlite3_io_methods, align 8
@proxyIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nfsIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nfsIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@autolockIoFinderImpl.aMap = internal unnamed_addr constant [6 x %struct.Mapping] [%struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct.sqlite3_io_methods* @nolockIoMethods }, %struct.Mapping zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [4 x i8] c"hfs\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"ufs\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"afpfs\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"smbfs\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"webdav\00", align 1
@autolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"psow\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"unix-excl\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s.lock\00", align 1
@unixTempFileDir.azDirs = internal unnamed_addr global [6 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [9 x i8] c"/var/tmp\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@sqlite3_temp_directory = local_unnamed_addr global i8* null, align 8
@.str.88 = private unnamed_addr constant [14 x i8] c"SQLITE_TMPDIR\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"%s/etilqs_%llx%c\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"modeof\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"msdos\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exfat\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"SQLITE_FORCE_PROXY_LOCKING\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c":auto:\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sqliteplocks\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@__const.proxyGetHostID.timeout = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.101 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"path error (len %d)\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"read error (len %d)\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"create failed (%d)\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"write failed (%d)\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"rename failed (%d)\00", align 1
@__stderrp = external local_unnamed_addr global %struct.__sFILE*, align 8
@.str.107 = private unnamed_addr constant [24 x i8] c"broke stale lock on %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"failed to break stale lock on %s, %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"-conch\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c":auto: (not held)\00", align 1
@sqlite3_os_init.aVfs = external dso_local global [9 x %struct.sqlite3_vfs], align 16
@.str.111 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"unix-none\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"unix-dotfile\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"unix-posix\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"unix-flock\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"unix-afp\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"unix-nfs\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"unix-proxy\00", align 1
@pcache1_g = global %struct.PCacheGlobal zeroinitializer, align 8
@aJournalMagic = constant [8 x i8] c"\D9\D5\05\F9 \A1c\D7", align 1
@zeroJournalHdr.zeroHdr = internal constant [28 x i8] zeroinitializer, align 16
@.str.119 = private unnamed_addr constant [27 x i8] c"recovered %d pages from %s\00", align 1
@syncJournal.zerobyte = internal constant i8 0, align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"recovered %d frames from WAL file %s\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"cannot limit WAL size: %s\00", align 1
@zMagicHeader = constant [16 x i8] c"SQLite format 3\00", align 16
@sqlite3SharedCacheList = internal unnamed_addr global %struct.BtShared* null, align 8
@.str.122 = private unnamed_addr constant [4 x i8] c"@  \00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"invalid page number %d\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"2nd reference to page %d\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Failed to read ptrmap key=%d\00", align 1
@.str.127 = private unnamed_addr constant [54 x i8] c"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"failed to get page %d\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"freelist leaf count too big on page %d\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%s is %d but should be %d\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.132 = private unnamed_addr constant [21 x i8] c"overflow list length\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"Page %d: \00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"unable to get the page. error code=%d\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"btreeInitPage() returns error code %d\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"free space corruption\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"On tree page %d cell %d: \00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"On page %d at right child: \00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Offset %d out of range %d..%d\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"Extends off end of page\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"Rowid %lld out of order\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Child page depth differs\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Multiple uses for byte %u of page %d\00", align 1
@.str.144 = private unnamed_addr constant [52 x i8] c"Fragmentation of %d bytes reported as %d on page %d\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"unknown database %s\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"destination database is in use\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"source and destination must be distinct\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"%!.15g\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"k(%d\00", align 1
@.str.152 = private constant [7 x i8] c"BINARY\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c",%s%s%s\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"N.\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c")\00", align 1
@displayP4.encnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0)], align 16
@.str.157 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"16LE\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"16BE\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"%.18s-%s\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"(blob)\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"%s-mjXXXXXX9XXz%c%c\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"MJ delete: %s\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"MJ collide: %s\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"-mj%06X9%02X\00", align 1
@sqlite3SmallTypeSizes = local_unnamed_addr constant [128 x i8] c"\00\01\02\03\04\06\08\08\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12\13\13\14\14\15\15\16\16\17\17\18\18\19\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !!\22\22##$$%%&&''(())**++,,--..//00112233445566778899", align 16
@.str.172 = private unnamed_addr constant [45 x i8] c"API called with finalized prepared statement\00", align 1
@.str.173 = private unnamed_addr constant [40 x i8] c"API called with NULL prepared statement\00", align 1
@sqlite3_value_type.aType = internal unnamed_addr constant [64 x i8] c"\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\02\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05\04\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05", align 16
@.str.174 = private unnamed_addr constant [23 x i8] c"string or blob too big\00", align 1
@columnNullValue.nullMem = internal constant %struct.sqlite3_value { %union.MemValue zeroinitializer, i16 1, i8 0, i8 0, i32 0, i8* null, i8* null, i32 0, i32 0, %struct.sqlite3* null, void (i8*)* null }, align 8
@.str.175 = private unnamed_addr constant [40 x i8] c"bind on a busy prepared statement: [%s]\00", align 1
@enableJit = local_unnamed_addr global i8 -1, align 1
@Argv = local_unnamed_addr global i8** null, align 8
@Argc = local_unnamed_addr global i32 -1, align 4
@maxVdbeSteps = local_unnamed_addr global i64 -1, align 8
@pcHasBeenSet = local_unnamed_addr global i8 0, align 1
@iCompare = local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [29 x i8] c"cannot open value of type %s\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"no such rowid: %lld\00", align 1
@.str.182 = private unnamed_addr constant [36 x i8] c"cannot open table without rowid: %s\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"cannot open view: %s\00", align 1
@.str.184 = private unnamed_addr constant [21 x i8] c"no such column: \22%s\22\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"foreign key\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.187 = private unnamed_addr constant [34 x i8] c"cannot open %s column for writing\00", align 1
@vdbeSorterCompareInt.aLen = internal unnamed_addr constant [10 x i8] c"\00\01\02\03\04\06\08\00\00\00", align 1
@MemJournalMethods = external constant %struct.sqlite3_io_methods, align 8
@.str.188 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"excluded\00", align 1
@.str.191 = private unnamed_addr constant [31 x i8] c"misuse of aliased aggregate %s\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"misuse of aliased window function %s\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"row value misused\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"double-quoted string literal: \22%w\22\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"no such column\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"ambiguous column name\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"%s: %s.%s.%s\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"%s: %s.%s\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.200 = private unnamed_addr constant [28 x i8] c"partial index WHERE clauses\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"index expressions\00", align 1
@.str.202 = private unnamed_addr constant [18 x i8] c"CHECK constraints\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"generated columns\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"%s prohibited in %s\00", align 1
@.str.205 = private unnamed_addr constant [17 x i8] c"the \22.\22 operator\00", align 1
@.str.206 = private unnamed_addr constant [71 x i8] c"second argument to likelihood() must be a constant between 0.0 and 1.0\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"not authorized to use function: %s\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"non-deterministic functions\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"%.*s() may not be used as a window function\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"misuse of %s function %.*s()\00", align 1
@.str.213 = private unnamed_addr constant [23 x i8] c"no such function: %.*s\00", align 1
@.str.214 = private unnamed_addr constant [45 x i8] c"wrong number of arguments to function %.*s()\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"FILTER may not be used with non-aggregate %.*s()\00", align 1
@.str.216 = private unnamed_addr constant [11 x i8] c"subqueries\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.218 = private unnamed_addr constant [56 x i8] c"%r %s BY term out of range - should be between 1 and %d\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"too many terms in ORDER BY clause\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"ORDER\00", align 1
@.str.221 = private unnamed_addr constant [61 x i8] c"%r ORDER BY term does not match any column in the result set\00", align 1
@.str.222 = private unnamed_addr constant [44 x i8] c"a GROUP BY clause is required before HAVING\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"GROUP\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"aggregate functions are not allowed in the GROUP BY clause\00", align 1
@.str.225 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.226 = private unnamed_addr constant [26 x i8] c"hex literal too big: %s%s\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"sqlite_\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"table %s may not be altered\00", align 1
@.str.229 = private unnamed_addr constant [156 x i8] c"SELECT 1 FROM \22%w\22.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.231 = private unnamed_addr constant [155 x i8] c"SELECT 1 FROM temp.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"view\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"cannot rename columns of %s \22%s\22\00", align 1
@.str.234 = private unnamed_addr constant [21 x i8] c"error in %s %s%s: %s\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c" after rename\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"\22%w\22\00", align 1
@.str.237 = private unnamed_addr constant [13 x i8] c"sqlite_stat1\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"tbl,idx,stat\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"sqlite_stat4\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"sqlite_stat3\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"CREATE TABLE %Q.%s(%s)\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"DELETE FROM %Q.%s WHERE %s=%Q\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"stat_init\00", align 1
@statInitFuncdef = external constant %struct.FuncDef, align 8
@.str.244 = private unnamed_addr constant [10 x i8] c"stat_push\00", align 1
@statPushFuncdef = external constant %struct.FuncDef, align 8
@.str.245 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c" %llu\00", align 1
@.str.247 = private unnamed_addr constant [9 x i8] c"stat_get\00", align 1
@statGetFuncdef = external constant %struct.FuncDef, align 8
@.str.248 = private unnamed_addr constant [10 x i8] c"sqlite\\_%\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"BBB\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"tbl\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"unordered*\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"sz=[0-9]*\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"noskipscan*\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"too many attached databases - max %d\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"database %s is already in use\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"database is already attached\00", align 1
@.str.258 = private unnamed_addr constant [68 x i8] c"attached databases must use the same text encoding as main database\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"unable to open database: %s\00", align 1
@.str.261 = private unnamed_addr constant [21 x i8] c"no such database: %s\00", align 1
@.str.262 = private unnamed_addr constant [26 x i8] c"cannot detach database %s\00", align 1
@.str.263 = private unnamed_addr constant [22 x i8] c"database %s is locked\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"authorizer malfunction\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"generated columns cannot be part of the PRIMARY KEY\00", align 1
@.str.266 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.267 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c",\0A  \00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"\0A)\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@createTableStmt.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0)], align 16
@.str.271 = private unnamed_addr constant [6 x i8] c" TEXT\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c" NUM\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c" INT\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c" REAL\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"corrupt schema\00", align 1
@.str.276 = private unnamed_addr constant [56 x i8] c"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\00", align 1
@typeofFunc.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)], align 16
@.str.277 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.279 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@globInfo = constant %struct.compareInfo { i8 42, i8 63, i8 91, i8 0 }, align 1
@likeInfoNorm = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 1 }, align 1
@likeInfoAlt = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 0 }, align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"LIKE or GLOB pattern too complex\00", align 1
@.str.282 = private unnamed_addr constant [45 x i8] c"ESCAPE expression must be a single character\00", align 1
@hexdigits = local_unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@.str.283 = private unnamed_addr constant [7 x i8] c"%!.20e\00", align 1
@trimFunc.lenOne = internal unnamed_addr constant [1 x i8] c"\01", align 1
@trimFunc.azOne = internal constant [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.284, i32 0, i32 0)], align 8
@.str.284 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"not authorized\00", align 1
@.str.286 = private unnamed_addr constant [30 x i8] c"FOREIGN KEY constraint failed\00", align 1
@sqlite3Autoext = local_unnamed_addr global %struct.sqlite3AutoExtList zeroinitializer, align 8
@.str.287 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.288 = private unnamed_addr constant [4 x i8] c"seq\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.290 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"on_update\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"on_delete\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"notnull\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"dflt_value\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"pk\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"coll\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"narg\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"hght\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"flgs\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"partial\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"rowid\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"fkid\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"busy\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.322 = private unnamed_addr constant [13 x i8] c"checkpointed\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"database\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.325 = private unnamed_addr constant [11 x i8] c"cache_size\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@pragCName = local_unnamed_addr constant [51 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0)], align 16
@.str.327 = private unnamed_addr constant [15 x i8] c"application_id\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"auto_vacuum\00", align 1
@.str.329 = private unnamed_addr constant [16 x i8] c"automatic_index\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"busy_timeout\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"cache_spill\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"case_sensitive_like\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"cell_size_check\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"checkpoint_fullfsync\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"collation_list\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"compile_options\00", align 1
@.str.337 = private unnamed_addr constant [14 x i8] c"count_changes\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"database_list\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"default_cache_size\00", align 1
@.str.341 = private unnamed_addr constant [19 x i8] c"defer_foreign_keys\00", align 1
@.str.342 = private unnamed_addr constant [23 x i8] c"empty_result_callbacks\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"foreign_key_check\00", align 1
@.str.345 = private unnamed_addr constant [17 x i8] c"foreign_key_list\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"foreign_keys\00", align 1
@.str.347 = private unnamed_addr constant [15 x i8] c"freelist_count\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"full_column_names\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"fullfsync\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"function_list\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"hard_heap_limit\00", align 1
@.str.352 = private unnamed_addr constant [25 x i8] c"ignore_check_constraints\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"incremental_vacuum\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"index_info\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"index_list\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"index_xinfo\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"integrity_check\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"journal_mode\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"journal_size_limit\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"legacy_alter_table\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"lock_proxy_file\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"locking_mode\00", align 1
@.str.363 = private unnamed_addr constant [15 x i8] c"max_page_count\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"mmap_size\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"page_count\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"page_size\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"pragma_list\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"query_only\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"quick_check\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"read_uncommitted\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"recursive_triggers\00", align 1
@.str.373 = private unnamed_addr constant [26 x i8] c"reverse_unordered_selects\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"schema_version\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"secure_delete\00", align 1
@.str.376 = private unnamed_addr constant [19 x i8] c"short_column_names\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"shrink_memory\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"soft_heap_limit\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c"synchronous\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"table_info\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"table_xinfo\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"temp_store\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"temp_store_directory\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.385 = private unnamed_addr constant [15 x i8] c"trusted_schema\00", align 1
@.str.386 = private unnamed_addr constant [13 x i8] c"user_version\00", align 1
@.str.387 = private unnamed_addr constant [19 x i8] c"wal_autocheckpoint\00", align 1
@.str.388 = private unnamed_addr constant [15 x i8] c"wal_checkpoint\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"writable_schema\00", align 1
@aPragmaName = constant [64 x %struct.PragmaName] [%struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i8 2, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.329, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 32768 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i8 4, i8 16, i8 50, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8 5, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i32 0, i32 0), i8 6, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), i8 7, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 2097152 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.334, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8 8, i8 16, i8 32, i8 2, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i32 0, i32 0), i8 9, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.337, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4294967296 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 15 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8 11, i8 17, i8 41, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i8 12, i8 -107, i8 49, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.341, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 524288 }, %struct.PragmaName { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.342, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 256 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i32 0, i32 0), i8 13, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8 14, i8 17, i8 37, i8 4, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.345, i32 0, i32 0), i8 15, i8 97, i8 0, i8 8, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16384 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.347, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8 16, i8 16, i8 21, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), i8 17, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.352, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 512 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), i8 18, i8 3, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8 19, i8 97, i8 15, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i8 20, i8 97, i8 32, i8 5, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i32 0, i32 0), i8 19, i8 97, i8 15, i8 6, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), i8 22, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i32 0, i32 0), i8 23, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 67108864 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i32 0, i32 0), i8 24, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8 25, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.363, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8 27, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8 29, i8 33, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), i8 30, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8 31, i8 16, i8 9, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1048576 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1024 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8192 }, %struct.PragmaName { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.373, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4096 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.374, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8 32, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.376, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 64 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i8 33, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8 34, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i32 0, i32 0), i8 35, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i8 36, i8 97, i8 8, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8 36, i8 97, i8 8, i8 7, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8 37, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i8 38, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0), i8 39, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.385, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 128 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 6 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.387, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.388, i32 0, i32 0), i8 41, i8 1, i8 44, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.389, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 134217729 }], align 16
@getSafetyLevel.zText = internal unnamed_addr constant [25 x i8] c"onoffalseyestruextrafull\00", align 16
@getSafetyLevel.iValue = internal unnamed_addr constant [8 x i8] c"\01\00\00\00\01\01\03\02", align 1
@.str.390 = private unnamed_addr constant [10 x i8] c"exclusive\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.396 = private unnamed_addr constant [62 x i8] c"temporary storage cannot be changed from within a transaction\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"SET NULL\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"SET DEFAULT\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"CASCADE\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"RESTRICT\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"NO ACTION\00", align 1
@pragmaFunclistLine.azEnc = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.404, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.404 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.407 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"sissii\00", align 1
@.str.409 = private unnamed_addr constant [31 x i8] c"malformed database schema (%s)\00", align 1
@.str.410 = private unnamed_addr constant [8 x i8] c"%z - %s\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"a NATURAL join may not have an ON or USING clause\00", align 1
@.str.412 = private unnamed_addr constant [55 x i8] c"cannot have both ON and USING clauses in the same join\00", align 1
@.str.413 = private unnamed_addr constant [64 x i8] c"cannot join using column %s - column not present in both tables\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"UNION ALL\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"INTERSECT\00", align 1
@.str.416 = private unnamed_addr constant [7 x i8] c"EXCEPT\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"UNION\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"USE TEMP B-TREE FOR %s\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.420 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"column%d\00", align 1
@.str.422 = private unnamed_addr constant [49 x i8] c"cannot use window functions in recursive queries\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"SETUP\00", align 1
@.str.424 = private unnamed_addr constant [42 x i8] c"recursive aggregate queries not supported\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"RECURSIVE STEP\00", align 1
@.str.426 = private unnamed_addr constant [23 x i8] c"SCAN %d CONSTANT ROW%s\00", align 1
@.str.427 = private unnamed_addr constant [42 x i8] c"%s clause should come after %s not before\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"ORDER BY\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"LIMIT\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"COMPOUND QUERY\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"LEFT-MOST SUBQUERY\00", align 1
@.str.432 = private unnamed_addr constant [21 x i8] c"%s USING TEMP B-TREE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"MERGE (%s)\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.437 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"'%s' is not a function\00", align 1
@.str.439 = private unnamed_addr constant [43 x i8] c"multiple references to recursive table: %s\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"circular reference: %s\00", align 1
@.str.441 = private unnamed_addr constant [38 x i8] c"table %s has %d values for %d columns\00", align 1
@.str.442 = private unnamed_addr constant [34 x i8] c"multiple recursive references: %s\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"recursive reference in a subquery: %s\00", align 1
@.str.444 = private unnamed_addr constant [39 x i8] c"too many references to \22%s\22: max 65535\00", align 1
@.str.445 = private unnamed_addr constant [31 x i8] c"access to view \22%s\22 prohibited\00", align 1
@.str.446 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"%s.%s.%s\00", align 1
@.str.448 = private unnamed_addr constant [18 x i8] c"no such table: %s\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"no tables specified\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"too many columns in result set\00", align 1
@.str.451 = private unnamed_addr constant [51 x i8] c"DISTINCT aggregates must have exactly one argument\00", align 1
@.str.452 = private unnamed_addr constant [18 x i8] c"SCAN TABLE %s%s%s\00", align 1
@.str.453 = private unnamed_addr constant [23 x i8] c" USING COVERING INDEX \00", align 1
@.str.454 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.455 = private unnamed_addr constant [65 x i8] c"sqlite3_get_table() called with two or more incompatible queries\00", align 1
@.str.456 = private unnamed_addr constant [4 x i8] c"CRE\00", align 1
@.str.457 = private unnamed_addr constant [4 x i8] c"INS\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"<expr>\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c" AND \00", align 1
@.str.460 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"%s=?\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"ANY(%s)\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.465 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.466 = private unnamed_addr constant [41 x i8] c"ON clause references tables to its right\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"NOCASE\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"automatic index on %s(%s)\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"auto-index\00", align 1
@.str.470 = private unnamed_addr constant [35 x i8] c"abbreviated query algorithm search\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"no query solution\00", align 1
@.str.472 = private unnamed_addr constant [56 x i8] c"second argument to nth_value must be a positive integer\00", align 1
@.str.473 = private unnamed_addr constant [45 x i8] c"argument of ntile must be a positive integer\00", align 1
@row_numberName = constant [11 x i8] c"row_number\00", align 1
@dense_rankName = constant [11 x i8] c"dense_rank\00", align 1
@rankName = constant [5 x i8] c"rank\00", align 1
@percent_rankName = constant [13 x i8] c"percent_rank\00", align 1
@cume_distName = constant [10 x i8] c"cume_dist\00", align 1
@ntileName = constant [6 x i8] c"ntile\00", align 1
@last_valueName = constant [11 x i8] c"last_value\00", align 1
@nth_valueName = constant [10 x i8] c"nth_value\00", align 1
@first_valueName = constant [12 x i8] c"first_value\00", align 1
@leadName = constant [5 x i8] c"lead\00", align 1
@lagName = constant [4 x i8] c"lag\00", align 1
@.str.474 = private unnamed_addr constant [19 x i8] c"no such window: %s\00", align 1
@windowCheckValue.azErr = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.478, i32 0, i32 0)], align 16
@.str.475 = private unnamed_addr constant [53 x i8] c"frame starting offset must be a non-negative integer\00", align 1
@.str.476 = private unnamed_addr constant [51 x i8] c"frame ending offset must be a non-negative integer\00", align 1
@.str.477 = private unnamed_addr constant [52 x i8] c"frame starting offset must be a non-negative number\00", align 1
@.str.478 = private unnamed_addr constant [50 x i8] c"frame ending offset must be a non-negative number\00", align 1
@windowCheckValue.aOp = internal unnamed_addr constant [5 x i32] [i32 57, i32 57, i32 54, i32 57, i32 57], align 16
@yy_action = local_unnamed_addr constant [1924 x i16] [i16 528, i16 1183, i16 528, i16 114, i16 111, i16 208, i16 114, i16 111, i16 208, i16 192, i16 1186, i16 528, i16 418, i16 528, i16 450, i16 528, i16 1447, i16 362, i16 528, i16 380, i16 6, i16 373, i16 70, i16 70, i16 42, i16 42, i16 476, i16 1423, i16 485, i16 418, i16 417, i16 911, i16 505, i16 42, i16 42, i16 71, i16 71, i16 51, i16 51, i16 912, i16 71, i16 71, i16 484, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 415, i16 380, i16 261, i16 261, i16 261, i16 261, i16 16, i16 16, i16 970, i16 970, i16 981, i16 984, i16 1226, i16 1226, i16 510, i16 525, i16 477, i16 525, i16 528, i16 491, i16 350, i16 236, i16 205, i16 486, i16 356, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 42, i16 42, i16 418, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1452, i16 349, i16 413, i16 1150, i16 1, i16 1, i16 534, i16 3, i16 1154, i16 1454, i16 1185, i16 348, i16 940, i16 286, i16 1081, i16 143, i16 1081, i16 380, i16 940, i16 114, i16 111, i16 208, i16 1234, i16 1440, i16 98, i16 370, i16 164, i16 974, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 261, i16 261, i16 228, i16 261, i16 261, i16 463, i16 460, i16 459, i16 306, i16 423, i16 296, i16 123, i16 435, i16 525, i16 306, i16 458, i16 525, i16 177, i16 1452, i16 499, i16 116, i16 116, i16 116, i16 115, i16 409, i16 285, i16 519, i16 218, i16 1221, i16 335, i16 1200, i16 380, i16 431, i16 120, i16 120, i16 120, i16 120, i16 113, i16 1221, i16 1109, i16 1110, i16 1111, i16 794, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 351, i16 12, i16 83, i16 1109, i16 81, i16 142, i16 256, i16 1109, i16 80, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 169, i16 426, i16 307, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1109, i16 1110, i16 1111, i16 1497, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 114, i16 111, i16 208, i16 528, i16 1109, i16 1109, i16 1110, i16 1111, i16 1491, i16 1109, i16 1110, i16 1111, i16 114, i16 111, i16 208, i16 380, i16 1193, i16 183, i16 1003, i16 321, i16 120, i16 120, i16 120, i16 120, i16 440, i16 71, i16 71, i16 487, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1379, i16 1468, i16 1109, i16 464, i16 1109, i16 1110, i16 1111, i16 281, i16 522, i16 522, i16 522, i16 97, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1392, i16 1334, i16 203, i16 473, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 164, i16 12, i16 1392, i16 1394, i16 1109, i16 1110, i16 1111, i16 228, i16 1076, i16 215, i16 463, i16 460, i16 459, i16 319, i16 488, i16 380, i16 334, i16 1465, i16 399, i16 816, i16 458, i16 1076, i16 239, i16 325, i16 1076, i16 407, i16 407, i16 407, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 285, i16 519, i16 1130, i16 809, i16 164, i16 235, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 189, i16 1392, i16 314, i16 178, i16 317, i16 425, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 382, i16 466, i16 1076, i16 419, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1076, i16 527, i16 396, i16 1076, i16 1109, i16 1130, i16 285, i16 519, i16 247, i16 264, i16 333, i16 469, i16 328, i16 468, i16 233, i16 380, i16 217, i16 812, i16 336, i16 1094, i16 324, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1076, i16 394, i16 960, i16 961, i16 1109, i16 1110, i16 1111, i16 285, i16 519, i16 1109, i16 444, i16 495, i16 163, i16 1076, i16 441, i16 347, i16 1076, i16 812, i16 951, i16 450, i16 505, i16 163, i16 950, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 1333, i16 1224, i16 1224, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 950, i16 950, i16 952, i16 528, i16 877, i16 115, i16 409, i16 13, i16 13, i16 293, i16 1422, i16 1109, i16 1110, i16 1111, i16 494, i16 380, i16 334, i16 1465, i16 526, i16 945, i16 866, i16 866, i16 388, i16 439, i16 32, i16 71, i16 71, i16 490, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 433, i16 284, i16 1471, i16 534, i16 3, i16 1154, i16 1109, i16 510, i16 474, i16 1446, i16 286, i16 378, i16 143, i16 6, i16 506, i16 1439, i16 509, i16 503, i16 1446, i16 1234, i16 508, i16 336, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 137, i16 5, i16 206, i16 1387, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 261, i16 261, i16 528, i16 255, i16 255, i16 533, i16 401, i16 1154, i16 1109, i16 1110, i16 1111, i16 270, i16 286, i16 525, i16 143, i16 380, i16 525, i16 406, i16 405, i16 335, i16 267, i16 1234, i16 335, i16 1109, i16 71, i16 71, i16 832, i16 218, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 261, i16 261, i16 467, i16 380, i16 355, i16 1023, i16 510, i16 1139, i16 192, i16 1139, i16 833, i16 145, i16 450, i16 525, i16 141, i16 475, i16 258, i16 1109, i16 1434, i16 896, i16 368, i16 71, i16 71, i16 1109, i16 1110, i16 1111, i16 1109, i16 218, i16 100, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 211, i16 1044, i16 528, i16 1386, i16 433, i16 282, i16 960, i16 1028, i16 1028, i16 447, i16 386, i16 397, i16 1319, i16 511, i16 1444, i16 357, i16 1045, i16 353, i16 6, i16 1109, i16 1110, i16 1111, i16 951, i16 414, i16 71, i16 71, i16 950, i16 528, i16 1109, i16 1110, i16 1111, i16 1046, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 125, i16 103, i16 1147, i16 898, i16 261, i16 261, i16 71, i16 71, i16 192, i16 852, i16 528, i16 386, i16 897, i16 207, i16 950, i16 950, i16 952, i16 525, i16 510, i16 853, i16 379, i16 380, i16 262, i16 262, i16 426, i16 307, i16 193, i16 512, i16 782, i16 783, i16 784, i16 386, i16 55, i16 55, i16 271, i16 525, i16 295, i16 450, i16 896, i16 390, i16 528, i16 380, i16 275, i16 404, i16 275, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1445, i16 380, i16 56, i16 56, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 268, i16 1233, i16 2, i16 377, i16 376, i16 121, i16 110, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 269, i16 285, i16 519, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 528, i16 439, i16 528, i16 9, i16 1109, i16 239, i16 1113, i16 450, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 528, i16 420, i16 528, i16 15, i16 15, i16 13, i16 13, i16 471, i16 528, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 393, i16 1130, i16 44, i16 44, i16 57, i16 57, i16 406, i16 405, i16 1431, i16 380, i16 13, i16 13, i16 1229, i16 872, i16 1136, i16 1109, i16 1110, i16 1111, i16 871, i16 1138, i16 1109, i16 1110, i16 1111, i16 1113, i16 439, i16 395, i16 294, i16 1137, i16 450, i16 455, i16 335, i16 104, i16 528, i16 102, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 433, i16 1109, i16 1139, i16 528, i16 1139, i16 13, i16 13, i16 232, i16 1130, i16 305, i16 109, i16 261, i16 261, i16 107, i16 520, i16 140, i16 4, i16 38, i16 1076, i16 1319, i16 274, i16 13, i16 13, i16 312, i16 525, i16 13, i16 13, i16 1319, i16 144, i16 502, i16 523, i16 1076, i16 528, i16 911, i16 1076, i16 288, i16 186, i16 528, i16 896, i16 528, i16 187, i16 912, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 410, i16 13, i16 13, i16 1109, i16 1110, i16 1111, i16 71, i16 71, i16 58, i16 58, i16 107, i16 520, i16 517, i16 4, i16 304, i16 289, i16 507, i16 1232, i16 273, i16 528, i16 272, i16 383, i16 164, i16 437, i16 1172, i16 1443, i16 501, i16 523, i16 1496, i16 6, i16 1025, i16 841, i16 493, i16 478, i16 1025, i16 481, i16 391, i16 324, i16 513, i16 8, i16 960, i16 59, i16 59, i16 408, i16 392, i16 500, i16 105, i16 105, i16 261, i16 261, i16 410, i16 261, i16 261, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 261, i16 261, i16 950, i16 525, i16 517, i16 301, i16 525, i16 528, i16 445, i16 261, i16 261, i16 261, i16 261, i16 525, i16 261, i16 261, i16 508, i16 207, i16 497, i16 285, i16 519, i16 528, i16 525, i16 496, i16 525, i16 260, i16 205, i16 525, i16 528, i16 60, i16 60, i16 528, i16 960, i16 950, i16 950, i16 952, i16 953, i16 27, i16 105, i16 105, i16 528, i16 1319, i16 896, i16 61, i16 61, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 62, i16 62, i16 950, i16 45, i16 45, i16 107, i16 520, i16 528, i16 4, i16 528, i16 438, i16 1044, i16 46, i16 46, i16 1175, i16 384, i16 298, i16 292, i16 300, i16 231, i16 230, i16 229, i16 523, i16 1442, i16 528, i16 1270, i16 1045, i16 6, i16 30, i16 47, i16 47, i16 49, i16 49, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1470, i16 1098, i16 412, i16 1046, i16 528, i16 265, i16 1238, i16 410, i16 50, i16 50, i16 366, i16 366, i16 365, i16 250, i16 363, i16 97, i16 1319, i16 791, i16 525, i16 517, i16 528, i16 31, i16 528, i16 446, i16 516, i16 1129, i16 63, i16 63, i16 528, i16 232, i16 212, i16 872, i16 291, i16 497, i16 428, i16 528, i16 871, i16 1022, i16 498, i16 1022, i16 290, i16 201, i16 64, i16 64, i16 65, i16 65, i16 528, i16 960, i16 1459, i16 528, i16 14, i16 14, i16 1269, i16 105, i16 105, i16 139, i16 937, i16 66, i16 66, i16 299, i16 106, i16 528, i16 410, i16 530, i16 529, i16 528, i16 422, i16 950, i16 127, i16 127, i16 214, i16 67, i16 67, i16 303, i16 107, i16 520, i16 97, i16 4, i16 156, i16 1411, i16 17, i16 158, i16 528, i16 52, i16 52, i16 528, i16 402, i16 68, i16 68, i16 528, i16 1204, i16 523, i16 804, i16 528, i16 819, i16 528, i16 383, i16 213, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1410, i16 69, i16 69, i16 528, i16 53, i16 53, i16 831, i16 830, i16 151, i16 151, i16 823, i16 410, i16 152, i16 152, i16 76, i16 76, i16 427, i16 528, i16 521, i16 384, i16 1010, i16 528, i16 1021, i16 517, i16 1021, i16 54, i16 54, i16 528, i16 381, i16 442, i16 528, i16 309, i16 528, i16 285, i16 519, i16 1266, i16 196, i16 497, i16 528, i16 72, i16 72, i16 954, i16 496, i16 128, i16 128, i16 804, i16 263, i16 819, i16 313, i16 73, i16 73, i16 960, i16 129, i16 129, i16 130, i16 130, i16 416, i16 105, i16 105, i16 95, i16 126, i16 126, i16 838, i16 839, i16 106, i16 528, i16 410, i16 530, i16 529, i16 1098, i16 412, i16 950, i16 316, i16 265, i16 942, i16 1203, i16 1010, i16 238, i16 366, i16 366, i16 365, i16 250, i16 363, i16 432, i16 318, i16 791, i16 238, i16 150, i16 150, i16 528, i16 107, i16 520, i16 528, i16 4, i16 528, i16 320, i16 528, i16 954, i16 212, i16 1217, i16 291, i16 1257, i16 950, i16 950, i16 952, i16 953, i16 27, i16 523, i16 290, i16 528, i16 1202, i16 149, i16 149, i16 528, i16 134, i16 134, i16 133, i16 133, i16 131, i16 131, i16 107, i16 520, i16 528, i16 4, i16 332, i16 528, i16 914, i16 915, i16 1201, i16 528, i16 410, i16 132, i16 132, i16 528, i16 331, i16 75, i16 75, i16 523, i16 214, i16 327, i16 434, i16 280, i16 517, i16 238, i16 77, i16 77, i16 156, i16 74, i16 74, i16 158, i16 869, i16 43, i16 43, i16 109, i16 308, i16 48, i16 48, i16 97, i16 337, i16 456, i16 410, i16 322, i16 234, i16 1484, i16 97, i16 213, i16 1006, i16 338, i16 905, i16 234, i16 960, i16 238, i16 517, i16 1278, i16 1318, i16 1253, i16 105, i16 105, i16 876, i16 802, i16 1264, i16 870, i16 138, i16 106, i16 109, i16 410, i16 530, i16 529, i16 514, i16 515, i16 950, i16 1324, i16 99, i16 520, i16 451, i16 4, i16 1182, i16 1174, i16 1163, i16 381, i16 960, i16 1162, i16 1164, i16 1478, i16 285, i16 519, i16 105, i16 105, i16 253, i16 523, i16 195, i16 210, i16 1250, i16 106, i16 340, i16 410, i16 530, i16 529, i16 342, i16 11, i16 950, i16 950, i16 950, i16 952, i16 953, i16 27, i16 344, i16 416, i16 198, i16 367, i16 1303, i16 421, i16 410, i16 297, i16 302, i16 1311, i16 372, i16 436, i16 461, i16 202, i16 1200, i16 330, i16 1383, i16 1382, i16 517, i16 190, i16 346, i16 191, i16 518, i16 197, i16 360, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1481, i16 1147, i16 242, i16 1430, i16 165, i16 1428, i16 1144, i16 385, i16 83, i16 430, i16 1388, i16 79, i16 175, i16 1308, i16 82, i16 161, i16 960, i16 167, i16 1300, i16 95, i16 424, i16 170, i16 105, i16 105, i16 35, i16 171, i16 172, i16 371, i16 173, i16 106, i16 36, i16 410, i16 530, i16 529, i16 1314, i16 179, i16 950, i16 265, i16 369, i16 429, i16 443, i16 1377, i16 366, i16 366, i16 365, i16 250, i16 363, i16 454, i16 222, i16 791, i16 88, i16 449, i16 1399, i16 254, i16 224, i16 184, i16 311, i16 452, i16 315, i16 225, i16 470, i16 1165, i16 212, i16 226, i16 291, i16 374, i16 90, i16 950, i16 950, i16 952, i16 953, i16 27, i16 290, i16 398, i16 1211, i16 1495, i16 823, i16 1494, i16 203, i16 1220, i16 1219, i16 1464, i16 1218, i16 1261, i16 400, i16 278, i16 375, i16 1190, i16 1189, i16 329, i16 489, i16 1188, i16 1493, i16 279, i16 94, i16 339, i16 241, i16 480, i16 1262, i16 1210, i16 483, i16 341, i16 214, i16 1260, i16 1259, i16 343, i16 345, i16 240, i16 403, i16 124, i16 156, i16 10, i16 508, i16 158, i16 1285, i16 1450, i16 1449, i16 354, i16 492, i16 101, i16 96, i16 248, i16 1171, i16 34, i16 531, i16 1363, i16 1104, i16 249, i16 251, i16 213, i16 1243, i16 252, i16 352, i16 359, i16 194, i16 1242, i16 358, i16 532, i16 1160, i16 1155, i16 1415, i16 153, i16 1416, i16 1284, i16 1414, i16 154, i16 136, i16 276, i16 1413, i16 778, i16 411, i16 199, i16 287, i16 200, i16 78, i16 155, i16 209, i16 266, i16 283, i16 135, i16 1020, i16 1018, i16 934, i16 381, i16 166, i16 157, i16 216, i16 168, i16 285, i16 519, i16 855, i16 1034, i16 938, i16 159, i16 174, i16 387, i16 389, i16 84, i16 176, i16 85, i16 86, i16 87, i16 160, i16 1037, i16 1033, i16 219, i16 220, i16 146, i16 18, i16 221, i16 1026, i16 416, i16 1141, i16 310, i16 238, i16 448, i16 223, i16 180, i16 181, i16 37, i16 793, i16 331, i16 227, i16 453, i16 323, i16 465, i16 834, i16 182, i16 89, i16 19, i16 20, i16 457, i16 821, i16 462, i16 326, i16 91, i16 277, i16 147, i16 92, i16 472, i16 479, i16 1092, i16 148, i16 986, i16 904, i16 1062, i16 162, i16 93, i16 39, i16 482, i16 1063, i16 40, i16 204, i16 257, i16 259, i16 185, i16 899, i16 237, i16 109, i16 1082, i16 1078, i16 1080, i16 21, i16 1066, i16 1086, i16 33, i16 504, i16 188, i16 22, i16 23, i16 24, i16 1085, i16 25, i16 97, i16 1001, i16 987, i16 985, i16 989, i16 26, i16 1043, i16 244, i16 7, i16 1042, i16 243, i16 990, i16 28, i16 41, i16 524, i16 955, i16 803, i16 108, i16 29, i16 245, i16 865, i16 246, i16 1486, i16 364, i16 361, i16 1100, i16 1099, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1485], align 16
@yy_lookahead = local_unnamed_addr constant [2105 x i16] [i16 189, i16 211, i16 189, i16 267, i16 268, i16 269, i16 267, i16 268, i16 269, i16 189, i16 211, i16 189, i16 189, i16 189, i16 189, i16 189, i16 294, i16 197, i16 189, i16 19, i16 298, i16 201, i16 211, i16 212, i16 211, i16 212, i16 200, i16 288, i16 200, i16 206, i16 207, i16 31, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 39, i16 211, i16 212, i16 189, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 233, i16 19, i16 234, i16 235, i16 234, i16 235, i16 211, i16 212, i16 46, i16 47, i16 48, i16 49, i16 230, i16 231, i16 248, i16 247, i16 248, i16 247, i16 189, i16 248, i16 214, i16 251, i16 252, i16 257, i16 271, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 211, i16 212, i16 277, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 299, i16 300, i16 289, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 299, i16 211, i16 301, i16 73, i16 191, i16 86, i16 193, i16 88, i16 19, i16 73, i16 267, i16 268, i16 269, i16 200, i16 292, i16 26, i16 200, i16 81, i16 119, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 234, i16 235, i16 117, i16 234, i16 235, i16 120, i16 121, i16 122, i16 125, i16 126, i16 127, i16 69, i16 189, i16 247, i16 125, i16 130, i16 247, i16 22, i16 299, i16 300, i16 107, i16 108, i16 109, i16 110, i16 111, i16 136, i16 137, i16 261, i16 218, i16 189, i16 220, i16 19, i16 263, i16 54, i16 55, i16 56, i16 57, i16 58, i16 228, i16 114, i16 115, i16 116, i16 21, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 214, i16 208, i16 148, i16 59, i16 24, i16 236, i16 208, i16 59, i16 67, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 72, i16 126, i16 127, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 114, i16 115, i16 116, i16 225, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 267, i16 268, i16 269, i16 189, i16 59, i16 114, i16 115, i16 116, i16 210, i16 114, i16 115, i16 116, i16 267, i16 268, i16 269, i16 19, i16 218, i16 72, i16 121, i16 23, i16 54, i16 55, i16 56, i16 57, i16 284, i16 211, i16 212, i16 19, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 158, i16 189, i16 59, i16 23, i16 114, i16 115, i16 116, i16 248, i16 205, i16 206, i16 207, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 162, i16 163, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 81, i16 208, i16 206, i16 207, i16 114, i16 115, i16 116, i16 117, i16 76, i16 24, i16 120, i16 121, i16 122, i16 16, i16 114, i16 19, i16 296, i16 297, i16 19, i16 23, i16 130, i16 89, i16 24, i16 24, i16 92, i16 205, i16 206, i16 207, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 136, i16 137, i16 59, i16 23, i16 81, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 279, i16 277, i16 77, i16 22, i16 79, i16 284, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 194, i16 95, i16 76, i16 118, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 89, i16 189, i16 111, i16 92, i16 59, i16 115, i16 136, i16 137, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 19, i16 139, i16 59, i16 189, i16 23, i16 129, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 76, i16 227, i16 99, i16 23, i16 114, i16 115, i16 116, i16 136, i16 137, i16 59, i16 274, i16 87, i16 189, i16 89, i16 278, i16 189, i16 92, i16 114, i16 115, i16 189, i16 189, i16 189, i16 119, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 230, i16 231, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 150, i16 151, i16 152, i16 189, i16 107, i16 110, i16 111, i16 211, i16 212, i16 189, i16 233, i16 114, i16 115, i16 116, i16 143, i16 19, i16 296, i16 297, i16 132, i16 23, i16 134, i16 135, i16 226, i16 189, i16 22, i16 211, i16 212, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 189, i16 239, i16 183, i16 184, i16 185, i16 186, i16 59, i16 248, i16 293, i16 294, i16 191, i16 249, i16 193, i16 298, i16 291, i16 292, i16 257, i16 293, i16 294, i16 200, i16 143, i16 189, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 161, i16 22, i16 189, i16 276, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 234, i16 235, i16 189, i16 234, i16 235, i16 184, i16 227, i16 186, i16 114, i16 115, i16 116, i16 285, i16 191, i16 247, i16 193, i16 19, i16 247, i16 105, i16 106, i16 189, i16 262, i16 200, i16 189, i16 59, i16 211, i16 212, i16 35, i16 261, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 234, i16 235, i16 66, i16 19, i16 189, i16 11, i16 248, i16 150, i16 189, i16 152, i16 74, i16 236, i16 189, i16 247, i16 236, i16 257, i16 23, i16 59, i16 189, i16 26, i16 201, i16 211, i16 212, i16 114, i16 115, i16 116, i16 59, i16 261, i16 156, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 15, i16 12, i16 189, i16 233, i16 189, i16 248, i16 99, i16 125, i16 126, i16 127, i16 189, i16 128, i16 189, i16 200, i16 294, i16 244, i16 27, i16 246, i16 298, i16 114, i16 115, i16 116, i16 115, i16 189, i16 211, i16 212, i16 119, i16 189, i16 114, i16 115, i16 116, i16 42, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 22, i16 156, i16 60, i16 141, i16 234, i16 235, i16 211, i16 212, i16 189, i16 63, i16 189, i16 189, i16 141, i16 116, i16 150, i16 151, i16 152, i16 247, i16 248, i16 73, i16 201, i16 19, i16 234, i16 235, i16 126, i16 127, i16 24, i16 257, i16 7, i16 8, i16 9, i16 189, i16 211, i16 212, i16 262, i16 247, i16 258, i16 189, i16 141, i16 259, i16 189, i16 19, i16 223, i16 248, i16 225, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 294, i16 19, i16 211, i16 212, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 233, i16 22, i16 105, i16 106, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 136, i16 137, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 189, i16 189, i16 189, i16 22, i16 59, i16 24, i16 59, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 189, i16 263, i16 189, i16 211, i16 212, i16 211, i16 212, i16 107, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 226, i16 59, i16 211, i16 212, i16 211, i16 212, i16 105, i16 106, i16 189, i16 19, i16 211, i16 212, i16 233, i16 133, i16 113, i16 114, i16 115, i16 116, i16 138, i16 118, i16 114, i16 115, i16 116, i16 115, i16 189, i16 226, i16 200, i16 126, i16 189, i16 19, i16 189, i16 155, i16 189, i16 157, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 189, i16 59, i16 150, i16 189, i16 152, i16 211, i16 212, i16 46, i16 115, i16 285, i16 26, i16 234, i16 235, i16 19, i16 20, i16 22, i16 22, i16 24, i16 76, i16 189, i16 226, i16 211, i16 212, i16 233, i16 247, i16 211, i16 212, i16 189, i16 236, i16 87, i16 36, i16 89, i16 189, i16 31, i16 92, i16 189, i16 226, i16 189, i16 26, i16 189, i16 226, i16 39, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 211, i16 212, i16 114, i16 115, i16 116, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 71, i16 22, i16 200, i16 189, i16 226, i16 200, i16 285, i16 189, i16 262, i16 113, i16 81, i16 19, i16 200, i16 294, i16 66, i16 36, i16 23, i16 298, i16 29, i16 26, i16 143, i16 200, i16 33, i16 200, i16 259, i16 129, i16 200, i16 48, i16 99, i16 211, i16 212, i16 248, i16 259, i16 85, i16 105, i16 106, i16 234, i16 235, i16 59, i16 234, i16 235, i16 112, i16 94, i16 114, i16 115, i16 116, i16 234, i16 235, i16 119, i16 247, i16 71, i16 16, i16 247, i16 189, i16 65, i16 234, i16 235, i16 234, i16 235, i16 247, i16 234, i16 235, i16 143, i16 116, i16 85, i16 136, i16 137, i16 189, i16 247, i16 90, i16 247, i16 251, i16 252, i16 247, i16 189, i16 211, i16 212, i16 189, i16 99, i16 150, i16 151, i16 152, i16 153, i16 154, i16 105, i16 106, i16 189, i16 189, i16 141, i16 211, i16 212, i16 112, i16 144, i16 114, i16 115, i16 116, i16 211, i16 212, i16 119, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 189, i16 114, i16 12, i16 211, i16 212, i16 203, i16 204, i16 77, i16 189, i16 79, i16 125, i16 126, i16 127, i16 36, i16 294, i16 189, i16 189, i16 27, i16 298, i16 22, i16 211, i16 212, i16 211, i16 212, i16 150, i16 151, i16 152, i16 153, i16 154, i16 0, i16 1, i16 2, i16 42, i16 189, i16 5, i16 235, i16 59, i16 211, i16 212, i16 10, i16 11, i16 12, i16 13, i16 14, i16 26, i16 189, i16 17, i16 247, i16 71, i16 189, i16 53, i16 189, i16 259, i16 63, i16 26, i16 211, i16 212, i16 189, i16 46, i16 30, i16 133, i16 32, i16 85, i16 127, i16 189, i16 138, i16 150, i16 90, i16 152, i16 40, i16 26, i16 211, i16 212, i16 211, i16 212, i16 189, i16 99, i16 303, i16 189, i16 211, i16 212, i16 189, i16 105, i16 106, i16 22, i16 149, i16 211, i16 212, i16 158, i16 112, i16 189, i16 114, i16 115, i16 116, i16 189, i16 189, i16 119, i16 211, i16 212, i16 70, i16 211, i16 212, i16 23, i16 19, i16 20, i16 26, i16 22, i16 78, i16 189, i16 22, i16 81, i16 189, i16 211, i16 212, i16 189, i16 259, i16 211, i16 212, i16 189, i16 221, i16 36, i16 59, i16 189, i16 59, i16 189, i16 113, i16 97, i16 150, i16 151, i16 152, i16 153, i16 154, i16 189, i16 211, i16 212, i16 189, i16 211, i16 212, i16 118, i16 119, i16 211, i16 212, i16 124, i16 59, i16 211, i16 212, i16 211, i16 212, i16 61, i16 189, i16 203, i16 204, i16 59, i16 189, i16 150, i16 71, i16 152, i16 211, i16 212, i16 189, i16 131, i16 189, i16 189, i16 189, i16 189, i16 136, i16 137, i16 189, i16 140, i16 85, i16 189, i16 211, i16 212, i16 59, i16 90, i16 211, i16 212, i16 115, i16 22, i16 115, i16 189, i16 211, i16 212, i16 99, i16 211, i16 212, i16 211, i16 212, i16 159, i16 105, i16 106, i16 147, i16 211, i16 212, i16 7, i16 8, i16 112, i16 189, i16 114, i16 115, i16 116, i16 1, i16 2, i16 119, i16 189, i16 5, i16 23, i16 221, i16 115, i16 26, i16 10, i16 11, i16 12, i16 13, i16 14, i16 23, i16 189, i16 17, i16 26, i16 211, i16 212, i16 189, i16 19, i16 20, i16 189, i16 22, i16 189, i16 189, i16 189, i16 115, i16 30, i16 189, i16 32, i16 253, i16 150, i16 151, i16 152, i16 153, i16 154, i16 36, i16 40, i16 189, i16 221, i16 211, i16 212, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 119, i16 189, i16 83, i16 84, i16 189, i16 189, i16 59, i16 211, i16 212, i16 189, i16 129, i16 211, i16 212, i16 36, i16 70, i16 189, i16 23, i16 250, i16 71, i16 26, i16 211, i16 212, i16 78, i16 211, i16 212, i16 81, i16 23, i16 211, i16 212, i16 26, i16 23, i16 211, i16 212, i16 26, i16 189, i16 23, i16 59, i16 23, i16 26, i16 139, i16 26, i16 97, i16 23, i16 189, i16 23, i16 26, i16 99, i16 26, i16 71, i16 189, i16 189, i16 189, i16 105, i16 106, i16 107, i16 23, i16 189, i16 23, i16 26, i16 112, i16 26, i16 114, i16 115, i16 116, i16 189, i16 231, i16 119, i16 189, i16 19, i16 20, i16 281, i16 22, i16 189, i16 189, i16 189, i16 131, i16 99, i16 189, i16 189, i16 189, i16 136, i16 137, i16 105, i16 106, i16 280, i16 36, i16 237, i16 290, i16 250, i16 112, i16 250, i16 114, i16 115, i16 116, i16 250, i16 238, i16 119, i16 150, i16 151, i16 152, i16 153, i16 154, i16 250, i16 159, i16 209, i16 187, i16 241, i16 254, i16 59, i16 254, i16 286, i16 241, i16 241, i16 286, i16 215, i16 224, i16 220, i16 214, i16 214, i16 214, i16 71, i16 244, i16 254, i16 244, i16 273, i16 238, i16 240, i16 150, i16 151, i16 152, i16 153, i16 154, i16 192, i16 60, i16 139, i16 196, i16 290, i16 196, i16 38, i16 196, i16 148, i16 113, i16 276, i16 287, i16 22, i16 265, i16 287, i16 43, i16 99, i16 229, i16 241, i16 147, i16 18, i16 232, i16 105, i16 106, i16 264, i16 232, i16 232, i16 265, i16 232, i16 112, i16 264, i16 114, i16 115, i16 116, i16 229, i16 229, i16 119, i16 5, i16 241, i16 241, i16 196, i16 241, i16 10, i16 11, i16 12, i16 13, i16 14, i16 18, i16 195, i16 17, i16 155, i16 62, i16 283, i16 196, i16 195, i16 22, i16 282, i16 216, i16 196, i16 195, i16 113, i16 196, i16 30, i16 195, i16 32, i16 216, i16 22, i16 150, i16 151, i16 152, i16 153, i16 154, i16 40, i16 64, i16 222, i16 219, i16 124, i16 219, i16 162, i16 213, i16 213, i16 297, i16 213, i16 256, i16 111, i16 275, i16 216, i16 213, i16 215, i16 213, i16 142, i16 213, i16 213, i16 275, i16 113, i16 255, i16 91, i16 216, i16 256, i16 222, i16 216, i16 255, i16 70, i16 256, i16 256, i16 255, i16 255, i16 196, i16 82, i16 146, i16 78, i16 22, i16 143, i16 81, i16 260, i16 302, i16 302, i16 196, i16 144, i16 155, i16 145, i16 25, i16 199, i16 26, i16 198, i16 270, i16 13, i16 190, i16 190, i16 97, i16 245, i16 6, i16 244, i16 241, i16 243, i16 245, i16 242, i16 188, i16 188, i16 188, i16 208, i16 202, i16 208, i16 260, i16 208, i16 202, i16 217, i16 217, i16 208, i16 4, i16 3, i16 209, i16 160, i16 209, i16 208, i16 202, i16 15, i16 98, i16 272, i16 16, i16 23, i16 23, i16 137, i16 131, i16 148, i16 128, i16 24, i16 140, i16 136, i16 137, i16 20, i16 1, i16 149, i16 128, i16 140, i16 61, i16 37, i16 53, i16 148, i16 53, i16 53, i16 53, i16 128, i16 114, i16 1, i16 34, i16 139, i16 5, i16 22, i16 113, i16 68, i16 159, i16 75, i16 158, i16 26, i16 41, i16 139, i16 68, i16 113, i16 24, i16 20, i16 129, i16 123, i16 19, i16 23, i16 96, i16 28, i16 22, i16 22, i16 22, i16 22, i16 67, i16 59, i16 67, i16 24, i16 22, i16 67, i16 23, i16 147, i16 22, i16 24, i16 23, i16 23, i16 23, i16 114, i16 23, i16 37, i16 26, i16 22, i16 24, i16 23, i16 22, i16 139, i16 23, i16 23, i16 22, i16 141, i16 34, i16 26, i16 75, i16 88, i16 86, i16 34, i16 23, i16 75, i16 22, i16 24, i16 26, i16 34, i16 34, i16 34, i16 93, i16 34, i16 26, i16 23, i16 23, i16 23, i16 23, i16 34, i16 23, i16 22, i16 44, i16 23, i16 26, i16 11, i16 22, i16 22, i16 26, i16 23, i16 23, i16 22, i16 22, i16 139, i16 133, i16 139, i16 139, i16 15, i16 23, i16 1, i16 1, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 139, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304], align 16
@yy_shift_ofst = local_unnamed_addr constant [535 x i16] [i16 1448, i16 1277, i16 1072, i16 1668, i16 1072, i16 319, i16 1122, i16 1225, i16 1332, i16 1481, i16 1481, i16 1481, i16 57, i16 0, i16 0, i16 180, i16 897, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 930, i16 930, i16 1020, i16 1020, i16 290, i16 378, i16 319, i16 319, i16 319, i16 319, i16 319, i16 319, i16 40, i16 110, i16 219, i16 288, i16 327, i16 396, i16 435, i16 504, i16 543, i16 612, i16 651, i16 720, i16 877, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 917, i16 897, i16 1019, i16 763, i16 763, i16 1451, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1553, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 147, i16 258, i16 258, i16 258, i16 258, i16 258, i16 360, i16 424, i16 81, i16 183, i16 1039, i16 183, i16 636, i16 636, i16 183, i16 434, i16 434, i16 189, i16 434, i16 434, i16 134, i16 225, i16 225, i16 511, i16 29, i16 1924, i16 1924, i16 399, i16 399, i16 399, i16 93, i16 163, i16 187, i16 163, i16 163, i16 821, i16 821, i16 487, i16 237, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 332, i16 332, i16 183, i16 773, i16 419, i16 419, i16 937, i16 937, i16 548, i16 840, i16 1924, i16 1924, i16 466, i16 739, i16 739, i16 453, i16 53, i16 618, i16 513, i16 688, i16 737, i16 746, i16 935, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 51, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 715, i16 715, i16 715, i16 183, i16 183, i16 183, i16 183, i16 772, i16 183, i16 183, i16 183, i16 971, i16 1091, i16 183, i16 183, i16 1238, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 714, i16 1132, i16 502, i16 398, i16 398, i16 398, i16 398, i16 1090, i16 502, i16 502, i16 909, i16 853, i16 896, i16 817, i16 1292, i16 300, i16 300, i16 1135, i16 1292, i16 1292, i16 1135, i16 1266, i16 1136, i16 1260, i16 1080, i16 1080, i16 1080, i16 300, i16 1062, i16 1062, i16 905, i16 1276, i16 1175, i16 1071, i16 1577, i16 1499, i16 1499, i16 1604, i16 1604, i16 1499, i16 1496, i16 1532, i16 1626, i16 1608, i16 1508, i16 1638, i16 1638, i16 1638, i16 1638, i16 1508, i16 1508, i16 1532, i16 1626, i16 1608, i16 1608, i16 1508, i16 1499, i16 1665, i16 1531, i16 1625, i16 1499, i16 1665, i16 1669, i16 1499, i16 1665, i16 1499, i16 1665, i16 1669, i16 1583, i16 1583, i16 1583, i16 1645, i16 1680, i16 1680, i16 1669, i16 1583, i16 1588, i16 1583, i16 1645, i16 1583, i16 1583, i16 1552, i16 1669, i16 1609, i16 1609, i16 1669, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1499, i16 1641, i16 1641, i16 1662, i16 1662, i16 1599, i16 1605, i16 1725, i16 1499, i16 1600, i16 1599, i16 1611, i16 1610, i16 1508, i16 1732, i16 1733, i16 1749, i16 1749, i16 1761, i16 1761, i16 1761, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 20, i16 1178, i16 397, i16 1133, i16 1310, i16 1245, i16 385, i16 1184, i16 1327, i16 1335, i16 1431, i16 1440, i16 1497, i16 1511, i16 1516, i16 1518, i16 1312, i16 1268, i16 1435, i16 1385, i16 1341, i16 1523, i16 1525, i16 1423, i16 1507, i16 1164, i16 1252, i16 1536, i16 1538, i16 1362, i16 1404, i16 1781, i16 1783, i16 1628, i16 1777, i16 1695, i16 1779, i16 1773, i16 1774, i16 1661, i16 1652, i16 1673, i16 1778, i16 1663, i16 1786, i16 1806, i16 1670, i16 1659, i16 1681, i16 1750, i16 1775, i16 1666, i16 1760, i16 1762, i16 1763, i16 1764, i16 1690, i16 1705, i16 1787, i16 1683, i16 1819, i16 1818, i16 1802, i16 1712, i16 1671, i16 1758, i16 1804, i16 1765, i16 1753, i16 1790, i16 1693, i16 1721, i16 1811, i16 1816, i16 1820, i16 1708, i16 1715, i16 1821, i16 1780, i16 1822, i16 1823, i16 1817, i16 1824, i16 1782, i16 1789, i16 1826, i16 1745, i16 1814, i16 1829, i16 1785, i16 1825, i16 1830, i16 1707, i16 1833, i16 1834, i16 1835, i16 1836, i16 1837, i16 1838, i16 1842, i16 1832, i16 1843, i16 1845, i16 1841, i16 1729, i16 1846, i16 1847, i16 1746, i16 1839, i16 1849, i16 1731, i16 1848, i16 1844, i16 1850, i16 1851, i16 1852, i16 1788, i16 1800, i16 1791, i16 1853, i16 1805, i16 1794, i16 1854, i16 1856, i16 1859, i16 1858, i16 1857, i16 1863, i16 1860, i16 1867, i16 1848, i16 1868, i16 1869, i16 1870, i16 1872, i16 1873, i16 1875, i16 1874, i16 1889, i16 1879, i16 1880, i16 1881, i16 1882, i16 1884, i16 1885, i16 1877, i16 1776, i16 1769, i16 1771, i16 1772, i16 1784, i16 1890, i16 1897, i16 1913, i16 1914], align 16
@yy_reduce_ofst = local_unnamed_addr constant [380 x i16] [i16 -66, i16 490, i16 645, i16 545, i16 -174, i16 -172, i16 -187, i16 -178, i16 -113, i16 -176, i16 430, i16 537, i16 -63, i16 -136, i16 25, i16 -261, i16 37, i16 412, i16 803, i16 828, i16 872, i16 -171, i16 888, i16 892, i16 106, i16 589, i16 921, i16 -189, i16 670, i16 926, i16 -177, i16 196, i16 386, i16 395, i16 694, i16 855, i16 945, i16 948, i16 955, i16 964, i16 966, i16 969, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -147, i16 696, i16 726, i16 801, i16 820, i16 822, i16 928, i16 961, i16 1007, i16 1021, i16 1028, i16 1031, i16 1040, i16 1057, i16 1059, i16 1074, i16 1092, i16 1108, i16 1110, i16 1116, i16 1123, i16 1134, i16 1137, i16 1149, i16 1153, i16 1170, i16 1173, i16 1177, i16 1181, i16 1183, i16 1194, i16 1208, i16 1212, i16 1218, i16 1221, i16 1223, i16 1229, i16 1256, i16 1280, i16 1283, i16 1285, i16 1287, i16 1300, i16 1304, i16 1313, i16 1316, i16 1320, i16 1324, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -175, i16 -22, i16 394, i16 150, i16 220, i16 -180, i16 493, i16 663, i16 299, i16 493, i16 663, i16 193, i16 120, i16 336, i16 -264, i16 -264, i16 -264, i16 -264, i16 90, i16 90, i16 90, i16 436, i16 482, i16 8, i16 647, i16 889, i16 -160, i16 373, i16 -278, i16 554, i16 598, i16 653, i16 697, i16 717, i16 557, i16 393, i16 602, i16 723, i16 808, i16 450, i16 655, i16 802, i16 908, i16 916, i16 864, i16 1041, i16 868, i16 337, i16 870, i16 503, i16 1104, i16 552, i16 641, i16 -157, i16 32, i16 862, i16 968, i16 1050, i16 1195, i16 603, i16 1048, i16 963, i16 433, i16 -210, i16 -201, i16 -89, i16 -9, i16 55, i16 159, i16 320, i16 389, i16 454, i16 522, i16 594, i16 608, i16 666, i16 848, i16 924, i16 957, i16 1067, i16 1075, i16 1140, i16 1154, i16 747, i16 1167, i16 1191, i16 1220, i16 1222, i16 1226, i16 1239, i16 1263, i16 1275, i16 1286, i16 1290, i16 1146, i16 1234, i16 1269, i16 1319, i16 1330, i16 1349, i16 1358, i16 1228, i16 1364, i16 1365, i16 1366, i16 1271, i16 1022, i16 1371, i16 1379, i16 1338, i16 1382, i16 320, i16 1387, i16 1388, i16 1389, i16 1392, i16 1393, i16 1394, i16 1293, i16 1308, i16 1353, i16 1342, i16 1344, i16 1348, i16 1356, i16 1228, i16 1353, i16 1353, i16 1361, i16 1399, i16 1422, i16 1301, i16 1369, i16 1357, i16 1359, i16 1328, i16 1374, i16 1375, i16 1331, i16 1403, i16 1395, i16 1400, i16 1407, i16 1408, i16 1409, i16 1372, i16 1381, i16 1383, i16 1355, i16 1390, i16 1391, i16 1444, i16 1350, i16 1443, i16 1445, i16 1360, i16 1363, i16 1447, i16 1370, i16 1384, i16 1396, i16 1424, i16 1413, i16 1425, i16 1429, i16 1430, i16 1432, i16 1433, i16 1434, i16 1398, i16 1402, i16 1441, i16 1442, i16 1436, i16 1480, i16 1489, i16 1405, i16 1410, i16 1493, i16 1495, i16 1477, i16 1498, i16 1500, i16 1501, i16 1504, i16 1485, i16 1502, i16 1503, i16 1505, i16 1488, i16 1492, i16 1494, i16 1506, i16 1510, i16 1509, i16 1512, i16 1513, i16 1514, i16 1515, i16 1420, i16 1517, i16 1446, i16 1454, i16 1520, i16 1463, i16 1476, i16 1478, i16 1482, i16 1483, i16 1486, i16 1484, i16 1487, i16 1547, i16 1449, i16 1450, i16 1490, i16 1519, i16 1521, i16 1524, i16 1491, i16 1557, i16 1522, i16 1526, i16 1527, i16 1530, i16 1528, i16 1559, i16 1562, i16 1573, i16 1574, i16 1585, i16 1586, i16 1587, i16 1575, i16 1568, i16 1570, i16 1572, i16 1576, i16 1579, i16 1565, i16 1566, i16 1578, i16 1580, i16 1582, i16 1589], align 16
@yy_default = local_unnamed_addr constant [535 x i16] [i16 1523, i16 1523, i16 1372, i16 1523, i16 1149, i16 1258, i16 1149, i16 1149, i16 1149, i16 1372, i16 1372, i16 1372, i16 1149, i16 1288, i16 1288, i16 1425, i16 1180, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1371, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1297, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1373, i16 1374, i16 1149, i16 1149, i16 1149, i16 1424, i16 1426, i16 1389, i16 1307, i16 1306, i16 1305, i16 1304, i16 1407, i16 1275, i16 1302, i16 1295, i16 1299, i16 1367, i16 1368, i16 1366, i16 1370, i16 1374, i16 1373, i16 1149, i16 1298, i16 1338, i16 1352, i16 1337, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1346, i16 1351, i16 1357, i16 1350, i16 1347, i16 1340, i16 1339, i16 1341, i16 1342, i16 1149, i16 1222, i16 1149, i16 1149, i16 1149, i16 1149, i16 1436, i16 1435, i16 1170, i16 1149, i16 1149, i16 1180, i16 1332, i16 1331, i16 1343, i16 1344, i16 1354, i16 1353, i16 1432, i16 1483, i16 1482, i16 1390, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1180, i16 1448, i16 1448, i16 1176, i16 1176, i16 1282, i16 1149, i16 1258, i16 1249, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1429, i16 1427, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1254, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1477, i16 1149, i16 1402, i16 1236, i16 1254, i16 1254, i16 1254, i16 1254, i16 1256, i16 1237, i16 1235, i16 1248, i16 1181, i16 1156, i16 1521, i16 1301, i16 1277, i16 1277, i16 1518, i16 1301, i16 1301, i16 1518, i16 1197, i16 1499, i16 1192, i16 1288, i16 1288, i16 1288, i16 1277, i16 1282, i16 1282, i16 1369, i16 1255, i16 1248, i16 1149, i16 1521, i16 1263, i16 1263, i16 1520, i16 1520, i16 1263, i16 1390, i16 1310, i16 1316, i16 1225, i16 1301, i16 1231, i16 1231, i16 1231, i16 1231, i16 1301, i16 1301, i16 1310, i16 1316, i16 1225, i16 1225, i16 1301, i16 1263, i16 1167, i16 1406, i16 1515, i16 1263, i16 1167, i16 1380, i16 1263, i16 1167, i16 1263, i16 1167, i16 1380, i16 1223, i16 1223, i16 1223, i16 1212, i16 1149, i16 1149, i16 1380, i16 1223, i16 1197, i16 1223, i16 1212, i16 1223, i16 1223, i16 1466, i16 1380, i16 1384, i16 1384, i16 1380, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1263, i16 1458, i16 1458, i16 1291, i16 1291, i16 1296, i16 1282, i16 1375, i16 1263, i16 1149, i16 1296, i16 1294, i16 1292, i16 1301, i16 1173, i16 1215, i16 1480, i16 1480, i16 1476, i16 1476, i16 1476, i16 1492, i16 1180, i16 1180, i16 1180, i16 1180, i16 1492, i16 1199, i16 1199, i16 1181, i16 1181, i16 1180, i16 1492, i16 1149, i16 1149, i16 1149, i16 1149, i16 1487, i16 1391, i16 1267, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1321, i16 1149, i16 1152, i16 1149, i16 1149, i16 1433, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1268, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1517, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1405, i16 1404, i16 1149, i16 1149, i16 1265, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1195, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1293, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1463, i16 1283, i16 1149, i16 1149, i16 1508, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1503, i16 1239, i16 1323, i16 1149, i16 1322, i16 1326, i16 1149, i16 1161, i16 1149, i16 1149], align 16
@yyFallback = local_unnamed_addr constant <{ [100 x i16], [81 x i16] }> <{ [100 x i16] [i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 0, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59], [81 x i16] zeroinitializer }>, align 16
@.str.479 = private unnamed_addr constant [22 x i8] c"parser stack overflow\00", align 1
@yyRuleInfoLhs = local_unnamed_addr constant [372 x i16] [i16 185, i16 185, i16 184, i16 186, i16 187, i16 187, i16 187, i16 187, i16 186, i16 186, i16 186, i16 186, i16 186, i16 191, i16 193, i16 195, i16 195, i16 194, i16 194, i16 192, i16 192, i16 199, i16 199, i16 201, i16 203, i16 203, i16 203, i16 204, i16 208, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 219, i16 219, i16 215, i16 215, i16 217, i16 217, i16 220, i16 220, i16 220, i16 220, i16 221, i16 221, i16 221, i16 221, i16 221, i16 218, i16 218, i16 222, i16 222, i16 222, i16 198, i16 224, i16 225, i16 225, i16 225, i16 225, i16 225, i16 228, i16 213, i16 213, i16 229, i16 229, i16 230, i16 230, i16 186, i16 232, i16 232, i16 186, i16 186, i16 186, i16 200, i16 200, i16 200, i16 234, i16 237, i16 237, i16 237, i16 235, i16 235, i16 247, i16 247, i16 238, i16 238, i16 238, i16 249, i16 239, i16 239, i16 239, i16 250, i16 250, i16 240, i16 240, i16 252, i16 252, i16 251, i16 251, i16 251, i16 251, i16 196, i16 196, i16 233, i16 233, i16 258, i16 258, i16 258, i16 258, i16 253, i16 253, i16 253, i16 253, i16 255, i16 255, i16 254, i16 254, i16 254, i16 256, i16 256, i16 244, i16 244, i16 226, i16 226, i16 214, i16 214, i16 214, i16 260, i16 260, i16 260, i16 242, i16 242, i16 243, i16 243, i16 245, i16 245, i16 245, i16 245, i16 186, i16 241, i16 241, i16 186, i16 262, i16 262, i16 262, i16 262, i16 186, i16 186, i16 265, i16 265, i16 265, i16 265, i16 263, i16 263, i16 264, i16 264, i16 259, i16 259, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 267, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 268, i16 268, i16 212, i16 269, i16 269, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 272, i16 272, i16 273, i16 273, i16 271, i16 271, i16 257, i16 248, i16 248, i16 270, i16 270, i16 186, i16 274, i16 274, i16 216, i16 216, i16 227, i16 227, i16 275, i16 275, i16 186, i16 186, i16 186, i16 276, i16 276, i16 186, i16 186, i16 186, i16 186, i16 186, i16 206, i16 207, i16 186, i16 278, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 283, i16 283, i16 279, i16 279, i16 285, i16 286, i16 286, i16 284, i16 284, i16 284, i16 284, i16 212, i16 212, i16 231, i16 231, i16 231, i16 186, i16 186, i16 186, i16 288, i16 288, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 289, i16 186, i16 261, i16 261, i16 236, i16 236, i16 291, i16 291, i16 292, i16 293, i16 293, i16 293, i16 293, i16 293, i16 293, i16 294, i16 294, i16 294, i16 298, i16 300, i16 300, i16 301, i16 301, i16 299, i16 299, i16 302, i16 302, i16 303, i16 303, i16 303, i16 246, i16 266, i16 266, i16 266, i16 297, i16 297, i16 296, i16 181, i16 182, i16 182, i16 183, i16 183, i16 183, i16 188, i16 188, i16 188, i16 190, i16 190, i16 186, i16 197, i16 197, i16 189, i16 189, i16 189, i16 203, i16 204, i16 205, i16 205, i16 202, i16 202, i16 210, i16 210, i16 210, i16 198, i16 223, i16 223, i16 224, i16 228, i16 230, i16 234, i16 235, i16 249, i16 250, i16 212, i16 267, i16 257, i16 277, i16 277, i16 277, i16 277, i16 277, i16 206, i16 282, i16 282, i16 285, i16 286, i16 287, i16 287, i16 290, i16 290, i16 261], align 16
@yyRuleInfoNRhs = local_unnamed_addr constant [372 x i8] c"\FF\FD\FF\FD\00\FF\FF\FF\FE\FE\FE\FD\FB\FA\FF\00\FD\FF\00\FB\FE\00\FE\FE\00\FC\FA\FE\00\00\FE\FD\FC\FC\FC\FD\FD\FB\FE\FC\FC\FF\FE\FD\FC\00\FF\00\FE\FE\FD\FD\FD\FE\FE\FF\FF\FE\FD\FE\00\FE\FE\00\FF\FE\F9\FB\FB\F6\00\00\FD\00\FE\FF\FF\FC\FE\00\F7\FC\FF\FD\FC\FF\FD\FF\FE\FF\F7\F6\FC\FB\FF\FF\00\00\FB\FD\FB\FE\00\00\FE\FE\00\F9\F7\F9\F9\00\FE\FF\FD\FF\FD\FB\FD\FF\FE\FD\FC\FE\00\00\FD\FE\FC\00\00\FD\FB\FD\FF\FF\00\FE\FE\00\00\FD\00\FE\00\FE\FC\FC\FA\00\FE\F8\FB\F9\FD\FB\F9\F9\00\F5\F8\FC\FE\FF\00\FD\FD\FF\FD\FF\FF\FD\FB\FF\FF\FF\FF\FD\FA\FB\FC\FA\FB\FF\FB\FD\FD\FD\FD\FD\FD\FD\FD\FE\FD\FB\FE\FD\FD\FC\FE\FE\FE\FF\FE\FB\FF\FE\FB\FD\FB\FB\FC\FB\FB\FC\FE\00\FF\00\00\FD\FF\00\FD\F4\FF\00\00\FD\FB\FD\00\FE\FC\FE\FD\FE\00\FD\FB\FA\FB\FA\FE\FE\FB\F5\FF\FE\00\FF\FF\FD\00\FE\FD\FE\FD\FD\FE\F8\F8\FA\FD\FC\FA\FF\FF\FF\FC\FA\FD\00\FE\FF\FD\FF\FD\FA\F9\FF\F8\FE\FD\FA\F8\FF\FD\FB\FB\FA\FC\FB\FF\FE\00\FD\FA\FF\FF\FE\FF\FE\FE\FE\00\FE\FE\FE\FF\FE\FE\FF\FF\FC\FE\FB\FF\FE\FF\FF\FE\FD\00\FF\FE\FF\00\FE\FC\FE\FF\FF\FF\FF\FF\FF\FF\FE\00\FE\FC\FE\FE\FD\FF\00\FF\FF\FF\FF\FE\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FD\FF\00\FF\00\00\FF\00", align 16
@.str.480 = private unnamed_addr constant [27 x i8] c"unknown table option: %.*s\00", align 1
@__const.yy_reduce.dest = private unnamed_addr constant %struct.SelectDest { i8 9, i32 0, i32 0, i32 0, i8* null, %struct.ExprList* null }, align 8
@.str.481 = private unnamed_addr constant [9 x i8] c"set list\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"near \22%T\22: syntax error\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.484 = private unnamed_addr constant [95 x i8] c"qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\00", align 1
@.str.485 = private unnamed_addr constant [84 x i8] c"the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.486 = private unnamed_addr constant [85 x i8] c"the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@aiClass = local_unnamed_addr constant [256 x i8] calign 16
@zKWText = constant [647 x i8] c"REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEAFTERENAMEANDEFERREDISTINCTAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPARTITIONDROPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY", align 16
@aKWHash = local_unnamed_addr constant [127 x i8] c"Tf\84Rr\1D\00\00[\00UH\005#V\0F\00*^6~\85\13\00\00\8A\00(\80\00\16h\00\09\00\00zP\00N\06\00Ac\91\00\86p\00\000\00d\18\00\11\00\1BF\17\1A\05<\8Cky\00IeG\8F=wJ\001\00\0B)\00n\00\00\00j\0Alq|\0E2{\00Y\00\12x\8E8\81\89XS%\1E}\00\00i3\82\7F\00\22\00\00,\00_&'\00\14-tZ", align 16
@aKWNext = local_unnamed_addr constant [145 x i8] c"\00\00\00\00\04\00+\00\00go\00\00\00\02\00\00\8D\00\00\00\0D\00\00\00\00\8B\00\00v4\00\00\87\0C\00\00>\00\88\00\83\00\00$\00\00\1CM\00\00\00\00;\00/\00\00\00\00\00\00\00\00\00\00E\00\00\00\00\00\90\03\00:\00\01K\00\00\00\1F\00\00\00\00\00\00@B?\00\00\00\00.\00\10\00s\00\00\00\00\00\00\00\00\00\00Qa\00\08\00m\15\07C\00O]u\00\00D\00\00`\007\00L\00\\ !9\19\00b\00\00W", align 16
@aKWLen = local_unnamed_addr constant [145 x i8] c"\07\07\05\04\06\04\05\03\06\07\03\06\06\07\07\03\08\02\06\05\04\04\03\0A\04\07\06\09\04\02\06\05\09\09\04\07\03\02\04\04\06\0B\06\02\07\05\05\09\06\0A\04\06\02\03\07\05\09\06\06\04\05\05\0A\06\05\07\04\05\07\06\07\07\06\05\07\03\07\04\07\06\0C\09\04\06\05\04\07\06\05\06\06\07\06\04\05\09\05\06\03\08\08\02\0D\02\02\04\06\06\08\05\11\0C\07\09\04\09\04\04\06\07\05\09\04\04\05\02\05\08\06\04\05\08\04\03\09\05\05\06\04\06\02\02\09\03\07", align 16
@aKWOffset = local_unnamed_addr constant [145 x i16] [i16 0, i16 2, i16 2, i16 8, i16 9, i16 14, i16 16, i16 20, i16 23, i16 25, i16 25, i16 29, i16 33, i16 36, i16 41, i16 46, i16 48, i16 53, i16 54, i16 59, i16 62, i16 65, i16 67, i16 69, i16 78, i16 81, i16 86, i16 90, i16 90, i16 94, i16 99, i16 101, i16 105, i16 111, i16 119, i16 123, i16 123, i16 123, i16 126, i16 129, i16 132, i16 137, i16 142, i16 146, i16 147, i16 152, i16 156, i16 160, i16 168, i16 174, i16 181, i16 184, i16 184, i16 187, i16 189, i16 195, i16 198, i16 206, i16 211, i16 216, i16 219, i16 222, i16 226, i16 236, i16 239, i16 244, i16 244, i16 248, i16 252, i16 259, i16 265, i16 271, i16 277, i16 277, i16 283, i16 284, i16 288, i16 295, i16 299, i16 306, i16 312, i16 324, i16 333, i16 335, i16 341, i16 346, i16 348, i16 355, i16 360, i16 365, i16 371, i16 377, i16 382, i16 388, i16 392, i16 395, i16 404, i16 408, i16 414, i16 416, i16 423, i16 424, i16 431, i16 433, i16 435, i16 444, i16 448, i16 454, i16 460, i16 468, i16 473, i16 473, i16 473, i16 489, i16 498, i16 501, i16 510, i16 513, i16 517, i16 522, i16 529, i16 534, i16 543, i16 547, i16 550, i16 555, i16 557, i16 561, i16 569, i16 575, i16 578, i16 583, i16 591, i16 591, i16 595, i16 604, i16 609, i16 614, i16 620, i16 623, i16 626, i16 629, i16 631, i16 636, i16 640], align 16
@aKWCode = local_unnamed_addr constant [145 x i8] c"ar\9E':)zC!\82>?/\02A\A0&\18\88\10t\9C\0B\81\9D[~\15\15+2R\0D\87^3\13Bw/\86\06\1Cqt\9FG\09\14u\94ED\80MY_(\91/\05t{y\03\19Qt\0E 0\95\\\90#\1Fv\9Ao\11c\08\8D}.\04\1EF\1B\7F\89P`\9B\93H\1Db,\07\8A-|\0F1$<\0A%tccUW\83X*T\A3ISV\8Ct\92\12\8FJ]\A2t\0CLKZ\84\8ENO\A1=\22@\85x", align 16
@sqlite3_complete.trans = internal unnamed_addr constant [8 x [8 x i8]] [[8 x i8] c"\01\00\02\03\04\02\02\02", [8 x i8] c"\01\01\02\03\04\02\02\02", [8 x i8] c"\01\02\02\02\02\02\02\02", [8 x i8] c"\01\03\03\02\04\02\02\02", [8 x i8] c"\01\04\02\02\02\04\05\02", [8 x i8] c"\06\05\05\05\05\05\05\05", [8 x i8] c"\06\06\05\05\05\05\05\07", [8 x i8] c"\01\07\05\05\05\05\05\05"], align 16
@.str.488 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.489 = private unnamed_addr constant [8 x i8] c"trigger\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.491 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.493 = private unnamed_addr constant [8 x i8] c"explain\00", align 1
@sqlite3_data_directory = local_unnamed_addr global i8* null, align 8
@sqlite3BuiltinFunctions = internal unnamed_addr global %struct.FuncDefHash zeroinitializer, align 8
@sqlite3_db_config.aFlagOp = internal unnamed_addr constant [16 x %struct.anon.22] [%struct.anon.22 { i32 1002, i32 16384 }, %struct.anon.22 { i32 1003, i32 262144 }, %struct.anon.22 { i32 1015, i32 -2147483648 }, %struct.anon.22 { i32 1004, i32 4194304 }, %struct.anon.22 { i32 1005, i32 65536 }, %struct.anon.22 { i32 1006, i32 2048 }, %struct.anon.22 { i32 1007, i32 8388608 }, %struct.anon.22 { i32 1008, i32 16777216 }, %struct.anon.22 { i32 1009, i32 33554432 }, %struct.anon.22 { i32 1010, i32 268435456 }, %struct.anon.22 { i32 1011, i32 134217729 }, %struct.anon.22 { i32 1012, i32 67108864 }, %struct.anon.22 { i32 1014, i32 536870912 }, %struct.anon.22 { i32 1013, i32 1073741824 }, %struct.anon.22 { i32 1016, i32 2 }, %struct.anon.22 { i32 1017, i32 128 }], align 16
@.str.494 = private unnamed_addr constant [21 x i8] c"unknown database: %s\00", align 1
@sqlite3_errmsg16.outOfMem = internal constant [14 x i16] [i16 111, i16 117, i16 116, i16 32, i16 111, i16 102, i16 32, i16 109, i16 101, i16 109, i16 111, i16 114, i16 121, i16 0], align 16
@sqlite3_errmsg16.misuse = internal constant [34 x i16] [i16 98, i16 97, i16 100, i16 32, i16 112, i16 97, i16 114, i16 97, i16 109, i16 101, i16 116, i16 101, i16 114, i16 32, i16 111, i16 114, i16 32, i16 111, i16 116, i16 104, i16 101, i16 114, i16 32, i16 65, i16 80, i16 73, i16 32, i16 109, i16 105, i16 115, i16 117, i16 115, i16 101, i16 0], align 16
@.str.495 = private unnamed_addr constant [68 x i8] c"unable to delete/modify collation sequence due to active statements\00", align 1
@aHardLimit = constant [12 x i32] [i32 1000000000, i32 1000000000, i32 2000, i32 1000, i32 500, i32 250000000, i32 127, i32 10, i32 50000, i32 32766, i32 1000, i32 8], align 16
@.str.496 = private unnamed_addr constant [6 x i8] c"RTRIM\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.498 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.499 = private unnamed_addr constant [28 x i8] c"no such table column: %s.%s\00", align 1
@.str.500 = private unnamed_addr constant [8 x i8] c"SQLITE_\00", align 1
@.str.501 = private unnamed_addr constant [85 x i8] c"2020-03-11 19:56:26 c5f96a085db9688a09793f52ce1ecf033c2e6e2e5873a19fe0fb374b242balt1\00", align 1
@_sqliteZone_ = local_unnamed_addr global %struct._malloc_zone_t* null, align 8
@top_of_stack = local_unnamed_addr global i64 0, align 8
@sqlite3Utf8Trans1 = internal unnamed_addr constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\00\01\02\03\00\01\00\00", align 16
@sqlite3PagerFilename.zFake = internal constant [8 x i8] zeroinitializer, align 1
@sqlite3VdbeSerialGet.aFlag = internal unnamed_addr constant [2 x i16] [i16 4112, i16 4098], align 2
@.str.502 = private unnamed_addr constant [19 x i8] c"a CHECK constraint\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"a generated column\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"an index\00", align 1
@.str.505 = private unnamed_addr constant [36 x i8] c"non-deterministic use of %s() in %s\00", align 1
@.str.506 = private unnamed_addr constant [35 x i8] c"sqlite3VdbeRealValue: NO FLAG SET\0A\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@sqlite3OpcodeName.azName = internal unnamed_addr constant [176 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.683, i32 0, i32 0)], align 16
@.str.508 = private unnamed_addr constant [10 x i8] c"Savepoint\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"AutoCommit\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"Transaction\00", align 1
@.str.511 = private unnamed_addr constant [11 x i8] c"SorterNext\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"Next\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"Checkpoint\00", align 1
@.str.515 = private unnamed_addr constant [12 x i8] c"JournalMode\00", align 1
@.str.516 = private unnamed_addr constant [7 x i8] c"Vacuum\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"VFilter\00", align 1
@.str.518 = private unnamed_addr constant [8 x i8] c"VUpdate\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"Gosub\00", align 1
@.str.521 = private unnamed_addr constant [14 x i8] c"InitCoroutine\00", align 1
@.str.522 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"MustBeInt\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Once\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"IfNot\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"IfNullRow\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"SeekLT\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"SeekLE\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"SeekGE\00", align 1
@.str.533 = private unnamed_addr constant [7 x i8] c"SeekGT\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"IfNotOpen\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"IfNoHope\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"NoConflict\00", align 1
@.str.537 = private unnamed_addr constant [9 x i8] c"NotFound\00", align 1
@.str.538 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"SeekRowid\00", align 1
@.str.540 = private unnamed_addr constant [10 x i8] c"NotExists\00", align 1
@.str.541 = private unnamed_addr constant [5 x i8] c"Last\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"IfSmaller\00", align 1
@.str.543 = private unnamed_addr constant [11 x i8] c"SorterSort\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"Sort\00", align 1
@.str.545 = private unnamed_addr constant [7 x i8] c"Rewind\00", align 1
@.str.546 = private unnamed_addr constant [6 x i8] c"IdxLE\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"IdxGT\00", align 1
@.str.548 = private unnamed_addr constant [6 x i8] c"IdxLT\00", align 1
@.str.549 = private unnamed_addr constant [6 x i8] c"IdxGE\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"RowSetRead\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.553 = private unnamed_addr constant [11 x i8] c"RowSetTest\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"Program\00", align 1
@.str.555 = private unnamed_addr constant [9 x i8] c"FkIfZero\00", align 1
@.str.556 = private unnamed_addr constant [6 x i8] c"IfPos\00", align 1
@.str.557 = private unnamed_addr constant [10 x i8] c"IfNotZero\00", align 1
@.str.558 = private unnamed_addr constant [7 x i8] c"IsNull\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"NotNull\00", align 1
@.str.560 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@.str.561 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@.str.562 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Le\00", align 1
@.str.564 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@.str.565 = private unnamed_addr constant [3 x i8] c"Ge\00", align 1
@.str.566 = private unnamed_addr constant [10 x i8] c"ElseNotEq\00", align 1
@.str.567 = private unnamed_addr constant [13 x i8] c"DecrJumpZero\00", align 1
@.str.568 = private unnamed_addr constant [11 x i8] c"IncrVacuum\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"VNext\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"PureFunc\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.573 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"EndCoroutine\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"HaltIfNull\00", align 1
@.str.576 = private unnamed_addr constant [5 x i8] c"Halt\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"Int64\00", align 1
@.str.579 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.581 = private unnamed_addr constant [9 x i8] c"SoftNull\00", align 1
@.str.582 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"Variable\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.585 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"SCopy\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"IntCopy\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"ResultRow\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"CollSeq\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"AddImm\00", align 1
@.str.591 = private unnamed_addr constant [13 x i8] c"RealAffinity\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"Cast\00", align 1
@.str.593 = private unnamed_addr constant [12 x i8] c"Permutation\00", align 1
@.str.594 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.595 = private unnamed_addr constant [7 x i8] c"IsTrue\00", align 1
@.str.596 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"Column\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"Affinity\00", align 1
@.str.599 = private unnamed_addr constant [11 x i8] c"MakeRecord\00", align 1
@.str.600 = private unnamed_addr constant [6 x i8] c"Count\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"ReadCookie\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"SetCookie\00", align 1
@.str.603 = private unnamed_addr constant [10 x i8] c"ReopenIdx\00", align 1
@.str.604 = private unnamed_addr constant [9 x i8] c"OpenRead\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"OpenWrite\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"OpenDup\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"OpenAutoindex\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"OpenEphemeral\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@.str.610 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"ShiftLeft\00", align 1
@.str.612 = private unnamed_addr constant [11 x i8] c"ShiftRight\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"Remainder\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"Concat\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"SorterOpen\00", align 1
@.str.620 = private unnamed_addr constant [7 x i8] c"BitNot\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"SequenceTest\00", align 1
@.str.622 = private unnamed_addr constant [11 x i8] c"OpenPseudo\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"String8\00", align 1
@.str.624 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"ColumnsUsed\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"SeekHit\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.628 = private unnamed_addr constant [9 x i8] c"NewRowid\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"ResetCount\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"SorterCompare\00", align 1
@.str.633 = private unnamed_addr constant [11 x i8] c"SorterData\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"RowData\00", align 1
@.str.635 = private unnamed_addr constant [6 x i8] c"Rowid\00", align 1
@.str.636 = private unnamed_addr constant [8 x i8] c"NullRow\00", align 1
@.str.637 = private unnamed_addr constant [8 x i8] c"SeekEnd\00", align 1
@.str.638 = private unnamed_addr constant [10 x i8] c"IdxInsert\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"SorterInsert\00", align 1
@.str.640 = private unnamed_addr constant [10 x i8] c"IdxDelete\00", align 1
@.str.641 = private unnamed_addr constant [13 x i8] c"DeferredSeek\00", align 1
@.str.642 = private unnamed_addr constant [9 x i8] c"IdxRowid\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"FinishSeek\00", align 1
@.str.644 = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.645 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.646 = private unnamed_addr constant [12 x i8] c"ResetSorter\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"CreateBtree\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"SqlExec\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"ParseSchema\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"LoadAnalysis\00", align 1
@.str.651 = private unnamed_addr constant [10 x i8] c"DropTable\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"DropIndex\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"DropTrigger\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"IntegrityCk\00", align 1
@.str.655 = private unnamed_addr constant [10 x i8] c"RowSetAdd\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@.str.657 = private unnamed_addr constant [10 x i8] c"FkCounter\00", align 1
@.str.658 = private unnamed_addr constant [5 x i8] c"Real\00", align 1
@.str.659 = private unnamed_addr constant [7 x i8] c"MemMax\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"OffsetLimit\00", align 1
@.str.661 = private unnamed_addr constant [11 x i8] c"AggInverse\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"AggStep\00", align 1
@.str.663 = private unnamed_addr constant [9 x i8] c"AggStep1\00", align 1
@.str.664 = private unnamed_addr constant [9 x i8] c"AggValue\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"AggFinal\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"Expire\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"CursorLock\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"CursorUnlock\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"TableLock\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"VBegin\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"VCreate\00", align 1
@.str.672 = private unnamed_addr constant [9 x i8] c"VDestroy\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"VOpen\00", align 1
@.str.674 = private unnamed_addr constant [8 x i8] c"VColumn\00", align 1
@.str.675 = private unnamed_addr constant [8 x i8] c"VRename\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"Pagecount\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"MaxPgcnt\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"Trace\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"CursorHint\00", align 1
@.str.680 = private unnamed_addr constant [11 x i8] c"ReleaseReg\00", align 1
@.str.681 = private unnamed_addr constant [5 x i8] c"Noop\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"Explain\00", align 1
@.str.683 = private unnamed_addr constant [10 x i8] c"Abortable\00", align 1
@sqlite3VdbeExec.azType = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0)], align 16
@.str.684 = private unnamed_addr constant [9 x i8] c"NOT NULL\00", align 1
@.str.685 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@.str.686 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"FOREIGN KEY\00", align 1
@.str.688 = private unnamed_addr constant [21 x i8] c"%s constraint failed\00", align 1
@.str.689 = private unnamed_addr constant [7 x i8] c"%z: %s\00", align 1
@.str.690 = private unnamed_addr constant [24 x i8] c"abort at %d in [%s]: %s\00", align 1
@sqlite3VdbeExec.aLTb = internal unnamed_addr constant [6 x i8] c"\01\00\00\01\01\00", align 1
@sqlite3VdbeExec.aEQb = internal unnamed_addr constant [6 x i8] c"\00\01\00\01\00\01", align 1
@sqlite3VdbeExec.aGTb = internal unnamed_addr constant [6 x i8] c"\01\00\01\00\00\01", align 1
@sqlite3VdbeExec.and_logic = internal unnamed_addr constant [9 x i8] c"\00\00\00\00\01\02\00\02\02", align 1
@sqlite3VdbeExec.or_logic = internal unnamed_addr constant [9 x i8] c"\00\01\02\01\01\01\02\01\02", align 1
@sqlite3VdbeExec.aFlag = internal unnamed_addr constant [2 x i16] [i16 16, i16 514], align 2
@.str.691 = private unnamed_addr constant [51 x i8] c"cannot open savepoint - SQL statements in progress\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"no such savepoint: %s\00", align 1
@.str.693 = private unnamed_addr constant [54 x i8] c"cannot release savepoint - SQL statements in progress\00", align 1
@.str.694 = private unnamed_addr constant [55 x i8] c"cannot commit transaction - SQL statements in progress\00", align 1
@.str.695 = private unnamed_addr constant [48 x i8] c"cannot start a transaction within a transaction\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"cannot rollback - no transaction is active\00", align 1
@.str.697 = private unnamed_addr constant [41 x i8] c"cannot commit - no transaction is active\00", align 1
@.str.698 = private unnamed_addr constant [28 x i8] c"database schema has changed\00", align 1
@.str.699 = private unnamed_addr constant [43 x i8] c"SELECT*FROM\22%w\22.%s WHERE %s ORDER BY rowid\00", align 1
@.str.700 = private unnamed_addr constant [37 x i8] c"too many levels of trigger recursion\00", align 1
@.str.701 = private unnamed_addr constant [52 x i8] c"cannot change %s wal mode from within a transaction\00", align 1
@.str.702 = private unnamed_addr constant [5 x i8] c"into\00", align 1
@.str.703 = private unnamed_addr constant [7 x i8] c"out of\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"database table is locked: %s\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"statement aborts at %d: [%s] %s\00", align 1
@sqlite3BtreeFakeValidCursor.fakeCursor = internal global i8 0, align 1
@.str.706 = private unnamed_addr constant [19 x i8] c"sqlite_temp_master\00", align 1
@.str.707 = private unnamed_addr constant [72 x i8] c"CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\00", align 1
@.str.708 = private unnamed_addr constant [24 x i8] c"unsupported file format\00", align 1
@.str.709 = private unnamed_addr constant [34 x i8] c"SELECT*FROM\22%w\22.%s ORDER BY rowid\00", align 1
@.str.710 = private unnamed_addr constant [8 x i8] c"create \00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"invalid rootpage\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"orphan index\00", align 1
@.str.713 = private unnamed_addr constant [30 x i8] c"database schema is locked: %s\00", align 1
@.str.714 = private unnamed_addr constant [19 x i8] c"statement too long\00", align 1
@.str.715 = private unnamed_addr constant [41 x i8] c"SELECT tbl,idx,stat FROM %Q.sqlite_stat1\00", align 1
@__const.sqlite3DefaultRowEst.aVal = private unnamed_addr constant [5 x i16] [i16 33, i16 32, i16 30, i16 28, i16 26], align 2
@.str.716 = private unnamed_addr constant [16 x i8] c"Main freelist: \00", align 1
@.str.717 = private unnamed_addr constant [45 x i8] c"max rootpage (%d) disagrees with header (%d)\00", align 1
@.str.718 = private unnamed_addr constant [55 x i8] c"incremental_vacuum enabled with a max rootpage of zero\00", align 1
@.str.719 = private unnamed_addr constant [22 x i8] c"Page %d is never used\00", align 1
@.str.720 = private unnamed_addr constant [34 x i8] c"Pointer map page %d is referenced\00", align 1
@sqlite3JournalModename.azModeName = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.725, i32 0, i32 0)], align 16
@.str.721 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.723 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.724 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.725 = private unnamed_addr constant [4 x i8] c"wal\00", align 1
@.str.726 = private unnamed_addr constant [40 x i8] c"cannot VACUUM from within a transaction\00", align 1
@.str.727 = private unnamed_addr constant [43 x i8] c"cannot VACUUM - SQL statements in progress\00", align 1
@.str.728 = private unnamed_addr constant [18 x i8] c"non-text filename\00", align 1
@.str.729 = private unnamed_addr constant [23 x i8] c"ATTACH %Q AS vacuum_db\00", align 1
@.str.730 = private unnamed_addr constant [27 x i8] c"output file already exists\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.732 = private unnamed_addr constant [108 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\00", align 1
@.str.733 = private unnamed_addr constant [54 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='index'\00", align 1
@.str.734 = private unnamed_addr constant [151 x i8] c"SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\22%w\22.'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\00", align 1
@.str.735 = private unnamed_addr constant [130 x i8] c"INSERT INTO vacuum_db.sqlite_master SELECT*FROM \22%w\22.sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\00", align 1
@sqlite3RunVacuum.aCopy = internal unnamed_addr constant [10 x i8] c"\01\01\03\00\05\00\06\00\08\00", align 1
@sqlite3OpcodeProperty = internal unnamed_addr constant [176 x i8] calign 16
@sqlite3VdbeMakeReady.azColName = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0)], align 16
@.str.736 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.737 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.738 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.739 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.740 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.741 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@.str.742 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@.str.743 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.744 = private unnamed_addr constant [8 x i8] c"notused\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.746 = private unnamed_addr constant [31 x i8] c"too many terms in %s BY clause\00", align 1
@.str.747 = private unnamed_addr constant [48 x i8] c"Expression tree is too large (maximum depth %d)\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"unsafe use of %s()\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.750 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.751 = private unnamed_addr constant [8 x i8] c"_ROWID_\00", align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"ROWID\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"REUSE SUBQUERY %d\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"%sSCALAR SUBQUERY %d\00", align 1
@.str.756 = private unnamed_addr constant [12 x i8] c"CORRELATED \00", align 1
@sqlite3VdbeGetOp.dummy = internal global %struct.VdbeOp zeroinitializer, align 8
@sqlite3ExprCodeTarget.zAff = internal constant [8 x i8] c"B\00C\00D\00E\00", align 1
@.str.757 = private unnamed_addr constant [30 x i8] c"generated column loop on \22%s\22\00", align 1
@.str.758 = private unnamed_addr constant [26 x i8] c"misuse of aggregate: %s()\00", align 1
@.str.759 = private unnamed_addr constant [23 x i8] c"unknown function: %s()\00", align 1
@.str.760 = private unnamed_addr constant [30 x i8] c"%d columns assigned %d values\00", align 1
@.str.761 = private unnamed_addr constant [50 x i8] c"RAISE() may only be used within a trigger-program\00", align 1
@.str.762 = private unnamed_addr constant [44 x i8] c"sub-select returns %d columns - expected %d\00", align 1
@.str.763 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@sqlite3LogEst.a = internal unnamed_addr constant [8 x i16] [i16 0, i16 2, i16 3, i16 5, i16 6, i16 7, i16 8, i16 9], align 16
@.str.764 = private unnamed_addr constant [9 x i8] c":memory:\00", align 1
@.str.767 = private unnamed_addr constant [7 x i8] c"nolock\00", align 1
@.str.768 = private unnamed_addr constant [10 x i8] c"immutable\00", align 1
@.str.769 = private unnamed_addr constant [6 x i8] c"%s.%z\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"access to %z is prohibited\00", align 1
@.str.771 = private unnamed_addr constant [13 x i8] c"no such view\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"no such table\00", align 1
@.str.773 = private unnamed_addr constant [30 x i8] c"view %s is circularly defined\00", align 1
@.str.774 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.775 = private unnamed_addr constant [50 x i8] c"cannot create a TEMP index on non-TEMP table \22%s\22\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"table %s may not be indexed\00", align 1
@.str.777 = private unnamed_addr constant [25 x i8] c"views may not be indexed\00", align 1
@.str.778 = private unnamed_addr constant [34 x i8] c"there is already a table named %s\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"index %s already exists\00", align 1
@.str.780 = private unnamed_addr constant [23 x i8] c"sqlite_autoindex_%s_%d\00", align 1
@.str.781 = private unnamed_addr constant [61 x i8] c"expressions prohibited in PRIMARY KEY and UNIQUE constraints\00", align 1
@.str.782 = private unnamed_addr constant [42 x i8] c"conflicting ON CONFLICT clauses specified\00", align 1
@.str.783 = private unnamed_addr constant [20 x i8] c"CREATE%s INDEX %.*s\00", align 1
@.str.784 = private unnamed_addr constant [8 x i8] c" UNIQUE\00", align 1
@.str.785 = private unnamed_addr constant [48 x i8] c"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\00", align 1
@.str.786 = private unnamed_addr constant [27 x i8] c"name='%q' AND type='index'\00", align 1
@.str.787 = private unnamed_addr constant [28 x i8] c"unsupported use of NULLS %s\00", align 1
@.str.788 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.789 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"corrupt database\00", align 1
@.str.791 = private unnamed_addr constant [20 x i8] c"unknown database %T\00", align 1
@.str.792 = private unnamed_addr constant [46 x i8] c"%s %T cannot reference objects in database %s\00", align 1
@.str.793 = private unnamed_addr constant [24 x i8] c"%s cannot use variables\00", align 1
@.str.794 = private unnamed_addr constant [42 x i8] c"object name reserved for internal use: %s\00", align 1
@.str.795 = private unnamed_addr constant [70 x i8] c"unable to open a temporary database file for storing temporary tables\00", align 1
@.str.796 = private unnamed_addr constant [11 x i8] c"index '%q'\00", align 1
@.str.797 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.798 = private unnamed_addr constant [31 x i8] c"no such collation sequence: %s\00", align 1
@.str.799 = private unnamed_addr constant [45 x i8] c"foreign key mismatch - \22%w\22 referencing \22%w\22\00", align 1
@.str.800 = private unnamed_addr constant [9 x i8] c"%s.rowid\00", align 1
@.str.801 = private unnamed_addr constant [9 x i8] c"unopened\00", align 1
@.str.802 = private unnamed_addr constant [6 x i8] c"dylib\00", align 1
@.str.803 = private unnamed_addr constant [23 x i8] c"sqlite3_extension_init\00", align 1
@.str.804 = private unnamed_addr constant [35 x i8] c"unable to open shared library [%s]\00", align 1
@.str.806 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.807 = private unnamed_addr constant [6 x i8] c"_init\00", align 1
@.str.808 = private unnamed_addr constant [43 x i8] c"no entry point [%s] in shared library [%s]\00", align 1
@sqlite3Apis = external dso_local constant %struct.sqlite3_api_routines, align 8
@.str.809 = private unnamed_addr constant [32 x i8] c"error during initialization: %s\00", align 1
@sqlite3LogEstAdd.x = internal unnamed_addr constant [32 x i8] c"\0A\0A\09\09\08\08\07\07\07\06\06\06\05\05\05\04\04\04\04\03\03\03\03\03\03\02\02\02\02\02\02\02", align 16
@.str.810 = private unnamed_addr constant [46 x i8] c"all VALUES must have the same number of terms\00", align 1
@.str.811 = private unnamed_addr constant [82 x i8] c"SELECTs to the left and right of %s do not have the same number of result columns\00", align 1
@.str.812 = private unnamed_addr constant [36 x i8] c"too many FROM clause terms, max: %d\00", align 1
@.str.813 = private unnamed_addr constant [36 x i8] c"a JOIN clause is required before %s\00", align 1
@.str.814 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.815 = private unnamed_addr constant [6 x i8] c"USING\00", align 1
@.str.816 = private unnamed_addr constant [8 x i8] c"%.*z:%u\00", align 1
@.str.817 = private unnamed_addr constant [12 x i8] c"subquery_%u\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"no such index: %s\00", align 1
@.str.819 = private unnamed_addr constant [40 x i8] c"expected %d columns for '%s' but got %d\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"CO-ROUTINE %u\00", align 1
@.str.821 = private unnamed_addr constant [15 x i8] c"MATERIALIZE %u\00", align 1
@.str.822 = private unnamed_addr constant [9 x i8] c"DISTINCT\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"GROUP BY\00", align 1
@.str.824 = private unnamed_addr constant [23 x i8] c"RIGHT PART OF ORDER BY\00", align 1
@.str.825 = private unnamed_addr constant [41 x i8] c"cannot INSERT into generated column \22%s\22\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"table %S has no column named %s\00", align 1
@.str.827 = private unnamed_addr constant [52 x i8] c"table %S has %d columns but %d values were supplied\00", align 1
@.str.828 = private unnamed_addr constant [25 x i8] c"%d values for %d columns\00", align 1
@.str.829 = private unnamed_addr constant [21 x i8] c"cannot UPSERT a view\00", align 1
@.str.830 = private unnamed_addr constant [14 x i8] c"rows inserted\00", align 1
@.str.831 = private unnamed_addr constant [29 x i8] c"table %s may not be modified\00", align 1
@.str.832 = private unnamed_addr constant [38 x i8] c"cannot modify %s because it is a view\00", align 1
@.str.833 = private unnamed_addr constant [71 x i8] c"ON CONFLICT clause does not match any PRIMARY KEY or UNIQUE constraint\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"rows deleted\00", align 1
@.str.835 = private unnamed_addr constant [36 x i8] c"cannot UPDATE generated column \22%s\22\00", align 1
@.str.836 = private unnamed_addr constant [19 x i8] c"no such column: %s\00", align 1
@.str.837 = private unnamed_addr constant [13 x i8] c"rows updated\00", align 1
@.str.838 = private unnamed_addr constant [47 x i8] c"USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR\00", align 1
@.str.839 = private unnamed_addr constant [31 x i8] c"USING INDEX %s FOR IN-OPERATOR\00", align 1
@.str.840 = private unnamed_addr constant [23 x i8] c"REUSE LIST SUBQUERY %d\00", align 1
@.str.841 = private unnamed_addr constant [19 x i8] c"%sLIST SUBQUERY %d\00", align 1
@.str.842 = private unnamed_addr constant [28 x i8] c"at most %d tables in a join\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"SCAN CONSTANT ROW\00", align 1
@.str.844 = private unnamed_addr constant [36 x i8] c"too many arguments on %s() - max %d\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1
@.str.846 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c" SUBQUERY %u\00", align 1
@.str.848 = private unnamed_addr constant [10 x i8] c" TABLE %s\00", align 1
@.str.849 = private unnamed_addr constant [7 x i8] c" AS %s\00", align 1
@.str.850 = private unnamed_addr constant [12 x i8] c"PRIMARY KEY\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"AUTOMATIC PARTIAL COVERING INDEX\00", align 1
@.str.852 = private unnamed_addr constant [25 x i8] c"AUTOMATIC COVERING INDEX\00", align 1
@.str.853 = private unnamed_addr constant [18 x i8] c"COVERING INDEX %s\00", align 1
@.str.854 = private unnamed_addr constant [9 x i8] c"INDEX %s\00", align 1
@.str.855 = private unnamed_addr constant [8 x i8] c" USING \00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.857 = private unnamed_addr constant [14 x i8] c">? AND rowid<\00", align 1
@.str.858 = private unnamed_addr constant [38 x i8] c" USING INTEGER PRIMARY KEY (rowid%s?)\00", align 1
@__const.sqlite3WhereCodeOneLoopStart.aMoveOp = private unnamed_addr constant [4 x i8] c"\19\17\16\18", align 1
@sqlite3WhereCodeOneLoopStart.aStartOp = internal unnamed_addr constant [8 x i8] c"\00\00%!\19\16\18\17", align 1
@sqlite3WhereCodeOneLoopStart.aEndOp = internal unnamed_addr constant [4 x i8] c")'&(", align 1
@.str.859 = private unnamed_addr constant [15 x i8] c"MULTI-INDEX OR\00", align 1
@.str.860 = private unnamed_addr constant [9 x i8] c"INDEX %d\00", align 1
@sqlite3WhereCodeOneLoopStart.aStep = internal unnamed_addr constant [2 x i8] c"\05\04", align 1
@sqlite3WhereCodeOneLoopStart.aStart = internal unnamed_addr constant [2 x i8] c"%!", align 1
@.str.861 = private unnamed_addr constant [71 x i8] c"RANGE with offset PRECEDING/FOLLOWING requires one ORDER BY expression\00", align 1
@.str.862 = private unnamed_addr constant [63 x i8] c"FILTER clause may only be used with aggregate window functions\00", align 1
@__const.sqlite3WindowUpdate.aUp = private unnamed_addr constant [8 x %struct.WindowUpdate] [%struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @row_numberName, i32 0, i32 0), i32 76, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @dense_rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @percent_rankName, i32 0, i32 0), i32 92, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @cume_distName, i32 0, i32 0), i32 92, i32 86, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ntileName, i32 0, i32 0), i32 76, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @leadName, i32 0, i32 0), i32 76, i32 90, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @lagName, i32 0, i32 0), i32 76, i32 90, i32 85 }], align 16
@.str.863 = private unnamed_addr constant [9 x i8] c"ROLLBACK\00", align 1
@.str.864 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.865 = private unnamed_addr constant [8 x i8] c"RELEASE\00", align 1
@.str.866 = private unnamed_addr constant [41 x i8] c"temporary table name must be unqualified\00", align 1
@sqlite3StartTable.aCode = internal unnamed_addr constant [4 x i8] c"\02\04\08\06", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"table %T already exists\00", align 1
@.str.868 = private unnamed_addr constant [35 x i8] c"there is already an index named %s\00", align 1
@.str.869 = private unnamed_addr constant [16 x i8] c"sqlite_sequence\00", align 1
@sqlite3StartTable.nullRow = internal constant [6 x i8] c"\06\00\00\00\00\00", align 1
@.str.870 = private unnamed_addr constant [50 x i8] c"AUTOINCREMENT not allowed on WITHOUT ROWID tables\00", align 1
@.str.871 = private unnamed_addr constant [32 x i8] c"PRIMARY KEY missing on table %s\00", align 1
@.str.872 = private unnamed_addr constant [44 x i8] c"must have at least one non-generated column\00", align 1
@.str.873 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.874 = private unnamed_addr constant [5 x i8] c"VIEW\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"CREATE %s %.*s\00", align 1
@.str.876 = private unnamed_addr constant [87 x i8] c"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\00", align 1
@.str.877 = private unnamed_addr constant [42 x i8] c"CREATE TABLE %Q.sqlite_sequence(name,seq)\00", align 1
@.str.878 = private unnamed_addr constant [34 x i8] c"tbl_name='%q' AND type!='trigger'\00", align 1
@.str.879 = private unnamed_addr constant [23 x i8] c"too many columns on %s\00", align 1
@.str.880 = private unnamed_addr constant [26 x i8] c"duplicate column name: %s\00", align 1
@.str.881 = private unnamed_addr constant [45 x i8] c"default value of column [%s] is not constant\00", align 1
@.str.882 = private unnamed_addr constant [41 x i8] c"cannot use DEFAULT on a generated column\00", align 1
@.str.883 = private unnamed_addr constant [41 x i8] c"table \22%s\22 has more than one primary key\00", align 1
@.str.884 = private unnamed_addr constant [56 x i8] c"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\00", align 1
@.str.885 = private unnamed_addr constant [63 x i8] c"foreign key on %s should reference only one column of table %T\00", align 1
@.str.886 = private unnamed_addr constant [94 x i8] c"number of columns in foreign key does not match the number of columns in the referenced table\00", align 1
@.str.887 = private unnamed_addr constant [46 x i8] c"unknown column \22%s\22 in foreign key definition\00", align 1
@.str.890 = private unnamed_addr constant [31 x i8] c"error in generated column \22%s\22\00", align 1
@.str.891 = private unnamed_addr constant [28 x i8] c"table %s may not be dropped\00", align 1
@.str.892 = private unnamed_addr constant [34 x i8] c"use DROP TABLE to delete table %s\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"use DROP VIEW to delete view %s\00", align 1
@.str.894 = private unnamed_addr constant [14 x i8] c"sqlite_stat%d\00", align 1
@.str.895 = private unnamed_addr constant [45 x i8] c"DELETE FROM %Q.sqlite_sequence WHERE name=%Q\00", align 1
@.str.896 = private unnamed_addr constant [56 x i8] c"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\00", align 1
@.str.897 = private unnamed_addr constant [51 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"parameters are not allowed in views\00", align 1
@.str.899 = private unnamed_addr constant [34 x i8] c"too many terms in compound SELECT\00", align 1
@sqlite3JoinType.zKeyText = internal unnamed_addr constant [34 x i8] c"naturaleftouterightfullinnercross\00", align 16
@sqlite3JoinType.aKeyword = internal unnamed_addr constant [7 x %struct.anon.23] [%struct.anon.23 { i8 0, i8 7, i8 4 }, %struct.anon.23 { i8 6, i8 4, i8 40 }, %struct.anon.23 { i8 10, i8 5, i8 32 }, %struct.anon.23 { i8 14, i8 5, i8 48 }, %struct.anon.23 { i8 19, i8 4, i8 56 }, %struct.anon.23 { i8 23, i8 5, i8 1 }, %struct.anon.23 { i8 28, i8 5, i8 3 }], align 16
@.str.900 = private unnamed_addr constant [44 x i8] c"unknown or unsupported join type: %T %T%s%T\00", align 1
@.str.901 = private unnamed_addr constant [55 x i8] c"RIGHT and FULL OUTER JOINs are not currently supported\00", align 1
@.str.902 = private unnamed_addr constant [23 x i8] c"too many columns in %s\00", align 1
@.str.903 = private unnamed_addr constant [43 x i8] c"variable number must be between ?1 and ?%d\00", align 1
@.str.904 = private unnamed_addr constant [23 x i8] c"too many SQL variables\00", align 1
@.str.905 = private unnamed_addr constant [34 x i8] c"too many arguments on function %T\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"DISTINCT is not supported for window functions\00", align 1
@.str.907 = private unnamed_addr constant [38 x i8] c"syntax error after column name \22%.*s\22\00", align 1
@.str.908 = private unnamed_addr constant [18 x i8] c"no such index: %S\00", align 1
@.str.909 = private unnamed_addr constant [73 x i8] c"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\00", align 1
@.str.910 = private unnamed_addr constant [49 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='index'\00", align 1
@.str.911 = private unnamed_addr constant [4 x i8] c"-%T\00", align 1
@.str.912 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.914 = private unnamed_addr constant [25 x i8] c"not a writable directory\00", align 1
@.str.915 = private unnamed_addr constant [30 x i8] c"failed to set lock proxy file\00", align 1
@.str.916 = private unnamed_addr constant [53 x i8] c"Safety level may not be changed inside a transaction\00", align 1
@.str.917 = private unnamed_addr constant [8 x i8] c"issisii\00", align 1
@.str.918 = private unnamed_addr constant [7 x i8] c"issisi\00", align 1
@.str.919 = private unnamed_addr constant [5 x i8] c"iisX\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"isiX\00", align 1
@.str.921 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.922 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@__const.sqlite3Pragma.azOrigin = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.921, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0)], align 16
@.str.923 = private unnamed_addr constant [6 x i8] c"isisi\00", align 1
@.str.924 = private unnamed_addr constant [4 x i8] c"iss\00", align 1
@.str.925 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.926 = private unnamed_addr constant [9 x i8] c"iissssss\00", align 1
@.str.927 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"siX\00", align 1
@.str.929 = private unnamed_addr constant [24 x i8] c"*** in database %s ***\0A\00", align 1
@.str.930 = private unnamed_addr constant [20 x i8] c"NULL value in %s.%s\00", align 1
@.str.931 = private unnamed_addr constant [30 x i8] c"CHECK constraint failed in %s\00", align 1
@.str.932 = private unnamed_addr constant [5 x i8] c"row \00", align 1
@.str.933 = private unnamed_addr constant [21 x i8] c" missing from index \00", align 1
@.str.934 = private unnamed_addr constant [27 x i8] c"non-unique entry in index \00", align 1
@.str.935 = private unnamed_addr constant [29 x i8] c"wrong # of entries in index \00", align 1
@.str.937 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@sqlite3Pragma.encnames = internal unnamed_addr constant [9 x %struct.EncName] [%struct.EncName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.938, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.939, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.941, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.942, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.943, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.944, i32 0, i32 0), i8 0 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.945, i32 0, i32 0), i8 0 }, %struct.EncName zeroinitializer], align 16
@.str.938 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.939 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"UTF-16le\00", align 1
@.str.941 = private unnamed_addr constant [9 x i8] c"UTF-16be\00", align 1
@.str.942 = private unnamed_addr constant [8 x i8] c"UTF16le\00", align 1
@.str.943 = private unnamed_addr constant [8 x i8] c"UTF16be\00", align 1
@.str.944 = private unnamed_addr constant [7 x i8] c"UTF-16\00", align 1
@.str.945 = private unnamed_addr constant [6 x i8] c"UTF16\00", align 1
@.str.946 = private unnamed_addr constant [25 x i8] c"unsupported encoding: %s\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.948 = private unnamed_addr constant [18 x i8] c"ANALYZE \22%w\22.\22%w\22\00", align 1
@.str.949 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.950 = private unnamed_addr constant [64 x i8] c"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\00", align 1
@.str.951 = private unnamed_addr constant [29 x i8] c"type='trigger' AND name='%q'\00", align 1
@.str.952 = private unnamed_addr constant [46 x i8] c"temporary trigger may not have qualified name\00", align 1
@.str.953 = private unnamed_addr constant [26 x i8] c"trigger %T already exists\00", align 1
@.str.954 = private unnamed_addr constant [38 x i8] c"cannot create trigger on system table\00", align 1
@.str.955 = private unnamed_addr constant [37 x i8] c"cannot create %s trigger on view: %S\00", align 1
@.str.956 = private unnamed_addr constant [7 x i8] c"BEFORE\00", align 1
@.str.957 = private unnamed_addr constant [6 x i8] c"AFTER\00", align 1
@.str.958 = private unnamed_addr constant [46 x i8] c"cannot create INSTEAD OF trigger on table: %S\00", align 1
@.str.959 = private unnamed_addr constant [20 x i8] c"no such trigger: %S\00", align 1
@sqlite3Attach.attach_func = external dso_local constant %struct.FuncDef, align 8
@.str.960 = private unnamed_addr constant [14 x i8] c"sqlite_attach\00", align 1
@sqlite3Detach.detach_func = external dso_local constant %struct.FuncDef, align 8
@.str.961 = private unnamed_addr constant [14 x i8] c"sqlite_detach\00", align 1
@.str.962 = private unnamed_addr constant [46 x i8] c"unable to identify the object to be reindexed\00", align 1
@.str.963 = private unnamed_addr constant [59 x i8] c"there is already another table or index with this name: %s\00", align 1
@.str.964 = private unnamed_addr constant [27 x i8] c"view %s may not be altered\00", align 1
@.str.965 = private unnamed_addr constant [173 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\00", align 1
@.str.966 = private unnamed_addr constant [294 x i8] c"UPDATE %Q.%s SET tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\00", align 1
@.str.967 = private unnamed_addr constant [58 x i8] c"UPDATE \22%w\22.sqlite_sequence set name = %Q WHERE name = %Q\00", align 1
@.str.968 = private unnamed_addr constant [254 x i8] c"UPDATE sqlite_temp_master SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, 1), tbl_name = CASE WHEN tbl_name=%Q COLLATE nocase AND           sqlite_rename_test(%Q, sql, type, name, 1) THEN %Q ELSE tbl_name END WHERE type IN ('view', 'trigger')\00", align 1
@.str.969 = private unnamed_addr constant [32 x i8] c"Cannot add a PRIMARY KEY column\00", align 1
@.str.970 = private unnamed_addr constant [27 x i8] c"Cannot add a UNIQUE column\00", align 1
@.str.971 = private unnamed_addr constant [59 x i8] c"Cannot add a REFERENCES column with non-NULL default value\00", align 1
@.str.972 = private unnamed_addr constant [53 x i8] c"Cannot add a NOT NULL column with default value NULL\00", align 1
@.str.973 = private unnamed_addr constant [46 x i8] c"Cannot add a column with non-constant default\00", align 1
@.str.974 = private unnamed_addr constant [27 x i8] c"cannot add a STORED column\00", align 1
@.str.975 = private unnamed_addr constant [109 x i8] c"UPDATE \22%w\22.%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\00", align 1
@.str.976 = private unnamed_addr constant [30 x i8] c"Cannot add a column to a view\00", align 1
@.str.977 = private unnamed_addr constant [19 x i8] c"sqlite_altertab_%s\00", align 1
@.str.978 = private unnamed_addr constant [207 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'  AND (type != 'index' OR tbl_name = %Q) AND sql NOT LIKE 'create virtual%%'\00", align 1
@.str.979 = private unnamed_addr constant [120 x i8] c"UPDATE temp.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, 1) WHERE type IN ('trigger', 'view')\00", align 1
@.str.980 = private unnamed_addr constant [30 x i8] c"duplicate WITH table name: %s\00", align 1
@.str.981 = private unnamed_addr constant [17 x i8] c"PARTITION clause\00", align 1
@.str.982 = private unnamed_addr constant [16 x i8] c"ORDER BY clause\00", align 1
@.str.983 = private unnamed_addr constant [20 x i8] c"frame specification\00", align 1
@.str.984 = private unnamed_addr constant [33 x i8] c"cannot override %s of window: %s\00", align 1
@.str.985 = private unnamed_addr constant [32 x i8] c"unsupported frame specification\00", align 1
@.str.986 = private unnamed_addr constant [27 x i8] c"unrecognized token: \22%.*s\22\00", align 1
@.str.987 = private unnamed_addr constant [11 x i8] c"%s in \22%s\22\00", align 1
@sqlite3RegisterBuiltinFunctions.aBuiltinFunc = external dso_local global [62 x %struct.FuncDef], align 16
@.str.988 = private unnamed_addr constant [20 x i8] c"implies_nonnull_row\00", align 1
@.str.989 = private unnamed_addr constant [13 x i8] c"expr_compare\00", align 1
@.str.990 = private unnamed_addr constant [18 x i8] c"expr_implies_expr\00", align 1
@.str.991 = private unnamed_addr constant [15 x i8] c"load_extension\00", align 1
@.str.992 = private unnamed_addr constant [26 x i8] c"sqlite_compileoption_used\00", align 1
@.str.993 = private unnamed_addr constant [25 x i8] c"sqlite_compileoption_get\00", align 1
@.str.994 = private unnamed_addr constant [9 x i8] c"unlikely\00", align 1
@.str.995 = private unnamed_addr constant [11 x i8] c"likelihood\00", align 1
@.str.996 = private unnamed_addr constant [7 x i8] c"likely\00", align 1
@.str.997 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.998 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.1000 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.1001 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1002 = private unnamed_addr constant [6 x i8] c"instr\00", align 1
@.str.1003 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1004 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.1006 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.1007 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.1008 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.1009 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.1010 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.1011 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.1012 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.1013 = private unnamed_addr constant [11 x i8] c"randomblob\00", align 1
@.str.1014 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.1015 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.1016 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.1017 = private unnamed_addr constant [11 x i8] c"sqlite_log\00", align 1
@.str.1018 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.1019 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.1020 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.1021 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.1022 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.1023 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.1024 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.1025 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.1026 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.1027 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.1028 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.1029 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.1031 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@sqlite3AlterFunctions.aAlterTableFuncs = external dso_local global [3 x %struct.FuncDef], align 16
@.str.1032 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.1033 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.1034 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@sqlite3WindowFunctions.aWindowFuncs = external dso_local global [15 x %struct.FuncDef], align 16
@sqlite3RegisterDateTimeFunctions_aDateTimeFuncs = external dso_local global [8 x %struct.FuncDef], align 16
@.str.1035 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1038 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.1039 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1040 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.1041 = private unnamed_addr constant [18 x i8] c"current_timestamp\00", align 1
@.str.1042 = private unnamed_addr constant [13 x i8] c"current_date\00", align 1
@sqlite3MemSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_mem_methods, align 8
@.str.1043 = private unnamed_addr constant [38 x i8] c"failed to allocate %u bytes of memory\00", align 1
@.str.1044 = private unnamed_addr constant [36 x i8] c"failed memory resize %u to %u bytes\00", align 1
@.str.1045 = private unnamed_addr constant [8 x i8] c"hw.ncpu\00", align 1
@.str.1046 = private unnamed_addr constant [12 x i8] c"Sqlite_Heap\00", align 1
@sqlite3PCacheSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_pcache_methods2, align 8
@.str.1047 = private unnamed_addr constant [68 x i8] c"unable to close due to unfinalized statements or unfinished backups\00", align 1
@sqlite3ErrStr.aMsg = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1048, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1049, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1050, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1051, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1052, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1054, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1055, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1056, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1057, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1058, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1059, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1060, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1061, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1062, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1063, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1064, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1065, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1066, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1068, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1069, i32 0, i32 0)], align 16
@.str.1048 = private unnamed_addr constant [13 x i8] c"not an error\00", align 1
@.str.1049 = private unnamed_addr constant [16 x i8] c"SQL logic error\00", align 1
@.str.1050 = private unnamed_addr constant [25 x i8] c"access permission denied\00", align 1
@.str.1051 = private unnamed_addr constant [14 x i8] c"query aborted\00", align 1
@.str.1052 = private unnamed_addr constant [19 x i8] c"database is locked\00", align 1
@.str.1053 = private unnamed_addr constant [25 x i8] c"database table is locked\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"attempt to write a readonly database\00", align 1
@.str.1055 = private unnamed_addr constant [12 x i8] c"interrupted\00", align 1
@.str.1056 = private unnamed_addr constant [15 x i8] c"disk I/O error\00", align 1
@.str.1057 = private unnamed_addr constant [33 x i8] c"database disk image is malformed\00", align 1
@.str.1058 = private unnamed_addr constant [18 x i8] c"unknown operation\00", align 1
@.str.1059 = private unnamed_addr constant [25 x i8] c"database or disk is full\00", align 1
@.str.1060 = private unnamed_addr constant [29 x i8] c"unable to open database file\00", align 1
@.str.1061 = private unnamed_addr constant [17 x i8] c"locking protocol\00", align 1
@.str.1062 = private unnamed_addr constant [18 x i8] c"constraint failed\00", align 1
@.str.1063 = private unnamed_addr constant [18 x i8] c"datatype mismatch\00", align 1
@.str.1064 = private unnamed_addr constant [34 x i8] c"bad parameter or other API misuse\00", align 1
@.str.1065 = private unnamed_addr constant [21 x i8] c"authorization denied\00", align 1
@.str.1066 = private unnamed_addr constant [26 x i8] c"column index out of range\00", align 1
@.str.1067 = private unnamed_addr constant [23 x i8] c"file is not a database\00", align 1
@.str.1068 = private unnamed_addr constant [21 x i8] c"notification message\00", align 1
@.str.1069 = private unnamed_addr constant [16 x i8] c"warning message\00", align 1
@.str.1070 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1071 = private unnamed_addr constant [22 x i8] c"abort due to ROLLBACK\00", align 1
@.str.1072 = private unnamed_addr constant [22 x i8] c"another row available\00", align 1
@.str.1073 = private unnamed_addr constant [23 x i8] c"no more rows available\00", align 1
@.str.1074 = private unnamed_addr constant [63 x i8] c"unable to delete/modify user-function due to active statements\00", align 1
@.str.1075 = private unnamed_addr constant [51 x i8] c"unable to use function %s in the requested context\00", align 1
@.str.1076 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.1077 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.1078 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"invalid uri authority: %.*s\00", align 1
@.str.1080 = private unnamed_addr constant [4 x i8] c"vfs\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@sqlite3ParseUri.aCacheMode = internal unnamed_addr constant [3 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1082, i32 0, i32 0), i32 131072 }, %struct.OpenMode { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1083, i32 0, i32 0), i32 262144 }, %struct.OpenMode zeroinitializer], align 16
@.str.1082 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.1083 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.1084 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@sqlite3ParseUri.aOpenMode = internal unnamed_addr constant [5 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1085, i32 0, i32 0), i32 1 }, %struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1086, i32 0, i32 0), i32 2 }, %struct.OpenMode { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1087, i32 0, i32 0), i32 6 }, %struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 128 }, %struct.OpenMode zeroinitializer], align 16
@.str.1085 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.1086 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.1087 = private unnamed_addr constant [4 x i8] c"rwc\00", align 1
@.str.1088 = private unnamed_addr constant [20 x i8] c"no such %s mode: %s\00", align 1
@.str.1089 = private unnamed_addr constant [24 x i8] c"%s mode not allowed: %s\00", align 1
@.str.1090 = private unnamed_addr constant [16 x i8] c"no such vfs: %s\00", align 1
@.str.1091 = private unnamed_addr constant [6 x i8] c"MATCH\00", align 1
@.str.1092 = private unnamed_addr constant [39 x i8] c"automatic extension loading failed: %s\00", align 1
@.str.1093 = private unnamed_addr constant [20 x i8] c"database corruption\00", align 1
@.str.1094 = private unnamed_addr constant [25 x i8] c"%s at line %d of [%.10s]\00", align 1
@.str.1095 = private unnamed_addr constant [7 x i8] c"misuse\00", align 1
@.str.1096 = private unnamed_addr constant [17 x i8] c"cannot open file\00", align 1
@sqlite3SavedPrng = internal unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@sqlite3azCompileOpt = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1097, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1098, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1099, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1100, i32 0, i32 0)], align 16
@.str.1097 = private unnamed_addr constant [22 x i8] c"COMPILER=clang-11.0.0\00", align 1
@.str.1098 = private unnamed_addr constant [11 x i8] c"OMIT_TRACE\00", align 1
@.str.1099 = private unnamed_addr constant [18 x i8] c"OMIT_VIRTUALTABLE\00", align 1
@.str.1100 = private unnamed_addr constant [13 x i8] c"THREADSAFE=1\00", align 1
@switch.table.multiSelectOrderBy = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)], align 8
@switch.table.sqlite3Pragma.1201 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i64 0, i64 0)], align 8

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @my_assert(i1, i64, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @dbg() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRealify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @printTypeOf(i8*, i32, %struct.Vdbe*, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeIntegerAffinity(%struct.sqlite3_value*) #0

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3AtoF(i8* readonly %z, double* nocapture %pResult, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  store double 0.000000e+00, double* %pResult, align 8, !tbaa !6
  %cmp = icmp eq i32 %length, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i8 %enc to i32
  %cmp1 = icmp eq i8 %enc, 1
  br i1 %cmp1, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %and = and i32 %length, -2
  %sub = sub nsw i32 3, %conv
  %cmp5540 = icmp slt i32 %sub, %and
  br i1 %cmp5540, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %and to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %i.0541 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %z, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp8 = icmp eq i8 %2, 0
  br i1 %cmp8, label %for.inc, label %for.end.loopexit.split.loop.exit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add i64 %indvars.iv, 2
  %add = add nsw i32 %i.0541, 2
  %cmp5 = icmp slt i64 %indvars.iv.next, %1
  br i1 %cmp5, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit, %for.inc, %if.else
  %i.0.lcssa563 = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit ], [ %add, %for.inc ]
  %4 = phi i32 [ 1, %if.else ], [ -100, %for.end.loopexit.split.loop.exit ], [ 1, %for.inc ]
  %xor = xor i32 %i.0.lcssa563, 1
  %and17 = and i32 %conv, 1
  %idx.ext18 = zext i32 %and17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %z, i64 %idx.ext18
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.end
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %if.end ]
  %eType.1 = phi i32 [ %4, %for.end ], [ 1, %if.end ]
  %incr.0 = phi i64 [ 2, %for.end ], [ 1, %if.end ]
  %z.addr.0 = phi i8* [ %add.ptr19, %for.end ], [ %z, %if.end ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %z, i64 %idx.ext.pn
  %cmp21538 = icmp ult i8* %z.addr.0, %zEnd.0
  br i1 %cmp21538, label %land.rhs23, label %cleanup

land.rhs23:                                       ; preds = %while.body, %if.end20
  %z.addr.1539 = phi i8* [ %add.ptr30, %while.body ], [ %z.addr.0, %if.end20 ]
  %5 = load i8, i8* %z.addr.1539, align 1, !tbaa !10
  %idxprom24 = zext i8 %5 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom24
  %6 = load i8, i8* %arrayidx25, align 1, !tbaa !10
  %7 = and i8 %6, 1
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end34, label %while.body

while.body:                                       ; preds = %land.rhs23
  %add.ptr30 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  %cmp21 = icmp ult i8* %add.ptr30, %zEnd.0
  br i1 %cmp21, label %land.rhs23, label %cleanup

if.end34:                                         ; preds = %land.rhs23
  switch i8 %5, label %if.end49 [
    i8 45, label %if.then38
    i8 43, label %if.then45
  ]

if.then38:                                        ; preds = %if.end34
  %add.ptr40 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.then45:                                        ; preds = %if.end34
  %add.ptr47 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.end49:                                         ; preds = %if.then45, %if.then38, %if.end34
  %sign.0 = phi i32 [ -1, %if.then38 ], [ 1, %if.then45 ], [ 1, %if.end34 ]
  %z.addr.2 = phi i8* [ %add.ptr40, %if.then38 ], [ %add.ptr47, %if.then45 ], [ %z.addr.1539, %if.end34 ]
  %cmp51529 = icmp ult i8* %z.addr.2, %zEnd.0
  br i1 %cmp51529, label %land.rhs53, label %if.then201

land.rhs53:                                       ; preds = %if.end85, %if.end49
  %z.addr.3533 = phi i8* [ %z.addr.5, %if.end85 ], [ %z.addr.2, %if.end49 ]
  %nDigit.0532 = phi i32 [ %inc, %if.end85 ], [ 0, %if.end49 ]
  %d.0531 = phi i32 [ %d.2, %if.end85 ], [ 0, %if.end49 ]
  %s.0530 = phi i64 [ %add64, %if.end85 ], [ 0, %if.end49 ]
  %8 = load i8, i8* %z.addr.3533, align 1, !tbaa !10
  %idxprom54 = zext i8 %8 to i64
  %9 = add nsw i64 %idxprom54, -48
  %tobool58 = icmp ult i64 %9, 10
  br i1 %tobool58, label %while.body60, label %if.end90

while.body60:                                     ; preds = %land.rhs53
  %mul = mul nsw i64 %s.0530, 10
  %conv61 = sext i8 %8 to i64
  %sub62 = add i64 %mul, -48
  %add64 = add i64 %sub62, %conv61
  %add.ptr66 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %inc = add nuw nsw i32 %nDigit.0532, 1
  %cmp67 = icmp sgt i64 %add64, 922337203685477578
  %cmp71522 = icmp ult i8* %add.ptr66, %zEnd.0
  %or.cond547 = and i1 %cmp67, %cmp71522
  br i1 %or.cond547, label %land.rhs73, label %if.end85

land.rhs73:                                       ; preds = %while.body80, %while.body60
  %z.addr.4524 = phi i8* [ %add.ptr82, %while.body80 ], [ %add.ptr66, %while.body60 ]
  %d.1523 = phi i32 [ %inc83, %while.body80 ], [ %d.0531, %while.body60 ]
  %10 = load i8, i8* %z.addr.4524, align 1, !tbaa !10
  %idxprom74 = zext i8 %10 to i64
  %11 = add nsw i64 %idxprom74, -48
  %tobool78 = icmp ult i64 %11, 10
  br i1 %tobool78, label %while.body80, label %if.end85

while.body80:                                     ; preds = %land.rhs73
  %add.ptr82 = getelementptr inbounds i8, i8* %z.addr.4524, i64 %incr.0
  %inc83 = add nsw i32 %d.1523, 1
  %cmp71 = icmp ult i8* %add.ptr82, %zEnd.0
  br i1 %cmp71, label %land.rhs73, label %if.end85

if.end85:                                         ; preds = %while.body80, %land.rhs73, %while.body60
  %d.2 = phi i32 [ %d.0531, %while.body60 ], [ %inc83, %while.body80 ], [ %d.1523, %land.rhs73 ]
  %z.addr.5 = phi i8* [ %add.ptr66, %while.body60 ], [ %add.ptr82, %while.body80 ], [ %z.addr.4524, %land.rhs73 ]
  %cmp51 = icmp ult i8* %z.addr.5, %zEnd.0
  br i1 %cmp51, label %land.rhs53, label %do_atof_calc

if.end90:                                         ; preds = %land.rhs53
  %cmp92 = icmp eq i8 %8, 46
  br i1 %cmp92, label %if.then94, label %if.end122

if.then94:                                        ; preds = %if.end90
  %inc97 = add nuw nsw i32 %eType.1, 1
  %z.addr.6508 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %cmp99509 = icmp ult i8* %z.addr.6508, %zEnd.0
  br i1 %cmp99509, label %land.rhs101, label %if.end122

land.rhs101:                                      ; preds = %if.end118, %if.then94
  %z.addr.6513 = phi i8* [ %z.addr.6, %if.end118 ], [ %z.addr.6508, %if.then94 ]
  %nDigit.1512 = phi i32 [ %nDigit.2, %if.end118 ], [ %nDigit.0532, %if.then94 ]
  %d.3511 = phi i32 [ %d.4, %if.end118 ], [ %d.0531, %if.then94 ]
  %s.1510 = phi i64 [ %s.2, %if.end118 ], [ %s.0530, %if.then94 ]
  %12 = load i8, i8* %z.addr.6513, align 1, !tbaa !10
  %idxprom102 = zext i8 %12 to i64
  %13 = add nsw i64 %idxprom102, -48
  %tobool106 = icmp ult i64 %13, 10
  br i1 %tobool106, label %while.body108, label %if.end122

while.body108:                                    ; preds = %land.rhs101
  %cmp109 = icmp slt i64 %s.1510, 922337203685477579
  br i1 %cmp109, label %if.then111, label %if.end118

if.then111:                                       ; preds = %while.body108
  %mul112 = mul nsw i64 %s.1510, 10
  %conv113 = sext i8 %12 to i64
  %sub114 = add i64 %mul112, -48
  %add116 = add i64 %sub114, %conv113
  %dec = add nsw i32 %d.3511, -1
  %inc117 = add nsw i32 %nDigit.1512, 1
  br label %if.end118

if.end118:                                        ; preds = %if.then111, %while.body108
  %s.2 = phi i64 [ %add116, %if.then111 ], [ %s.1510, %while.body108 ]
  %d.4 = phi i32 [ %dec, %if.then111 ], [ %d.3511, %while.body108 ]
  %nDigit.2 = phi i32 [ %inc117, %if.then111 ], [ %nDigit.1512, %while.body108 ]
  %z.addr.6 = getelementptr inbounds i8, i8* %z.addr.6513, i64 %incr.0
  %cmp99 = icmp ult i8* %z.addr.6, %zEnd.0
  br i1 %cmp99, label %land.rhs101, label %if.end122

if.end122:                                        ; preds = %if.end118, %land.rhs101, %if.then94, %if.end90
  %s.3 = phi i64 [ %s.0530, %if.end90 ], [ %s.0530, %if.then94 ], [ %s.2, %if.end118 ], [ %s.1510, %land.rhs101 ]
  %d.5 = phi i32 [ %d.0531, %if.end90 ], [ %d.0531, %if.then94 ], [ %d.4, %if.end118 ], [ %d.3511, %land.rhs101 ]
  %nDigit.3 = phi i32 [ %nDigit.0532, %if.end90 ], [ %nDigit.0532, %if.then94 ], [ %nDigit.2, %if.end118 ], [ %nDigit.1512, %land.rhs101 ]
  %eType.2 = phi i32 [ %eType.1, %if.end90 ], [ %inc97, %if.then94 ], [ %inc97, %land.rhs101 ], [ %inc97, %if.end118 ]
  %z.addr.7 = phi i8* [ %z.addr.3533, %if.end90 ], [ %z.addr.6508, %if.then94 ], [ %z.addr.6, %if.end118 ], [ %z.addr.6513, %land.rhs101 ]
  %cmp123 = icmp ult i8* %z.addr.7, %zEnd.0
  br i1 %cmp123, label %if.end126, label %do_atof_calc

if.end126:                                        ; preds = %if.end122
  %14 = load i8, i8* %z.addr.7, align 1, !tbaa !10
  switch i8 %14, label %if.end176 [
    i8 101, label %if.then133
    i8 69, label %if.then133
  ]

if.then133:                                       ; preds = %if.end126, %if.end126
  %add.ptr135 = getelementptr inbounds i8, i8* %z.addr.7, i64 %incr.0
  %inc136 = add nsw i32 %eType.2, 1
  %cmp137 = icmp ult i8* %add.ptr135, %zEnd.0
  br i1 %cmp137, label %if.end140, label %do_atof_calc

if.end140:                                        ; preds = %if.then133
  %15 = load i8, i8* %add.ptr135, align 1, !tbaa !10
  switch i8 %15, label %if.end155 [
    i8 45, label %if.then144
    i8 43, label %if.then151
  ]

if.then144:                                       ; preds = %if.end140
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.then151:                                       ; preds = %if.end140
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.end155:                                        ; preds = %if.then151, %if.then144, %if.end140
  %esign.0 = phi i32 [ -1, %if.then144 ], [ 1, %if.then151 ], [ 1, %if.end140 ]
  %z.addr.8 = phi i8* [ %add.ptr146, %if.then144 ], [ %add.ptr153, %if.then151 ], [ %add.ptr135, %if.end140 ]
  %cmp157498 = icmp ult i8* %z.addr.8, %zEnd.0
  br i1 %cmp157498, label %land.rhs159.preheader, label %if.end176

land.rhs159.preheader:                            ; preds = %if.end155
  %16 = load i8, i8* %z.addr.8, align 1, !tbaa !10
  %idxprom160622 = zext i8 %16 to i64
  %17 = add nsw i64 %idxprom160622, -48
  %tobool164623 = icmp ult i64 %17, 10
  br i1 %tobool164623, label %while.body166, label %if.end176

land.rhs159:                                      ; preds = %while.body166
  %18 = load i8, i8* %add.ptr174, align 1, !tbaa !10
  %idxprom160 = zext i8 %18 to i64
  %19 = add nsw i64 %idxprom160, -48
  %tobool164 = icmp ult i64 %19, 10
  br i1 %tobool164, label %while.body166, label %if.end176

while.body166:                                    ; preds = %land.rhs159, %land.rhs159.preheader
  %20 = phi i8 [ %18, %land.rhs159 ], [ %16, %land.rhs159.preheader ]
  %e.0499625 = phi i32 [ %cond, %land.rhs159 ], [ 0, %land.rhs159.preheader ]
  %z.addr.9501624 = phi i8* [ %add.ptr174, %land.rhs159 ], [ %z.addr.8, %land.rhs159.preheader ]
  %cmp167 = icmp slt i32 %e.0499625, 10000
  %mul169 = mul nsw i32 %e.0499625, 10
  %conv170 = sext i8 %20 to i32
  %sub171 = add i32 %mul169, -48
  %add172 = add i32 %sub171, %conv170
  %cond = select i1 %cmp167, i32 %add172, i32 10000
  %add.ptr174 = getelementptr inbounds i8, i8* %z.addr.9501624, i64 %incr.0
  %cmp157 = icmp ult i8* %add.ptr174, %zEnd.0
  br i1 %cmp157, label %land.rhs159, label %if.end176

if.end176:                                        ; preds = %while.body166, %land.rhs159, %land.rhs159.preheader, %if.end155, %if.end126
  %esign.1 = phi i32 [ 1, %if.end126 ], [ %esign.0, %if.end155 ], [ %esign.0, %land.rhs159.preheader ], [ %esign.0, %while.body166 ], [ %esign.0, %land.rhs159 ]
  %e.1 = phi i32 [ 0, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ %cond, %while.body166 ], [ %cond, %land.rhs159 ]
  %eValid.1 = phi i32 [ 1, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ 1, %while.body166 ], [ 1, %land.rhs159 ]
  %eType.3 = phi i32 [ %eType.2, %if.end126 ], [ %inc136, %if.end155 ], [ %inc136, %land.rhs159.preheader ], [ %inc136, %while.body166 ], [ %inc136, %land.rhs159 ]
  %z.addr.10 = phi i8* [ %z.addr.7, %if.end126 ], [ %z.addr.8, %if.end155 ], [ %z.addr.8, %land.rhs159.preheader ], [ %add.ptr174, %while.body166 ], [ %add.ptr174, %land.rhs159 ]
  %cmp178494 = icmp ult i8* %z.addr.10, %zEnd.0
  br i1 %cmp178494, label %land.rhs180, label %do_atof_calc

land.rhs180:                                      ; preds = %while.body187, %if.end176
  %z.addr.11495 = phi i8* [ %add.ptr189, %while.body187 ], [ %z.addr.10, %if.end176 ]
  %21 = load i8, i8* %z.addr.11495, align 1, !tbaa !10
  %idxprom181 = zext i8 %21 to i64
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !10
  %23 = and i8 %22, 1
  %tobool185 = icmp eq i8 %23, 0
  br i1 %tobool185, label %do_atof_calc, label %while.body187

while.body187:                                    ; preds = %land.rhs180
  %add.ptr189 = getelementptr inbounds i8, i8* %z.addr.11495, i64 %incr.0
  %cmp178 = icmp ult i8* %add.ptr189, %zEnd.0
  br i1 %cmp178, label %land.rhs180, label %do_atof_calc

do_atof_calc:                                     ; preds = %while.body187, %land.rhs180, %if.end176, %if.then133, %if.end122, %if.end85
  %s.4 = phi i64 [ %s.3, %if.end122 ], [ %s.3, %if.then133 ], [ %s.3, %if.end176 ], [ %s.3, %land.rhs180 ], [ %s.3, %while.body187 ], [ %add64, %if.end85 ]
  %d.6 = phi i32 [ %d.5, %if.end122 ], [ %d.5, %if.then133 ], [ %d.5, %if.end176 ], [ %d.5, %land.rhs180 ], [ %d.5, %while.body187 ], [ %d.2, %if.end85 ]
  %esign.2 = phi i32 [ 1, %if.end122 ], [ 1, %if.then133 ], [ %esign.1, %if.end176 ], [ %esign.1, %land.rhs180 ], [ %esign.1, %while.body187 ], [ 1, %if.end85 ]
  %e.2 = phi i32 [ 0, %if.end122 ], [ 0, %if.then133 ], [ %e.1, %if.end176 ], [ %e.1, %land.rhs180 ], [ %e.1, %while.body187 ], [ 0, %if.end85 ]
  %eValid.2 = phi i32 [ 1, %if.end122 ], [ 0, %if.then133 ], [ %eValid.1, %if.end176 ], [ %eValid.1, %land.rhs180 ], [ %eValid.1, %while.body187 ], [ 1, %if.end85 ]
  %nDigit.4 = phi i32 [ %nDigit.3, %if.end122 ], [ %nDigit.3, %if.then133 ], [ %nDigit.3, %if.end176 ], [ %nDigit.3, %land.rhs180 ], [ %nDigit.3, %while.body187 ], [ %inc, %if.end85 ]
  %eType.4 = phi i32 [ %eType.2, %if.end122 ], [ %inc136, %if.then133 ], [ %eType.3, %if.end176 ], [ %eType.3, %land.rhs180 ], [ %eType.3, %while.body187 ], [ %eType.1, %if.end85 ]
  %z.addr.12 = phi i8* [ %z.addr.7, %if.end122 ], [ %add.ptr135, %if.then133 ], [ %z.addr.10, %if.end176 ], [ %add.ptr189, %while.body187 ], [ %z.addr.11495, %land.rhs180 ], [ %z.addr.5, %if.end85 ]
  %mul191 = mul nsw i32 %e.2, %esign.2
  %add192 = add nsw i32 %mul191, %d.6
  %cmp193 = icmp slt i32 %add192, 0
  %mul196 = sub nsw i32 0, %add192
  %e.3 = select i1 %cmp193, i32 %mul196, i32 %add192
  %cmp199 = icmp eq i64 %s.4, 0
  br i1 %cmp199, label %if.then201, label %while.cond206.preheader

while.cond206.preheader:                          ; preds = %do_atof_calc
  %cmp207489 = icmp sgt i32 %e.3, 0
  br i1 %cmp207489, label %while.body209.lr.ph, label %while.end225

while.body209.lr.ph:                              ; preds = %while.cond206.preheader
  br i1 %cmp193, label %while.body209.us, label %while.body209

while.body209.us:                                 ; preds = %if.end222.us, %while.body209.lr.ph
  %e.4491.us = phi i32 [ %dec224.us, %if.end222.us ], [ %mul196, %while.body209.lr.ph ]
  %s.5490.us = phi i64 [ %div.us, %if.end222.us ], [ %s.4, %while.body209.lr.ph ]
  %rem.us = srem i64 %s.5490.us, 10
  %div.us = sdiv i64 %s.5490.us, 10
  %cmp219.us = icmp eq i64 %rem.us, 0
  br i1 %cmp219.us, label %if.end222.us, label %if.else237

if.end222.us:                                     ; preds = %while.body209.us
  %dec224.us = add nsw i32 %e.4491.us, -1
  %cmp207.us = icmp sgt i32 %e.4491.us, 1
  br i1 %cmp207.us, label %while.body209.us, label %while.end225

if.then201:                                       ; preds = %do_atof_calc, %if.end49
  %z.addr.12585 = phi i8* [ %z.addr.12, %do_atof_calc ], [ %z.addr.2, %if.end49 ]
  %eType.4583 = phi i32 [ %eType.4, %do_atof_calc ], [ %eType.1, %if.end49 ]
  %nDigit.4581 = phi i32 [ %nDigit.4, %do_atof_calc ], [ 0, %if.end49 ]
  %eValid.2579 = phi i32 [ %eValid.2, %do_atof_calc ], [ 1, %if.end49 ]
  %cmp202 = icmp slt i32 %sign.0, 0
  %cond204 = select i1 %cmp202, double -0.000000e+00, double 0.000000e+00
  br label %if.end286

while.body209:                                    ; preds = %if.end216, %while.body209.lr.ph
  %e.4491 = phi i32 [ %dec224, %if.end216 ], [ %add192, %while.body209.lr.ph ]
  %s.5490 = phi i64 [ %mul217, %if.end216 ], [ %s.4, %while.body209.lr.ph ]
  %cmp213 = icmp sgt i64 %s.5490, 922337203685477579
  br i1 %cmp213, label %if.else237, label %if.end216

if.end216:                                        ; preds = %while.body209
  %mul217 = mul nsw i64 %s.5490, 10
  %dec224 = add nsw i32 %e.4491, -1
  %cmp207 = icmp sgt i32 %e.4491, 1
  br i1 %cmp207, label %while.body209, label %while.end225

while.end225:                                     ; preds = %if.end216, %if.end222.us, %while.cond206.preheader
  %s.5.lcssa = phi i64 [ %s.4, %while.cond206.preheader ], [ %div.us, %if.end222.us ], [ %mul217, %if.end216 ]
  %e.4.lcssa = phi i32 [ %e.3, %while.cond206.preheader ], [ 0, %if.end222.us ], [ 0, %if.end216 ]
  %cmp226 = icmp slt i32 %sign.0, 0
  %sub229 = sub nsw i64 0, %s.5.lcssa
  %cond232 = select i1 %cmp226, i64 %sub229, i64 %s.5.lcssa
  %cmp233 = icmp eq i32 %e.4.lcssa, 0
  br i1 %cmp233, label %if.then235, label %if.else270

if.then235:                                       ; preds = %while.end225
  %conv236 = sitofp i64 %cond232 to double
  br label %if.end286

if.else237:                                       ; preds = %while.body209, %while.body209.us
  %s.5.lcssa483 = phi i64 [ %s.5490.us, %while.body209.us ], [ %s.5490, %while.body209 ]
  %e.4.lcssa481 = phi i32 [ %e.4491.us, %while.body209.us ], [ %e.4491, %while.body209 ]
  %cmp226472 = icmp slt i32 %sign.0, 0
  %sub229473 = sub nsw i64 0, %s.5.lcssa483
  %cond232474 = select i1 %cmp226472, i64 %sub229473, i64 %s.5.lcssa483
  %cmp238 = icmp sgt i32 %e.4.lcssa481, 307
  br i1 %cmp238, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.else237
  %cmp241 = icmp slt i32 %e.4.lcssa481, 342
  br i1 %cmp241, label %if.then243, label %if.else258

if.then243:                                       ; preds = %if.then240
  %sub244 = add nsw i32 %e.4.lcssa481, -308
  %and13.i = and i32 %sub244, 1
  %tobool14.i = icmp eq i32 %and13.i, 0
  %spec.select15.i = select i1 %tobool14.i, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i = ashr i32 %sub244, 1
  %cmp17.i = icmp eq i32 %shr16.i, 0
  br i1 %cmp17.i, label %sqlite3Pow10.exit, label %if.end2.i

if.end2.i:                                        ; preds = %if.end2.i, %if.then243
  %shr20.i = phi i32 [ %shr.i, %if.end2.i ], [ %shr16.i, %if.then243 ]
  %spec.select19.i = phi x86_fp80 [ %spec.select.i, %if.end2.i ], [ %spec.select15.i, %if.then243 ]
  %x.018.i = phi x86_fp80 [ %mul3.i, %if.end2.i ], [ 0xK4002A000000000000000, %if.then243 ]
  %mul3.i = fmul x86_fp80 %x.018.i, %x.018.i
  %and.i = and i32 %shr20.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %mul.i = fmul x86_fp80 %spec.select19.i, %mul3.i
  %spec.select.i = select i1 %tobool.i, x86_fp80 %spec.select19.i, x86_fp80 %mul.i
  %shr.i = ashr i32 %shr20.i, 1
  %cmp.i = icmp eq i32 %shr.i, 0
  br i1 %cmp.i, label %sqlite3Pow10.exit, label %if.end2.i

sqlite3Pow10.exit:                                ; preds = %if.end2.i, %if.then243
  %spec.select.lcssa.i = phi x86_fp80 [ %spec.select15.i, %if.then243 ], [ %spec.select.i, %if.end2.i ]
  %conv248 = sitofp i64 %cond232474 to x86_fp80
  br i1 %cmp193, label %if.then247, label %if.else252

if.then247:                                       ; preds = %sqlite3Pow10.exit
  %div249 = fdiv x86_fp80 %conv248, %spec.select.lcssa.i
  %conv250 = fptrunc x86_fp80 %div249 to double
  %div251 = fdiv double %conv250, 1.000000e+308
  br label %if.end286

if.else252:                                       ; preds = %sqlite3Pow10.exit
  %mul254 = fmul x86_fp80 %spec.select.lcssa.i, %conv248
  %conv255 = fptrunc x86_fp80 %mul254 to double
  %mul256 = fmul double %conv255, 1.000000e+308
  br label %if.end286

if.else258:                                       ; preds = %if.then240
  br i1 %cmp193, label %if.then261, label %if.else264

if.then261:                                       ; preds = %if.else258
  %conv262 = sitofp i64 %cond232474 to double
  %mul263 = fmul double %conv262, 0.000000e+00
  br label %if.end286

if.else264:                                       ; preds = %if.else258
  %conv265 = sitofp i64 %cond232474 to float
  %mul266 = fmul float %conv265, 0x7FF0000000000000
  %conv267 = fpext float %mul266 to double
  br label %if.end286

if.else270:                                       ; preds = %if.else237, %while.end225
  %e.4482 = phi i32 [ %e.4.lcssa481, %if.else237 ], [ %e.4.lcssa, %while.end225 ]
  %cond232476479 = phi i64 [ %cond232474, %if.else237 ], [ %cond232, %while.end225 ]
  %and13.i454 = and i32 %e.4482, 1
  %tobool14.i455 = icmp eq i32 %and13.i454, 0
  %spec.select15.i456 = select i1 %tobool14.i455, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i457 = ashr i32 %e.4482, 1
  %cmp17.i458 = icmp eq i32 %shr16.i457, 0
  br i1 %cmp17.i458, label %sqlite3Pow10.exit471, label %if.end2.i469

if.end2.i469:                                     ; preds = %if.end2.i469, %if.else270
  %shr20.i459 = phi i32 [ %shr.i467, %if.end2.i469 ], [ %shr16.i457, %if.else270 ]
  %spec.select19.i460 = phi x86_fp80 [ %spec.select.i466, %if.end2.i469 ], [ %spec.select15.i456, %if.else270 ]
  %x.018.i461 = phi x86_fp80 [ %mul3.i462, %if.end2.i469 ], [ 0xK4002A000000000000000, %if.else270 ]
  %mul3.i462 = fmul x86_fp80 %x.018.i461, %x.018.i461
  %and.i463 = and i32 %shr20.i459, 1
  %tobool.i464 = icmp eq i32 %and.i463, 0
  %mul.i465 = fmul x86_fp80 %spec.select19.i460, %mul3.i462
  %spec.select.i466 = select i1 %tobool.i464, x86_fp80 %spec.select19.i460, x86_fp80 %mul.i465
  %shr.i467 = ashr i32 %shr20.i459, 1
  %cmp.i468 = icmp eq i32 %shr.i467, 0
  br i1 %cmp.i468, label %sqlite3Pow10.exit471, label %if.end2.i469

sqlite3Pow10.exit471:                             ; preds = %if.end2.i469, %if.else270
  %spec.select.lcssa.i470 = phi x86_fp80 [ %spec.select15.i456, %if.else270 ], [ %spec.select.i466, %if.end2.i469 ]
  %conv276 = sitofp i64 %cond232476479 to x86_fp80
  br i1 %cmp193, label %if.then275, label %if.else279

if.then275:                                       ; preds = %sqlite3Pow10.exit471
  %div277 = fdiv x86_fp80 %conv276, %spec.select.lcssa.i470
  br label %if.end283

if.else279:                                       ; preds = %sqlite3Pow10.exit471
  %mul281 = fmul x86_fp80 %spec.select.lcssa.i470, %conv276
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  %result.1.in = phi x86_fp80 [ %div277, %if.then275 ], [ %mul281, %if.else279 ]
  %result.1 = fptrunc x86_fp80 %result.1.in to double
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.else264, %if.then261, %if.else252, %if.then247, %if.then235, %if.then201
  %z.addr.12584 = phi i8* [ %z.addr.12585, %if.then201 ], [ %z.addr.12, %if.then235 ], [ %z.addr.12, %if.then261 ], [ %z.addr.12, %if.else264 ], [ %z.addr.12, %if.end283 ], [ %z.addr.12, %if.then247 ], [ %z.addr.12, %if.else252 ]
  %eType.4582 = phi i32 [ %eType.4583, %if.then201 ], [ %eType.4, %if.then235 ], [ %eType.4, %if.then261 ], [ %eType.4, %if.else264 ], [ %eType.4, %if.end283 ], [ %eType.4, %if.then247 ], [ %eType.4, %if.else252 ]
  %nDigit.4580 = phi i32 [ %nDigit.4581, %if.then201 ], [ %nDigit.4, %if.then235 ], [ %nDigit.4, %if.then261 ], [ %nDigit.4, %if.else264 ], [ %nDigit.4, %if.end283 ], [ %nDigit.4, %if.then247 ], [ %nDigit.4, %if.else252 ]
  %eValid.2578 = phi i32 [ %eValid.2579, %if.then201 ], [ %eValid.2, %if.then235 ], [ %eValid.2, %if.then261 ], [ %eValid.2, %if.else264 ], [ %eValid.2, %if.end283 ], [ %eValid.2, %if.then247 ], [ %eValid.2, %if.else252 ]
  %result.2 = phi double [ %cond204, %if.then201 ], [ %conv236, %if.then235 ], [ %mul263, %if.then261 ], [ %conv267, %if.else264 ], [ %result.1, %if.end283 ], [ %div251, %if.then247 ], [ %mul256, %if.else252 ]
  store double %result.2, double* %pResult, align 8, !tbaa !6
  %cmp287 = icmp eq i8* %z.addr.12584, %zEnd.0
  %cmp289 = icmp sgt i32 %nDigit.4580, 0
  %or.cond = and i1 %cmp289, %cmp287
  %tobool292 = icmp ne i32 %eValid.2578, 0
  %or.cond320 = and i1 %tobool292, %or.cond
  %cmp294 = icmp sgt i32 %eType.4582, 0
  %or.cond321 = and i1 %cmp294, %or.cond320
  br i1 %or.cond321, label %cleanup, label %if.else297

if.else297:                                       ; preds = %if.end286
  %cmp298 = icmp sgt i32 %eType.4582, 1
  br i1 %cmp298, label %land.lhs.true300, label %if.else309

land.lhs.true300:                                 ; preds = %if.else297
  %cmp301 = icmp eq i32 %eType.4582, 3
  %or.cond322 = or i1 %tobool292, %cmp301
  %or.cond323 = and i1 %cmp289, %or.cond322
  br i1 %or.cond323, label %cleanup, label %if.else309

if.else309:                                       ; preds = %land.lhs.true300, %if.else297
  br label %cleanup

cleanup:                                          ; preds = %if.else309, %land.lhs.true300, %if.end286, %while.body, %if.end20, %entry
  %retval.0 = phi i32 [ 0, %if.else309 ], [ 0, %entry ], [ %eType.4582, %if.end286 ], [ -1, %land.lhs.true300 ], [ 0, %if.end20 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_randomness(i32, i8*) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemIntegerify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3UnlinkAndDeleteTable(%struct.sqlite3*, i32, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3ExpirePreparedStatements(%struct.sqlite3*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeUpdateMeta(%struct.Btree*, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFreeCursor(%struct.Vdbe* nocapture readonly, %struct.VdbeCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemSetStr(%struct.sqlite3_value*, i8*, i32, i8 zeroext, void (i8*)*) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeGetMeta(%struct.Btree*, i32, i32*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemCast(%struct.sqlite3_value*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePrevious(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeEof(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorHasHint(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeClearCursor(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3VdbeIntValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3RowSetInsert(%struct.RowSet*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3RowSetTest(%struct.RowSet*, i32, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemSetRowSet(%struct.sqlite3_value*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFreeNN(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local void @sqlite3VdbeRecordUnpack(%struct.KeyInfo* nocapture readonly %pKeyInfo, i32 %nKey, i8* %pKey, %struct.UnpackedRecord* nocapture %p) unnamed_addr #4 {
entry:
  %v64.i71 = alloca i64, align 8
  %v64.i = alloca i64, align 8
  %aMem = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 1
  %0 = load %struct.sqlite3_value*, %struct.sqlite3_value** %aMem, align 8, !tbaa !11
  %default_rc = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 3
  store i8 0, i8* %default_rc, align 2, !tbaa !15
  %1 = load i8, i8* %pKey, align 1, !tbaa !10
  %cmp = icmp sgt i8 %1, -1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %incdec.ptr.i = getelementptr inbounds i8, i8* %pKey, i64 1
  %2 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv1.i = zext i8 %2 to i32
  %tobool.i = icmp slt i8 %2, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.false
  %and2.i = shl nuw nsw i32 %conv, 7
  %shl.i = and i32 %and2.i, 16256
  %or.i = or i32 %shl.i, %conv1.i
  br label %cond.end

if.end.i:                                         ; preds = %cond.false
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %pKey, i64 2
  %3 = load i8, i8* %incdec.ptr3.i, align 1, !tbaa !10
  %tobool8.i = icmp slt i8 %3, 0
  br i1 %tobool8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %conv5.i = zext i8 %3 to i32
  %shl4.i = shl nuw nsw i32 %conv, 14
  %or6.i = or i32 %shl4.i, %conv5.i
  %and10.i = and i32 %or6.i, 2080895
  %and11.i = shl nuw nsw i32 %conv1.i, 7
  %shl12.i = and i32 %and11.i, 16256
  %or13.i = or i32 %and10.i, %shl12.i
  br label %cond.end

if.end14.i:                                       ; preds = %if.end.i
  %4 = bitcast i64* %v64.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %call.i = call zeroext i8 @sqlite3GetVarint(i8* nonnull %pKey, i64* nonnull %v64.i) #5
  %5 = load i64, i64* %v64.i, align 8, !tbaa !16
  %6 = icmp ult i64 %5, 4294967295
  %storemerge43.i = select i1 %6, i64 %5, i64 4294967295
  %7 = trunc i64 %storemerge43.i to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %phitmp101 = zext i8 %call.i to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end14.i, %if.then9.i, %if.then.i, %entry
  %szHdr.1 = phi i32 [ %conv, %entry ], [ %7, %if.end14.i ], [ %or13.i, %if.then9.i ], [ %or.i, %if.then.i ]
  %cond = phi i32 [ 1, %entry ], [ %phitmp101, %if.end14.i ], [ 3, %if.then9.i ], [ 2, %if.then.i ]
  %8 = bitcast i64* %v64.i71 to i8*
  %enc = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 1
  %db = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 4
  %9 = bitcast %struct.sqlite3** %db to i64*
  %nField = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %cond.end22, %cond.end
  %d.0 = phi i32 [ %szHdr.1, %cond.end ], [ %add31, %cond.end22 ]
  %idx.0 = phi i32 [ %cond, %cond.end ], [ %add, %cond.end22 ]
  %u.0 = phi i16 [ 0, %cond.end ], [ %inc, %cond.end22 ]
  %pMem.0 = phi %struct.sqlite3_value* [ %0, %cond.end ], [ %incdec.ptr, %cond.end22 ]
  %cmp6 = icmp ult i32 %idx.0, %szHdr.1
  %cmp8 = icmp ule i32 %d.0, %nKey
  %10 = and i1 %cmp8, %cmp6
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom = zext i32 %idx.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %pKey, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp11 = icmp sgt i8 %11, -1
  %conv10 = zext i8 %11 to i32
  br i1 %cmp11, label %cond.end22, label %cond.false17

cond.false17:                                     ; preds = %while.body
  %incdec.ptr.i73 = getelementptr inbounds i8, i8* %arrayidx, i64 1
  %12 = load i8, i8* %incdec.ptr.i73, align 1, !tbaa !10
  %conv1.i74 = zext i8 %12 to i32
  %tobool.i75 = icmp slt i8 %12, 0
  br i1 %tobool.i75, label %if.end.i82, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false17
  %and2.i76 = shl nuw nsw i32 %conv10, 7
  %shl.i77 = and i32 %and2.i76, 16256
  %or.i78 = or i32 %shl.i77, %conv1.i74
  br label %cond.end22

if.end.i82:                                       ; preds = %cond.false17
  %incdec.ptr3.i80 = getelementptr inbounds i8, i8* %arrayidx, i64 2
  %13 = load i8, i8* %incdec.ptr3.i80, align 1, !tbaa !10
  %tobool8.i81 = icmp slt i8 %13, 0
  br i1 %tobool8.i81, label %if.end14.i93, label %if.then9.i90

if.then9.i90:                                     ; preds = %if.end.i82
  %conv5.i83 = zext i8 %13 to i32
  %shl4.i84 = shl nuw nsw i32 %conv10, 14
  %or6.i85 = or i32 %shl4.i84, %conv5.i83
  %and10.i86 = and i32 %or6.i85, 2080895
  %and11.i87 = shl nuw nsw i32 %conv1.i74, 7
  %shl12.i88 = and i32 %and11.i87, 16256
  %or13.i89 = or i32 %and10.i86, %shl12.i88
  br label %cond.end22

if.end14.i93:                                     ; preds = %if.end.i82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %call.i91 = call zeroext i8 @sqlite3GetVarint(i8* nonnull %arrayidx, i64* nonnull %v64.i71) #5
  %14 = load i64, i64* %v64.i71, align 8, !tbaa !16
  %15 = icmp ult i64 %14, 4294967295
  %storemerge43.i92 = select i1 %15, i64 %14, i64 4294967295
  %16 = trunc i64 %storemerge43.i92 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end14.i93, %if.then9.i90, %if.then.i79, %while.body
  %serial_type.1 = phi i32 [ %16, %if.end14.i93 ], [ %or13.i89, %if.then9.i90 ], [ %or.i78, %if.then.i79 ], [ %conv10, %while.body ]
  %cond23 = phi i8 [ %call.i91, %if.end14.i93 ], [ 3, %if.then9.i90 ], [ 2, %if.then.i79 ], [ 1, %while.body ]
  %conv25 = zext i8 %cond23 to i32
  %add = add i32 %idx.0, %conv25
  %17 = load i8, i8* %enc, align 4, !tbaa !18
  %enc26 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 2
  store i8 %17, i8* %enc26, align 2, !tbaa !21
  %18 = load i64, i64* %9, align 8, !tbaa !23
  %db27 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 9
  %19 = bitcast %struct.sqlite3** %db27 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !24
  %szMalloc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 7
  store i32 0, i32* %szMalloc, align 8, !tbaa !25
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 5
  store i8* null, i8** %z, align 8, !tbaa !26
  %idxprom28 = zext i32 %d.0 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %pKey, i64 %idxprom28
  %call30 = call i32 @sqlite3VdbeSerialGet(i8* nonnull %arrayidx29, i32 %serial_type.1, %struct.sqlite3_value* %pMem.0)
  %add31 = add i32 %call30, %d.0
  %incdec.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 1
  %inc = add nuw i16 %u.0, 1
  %20 = load i16, i16* %nField, align 8, !tbaa !27
  %cmp34 = icmp ult i16 %inc, %20
  br i1 %cmp34, label %while.cond, label %while.end

while.end:                                        ; preds = %cond.end22, %while.cond
  %d.1 = phi i32 [ %add31, %cond.end22 ], [ %d.0, %while.cond ]
  %u.1 = phi i16 [ %inc, %cond.end22 ], [ %u.0, %while.cond ]
  %pMem.1 = phi %struct.sqlite3_value* [ %incdec.ptr, %cond.end22 ], [ %pMem.0, %while.cond ]
  %cmp36 = icmp ule i32 %d.1, %nKey
  %tobool = icmp eq i16 %u.1, 0
  %or.cond = or i1 %cmp36, %tobool
  br i1 %or.cond, label %if.end40, label %if.then39

if.then39:                                        ; preds = %while.end
  %flags.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1, i32 1
  %21 = load i16, i16* %flags.i, align 8, !tbaa !28
  %22 = and i16 %21, 9216
  %cmp.i = icmp eq i16 %22, 0
  br i1 %cmp.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.then39
  %add.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* nonnull %add.ptr) #5
  br label %if.end40

if.else.i:                                        ; preds = %if.then39
  store i16 1, i16* %flags.i, align 8, !tbaa !28
  br label %if.end40

if.end40:                                         ; preds = %if.else.i, %if.then.i96, %while.end
  store i16 %u.1, i16* %nField, align 8, !tbaa !27
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.UnpackedRecord* @sqlite3VdbeAllocUnpackedRecord(%struct.KeyInfo*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCreateTable(%struct.Btree*, i32*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3*, %struct.Btree** nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor*, %struct.UnpackedRecord*, i64, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeLast(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValidNN(%struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeInsert(%struct.BtCursor*, %struct.BtreePayload* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3*, %struct.VdbeCursor*, %struct.UnpackedRecord*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxRowid(%struct.sqlite3*, %struct.BtCursor*, i64*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeDelete(%struct.BtCursor*, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3BtreeIntegerKey(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeClearTable(%struct.Btree*, i32, i32*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeNumericType(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeError(%struct.Vdbe* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value*, i8, i8) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyNumericAffinity(%struct.sqlite3_value* nocapture %pRec, i32 %bTryForInt) local_unnamed_addr #4 {
entry:
  %rValue = alloca double, align 8
  %0 = bitcast double* %rValue to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %enc1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %1 = load i8, i8* %enc1, align 2, !tbaa !21
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %2 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %3 = load i32, i32* %n, align 4, !tbaa !29
  %call = call i32 @sqlite3AtoF(i8* %2, double* nonnull %rValue, i32 %3, i8 zeroext %1)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call, 1
  %4 = load double, double* %rValue, align 8, !tbaa !6
  %i = bitcast %struct.sqlite3_value* %pRec to i64*
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %conv.i = fptosi double %4 to i64
  %cmp.i.i = fcmp oeq double %4, 0.000000e+00
  br i1 %cmp.i.i, label %alsoAnInt.exit.thread, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.lhs.true
  %5 = bitcast double %4 to i64
  %conv.i.i = sitofp i64 %conv.i to double
  %6 = bitcast double %conv.i.i to i64
  %7 = icmp ne i64 %5, %6
  %conv.off.i = add i64 %conv.i, 2251799813685248
  %8 = icmp ugt i64 %conv.off.i, 4503599627370495
  %9 = or i1 %8, %7
  br i1 %9, label %alsoAnInt.exit, label %alsoAnInt.exit.thread

alsoAnInt.exit.thread:                            ; preds = %lor.rhs.i.i, %land.lhs.true
  store i64 %conv.i, i64* %i, align 8, !tbaa !16
  br label %if.then4

alsoAnInt.exit:                                   ; preds = %lor.rhs.i.i
  %10 = load i8*, i8** %z, align 8, !tbaa !26
  %11 = load i32, i32* %n, align 4, !tbaa !29
  %12 = load i8, i8* %enc1, align 2, !tbaa !21
  %call1.i = call i32 @sqlite3Atoi64(i8* %10, i64* %i, i32 %11, i8 zeroext %12) #5
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.then4, label %if.else

if.then4:                                         ; preds = %alsoAnInt.exit, %alsoAnInt.exit.thread
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %13 = load i16, i16* %flags, align 8, !tbaa !28
  %14 = or i16 %13, 4
  store i16 %14, i16* %flags, align 8, !tbaa !28
  br label %if.end14

if.else:                                          ; preds = %alsoAnInt.exit, %if.end
  %15 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  store double %4, double* %15, align 8, !tbaa !10
  %flags7 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %16 = load i16, i16* %flags7, align 8, !tbaa !28
  %17 = or i16 %16, 8
  store i16 %17, i16* %flags7, align 8, !tbaa !28
  %tobool11 = icmp eq i32 %bTryForInt, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.else
  %call.i = call i64 @doubleToInt64(double %4) #5
  %conv.i31 = sitofp i64 %call.i to double
  %cmp.i32 = fcmp oeq double %4, %conv.i31
  %18 = add i64 %call.i, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %19, %cmp.i32
  br i1 %20, label %if.then.i33, label %if.end14

if.then.i33:                                      ; preds = %if.then12
  store i64 %call.i, i64* %i, align 8, !tbaa !10
  %21 = and i16 %16, 15936
  %22 = or i16 %21, 4
  store i16 %22, i16* %flags7, align 8, !tbaa !28
  br label %if.end14

if.end14:                                         ; preds = %if.then.i33, %if.then12, %if.else, %if.then4
  %23 = phi i16 [ %22, %if.then.i33 ], [ %17, %if.then12 ], [ %17, %if.else ], [ %14, %if.then4 ]
  %flags15 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %24 = and i16 %23, -3
  store i16 %24, i16* %flags15, align 8, !tbaa !28
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3IsNaN(double) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare double @sqlite3VdbeRealValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3MulInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3SubInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3AddInt64(i64*, i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define zeroext i16 @numericType(%struct.sqlite3_value* %pMem) local_unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 44
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv4 = trunc i32 %and to i16
  br label %return

if.end:                                           ; preds = %entry
  %and7 = and i32 %conv, 18
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %return, label %if.then9

if.then9:                                         ; preds = %if.end
  %call = call zeroext i16 @computeNumericType(%struct.sqlite3_value* nonnull %pMem)
  br label %return

return:                                           ; preds = %if.then9, %if.end, %if.then
  %retval.0 = phi i16 [ %conv4, %if.then ], [ %call, %if.then9 ], [ 0, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemMove(%struct.sqlite3_value*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @"#VDBE_EXEC_NAME"(%struct.Vdbe*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValid(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialPut(i8*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3PutVarint(i8*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VarintLen(i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyAffinity(%struct.sqlite3_value* %pRec, i8 signext %affinity, i8 zeroext %enc) local_unnamed_addr #4 {
entry:
  %acc.i = alloca %struct.sqlite3_str, align 8
  %cmp = icmp sgt i8 %affinity, 66
  br i1 %cmp, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv2 = zext i16 %0 to i32
  %and = and i32 %conv2, 4
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.then
  %and8 = and i32 %conv2, 8
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then5
  %and14 = and i32 %conv2, 2
  %tobool = icmp eq i32 %and14, 0
  br i1 %tobool, label %if.end41, label %if.then15

if.then15:                                        ; preds = %if.then11
  call void @applyNumericAffinity(%struct.sqlite3_value* nonnull %pRec, i32 1)
  br label %if.end41

if.else:                                          ; preds = %if.then5
  %r.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %1 = load double, double* %r.i, align 8, !tbaa !10
  %call.i = call i64 @doubleToInt64(double %1) #5
  %conv.i = sitofp i64 %call.i to double
  %cmp.i = fcmp oeq double %1, %conv.i
  %2 = add i64 %call.i, -9223372036854775807
  %3 = icmp ugt i64 %2, 1
  %4 = and i1 %3, %cmp.i
  br i1 %4, label %if.then.i, label %if.end41

if.then.i:                                        ; preds = %if.else
  %i.i = bitcast %struct.sqlite3_value* %pRec to i64*
  store i64 %call.i, i64* %i.i, align 8, !tbaa !10
  %5 = and i16 %0, 15936
  %6 = or i16 %5, 4
  store i16 %6, i16* %flags, align 8, !tbaa !28
  br label %if.end41

if.else18:                                        ; preds = %entry
  %cmp20 = icmp eq i8 %affinity, 66
  br i1 %cmp20, label %if.then22, label %if.end41

if.then22:                                        ; preds = %if.else18
  %flags23 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %7 = load i16, i16* %flags23, align 8, !tbaa !28
  %conv24 = zext i16 %7 to i32
  %and25 = and i32 %conv24, 2
  %cmp26 = icmp ne i32 %and25, 0
  %and31 = and i32 %conv24, 44
  %tobool32 = icmp eq i32 %and31, 0
  %or.cond = or i1 %cmp26, %tobool32
  br i1 %or.cond, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then22
  %szMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 7
  %8 = load i32, i32* %szMalloc.i, align 8, !tbaa !25
  %cmp.i54 = icmp slt i32 %8, 32
  br i1 %cmp.i54, label %sqlite3VdbeMemClearAndResize.exit, label %sqlite3VdbeMemClearAndResize.exit.thread

sqlite3VdbeMemClearAndResize.exit.thread:         ; preds = %if.then33
  %zMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 6
  %9 = bitcast i8** %zMalloc.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !30
  %z.i57 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %11 = bitcast i8** %z.i57 to i64*
  store i64 %10, i64* %11, align 8, !tbaa !26
  %12 = and i16 %7, 45
  store i16 %12, i16* %flags23, align 8, !tbaa !28
  %13 = inttoptr i64 %10 to i8*
  br label %lor.lhs.false.i.i

sqlite3VdbeMemClearAndResize.exit:                ; preds = %if.then33
  %call.i55 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* nonnull %pRec, i32 32, i32 0) #5
  %tobool.i = icmp eq i32 %call.i55, 0
  br i1 %tobool.i, label %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, label %if.then.i51

sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge: ; preds = %sqlite3VdbeMemClearAndResize.exit
  %z.i.phi.trans.insert = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %.pre = load i8*, i8** %z.i.phi.trans.insert, align 8, !tbaa !26
  %.pre68 = load i16, i16* %flags23, align 8, !tbaa !28
  br label %lor.lhs.false.i.i

if.then.i51:                                      ; preds = %sqlite3VdbeMemClearAndResize.exit
  %enc1.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 0, i8* %enc1.i, align 2, !tbaa !21
  br label %if.end35

lor.lhs.false.i.i:                                ; preds = %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, %sqlite3VdbeMemClearAndResize.exit.thread
  %14 = phi i16 [ %.pre68, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %12, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %15 = phi i8* [ %.pre, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %13, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %z.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %16 = bitcast %struct.sqlite3_str* %acc.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %zText.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 1
  store i8* %15, i8** %zText.i.i, align 8, !tbaa !31
  %db1.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 0
  store %struct.sqlite3* null, %struct.sqlite3** %db1.i.i, align 8, !tbaa !33
  %nAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 2
  store i32 32, i32* %nAlloc.i.i, align 8, !tbaa !34
  %mxAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 3
  %nChar.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 4
  %17 = bitcast i32* %mxAlloc.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(10) %17, i8 0, i64 10, i1 false) #5
  %conv.i61 = zext i16 %14 to i32
  %and.i = and i32 %conv.i61, 4
  %tobool.i62 = icmp eq i32 %and.i, 0
  br i1 %tobool.i62, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %lor.lhs.false.i.i
  %i.i63 = bitcast %struct.sqlite3_value* %pRec to i64*
  %18 = load i64, i64* %i.i63, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 %18) #5
  br label %vdbeMemRenderNum.exit

if.else.i:                                        ; preds = %lor.lhs.false.i.i
  %and3.i = and i32 %conv.i61, 32
  %tobool4.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.else.i
  %i7.i = bitcast %struct.sqlite3_value* %pRec to i64*
  %19 = load i64, i64* %i7.i, align 8, !tbaa !10
  %conv8.i = sitofp i64 %19 to double
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %conv8.i) #5
  br label %vdbeMemRenderNum.exit

if.else9.i:                                       ; preds = %if.else.i
  %r.i65 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %20 = load double, double* %r.i65, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %20) #5
  br label %vdbeMemRenderNum.exit

vdbeMemRenderNum.exit:                            ; preds = %if.else9.i, %if.then5.i, %if.then.i64
  %21 = load i32, i32* %nChar.i.i, align 8, !tbaa !35
  %idxprom.i = zext i32 %21 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %15, i64 %idxprom.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  %22 = load i8*, i8** %z.i, align 8, !tbaa !26
  %call3.i = call i64 @strlen(i8* nonnull dereferenceable(1) %22) #5
  %23 = trunc i64 %call3.i to i32
  %conv.i52 = and i32 %23, 1073741823
  %n.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  store i32 %conv.i52, i32* %n.i, align 4, !tbaa !29
  %enc4.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 1, i8* %enc4.i, align 2, !tbaa !21
  %24 = load i16, i16* %flags23, align 8, !tbaa !28
  %25 = and i16 %24, -559
  %26 = or i16 %25, 514
  store i16 %26, i16* %flags23, align 8, !tbaa !28
  %cmp.i.i = icmp eq i8 %enc, 1
  br i1 %cmp.i.i, label %if.end35, label %if.end.i.i

if.end.i.i:                                       ; preds = %vdbeMemRenderNum.exit
  %call.i.i = call i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value* nonnull %pRec, i8 zeroext %enc) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end.i.i, %vdbeMemRenderNum.exit, %if.then.i51, %if.then22
  %27 = load i16, i16* %flags23, align 8, !tbaa !28
  %28 = and i16 %27, -45
  store i16 %28, i16* %flags23, align 8, !tbaa !28
  br label %if.end41

if.end41:                                         ; preds = %if.end35, %if.else18, %if.then.i, %if.else, %if.then15, %if.then11, %if.then
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterInit(%struct.sqlite3*, i32, %struct.VdbeCursor*) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3MemCompare(%struct.sqlite3_value* %pMem1, %struct.sqlite3_value* %pMem2, %struct.CollSeq* readonly %pColl) unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %flags1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 1
  %1 = load i16, i16* %flags1, align 8, !tbaa !28
  %conv2 = zext i16 %1 to i32
  %or164 = or i16 %1, %0
  %or = zext i16 %or164 to i32
  %and = and i32 %or, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and3 = and i32 %conv2, 1
  %and4 = and i32 %conv, 1
  %sub = sub nsw i32 %and3, %and4
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i32 %or, 44
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.end98, label %if.then7

if.then7:                                         ; preds = %if.end
  %and8165 = and i16 %1, %0
  %and8 = zext i16 %and8165 to i32
  %and9 = and i32 %and8, 36
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.end26, label %if.then11

if.then11:                                        ; preds = %if.then7
  %i = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %2 = load i64, i64* %i, align 8, !tbaa !10
  %i13 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %3 = load i64, i64* %i13, align 8, !tbaa !10
  %cmp14 = icmp slt i64 %2, %3
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.then11
  %cmp22 = icmp sgt i64 %2, %3
  %. = zext i1 %cmp22 to i32
  br label %cleanup

if.end26:                                         ; preds = %if.then7
  %and28 = and i32 %and8, 8
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end47, label %if.then31

if.then31:                                        ; preds = %if.end26
  %r = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %4 = load double, double* %r, align 8, !tbaa !10
  %r34 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %5 = load double, double* %r34, align 8, !tbaa !10
  %cmp35 = fcmp olt double %4, %5
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.then31
  %cmp43 = fcmp ogt double %4, %5
  %.166 = zext i1 %cmp43 to i32
  br label %cleanup

if.end47:                                         ; preds = %if.end26
  %and48 = and i32 %conv, 36
  %cmp49 = icmp eq i32 %and48, 0
  br i1 %cmp49, label %if.end81, label %if.then51

if.then51:                                        ; preds = %if.end47
  %and52 = and i32 %conv2, 8
  %cmp53 = icmp eq i32 %and52, 0
  br i1 %cmp53, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then51
  %i57 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %6 = load i64, i64* %i57, align 8, !tbaa !10
  %r59 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %7 = load double, double* %r59, align 8, !tbaa !10
  %conv.i = sitofp i64 %6 to x86_fp80
  %conv1.i = fpext double %7 to x86_fp80
  %cmp.i = fcmp olt x86_fp80 %conv.i, %conv1.i
  %cmp4.i = fcmp ogt x86_fp80 %conv.i, %conv1.i
  %..i = zext i1 %cmp4.i to i32
  %retval.0.i = select i1 %cmp.i, i32 -1, i32 %..i
  br label %cleanup

if.else:                                          ; preds = %if.then51
  %and60 = and i32 %conv2, 36
  %cmp61 = icmp eq i32 %and60, 0
  br i1 %cmp61, label %cleanup, label %if.then63

if.then63:                                        ; preds = %if.else
  %i65 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %8 = load i64, i64* %i65, align 8, !tbaa !10
  %i67 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %9 = load i64, i64* %i67, align 8, !tbaa !10
  %cmp68 = icmp slt i64 %8, %9
  br i1 %cmp68, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.then63
  %cmp76 = icmp sgt i64 %8, %9
  %.167 = zext i1 %cmp76 to i32
  br label %cleanup

if.end81:                                         ; preds = %if.end47
  %and82 = and i32 %conv, 8
  %cmp83 = icmp eq i32 %and82, 0
  br i1 %cmp83, label %cleanup, label %if.then85

if.then85:                                        ; preds = %if.end81
  %and86 = and i32 %conv2, 36
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %cleanup, label %if.then89

if.then89:                                        ; preds = %if.then85
  %i91 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %10 = load i64, i64* %i91, align 8, !tbaa !10
  %r93 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %11 = load double, double* %r93, align 8, !tbaa !10
  %conv.i168 = sitofp i64 %10 to x86_fp80
  %conv1.i169 = fpext double %11 to x86_fp80
  %cmp.i170 = fcmp olt x86_fp80 %conv.i168, %conv1.i169
  %cmp4.i171 = fcmp ogt x86_fp80 %conv.i168, %conv1.i169
  %..i172.neg = sext i1 %cmp4.i171 to i32
  %sub95 = select i1 %cmp.i170, i32 1, i32 %..i172.neg
  br label %cleanup

if.end98:                                         ; preds = %if.end
  %and99 = and i32 %or, 2
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.end116, label %if.then101

if.then101:                                       ; preds = %if.end98
  %and102 = and i32 %conv, 2
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cleanup, label %if.end106

if.end106:                                        ; preds = %if.then101
  %and107 = and i32 %conv2, 2
  %cmp108 = icmp eq i32 %and107, 0
  br i1 %cmp108, label %cleanup, label %if.end111

if.end111:                                        ; preds = %if.end106
  %tobool112 = icmp eq %struct.CollSeq* %pColl, null
  br i1 %tobool112, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end111
  %call114 = call i32 @vdbeCompareMemString(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2, %struct.CollSeq* nonnull %pColl, i8* null)
  br label %cleanup

if.end116:                                        ; preds = %if.end111, %if.end98
  %call117 = call i32 @sqlite3BlobCompare(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then113, %if.end106, %if.then101, %if.then89, %if.then85, %if.end81, %if.end71, %if.then63, %if.else, %if.then55, %if.end38, %if.then31, %if.end17, %if.then11, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %retval.0.i, %if.then55 ], [ %sub95, %if.then89 ], [ %call114, %if.then113 ], [ %call117, %if.end116 ], [ -1, %if.then11 ], [ %., %if.end17 ], [ -1, %if.then31 ], [ %.166, %if.end38 ], [ -1, %if.then63 ], [ %.167, %if.end71 ], [ -1, %if.else ], [ -1, %if.then85 ], [ 1, %if.end81 ], [ 1, %if.then101 ], [ -1, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterNext(%struct.sqlite3*, %struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.BtCursor* @sqlite3BtreeFakeValidCursor() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXSFuncPtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXInversePtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value*, %struct.FuncDef*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value*, i64) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRawNN(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemInit(%struct.sqlite3_value*, %struct.sqlite3*, i16) #0

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* returned) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeBeginStmt(%struct.Btree*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeBeginTrans(%struct.Btree*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeHalt(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeNext(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCloseStatement(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCheckFk(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor*, i32, i32, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value*, i32, i32) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3VdbeSerialGet(i8* %buf, i32 %serial_type, %struct.sqlite3_value* %pMem) unnamed_addr #4 {
entry:
  switch i32 %serial_type, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb15
    i32 4, label %sw.bb29
    i32 5, label %sw.bb48
    i32 6, label %sw.bb78
    i32 7, label %sw.bb78
    i32 8, label %sw.bb79
    i32 9, label %sw.bb79
  ]

sw.bb:                                            ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 16385, i16* %flags, align 8, !tbaa !28
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 0, i32* %n, align 4, !tbaa !29
  %nZero = bitcast %struct.sqlite3_value* %pMem to i32*
  store i32 0, i32* %nZero, align 8, !tbaa !10
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  %flags2 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 1, i16* %flags2, align 8, !tbaa !28
  br label %return

sw.bb3:                                           ; preds = %entry
  %0 = load i8, i8* %buf, align 1, !tbaa !10
  %conv = sext i8 %0 to i64
  %i = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv, i64* %i, align 8, !tbaa !10
  %flags5 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags5, align 8, !tbaa !28
  br label %return

sw.bb6:                                           ; preds = %entry
  %1 = load i8, i8* %buf, align 1, !tbaa !10
  %conv8 = sext i8 %1 to i32
  %mul = shl nsw i32 %conv8, 8
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 1
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !10
  %conv10 = zext i8 %2 to i32
  %or = or i32 %mul, %conv10
  %conv11 = sext i32 %or to i64
  %i13 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv11, i64* %i13, align 8, !tbaa !10
  %flags14 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags14, align 8, !tbaa !28
  br label %return

sw.bb15:                                          ; preds = %entry
  %3 = load i8, i8* %buf, align 1, !tbaa !10
  %conv17 = sext i8 %3 to i32
  %mul18 = shl nsw i32 %conv17, 16
  %arrayidx19 = getelementptr inbounds i8, i8* %buf, i64 1
  %4 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv20, 8
  %or21 = or i32 %shl, %mul18
  %arrayidx22 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx22, align 1, !tbaa !10
  %conv23 = zext i8 %5 to i32
  %or24 = or i32 %or21, %conv23
  %conv25 = sext i32 %or24 to i64
  %i27 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv25, i64* %i27, align 8, !tbaa !10
  %flags28 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags28, align 8, !tbaa !28
  br label %return

sw.bb29:                                          ; preds = %entry
  %6 = load i8, i8* %buf, align 1, !tbaa !10
  %conv31 = sext i8 %6 to i32
  %mul32 = shl nsw i32 %conv31, 24
  %arrayidx33 = getelementptr inbounds i8, i8* %buf, i64 1
  %7 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %7 to i32
  %shl35 = shl nuw nsw i32 %conv34, 16
  %or36 = or i32 %shl35, %mul32
  %arrayidx37 = getelementptr inbounds i8, i8* %buf, i64 2
  %8 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %8 to i32
  %shl39 = shl nuw nsw i32 %conv38, 8
  %or40 = or i32 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %buf, i64 3
  %9 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %9 to i32
  %or43 = or i32 %or40, %conv42
  %conv44 = sext i32 %or43 to i64
  %i46 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv44, i64* %i46, align 8, !tbaa !10
  %flags47 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags47, align 8, !tbaa !28
  br label %return

sw.bb48:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 2
  %10 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv50 = zext i8 %10 to i64
  %shl51 = shl nuw nsw i64 %conv50, 24
  %arrayidx53 = getelementptr inbounds i8, i8* %buf, i64 3
  %11 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %11 to i64
  %shl55 = shl nuw nsw i64 %conv54, 16
  %or56 = or i64 %shl55, %shl51
  %arrayidx58 = getelementptr inbounds i8, i8* %buf, i64 4
  %12 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %12 to i64
  %shl60 = shl nuw nsw i64 %conv59, 8
  %or61 = or i64 %or56, %shl60
  %arrayidx63 = getelementptr inbounds i8, i8* %buf, i64 5
  %13 = load i8, i8* %arrayidx63, align 1, !tbaa !10
  %conv64 = zext i8 %13 to i64
  %or65 = or i64 %or61, %conv64
  %14 = load i8, i8* %buf, align 1, !tbaa !10
  %conv68 = sext i8 %14 to i32
  %mul69 = shl nsw i32 %conv68, 8
  %arrayidx70 = getelementptr inbounds i8, i8* %buf, i64 1
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %15 to i32
  %or72 = or i32 %mul69, %conv71
  %conv73 = sext i32 %or72 to i64
  %mul74 = shl nsw i64 %conv73, 32
  %add = or i64 %or65, %mul74
  %i76 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %add, i64* %i76, align 8, !tbaa !10
  %flags77 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags77, align 8, !tbaa !28
  br label %return

sw.bb78:                                          ; preds = %entry, %entry
  %16 = load i8, i8* %buf, align 1, !tbaa !10
  %conv.i = zext i8 %16 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 24
  %arrayidx1.i = getelementptr inbounds i8, i8* %buf, i64 1
  %17 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %17 to i64
  %shl3.i = shl nuw nsw i64 %conv2.i, 16
  %or.i = or i64 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr inbounds i8, i8* %buf, i64 2
  %18 = load i8, i8* %arrayidx4.i, align 1, !tbaa !10
  %conv5.i = zext i8 %18 to i64
  %shl6.i = shl nuw nsw i64 %conv5.i, 8
  %or7.i = or i64 %or.i, %shl6.i
  %arrayidx8.i = getelementptr inbounds i8, i8* %buf, i64 3
  %19 = load i8, i8* %arrayidx8.i, align 1, !tbaa !10
  %conv9.i = zext i8 %19 to i64
  %or10.i = or i64 %or7.i, %conv9.i
  %add.ptr.i = getelementptr inbounds i8, i8* %buf, i64 4
  %20 = load i8, i8* %add.ptr.i, align 1, !tbaa !10
  %conv13.i = zext i8 %20 to i64
  %shl14.i = shl nuw nsw i64 %conv13.i, 24
  %arrayidx16.i = getelementptr inbounds i8, i8* %buf, i64 5
  %21 = load i8, i8* %arrayidx16.i, align 1, !tbaa !10
  %conv17.i = zext i8 %21 to i64
  %shl18.i = shl nuw nsw i64 %conv17.i, 16
  %arrayidx21.i = getelementptr inbounds i8, i8* %buf, i64 6
  %22 = load i8, i8* %arrayidx21.i, align 1, !tbaa !10
  %conv22.i = zext i8 %22 to i64
  %shl23.i = shl nuw nsw i64 %conv22.i, 8
  %arrayidx26.i = getelementptr inbounds i8, i8* %buf, i64 7
  %23 = load i8, i8* %arrayidx26.i, align 1, !tbaa !10
  %conv27.i = zext i8 %23 to i64
  %shl29.i = shl nuw i64 %or10.i, 32
  %or19.i = or i64 %shl29.i, %shl14.i
  %or24.i = or i64 %or19.i, %shl18.i
  %or28.i = or i64 %or24.i, %shl23.i
  %add.i = or i64 %or28.i, %conv27.i
  %cmp.i = icmp eq i32 %serial_type, 6
  %i.i = bitcast %struct.sqlite3_value* %pMem to i64*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 8, !tbaa !10
  br label %serialGet.exit

if.else.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 1
  %and.i = and i64 %add.i, 9218868437227405312
  %cmp35.i = icmp eq i64 %and.i, 9218868437227405312
  %and37.i = and i64 %add.i, 4503599627370495
  %cmp38.i = icmp ne i64 %and37.i, 0
  %24 = and i1 %cmp35.i, %cmp38.i
  %conv40.i = select i1 %24, i16 1, i16 8
  br label %serialGet.exit

serialGet.exit:                                   ; preds = %if.else.i, %if.then.i
  %conv40.sink.i = phi i16 [ 4, %if.then.i ], [ %conv40.i, %if.else.i ]
  %25 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %conv40.sink.i, i16* %25, align 8
  br label %return

sw.bb79:                                          ; preds = %entry, %entry
  %sub = add nsw i32 %serial_type, -8
  %conv80 = zext i32 %sub to i64
  %i82 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv80, i64* %i82, align 8, !tbaa !10
  %flags83 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags83, align 8, !tbaa !28
  br label %return

sw.default:                                       ; preds = %entry
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 5
  store i8* %buf, i8** %z, align 8, !tbaa !26
  %sub84 = add i32 %serial_type, -12
  %div = lshr i32 %sub84, 1
  %n85 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 %div, i32* %n85, align 4, !tbaa !29
  %and = and i32 %serial_type, 1
  %idxprom = zext i32 %and to i64
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* @sqlite3VdbeSerialGet.aFlag, i64 0, i64 %idxprom
  %26 = load i16, i16* %arrayidx86, align 2, !tbaa !36
  %flags87 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %26, i16* %flags87, align 8, !tbaa !28
  br label %return

return:                                           ; preds = %sw.default, %sw.bb79, %serialGet.exit, %sw.bb48, %sw.bb29, %sw.bb15, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ 0, %sw.bb79 ], [ 8, %serialGet.exit ], [ 6, %sw.bb48 ], [ 4, %sw.bb29 ], [ 3, %sw.bb15 ], [ 2, %sw.bb6 ], [ 1, %sw.bb3 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRelease(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialTypeLen(i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3VdbeOneByteSerialTypeLen(i8) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3GetVarint32(i8*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8* @sqlite3BtreePayloadFetch(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreePayloadSize(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetNull(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor**, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeFirst(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeCursorHintFlags(%struct.BtCursor*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* nocapture readonly, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare void @printProgress(i64, i32, i64)

declare void @printInt(i64, i64, i32, i64)

declare void @printDouble(double, i64, i32, i64)

declare void @printPtrAndValue(i64, i64, i64, i32, i64, i1)

define i32 @jittedFunction(%struct.Vdbe* %0, i8* %1, i32* %2, i8* %3, i8* %4) !dbg !37 {
  %6 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 19, !dbg !41
  %7 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6, align 8, !dbg !43
  %8 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 21, !dbg !44
  %9 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !45
  %10 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 23, !dbg !46
  %11 = load %struct.VdbeOp*, %struct.VdbeOp** %10, align 8, !dbg !47
  %12 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 0, !dbg !48
  %13 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !49
  br label %14, !dbg !50

14:                                               ; preds = %8945, %8874, %.critedge1, %9024, %5
  %15 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 10, !dbg !51
  %16 = load i32, i32* %15, align 4, !dbg !52
  switch i32 %16, label %17 [
    i32 96, label %22
    i32 1, label %22
    i32 2, label %22
    i32 3, label %31
    i32 4, label %49
    i32 5, label %76
    i32 6, label %81
    i32 7, label %98
    i32 8, label %115
    i32 9, label %132
    i32 10, label %149
    i32 11, label %166
    i32 12, label %190
    i32 13, label %447
    i32 14, label %502
    i32 15, label %759
    i32 16, label %814
    i32 17, label %831
    i32 18, label %897
    i32 19, label %921
    i32 20, label %1178
    i32 21, label %1435
    i32 22, label %1692
    i32 23, label %1949
    i32 24, label %2206
    i32 25, label %2206
    i32 26, label %2463
    i32 27, label %2463
    i32 28, label %2514
    i32 29, label %3395
    i32 30, label %3426
    i32 31, label %3438
    i32 32, label %3693
    i32 33, label %3699
    i32 34, label %3701
    i32 35, label %3821
    i32 36, label %3840
    i32 37, label %4097
    i32 38, label %4139
    i32 39, label %4396
    i32 40, label %4451
    i32 41, label %4708
    i32 42, label %4749
    i32 43, label %5006
    i32 44, label %5048
    i32 45, label %5305
    i32 46, label %5360
    i32 47, label %5616
    i32 48, label %5873
    i32 49, label %6130
    i32 50, label %6137
    i32 51, label %6394
    i32 52, label %6401
    i32 53, label %6931
    i32 54, label %6947
    i32 55, label %6959
    i32 56, label %6971
    i32 57, label %6979
    i32 58, label %7003
    i32 59, label %7012
    i32 60, label %7267
    i32 61, label %7524
    i32 62, label %7592
    i32 63, label %7596
    i32 64, label %7601
    i32 65, label %7606
    i32 66, label %.critedge
    i32 67, label %7617
    i32 68, label %7874
    i32 69, label %7881
    i32 70, label %8138
    i32 71, label %8145
    i32 72, label %8224
    i32 73, label %8308
    i32 74, label %8312
    i32 75, label %8567
    i32 76, label %8824
    i32 77, label %8842
    i32 78, label %8851
    i32 79, label %9031
    i32 80, label %8856
    i32 81, label %8874
    i32 82, label %8881
    i32 83, label %.critedge1
    i32 84, label %8894
    i32 85, label %8905
    i32 86, label %8912
    i32 87, label %8945
    i32 88, label %8952
    i32 89, label %9006
    i32 90, label %9024
    i32 91, label %9031
    i32 92, label %9033
    i32 93, label %9055
    i32 94, label %9078
    i32 95, label %9101
  ], !dbg !53

17:                                               ; preds = %14
  %18 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !54
  store i32 0, i32* %18, align 4, !dbg !57
  %19 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !58
  %20 = load i32, i32* %19, align 4, !dbg !59
  %21 = add i32 %20, 1, !dbg !60
  store i32 %21, i32* %19, align 4, !dbg !61
  br label %9033, !dbg !62

22:                                               ; preds = %9115, %14, %14, %14
  %23 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 6, i32 4, i32 -1, i8 1), !dbg !63
  %24 = ptrtoint %struct.VdbeCursor* %23 to i64, !dbg !66
  %25 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %23, i32 0, i32 13, !dbg !67
  %26 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, !dbg !68
  %27 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %26, i32 0, i32 6, !dbg !69
  %28 = bitcast %union.p4union* %27 to %struct.KeyInfo**, !dbg !70
  %29 = load %struct.KeyInfo*, %struct.KeyInfo** %28, align 8, !dbg !71
  store %struct.KeyInfo* %29, %struct.KeyInfo** %25, align 8, !dbg !72
  %30 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %23), !dbg !73
  br label %31, !dbg !74

31:                                               ; preds = %22, %14
  %32 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 3, !dbg !75
  %33 = call i8* @llvm.stacksave(), !dbg !78
  %34 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %32, i32 0, i32 4, !dbg !79
  %35 = load i32, i32* %34, align 4, !dbg !82
  %36 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %35, !dbg !83
  %37 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %36, i32 0, i32 1, !dbg !78
  %38 = load i16, i16* %37, align 2, !dbg !78
  %39 = and i16 %38, 9216, !dbg !78
  %40 = icmp ne i16 %39, 0, !dbg !78
  %41 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %40, label %42, label %44, !dbg !78

42:                                               ; preds = %31
  %43 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %36), !dbg !78
  store %struct.sqlite3_value* %43, %struct.sqlite3_value** %41, align 8, !dbg !78
  br label %45, !dbg !78

44:                                               ; preds = %31
  store i16 4, i16* %37, align 2, !dbg !78
  store %struct.sqlite3_value* %36, %struct.sqlite3_value** %41, align 8, !dbg !78
  br label %45, !dbg !78

45:                                               ; preds = %44, %42
  %46 = load %struct.sqlite3_value*, %struct.sqlite3_value** %41, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %33), !dbg !78
  %47 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %46, i32 0, i32 0, i32 0, !dbg !84
  %48 = bitcast double* %47 to i64*, !dbg !85
  store i64 0, i64* %48, align 4, !dbg !86
  br label %49, !dbg !74

49:                                               ; preds = %45, %14
  %50 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 4, !dbg !87
  %51 = call i8* @llvm.stacksave(), !dbg !90
  %52 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %50, i32 0, i32 4, !dbg !79
  %53 = load i32, i32* %52, align 4, !dbg !82
  %54 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %53, !dbg !83
  %55 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %54, i32 0, i32 1, !dbg !90
  %56 = load i16, i16* %55, align 2, !dbg !90
  %57 = and i16 %56, 9216, !dbg !90
  %58 = icmp ne i16 %57, 0, !dbg !90
  %59 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %58, label %60, label %62, !dbg !90

60:                                               ; preds = %49
  %61 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %54), !dbg !90
  store %struct.sqlite3_value* %61, %struct.sqlite3_value** %59, align 8, !dbg !90
  br label %63, !dbg !90

62:                                               ; preds = %49
  store i16 4, i16* %55, align 2, !dbg !90
  store %struct.sqlite3_value* %54, %struct.sqlite3_value** %59, align 8, !dbg !90
  br label %63, !dbg !90

63:                                               ; preds = %62, %60
  %64 = load %struct.sqlite3_value*, %struct.sqlite3_value** %59, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %51), !dbg !90
  %65 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 0, i32 1, !dbg !91
  store i16 1, i16* %65, align 2, !dbg !92
  %66 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 0, i32 4, !dbg !93
  store i32 0, i32* %66, align 4, !dbg !94
  %67 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %64, i32 1, !dbg !95
  %68 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %67, i32 0, i32 1, !dbg !96
  %69 = load i16, i16* %68, align 2, !dbg !96
  %70 = and i16 %69, 9216, !dbg !96
  %71 = icmp ne i16 %70, 0, !dbg !96
  br i1 %71, label %72, label %73, !dbg !96

72:                                               ; preds = %63
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %67), !dbg !96
  br label %74, !dbg !96

73:                                               ; preds = %63
  store i16 1, i16* %68, align 2, !dbg !96
  br label %74, !dbg !96

74:                                               ; preds = %73, %72
  store i16 1, i16* %68, align 2, !dbg !97
  %75 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %67, i32 0, i32 4, !dbg !98
  store i32 0, i32* %75, align 4, !dbg !99
  br label %76, !dbg !74

76:                                               ; preds = %74, %14
  %77 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !100
  %78 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %77, i32 0, i32 1, !dbg !103
  store i16 4, i16* %78, align 2, !dbg !104
  %79 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %77, i32 0, i32 0, i32 0, !dbg !105
  %80 = bitcast double* %79 to i64*, !dbg !106
  store i64 5, i64* %80, align 4, !dbg !107
  br label %8952, !dbg !108

81:                                               ; preds = %14
  %82 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %83 = getelementptr %struct.sqlite3, %struct.sqlite3* %82, i32 0, i32 4, !dbg !112
  %84 = load %struct.Db*, %struct.Db** %83, align 8, !dbg !113
  %85 = getelementptr %struct.Db, %struct.Db* %84, i32 0, i32 1, !dbg !114
  %86 = load %struct.Btree*, %struct.Btree** %85, align 8, !dbg !115
  %87 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 3, i32 3, i32 0, i8 0), !dbg !116
  %88 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 2, !dbg !117
  store i8 1, i8* %88, align 1, !dbg !118
  %89 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 5, !dbg !119
  %90 = load i8, i8* %89, align 1, !dbg !120
  %91 = or i8 %90, 4, !dbg !121
  store i8 %91, i8* %89, align 1, !dbg !122
  %92 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 15, !dbg !123
  store i32 4, i32* %92, align 4, !dbg !124
  %93 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 12, i32 0, !dbg !125
  %94 = load %struct.BtCursor*, %struct.BtCursor** %93, align 8, !dbg !126
  %95 = call i32 @sqlite3BtreeCursor(%struct.Btree* %86, i32 4, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %94), !dbg !127
  %96 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %96, align 8, !dbg !129
  %97 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %87, i32 0, i32 4, !dbg !130
  store i8 1, i8* %97, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %94, i32 0), !dbg !132
  br label %98, !dbg !74

98:                                               ; preds = %81, %14
  %99 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %100 = getelementptr %struct.sqlite3, %struct.sqlite3* %99, i32 0, i32 4, !dbg !112
  %101 = load %struct.Db*, %struct.Db** %100, align 8, !dbg !113
  %102 = getelementptr %struct.Db, %struct.Db* %101, i32 0, i32 1, !dbg !114
  %103 = load %struct.Btree*, %struct.Btree** %102, align 8, !dbg !115
  %104 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 4, i32 14, i32 0, i8 0), !dbg !116
  %105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 2, !dbg !117
  store i8 1, i8* %105, align 1, !dbg !118
  %106 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 5, !dbg !119
  %107 = load i8, i8* %106, align 1, !dbg !120
  %108 = or i8 %107, 4, !dbg !121
  store i8 %108, i8* %106, align 1, !dbg !122
  %109 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 15, !dbg !123
  store i32 2, i32* %109, align 4, !dbg !124
  %110 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 12, i32 0, !dbg !125
  %111 = load %struct.BtCursor*, %struct.BtCursor** %110, align 8, !dbg !126
  %112 = call i32 @sqlite3BtreeCursor(%struct.Btree* %103, i32 2, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %111), !dbg !127
  %113 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %113, align 8, !dbg !129
  %114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %104, i32 0, i32 4, !dbg !130
  store i8 1, i8* %114, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %111, i32 0), !dbg !132
  br label %115, !dbg !74

115:                                              ; preds = %98, %14
  %116 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %117 = getelementptr %struct.sqlite3, %struct.sqlite3* %116, i32 0, i32 4, !dbg !112
  %118 = load %struct.Db*, %struct.Db** %117, align 8, !dbg !113
  %119 = getelementptr %struct.Db, %struct.Db* %118, i32 0, i32 1, !dbg !114
  %120 = load %struct.Btree*, %struct.Btree** %119, align 8, !dbg !115
  %121 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 1, i32 6, i32 0, i8 0), !dbg !116
  %122 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 2, !dbg !117
  store i8 1, i8* %122, align 1, !dbg !118
  %123 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 5, !dbg !119
  %124 = load i8, i8* %123, align 1, !dbg !120
  %125 = or i8 %124, 4, !dbg !121
  store i8 %125, i8* %123, align 1, !dbg !122
  %126 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 15, !dbg !123
  store i32 7, i32* %126, align 4, !dbg !124
  %127 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 12, i32 0, !dbg !125
  %128 = load %struct.BtCursor*, %struct.BtCursor** %127, align 8, !dbg !126
  %129 = call i32 @sqlite3BtreeCursor(%struct.Btree* %120, i32 7, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %128), !dbg !127
  %130 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %130, align 8, !dbg !129
  %131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %121, i32 0, i32 4, !dbg !130
  store i8 1, i8* %131, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %128, i32 0), !dbg !132
  br label %132, !dbg !74

132:                                              ; preds = %115, %14
  %133 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %134 = getelementptr %struct.sqlite3, %struct.sqlite3* %133, i32 0, i32 4, !dbg !112
  %135 = load %struct.Db*, %struct.Db** %134, align 8, !dbg !113
  %136 = getelementptr %struct.Db, %struct.Db* %135, i32 0, i32 1, !dbg !114
  %137 = load %struct.Btree*, %struct.Btree** %136, align 8, !dbg !115
  %138 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 0, i32 5, i32 0, i8 0), !dbg !116
  %139 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 2, !dbg !117
  store i8 1, i8* %139, align 1, !dbg !118
  %140 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 5, !dbg !119
  %141 = load i8, i8* %140, align 1, !dbg !120
  %142 = or i8 %141, 4, !dbg !121
  store i8 %142, i8* %140, align 1, !dbg !122
  %143 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 15, !dbg !123
  store i32 8, i32* %143, align 4, !dbg !124
  %144 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 12, i32 0, !dbg !125
  %145 = load %struct.BtCursor*, %struct.BtCursor** %144, align 8, !dbg !126
  %146 = call i32 @sqlite3BtreeCursor(%struct.Btree* %137, i32 8, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %145), !dbg !127
  %147 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %147, align 8, !dbg !129
  %148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %138, i32 0, i32 4, !dbg !130
  store i8 1, i8* %148, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %145, i32 0), !dbg !132
  br label %149, !dbg !74

149:                                              ; preds = %132, %14
  %150 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %151 = getelementptr %struct.sqlite3, %struct.sqlite3* %150, i32 0, i32 4, !dbg !112
  %152 = load %struct.Db*, %struct.Db** %151, align 8, !dbg !113
  %153 = getelementptr %struct.Db, %struct.Db* %152, i32 0, i32 1, !dbg !114
  %154 = load %struct.Btree*, %struct.Btree** %153, align 8, !dbg !115
  %155 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 2, i32 6, i32 0, i8 0), !dbg !116
  %156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 2, !dbg !117
  store i8 1, i8* %156, align 1, !dbg !118
  %157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 5, !dbg !119
  %158 = load i8, i8* %157, align 1, !dbg !120
  %159 = or i8 %158, 4, !dbg !121
  store i8 %159, i8* %157, align 1, !dbg !122
  %160 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 15, !dbg !123
  store i32 6, i32* %160, align 4, !dbg !124
  %161 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 12, i32 0, !dbg !125
  %162 = load %struct.BtCursor*, %struct.BtCursor** %161, align 8, !dbg !126
  %163 = call i32 @sqlite3BtreeCursor(%struct.Btree* %154, i32 6, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %162), !dbg !127
  %164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %164, align 8, !dbg !129
  %165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %155, i32 0, i32 4, !dbg !130
  store i8 1, i8* %165, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %162, i32 0), !dbg !132
  br label %166, !dbg !74

166:                                              ; preds = %149, %14
  %167 = call i8* @llvm.stacksave(), !dbg !133
  %168 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %169 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %168, i32 3, !dbg !137
  %170 = load %struct.VdbeCursor*, %struct.VdbeCursor** %169, align 8, !dbg !138
  %171 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %171, align 4, !dbg !140
  %172 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %170, i32 0, i32 0, !dbg !141
  %173 = load i8, i8* %172, align 1, !dbg !142
  %174 = icmp eq i8 %173, 1, !dbg !143
  %175 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %175, align 4, !dbg !145
  br i1 %174, label %176, label %178, !dbg !146

176:                                              ; preds = %166
  %177 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %170, i32* %171), !dbg !147
  store i32 %177, i32* %175, align 4, !dbg !148
  br label %184, !dbg !149

178:                                              ; preds = %166
  %179 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %170, i32 0, i32 12, i32 0, !dbg !150
  %180 = load %struct.BtCursor*, %struct.BtCursor** %179, align 8, !dbg !151
  %181 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %180, i32* %171), !dbg !152
  store i32 %181, i32* %175, align 4, !dbg !153
  %182 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %170, i32 0, i32 3, !dbg !154
  store i8 0, i8* %182, align 1, !dbg !155
  %183 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %170, i32 0, i32 9, !dbg !156
  store i32 0, i32* %183, align 4, !dbg !157
  br label %184, !dbg !158

184:                                              ; preds = %178, %176
  %185 = load i32, i32* %175, align 4, !dbg !159
  %186 = load i32, i32* %171, align 4, !dbg !160
  %187 = trunc i32 %186 to i8, !dbg !161
  %188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %170, i32 0, i32 2, !dbg !162
  store i8 %187, i8* %188, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %167), !dbg !164
  %189 = icmp ne i32 %186, 0, !dbg !165
  br i1 %189, label %6971, label %190, !dbg !166

190:                                              ; preds = %6969, %184, %14
  %191 = call i8* @llvm.stacksave(), !dbg !167
  %192 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %193 = load i8, i8* %192, align 1, !dbg !171
  %194 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %194, align 4, !dbg !173
  %195 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %196 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %197 = load %struct.VdbeCursor*, %struct.VdbeCursor** %195, align 8, !dbg !176
  store %struct.VdbeCursor* %197, %struct.VdbeCursor** %196, align 8, !dbg !177
  %198 = alloca i8*, align 8, !dbg !178
  %199 = alloca i32, align 4, !dbg !179
  %200 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %196, i32* %194), !dbg !180
  %201 = load %struct.VdbeCursor*, %struct.VdbeCursor** %196, align 8, !dbg !181
  %202 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !182
  %203 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 16, !dbg !183
  %204 = load i16, i16* %203, align 2, !dbg !184
  %205 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 19, !dbg !185
  %206 = load i32*, i32** %205, align 8, !dbg !186
  %207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 0, !dbg !187
  %208 = load i8, i8* %207, align 1, !dbg !188
  %209 = icmp ne i8 %208, 3, !dbg !189
  %210 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 2, !dbg !190
  %211 = load i8, i8* %210, align 1, !dbg !191
  %212 = icmp ne i8 %211, 0, !dbg !192
  %213 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 14, !dbg !193
  %214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 21, !dbg !194
  %215 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 22, !dbg !195
  %216 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 20, !dbg !196
  %217 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 17, !dbg !197
  %218 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 9, !dbg !198
  %219 = load i32, i32* %218, align 4, !dbg !199
  %220 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %221 = load i32, i32* %220, align 4, !dbg !201
  %222 = icmp ne i32 %219, %221, !dbg !202
  br i1 %222, label %223, label %265, !dbg !203

223:                                              ; preds = %190
  br i1 %212, label %245, label %240, !dbg !204

224:                                              ; preds = %240, %247
  %225 = load i32, i32* %220, align 4, !dbg !205
  store i32 %225, i32* %218, align 4, !dbg !206
  %226 = load i8*, i8** %216, align 8, !dbg !207
  %227 = load i8, i8* %226, align 1, !dbg !208
  %228 = icmp sgt i8 %227, -1, !dbg !211
  br i1 %228, label %229, label %231, !dbg !212

229:                                              ; preds = %224
  %230 = zext i8 %227 to i32, !dbg !213
  store i32 %230, i32* %206, align 4, !dbg !214
  store i32 1, i32* %213, align 4, !dbg !215
  br label %234, !dbg !216

231:                                              ; preds = %224
  %232 = call i8 @sqlite3GetVarint32(i8* %226, i32* %206), !dbg !217
  %233 = zext i8 %232 to i32, !dbg !218
  store i32 %233, i32* %213, align 4, !dbg !219
  br label %234, !dbg !220

234:                                              ; preds = %231, %229
  store i16 0, i16* %217, align 2, !dbg !221
  %235 = load i32, i32* %215, align 4, !dbg !222
  %236 = load i32, i32* %206, align 4, !dbg !223
  %237 = icmp ult i32 %235, %236, !dbg !224
  br i1 %237, label %239, label %238, !dbg !225

238:                                              ; preds = %234
  store i8* %226, i8** %198, align 8, !dbg !226
  br label %358, !dbg !227

239:                                              ; preds = %234
  store i8* null, i8** %216, align 8, !dbg !228
  store i32 0, i32* %215, align 4, !dbg !229
  br label %265, !dbg !230

240:                                              ; preds = %223
  %241 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 12, i32 0, !dbg !231
  %242 = load %struct.BtCursor*, %struct.BtCursor** %241, align 8, !dbg !232
  %243 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %242), !dbg !233
  store i32 %243, i32* %214, align 4, !dbg !234
  %244 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %242, i32* %215), !dbg !235
  store i8* %244, i8** %216, align 8, !dbg !236
  br label %224, !dbg !237

245:                                              ; preds = %223
  %246 = icmp eq i8 %208, 3, !dbg !238
  br i1 %246, label %247, label %258, !dbg !239

247:                                              ; preds = %245
  %248 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 10, !dbg !240
  %249 = load i32, i32* %248, align 4, !dbg !241
  %250 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %249, !dbg !242
  %251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %250, i32 0, i32 1, !dbg !243
  %252 = load i16, i16* %251, align 2, !dbg !244
  %253 = and i16 %252, 16, !dbg !245
  %254 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %250, i32 0, i32 4, !dbg !246
  %255 = load i32, i32* %254, align 4, !dbg !247
  store i32 %255, i32* %214, align 4, !dbg !248
  store i32 %255, i32* %215, align 4, !dbg !249
  %256 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %250, i32 0, i32 5, !dbg !250
  %257 = load i8*, i8** %256, align 8, !dbg !251
  store i8* %257, i8** %216, align 8, !dbg !252
  br label %224, !dbg !253

258:                                              ; preds = %245
  %259 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 1, !dbg !254
  %260 = load i16, i16* %259, align 2, !dbg !254
  %261 = and i16 %260, 9216, !dbg !254
  %262 = icmp ne i16 %261, 0, !dbg !254
  br i1 %262, label %263, label %264, !dbg !254

263:                                              ; preds = %258
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %202), !dbg !254
  br label %446, !dbg !254

264:                                              ; preds = %258
  store i16 1, i16* %259, align 2, !dbg !254
  br label %446, !dbg !254

265:                                              ; preds = %239, %190
  %266 = load i16, i16* %217, align 2, !dbg !255
  %267 = icmp ule i16 %266, 2, !dbg !256
  br i1 %267, label %350, label %347, !dbg !257

268:                                              ; preds = %347, %436
  %269 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 1, !dbg !258
  %270 = load i16, i16* %269, align 2, !dbg !259
  %271 = and i16 9216, %270, !dbg !260
  %272 = icmp eq i16 0, %271, !dbg !261
  br i1 %272, label %273, label %277, !dbg !262

273:                                              ; preds = %268
  %274 = icmp ne i16 %271, 0, !dbg !263
  br i1 %274, label %275, label %276, !dbg !263

275:                                              ; preds = %273
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %202), !dbg !263
  br label %277, !dbg !263

276:                                              ; preds = %273
  store i16 1, i16* %269, align 2, !dbg !263
  br label %277, !dbg !263

277:                                              ; preds = %275, %276, %268
  %278 = load i32, i32* %199, align 4, !dbg !264
  %279 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 23, i32 2, !dbg !265
  %280 = load i32, i32* %279, align 4, !dbg !266
  %281 = load i32, i32* %215, align 4, !dbg !267
  %282 = getelementptr i32, i32* %206, i32 3, !dbg !268
  %283 = load i32, i32* %282, align 4, !dbg !269
  %284 = icmp sge i32 %281, %283, !dbg !270
  br i1 %284, label %285, label %325, !dbg !271

285:                                              ; preds = %277
  %286 = load i8*, i8** %216, align 8, !dbg !272
  %287 = ptrtoint i8* %286 to i64, !dbg !273
  %288 = getelementptr i32, i32* %206, i32 2, !dbg !274
  %289 = load i32, i32* %288, align 4, !dbg !275
  %290 = zext i32 %289 to i64, !dbg !276
  %291 = add i64 %287, %290, !dbg !277
  %292 = inttoptr i64 %291 to i8*, !dbg !278
  store i8* %292, i8** %198, align 8, !dbg !279
  %293 = load i32, i32* %199, align 4, !dbg !280
  %294 = icmp ult i32 %293, 12, !dbg !281
  br i1 %294, label %295, label %297, !dbg !282

295:                                              ; preds = %285
  %296 = call i32 @sqlite3VdbeSerialGet(i8* %292, i32 %293, %struct.sqlite3_value* %202), !dbg !283
  br label %446, !dbg !284

297:                                              ; preds = %285
  %298 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %298, align 2, !dbg !286
  %299 = getelementptr i16, i16* %298, i32 1, !dbg !287
  store i16 514, i16* %299, align 2, !dbg !288
  %300 = load i32, i32* %199, align 4, !dbg !289
  %301 = sub i32 %300, 12, !dbg !290
  %302 = lshr i32 %301, 1, !dbg !291
  %303 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 4, !dbg !292
  store i32 %302, i32* %303, align 4, !dbg !293
  %304 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 2, !dbg !294
  store i8 %193, i8* %304, align 1, !dbg !295
  %305 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 5, !dbg !296
  %306 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 7, !dbg !297
  %307 = load i32, i32* %306, align 4, !dbg !298
  %308 = add i32 %302, 2, !dbg !299
  %309 = icmp slt i32 %307, %308, !dbg !300
  br i1 %309, label %310, label %312, !dbg !301

310:                                              ; preds = %297
  store i16 1, i16* %269, align 2, !dbg !302
  %311 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %202, i32 %308, i32 0), !dbg !303
  br label %315, !dbg !304

312:                                              ; preds = %297
  %313 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 6, !dbg !305
  %314 = load i8*, i8** %313, align 8, !dbg !306
  store i8* %314, i8** %305, align 8, !dbg !307
  br label %315, !dbg !308

315:                                              ; preds = %312, %310
  %316 = zext i32 %302 to i64, !dbg !309
  %317 = load i8*, i8** %305, align 8, !dbg !310
  %318 = load i8*, i8** %198, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %318, i64 %316, i1 false), !dbg !312
  %319 = getelementptr i8, i8* %317, i32 %302, !dbg !313
  store i8 0, i8* %319, align 1, !dbg !314
  %320 = add i32 %302, 1, !dbg !315
  %321 = getelementptr i8, i8* %317, i32 %320, !dbg !316
  store i8 0, i8* %321, align 1, !dbg !317
  %322 = and i32 %300, 1, !dbg !318
  %323 = getelementptr i16, i16* %298, i32 %322, !dbg !319
  %324 = load i16, i16* %323, align 2, !dbg !320
  store i16 %324, i16* %269, align 2, !dbg !321
  br label %446, !dbg !322

325:                                              ; preds = %277
  %326 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 2, !dbg !323
  store i8 %193, i8* %326, align 1, !dbg !324
  %327 = load i32, i32* %199, align 4, !dbg !325
  %328 = and i32 %327, 1, !dbg !326
  %329 = icmp eq i32 %328, 0, !dbg !327
  %330 = icmp sge i32 %327, 12, !dbg !328
  %331 = and i1 %330, %329, !dbg !329
  %332 = call i32 @sqlite3VdbeSerialTypeLen(i32 %327), !dbg !330
  %333 = icmp eq i32 %332, 0, !dbg !331
  br i1 %333, label %345, label %334, !dbg !332

334:                                              ; preds = %325
  %335 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 12, i32 0, !dbg !333
  %336 = load %struct.BtCursor*, %struct.BtCursor** %335, align 8, !dbg !334
  %337 = getelementptr i32, i32* %206, i32 2, !dbg !335
  %338 = load i32, i32* %337, align 4, !dbg !336
  %339 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %336, i32 %338, i32 %332, %struct.sqlite3_value* %202), !dbg !337
  %340 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 5, !dbg !338
  %341 = load i8*, i8** %340, align 8, !dbg !339
  %342 = call i32 @sqlite3VdbeSerialGet(i8* %341, i32 %327, %struct.sqlite3_value* %202), !dbg !340
  %343 = load i16, i16* %269, align 2, !dbg !341
  %344 = and i16 %343, -4097, !dbg !342
  store i16 %344, i16* %269, align 2, !dbg !343
  br label %446, !dbg !344

345:                                              ; preds = %325
  %346 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %327, %struct.sqlite3_value* %202), !dbg !345
  br label %446, !dbg !346

347:                                              ; preds = %265
  %348 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 23, i32 2, !dbg !347
  %349 = load i32, i32* %348, align 4, !dbg !348
  store i32 %349, i32* %199, align 4, !dbg !349
  br label %268, !dbg !350

350:                                              ; preds = %265
  %351 = load i32, i32* %213, align 4, !dbg !351
  %352 = load i32, i32* %206, align 4, !dbg !352
  %353 = icmp ult i32 %351, %352, !dbg !353
  br i1 %353, label %354, label %435, !dbg !354

354:                                              ; preds = %350
  %355 = load i8*, i8** %216, align 8, !dbg !355
  %356 = icmp eq i8* %355, null, !dbg !356
  br i1 %356, label %358, label %357, !dbg !357

357:                                              ; preds = %354
  store i8* %355, i8** %198, align 8, !dbg !358
  br label %358, !dbg !359

358:                                              ; preds = %357, %354, %238
  %359 = alloca i32, align 4, !dbg !360
  %360 = load i16, i16* %217, align 2, !dbg !361
  %361 = zext i16 %360 to i32, !dbg !362
  store i32 %361, i32* %359, align 4, !dbg !363
  %362 = alloca i64, align 8, !dbg !364
  %363 = getelementptr i32, i32* %206, i32 %361, !dbg !365
  %364 = load i32, i32* %363, align 4, !dbg !366
  %365 = zext i32 %364 to i64, !dbg !367
  store i64 %365, i64* %362, align 4, !dbg !368
  %366 = load i8*, i8** %198, align 8, !dbg !369
  %367 = load i32, i32* %213, align 4, !dbg !370
  %368 = alloca i8*, align 8, !dbg !371
  %369 = getelementptr i8, i8* %366, i32 %367, !dbg !372
  store i8* %369, i8** %368, align 8, !dbg !373
  %370 = load i32, i32* %206, align 4, !dbg !374
  %371 = getelementptr i8, i8* %366, i32 %370, !dbg !375
  br label %372, !dbg !376

372:                                              ; preds = %379, %358
  %373 = load i32, i32* %359, align 4, !dbg !377
  %374 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 23, i32 %373, !dbg !378
  %375 = load i8*, i8** %368, align 8, !dbg !379
  %376 = load i8, i8* %375, align 1, !dbg !380
  %377 = zext i8 %376 to i32, !dbg !381
  store i32 %377, i32* %199, align 4, !dbg !382
  store i32 %377, i32* %374, align 4, !dbg !383
  %378 = icmp sgt i8 %376, -1, !dbg !384
  br i1 %378, label %402, label %393, !dbg !385

379:                                              ; preds = %393, %402
  %380 = load i32, i32* %359, align 4, !dbg !386
  %381 = add i32 %380, 1, !dbg !387
  store i32 %381, i32* %359, align 4, !dbg !388
  %382 = load i64, i64* %362, align 4, !dbg !389
  %383 = and i64 4294967295, %382, !dbg !390
  %384 = trunc i64 %383 to i32, !dbg !391
  %385 = getelementptr i32, i32* %206, i32 %381, !dbg !392
  store i32 %384, i32* %385, align 4, !dbg !393
  %386 = load i32, i32* %359, align 4, !dbg !394
  %387 = icmp sle i32 %386, 2, !dbg !395
  %388 = load i8*, i8** %368, align 8, !dbg !396
  %389 = ptrtoint i8* %388 to i64, !dbg !397
  %390 = ptrtoint i8* %371 to i64, !dbg !398
  %391 = icmp ult i64 %389, %390, !dbg !399
  %392 = and i1 %387, %391, !dbg !400
  br i1 %392, label %372, label %411, !dbg !401

393:                                              ; preds = %372
  %394 = load i8*, i8** %368, align 8, !dbg !402
  %395 = call i8 @sqlite3GetVarint32(i8* %394, i32* %199), !dbg !403
  %396 = getelementptr i8, i8* %394, i8 %395, !dbg !404
  store i8* %396, i8** %368, align 8, !dbg !405
  %397 = load i32, i32* %199, align 4, !dbg !406
  store i32 %397, i32* %374, align 4, !dbg !407
  %398 = load i64, i64* %362, align 4, !dbg !408
  %399 = call i32 @sqlite3VdbeSerialTypeLen(i32 %397), !dbg !409
  %400 = zext i32 %399 to i64, !dbg !410
  %401 = add i64 %398, %400, !dbg !411
  store i64 %401, i64* %362, align 4, !dbg !412
  br label %379, !dbg !413

402:                                              ; preds = %372
  %403 = getelementptr i8, i8* %375, i32 1, !dbg !414
  store i8* %403, i8** %368, align 8, !dbg !415
  %404 = load i32, i32* %199, align 4, !dbg !416
  %405 = trunc i32 %404 to i8, !dbg !417
  %406 = getelementptr i8, i8* %4, i8 %405, !dbg !418
  %407 = load i8, i8* %406, align 1, !dbg !419
  %408 = zext i8 %407 to i64, !dbg !420
  %409 = load i64, i64* %362, align 4, !dbg !421
  %410 = add i64 %409, %408, !dbg !422
  store i64 %410, i64* %362, align 4, !dbg !423
  br label %379, !dbg !424

411:                                              ; preds = %379
  %412 = load i64, i64* %362, align 4, !dbg !425
  %413 = load i32, i32* %214, align 4, !dbg !426
  %414 = zext i32 %413 to i64, !dbg !427
  %415 = icmp uge i64 %389, %390, !dbg !428
  %416 = icmp ugt i64 %389, %390, !dbg !429
  %417 = icmp ne i64 %412, %414, !dbg !430
  %418 = icmp ugt i64 %412, %414, !dbg !431
  %419 = or i1 %416, %417, !dbg !432
  %420 = and i1 %415, %419, !dbg !433
  %421 = or i1 %420, %418, !dbg !434
  br i1 %421, label %422, label %426, !dbg !435

422:                                              ; preds = %411
  %423 = load i32, i32* %206, align 4, !dbg !436
  %424 = icmp eq i32 %423, 0, !dbg !437
  br i1 %424, label %425, label %426, !dbg !438

425:                                              ; preds = %422
  store i32 0, i32* %359, align 4, !dbg !439
  store i8* %371, i8** %368, align 8, !dbg !440
  br label %426, !dbg !441

426:                                              ; preds = %425, %422, %411
  %427 = load i32, i32* %359, align 4, !dbg !442
  %428 = trunc i32 %427 to i16, !dbg !443
  store i16 %428, i16* %217, align 2, !dbg !444
  %429 = load i8*, i8** %368, align 8, !dbg !445
  %430 = ptrtoint i8* %429 to i64, !dbg !446
  %431 = load i8*, i8** %198, align 8, !dbg !447
  %432 = ptrtoint i8* %431 to i64, !dbg !448
  %433 = sub i64 %430, %432, !dbg !449
  %434 = trunc i64 %433 to i32, !dbg !450
  store i32 %434, i32* %213, align 4, !dbg !451
  br label %436, !dbg !452

435:                                              ; preds = %350
  store i32 0, i32* %199, align 4, !dbg !453
  br label %436, !dbg !454

436:                                              ; preds = %426, %435
  %437 = load i16, i16* %217, align 2, !dbg !455
  %438 = icmp sle i16 %437, 2, !dbg !456
  br i1 %438, label %439, label %268, !dbg !457

439:                                              ; preds = %436
  %440 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %202, i32 0, i32 1, !dbg !458
  %441 = load i16, i16* %440, align 2, !dbg !458
  %442 = and i16 %441, 9216, !dbg !458
  %443 = icmp ne i16 %442, 0, !dbg !458
  br i1 %443, label %444, label %445, !dbg !458

444:                                              ; preds = %439
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %202), !dbg !458
  br label %446, !dbg !458

445:                                              ; preds = %439
  store i16 1, i16* %440, align 2, !dbg !458
  br label %446, !dbg !458

446:                                              ; preds = %444, %445, %315, %295, %334, %345, %263, %264
  call void @llvm.stackrestore(i8* %191), !dbg !459
  br label %447, !dbg !74

447:                                              ; preds = %446, %14
  %448 = call i8* @llvm.stacksave(), !dbg !460
  %449 = alloca i32, align 8, !dbg !463
  %450 = alloca i32, align 8, !dbg !464
  %451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !465
  %452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !466
  %453 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %451, i32 0, i32 1, !dbg !467
  %454 = load i16, i16* %453, align 2, !dbg !468
  %455 = alloca i16, align 8, !dbg !469
  store i16 %454, i16* %455, align 2, !dbg !470
  %456 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %452, i32 0, i32 1, !dbg !471
  %457 = load i16, i16* %456, align 2, !dbg !472
  %458 = alloca i16, align 8, !dbg !473
  store i16 %457, i16* %458, align 2, !dbg !474
  %459 = or i16 %454, %457, !dbg !475
  %460 = and i16 %459, 1, !dbg !476
  %461 = icmp ne i16 %460, 0, !dbg !477
  br i1 %461, label %462, label %463, !dbg !478

462:                                              ; preds = %447
  call void @llvm.stackrestore(i8* %448), !dbg !479
  call void @llvm.stackrestore(i8* %448), !dbg !480
  br label %814, !dbg !481

463:                                              ; preds = %447
  %464 = and i16 %454, 2, !dbg !482
  %465 = and i16 %454, 44, !dbg !483
  %466 = icmp eq i16 %464, 0, !dbg !484
  %467 = icmp ne i16 %465, 0, !dbg !485
  %468 = and i16 %457, 2, !dbg !486
  %469 = and i16 %457, 44, !dbg !487
  %470 = icmp eq i16 %468, 0, !dbg !488
  %471 = icmp ne i16 %469, 0, !dbg !489
  %472 = and i1 %466, %467, !dbg !490
  br i1 %472, label %473, label %479, !dbg !491

473:                                              ; preds = %463
  %474 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %451, i8 1, i8 1), !dbg !492
  %475 = load i16, i16* %453, align 2, !dbg !493
  %476 = and i16 %475, 15936, !dbg !493
  %477 = and i16 %454, -15937, !dbg !494
  %478 = or i16 %476, %477, !dbg !495
  store i16 %478, i16* %455, align 2, !dbg !496
  br label %479, !dbg !497

479:                                              ; preds = %473, %463
  %480 = and i1 %470, %471, !dbg !498
  br i1 %480, label %481, label %487, !dbg !499

481:                                              ; preds = %479
  %482 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %452, i8 1, i8 1), !dbg !500
  %483 = load i16, i16* %456, align 2, !dbg !501
  %484 = and i16 %483, 15936, !dbg !501
  %485 = and i16 %457, -15937, !dbg !502
  %486 = or i16 %484, %485, !dbg !503
  store i16 %486, i16* %458, align 2, !dbg !504
  br label %487, !dbg !505

487:                                              ; preds = %481, %479
  %488 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 13, !dbg !506
  %489 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %488, i32 0, i32 6, !dbg !507
  %490 = bitcast %union.p4union* %489 to %struct.CollSeq**, !dbg !508
  %491 = load %struct.CollSeq*, %struct.CollSeq** %490, align 8, !dbg !509
  %492 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %452, %struct.sqlite3_value* %451, %struct.CollSeq* %491), !dbg !510
  store i32 %492, i32* %449, align 4, !dbg !511
  %493 = icmp slt i32 %492, 0, !dbg !512
  br i1 %493, label %494, label %495, !dbg !513

494:                                              ; preds = %487
  store i32 0, i32* %450, align 4, !dbg !514
  br label %499, !dbg !515

495:                                              ; preds = %487
  %496 = icmp eq i32 %492, 0, !dbg !516
  br i1 %496, label %497, label %498, !dbg !517

497:                                              ; preds = %495
  store i32 1, i32* %450, align 4, !dbg !518
  br label %499, !dbg !519

498:                                              ; preds = %495
  store i32 0, i32* %450, align 4, !dbg !520
  br label %499, !dbg !521

499:                                              ; preds = %498, %497, %494
  store i16 %457, i16* %458, align 2, !dbg !522
  store i16 %454, i16* %455, align 2, !dbg !523
  %500 = load i32, i32* %450, align 4, !dbg !524
  %501 = icmp ne i32 %500, 0, !dbg !525
  call void @llvm.stackrestore(i8* %448), !dbg !526
  br i1 %501, label %814, label %502, !dbg !527

502:                                              ; preds = %499, %14
  %503 = call i8* @llvm.stacksave(), !dbg !167
  %504 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %505 = load i8, i8* %504, align 1, !dbg !171
  %506 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %506, align 4, !dbg !173
  %507 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %508 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %509 = load %struct.VdbeCursor*, %struct.VdbeCursor** %507, align 8, !dbg !176
  store %struct.VdbeCursor* %509, %struct.VdbeCursor** %508, align 8, !dbg !177
  %510 = alloca i8*, align 8, !dbg !178
  %511 = alloca i32, align 4, !dbg !179
  %512 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %508, i32* %506), !dbg !180
  %513 = load %struct.VdbeCursor*, %struct.VdbeCursor** %508, align 8, !dbg !181
  %514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !182
  %515 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 16, !dbg !183
  %516 = load i16, i16* %515, align 2, !dbg !184
  %517 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 19, !dbg !185
  %518 = load i32*, i32** %517, align 8, !dbg !186
  %519 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 0, !dbg !187
  %520 = load i8, i8* %519, align 1, !dbg !188
  %521 = icmp ne i8 %520, 3, !dbg !189
  %522 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 2, !dbg !190
  %523 = load i8, i8* %522, align 1, !dbg !191
  %524 = icmp ne i8 %523, 0, !dbg !192
  %525 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 14, !dbg !193
  %526 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 21, !dbg !194
  %527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 22, !dbg !195
  %528 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 20, !dbg !196
  %529 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 17, !dbg !197
  %530 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 9, !dbg !198
  %531 = load i32, i32* %530, align 4, !dbg !199
  %532 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %533 = load i32, i32* %532, align 4, !dbg !201
  %534 = icmp ne i32 %531, %533, !dbg !202
  br i1 %534, label %535, label %577, !dbg !203

535:                                              ; preds = %502
  br i1 %524, label %557, label %552, !dbg !204

536:                                              ; preds = %552, %559
  %537 = load i32, i32* %532, align 4, !dbg !205
  store i32 %537, i32* %530, align 4, !dbg !206
  %538 = load i8*, i8** %528, align 8, !dbg !207
  %539 = load i8, i8* %538, align 1, !dbg !208
  %540 = icmp sgt i8 %539, -1, !dbg !211
  br i1 %540, label %541, label %543, !dbg !212

541:                                              ; preds = %536
  %542 = zext i8 %539 to i32, !dbg !213
  store i32 %542, i32* %518, align 4, !dbg !214
  store i32 1, i32* %525, align 4, !dbg !215
  br label %546, !dbg !216

543:                                              ; preds = %536
  %544 = call i8 @sqlite3GetVarint32(i8* %538, i32* %518), !dbg !217
  %545 = zext i8 %544 to i32, !dbg !218
  store i32 %545, i32* %525, align 4, !dbg !219
  br label %546, !dbg !220

546:                                              ; preds = %543, %541
  store i16 0, i16* %529, align 2, !dbg !221
  %547 = load i32, i32* %527, align 4, !dbg !222
  %548 = load i32, i32* %518, align 4, !dbg !223
  %549 = icmp ult i32 %547, %548, !dbg !224
  br i1 %549, label %551, label %550, !dbg !225

550:                                              ; preds = %546
  store i8* %538, i8** %510, align 8, !dbg !226
  br label %670, !dbg !227

551:                                              ; preds = %546
  store i8* null, i8** %528, align 8, !dbg !228
  store i32 0, i32* %527, align 4, !dbg !229
  br label %577, !dbg !230

552:                                              ; preds = %535
  %553 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 12, i32 0, !dbg !231
  %554 = load %struct.BtCursor*, %struct.BtCursor** %553, align 8, !dbg !232
  %555 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %554), !dbg !233
  store i32 %555, i32* %526, align 4, !dbg !234
  %556 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %554, i32* %527), !dbg !235
  store i8* %556, i8** %528, align 8, !dbg !236
  br label %536, !dbg !237

557:                                              ; preds = %535
  %558 = icmp eq i8 %520, 3, !dbg !238
  br i1 %558, label %559, label %570, !dbg !239

559:                                              ; preds = %557
  %560 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 10, !dbg !240
  %561 = load i32, i32* %560, align 4, !dbg !241
  %562 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %561, !dbg !242
  %563 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %562, i32 0, i32 1, !dbg !243
  %564 = load i16, i16* %563, align 2, !dbg !244
  %565 = and i16 %564, 16, !dbg !245
  %566 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %562, i32 0, i32 4, !dbg !246
  %567 = load i32, i32* %566, align 4, !dbg !247
  store i32 %567, i32* %526, align 4, !dbg !248
  store i32 %567, i32* %527, align 4, !dbg !249
  %568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %562, i32 0, i32 5, !dbg !250
  %569 = load i8*, i8** %568, align 8, !dbg !251
  store i8* %569, i8** %528, align 8, !dbg !252
  br label %536, !dbg !253

570:                                              ; preds = %557
  %571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 1, !dbg !254
  %572 = load i16, i16* %571, align 2, !dbg !254
  %573 = and i16 %572, 9216, !dbg !254
  %574 = icmp ne i16 %573, 0, !dbg !254
  br i1 %574, label %575, label %576, !dbg !254

575:                                              ; preds = %570
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %514), !dbg !254
  br label %758, !dbg !254

576:                                              ; preds = %570
  store i16 1, i16* %571, align 2, !dbg !254
  br label %758, !dbg !254

577:                                              ; preds = %551, %502
  %578 = load i16, i16* %529, align 2, !dbg !255
  %579 = icmp ule i16 %578, 2, !dbg !256
  br i1 %579, label %662, label %659, !dbg !257

580:                                              ; preds = %659, %748
  %581 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 1, !dbg !258
  %582 = load i16, i16* %581, align 2, !dbg !259
  %583 = and i16 9216, %582, !dbg !260
  %584 = icmp eq i16 0, %583, !dbg !261
  br i1 %584, label %585, label %589, !dbg !262

585:                                              ; preds = %580
  %586 = icmp ne i16 %583, 0, !dbg !263
  br i1 %586, label %587, label %588, !dbg !263

587:                                              ; preds = %585
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %514), !dbg !263
  br label %589, !dbg !263

588:                                              ; preds = %585
  store i16 1, i16* %581, align 2, !dbg !263
  br label %589, !dbg !263

589:                                              ; preds = %587, %588, %580
  %590 = load i32, i32* %511, align 4, !dbg !264
  %591 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 23, i32 2, !dbg !265
  %592 = load i32, i32* %591, align 4, !dbg !266
  %593 = load i32, i32* %527, align 4, !dbg !267
  %594 = getelementptr i32, i32* %518, i32 3, !dbg !268
  %595 = load i32, i32* %594, align 4, !dbg !269
  %596 = icmp sge i32 %593, %595, !dbg !270
  br i1 %596, label %597, label %637, !dbg !271

597:                                              ; preds = %589
  %598 = load i8*, i8** %528, align 8, !dbg !272
  %599 = ptrtoint i8* %598 to i64, !dbg !273
  %600 = getelementptr i32, i32* %518, i32 2, !dbg !274
  %601 = load i32, i32* %600, align 4, !dbg !275
  %602 = zext i32 %601 to i64, !dbg !276
  %603 = add i64 %599, %602, !dbg !277
  %604 = inttoptr i64 %603 to i8*, !dbg !278
  store i8* %604, i8** %510, align 8, !dbg !279
  %605 = load i32, i32* %511, align 4, !dbg !280
  %606 = icmp ult i32 %605, 12, !dbg !281
  br i1 %606, label %607, label %609, !dbg !282

607:                                              ; preds = %597
  %608 = call i32 @sqlite3VdbeSerialGet(i8* %604, i32 %605, %struct.sqlite3_value* %514), !dbg !283
  br label %758, !dbg !284

609:                                              ; preds = %597
  %610 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %610, align 2, !dbg !286
  %611 = getelementptr i16, i16* %610, i32 1, !dbg !287
  store i16 514, i16* %611, align 2, !dbg !288
  %612 = load i32, i32* %511, align 4, !dbg !289
  %613 = sub i32 %612, 12, !dbg !290
  %614 = lshr i32 %613, 1, !dbg !291
  %615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 4, !dbg !292
  store i32 %614, i32* %615, align 4, !dbg !293
  %616 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 2, !dbg !294
  store i8 %505, i8* %616, align 1, !dbg !295
  %617 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 5, !dbg !296
  %618 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 7, !dbg !297
  %619 = load i32, i32* %618, align 4, !dbg !298
  %620 = add i32 %614, 2, !dbg !299
  %621 = icmp slt i32 %619, %620, !dbg !300
  br i1 %621, label %622, label %624, !dbg !301

622:                                              ; preds = %609
  store i16 1, i16* %581, align 2, !dbg !302
  %623 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %514, i32 %620, i32 0), !dbg !303
  br label %627, !dbg !304

624:                                              ; preds = %609
  %625 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 6, !dbg !305
  %626 = load i8*, i8** %625, align 8, !dbg !306
  store i8* %626, i8** %617, align 8, !dbg !307
  br label %627, !dbg !308

627:                                              ; preds = %624, %622
  %628 = zext i32 %614 to i64, !dbg !309
  %629 = load i8*, i8** %617, align 8, !dbg !310
  %630 = load i8*, i8** %510, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %629, i8* %630, i64 %628, i1 false), !dbg !312
  %631 = getelementptr i8, i8* %629, i32 %614, !dbg !313
  store i8 0, i8* %631, align 1, !dbg !314
  %632 = add i32 %614, 1, !dbg !315
  %633 = getelementptr i8, i8* %629, i32 %632, !dbg !316
  store i8 0, i8* %633, align 1, !dbg !317
  %634 = and i32 %612, 1, !dbg !318
  %635 = getelementptr i16, i16* %610, i32 %634, !dbg !319
  %636 = load i16, i16* %635, align 2, !dbg !320
  store i16 %636, i16* %581, align 2, !dbg !321
  br label %758, !dbg !322

637:                                              ; preds = %589
  %638 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 2, !dbg !323
  store i8 %505, i8* %638, align 1, !dbg !324
  %639 = load i32, i32* %511, align 4, !dbg !325
  %640 = and i32 %639, 1, !dbg !326
  %641 = icmp eq i32 %640, 0, !dbg !327
  %642 = icmp sge i32 %639, 12, !dbg !328
  %643 = and i1 %642, %641, !dbg !329
  %644 = call i32 @sqlite3VdbeSerialTypeLen(i32 %639), !dbg !330
  %645 = icmp eq i32 %644, 0, !dbg !331
  br i1 %645, label %657, label %646, !dbg !332

646:                                              ; preds = %637
  %647 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 12, i32 0, !dbg !333
  %648 = load %struct.BtCursor*, %struct.BtCursor** %647, align 8, !dbg !334
  %649 = getelementptr i32, i32* %518, i32 2, !dbg !335
  %650 = load i32, i32* %649, align 4, !dbg !336
  %651 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %648, i32 %650, i32 %644, %struct.sqlite3_value* %514), !dbg !337
  %652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 5, !dbg !338
  %653 = load i8*, i8** %652, align 8, !dbg !339
  %654 = call i32 @sqlite3VdbeSerialGet(i8* %653, i32 %639, %struct.sqlite3_value* %514), !dbg !340
  %655 = load i16, i16* %581, align 2, !dbg !341
  %656 = and i16 %655, -4097, !dbg !342
  store i16 %656, i16* %581, align 2, !dbg !343
  br label %758, !dbg !344

657:                                              ; preds = %637
  %658 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %639, %struct.sqlite3_value* %514), !dbg !345
  br label %758, !dbg !346

659:                                              ; preds = %577
  %660 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 23, i32 2, !dbg !347
  %661 = load i32, i32* %660, align 4, !dbg !348
  store i32 %661, i32* %511, align 4, !dbg !349
  br label %580, !dbg !350

662:                                              ; preds = %577
  %663 = load i32, i32* %525, align 4, !dbg !351
  %664 = load i32, i32* %518, align 4, !dbg !352
  %665 = icmp ult i32 %663, %664, !dbg !353
  br i1 %665, label %666, label %747, !dbg !354

666:                                              ; preds = %662
  %667 = load i8*, i8** %528, align 8, !dbg !355
  %668 = icmp eq i8* %667, null, !dbg !356
  br i1 %668, label %670, label %669, !dbg !357

669:                                              ; preds = %666
  store i8* %667, i8** %510, align 8, !dbg !358
  br label %670, !dbg !359

670:                                              ; preds = %669, %666, %550
  %671 = alloca i32, align 4, !dbg !360
  %672 = load i16, i16* %529, align 2, !dbg !361
  %673 = zext i16 %672 to i32, !dbg !362
  store i32 %673, i32* %671, align 4, !dbg !363
  %674 = alloca i64, align 8, !dbg !364
  %675 = getelementptr i32, i32* %518, i32 %673, !dbg !365
  %676 = load i32, i32* %675, align 4, !dbg !366
  %677 = zext i32 %676 to i64, !dbg !367
  store i64 %677, i64* %674, align 4, !dbg !368
  %678 = load i8*, i8** %510, align 8, !dbg !369
  %679 = load i32, i32* %525, align 4, !dbg !370
  %680 = alloca i8*, align 8, !dbg !371
  %681 = getelementptr i8, i8* %678, i32 %679, !dbg !372
  store i8* %681, i8** %680, align 8, !dbg !373
  %682 = load i32, i32* %518, align 4, !dbg !374
  %683 = getelementptr i8, i8* %678, i32 %682, !dbg !375
  br label %684, !dbg !376

684:                                              ; preds = %691, %670
  %685 = load i32, i32* %671, align 4, !dbg !377
  %686 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %513, i32 0, i32 23, i32 %685, !dbg !378
  %687 = load i8*, i8** %680, align 8, !dbg !379
  %688 = load i8, i8* %687, align 1, !dbg !380
  %689 = zext i8 %688 to i32, !dbg !381
  store i32 %689, i32* %511, align 4, !dbg !382
  store i32 %689, i32* %686, align 4, !dbg !383
  %690 = icmp sgt i8 %688, -1, !dbg !384
  br i1 %690, label %714, label %705, !dbg !385

691:                                              ; preds = %705, %714
  %692 = load i32, i32* %671, align 4, !dbg !386
  %693 = add i32 %692, 1, !dbg !387
  store i32 %693, i32* %671, align 4, !dbg !388
  %694 = load i64, i64* %674, align 4, !dbg !389
  %695 = and i64 4294967295, %694, !dbg !390
  %696 = trunc i64 %695 to i32, !dbg !391
  %697 = getelementptr i32, i32* %518, i32 %693, !dbg !392
  store i32 %696, i32* %697, align 4, !dbg !393
  %698 = load i32, i32* %671, align 4, !dbg !394
  %699 = icmp sle i32 %698, 2, !dbg !395
  %700 = load i8*, i8** %680, align 8, !dbg !396
  %701 = ptrtoint i8* %700 to i64, !dbg !397
  %702 = ptrtoint i8* %683 to i64, !dbg !398
  %703 = icmp ult i64 %701, %702, !dbg !399
  %704 = and i1 %699, %703, !dbg !400
  br i1 %704, label %684, label %723, !dbg !401

705:                                              ; preds = %684
  %706 = load i8*, i8** %680, align 8, !dbg !402
  %707 = call i8 @sqlite3GetVarint32(i8* %706, i32* %511), !dbg !403
  %708 = getelementptr i8, i8* %706, i8 %707, !dbg !404
  store i8* %708, i8** %680, align 8, !dbg !405
  %709 = load i32, i32* %511, align 4, !dbg !406
  store i32 %709, i32* %686, align 4, !dbg !407
  %710 = load i64, i64* %674, align 4, !dbg !408
  %711 = call i32 @sqlite3VdbeSerialTypeLen(i32 %709), !dbg !409
  %712 = zext i32 %711 to i64, !dbg !410
  %713 = add i64 %710, %712, !dbg !411
  store i64 %713, i64* %674, align 4, !dbg !412
  br label %691, !dbg !413

714:                                              ; preds = %684
  %715 = getelementptr i8, i8* %687, i32 1, !dbg !414
  store i8* %715, i8** %680, align 8, !dbg !415
  %716 = load i32, i32* %511, align 4, !dbg !416
  %717 = trunc i32 %716 to i8, !dbg !417
  %718 = getelementptr i8, i8* %4, i8 %717, !dbg !418
  %719 = load i8, i8* %718, align 1, !dbg !419
  %720 = zext i8 %719 to i64, !dbg !420
  %721 = load i64, i64* %674, align 4, !dbg !421
  %722 = add i64 %721, %720, !dbg !422
  store i64 %722, i64* %674, align 4, !dbg !423
  br label %691, !dbg !424

723:                                              ; preds = %691
  %724 = load i64, i64* %674, align 4, !dbg !425
  %725 = load i32, i32* %526, align 4, !dbg !426
  %726 = zext i32 %725 to i64, !dbg !427
  %727 = icmp uge i64 %701, %702, !dbg !428
  %728 = icmp ugt i64 %701, %702, !dbg !429
  %729 = icmp ne i64 %724, %726, !dbg !430
  %730 = icmp ugt i64 %724, %726, !dbg !431
  %731 = or i1 %728, %729, !dbg !432
  %732 = and i1 %727, %731, !dbg !433
  %733 = or i1 %732, %730, !dbg !434
  br i1 %733, label %734, label %738, !dbg !435

734:                                              ; preds = %723
  %735 = load i32, i32* %518, align 4, !dbg !436
  %736 = icmp eq i32 %735, 0, !dbg !437
  br i1 %736, label %737, label %738, !dbg !438

737:                                              ; preds = %734
  store i32 0, i32* %671, align 4, !dbg !439
  store i8* %683, i8** %680, align 8, !dbg !440
  br label %738, !dbg !441

738:                                              ; preds = %737, %734, %723
  %739 = load i32, i32* %671, align 4, !dbg !442
  %740 = trunc i32 %739 to i16, !dbg !443
  store i16 %740, i16* %529, align 2, !dbg !444
  %741 = load i8*, i8** %680, align 8, !dbg !445
  %742 = ptrtoint i8* %741 to i64, !dbg !446
  %743 = load i8*, i8** %510, align 8, !dbg !447
  %744 = ptrtoint i8* %743 to i64, !dbg !448
  %745 = sub i64 %742, %744, !dbg !449
  %746 = trunc i64 %745 to i32, !dbg !450
  store i32 %746, i32* %525, align 4, !dbg !451
  br label %748, !dbg !452

747:                                              ; preds = %662
  store i32 0, i32* %511, align 4, !dbg !453
  br label %748, !dbg !454

748:                                              ; preds = %738, %747
  %749 = load i16, i16* %529, align 2, !dbg !455
  %750 = icmp sle i16 %749, 2, !dbg !456
  br i1 %750, label %751, label %580, !dbg !457

751:                                              ; preds = %748
  %752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %514, i32 0, i32 1, !dbg !458
  %753 = load i16, i16* %752, align 2, !dbg !458
  %754 = and i16 %753, 9216, !dbg !458
  %755 = icmp ne i16 %754, 0, !dbg !458
  br i1 %755, label %756, label %757, !dbg !458

756:                                              ; preds = %751
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %514), !dbg !458
  br label %758, !dbg !458

757:                                              ; preds = %751
  store i16 1, i16* %752, align 2, !dbg !458
  br label %758, !dbg !458

758:                                              ; preds = %756, %757, %627, %607, %646, %657, %575, %576
  call void @llvm.stackrestore(i8* %503), !dbg !459
  br label %759, !dbg !74

759:                                              ; preds = %758, %14
  %760 = call i8* @llvm.stacksave(), !dbg !460
  %761 = alloca i32, align 8, !dbg !463
  %762 = alloca i32, align 8, !dbg !464
  %763 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !465
  %764 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !466
  %765 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %763, i32 0, i32 1, !dbg !467
  %766 = load i16, i16* %765, align 2, !dbg !468
  %767 = alloca i16, align 8, !dbg !469
  store i16 %766, i16* %767, align 2, !dbg !470
  %768 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %764, i32 0, i32 1, !dbg !471
  %769 = load i16, i16* %768, align 2, !dbg !472
  %770 = alloca i16, align 8, !dbg !473
  store i16 %769, i16* %770, align 2, !dbg !474
  %771 = or i16 %766, %769, !dbg !475
  %772 = and i16 %771, 1, !dbg !476
  %773 = icmp ne i16 %772, 0, !dbg !477
  br i1 %773, label %774, label %775, !dbg !478

774:                                              ; preds = %759
  call void @llvm.stackrestore(i8* %760), !dbg !479
  br label %6959, !dbg !528

775:                                              ; preds = %759
  %776 = and i16 %766, 2, !dbg !482
  %777 = and i16 %766, 44, !dbg !483
  %778 = icmp eq i16 %776, 0, !dbg !484
  %779 = icmp ne i16 %777, 0, !dbg !485
  %780 = and i16 %769, 2, !dbg !486
  %781 = and i16 %769, 44, !dbg !487
  %782 = icmp eq i16 %780, 0, !dbg !488
  %783 = icmp ne i16 %781, 0, !dbg !489
  %784 = and i1 %778, %779, !dbg !490
  br i1 %784, label %785, label %791, !dbg !491

785:                                              ; preds = %775
  %786 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %763, i8 1, i8 1), !dbg !492
  %787 = load i16, i16* %765, align 2, !dbg !493
  %788 = and i16 %787, 15936, !dbg !493
  %789 = and i16 %766, -15937, !dbg !494
  %790 = or i16 %788, %789, !dbg !495
  store i16 %790, i16* %767, align 2, !dbg !496
  br label %791, !dbg !497

791:                                              ; preds = %785, %775
  %792 = and i1 %782, %783, !dbg !498
  br i1 %792, label %793, label %799, !dbg !499

793:                                              ; preds = %791
  %794 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %764, i8 1, i8 1), !dbg !500
  %795 = load i16, i16* %768, align 2, !dbg !501
  %796 = and i16 %795, 15936, !dbg !501
  %797 = and i16 %769, -15937, !dbg !502
  %798 = or i16 %796, %797, !dbg !503
  store i16 %798, i16* %770, align 2, !dbg !504
  br label %799, !dbg !505

799:                                              ; preds = %793, %791
  %800 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 15, !dbg !506
  %801 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %800, i32 0, i32 6, !dbg !507
  %802 = bitcast %union.p4union* %801 to %struct.CollSeq**, !dbg !508
  %803 = load %struct.CollSeq*, %struct.CollSeq** %802, align 8, !dbg !509
  %804 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %764, %struct.sqlite3_value* %763, %struct.CollSeq* %803), !dbg !510
  store i32 %804, i32* %761, align 4, !dbg !511
  %805 = icmp slt i32 %804, 0, !dbg !512
  br i1 %805, label %806, label %807, !dbg !513

806:                                              ; preds = %799
  store i32 1, i32* %762, align 4, !dbg !514
  br label %811, !dbg !515

807:                                              ; preds = %799
  %808 = icmp eq i32 %804, 0, !dbg !516
  br i1 %808, label %809, label %810, !dbg !517

809:                                              ; preds = %807
  store i32 0, i32* %762, align 4, !dbg !518
  br label %811, !dbg !519

810:                                              ; preds = %807
  store i32 1, i32* %762, align 4, !dbg !520
  br label %811, !dbg !521

811:                                              ; preds = %810, %809, %806
  store i16 %769, i16* %770, align 2, !dbg !522
  store i16 %766, i16* %767, align 2, !dbg !523
  %812 = load i32, i32* %762, align 4, !dbg !524
  %813 = icmp ne i32 %812, 0, !dbg !525
  call void @llvm.stackrestore(i8* %760), !dbg !526
  br i1 %813, label %6959, label %814, !dbg !527

814:                                              ; preds = %811, %499, %462, %14
  %815 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !529
  %816 = load %struct.VdbeFrame*, %struct.VdbeFrame** %815, align 8, !dbg !532
  %817 = ptrtoint %struct.VdbeFrame* %816 to i64, !dbg !533
  %818 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !534
  %819 = load i32, i32* %818, align 4, !dbg !535
  %820 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !536
  %821 = icmp ne i64 %817, 0, !dbg !537
  br i1 %821, label %822, label %827, !dbg !538

822:                                              ; preds = %814
  %823 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %816, i32 0, i32 6, !dbg !539
  %824 = load i8*, i8** %823, align 8, !dbg !540
  %825 = getelementptr i8, i8* %824, i32 2, !dbg !541
  %826 = load i8, i8* %825, align 1, !dbg !542
  br label %830, !dbg !543

827:                                              ; preds = %814
  %828 = load i32, i32* %820, align 4, !dbg !544
  %829 = icmp eq i32 %828, %819, !dbg !545
  br i1 %829, label %3438, label %830, !dbg !546

830:                                              ; preds = %827, %822
  store i32 %819, i32* %820, align 4, !dbg !547
  br label %831, !dbg !548

831:                                              ; preds = %830, %14
  %832 = call i8* @llvm.stacksave(), !dbg !549
  %833 = alloca %struct.VdbeCursor*, align 8, !dbg !552
  %834 = alloca i32, align 8, !dbg !553
  %835 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !554
  %836 = load %struct.VdbeCursor*, %struct.VdbeCursor** %835, align 8, !dbg !555
  store %struct.VdbeCursor* %836, %struct.VdbeCursor** %833, align 8, !dbg !556
  %837 = icmp ne %struct.VdbeCursor* %836, null, !dbg !557
  br i1 %837, label %838, label %848, !dbg !558

838:                                              ; preds = %831
  %839 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %836, i32 0, i32 6, !dbg !559
  %840 = load %struct.Btree*, %struct.Btree** %839, align 8, !dbg !560
  %841 = icmp ne %struct.Btree* %840, null, !dbg !561
  br i1 %841, label %842, label %848, !dbg !562

842:                                              ; preds = %838
  %843 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %836, i32 0, i32 7, !dbg !563
  store i64 0, i64* %843, align 4, !dbg !564
  %844 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %836, i32 0, i32 9, !dbg !565
  store i32 0, i32* %844, align 4, !dbg !566
  %845 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %836, i32 0, i32 15, !dbg !567
  %846 = load i32, i32* %845, align 4, !dbg !568
  %847 = call i32 @sqlite3BtreeClearTable(%struct.Btree* %840, i32 %846, i32* null), !dbg !569
  store i32 %847, i32* %834, align 4, !dbg !570
  br label %893, !dbg !571

848:                                              ; preds = %838, %831
  %849 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 7, i32 7, i32 -1, i8 0), !dbg !572
  store %struct.VdbeCursor* %849, %struct.VdbeCursor** %833, align 8, !dbg !573
  %850 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 5, !dbg !574
  %851 = load i8, i8* %850, align 1, !dbg !575
  %852 = or i8 %851, 1, !dbg !576
  store i8 %852, i8* %850, align 1, !dbg !577
  %853 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 0, !dbg !578
  %854 = load %struct.sqlite3_vfs*, %struct.sqlite3_vfs** %853, align 8, !dbg !579
  %855 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 6, !dbg !580
  %856 = call i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs* %854, i8* null, %struct.sqlite3* %13, %struct.Btree** %855, i32 5, i32 1054), !dbg !581
  store i32 %856, i32* %834, align 4, !dbg !582
  %857 = icmp eq i32 %856, 0, !dbg !583
  br i1 %857, label %858, label %861, !dbg !584

858:                                              ; preds = %848
  %859 = load %struct.Btree*, %struct.Btree** %855, align 8, !dbg !585
  %860 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %859, i32 1, i32* null), !dbg !586
  store i32 %860, i32* %834, align 4, !dbg !587
  br label %861, !dbg !588

861:                                              ; preds = %858, %848
  %862 = load i32, i32* %834, align 4, !dbg !589
  %863 = icmp eq i32 %862, 0, !dbg !590
  br i1 %863, label %864, label %888, !dbg !591

864:                                              ; preds = %861
  %865 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, !dbg !592
  %866 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %865, i32 0, i32 6, !dbg !593
  %867 = bitcast %union.p4union* %866 to %struct.KeyInfo**, !dbg !594
  %868 = load %struct.KeyInfo*, %struct.KeyInfo** %867, align 8, !dbg !595
  %869 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 13, !dbg !596
  store %struct.KeyInfo* %868, %struct.KeyInfo** %869, align 8, !dbg !597
  %870 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 15, !dbg !598
  %871 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 12, i32 0, !dbg !599
  %872 = icmp ne %struct.KeyInfo* %868, null, !dbg !600
  br i1 %872, label %873, label %883, !dbg !601

873:                                              ; preds = %864
  %874 = load %struct.Btree*, %struct.Btree** %855, align 8, !dbg !602
  %875 = call i32 @sqlite3BtreeCreateTable(%struct.Btree* %874, i32* %870, i32 2), !dbg !603
  store i32 %875, i32* %834, align 4, !dbg !604
  %876 = icmp eq i32 %875, 0, !dbg !605
  br i1 %876, label %877, label %881, !dbg !606

877:                                              ; preds = %873
  %878 = load %struct.BtCursor*, %struct.BtCursor** %871, align 8, !dbg !607
  %879 = load i32, i32* %870, align 4, !dbg !608
  %880 = call i32 @sqlite3BtreeCursor(%struct.Btree* %874, i32 %879, i32 4, %struct.KeyInfo* %868, %struct.BtCursor* %878), !dbg !609
  store i32 %880, i32* %834, align 4, !dbg !610
  br label %881, !dbg !611

881:                                              ; preds = %877, %873
  %882 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 4, !dbg !612
  store i8 0, i8* %882, align 1, !dbg !613
  br label %888, !dbg !614

883:                                              ; preds = %864
  store i32 1, i32* %870, align 4, !dbg !615
  %884 = load %struct.BtCursor*, %struct.BtCursor** %871, align 8, !dbg !616
  %885 = load %struct.Btree*, %struct.Btree** %855, align 8, !dbg !617
  %886 = call i32 @sqlite3BtreeCursor(%struct.Btree* %885, i32 1, i32 4, %struct.KeyInfo* null, %struct.BtCursor* %884), !dbg !618
  store i32 %886, i32* %834, align 4, !dbg !619
  %887 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %849, i32 0, i32 4, !dbg !620
  store i8 1, i8* %887, align 1, !dbg !621
  br label %888, !dbg !622

888:                                              ; preds = %881, %883, %861
  %889 = load %struct.VdbeCursor*, %struct.VdbeCursor** %833, align 8, !dbg !623
  %890 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %889, i32 0, i32 5, !dbg !624
  %891 = load i8, i8* %890, align 1, !dbg !625
  %892 = or i8 %891, 1, !dbg !626
  store i8 %892, i8* %890, align 1, !dbg !627
  br label %893, !dbg !628

893:                                              ; preds = %888, %842
  %894 = load i32, i32* %834, align 4, !dbg !629
  %895 = load %struct.VdbeCursor*, %struct.VdbeCursor** %833, align 8, !dbg !630
  %896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %895, i32 0, i32 2, !dbg !631
  store i8 1, i8* %896, align 1, !dbg !632
  call void @llvm.stackrestore(i8* %832), !dbg !633
  br label %897, !dbg !74

897:                                              ; preds = %893, %14
  %898 = call i8* @llvm.stacksave(), !dbg !133
  %899 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %900 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %899, i32 4, !dbg !137
  %901 = load %struct.VdbeCursor*, %struct.VdbeCursor** %900, align 8, !dbg !138
  %902 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %902, align 4, !dbg !140
  %903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %901, i32 0, i32 0, !dbg !141
  %904 = load i8, i8* %903, align 1, !dbg !142
  %905 = icmp eq i8 %904, 1, !dbg !143
  %906 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %906, align 4, !dbg !145
  br i1 %905, label %907, label %909, !dbg !146

907:                                              ; preds = %897
  %908 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %901, i32* %902), !dbg !147
  store i32 %908, i32* %906, align 4, !dbg !148
  br label %915, !dbg !149

909:                                              ; preds = %897
  %910 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %901, i32 0, i32 12, i32 0, !dbg !150
  %911 = load %struct.BtCursor*, %struct.BtCursor** %910, align 8, !dbg !151
  %912 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %911, i32* %902), !dbg !152
  store i32 %912, i32* %906, align 4, !dbg !153
  %913 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %901, i32 0, i32 3, !dbg !154
  store i8 0, i8* %913, align 1, !dbg !155
  %914 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %901, i32 0, i32 9, !dbg !156
  store i32 0, i32* %914, align 4, !dbg !157
  br label %915, !dbg !158

915:                                              ; preds = %909, %907
  %916 = load i32, i32* %906, align 4, !dbg !159
  %917 = load i32, i32* %902, align 4, !dbg !160
  %918 = trunc i32 %917 to i8, !dbg !161
  %919 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %901, i32 0, i32 2, !dbg !162
  store i8 %918, i8* %919, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %898), !dbg !164
  %920 = icmp ne i32 %917, 0, !dbg !165
  br i1 %920, label %3438, label %921, !dbg !166

921:                                              ; preds = %3436, %915, %14
  %922 = call i8* @llvm.stacksave(), !dbg !167
  %923 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %924 = load i8, i8* %923, align 1, !dbg !171
  %925 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %925, align 4, !dbg !173
  %926 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %927 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %928 = load %struct.VdbeCursor*, %struct.VdbeCursor** %926, align 8, !dbg !176
  store %struct.VdbeCursor* %928, %struct.VdbeCursor** %927, align 8, !dbg !177
  %929 = alloca i8*, align 8, !dbg !178
  %930 = alloca i32, align 4, !dbg !179
  %931 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %927, i32* %925), !dbg !180
  %932 = load %struct.VdbeCursor*, %struct.VdbeCursor** %927, align 8, !dbg !181
  %933 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %934 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 16, !dbg !183
  %935 = load i16, i16* %934, align 2, !dbg !184
  %936 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 19, !dbg !185
  %937 = load i32*, i32** %936, align 8, !dbg !186
  %938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 0, !dbg !187
  %939 = load i8, i8* %938, align 1, !dbg !188
  %940 = icmp ne i8 %939, 3, !dbg !189
  %941 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 2, !dbg !190
  %942 = load i8, i8* %941, align 1, !dbg !191
  %943 = icmp ne i8 %942, 0, !dbg !192
  %944 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 14, !dbg !193
  %945 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 21, !dbg !194
  %946 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 22, !dbg !195
  %947 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 20, !dbg !196
  %948 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 17, !dbg !197
  %949 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 9, !dbg !198
  %950 = load i32, i32* %949, align 4, !dbg !199
  %951 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %952 = load i32, i32* %951, align 4, !dbg !201
  %953 = icmp ne i32 %950, %952, !dbg !202
  br i1 %953, label %954, label %996, !dbg !203

954:                                              ; preds = %921
  br i1 %943, label %976, label %971, !dbg !204

955:                                              ; preds = %971, %978
  %956 = load i32, i32* %951, align 4, !dbg !205
  store i32 %956, i32* %949, align 4, !dbg !206
  %957 = load i8*, i8** %947, align 8, !dbg !207
  %958 = load i8, i8* %957, align 1, !dbg !208
  %959 = icmp sgt i8 %958, -1, !dbg !211
  br i1 %959, label %960, label %962, !dbg !212

960:                                              ; preds = %955
  %961 = zext i8 %958 to i32, !dbg !213
  store i32 %961, i32* %937, align 4, !dbg !214
  store i32 1, i32* %944, align 4, !dbg !215
  br label %965, !dbg !216

962:                                              ; preds = %955
  %963 = call i8 @sqlite3GetVarint32(i8* %957, i32* %937), !dbg !217
  %964 = zext i8 %963 to i32, !dbg !218
  store i32 %964, i32* %944, align 4, !dbg !219
  br label %965, !dbg !220

965:                                              ; preds = %962, %960
  store i16 0, i16* %948, align 2, !dbg !221
  %966 = load i32, i32* %946, align 4, !dbg !222
  %967 = load i32, i32* %937, align 4, !dbg !223
  %968 = icmp ult i32 %966, %967, !dbg !224
  br i1 %968, label %970, label %969, !dbg !225

969:                                              ; preds = %965
  store i8* %957, i8** %929, align 8, !dbg !226
  br label %1089, !dbg !227

970:                                              ; preds = %965
  store i8* null, i8** %947, align 8, !dbg !228
  store i32 0, i32* %946, align 4, !dbg !229
  br label %996, !dbg !230

971:                                              ; preds = %954
  %972 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 12, i32 0, !dbg !231
  %973 = load %struct.BtCursor*, %struct.BtCursor** %972, align 8, !dbg !232
  %974 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %973), !dbg !233
  store i32 %974, i32* %945, align 4, !dbg !234
  %975 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %973, i32* %946), !dbg !235
  store i8* %975, i8** %947, align 8, !dbg !236
  br label %955, !dbg !237

976:                                              ; preds = %954
  %977 = icmp eq i8 %939, 3, !dbg !238
  br i1 %977, label %978, label %989, !dbg !239

978:                                              ; preds = %976
  %979 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 10, !dbg !240
  %980 = load i32, i32* %979, align 4, !dbg !241
  %981 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %980, !dbg !242
  %982 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %981, i32 0, i32 1, !dbg !243
  %983 = load i16, i16* %982, align 2, !dbg !244
  %984 = and i16 %983, 16, !dbg !245
  %985 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %981, i32 0, i32 4, !dbg !246
  %986 = load i32, i32* %985, align 4, !dbg !247
  store i32 %986, i32* %945, align 4, !dbg !248
  store i32 %986, i32* %946, align 4, !dbg !249
  %987 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %981, i32 0, i32 5, !dbg !250
  %988 = load i8*, i8** %987, align 8, !dbg !251
  store i8* %988, i8** %947, align 8, !dbg !252
  br label %955, !dbg !253

989:                                              ; preds = %976
  %990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 1, !dbg !254
  %991 = load i16, i16* %990, align 2, !dbg !254
  %992 = and i16 %991, 9216, !dbg !254
  %993 = icmp ne i16 %992, 0, !dbg !254
  br i1 %993, label %994, label %995, !dbg !254

994:                                              ; preds = %989
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %933), !dbg !254
  br label %1177, !dbg !254

995:                                              ; preds = %989
  store i16 1, i16* %990, align 2, !dbg !254
  br label %1177, !dbg !254

996:                                              ; preds = %970, %921
  %997 = load i16, i16* %948, align 2, !dbg !255
  %998 = icmp ule i16 %997, 3, !dbg !256
  br i1 %998, label %1081, label %1078, !dbg !257

999:                                              ; preds = %1078, %1167
  %1000 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 1, !dbg !258
  %1001 = load i16, i16* %1000, align 2, !dbg !259
  %1002 = and i16 9216, %1001, !dbg !260
  %1003 = icmp eq i16 0, %1002, !dbg !261
  br i1 %1003, label %1004, label %1008, !dbg !262

1004:                                             ; preds = %999
  %1005 = icmp ne i16 %1002, 0, !dbg !263
  br i1 %1005, label %1006, label %1007, !dbg !263

1006:                                             ; preds = %1004
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %933), !dbg !263
  br label %1008, !dbg !263

1007:                                             ; preds = %1004
  store i16 1, i16* %1000, align 2, !dbg !263
  br label %1008, !dbg !263

1008:                                             ; preds = %1006, %1007, %999
  %1009 = load i32, i32* %930, align 4, !dbg !264
  %1010 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 23, i32 3, !dbg !265
  %1011 = load i32, i32* %1010, align 4, !dbg !266
  %1012 = load i32, i32* %946, align 4, !dbg !267
  %1013 = getelementptr i32, i32* %937, i32 4, !dbg !268
  %1014 = load i32, i32* %1013, align 4, !dbg !269
  %1015 = icmp sge i32 %1012, %1014, !dbg !270
  br i1 %1015, label %1016, label %1056, !dbg !271

1016:                                             ; preds = %1008
  %1017 = load i8*, i8** %947, align 8, !dbg !272
  %1018 = ptrtoint i8* %1017 to i64, !dbg !273
  %1019 = getelementptr i32, i32* %937, i32 3, !dbg !274
  %1020 = load i32, i32* %1019, align 4, !dbg !275
  %1021 = zext i32 %1020 to i64, !dbg !276
  %1022 = add i64 %1018, %1021, !dbg !277
  %1023 = inttoptr i64 %1022 to i8*, !dbg !278
  store i8* %1023, i8** %929, align 8, !dbg !279
  %1024 = load i32, i32* %930, align 4, !dbg !280
  %1025 = icmp ult i32 %1024, 12, !dbg !281
  br i1 %1025, label %1026, label %1028, !dbg !282

1026:                                             ; preds = %1016
  %1027 = call i32 @sqlite3VdbeSerialGet(i8* %1023, i32 %1024, %struct.sqlite3_value* %933), !dbg !283
  br label %1177, !dbg !284

1028:                                             ; preds = %1016
  %1029 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1029, align 2, !dbg !286
  %1030 = getelementptr i16, i16* %1029, i32 1, !dbg !287
  store i16 514, i16* %1030, align 2, !dbg !288
  %1031 = load i32, i32* %930, align 4, !dbg !289
  %1032 = sub i32 %1031, 12, !dbg !290
  %1033 = lshr i32 %1032, 1, !dbg !291
  %1034 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 4, !dbg !292
  store i32 %1033, i32* %1034, align 4, !dbg !293
  %1035 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 2, !dbg !294
  store i8 %924, i8* %1035, align 1, !dbg !295
  %1036 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 5, !dbg !296
  %1037 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 7, !dbg !297
  %1038 = load i32, i32* %1037, align 4, !dbg !298
  %1039 = add i32 %1033, 2, !dbg !299
  %1040 = icmp slt i32 %1038, %1039, !dbg !300
  br i1 %1040, label %1041, label %1043, !dbg !301

1041:                                             ; preds = %1028
  store i16 1, i16* %1000, align 2, !dbg !302
  %1042 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %933, i32 %1039, i32 0), !dbg !303
  br label %1046, !dbg !304

1043:                                             ; preds = %1028
  %1044 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 6, !dbg !305
  %1045 = load i8*, i8** %1044, align 8, !dbg !306
  store i8* %1045, i8** %1036, align 8, !dbg !307
  br label %1046, !dbg !308

1046:                                             ; preds = %1043, %1041
  %1047 = zext i32 %1033 to i64, !dbg !309
  %1048 = load i8*, i8** %1036, align 8, !dbg !310
  %1049 = load i8*, i8** %929, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1048, i8* %1049, i64 %1047, i1 false), !dbg !312
  %1050 = getelementptr i8, i8* %1048, i32 %1033, !dbg !313
  store i8 0, i8* %1050, align 1, !dbg !314
  %1051 = add i32 %1033, 1, !dbg !315
  %1052 = getelementptr i8, i8* %1048, i32 %1051, !dbg !316
  store i8 0, i8* %1052, align 1, !dbg !317
  %1053 = and i32 %1031, 1, !dbg !318
  %1054 = getelementptr i16, i16* %1029, i32 %1053, !dbg !319
  %1055 = load i16, i16* %1054, align 2, !dbg !320
  store i16 %1055, i16* %1000, align 2, !dbg !321
  br label %1177, !dbg !322

1056:                                             ; preds = %1008
  %1057 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 2, !dbg !323
  store i8 %924, i8* %1057, align 1, !dbg !324
  %1058 = load i32, i32* %930, align 4, !dbg !325
  %1059 = and i32 %1058, 1, !dbg !326
  %1060 = icmp eq i32 %1059, 0, !dbg !327
  %1061 = icmp sge i32 %1058, 12, !dbg !328
  %1062 = and i1 %1061, %1060, !dbg !329
  %1063 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1058), !dbg !330
  %1064 = icmp eq i32 %1063, 0, !dbg !331
  br i1 %1064, label %1076, label %1065, !dbg !332

1065:                                             ; preds = %1056
  %1066 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 12, i32 0, !dbg !333
  %1067 = load %struct.BtCursor*, %struct.BtCursor** %1066, align 8, !dbg !334
  %1068 = getelementptr i32, i32* %937, i32 3, !dbg !335
  %1069 = load i32, i32* %1068, align 4, !dbg !336
  %1070 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1067, i32 %1069, i32 %1063, %struct.sqlite3_value* %933), !dbg !337
  %1071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 5, !dbg !338
  %1072 = load i8*, i8** %1071, align 8, !dbg !339
  %1073 = call i32 @sqlite3VdbeSerialGet(i8* %1072, i32 %1058, %struct.sqlite3_value* %933), !dbg !340
  %1074 = load i16, i16* %1000, align 2, !dbg !341
  %1075 = and i16 %1074, -4097, !dbg !342
  store i16 %1075, i16* %1000, align 2, !dbg !343
  br label %1177, !dbg !344

1076:                                             ; preds = %1056
  %1077 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1058, %struct.sqlite3_value* %933), !dbg !345
  br label %1177, !dbg !346

1078:                                             ; preds = %996
  %1079 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 23, i32 3, !dbg !347
  %1080 = load i32, i32* %1079, align 4, !dbg !348
  store i32 %1080, i32* %930, align 4, !dbg !349
  br label %999, !dbg !350

1081:                                             ; preds = %996
  %1082 = load i32, i32* %944, align 4, !dbg !351
  %1083 = load i32, i32* %937, align 4, !dbg !352
  %1084 = icmp ult i32 %1082, %1083, !dbg !353
  br i1 %1084, label %1085, label %1166, !dbg !354

1085:                                             ; preds = %1081
  %1086 = load i8*, i8** %947, align 8, !dbg !355
  %1087 = icmp eq i8* %1086, null, !dbg !356
  br i1 %1087, label %1089, label %1088, !dbg !357

1088:                                             ; preds = %1085
  store i8* %1086, i8** %929, align 8, !dbg !358
  br label %1089, !dbg !359

1089:                                             ; preds = %1088, %1085, %969
  %1090 = alloca i32, align 4, !dbg !360
  %1091 = load i16, i16* %948, align 2, !dbg !361
  %1092 = zext i16 %1091 to i32, !dbg !362
  store i32 %1092, i32* %1090, align 4, !dbg !363
  %1093 = alloca i64, align 8, !dbg !364
  %1094 = getelementptr i32, i32* %937, i32 %1092, !dbg !365
  %1095 = load i32, i32* %1094, align 4, !dbg !366
  %1096 = zext i32 %1095 to i64, !dbg !367
  store i64 %1096, i64* %1093, align 4, !dbg !368
  %1097 = load i8*, i8** %929, align 8, !dbg !369
  %1098 = load i32, i32* %944, align 4, !dbg !370
  %1099 = alloca i8*, align 8, !dbg !371
  %1100 = getelementptr i8, i8* %1097, i32 %1098, !dbg !372
  store i8* %1100, i8** %1099, align 8, !dbg !373
  %1101 = load i32, i32* %937, align 4, !dbg !374
  %1102 = getelementptr i8, i8* %1097, i32 %1101, !dbg !375
  br label %1103, !dbg !376

1103:                                             ; preds = %1110, %1089
  %1104 = load i32, i32* %1090, align 4, !dbg !377
  %1105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %932, i32 0, i32 23, i32 %1104, !dbg !378
  %1106 = load i8*, i8** %1099, align 8, !dbg !379
  %1107 = load i8, i8* %1106, align 1, !dbg !380
  %1108 = zext i8 %1107 to i32, !dbg !381
  store i32 %1108, i32* %930, align 4, !dbg !382
  store i32 %1108, i32* %1105, align 4, !dbg !383
  %1109 = icmp sgt i8 %1107, -1, !dbg !384
  br i1 %1109, label %1133, label %1124, !dbg !385

1110:                                             ; preds = %1124, %1133
  %1111 = load i32, i32* %1090, align 4, !dbg !386
  %1112 = add i32 %1111, 1, !dbg !387
  store i32 %1112, i32* %1090, align 4, !dbg !388
  %1113 = load i64, i64* %1093, align 4, !dbg !389
  %1114 = and i64 4294967295, %1113, !dbg !390
  %1115 = trunc i64 %1114 to i32, !dbg !391
  %1116 = getelementptr i32, i32* %937, i32 %1112, !dbg !392
  store i32 %1115, i32* %1116, align 4, !dbg !393
  %1117 = load i32, i32* %1090, align 4, !dbg !394
  %1118 = icmp sle i32 %1117, 3, !dbg !395
  %1119 = load i8*, i8** %1099, align 8, !dbg !396
  %1120 = ptrtoint i8* %1119 to i64, !dbg !397
  %1121 = ptrtoint i8* %1102 to i64, !dbg !398
  %1122 = icmp ult i64 %1120, %1121, !dbg !399
  %1123 = and i1 %1118, %1122, !dbg !400
  br i1 %1123, label %1103, label %1142, !dbg !401

1124:                                             ; preds = %1103
  %1125 = load i8*, i8** %1099, align 8, !dbg !402
  %1126 = call i8 @sqlite3GetVarint32(i8* %1125, i32* %930), !dbg !403
  %1127 = getelementptr i8, i8* %1125, i8 %1126, !dbg !404
  store i8* %1127, i8** %1099, align 8, !dbg !405
  %1128 = load i32, i32* %930, align 4, !dbg !406
  store i32 %1128, i32* %1105, align 4, !dbg !407
  %1129 = load i64, i64* %1093, align 4, !dbg !408
  %1130 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1128), !dbg !409
  %1131 = zext i32 %1130 to i64, !dbg !410
  %1132 = add i64 %1129, %1131, !dbg !411
  store i64 %1132, i64* %1093, align 4, !dbg !412
  br label %1110, !dbg !413

1133:                                             ; preds = %1103
  %1134 = getelementptr i8, i8* %1106, i32 1, !dbg !414
  store i8* %1134, i8** %1099, align 8, !dbg !415
  %1135 = load i32, i32* %930, align 4, !dbg !416
  %1136 = trunc i32 %1135 to i8, !dbg !417
  %1137 = getelementptr i8, i8* %4, i8 %1136, !dbg !418
  %1138 = load i8, i8* %1137, align 1, !dbg !419
  %1139 = zext i8 %1138 to i64, !dbg !420
  %1140 = load i64, i64* %1093, align 4, !dbg !421
  %1141 = add i64 %1140, %1139, !dbg !422
  store i64 %1141, i64* %1093, align 4, !dbg !423
  br label %1110, !dbg !424

1142:                                             ; preds = %1110
  %1143 = load i64, i64* %1093, align 4, !dbg !425
  %1144 = load i32, i32* %945, align 4, !dbg !426
  %1145 = zext i32 %1144 to i64, !dbg !427
  %1146 = icmp uge i64 %1120, %1121, !dbg !428
  %1147 = icmp ugt i64 %1120, %1121, !dbg !429
  %1148 = icmp ne i64 %1143, %1145, !dbg !430
  %1149 = icmp ugt i64 %1143, %1145, !dbg !431
  %1150 = or i1 %1147, %1148, !dbg !432
  %1151 = and i1 %1146, %1150, !dbg !433
  %1152 = or i1 %1151, %1149, !dbg !434
  br i1 %1152, label %1153, label %1157, !dbg !435

1153:                                             ; preds = %1142
  %1154 = load i32, i32* %937, align 4, !dbg !436
  %1155 = icmp eq i32 %1154, 0, !dbg !437
  br i1 %1155, label %1156, label %1157, !dbg !438

1156:                                             ; preds = %1153
  store i32 0, i32* %1090, align 4, !dbg !439
  store i8* %1102, i8** %1099, align 8, !dbg !440
  br label %1157, !dbg !441

1157:                                             ; preds = %1156, %1153, %1142
  %1158 = load i32, i32* %1090, align 4, !dbg !442
  %1159 = trunc i32 %1158 to i16, !dbg !443
  store i16 %1159, i16* %948, align 2, !dbg !444
  %1160 = load i8*, i8** %1099, align 8, !dbg !445
  %1161 = ptrtoint i8* %1160 to i64, !dbg !446
  %1162 = load i8*, i8** %929, align 8, !dbg !447
  %1163 = ptrtoint i8* %1162 to i64, !dbg !448
  %1164 = sub i64 %1161, %1163, !dbg !449
  %1165 = trunc i64 %1164 to i32, !dbg !450
  store i32 %1165, i32* %944, align 4, !dbg !451
  br label %1167, !dbg !452

1166:                                             ; preds = %1081
  store i32 0, i32* %930, align 4, !dbg !453
  br label %1167, !dbg !454

1167:                                             ; preds = %1157, %1166
  %1168 = load i16, i16* %948, align 2, !dbg !455
  %1169 = icmp sle i16 %1168, 3, !dbg !456
  br i1 %1169, label %1170, label %999, !dbg !457

1170:                                             ; preds = %1167
  %1171 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %933, i32 0, i32 1, !dbg !458
  %1172 = load i16, i16* %1171, align 2, !dbg !458
  %1173 = and i16 %1172, 9216, !dbg !458
  %1174 = icmp ne i16 %1173, 0, !dbg !458
  br i1 %1174, label %1175, label %1176, !dbg !458

1175:                                             ; preds = %1170
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %933), !dbg !458
  br label %1177, !dbg !458

1176:                                             ; preds = %1170
  store i16 1, i16* %1171, align 2, !dbg !458
  br label %1177, !dbg !458

1177:                                             ; preds = %1175, %1176, %1046, %1026, %1065, %1076, %994, %995
  call void @llvm.stackrestore(i8* %922), !dbg !459
  br label %1178, !dbg !74

1178:                                             ; preds = %1177, %14
  %1179 = call i8* @llvm.stacksave(), !dbg !167
  %1180 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1181 = load i8, i8* %1180, align 1, !dbg !171
  %1182 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1182, align 4, !dbg !173
  %1183 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1184 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1185 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1183, align 8, !dbg !176
  store %struct.VdbeCursor* %1185, %struct.VdbeCursor** %1184, align 8, !dbg !177
  %1186 = alloca i8*, align 8, !dbg !178
  %1187 = alloca i32, align 4, !dbg !179
  %1188 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1184, i32* %1182), !dbg !180
  %1189 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1184, align 8, !dbg !181
  %1190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !182
  %1191 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 16, !dbg !183
  %1192 = load i16, i16* %1191, align 2, !dbg !184
  %1193 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 19, !dbg !185
  %1194 = load i32*, i32** %1193, align 8, !dbg !186
  %1195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 0, !dbg !187
  %1196 = load i8, i8* %1195, align 1, !dbg !188
  %1197 = icmp ne i8 %1196, 3, !dbg !189
  %1198 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 2, !dbg !190
  %1199 = load i8, i8* %1198, align 1, !dbg !191
  %1200 = icmp ne i8 %1199, 0, !dbg !192
  %1201 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 14, !dbg !193
  %1202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 21, !dbg !194
  %1203 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 22, !dbg !195
  %1204 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 20, !dbg !196
  %1205 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 17, !dbg !197
  %1206 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 9, !dbg !198
  %1207 = load i32, i32* %1206, align 4, !dbg !199
  %1208 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1209 = load i32, i32* %1208, align 4, !dbg !201
  %1210 = icmp ne i32 %1207, %1209, !dbg !202
  br i1 %1210, label %1211, label %1253, !dbg !203

1211:                                             ; preds = %1178
  br i1 %1200, label %1233, label %1228, !dbg !204

1212:                                             ; preds = %1228, %1235
  %1213 = load i32, i32* %1208, align 4, !dbg !205
  store i32 %1213, i32* %1206, align 4, !dbg !206
  %1214 = load i8*, i8** %1204, align 8, !dbg !207
  %1215 = load i8, i8* %1214, align 1, !dbg !208
  %1216 = icmp sgt i8 %1215, -1, !dbg !211
  br i1 %1216, label %1217, label %1219, !dbg !212

1217:                                             ; preds = %1212
  %1218 = zext i8 %1215 to i32, !dbg !213
  store i32 %1218, i32* %1194, align 4, !dbg !214
  store i32 1, i32* %1201, align 4, !dbg !215
  br label %1222, !dbg !216

1219:                                             ; preds = %1212
  %1220 = call i8 @sqlite3GetVarint32(i8* %1214, i32* %1194), !dbg !217
  %1221 = zext i8 %1220 to i32, !dbg !218
  store i32 %1221, i32* %1201, align 4, !dbg !219
  br label %1222, !dbg !220

1222:                                             ; preds = %1219, %1217
  store i16 0, i16* %1205, align 2, !dbg !221
  %1223 = load i32, i32* %1203, align 4, !dbg !222
  %1224 = load i32, i32* %1194, align 4, !dbg !223
  %1225 = icmp ult i32 %1223, %1224, !dbg !224
  br i1 %1225, label %1227, label %1226, !dbg !225

1226:                                             ; preds = %1222
  store i8* %1214, i8** %1186, align 8, !dbg !226
  br label %1346, !dbg !227

1227:                                             ; preds = %1222
  store i8* null, i8** %1204, align 8, !dbg !228
  store i32 0, i32* %1203, align 4, !dbg !229
  br label %1253, !dbg !230

1228:                                             ; preds = %1211
  %1229 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 12, i32 0, !dbg !231
  %1230 = load %struct.BtCursor*, %struct.BtCursor** %1229, align 8, !dbg !232
  %1231 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1230), !dbg !233
  store i32 %1231, i32* %1202, align 4, !dbg !234
  %1232 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1230, i32* %1203), !dbg !235
  store i8* %1232, i8** %1204, align 8, !dbg !236
  br label %1212, !dbg !237

1233:                                             ; preds = %1211
  %1234 = icmp eq i8 %1196, 3, !dbg !238
  br i1 %1234, label %1235, label %1246, !dbg !239

1235:                                             ; preds = %1233
  %1236 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 10, !dbg !240
  %1237 = load i32, i32* %1236, align 4, !dbg !241
  %1238 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1237, !dbg !242
  %1239 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1238, i32 0, i32 1, !dbg !243
  %1240 = load i16, i16* %1239, align 2, !dbg !244
  %1241 = and i16 %1240, 16, !dbg !245
  %1242 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1238, i32 0, i32 4, !dbg !246
  %1243 = load i32, i32* %1242, align 4, !dbg !247
  store i32 %1243, i32* %1202, align 4, !dbg !248
  store i32 %1243, i32* %1203, align 4, !dbg !249
  %1244 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1238, i32 0, i32 5, !dbg !250
  %1245 = load i8*, i8** %1244, align 8, !dbg !251
  store i8* %1245, i8** %1204, align 8, !dbg !252
  br label %1212, !dbg !253

1246:                                             ; preds = %1233
  %1247 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 1, !dbg !254
  %1248 = load i16, i16* %1247, align 2, !dbg !254
  %1249 = and i16 %1248, 9216, !dbg !254
  %1250 = icmp ne i16 %1249, 0, !dbg !254
  br i1 %1250, label %1251, label %1252, !dbg !254

1251:                                             ; preds = %1246
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1190), !dbg !254
  br label %1434, !dbg !254

1252:                                             ; preds = %1246
  store i16 1, i16* %1247, align 2, !dbg !254
  br label %1434, !dbg !254

1253:                                             ; preds = %1227, %1178
  %1254 = load i16, i16* %1205, align 2, !dbg !255
  %1255 = icmp ule i16 %1254, 2, !dbg !256
  br i1 %1255, label %1338, label %1335, !dbg !257

1256:                                             ; preds = %1335, %1424
  %1257 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 1, !dbg !258
  %1258 = load i16, i16* %1257, align 2, !dbg !259
  %1259 = and i16 9216, %1258, !dbg !260
  %1260 = icmp eq i16 0, %1259, !dbg !261
  br i1 %1260, label %1261, label %1265, !dbg !262

1261:                                             ; preds = %1256
  %1262 = icmp ne i16 %1259, 0, !dbg !263
  br i1 %1262, label %1263, label %1264, !dbg !263

1263:                                             ; preds = %1261
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1190), !dbg !263
  br label %1265, !dbg !263

1264:                                             ; preds = %1261
  store i16 1, i16* %1257, align 2, !dbg !263
  br label %1265, !dbg !263

1265:                                             ; preds = %1263, %1264, %1256
  %1266 = load i32, i32* %1187, align 4, !dbg !264
  %1267 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 23, i32 2, !dbg !265
  %1268 = load i32, i32* %1267, align 4, !dbg !266
  %1269 = load i32, i32* %1203, align 4, !dbg !267
  %1270 = getelementptr i32, i32* %1194, i32 3, !dbg !268
  %1271 = load i32, i32* %1270, align 4, !dbg !269
  %1272 = icmp sge i32 %1269, %1271, !dbg !270
  br i1 %1272, label %1273, label %1313, !dbg !271

1273:                                             ; preds = %1265
  %1274 = load i8*, i8** %1204, align 8, !dbg !272
  %1275 = ptrtoint i8* %1274 to i64, !dbg !273
  %1276 = getelementptr i32, i32* %1194, i32 2, !dbg !274
  %1277 = load i32, i32* %1276, align 4, !dbg !275
  %1278 = zext i32 %1277 to i64, !dbg !276
  %1279 = add i64 %1275, %1278, !dbg !277
  %1280 = inttoptr i64 %1279 to i8*, !dbg !278
  store i8* %1280, i8** %1186, align 8, !dbg !279
  %1281 = load i32, i32* %1187, align 4, !dbg !280
  %1282 = icmp ult i32 %1281, 12, !dbg !281
  br i1 %1282, label %1283, label %1285, !dbg !282

1283:                                             ; preds = %1273
  %1284 = call i32 @sqlite3VdbeSerialGet(i8* %1280, i32 %1281, %struct.sqlite3_value* %1190), !dbg !283
  br label %1434, !dbg !284

1285:                                             ; preds = %1273
  %1286 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1286, align 2, !dbg !286
  %1287 = getelementptr i16, i16* %1286, i32 1, !dbg !287
  store i16 514, i16* %1287, align 2, !dbg !288
  %1288 = load i32, i32* %1187, align 4, !dbg !289
  %1289 = sub i32 %1288, 12, !dbg !290
  %1290 = lshr i32 %1289, 1, !dbg !291
  %1291 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 4, !dbg !292
  store i32 %1290, i32* %1291, align 4, !dbg !293
  %1292 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 2, !dbg !294
  store i8 %1181, i8* %1292, align 1, !dbg !295
  %1293 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 5, !dbg !296
  %1294 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 7, !dbg !297
  %1295 = load i32, i32* %1294, align 4, !dbg !298
  %1296 = add i32 %1290, 2, !dbg !299
  %1297 = icmp slt i32 %1295, %1296, !dbg !300
  br i1 %1297, label %1298, label %1300, !dbg !301

1298:                                             ; preds = %1285
  store i16 1, i16* %1257, align 2, !dbg !302
  %1299 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1190, i32 %1296, i32 0), !dbg !303
  br label %1303, !dbg !304

1300:                                             ; preds = %1285
  %1301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 6, !dbg !305
  %1302 = load i8*, i8** %1301, align 8, !dbg !306
  store i8* %1302, i8** %1293, align 8, !dbg !307
  br label %1303, !dbg !308

1303:                                             ; preds = %1300, %1298
  %1304 = zext i32 %1290 to i64, !dbg !309
  %1305 = load i8*, i8** %1293, align 8, !dbg !310
  %1306 = load i8*, i8** %1186, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1305, i8* %1306, i64 %1304, i1 false), !dbg !312
  %1307 = getelementptr i8, i8* %1305, i32 %1290, !dbg !313
  store i8 0, i8* %1307, align 1, !dbg !314
  %1308 = add i32 %1290, 1, !dbg !315
  %1309 = getelementptr i8, i8* %1305, i32 %1308, !dbg !316
  store i8 0, i8* %1309, align 1, !dbg !317
  %1310 = and i32 %1288, 1, !dbg !318
  %1311 = getelementptr i16, i16* %1286, i32 %1310, !dbg !319
  %1312 = load i16, i16* %1311, align 2, !dbg !320
  store i16 %1312, i16* %1257, align 2, !dbg !321
  br label %1434, !dbg !322

1313:                                             ; preds = %1265
  %1314 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 2, !dbg !323
  store i8 %1181, i8* %1314, align 1, !dbg !324
  %1315 = load i32, i32* %1187, align 4, !dbg !325
  %1316 = and i32 %1315, 1, !dbg !326
  %1317 = icmp eq i32 %1316, 0, !dbg !327
  %1318 = icmp sge i32 %1315, 12, !dbg !328
  %1319 = and i1 %1318, %1317, !dbg !329
  %1320 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1315), !dbg !330
  %1321 = icmp eq i32 %1320, 0, !dbg !331
  br i1 %1321, label %1333, label %1322, !dbg !332

1322:                                             ; preds = %1313
  %1323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 12, i32 0, !dbg !333
  %1324 = load %struct.BtCursor*, %struct.BtCursor** %1323, align 8, !dbg !334
  %1325 = getelementptr i32, i32* %1194, i32 2, !dbg !335
  %1326 = load i32, i32* %1325, align 4, !dbg !336
  %1327 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1324, i32 %1326, i32 %1320, %struct.sqlite3_value* %1190), !dbg !337
  %1328 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 5, !dbg !338
  %1329 = load i8*, i8** %1328, align 8, !dbg !339
  %1330 = call i32 @sqlite3VdbeSerialGet(i8* %1329, i32 %1315, %struct.sqlite3_value* %1190), !dbg !340
  %1331 = load i16, i16* %1257, align 2, !dbg !341
  %1332 = and i16 %1331, -4097, !dbg !342
  store i16 %1332, i16* %1257, align 2, !dbg !343
  br label %1434, !dbg !344

1333:                                             ; preds = %1313
  %1334 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1315, %struct.sqlite3_value* %1190), !dbg !345
  br label %1434, !dbg !346

1335:                                             ; preds = %1253
  %1336 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 23, i32 2, !dbg !347
  %1337 = load i32, i32* %1336, align 4, !dbg !348
  store i32 %1337, i32* %1187, align 4, !dbg !349
  br label %1256, !dbg !350

1338:                                             ; preds = %1253
  %1339 = load i32, i32* %1201, align 4, !dbg !351
  %1340 = load i32, i32* %1194, align 4, !dbg !352
  %1341 = icmp ult i32 %1339, %1340, !dbg !353
  br i1 %1341, label %1342, label %1423, !dbg !354

1342:                                             ; preds = %1338
  %1343 = load i8*, i8** %1204, align 8, !dbg !355
  %1344 = icmp eq i8* %1343, null, !dbg !356
  br i1 %1344, label %1346, label %1345, !dbg !357

1345:                                             ; preds = %1342
  store i8* %1343, i8** %1186, align 8, !dbg !358
  br label %1346, !dbg !359

1346:                                             ; preds = %1345, %1342, %1226
  %1347 = alloca i32, align 4, !dbg !360
  %1348 = load i16, i16* %1205, align 2, !dbg !361
  %1349 = zext i16 %1348 to i32, !dbg !362
  store i32 %1349, i32* %1347, align 4, !dbg !363
  %1350 = alloca i64, align 8, !dbg !364
  %1351 = getelementptr i32, i32* %1194, i32 %1349, !dbg !365
  %1352 = load i32, i32* %1351, align 4, !dbg !366
  %1353 = zext i32 %1352 to i64, !dbg !367
  store i64 %1353, i64* %1350, align 4, !dbg !368
  %1354 = load i8*, i8** %1186, align 8, !dbg !369
  %1355 = load i32, i32* %1201, align 4, !dbg !370
  %1356 = alloca i8*, align 8, !dbg !371
  %1357 = getelementptr i8, i8* %1354, i32 %1355, !dbg !372
  store i8* %1357, i8** %1356, align 8, !dbg !373
  %1358 = load i32, i32* %1194, align 4, !dbg !374
  %1359 = getelementptr i8, i8* %1354, i32 %1358, !dbg !375
  br label %1360, !dbg !376

1360:                                             ; preds = %1367, %1346
  %1361 = load i32, i32* %1347, align 4, !dbg !377
  %1362 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1189, i32 0, i32 23, i32 %1361, !dbg !378
  %1363 = load i8*, i8** %1356, align 8, !dbg !379
  %1364 = load i8, i8* %1363, align 1, !dbg !380
  %1365 = zext i8 %1364 to i32, !dbg !381
  store i32 %1365, i32* %1187, align 4, !dbg !382
  store i32 %1365, i32* %1362, align 4, !dbg !383
  %1366 = icmp sgt i8 %1364, -1, !dbg !384
  br i1 %1366, label %1390, label %1381, !dbg !385

1367:                                             ; preds = %1381, %1390
  %1368 = load i32, i32* %1347, align 4, !dbg !386
  %1369 = add i32 %1368, 1, !dbg !387
  store i32 %1369, i32* %1347, align 4, !dbg !388
  %1370 = load i64, i64* %1350, align 4, !dbg !389
  %1371 = and i64 4294967295, %1370, !dbg !390
  %1372 = trunc i64 %1371 to i32, !dbg !391
  %1373 = getelementptr i32, i32* %1194, i32 %1369, !dbg !392
  store i32 %1372, i32* %1373, align 4, !dbg !393
  %1374 = load i32, i32* %1347, align 4, !dbg !394
  %1375 = icmp sle i32 %1374, 2, !dbg !395
  %1376 = load i8*, i8** %1356, align 8, !dbg !396
  %1377 = ptrtoint i8* %1376 to i64, !dbg !397
  %1378 = ptrtoint i8* %1359 to i64, !dbg !398
  %1379 = icmp ult i64 %1377, %1378, !dbg !399
  %1380 = and i1 %1375, %1379, !dbg !400
  br i1 %1380, label %1360, label %1399, !dbg !401

1381:                                             ; preds = %1360
  %1382 = load i8*, i8** %1356, align 8, !dbg !402
  %1383 = call i8 @sqlite3GetVarint32(i8* %1382, i32* %1187), !dbg !403
  %1384 = getelementptr i8, i8* %1382, i8 %1383, !dbg !404
  store i8* %1384, i8** %1356, align 8, !dbg !405
  %1385 = load i32, i32* %1187, align 4, !dbg !406
  store i32 %1385, i32* %1362, align 4, !dbg !407
  %1386 = load i64, i64* %1350, align 4, !dbg !408
  %1387 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1385), !dbg !409
  %1388 = zext i32 %1387 to i64, !dbg !410
  %1389 = add i64 %1386, %1388, !dbg !411
  store i64 %1389, i64* %1350, align 4, !dbg !412
  br label %1367, !dbg !413

1390:                                             ; preds = %1360
  %1391 = getelementptr i8, i8* %1363, i32 1, !dbg !414
  store i8* %1391, i8** %1356, align 8, !dbg !415
  %1392 = load i32, i32* %1187, align 4, !dbg !416
  %1393 = trunc i32 %1392 to i8, !dbg !417
  %1394 = getelementptr i8, i8* %4, i8 %1393, !dbg !418
  %1395 = load i8, i8* %1394, align 1, !dbg !419
  %1396 = zext i8 %1395 to i64, !dbg !420
  %1397 = load i64, i64* %1350, align 4, !dbg !421
  %1398 = add i64 %1397, %1396, !dbg !422
  store i64 %1398, i64* %1350, align 4, !dbg !423
  br label %1367, !dbg !424

1399:                                             ; preds = %1367
  %1400 = load i64, i64* %1350, align 4, !dbg !425
  %1401 = load i32, i32* %1202, align 4, !dbg !426
  %1402 = zext i32 %1401 to i64, !dbg !427
  %1403 = icmp uge i64 %1377, %1378, !dbg !428
  %1404 = icmp ugt i64 %1377, %1378, !dbg !429
  %1405 = icmp ne i64 %1400, %1402, !dbg !430
  %1406 = icmp ugt i64 %1400, %1402, !dbg !431
  %1407 = or i1 %1404, %1405, !dbg !432
  %1408 = and i1 %1403, %1407, !dbg !433
  %1409 = or i1 %1408, %1406, !dbg !434
  br i1 %1409, label %1410, label %1414, !dbg !435

1410:                                             ; preds = %1399
  %1411 = load i32, i32* %1194, align 4, !dbg !436
  %1412 = icmp eq i32 %1411, 0, !dbg !437
  br i1 %1412, label %1413, label %1414, !dbg !438

1413:                                             ; preds = %1410
  store i32 0, i32* %1347, align 4, !dbg !439
  store i8* %1359, i8** %1356, align 8, !dbg !440
  br label %1414, !dbg !441

1414:                                             ; preds = %1413, %1410, %1399
  %1415 = load i32, i32* %1347, align 4, !dbg !442
  %1416 = trunc i32 %1415 to i16, !dbg !443
  store i16 %1416, i16* %1205, align 2, !dbg !444
  %1417 = load i8*, i8** %1356, align 8, !dbg !445
  %1418 = ptrtoint i8* %1417 to i64, !dbg !446
  %1419 = load i8*, i8** %1186, align 8, !dbg !447
  %1420 = ptrtoint i8* %1419 to i64, !dbg !448
  %1421 = sub i64 %1418, %1420, !dbg !449
  %1422 = trunc i64 %1421 to i32, !dbg !450
  store i32 %1422, i32* %1201, align 4, !dbg !451
  br label %1424, !dbg !452

1423:                                             ; preds = %1338
  store i32 0, i32* %1187, align 4, !dbg !453
  br label %1424, !dbg !454

1424:                                             ; preds = %1414, %1423
  %1425 = load i16, i16* %1205, align 2, !dbg !455
  %1426 = icmp sle i16 %1425, 2, !dbg !456
  br i1 %1426, label %1427, label %1256, !dbg !457

1427:                                             ; preds = %1424
  %1428 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1190, i32 0, i32 1, !dbg !458
  %1429 = load i16, i16* %1428, align 2, !dbg !458
  %1430 = and i16 %1429, 9216, !dbg !458
  %1431 = icmp ne i16 %1430, 0, !dbg !458
  br i1 %1431, label %1432, label %1433, !dbg !458

1432:                                             ; preds = %1427
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1190), !dbg !458
  br label %1434, !dbg !458

1433:                                             ; preds = %1427
  store i16 1, i16* %1428, align 2, !dbg !458
  br label %1434, !dbg !458

1434:                                             ; preds = %1432, %1433, %1303, %1283, %1322, %1333, %1251, %1252
  call void @llvm.stackrestore(i8* %1179), !dbg !459
  br label %1435, !dbg !74

1435:                                             ; preds = %1434, %14
  %1436 = call i8* @llvm.stacksave(), !dbg !167
  %1437 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1438 = load i8, i8* %1437, align 1, !dbg !171
  %1439 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1439, align 4, !dbg !173
  %1440 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1441 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1442 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1440, align 8, !dbg !176
  store %struct.VdbeCursor* %1442, %struct.VdbeCursor** %1441, align 8, !dbg !177
  %1443 = alloca i8*, align 8, !dbg !178
  %1444 = alloca i32, align 4, !dbg !179
  %1445 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1441, i32* %1439), !dbg !180
  %1446 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1441, align 8, !dbg !181
  %1447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !182
  %1448 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 16, !dbg !183
  %1449 = load i16, i16* %1448, align 2, !dbg !184
  %1450 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 19, !dbg !185
  %1451 = load i32*, i32** %1450, align 8, !dbg !186
  %1452 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 0, !dbg !187
  %1453 = load i8, i8* %1452, align 1, !dbg !188
  %1454 = icmp ne i8 %1453, 3, !dbg !189
  %1455 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 2, !dbg !190
  %1456 = load i8, i8* %1455, align 1, !dbg !191
  %1457 = icmp ne i8 %1456, 0, !dbg !192
  %1458 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 14, !dbg !193
  %1459 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 21, !dbg !194
  %1460 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 22, !dbg !195
  %1461 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 20, !dbg !196
  %1462 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 17, !dbg !197
  %1463 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 9, !dbg !198
  %1464 = load i32, i32* %1463, align 4, !dbg !199
  %1465 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1466 = load i32, i32* %1465, align 4, !dbg !201
  %1467 = icmp ne i32 %1464, %1466, !dbg !202
  br i1 %1467, label %1468, label %1510, !dbg !203

1468:                                             ; preds = %1435
  br i1 %1457, label %1490, label %1485, !dbg !204

1469:                                             ; preds = %1485, %1492
  %1470 = load i32, i32* %1465, align 4, !dbg !205
  store i32 %1470, i32* %1463, align 4, !dbg !206
  %1471 = load i8*, i8** %1461, align 8, !dbg !207
  %1472 = load i8, i8* %1471, align 1, !dbg !208
  %1473 = icmp sgt i8 %1472, -1, !dbg !211
  br i1 %1473, label %1474, label %1476, !dbg !212

1474:                                             ; preds = %1469
  %1475 = zext i8 %1472 to i32, !dbg !213
  store i32 %1475, i32* %1451, align 4, !dbg !214
  store i32 1, i32* %1458, align 4, !dbg !215
  br label %1479, !dbg !216

1476:                                             ; preds = %1469
  %1477 = call i8 @sqlite3GetVarint32(i8* %1471, i32* %1451), !dbg !217
  %1478 = zext i8 %1477 to i32, !dbg !218
  store i32 %1478, i32* %1458, align 4, !dbg !219
  br label %1479, !dbg !220

1479:                                             ; preds = %1476, %1474
  store i16 0, i16* %1462, align 2, !dbg !221
  %1480 = load i32, i32* %1460, align 4, !dbg !222
  %1481 = load i32, i32* %1451, align 4, !dbg !223
  %1482 = icmp ult i32 %1480, %1481, !dbg !224
  br i1 %1482, label %1484, label %1483, !dbg !225

1483:                                             ; preds = %1479
  store i8* %1471, i8** %1443, align 8, !dbg !226
  br label %1603, !dbg !227

1484:                                             ; preds = %1479
  store i8* null, i8** %1461, align 8, !dbg !228
  store i32 0, i32* %1460, align 4, !dbg !229
  br label %1510, !dbg !230

1485:                                             ; preds = %1468
  %1486 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 12, i32 0, !dbg !231
  %1487 = load %struct.BtCursor*, %struct.BtCursor** %1486, align 8, !dbg !232
  %1488 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1487), !dbg !233
  store i32 %1488, i32* %1459, align 4, !dbg !234
  %1489 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1487, i32* %1460), !dbg !235
  store i8* %1489, i8** %1461, align 8, !dbg !236
  br label %1469, !dbg !237

1490:                                             ; preds = %1468
  %1491 = icmp eq i8 %1453, 3, !dbg !238
  br i1 %1491, label %1492, label %1503, !dbg !239

1492:                                             ; preds = %1490
  %1493 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 10, !dbg !240
  %1494 = load i32, i32* %1493, align 4, !dbg !241
  %1495 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1494, !dbg !242
  %1496 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1495, i32 0, i32 1, !dbg !243
  %1497 = load i16, i16* %1496, align 2, !dbg !244
  %1498 = and i16 %1497, 16, !dbg !245
  %1499 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1495, i32 0, i32 4, !dbg !246
  %1500 = load i32, i32* %1499, align 4, !dbg !247
  store i32 %1500, i32* %1459, align 4, !dbg !248
  store i32 %1500, i32* %1460, align 4, !dbg !249
  %1501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1495, i32 0, i32 5, !dbg !250
  %1502 = load i8*, i8** %1501, align 8, !dbg !251
  store i8* %1502, i8** %1461, align 8, !dbg !252
  br label %1469, !dbg !253

1503:                                             ; preds = %1490
  %1504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 1, !dbg !254
  %1505 = load i16, i16* %1504, align 2, !dbg !254
  %1506 = and i16 %1505, 9216, !dbg !254
  %1507 = icmp ne i16 %1506, 0, !dbg !254
  br i1 %1507, label %1508, label %1509, !dbg !254

1508:                                             ; preds = %1503
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1447), !dbg !254
  br label %1691, !dbg !254

1509:                                             ; preds = %1503
  store i16 1, i16* %1504, align 2, !dbg !254
  br label %1691, !dbg !254

1510:                                             ; preds = %1484, %1435
  %1511 = load i16, i16* %1462, align 2, !dbg !255
  %1512 = icmp ule i16 %1511, 4, !dbg !256
  br i1 %1512, label %1595, label %1592, !dbg !257

1513:                                             ; preds = %1592, %1681
  %1514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 1, !dbg !258
  %1515 = load i16, i16* %1514, align 2, !dbg !259
  %1516 = and i16 9216, %1515, !dbg !260
  %1517 = icmp eq i16 0, %1516, !dbg !261
  br i1 %1517, label %1518, label %1522, !dbg !262

1518:                                             ; preds = %1513
  %1519 = icmp ne i16 %1516, 0, !dbg !263
  br i1 %1519, label %1520, label %1521, !dbg !263

1520:                                             ; preds = %1518
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1447), !dbg !263
  br label %1522, !dbg !263

1521:                                             ; preds = %1518
  store i16 1, i16* %1514, align 2, !dbg !263
  br label %1522, !dbg !263

1522:                                             ; preds = %1520, %1521, %1513
  %1523 = load i32, i32* %1444, align 4, !dbg !264
  %1524 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 23, i32 4, !dbg !265
  %1525 = load i32, i32* %1524, align 4, !dbg !266
  %1526 = load i32, i32* %1460, align 4, !dbg !267
  %1527 = getelementptr i32, i32* %1451, i32 5, !dbg !268
  %1528 = load i32, i32* %1527, align 4, !dbg !269
  %1529 = icmp sge i32 %1526, %1528, !dbg !270
  br i1 %1529, label %1530, label %1570, !dbg !271

1530:                                             ; preds = %1522
  %1531 = load i8*, i8** %1461, align 8, !dbg !272
  %1532 = ptrtoint i8* %1531 to i64, !dbg !273
  %1533 = getelementptr i32, i32* %1451, i32 4, !dbg !274
  %1534 = load i32, i32* %1533, align 4, !dbg !275
  %1535 = zext i32 %1534 to i64, !dbg !276
  %1536 = add i64 %1532, %1535, !dbg !277
  %1537 = inttoptr i64 %1536 to i8*, !dbg !278
  store i8* %1537, i8** %1443, align 8, !dbg !279
  %1538 = load i32, i32* %1444, align 4, !dbg !280
  %1539 = icmp ult i32 %1538, 12, !dbg !281
  br i1 %1539, label %1540, label %1542, !dbg !282

1540:                                             ; preds = %1530
  %1541 = call i32 @sqlite3VdbeSerialGet(i8* %1537, i32 %1538, %struct.sqlite3_value* %1447), !dbg !283
  br label %1691, !dbg !284

1542:                                             ; preds = %1530
  %1543 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1543, align 2, !dbg !286
  %1544 = getelementptr i16, i16* %1543, i32 1, !dbg !287
  store i16 514, i16* %1544, align 2, !dbg !288
  %1545 = load i32, i32* %1444, align 4, !dbg !289
  %1546 = sub i32 %1545, 12, !dbg !290
  %1547 = lshr i32 %1546, 1, !dbg !291
  %1548 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 4, !dbg !292
  store i32 %1547, i32* %1548, align 4, !dbg !293
  %1549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 2, !dbg !294
  store i8 %1438, i8* %1549, align 1, !dbg !295
  %1550 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 5, !dbg !296
  %1551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 7, !dbg !297
  %1552 = load i32, i32* %1551, align 4, !dbg !298
  %1553 = add i32 %1547, 2, !dbg !299
  %1554 = icmp slt i32 %1552, %1553, !dbg !300
  br i1 %1554, label %1555, label %1557, !dbg !301

1555:                                             ; preds = %1542
  store i16 1, i16* %1514, align 2, !dbg !302
  %1556 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1447, i32 %1553, i32 0), !dbg !303
  br label %1560, !dbg !304

1557:                                             ; preds = %1542
  %1558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 6, !dbg !305
  %1559 = load i8*, i8** %1558, align 8, !dbg !306
  store i8* %1559, i8** %1550, align 8, !dbg !307
  br label %1560, !dbg !308

1560:                                             ; preds = %1557, %1555
  %1561 = zext i32 %1547 to i64, !dbg !309
  %1562 = load i8*, i8** %1550, align 8, !dbg !310
  %1563 = load i8*, i8** %1443, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1562, i8* %1563, i64 %1561, i1 false), !dbg !312
  %1564 = getelementptr i8, i8* %1562, i32 %1547, !dbg !313
  store i8 0, i8* %1564, align 1, !dbg !314
  %1565 = add i32 %1547, 1, !dbg !315
  %1566 = getelementptr i8, i8* %1562, i32 %1565, !dbg !316
  store i8 0, i8* %1566, align 1, !dbg !317
  %1567 = and i32 %1545, 1, !dbg !318
  %1568 = getelementptr i16, i16* %1543, i32 %1567, !dbg !319
  %1569 = load i16, i16* %1568, align 2, !dbg !320
  store i16 %1569, i16* %1514, align 2, !dbg !321
  br label %1691, !dbg !322

1570:                                             ; preds = %1522
  %1571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 2, !dbg !323
  store i8 %1438, i8* %1571, align 1, !dbg !324
  %1572 = load i32, i32* %1444, align 4, !dbg !325
  %1573 = and i32 %1572, 1, !dbg !326
  %1574 = icmp eq i32 %1573, 0, !dbg !327
  %1575 = icmp sge i32 %1572, 12, !dbg !328
  %1576 = and i1 %1575, %1574, !dbg !329
  %1577 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1572), !dbg !330
  %1578 = icmp eq i32 %1577, 0, !dbg !331
  br i1 %1578, label %1590, label %1579, !dbg !332

1579:                                             ; preds = %1570
  %1580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 12, i32 0, !dbg !333
  %1581 = load %struct.BtCursor*, %struct.BtCursor** %1580, align 8, !dbg !334
  %1582 = getelementptr i32, i32* %1451, i32 4, !dbg !335
  %1583 = load i32, i32* %1582, align 4, !dbg !336
  %1584 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1581, i32 %1583, i32 %1577, %struct.sqlite3_value* %1447), !dbg !337
  %1585 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 5, !dbg !338
  %1586 = load i8*, i8** %1585, align 8, !dbg !339
  %1587 = call i32 @sqlite3VdbeSerialGet(i8* %1586, i32 %1572, %struct.sqlite3_value* %1447), !dbg !340
  %1588 = load i16, i16* %1514, align 2, !dbg !341
  %1589 = and i16 %1588, -4097, !dbg !342
  store i16 %1589, i16* %1514, align 2, !dbg !343
  br label %1691, !dbg !344

1590:                                             ; preds = %1570
  %1591 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1572, %struct.sqlite3_value* %1447), !dbg !345
  br label %1691, !dbg !346

1592:                                             ; preds = %1510
  %1593 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 23, i32 4, !dbg !347
  %1594 = load i32, i32* %1593, align 4, !dbg !348
  store i32 %1594, i32* %1444, align 4, !dbg !349
  br label %1513, !dbg !350

1595:                                             ; preds = %1510
  %1596 = load i32, i32* %1458, align 4, !dbg !351
  %1597 = load i32, i32* %1451, align 4, !dbg !352
  %1598 = icmp ult i32 %1596, %1597, !dbg !353
  br i1 %1598, label %1599, label %1680, !dbg !354

1599:                                             ; preds = %1595
  %1600 = load i8*, i8** %1461, align 8, !dbg !355
  %1601 = icmp eq i8* %1600, null, !dbg !356
  br i1 %1601, label %1603, label %1602, !dbg !357

1602:                                             ; preds = %1599
  store i8* %1600, i8** %1443, align 8, !dbg !358
  br label %1603, !dbg !359

1603:                                             ; preds = %1602, %1599, %1483
  %1604 = alloca i32, align 4, !dbg !360
  %1605 = load i16, i16* %1462, align 2, !dbg !361
  %1606 = zext i16 %1605 to i32, !dbg !362
  store i32 %1606, i32* %1604, align 4, !dbg !363
  %1607 = alloca i64, align 8, !dbg !364
  %1608 = getelementptr i32, i32* %1451, i32 %1606, !dbg !365
  %1609 = load i32, i32* %1608, align 4, !dbg !366
  %1610 = zext i32 %1609 to i64, !dbg !367
  store i64 %1610, i64* %1607, align 4, !dbg !368
  %1611 = load i8*, i8** %1443, align 8, !dbg !369
  %1612 = load i32, i32* %1458, align 4, !dbg !370
  %1613 = alloca i8*, align 8, !dbg !371
  %1614 = getelementptr i8, i8* %1611, i32 %1612, !dbg !372
  store i8* %1614, i8** %1613, align 8, !dbg !373
  %1615 = load i32, i32* %1451, align 4, !dbg !374
  %1616 = getelementptr i8, i8* %1611, i32 %1615, !dbg !375
  br label %1617, !dbg !376

1617:                                             ; preds = %1624, %1603
  %1618 = load i32, i32* %1604, align 4, !dbg !377
  %1619 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1446, i32 0, i32 23, i32 %1618, !dbg !378
  %1620 = load i8*, i8** %1613, align 8, !dbg !379
  %1621 = load i8, i8* %1620, align 1, !dbg !380
  %1622 = zext i8 %1621 to i32, !dbg !381
  store i32 %1622, i32* %1444, align 4, !dbg !382
  store i32 %1622, i32* %1619, align 4, !dbg !383
  %1623 = icmp sgt i8 %1621, -1, !dbg !384
  br i1 %1623, label %1647, label %1638, !dbg !385

1624:                                             ; preds = %1638, %1647
  %1625 = load i32, i32* %1604, align 4, !dbg !386
  %1626 = add i32 %1625, 1, !dbg !387
  store i32 %1626, i32* %1604, align 4, !dbg !388
  %1627 = load i64, i64* %1607, align 4, !dbg !389
  %1628 = and i64 4294967295, %1627, !dbg !390
  %1629 = trunc i64 %1628 to i32, !dbg !391
  %1630 = getelementptr i32, i32* %1451, i32 %1626, !dbg !392
  store i32 %1629, i32* %1630, align 4, !dbg !393
  %1631 = load i32, i32* %1604, align 4, !dbg !394
  %1632 = icmp sle i32 %1631, 4, !dbg !395
  %1633 = load i8*, i8** %1613, align 8, !dbg !396
  %1634 = ptrtoint i8* %1633 to i64, !dbg !397
  %1635 = ptrtoint i8* %1616 to i64, !dbg !398
  %1636 = icmp ult i64 %1634, %1635, !dbg !399
  %1637 = and i1 %1632, %1636, !dbg !400
  br i1 %1637, label %1617, label %1656, !dbg !401

1638:                                             ; preds = %1617
  %1639 = load i8*, i8** %1613, align 8, !dbg !402
  %1640 = call i8 @sqlite3GetVarint32(i8* %1639, i32* %1444), !dbg !403
  %1641 = getelementptr i8, i8* %1639, i8 %1640, !dbg !404
  store i8* %1641, i8** %1613, align 8, !dbg !405
  %1642 = load i32, i32* %1444, align 4, !dbg !406
  store i32 %1642, i32* %1619, align 4, !dbg !407
  %1643 = load i64, i64* %1607, align 4, !dbg !408
  %1644 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1642), !dbg !409
  %1645 = zext i32 %1644 to i64, !dbg !410
  %1646 = add i64 %1643, %1645, !dbg !411
  store i64 %1646, i64* %1607, align 4, !dbg !412
  br label %1624, !dbg !413

1647:                                             ; preds = %1617
  %1648 = getelementptr i8, i8* %1620, i32 1, !dbg !414
  store i8* %1648, i8** %1613, align 8, !dbg !415
  %1649 = load i32, i32* %1444, align 4, !dbg !416
  %1650 = trunc i32 %1649 to i8, !dbg !417
  %1651 = getelementptr i8, i8* %4, i8 %1650, !dbg !418
  %1652 = load i8, i8* %1651, align 1, !dbg !419
  %1653 = zext i8 %1652 to i64, !dbg !420
  %1654 = load i64, i64* %1607, align 4, !dbg !421
  %1655 = add i64 %1654, %1653, !dbg !422
  store i64 %1655, i64* %1607, align 4, !dbg !423
  br label %1624, !dbg !424

1656:                                             ; preds = %1624
  %1657 = load i64, i64* %1607, align 4, !dbg !425
  %1658 = load i32, i32* %1459, align 4, !dbg !426
  %1659 = zext i32 %1658 to i64, !dbg !427
  %1660 = icmp uge i64 %1634, %1635, !dbg !428
  %1661 = icmp ugt i64 %1634, %1635, !dbg !429
  %1662 = icmp ne i64 %1657, %1659, !dbg !430
  %1663 = icmp ugt i64 %1657, %1659, !dbg !431
  %1664 = or i1 %1661, %1662, !dbg !432
  %1665 = and i1 %1660, %1664, !dbg !433
  %1666 = or i1 %1665, %1663, !dbg !434
  br i1 %1666, label %1667, label %1671, !dbg !435

1667:                                             ; preds = %1656
  %1668 = load i32, i32* %1451, align 4, !dbg !436
  %1669 = icmp eq i32 %1668, 0, !dbg !437
  br i1 %1669, label %1670, label %1671, !dbg !438

1670:                                             ; preds = %1667
  store i32 0, i32* %1604, align 4, !dbg !439
  store i8* %1616, i8** %1613, align 8, !dbg !440
  br label %1671, !dbg !441

1671:                                             ; preds = %1670, %1667, %1656
  %1672 = load i32, i32* %1604, align 4, !dbg !442
  %1673 = trunc i32 %1672 to i16, !dbg !443
  store i16 %1673, i16* %1462, align 2, !dbg !444
  %1674 = load i8*, i8** %1613, align 8, !dbg !445
  %1675 = ptrtoint i8* %1674 to i64, !dbg !446
  %1676 = load i8*, i8** %1443, align 8, !dbg !447
  %1677 = ptrtoint i8* %1676 to i64, !dbg !448
  %1678 = sub i64 %1675, %1677, !dbg !449
  %1679 = trunc i64 %1678 to i32, !dbg !450
  store i32 %1679, i32* %1458, align 4, !dbg !451
  br label %1681, !dbg !452

1680:                                             ; preds = %1595
  store i32 0, i32* %1444, align 4, !dbg !453
  br label %1681, !dbg !454

1681:                                             ; preds = %1671, %1680
  %1682 = load i16, i16* %1462, align 2, !dbg !455
  %1683 = icmp sle i16 %1682, 4, !dbg !456
  br i1 %1683, label %1684, label %1513, !dbg !457

1684:                                             ; preds = %1681
  %1685 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1447, i32 0, i32 1, !dbg !458
  %1686 = load i16, i16* %1685, align 2, !dbg !458
  %1687 = and i16 %1686, 9216, !dbg !458
  %1688 = icmp ne i16 %1687, 0, !dbg !458
  br i1 %1688, label %1689, label %1690, !dbg !458

1689:                                             ; preds = %1684
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1447), !dbg !458
  br label %1691, !dbg !458

1690:                                             ; preds = %1684
  store i16 1, i16* %1685, align 2, !dbg !458
  br label %1691, !dbg !458

1691:                                             ; preds = %1689, %1690, %1560, %1540, %1579, %1590, %1508, %1509
  call void @llvm.stackrestore(i8* %1436), !dbg !459
  br label %1692, !dbg !74

1692:                                             ; preds = %1691, %14
  %1693 = call i8* @llvm.stacksave(), !dbg !167
  %1694 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1695 = load i8, i8* %1694, align 1, !dbg !171
  %1696 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1696, align 4, !dbg !173
  %1697 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1698 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1699 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1697, align 8, !dbg !176
  store %struct.VdbeCursor* %1699, %struct.VdbeCursor** %1698, align 8, !dbg !177
  %1700 = alloca i8*, align 8, !dbg !178
  %1701 = alloca i32, align 4, !dbg !179
  %1702 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1698, i32* %1696), !dbg !180
  %1703 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1698, align 8, !dbg !181
  %1704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !182
  %1705 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 16, !dbg !183
  %1706 = load i16, i16* %1705, align 2, !dbg !184
  %1707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 19, !dbg !185
  %1708 = load i32*, i32** %1707, align 8, !dbg !186
  %1709 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 0, !dbg !187
  %1710 = load i8, i8* %1709, align 1, !dbg !188
  %1711 = icmp ne i8 %1710, 3, !dbg !189
  %1712 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 2, !dbg !190
  %1713 = load i8, i8* %1712, align 1, !dbg !191
  %1714 = icmp ne i8 %1713, 0, !dbg !192
  %1715 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 14, !dbg !193
  %1716 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 21, !dbg !194
  %1717 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 22, !dbg !195
  %1718 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 20, !dbg !196
  %1719 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 17, !dbg !197
  %1720 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 9, !dbg !198
  %1721 = load i32, i32* %1720, align 4, !dbg !199
  %1722 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1723 = load i32, i32* %1722, align 4, !dbg !201
  %1724 = icmp ne i32 %1721, %1723, !dbg !202
  br i1 %1724, label %1725, label %1767, !dbg !203

1725:                                             ; preds = %1692
  br i1 %1714, label %1747, label %1742, !dbg !204

1726:                                             ; preds = %1742, %1749
  %1727 = load i32, i32* %1722, align 4, !dbg !205
  store i32 %1727, i32* %1720, align 4, !dbg !206
  %1728 = load i8*, i8** %1718, align 8, !dbg !207
  %1729 = load i8, i8* %1728, align 1, !dbg !208
  %1730 = icmp sgt i8 %1729, -1, !dbg !211
  br i1 %1730, label %1731, label %1733, !dbg !212

1731:                                             ; preds = %1726
  %1732 = zext i8 %1729 to i32, !dbg !213
  store i32 %1732, i32* %1708, align 4, !dbg !214
  store i32 1, i32* %1715, align 4, !dbg !215
  br label %1736, !dbg !216

1733:                                             ; preds = %1726
  %1734 = call i8 @sqlite3GetVarint32(i8* %1728, i32* %1708), !dbg !217
  %1735 = zext i8 %1734 to i32, !dbg !218
  store i32 %1735, i32* %1715, align 4, !dbg !219
  br label %1736, !dbg !220

1736:                                             ; preds = %1733, %1731
  store i16 0, i16* %1719, align 2, !dbg !221
  %1737 = load i32, i32* %1717, align 4, !dbg !222
  %1738 = load i32, i32* %1708, align 4, !dbg !223
  %1739 = icmp ult i32 %1737, %1738, !dbg !224
  br i1 %1739, label %1741, label %1740, !dbg !225

1740:                                             ; preds = %1736
  store i8* %1728, i8** %1700, align 8, !dbg !226
  br label %1860, !dbg !227

1741:                                             ; preds = %1736
  store i8* null, i8** %1718, align 8, !dbg !228
  store i32 0, i32* %1717, align 4, !dbg !229
  br label %1767, !dbg !230

1742:                                             ; preds = %1725
  %1743 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 12, i32 0, !dbg !231
  %1744 = load %struct.BtCursor*, %struct.BtCursor** %1743, align 8, !dbg !232
  %1745 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1744), !dbg !233
  store i32 %1745, i32* %1716, align 4, !dbg !234
  %1746 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1744, i32* %1717), !dbg !235
  store i8* %1746, i8** %1718, align 8, !dbg !236
  br label %1726, !dbg !237

1747:                                             ; preds = %1725
  %1748 = icmp eq i8 %1710, 3, !dbg !238
  br i1 %1748, label %1749, label %1760, !dbg !239

1749:                                             ; preds = %1747
  %1750 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 10, !dbg !240
  %1751 = load i32, i32* %1750, align 4, !dbg !241
  %1752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1751, !dbg !242
  %1753 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1752, i32 0, i32 1, !dbg !243
  %1754 = load i16, i16* %1753, align 2, !dbg !244
  %1755 = and i16 %1754, 16, !dbg !245
  %1756 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1752, i32 0, i32 4, !dbg !246
  %1757 = load i32, i32* %1756, align 4, !dbg !247
  store i32 %1757, i32* %1716, align 4, !dbg !248
  store i32 %1757, i32* %1717, align 4, !dbg !249
  %1758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1752, i32 0, i32 5, !dbg !250
  %1759 = load i8*, i8** %1758, align 8, !dbg !251
  store i8* %1759, i8** %1718, align 8, !dbg !252
  br label %1726, !dbg !253

1760:                                             ; preds = %1747
  %1761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 1, !dbg !254
  %1762 = load i16, i16* %1761, align 2, !dbg !254
  %1763 = and i16 %1762, 9216, !dbg !254
  %1764 = icmp ne i16 %1763, 0, !dbg !254
  br i1 %1764, label %1765, label %1766, !dbg !254

1765:                                             ; preds = %1760
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1704), !dbg !254
  br label %1948, !dbg !254

1766:                                             ; preds = %1760
  store i16 1, i16* %1761, align 2, !dbg !254
  br label %1948, !dbg !254

1767:                                             ; preds = %1741, %1692
  %1768 = load i16, i16* %1719, align 2, !dbg !255
  %1769 = icmp ule i16 %1768, 5, !dbg !256
  br i1 %1769, label %1852, label %1849, !dbg !257

1770:                                             ; preds = %1849, %1938
  %1771 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 1, !dbg !258
  %1772 = load i16, i16* %1771, align 2, !dbg !259
  %1773 = and i16 9216, %1772, !dbg !260
  %1774 = icmp eq i16 0, %1773, !dbg !261
  br i1 %1774, label %1775, label %1779, !dbg !262

1775:                                             ; preds = %1770
  %1776 = icmp ne i16 %1773, 0, !dbg !263
  br i1 %1776, label %1777, label %1778, !dbg !263

1777:                                             ; preds = %1775
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1704), !dbg !263
  br label %1779, !dbg !263

1778:                                             ; preds = %1775
  store i16 1, i16* %1771, align 2, !dbg !263
  br label %1779, !dbg !263

1779:                                             ; preds = %1777, %1778, %1770
  %1780 = load i32, i32* %1701, align 4, !dbg !264
  %1781 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 23, i32 5, !dbg !265
  %1782 = load i32, i32* %1781, align 4, !dbg !266
  %1783 = load i32, i32* %1717, align 4, !dbg !267
  %1784 = getelementptr i32, i32* %1708, i32 6, !dbg !268
  %1785 = load i32, i32* %1784, align 4, !dbg !269
  %1786 = icmp sge i32 %1783, %1785, !dbg !270
  br i1 %1786, label %1787, label %1827, !dbg !271

1787:                                             ; preds = %1779
  %1788 = load i8*, i8** %1718, align 8, !dbg !272
  %1789 = ptrtoint i8* %1788 to i64, !dbg !273
  %1790 = getelementptr i32, i32* %1708, i32 5, !dbg !274
  %1791 = load i32, i32* %1790, align 4, !dbg !275
  %1792 = zext i32 %1791 to i64, !dbg !276
  %1793 = add i64 %1789, %1792, !dbg !277
  %1794 = inttoptr i64 %1793 to i8*, !dbg !278
  store i8* %1794, i8** %1700, align 8, !dbg !279
  %1795 = load i32, i32* %1701, align 4, !dbg !280
  %1796 = icmp ult i32 %1795, 12, !dbg !281
  br i1 %1796, label %1797, label %1799, !dbg !282

1797:                                             ; preds = %1787
  %1798 = call i32 @sqlite3VdbeSerialGet(i8* %1794, i32 %1795, %struct.sqlite3_value* %1704), !dbg !283
  br label %1948, !dbg !284

1799:                                             ; preds = %1787
  %1800 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %1800, align 2, !dbg !286
  %1801 = getelementptr i16, i16* %1800, i32 1, !dbg !287
  store i16 514, i16* %1801, align 2, !dbg !288
  %1802 = load i32, i32* %1701, align 4, !dbg !289
  %1803 = sub i32 %1802, 12, !dbg !290
  %1804 = lshr i32 %1803, 1, !dbg !291
  %1805 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 4, !dbg !292
  store i32 %1804, i32* %1805, align 4, !dbg !293
  %1806 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 2, !dbg !294
  store i8 %1695, i8* %1806, align 1, !dbg !295
  %1807 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 5, !dbg !296
  %1808 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 7, !dbg !297
  %1809 = load i32, i32* %1808, align 4, !dbg !298
  %1810 = add i32 %1804, 2, !dbg !299
  %1811 = icmp slt i32 %1809, %1810, !dbg !300
  br i1 %1811, label %1812, label %1814, !dbg !301

1812:                                             ; preds = %1799
  store i16 1, i16* %1771, align 2, !dbg !302
  %1813 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1704, i32 %1810, i32 0), !dbg !303
  br label %1817, !dbg !304

1814:                                             ; preds = %1799
  %1815 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 6, !dbg !305
  %1816 = load i8*, i8** %1815, align 8, !dbg !306
  store i8* %1816, i8** %1807, align 8, !dbg !307
  br label %1817, !dbg !308

1817:                                             ; preds = %1814, %1812
  %1818 = zext i32 %1804 to i64, !dbg !309
  %1819 = load i8*, i8** %1807, align 8, !dbg !310
  %1820 = load i8*, i8** %1700, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1819, i8* %1820, i64 %1818, i1 false), !dbg !312
  %1821 = getelementptr i8, i8* %1819, i32 %1804, !dbg !313
  store i8 0, i8* %1821, align 1, !dbg !314
  %1822 = add i32 %1804, 1, !dbg !315
  %1823 = getelementptr i8, i8* %1819, i32 %1822, !dbg !316
  store i8 0, i8* %1823, align 1, !dbg !317
  %1824 = and i32 %1802, 1, !dbg !318
  %1825 = getelementptr i16, i16* %1800, i32 %1824, !dbg !319
  %1826 = load i16, i16* %1825, align 2, !dbg !320
  store i16 %1826, i16* %1771, align 2, !dbg !321
  br label %1948, !dbg !322

1827:                                             ; preds = %1779
  %1828 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 2, !dbg !323
  store i8 %1695, i8* %1828, align 1, !dbg !324
  %1829 = load i32, i32* %1701, align 4, !dbg !325
  %1830 = and i32 %1829, 1, !dbg !326
  %1831 = icmp eq i32 %1830, 0, !dbg !327
  %1832 = icmp sge i32 %1829, 12, !dbg !328
  %1833 = and i1 %1832, %1831, !dbg !329
  %1834 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1829), !dbg !330
  %1835 = icmp eq i32 %1834, 0, !dbg !331
  br i1 %1835, label %1847, label %1836, !dbg !332

1836:                                             ; preds = %1827
  %1837 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 12, i32 0, !dbg !333
  %1838 = load %struct.BtCursor*, %struct.BtCursor** %1837, align 8, !dbg !334
  %1839 = getelementptr i32, i32* %1708, i32 5, !dbg !335
  %1840 = load i32, i32* %1839, align 4, !dbg !336
  %1841 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1838, i32 %1840, i32 %1834, %struct.sqlite3_value* %1704), !dbg !337
  %1842 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 5, !dbg !338
  %1843 = load i8*, i8** %1842, align 8, !dbg !339
  %1844 = call i32 @sqlite3VdbeSerialGet(i8* %1843, i32 %1829, %struct.sqlite3_value* %1704), !dbg !340
  %1845 = load i16, i16* %1771, align 2, !dbg !341
  %1846 = and i16 %1845, -4097, !dbg !342
  store i16 %1846, i16* %1771, align 2, !dbg !343
  br label %1948, !dbg !344

1847:                                             ; preds = %1827
  %1848 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1829, %struct.sqlite3_value* %1704), !dbg !345
  br label %1948, !dbg !346

1849:                                             ; preds = %1767
  %1850 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 23, i32 5, !dbg !347
  %1851 = load i32, i32* %1850, align 4, !dbg !348
  store i32 %1851, i32* %1701, align 4, !dbg !349
  br label %1770, !dbg !350

1852:                                             ; preds = %1767
  %1853 = load i32, i32* %1715, align 4, !dbg !351
  %1854 = load i32, i32* %1708, align 4, !dbg !352
  %1855 = icmp ult i32 %1853, %1854, !dbg !353
  br i1 %1855, label %1856, label %1937, !dbg !354

1856:                                             ; preds = %1852
  %1857 = load i8*, i8** %1718, align 8, !dbg !355
  %1858 = icmp eq i8* %1857, null, !dbg !356
  br i1 %1858, label %1860, label %1859, !dbg !357

1859:                                             ; preds = %1856
  store i8* %1857, i8** %1700, align 8, !dbg !358
  br label %1860, !dbg !359

1860:                                             ; preds = %1859, %1856, %1740
  %1861 = alloca i32, align 4, !dbg !360
  %1862 = load i16, i16* %1719, align 2, !dbg !361
  %1863 = zext i16 %1862 to i32, !dbg !362
  store i32 %1863, i32* %1861, align 4, !dbg !363
  %1864 = alloca i64, align 8, !dbg !364
  %1865 = getelementptr i32, i32* %1708, i32 %1863, !dbg !365
  %1866 = load i32, i32* %1865, align 4, !dbg !366
  %1867 = zext i32 %1866 to i64, !dbg !367
  store i64 %1867, i64* %1864, align 4, !dbg !368
  %1868 = load i8*, i8** %1700, align 8, !dbg !369
  %1869 = load i32, i32* %1715, align 4, !dbg !370
  %1870 = alloca i8*, align 8, !dbg !371
  %1871 = getelementptr i8, i8* %1868, i32 %1869, !dbg !372
  store i8* %1871, i8** %1870, align 8, !dbg !373
  %1872 = load i32, i32* %1708, align 4, !dbg !374
  %1873 = getelementptr i8, i8* %1868, i32 %1872, !dbg !375
  br label %1874, !dbg !376

1874:                                             ; preds = %1881, %1860
  %1875 = load i32, i32* %1861, align 4, !dbg !377
  %1876 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1703, i32 0, i32 23, i32 %1875, !dbg !378
  %1877 = load i8*, i8** %1870, align 8, !dbg !379
  %1878 = load i8, i8* %1877, align 1, !dbg !380
  %1879 = zext i8 %1878 to i32, !dbg !381
  store i32 %1879, i32* %1701, align 4, !dbg !382
  store i32 %1879, i32* %1876, align 4, !dbg !383
  %1880 = icmp sgt i8 %1878, -1, !dbg !384
  br i1 %1880, label %1904, label %1895, !dbg !385

1881:                                             ; preds = %1895, %1904
  %1882 = load i32, i32* %1861, align 4, !dbg !386
  %1883 = add i32 %1882, 1, !dbg !387
  store i32 %1883, i32* %1861, align 4, !dbg !388
  %1884 = load i64, i64* %1864, align 4, !dbg !389
  %1885 = and i64 4294967295, %1884, !dbg !390
  %1886 = trunc i64 %1885 to i32, !dbg !391
  %1887 = getelementptr i32, i32* %1708, i32 %1883, !dbg !392
  store i32 %1886, i32* %1887, align 4, !dbg !393
  %1888 = load i32, i32* %1861, align 4, !dbg !394
  %1889 = icmp sle i32 %1888, 5, !dbg !395
  %1890 = load i8*, i8** %1870, align 8, !dbg !396
  %1891 = ptrtoint i8* %1890 to i64, !dbg !397
  %1892 = ptrtoint i8* %1873 to i64, !dbg !398
  %1893 = icmp ult i64 %1891, %1892, !dbg !399
  %1894 = and i1 %1889, %1893, !dbg !400
  br i1 %1894, label %1874, label %1913, !dbg !401

1895:                                             ; preds = %1874
  %1896 = load i8*, i8** %1870, align 8, !dbg !402
  %1897 = call i8 @sqlite3GetVarint32(i8* %1896, i32* %1701), !dbg !403
  %1898 = getelementptr i8, i8* %1896, i8 %1897, !dbg !404
  store i8* %1898, i8** %1870, align 8, !dbg !405
  %1899 = load i32, i32* %1701, align 4, !dbg !406
  store i32 %1899, i32* %1876, align 4, !dbg !407
  %1900 = load i64, i64* %1864, align 4, !dbg !408
  %1901 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1899), !dbg !409
  %1902 = zext i32 %1901 to i64, !dbg !410
  %1903 = add i64 %1900, %1902, !dbg !411
  store i64 %1903, i64* %1864, align 4, !dbg !412
  br label %1881, !dbg !413

1904:                                             ; preds = %1874
  %1905 = getelementptr i8, i8* %1877, i32 1, !dbg !414
  store i8* %1905, i8** %1870, align 8, !dbg !415
  %1906 = load i32, i32* %1701, align 4, !dbg !416
  %1907 = trunc i32 %1906 to i8, !dbg !417
  %1908 = getelementptr i8, i8* %4, i8 %1907, !dbg !418
  %1909 = load i8, i8* %1908, align 1, !dbg !419
  %1910 = zext i8 %1909 to i64, !dbg !420
  %1911 = load i64, i64* %1864, align 4, !dbg !421
  %1912 = add i64 %1911, %1910, !dbg !422
  store i64 %1912, i64* %1864, align 4, !dbg !423
  br label %1881, !dbg !424

1913:                                             ; preds = %1881
  %1914 = load i64, i64* %1864, align 4, !dbg !425
  %1915 = load i32, i32* %1716, align 4, !dbg !426
  %1916 = zext i32 %1915 to i64, !dbg !427
  %1917 = icmp uge i64 %1891, %1892, !dbg !428
  %1918 = icmp ugt i64 %1891, %1892, !dbg !429
  %1919 = icmp ne i64 %1914, %1916, !dbg !430
  %1920 = icmp ugt i64 %1914, %1916, !dbg !431
  %1921 = or i1 %1918, %1919, !dbg !432
  %1922 = and i1 %1917, %1921, !dbg !433
  %1923 = or i1 %1922, %1920, !dbg !434
  br i1 %1923, label %1924, label %1928, !dbg !435

1924:                                             ; preds = %1913
  %1925 = load i32, i32* %1708, align 4, !dbg !436
  %1926 = icmp eq i32 %1925, 0, !dbg !437
  br i1 %1926, label %1927, label %1928, !dbg !438

1927:                                             ; preds = %1924
  store i32 0, i32* %1861, align 4, !dbg !439
  store i8* %1873, i8** %1870, align 8, !dbg !440
  br label %1928, !dbg !441

1928:                                             ; preds = %1927, %1924, %1913
  %1929 = load i32, i32* %1861, align 4, !dbg !442
  %1930 = trunc i32 %1929 to i16, !dbg !443
  store i16 %1930, i16* %1719, align 2, !dbg !444
  %1931 = load i8*, i8** %1870, align 8, !dbg !445
  %1932 = ptrtoint i8* %1931 to i64, !dbg !446
  %1933 = load i8*, i8** %1700, align 8, !dbg !447
  %1934 = ptrtoint i8* %1933 to i64, !dbg !448
  %1935 = sub i64 %1932, %1934, !dbg !449
  %1936 = trunc i64 %1935 to i32, !dbg !450
  store i32 %1936, i32* %1715, align 4, !dbg !451
  br label %1938, !dbg !452

1937:                                             ; preds = %1852
  store i32 0, i32* %1701, align 4, !dbg !453
  br label %1938, !dbg !454

1938:                                             ; preds = %1928, %1937
  %1939 = load i16, i16* %1719, align 2, !dbg !455
  %1940 = icmp sle i16 %1939, 5, !dbg !456
  br i1 %1940, label %1941, label %1770, !dbg !457

1941:                                             ; preds = %1938
  %1942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1704, i32 0, i32 1, !dbg !458
  %1943 = load i16, i16* %1942, align 2, !dbg !458
  %1944 = and i16 %1943, 9216, !dbg !458
  %1945 = icmp ne i16 %1944, 0, !dbg !458
  br i1 %1945, label %1946, label %1947, !dbg !458

1946:                                             ; preds = %1941
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1704), !dbg !458
  br label %1948, !dbg !458

1947:                                             ; preds = %1941
  store i16 1, i16* %1942, align 2, !dbg !458
  br label %1948, !dbg !458

1948:                                             ; preds = %1946, %1947, %1817, %1797, %1836, %1847, %1765, %1766
  call void @llvm.stackrestore(i8* %1693), !dbg !459
  br label %1949, !dbg !74

1949:                                             ; preds = %1948, %14
  %1950 = call i8* @llvm.stacksave(), !dbg !167
  %1951 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %1952 = load i8, i8* %1951, align 1, !dbg !171
  %1953 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %1953, align 4, !dbg !173
  %1954 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %1955 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %1956 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1954, align 8, !dbg !176
  store %struct.VdbeCursor* %1956, %struct.VdbeCursor** %1955, align 8, !dbg !177
  %1957 = alloca i8*, align 8, !dbg !178
  %1958 = alloca i32, align 4, !dbg !179
  %1959 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1955, i32* %1953), !dbg !180
  %1960 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1955, align 8, !dbg !181
  %1961 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !182
  %1962 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 16, !dbg !183
  %1963 = load i16, i16* %1962, align 2, !dbg !184
  %1964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 19, !dbg !185
  %1965 = load i32*, i32** %1964, align 8, !dbg !186
  %1966 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 0, !dbg !187
  %1967 = load i8, i8* %1966, align 1, !dbg !188
  %1968 = icmp ne i8 %1967, 3, !dbg !189
  %1969 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 2, !dbg !190
  %1970 = load i8, i8* %1969, align 1, !dbg !191
  %1971 = icmp ne i8 %1970, 0, !dbg !192
  %1972 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 14, !dbg !193
  %1973 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 21, !dbg !194
  %1974 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 22, !dbg !195
  %1975 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 20, !dbg !196
  %1976 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 17, !dbg !197
  %1977 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 9, !dbg !198
  %1978 = load i32, i32* %1977, align 4, !dbg !199
  %1979 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %1980 = load i32, i32* %1979, align 4, !dbg !201
  %1981 = icmp ne i32 %1978, %1980, !dbg !202
  br i1 %1981, label %1982, label %2024, !dbg !203

1982:                                             ; preds = %1949
  br i1 %1971, label %2004, label %1999, !dbg !204

1983:                                             ; preds = %1999, %2006
  %1984 = load i32, i32* %1979, align 4, !dbg !205
  store i32 %1984, i32* %1977, align 4, !dbg !206
  %1985 = load i8*, i8** %1975, align 8, !dbg !207
  %1986 = load i8, i8* %1985, align 1, !dbg !208
  %1987 = icmp sgt i8 %1986, -1, !dbg !211
  br i1 %1987, label %1988, label %1990, !dbg !212

1988:                                             ; preds = %1983
  %1989 = zext i8 %1986 to i32, !dbg !213
  store i32 %1989, i32* %1965, align 4, !dbg !214
  store i32 1, i32* %1972, align 4, !dbg !215
  br label %1993, !dbg !216

1990:                                             ; preds = %1983
  %1991 = call i8 @sqlite3GetVarint32(i8* %1985, i32* %1965), !dbg !217
  %1992 = zext i8 %1991 to i32, !dbg !218
  store i32 %1992, i32* %1972, align 4, !dbg !219
  br label %1993, !dbg !220

1993:                                             ; preds = %1990, %1988
  store i16 0, i16* %1976, align 2, !dbg !221
  %1994 = load i32, i32* %1974, align 4, !dbg !222
  %1995 = load i32, i32* %1965, align 4, !dbg !223
  %1996 = icmp ult i32 %1994, %1995, !dbg !224
  br i1 %1996, label %1998, label %1997, !dbg !225

1997:                                             ; preds = %1993
  store i8* %1985, i8** %1957, align 8, !dbg !226
  br label %2117, !dbg !227

1998:                                             ; preds = %1993
  store i8* null, i8** %1975, align 8, !dbg !228
  store i32 0, i32* %1974, align 4, !dbg !229
  br label %2024, !dbg !230

1999:                                             ; preds = %1982
  %2000 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 12, i32 0, !dbg !231
  %2001 = load %struct.BtCursor*, %struct.BtCursor** %2000, align 8, !dbg !232
  %2002 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2001), !dbg !233
  store i32 %2002, i32* %1973, align 4, !dbg !234
  %2003 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2001, i32* %1974), !dbg !235
  store i8* %2003, i8** %1975, align 8, !dbg !236
  br label %1983, !dbg !237

2004:                                             ; preds = %1982
  %2005 = icmp eq i8 %1967, 3, !dbg !238
  br i1 %2005, label %2006, label %2017, !dbg !239

2006:                                             ; preds = %2004
  %2007 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 10, !dbg !240
  %2008 = load i32, i32* %2007, align 4, !dbg !241
  %2009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2008, !dbg !242
  %2010 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2009, i32 0, i32 1, !dbg !243
  %2011 = load i16, i16* %2010, align 2, !dbg !244
  %2012 = and i16 %2011, 16, !dbg !245
  %2013 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2009, i32 0, i32 4, !dbg !246
  %2014 = load i32, i32* %2013, align 4, !dbg !247
  store i32 %2014, i32* %1973, align 4, !dbg !248
  store i32 %2014, i32* %1974, align 4, !dbg !249
  %2015 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2009, i32 0, i32 5, !dbg !250
  %2016 = load i8*, i8** %2015, align 8, !dbg !251
  store i8* %2016, i8** %1975, align 8, !dbg !252
  br label %1983, !dbg !253

2017:                                             ; preds = %2004
  %2018 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 1, !dbg !254
  %2019 = load i16, i16* %2018, align 2, !dbg !254
  %2020 = and i16 %2019, 9216, !dbg !254
  %2021 = icmp ne i16 %2020, 0, !dbg !254
  br i1 %2021, label %2022, label %2023, !dbg !254

2022:                                             ; preds = %2017
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1961), !dbg !254
  br label %2205, !dbg !254

2023:                                             ; preds = %2017
  store i16 1, i16* %2018, align 2, !dbg !254
  br label %2205, !dbg !254

2024:                                             ; preds = %1998, %1949
  %2025 = load i16, i16* %1976, align 2, !dbg !255
  %2026 = icmp ule i16 %2025, 12, !dbg !256
  br i1 %2026, label %2109, label %2106, !dbg !257

2027:                                             ; preds = %2106, %2195
  %2028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 1, !dbg !258
  %2029 = load i16, i16* %2028, align 2, !dbg !259
  %2030 = and i16 9216, %2029, !dbg !260
  %2031 = icmp eq i16 0, %2030, !dbg !261
  br i1 %2031, label %2032, label %2036, !dbg !262

2032:                                             ; preds = %2027
  %2033 = icmp ne i16 %2030, 0, !dbg !263
  br i1 %2033, label %2034, label %2035, !dbg !263

2034:                                             ; preds = %2032
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1961), !dbg !263
  br label %2036, !dbg !263

2035:                                             ; preds = %2032
  store i16 1, i16* %2028, align 2, !dbg !263
  br label %2036, !dbg !263

2036:                                             ; preds = %2034, %2035, %2027
  %2037 = load i32, i32* %1958, align 4, !dbg !264
  %2038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 23, i32 12, !dbg !265
  %2039 = load i32, i32* %2038, align 4, !dbg !266
  %2040 = load i32, i32* %1974, align 4, !dbg !267
  %2041 = getelementptr i32, i32* %1965, i32 13, !dbg !268
  %2042 = load i32, i32* %2041, align 4, !dbg !269
  %2043 = icmp sge i32 %2040, %2042, !dbg !270
  br i1 %2043, label %2044, label %2084, !dbg !271

2044:                                             ; preds = %2036
  %2045 = load i8*, i8** %1975, align 8, !dbg !272
  %2046 = ptrtoint i8* %2045 to i64, !dbg !273
  %2047 = getelementptr i32, i32* %1965, i32 12, !dbg !274
  %2048 = load i32, i32* %2047, align 4, !dbg !275
  %2049 = zext i32 %2048 to i64, !dbg !276
  %2050 = add i64 %2046, %2049, !dbg !277
  %2051 = inttoptr i64 %2050 to i8*, !dbg !278
  store i8* %2051, i8** %1957, align 8, !dbg !279
  %2052 = load i32, i32* %1958, align 4, !dbg !280
  %2053 = icmp ult i32 %2052, 12, !dbg !281
  br i1 %2053, label %2054, label %2056, !dbg !282

2054:                                             ; preds = %2044
  %2055 = call i32 @sqlite3VdbeSerialGet(i8* %2051, i32 %2052, %struct.sqlite3_value* %1961), !dbg !283
  br label %2205, !dbg !284

2056:                                             ; preds = %2044
  %2057 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %2057, align 2, !dbg !286
  %2058 = getelementptr i16, i16* %2057, i32 1, !dbg !287
  store i16 514, i16* %2058, align 2, !dbg !288
  %2059 = load i32, i32* %1958, align 4, !dbg !289
  %2060 = sub i32 %2059, 12, !dbg !290
  %2061 = lshr i32 %2060, 1, !dbg !291
  %2062 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 4, !dbg !292
  store i32 %2061, i32* %2062, align 4, !dbg !293
  %2063 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 2, !dbg !294
  store i8 %1952, i8* %2063, align 1, !dbg !295
  %2064 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 5, !dbg !296
  %2065 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 7, !dbg !297
  %2066 = load i32, i32* %2065, align 4, !dbg !298
  %2067 = add i32 %2061, 2, !dbg !299
  %2068 = icmp slt i32 %2066, %2067, !dbg !300
  br i1 %2068, label %2069, label %2071, !dbg !301

2069:                                             ; preds = %2056
  store i16 1, i16* %2028, align 2, !dbg !302
  %2070 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1961, i32 %2067, i32 0), !dbg !303
  br label %2074, !dbg !304

2071:                                             ; preds = %2056
  %2072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 6, !dbg !305
  %2073 = load i8*, i8** %2072, align 8, !dbg !306
  store i8* %2073, i8** %2064, align 8, !dbg !307
  br label %2074, !dbg !308

2074:                                             ; preds = %2071, %2069
  %2075 = zext i32 %2061 to i64, !dbg !309
  %2076 = load i8*, i8** %2064, align 8, !dbg !310
  %2077 = load i8*, i8** %1957, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2076, i8* %2077, i64 %2075, i1 false), !dbg !312
  %2078 = getelementptr i8, i8* %2076, i32 %2061, !dbg !313
  store i8 0, i8* %2078, align 1, !dbg !314
  %2079 = add i32 %2061, 1, !dbg !315
  %2080 = getelementptr i8, i8* %2076, i32 %2079, !dbg !316
  store i8 0, i8* %2080, align 1, !dbg !317
  %2081 = and i32 %2059, 1, !dbg !318
  %2082 = getelementptr i16, i16* %2057, i32 %2081, !dbg !319
  %2083 = load i16, i16* %2082, align 2, !dbg !320
  store i16 %2083, i16* %2028, align 2, !dbg !321
  br label %2205, !dbg !322

2084:                                             ; preds = %2036
  %2085 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 2, !dbg !323
  store i8 %1952, i8* %2085, align 1, !dbg !324
  %2086 = load i32, i32* %1958, align 4, !dbg !325
  %2087 = and i32 %2086, 1, !dbg !326
  %2088 = icmp eq i32 %2087, 0, !dbg !327
  %2089 = icmp sge i32 %2086, 12, !dbg !328
  %2090 = and i1 %2089, %2088, !dbg !329
  %2091 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2086), !dbg !330
  %2092 = icmp eq i32 %2091, 0, !dbg !331
  br i1 %2092, label %2104, label %2093, !dbg !332

2093:                                             ; preds = %2084
  %2094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 12, i32 0, !dbg !333
  %2095 = load %struct.BtCursor*, %struct.BtCursor** %2094, align 8, !dbg !334
  %2096 = getelementptr i32, i32* %1965, i32 12, !dbg !335
  %2097 = load i32, i32* %2096, align 4, !dbg !336
  %2098 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2095, i32 %2097, i32 %2091, %struct.sqlite3_value* %1961), !dbg !337
  %2099 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 5, !dbg !338
  %2100 = load i8*, i8** %2099, align 8, !dbg !339
  %2101 = call i32 @sqlite3VdbeSerialGet(i8* %2100, i32 %2086, %struct.sqlite3_value* %1961), !dbg !340
  %2102 = load i16, i16* %2028, align 2, !dbg !341
  %2103 = and i16 %2102, -4097, !dbg !342
  store i16 %2103, i16* %2028, align 2, !dbg !343
  br label %2205, !dbg !344

2104:                                             ; preds = %2084
  %2105 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2086, %struct.sqlite3_value* %1961), !dbg !345
  br label %2205, !dbg !346

2106:                                             ; preds = %2024
  %2107 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 23, i32 12, !dbg !347
  %2108 = load i32, i32* %2107, align 4, !dbg !348
  store i32 %2108, i32* %1958, align 4, !dbg !349
  br label %2027, !dbg !350

2109:                                             ; preds = %2024
  %2110 = load i32, i32* %1972, align 4, !dbg !351
  %2111 = load i32, i32* %1965, align 4, !dbg !352
  %2112 = icmp ult i32 %2110, %2111, !dbg !353
  br i1 %2112, label %2113, label %2194, !dbg !354

2113:                                             ; preds = %2109
  %2114 = load i8*, i8** %1975, align 8, !dbg !355
  %2115 = icmp eq i8* %2114, null, !dbg !356
  br i1 %2115, label %2117, label %2116, !dbg !357

2116:                                             ; preds = %2113
  store i8* %2114, i8** %1957, align 8, !dbg !358
  br label %2117, !dbg !359

2117:                                             ; preds = %2116, %2113, %1997
  %2118 = alloca i32, align 4, !dbg !360
  %2119 = load i16, i16* %1976, align 2, !dbg !361
  %2120 = zext i16 %2119 to i32, !dbg !362
  store i32 %2120, i32* %2118, align 4, !dbg !363
  %2121 = alloca i64, align 8, !dbg !364
  %2122 = getelementptr i32, i32* %1965, i32 %2120, !dbg !365
  %2123 = load i32, i32* %2122, align 4, !dbg !366
  %2124 = zext i32 %2123 to i64, !dbg !367
  store i64 %2124, i64* %2121, align 4, !dbg !368
  %2125 = load i8*, i8** %1957, align 8, !dbg !369
  %2126 = load i32, i32* %1972, align 4, !dbg !370
  %2127 = alloca i8*, align 8, !dbg !371
  %2128 = getelementptr i8, i8* %2125, i32 %2126, !dbg !372
  store i8* %2128, i8** %2127, align 8, !dbg !373
  %2129 = load i32, i32* %1965, align 4, !dbg !374
  %2130 = getelementptr i8, i8* %2125, i32 %2129, !dbg !375
  br label %2131, !dbg !376

2131:                                             ; preds = %2138, %2117
  %2132 = load i32, i32* %2118, align 4, !dbg !377
  %2133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1960, i32 0, i32 23, i32 %2132, !dbg !378
  %2134 = load i8*, i8** %2127, align 8, !dbg !379
  %2135 = load i8, i8* %2134, align 1, !dbg !380
  %2136 = zext i8 %2135 to i32, !dbg !381
  store i32 %2136, i32* %1958, align 4, !dbg !382
  store i32 %2136, i32* %2133, align 4, !dbg !383
  %2137 = icmp sgt i8 %2135, -1, !dbg !384
  br i1 %2137, label %2161, label %2152, !dbg !385

2138:                                             ; preds = %2152, %2161
  %2139 = load i32, i32* %2118, align 4, !dbg !386
  %2140 = add i32 %2139, 1, !dbg !387
  store i32 %2140, i32* %2118, align 4, !dbg !388
  %2141 = load i64, i64* %2121, align 4, !dbg !389
  %2142 = and i64 4294967295, %2141, !dbg !390
  %2143 = trunc i64 %2142 to i32, !dbg !391
  %2144 = getelementptr i32, i32* %1965, i32 %2140, !dbg !392
  store i32 %2143, i32* %2144, align 4, !dbg !393
  %2145 = load i32, i32* %2118, align 4, !dbg !394
  %2146 = icmp sle i32 %2145, 12, !dbg !395
  %2147 = load i8*, i8** %2127, align 8, !dbg !396
  %2148 = ptrtoint i8* %2147 to i64, !dbg !397
  %2149 = ptrtoint i8* %2130 to i64, !dbg !398
  %2150 = icmp ult i64 %2148, %2149, !dbg !399
  %2151 = and i1 %2146, %2150, !dbg !400
  br i1 %2151, label %2131, label %2170, !dbg !401

2152:                                             ; preds = %2131
  %2153 = load i8*, i8** %2127, align 8, !dbg !402
  %2154 = call i8 @sqlite3GetVarint32(i8* %2153, i32* %1958), !dbg !403
  %2155 = getelementptr i8, i8* %2153, i8 %2154, !dbg !404
  store i8* %2155, i8** %2127, align 8, !dbg !405
  %2156 = load i32, i32* %1958, align 4, !dbg !406
  store i32 %2156, i32* %2133, align 4, !dbg !407
  %2157 = load i64, i64* %2121, align 4, !dbg !408
  %2158 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2156), !dbg !409
  %2159 = zext i32 %2158 to i64, !dbg !410
  %2160 = add i64 %2157, %2159, !dbg !411
  store i64 %2160, i64* %2121, align 4, !dbg !412
  br label %2138, !dbg !413

2161:                                             ; preds = %2131
  %2162 = getelementptr i8, i8* %2134, i32 1, !dbg !414
  store i8* %2162, i8** %2127, align 8, !dbg !415
  %2163 = load i32, i32* %1958, align 4, !dbg !416
  %2164 = trunc i32 %2163 to i8, !dbg !417
  %2165 = getelementptr i8, i8* %4, i8 %2164, !dbg !418
  %2166 = load i8, i8* %2165, align 1, !dbg !419
  %2167 = zext i8 %2166 to i64, !dbg !420
  %2168 = load i64, i64* %2121, align 4, !dbg !421
  %2169 = add i64 %2168, %2167, !dbg !422
  store i64 %2169, i64* %2121, align 4, !dbg !423
  br label %2138, !dbg !424

2170:                                             ; preds = %2138
  %2171 = load i64, i64* %2121, align 4, !dbg !425
  %2172 = load i32, i32* %1973, align 4, !dbg !426
  %2173 = zext i32 %2172 to i64, !dbg !427
  %2174 = icmp uge i64 %2148, %2149, !dbg !428
  %2175 = icmp ugt i64 %2148, %2149, !dbg !429
  %2176 = icmp ne i64 %2171, %2173, !dbg !430
  %2177 = icmp ugt i64 %2171, %2173, !dbg !431
  %2178 = or i1 %2175, %2176, !dbg !432
  %2179 = and i1 %2174, %2178, !dbg !433
  %2180 = or i1 %2179, %2177, !dbg !434
  br i1 %2180, label %2181, label %2185, !dbg !435

2181:                                             ; preds = %2170
  %2182 = load i32, i32* %1965, align 4, !dbg !436
  %2183 = icmp eq i32 %2182, 0, !dbg !437
  br i1 %2183, label %2184, label %2185, !dbg !438

2184:                                             ; preds = %2181
  store i32 0, i32* %2118, align 4, !dbg !439
  store i8* %2130, i8** %2127, align 8, !dbg !440
  br label %2185, !dbg !441

2185:                                             ; preds = %2184, %2181, %2170
  %2186 = load i32, i32* %2118, align 4, !dbg !442
  %2187 = trunc i32 %2186 to i16, !dbg !443
  store i16 %2187, i16* %1976, align 2, !dbg !444
  %2188 = load i8*, i8** %2127, align 8, !dbg !445
  %2189 = ptrtoint i8* %2188 to i64, !dbg !446
  %2190 = load i8*, i8** %1957, align 8, !dbg !447
  %2191 = ptrtoint i8* %2190 to i64, !dbg !448
  %2192 = sub i64 %2189, %2191, !dbg !449
  %2193 = trunc i64 %2192 to i32, !dbg !450
  store i32 %2193, i32* %1972, align 4, !dbg !451
  br label %2195, !dbg !452

2194:                                             ; preds = %2109
  store i32 0, i32* %1958, align 4, !dbg !453
  br label %2195, !dbg !454

2195:                                             ; preds = %2185, %2194
  %2196 = load i16, i16* %1976, align 2, !dbg !455
  %2197 = icmp sle i16 %2196, 12, !dbg !456
  br i1 %2197, label %2198, label %2027, !dbg !457

2198:                                             ; preds = %2195
  %2199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1961, i32 0, i32 1, !dbg !458
  %2200 = load i16, i16* %2199, align 2, !dbg !458
  %2201 = and i16 %2200, 9216, !dbg !458
  %2202 = icmp ne i16 %2201, 0, !dbg !458
  br i1 %2202, label %2203, label %2204, !dbg !458

2203:                                             ; preds = %2198
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1961), !dbg !458
  br label %2205, !dbg !458

2204:                                             ; preds = %2198
  store i16 1, i16* %2199, align 2, !dbg !458
  br label %2205, !dbg !458

2205:                                             ; preds = %2203, %2204, %2074, %2054, %2093, %2104, %2022, %2023
  call void @llvm.stackrestore(i8* %1950), !dbg !459
  br label %2206, !dbg !74

2206:                                             ; preds = %14, %2205, %14
  %2207 = call i8* @llvm.stacksave(), !dbg !167
  %2208 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %2209 = load i8, i8* %2208, align 1, !dbg !171
  %2210 = alloca i32, align 4, !dbg !172
  store i32 4, i32* %2210, align 4, !dbg !173
  %2211 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !174
  %2212 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %2213 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2211, align 8, !dbg !176
  store %struct.VdbeCursor* %2213, %struct.VdbeCursor** %2212, align 8, !dbg !177
  %2214 = alloca i8*, align 8, !dbg !178
  %2215 = alloca i32, align 4, !dbg !179
  %2216 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2212, i32* %2210), !dbg !180
  %2217 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2212, align 8, !dbg !181
  %2218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !182
  %2219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 16, !dbg !183
  %2220 = load i16, i16* %2219, align 2, !dbg !184
  %2221 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 19, !dbg !185
  %2222 = load i32*, i32** %2221, align 8, !dbg !186
  %2223 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 0, !dbg !187
  %2224 = load i8, i8* %2223, align 1, !dbg !188
  %2225 = icmp ne i8 %2224, 3, !dbg !189
  %2226 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 2, !dbg !190
  %2227 = load i8, i8* %2226, align 1, !dbg !191
  %2228 = icmp ne i8 %2227, 0, !dbg !192
  %2229 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 14, !dbg !193
  %2230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 21, !dbg !194
  %2231 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 22, !dbg !195
  %2232 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 20, !dbg !196
  %2233 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 17, !dbg !197
  %2234 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 9, !dbg !198
  %2235 = load i32, i32* %2234, align 4, !dbg !199
  %2236 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %2237 = load i32, i32* %2236, align 4, !dbg !201
  %2238 = icmp ne i32 %2235, %2237, !dbg !202
  br i1 %2238, label %2239, label %2281, !dbg !203

2239:                                             ; preds = %2206
  br i1 %2228, label %2261, label %2256, !dbg !204

2240:                                             ; preds = %2256, %2263
  %2241 = load i32, i32* %2236, align 4, !dbg !205
  store i32 %2241, i32* %2234, align 4, !dbg !206
  %2242 = load i8*, i8** %2232, align 8, !dbg !207
  %2243 = load i8, i8* %2242, align 1, !dbg !208
  %2244 = icmp sgt i8 %2243, -1, !dbg !211
  br i1 %2244, label %2245, label %2247, !dbg !212

2245:                                             ; preds = %2240
  %2246 = zext i8 %2243 to i32, !dbg !213
  store i32 %2246, i32* %2222, align 4, !dbg !214
  store i32 1, i32* %2229, align 4, !dbg !215
  br label %2250, !dbg !216

2247:                                             ; preds = %2240
  %2248 = call i8 @sqlite3GetVarint32(i8* %2242, i32* %2222), !dbg !217
  %2249 = zext i8 %2248 to i32, !dbg !218
  store i32 %2249, i32* %2229, align 4, !dbg !219
  br label %2250, !dbg !220

2250:                                             ; preds = %2247, %2245
  store i16 0, i16* %2233, align 2, !dbg !221
  %2251 = load i32, i32* %2231, align 4, !dbg !222
  %2252 = load i32, i32* %2222, align 4, !dbg !223
  %2253 = icmp ult i32 %2251, %2252, !dbg !224
  br i1 %2253, label %2255, label %2254, !dbg !225

2254:                                             ; preds = %2250
  store i8* %2242, i8** %2214, align 8, !dbg !226
  br label %2374, !dbg !227

2255:                                             ; preds = %2250
  store i8* null, i8** %2232, align 8, !dbg !228
  store i32 0, i32* %2231, align 4, !dbg !229
  br label %2281, !dbg !230

2256:                                             ; preds = %2239
  %2257 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 12, i32 0, !dbg !231
  %2258 = load %struct.BtCursor*, %struct.BtCursor** %2257, align 8, !dbg !232
  %2259 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2258), !dbg !233
  store i32 %2259, i32* %2230, align 4, !dbg !234
  %2260 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2258, i32* %2231), !dbg !235
  store i8* %2260, i8** %2232, align 8, !dbg !236
  br label %2240, !dbg !237

2261:                                             ; preds = %2239
  %2262 = icmp eq i8 %2224, 3, !dbg !238
  br i1 %2262, label %2263, label %2274, !dbg !239

2263:                                             ; preds = %2261
  %2264 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 10, !dbg !240
  %2265 = load i32, i32* %2264, align 4, !dbg !241
  %2266 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2265, !dbg !242
  %2267 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2266, i32 0, i32 1, !dbg !243
  %2268 = load i16, i16* %2267, align 2, !dbg !244
  %2269 = and i16 %2268, 16, !dbg !245
  %2270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2266, i32 0, i32 4, !dbg !246
  %2271 = load i32, i32* %2270, align 4, !dbg !247
  store i32 %2271, i32* %2230, align 4, !dbg !248
  store i32 %2271, i32* %2231, align 4, !dbg !249
  %2272 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2266, i32 0, i32 5, !dbg !250
  %2273 = load i8*, i8** %2272, align 8, !dbg !251
  store i8* %2273, i8** %2232, align 8, !dbg !252
  br label %2240, !dbg !253

2274:                                             ; preds = %2261
  %2275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 1, !dbg !254
  %2276 = load i16, i16* %2275, align 2, !dbg !254
  %2277 = and i16 %2276, 9216, !dbg !254
  %2278 = icmp ne i16 %2277, 0, !dbg !254
  br i1 %2278, label %2279, label %2280, !dbg !254

2279:                                             ; preds = %2274
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2218), !dbg !254
  br label %2462, !dbg !254

2280:                                             ; preds = %2274
  store i16 1, i16* %2275, align 2, !dbg !254
  br label %2462, !dbg !254

2281:                                             ; preds = %2255, %2206
  %2282 = load i16, i16* %2233, align 2, !dbg !255
  %2283 = icmp ule i16 %2282, 13, !dbg !256
  br i1 %2283, label %2366, label %2363, !dbg !257

2284:                                             ; preds = %2363, %2452
  %2285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 1, !dbg !258
  %2286 = load i16, i16* %2285, align 2, !dbg !259
  %2287 = and i16 9216, %2286, !dbg !260
  %2288 = icmp eq i16 0, %2287, !dbg !261
  br i1 %2288, label %2289, label %2293, !dbg !262

2289:                                             ; preds = %2284
  %2290 = icmp ne i16 %2287, 0, !dbg !263
  br i1 %2290, label %2291, label %2292, !dbg !263

2291:                                             ; preds = %2289
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2218), !dbg !263
  br label %2293, !dbg !263

2292:                                             ; preds = %2289
  store i16 1, i16* %2285, align 2, !dbg !263
  br label %2293, !dbg !263

2293:                                             ; preds = %2291, %2292, %2284
  %2294 = load i32, i32* %2215, align 4, !dbg !264
  %2295 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 23, i32 13, !dbg !265
  %2296 = load i32, i32* %2295, align 4, !dbg !266
  %2297 = load i32, i32* %2231, align 4, !dbg !267
  %2298 = getelementptr i32, i32* %2222, i32 14, !dbg !268
  %2299 = load i32, i32* %2298, align 4, !dbg !269
  %2300 = icmp sge i32 %2297, %2299, !dbg !270
  br i1 %2300, label %2301, label %2341, !dbg !271

2301:                                             ; preds = %2293
  %2302 = load i8*, i8** %2232, align 8, !dbg !272
  %2303 = ptrtoint i8* %2302 to i64, !dbg !273
  %2304 = getelementptr i32, i32* %2222, i32 13, !dbg !274
  %2305 = load i32, i32* %2304, align 4, !dbg !275
  %2306 = zext i32 %2305 to i64, !dbg !276
  %2307 = add i64 %2303, %2306, !dbg !277
  %2308 = inttoptr i64 %2307 to i8*, !dbg !278
  store i8* %2308, i8** %2214, align 8, !dbg !279
  %2309 = load i32, i32* %2215, align 4, !dbg !280
  %2310 = icmp ult i32 %2309, 12, !dbg !281
  br i1 %2310, label %2311, label %2313, !dbg !282

2311:                                             ; preds = %2301
  %2312 = call i32 @sqlite3VdbeSerialGet(i8* %2308, i32 %2309, %struct.sqlite3_value* %2218), !dbg !283
  br label %2462, !dbg !284

2313:                                             ; preds = %2301
  %2314 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %2314, align 2, !dbg !286
  %2315 = getelementptr i16, i16* %2314, i32 1, !dbg !287
  store i16 514, i16* %2315, align 2, !dbg !288
  %2316 = load i32, i32* %2215, align 4, !dbg !289
  %2317 = sub i32 %2316, 12, !dbg !290
  %2318 = lshr i32 %2317, 1, !dbg !291
  %2319 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 4, !dbg !292
  store i32 %2318, i32* %2319, align 4, !dbg !293
  %2320 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 2, !dbg !294
  store i8 %2209, i8* %2320, align 1, !dbg !295
  %2321 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 5, !dbg !296
  %2322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 7, !dbg !297
  %2323 = load i32, i32* %2322, align 4, !dbg !298
  %2324 = add i32 %2318, 2, !dbg !299
  %2325 = icmp slt i32 %2323, %2324, !dbg !300
  br i1 %2325, label %2326, label %2328, !dbg !301

2326:                                             ; preds = %2313
  store i16 1, i16* %2285, align 2, !dbg !302
  %2327 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2218, i32 %2324, i32 0), !dbg !303
  br label %2331, !dbg !304

2328:                                             ; preds = %2313
  %2329 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 6, !dbg !305
  %2330 = load i8*, i8** %2329, align 8, !dbg !306
  store i8* %2330, i8** %2321, align 8, !dbg !307
  br label %2331, !dbg !308

2331:                                             ; preds = %2328, %2326
  %2332 = zext i32 %2318 to i64, !dbg !309
  %2333 = load i8*, i8** %2321, align 8, !dbg !310
  %2334 = load i8*, i8** %2214, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2333, i8* %2334, i64 %2332, i1 false), !dbg !312
  %2335 = getelementptr i8, i8* %2333, i32 %2318, !dbg !313
  store i8 0, i8* %2335, align 1, !dbg !314
  %2336 = add i32 %2318, 1, !dbg !315
  %2337 = getelementptr i8, i8* %2333, i32 %2336, !dbg !316
  store i8 0, i8* %2337, align 1, !dbg !317
  %2338 = and i32 %2316, 1, !dbg !318
  %2339 = getelementptr i16, i16* %2314, i32 %2338, !dbg !319
  %2340 = load i16, i16* %2339, align 2, !dbg !320
  store i16 %2340, i16* %2285, align 2, !dbg !321
  br label %2462, !dbg !322

2341:                                             ; preds = %2293
  %2342 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 2, !dbg !323
  store i8 %2209, i8* %2342, align 1, !dbg !324
  %2343 = load i32, i32* %2215, align 4, !dbg !325
  %2344 = and i32 %2343, 1, !dbg !326
  %2345 = icmp eq i32 %2344, 0, !dbg !327
  %2346 = icmp sge i32 %2343, 12, !dbg !328
  %2347 = and i1 %2346, %2345, !dbg !329
  %2348 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2343), !dbg !330
  %2349 = icmp eq i32 %2348, 0, !dbg !331
  br i1 %2349, label %2361, label %2350, !dbg !332

2350:                                             ; preds = %2341
  %2351 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 12, i32 0, !dbg !333
  %2352 = load %struct.BtCursor*, %struct.BtCursor** %2351, align 8, !dbg !334
  %2353 = getelementptr i32, i32* %2222, i32 13, !dbg !335
  %2354 = load i32, i32* %2353, align 4, !dbg !336
  %2355 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2352, i32 %2354, i32 %2348, %struct.sqlite3_value* %2218), !dbg !337
  %2356 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 5, !dbg !338
  %2357 = load i8*, i8** %2356, align 8, !dbg !339
  %2358 = call i32 @sqlite3VdbeSerialGet(i8* %2357, i32 %2343, %struct.sqlite3_value* %2218), !dbg !340
  %2359 = load i16, i16* %2285, align 2, !dbg !341
  %2360 = and i16 %2359, -4097, !dbg !342
  store i16 %2360, i16* %2285, align 2, !dbg !343
  br label %2462, !dbg !344

2361:                                             ; preds = %2341
  %2362 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2343, %struct.sqlite3_value* %2218), !dbg !345
  br label %2462, !dbg !346

2363:                                             ; preds = %2281
  %2364 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 23, i32 13, !dbg !347
  %2365 = load i32, i32* %2364, align 4, !dbg !348
  store i32 %2365, i32* %2215, align 4, !dbg !349
  br label %2284, !dbg !350

2366:                                             ; preds = %2281
  %2367 = load i32, i32* %2229, align 4, !dbg !351
  %2368 = load i32, i32* %2222, align 4, !dbg !352
  %2369 = icmp ult i32 %2367, %2368, !dbg !353
  br i1 %2369, label %2370, label %2451, !dbg !354

2370:                                             ; preds = %2366
  %2371 = load i8*, i8** %2232, align 8, !dbg !355
  %2372 = icmp eq i8* %2371, null, !dbg !356
  br i1 %2372, label %2374, label %2373, !dbg !357

2373:                                             ; preds = %2370
  store i8* %2371, i8** %2214, align 8, !dbg !358
  br label %2374, !dbg !359

2374:                                             ; preds = %2373, %2370, %2254
  %2375 = alloca i32, align 4, !dbg !360
  %2376 = load i16, i16* %2233, align 2, !dbg !361
  %2377 = zext i16 %2376 to i32, !dbg !362
  store i32 %2377, i32* %2375, align 4, !dbg !363
  %2378 = alloca i64, align 8, !dbg !364
  %2379 = getelementptr i32, i32* %2222, i32 %2377, !dbg !365
  %2380 = load i32, i32* %2379, align 4, !dbg !366
  %2381 = zext i32 %2380 to i64, !dbg !367
  store i64 %2381, i64* %2378, align 4, !dbg !368
  %2382 = load i8*, i8** %2214, align 8, !dbg !369
  %2383 = load i32, i32* %2229, align 4, !dbg !370
  %2384 = alloca i8*, align 8, !dbg !371
  %2385 = getelementptr i8, i8* %2382, i32 %2383, !dbg !372
  store i8* %2385, i8** %2384, align 8, !dbg !373
  %2386 = load i32, i32* %2222, align 4, !dbg !374
  %2387 = getelementptr i8, i8* %2382, i32 %2386, !dbg !375
  br label %2388, !dbg !376

2388:                                             ; preds = %2395, %2374
  %2389 = load i32, i32* %2375, align 4, !dbg !377
  %2390 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2217, i32 0, i32 23, i32 %2389, !dbg !378
  %2391 = load i8*, i8** %2384, align 8, !dbg !379
  %2392 = load i8, i8* %2391, align 1, !dbg !380
  %2393 = zext i8 %2392 to i32, !dbg !381
  store i32 %2393, i32* %2215, align 4, !dbg !382
  store i32 %2393, i32* %2390, align 4, !dbg !383
  %2394 = icmp sgt i8 %2392, -1, !dbg !384
  br i1 %2394, label %2418, label %2409, !dbg !385

2395:                                             ; preds = %2409, %2418
  %2396 = load i32, i32* %2375, align 4, !dbg !386
  %2397 = add i32 %2396, 1, !dbg !387
  store i32 %2397, i32* %2375, align 4, !dbg !388
  %2398 = load i64, i64* %2378, align 4, !dbg !389
  %2399 = and i64 4294967295, %2398, !dbg !390
  %2400 = trunc i64 %2399 to i32, !dbg !391
  %2401 = getelementptr i32, i32* %2222, i32 %2397, !dbg !392
  store i32 %2400, i32* %2401, align 4, !dbg !393
  %2402 = load i32, i32* %2375, align 4, !dbg !394
  %2403 = icmp sle i32 %2402, 13, !dbg !395
  %2404 = load i8*, i8** %2384, align 8, !dbg !396
  %2405 = ptrtoint i8* %2404 to i64, !dbg !397
  %2406 = ptrtoint i8* %2387 to i64, !dbg !398
  %2407 = icmp ult i64 %2405, %2406, !dbg !399
  %2408 = and i1 %2403, %2407, !dbg !400
  br i1 %2408, label %2388, label %2427, !dbg !401

2409:                                             ; preds = %2388
  %2410 = load i8*, i8** %2384, align 8, !dbg !402
  %2411 = call i8 @sqlite3GetVarint32(i8* %2410, i32* %2215), !dbg !403
  %2412 = getelementptr i8, i8* %2410, i8 %2411, !dbg !404
  store i8* %2412, i8** %2384, align 8, !dbg !405
  %2413 = load i32, i32* %2215, align 4, !dbg !406
  store i32 %2413, i32* %2390, align 4, !dbg !407
  %2414 = load i64, i64* %2378, align 4, !dbg !408
  %2415 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2413), !dbg !409
  %2416 = zext i32 %2415 to i64, !dbg !410
  %2417 = add i64 %2414, %2416, !dbg !411
  store i64 %2417, i64* %2378, align 4, !dbg !412
  br label %2395, !dbg !413

2418:                                             ; preds = %2388
  %2419 = getelementptr i8, i8* %2391, i32 1, !dbg !414
  store i8* %2419, i8** %2384, align 8, !dbg !415
  %2420 = load i32, i32* %2215, align 4, !dbg !416
  %2421 = trunc i32 %2420 to i8, !dbg !417
  %2422 = getelementptr i8, i8* %4, i8 %2421, !dbg !418
  %2423 = load i8, i8* %2422, align 1, !dbg !419
  %2424 = zext i8 %2423 to i64, !dbg !420
  %2425 = load i64, i64* %2378, align 4, !dbg !421
  %2426 = add i64 %2425, %2424, !dbg !422
  store i64 %2426, i64* %2378, align 4, !dbg !423
  br label %2395, !dbg !424

2427:                                             ; preds = %2395
  %2428 = load i64, i64* %2378, align 4, !dbg !425
  %2429 = load i32, i32* %2230, align 4, !dbg !426
  %2430 = zext i32 %2429 to i64, !dbg !427
  %2431 = icmp uge i64 %2405, %2406, !dbg !428
  %2432 = icmp ugt i64 %2405, %2406, !dbg !429
  %2433 = icmp ne i64 %2428, %2430, !dbg !430
  %2434 = icmp ugt i64 %2428, %2430, !dbg !431
  %2435 = or i1 %2432, %2433, !dbg !432
  %2436 = and i1 %2431, %2435, !dbg !433
  %2437 = or i1 %2436, %2434, !dbg !434
  br i1 %2437, label %2438, label %2442, !dbg !435

2438:                                             ; preds = %2427
  %2439 = load i32, i32* %2222, align 4, !dbg !436
  %2440 = icmp eq i32 %2439, 0, !dbg !437
  br i1 %2440, label %2441, label %2442, !dbg !438

2441:                                             ; preds = %2438
  store i32 0, i32* %2375, align 4, !dbg !439
  store i8* %2387, i8** %2384, align 8, !dbg !440
  br label %2442, !dbg !441

2442:                                             ; preds = %2441, %2438, %2427
  %2443 = load i32, i32* %2375, align 4, !dbg !442
  %2444 = trunc i32 %2443 to i16, !dbg !443
  store i16 %2444, i16* %2233, align 2, !dbg !444
  %2445 = load i8*, i8** %2384, align 8, !dbg !445
  %2446 = ptrtoint i8* %2445 to i64, !dbg !446
  %2447 = load i8*, i8** %2214, align 8, !dbg !447
  %2448 = ptrtoint i8* %2447 to i64, !dbg !448
  %2449 = sub i64 %2446, %2448, !dbg !449
  %2450 = trunc i64 %2449 to i32, !dbg !450
  store i32 %2450, i32* %2229, align 4, !dbg !451
  br label %2452, !dbg !452

2451:                                             ; preds = %2366
  store i32 0, i32* %2215, align 4, !dbg !453
  br label %2452, !dbg !454

2452:                                             ; preds = %2442, %2451
  %2453 = load i16, i16* %2233, align 2, !dbg !455
  %2454 = icmp sle i16 %2453, 13, !dbg !456
  br i1 %2454, label %2455, label %2284, !dbg !457

2455:                                             ; preds = %2452
  %2456 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2218, i32 0, i32 1, !dbg !458
  %2457 = load i16, i16* %2456, align 2, !dbg !458
  %2458 = and i16 %2457, 9216, !dbg !458
  %2459 = icmp ne i16 %2458, 0, !dbg !458
  br i1 %2459, label %2460, label %2461, !dbg !458

2460:                                             ; preds = %2455
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2218), !dbg !458
  br label %2462, !dbg !458

2461:                                             ; preds = %2455
  store i16 1, i16* %2456, align 2, !dbg !458
  br label %2462, !dbg !458

2462:                                             ; preds = %2460, %2461, %2331, %2311, %2350, %2361, %2279, %2280
  call void @llvm.stackrestore(i8* %2207), !dbg !459
  br label %2463, !dbg !74

2463:                                             ; preds = %14, %2462, %14
  %2464 = call i8* @llvm.stacksave(), !dbg !634
  %2465 = alloca i64, align 8, !dbg !637
  %2466 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 27, !dbg !638
  %2467 = call i8* @llvm.stacksave(), !dbg !639
  %2468 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2466, i32 0, i32 4, !dbg !79
  %2469 = load i32, i32* %2468, align 4, !dbg !82
  %2470 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2469, !dbg !83
  %2471 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2470, i32 0, i32 1, !dbg !639
  %2472 = load i16, i16* %2471, align 2, !dbg !639
  %2473 = and i16 %2472, 9216, !dbg !639
  %2474 = icmp ne i16 %2473, 0, !dbg !639
  %2475 = alloca %struct.sqlite3_value*, align 8, !dbg !639
  br i1 %2474, label %2476, label %2478, !dbg !639

2476:                                             ; preds = %2463
  %2477 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %2470), !dbg !639
  store %struct.sqlite3_value* %2477, %struct.sqlite3_value** %2475, align 8, !dbg !639
  br label %2479, !dbg !639

2478:                                             ; preds = %2463
  store i16 4, i16* %2471, align 2, !dbg !639
  store %struct.sqlite3_value* %2470, %struct.sqlite3_value** %2475, align 8, !dbg !639
  br label %2479, !dbg !639

2479:                                             ; preds = %2478, %2476
  %2480 = load %struct.sqlite3_value*, %struct.sqlite3_value** %2475, align 8, !dbg !639
  call void @llvm.stackrestore(i8* %2467), !dbg !639
  %2481 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !640
  %2482 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2481, align 8, !dbg !641
  %2483 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2482, i32 0, i32 2, !dbg !642
  %2484 = load i8, i8* %2483, align 1, !dbg !643
  %2485 = icmp ne i8 %2484, 0, !dbg !644
  br i1 %2485, label %2486, label %2488, !dbg !645

2486:                                             ; preds = %2479
  %2487 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2480, i32 0, i32 1, !dbg !646
  store i16 1, i16* %2487, align 2, !dbg !647
  br label %2513, !dbg !648

2488:                                             ; preds = %2479
  %2489 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2482, i32 0, i32 3, !dbg !649
  %2490 = load i8, i8* %2489, align 1, !dbg !650
  %2491 = icmp ne i8 %2490, 0, !dbg !651
  br i1 %2491, label %2492, label %2495, !dbg !652

2492:                                             ; preds = %2488
  %2493 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2482, i32 0, i32 18, !dbg !653
  %2494 = load i64, i64* %2493, align 4, !dbg !654
  store i64 %2494, i64* %2465, align 4, !dbg !655
  br label %2509, !dbg !656

2495:                                             ; preds = %2488
  %2496 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2482, i32 0, i32 0, !dbg !657
  %2497 = load i8, i8* %2496, align 1, !dbg !658
  %2498 = icmp eq i8 %2497, 2, !dbg !659
  br i1 %2498, label %2509, label %2499, !dbg !660

2499:                                             ; preds = %2495
  %2500 = call i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor* %2482), !dbg !661
  %2501 = load i8, i8* %2483, align 1, !dbg !662
  %2502 = icmp ne i8 %2501, 0, !dbg !663
  br i1 %2502, label %2503, label %2505, !dbg !664

2503:                                             ; preds = %2499
  %2504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2480, i32 0, i32 1, !dbg !665
  store i16 1, i16* %2504, align 2, !dbg !666
  br label %2513, !dbg !667

2505:                                             ; preds = %2499
  %2506 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2482, i32 0, i32 12, i32 0, !dbg !668
  %2507 = load %struct.BtCursor*, %struct.BtCursor** %2506, align 8, !dbg !669
  %2508 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %2507), !dbg !670
  store i64 %2508, i64* %2465, align 4, !dbg !671
  br label %2509, !dbg !672

2509:                                             ; preds = %2495, %2505, %2492
  %2510 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2480, i32 0, i32 0, i32 0, !dbg !673
  %2511 = bitcast double* %2510 to i64*, !dbg !674
  %2512 = load i64, i64* %2465, align 4, !dbg !675
  store i64 %2512, i64* %2511, align 4, !dbg !676
  br label %2513, !dbg !677

2513:                                             ; preds = %2503, %2509, %2486
  call void @llvm.stackrestore(i8* %2464), !dbg !678
  br label %2514, !dbg !74

2514:                                             ; preds = %2513, %14
  %2515 = call i8* @llvm.stacksave(), !dbg !679
  %2516 = alloca i64, align 8, !dbg !682
  store i64 0, i64* %2516, align 4, !dbg !683
  %2517 = alloca i32, align 8, !dbg !684
  store i32 0, i32* %2517, align 4, !dbg !685
  %2518 = alloca i64, align 8, !dbg !686
  store i64 0, i64* %2518, align 4, !dbg !687
  %2519 = alloca i8*, align 8, !dbg !688
  %2520 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 28, !dbg !689
  %2521 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2520, i32 0, i32 6, !dbg !690
  %2522 = bitcast %union.p4union* %2521 to i8**, !dbg !691
  %2523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !692
  %2524 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2523, i32 6, !dbg !693
  %2525 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !694
  %2526 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 0, i32 1, !dbg !695
  %2527 = load i16, i16* %2526, align 2, !dbg !696
  %2528 = and i16 %2527, 1, !dbg !697
  %2529 = icmp ne i16 %2528, 0, !dbg !697
  %2530 = and i16 %2527, 36, !dbg !698
  %2531 = icmp ne i16 %2530, 0, !dbg !698
  %2532 = and i16 %2527, 8, !dbg !699
  %2533 = icmp ne i16 %2532, 0, !dbg !699
  %2534 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 0, i32 8, !dbg !700
  br i1 %2529, label %2535, label %2543, !dbg !701

2535:                                             ; preds = %2514
  %2536 = and i16 %2527, 16384, !dbg !702
  %2537 = icmp ne i16 %2536, 0, !dbg !702
  br i1 %2537, label %2538, label %2539, !dbg !703

2538:                                             ; preds = %2535
  store i32 10, i32* %2534, align 4, !dbg !704
  br label %2540, !dbg !705

2539:                                             ; preds = %2535
  store i32 0, i32* %2534, align 4, !dbg !706
  br label %2540, !dbg !707

2540:                                             ; preds = %2539, %2538
  %2541 = load i32, i32* %2517, align 4, !dbg !708
  %2542 = add i32 %2541, 1, !dbg !708
  store i32 %2542, i32* %2517, align 4, !dbg !708
  br label %2633, !dbg !709

2543:                                             ; preds = %2514
  br i1 %2531, label %2544, label %2588, !dbg !710

2544:                                             ; preds = %2543
  %2545 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 0, i32 0, !dbg !711
  %2546 = bitcast %union.MemValue* %2545 to i64*, !dbg !712
  %2547 = load i64, i64* %2546, align 4, !dbg !713
  %2548 = alloca i64, align 8, !dbg !714
  %2549 = icmp slt i64 %2547, 0, !dbg !715
  br i1 %2549, label %2550, label %2552, !dbg !716

2550:                                             ; preds = %2544
  %2551 = xor i64 %2547, -1, !dbg !717
  store i64 %2551, i64* %2548, align 4, !dbg !718
  br label %2553, !dbg !719

2552:                                             ; preds = %2544
  store i64 %2547, i64* %2548, align 4, !dbg !720
  br label %2553, !dbg !721

2553:                                             ; preds = %2552, %2550
  %2554 = load i32, i32* %2517, align 4, !dbg !722
  %2555 = add i32 %2554, 1, !dbg !722
  store i32 %2555, i32* %2517, align 4, !dbg !722
  %2556 = load i64, i64* %2548, align 4, !dbg !723
  %2557 = icmp slt i64 %2556, 127, !dbg !724
  %2558 = icmp slt i64 %2556, 32767, !dbg !725
  %2559 = icmp slt i64 %2556, 8388607, !dbg !726
  %2560 = icmp slt i64 %2556, 2147483647, !dbg !727
  br i1 %2557, label %2561, label %2570, !dbg !728

2561:                                             ; preds = %2553
  %2562 = and i64 %2547, 1, !dbg !729
  %2563 = icmp eq i64 %2562, %2547, !dbg !730
  br i1 %2563, label %2564, label %2567, !dbg !731

2564:                                             ; preds = %2561
  %2565 = trunc i64 %2556 to i32, !dbg !732
  %2566 = add i32 %2565, 8, !dbg !733
  store i32 %2566, i32* %2534, align 4, !dbg !734
  br label %2633, !dbg !735

2567:                                             ; preds = %2561
  %2568 = load i64, i64* %2516, align 4, !dbg !736
  %2569 = add i64 %2568, 1, !dbg !736
  store i64 %2569, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %2534, align 4, !dbg !737
  br label %2633, !dbg !738

2570:                                             ; preds = %2553
  %2571 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %2558, label %2572, label %2574, !dbg !740

2572:                                             ; preds = %2570
  %2573 = add i64 %2571, 2, !dbg !741
  store i64 %2573, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %2534, align 4, !dbg !742
  br label %2633, !dbg !743

2574:                                             ; preds = %2570
  br i1 %2559, label %2575, label %2577, !dbg !744

2575:                                             ; preds = %2574
  %2576 = add i64 %2571, 3, !dbg !745
  store i64 %2576, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %2534, align 4, !dbg !746
  br label %2633, !dbg !747

2577:                                             ; preds = %2574
  br i1 %2560, label %2578, label %2580, !dbg !748

2578:                                             ; preds = %2577
  %2579 = add i64 %2571, 4, !dbg !749
  store i64 %2579, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %2534, align 4, !dbg !750
  br label %2633, !dbg !751

2580:                                             ; preds = %2577
  %2581 = add i64 %2571, 8, !dbg !752
  store i64 %2581, i64* %2516, align 4, !dbg !752
  %2582 = and i16 %2527, 32, !dbg !753
  %2583 = icmp ne i16 %2582, 0, !dbg !753
  br i1 %2583, label %2584, label %2587, !dbg !754

2584:                                             ; preds = %2580
  %2585 = and i16 %2527, -33, !dbg !755
  %2586 = or i16 %2585, 8, !dbg !756
  store i16 %2586, i16* %2526, align 2, !dbg !757
  store i32 7, i32* %2534, align 4, !dbg !758
  br label %2633, !dbg !759

2587:                                             ; preds = %2580
  store i32 6, i32* %2534, align 4, !dbg !760
  br label %2633, !dbg !761

2588:                                             ; preds = %2543
  br i1 %2533, label %2589, label %2594, !dbg !762

2589:                                             ; preds = %2588
  %2590 = load i32, i32* %2517, align 4, !dbg !763
  %2591 = add i32 %2590, 1, !dbg !763
  store i32 %2591, i32* %2517, align 4, !dbg !763
  %2592 = load i64, i64* %2516, align 4, !dbg !764
  %2593 = add i64 %2592, 8, !dbg !764
  store i64 %2593, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %2534, align 4, !dbg !765
  br label %2633, !dbg !766

2594:                                             ; preds = %2588
  %2595 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 0, i32 4, !dbg !767
  %2596 = load i32, i32* %2595, align 4, !dbg !768
  %2597 = alloca i32, align 8, !dbg !769
  store i32 %2596, i32* %2597, align 4, !dbg !770
  %2598 = alloca i32, align 8, !dbg !771
  %2599 = add i32 %2596, %2596, !dbg !772
  %2600 = add i32 %2599, 12, !dbg !773
  %2601 = and i16 %2527, 2, !dbg !774
  %2602 = icmp ne i16 %2601, 0, !dbg !775
  %2603 = zext i1 %2602 to i32, !dbg !776
  %2604 = add i32 %2600, %2603, !dbg !777
  store i32 %2604, i32* %2598, align 4, !dbg !778
  %2605 = and i16 %2527, 16384, !dbg !779
  %2606 = icmp ne i16 %2605, 0, !dbg !780
  br i1 %2606, label %2607, label %2623, !dbg !781

2607:                                             ; preds = %2594
  %2608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 0, i32 0, !dbg !782
  %2609 = bitcast %union.MemValue* %2608 to i32*, !dbg !783
  %2610 = load i32, i32* %2609, align 4, !dbg !784
  %2611 = add i32 %2610, %2610, !dbg !785
  %2612 = add i32 %2604, %2611, !dbg !786
  store i32 %2612, i32* %2598, align 4, !dbg !786
  %2613 = load i64, i64* %2516, align 4, !dbg !787
  %2614 = icmp ne i64 %2613, 0, !dbg !787
  br i1 %2614, label %2619, label %2615, !dbg !788

2615:                                             ; preds = %2607
  %2616 = zext i32 %2610 to i64, !dbg !789
  %2617 = load i64, i64* %2518, align 4, !dbg !790
  %2618 = add i64 %2617, %2616, !dbg !790
  store i64 %2618, i64* %2518, align 4, !dbg !790
  br label %2623, !dbg !791

2619:                                             ; preds = %2607
  %2620 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2524), !dbg !792
  %2621 = load i32, i32* %2597, align 4, !dbg !793
  %2622 = add i32 %2621, %2610, !dbg !793
  store i32 %2622, i32* %2597, align 4, !dbg !793
  br label %2623, !dbg !794

2623:                                             ; preds = %2615, %2619, %2594
  %2624 = load i32, i32* %2597, align 4, !dbg !795
  %2625 = zext i32 %2624 to i64, !dbg !796
  %2626 = load i64, i64* %2516, align 4, !dbg !797
  %2627 = add i64 %2626, %2625, !dbg !797
  store i64 %2627, i64* %2516, align 4, !dbg !797
  %2628 = load i32, i32* %2598, align 4, !dbg !798
  %2629 = zext i32 %2628 to i64, !dbg !799
  %2630 = call i32 @sqlite3VarintLen(i64 %2629), !dbg !800
  %2631 = load i32, i32* %2517, align 4, !dbg !801
  %2632 = add i32 %2631, %2630, !dbg !801
  store i32 %2632, i32* %2517, align 4, !dbg !801
  store i32 %2628, i32* %2534, align 4, !dbg !802
  br label %2633, !dbg !803

2633:                                             ; preds = %2572, %2575, %2578, %2584, %2587, %2567, %2564, %2623, %2589, %2540
  %2634 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2524, i32 -1, !dbg !804
  %2635 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 0, i32 1, !dbg !695
  %2636 = load i16, i16* %2635, align 2, !dbg !696
  %2637 = and i16 %2636, 1, !dbg !697
  %2638 = icmp ne i16 %2637, 0, !dbg !697
  %2639 = and i16 %2636, 36, !dbg !698
  %2640 = icmp ne i16 %2639, 0, !dbg !698
  %2641 = and i16 %2636, 8, !dbg !699
  %2642 = icmp ne i16 %2641, 0, !dbg !699
  %2643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 0, i32 8, !dbg !700
  br i1 %2638, label %2644, label %2652, !dbg !701

2644:                                             ; preds = %2633
  %2645 = and i16 %2636, 16384, !dbg !702
  %2646 = icmp ne i16 %2645, 0, !dbg !702
  br i1 %2646, label %2647, label %2648, !dbg !703

2647:                                             ; preds = %2644
  store i32 10, i32* %2643, align 4, !dbg !704
  br label %2649, !dbg !705

2648:                                             ; preds = %2644
  store i32 0, i32* %2643, align 4, !dbg !706
  br label %2649, !dbg !707

2649:                                             ; preds = %2648, %2647
  %2650 = load i32, i32* %2517, align 4, !dbg !708
  %2651 = add i32 %2650, 1, !dbg !708
  store i32 %2651, i32* %2517, align 4, !dbg !708
  br label %2742, !dbg !709

2652:                                             ; preds = %2633
  br i1 %2640, label %2653, label %2697, !dbg !710

2653:                                             ; preds = %2652
  %2654 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 0, i32 0, !dbg !711
  %2655 = bitcast %union.MemValue* %2654 to i64*, !dbg !712
  %2656 = load i64, i64* %2655, align 4, !dbg !713
  %2657 = alloca i64, align 8, !dbg !714
  %2658 = icmp slt i64 %2656, 0, !dbg !715
  br i1 %2658, label %2659, label %2661, !dbg !716

2659:                                             ; preds = %2653
  %2660 = xor i64 %2656, -1, !dbg !717
  store i64 %2660, i64* %2657, align 4, !dbg !718
  br label %2662, !dbg !719

2661:                                             ; preds = %2653
  store i64 %2656, i64* %2657, align 4, !dbg !720
  br label %2662, !dbg !721

2662:                                             ; preds = %2661, %2659
  %2663 = load i32, i32* %2517, align 4, !dbg !722
  %2664 = add i32 %2663, 1, !dbg !722
  store i32 %2664, i32* %2517, align 4, !dbg !722
  %2665 = load i64, i64* %2657, align 4, !dbg !723
  %2666 = icmp slt i64 %2665, 127, !dbg !724
  %2667 = icmp slt i64 %2665, 32767, !dbg !725
  %2668 = icmp slt i64 %2665, 8388607, !dbg !726
  %2669 = icmp slt i64 %2665, 2147483647, !dbg !727
  br i1 %2666, label %2670, label %2679, !dbg !728

2670:                                             ; preds = %2662
  %2671 = and i64 %2656, 1, !dbg !729
  %2672 = icmp eq i64 %2671, %2656, !dbg !730
  br i1 %2672, label %2673, label %2676, !dbg !731

2673:                                             ; preds = %2670
  %2674 = trunc i64 %2665 to i32, !dbg !732
  %2675 = add i32 %2674, 8, !dbg !733
  store i32 %2675, i32* %2643, align 4, !dbg !734
  br label %2742, !dbg !735

2676:                                             ; preds = %2670
  %2677 = load i64, i64* %2516, align 4, !dbg !736
  %2678 = add i64 %2677, 1, !dbg !736
  store i64 %2678, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %2643, align 4, !dbg !737
  br label %2742, !dbg !738

2679:                                             ; preds = %2662
  %2680 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %2667, label %2681, label %2683, !dbg !740

2681:                                             ; preds = %2679
  %2682 = add i64 %2680, 2, !dbg !741
  store i64 %2682, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %2643, align 4, !dbg !742
  br label %2742, !dbg !743

2683:                                             ; preds = %2679
  br i1 %2668, label %2684, label %2686, !dbg !744

2684:                                             ; preds = %2683
  %2685 = add i64 %2680, 3, !dbg !745
  store i64 %2685, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %2643, align 4, !dbg !746
  br label %2742, !dbg !747

2686:                                             ; preds = %2683
  br i1 %2669, label %2687, label %2689, !dbg !748

2687:                                             ; preds = %2686
  %2688 = add i64 %2680, 4, !dbg !749
  store i64 %2688, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %2643, align 4, !dbg !750
  br label %2742, !dbg !751

2689:                                             ; preds = %2686
  %2690 = add i64 %2680, 8, !dbg !752
  store i64 %2690, i64* %2516, align 4, !dbg !752
  %2691 = and i16 %2636, 32, !dbg !753
  %2692 = icmp ne i16 %2691, 0, !dbg !753
  br i1 %2692, label %2693, label %2696, !dbg !754

2693:                                             ; preds = %2689
  %2694 = and i16 %2636, -33, !dbg !755
  %2695 = or i16 %2694, 8, !dbg !756
  store i16 %2695, i16* %2635, align 2, !dbg !757
  store i32 7, i32* %2643, align 4, !dbg !758
  br label %2742, !dbg !759

2696:                                             ; preds = %2689
  store i32 6, i32* %2643, align 4, !dbg !760
  br label %2742, !dbg !761

2697:                                             ; preds = %2652
  br i1 %2642, label %2698, label %2703, !dbg !762

2698:                                             ; preds = %2697
  %2699 = load i32, i32* %2517, align 4, !dbg !763
  %2700 = add i32 %2699, 1, !dbg !763
  store i32 %2700, i32* %2517, align 4, !dbg !763
  %2701 = load i64, i64* %2516, align 4, !dbg !764
  %2702 = add i64 %2701, 8, !dbg !764
  store i64 %2702, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %2643, align 4, !dbg !765
  br label %2742, !dbg !766

2703:                                             ; preds = %2697
  %2704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 0, i32 4, !dbg !767
  %2705 = load i32, i32* %2704, align 4, !dbg !768
  %2706 = alloca i32, align 8, !dbg !769
  store i32 %2705, i32* %2706, align 4, !dbg !770
  %2707 = alloca i32, align 8, !dbg !771
  %2708 = add i32 %2705, %2705, !dbg !772
  %2709 = add i32 %2708, 12, !dbg !773
  %2710 = and i16 %2636, 2, !dbg !774
  %2711 = icmp ne i16 %2710, 0, !dbg !775
  %2712 = zext i1 %2711 to i32, !dbg !776
  %2713 = add i32 %2709, %2712, !dbg !777
  store i32 %2713, i32* %2707, align 4, !dbg !778
  %2714 = and i16 %2636, 16384, !dbg !779
  %2715 = icmp ne i16 %2714, 0, !dbg !780
  br i1 %2715, label %2716, label %2732, !dbg !781

2716:                                             ; preds = %2703
  %2717 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 0, i32 0, !dbg !782
  %2718 = bitcast %union.MemValue* %2717 to i32*, !dbg !783
  %2719 = load i32, i32* %2718, align 4, !dbg !784
  %2720 = add i32 %2719, %2719, !dbg !785
  %2721 = add i32 %2713, %2720, !dbg !786
  store i32 %2721, i32* %2707, align 4, !dbg !786
  %2722 = load i64, i64* %2516, align 4, !dbg !787
  %2723 = icmp ne i64 %2722, 0, !dbg !787
  br i1 %2723, label %2728, label %2724, !dbg !788

2724:                                             ; preds = %2716
  %2725 = zext i32 %2719 to i64, !dbg !789
  %2726 = load i64, i64* %2518, align 4, !dbg !790
  %2727 = add i64 %2726, %2725, !dbg !790
  store i64 %2727, i64* %2518, align 4, !dbg !790
  br label %2732, !dbg !791

2728:                                             ; preds = %2716
  %2729 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2634), !dbg !792
  %2730 = load i32, i32* %2706, align 4, !dbg !793
  %2731 = add i32 %2730, %2719, !dbg !793
  store i32 %2731, i32* %2706, align 4, !dbg !793
  br label %2732, !dbg !794

2732:                                             ; preds = %2724, %2728, %2703
  %2733 = load i32, i32* %2706, align 4, !dbg !795
  %2734 = zext i32 %2733 to i64, !dbg !796
  %2735 = load i64, i64* %2516, align 4, !dbg !797
  %2736 = add i64 %2735, %2734, !dbg !797
  store i64 %2736, i64* %2516, align 4, !dbg !797
  %2737 = load i32, i32* %2707, align 4, !dbg !798
  %2738 = zext i32 %2737 to i64, !dbg !799
  %2739 = call i32 @sqlite3VarintLen(i64 %2738), !dbg !800
  %2740 = load i32, i32* %2517, align 4, !dbg !801
  %2741 = add i32 %2740, %2739, !dbg !801
  store i32 %2741, i32* %2517, align 4, !dbg !801
  store i32 %2737, i32* %2643, align 4, !dbg !802
  br label %2742, !dbg !803

2742:                                             ; preds = %2681, %2684, %2687, %2693, %2696, %2676, %2673, %2732, %2698, %2649
  %2743 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2634, i32 -1, !dbg !804
  %2744 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 0, i32 1, !dbg !695
  %2745 = load i16, i16* %2744, align 2, !dbg !696
  %2746 = and i16 %2745, 1, !dbg !697
  %2747 = icmp ne i16 %2746, 0, !dbg !697
  %2748 = and i16 %2745, 36, !dbg !698
  %2749 = icmp ne i16 %2748, 0, !dbg !698
  %2750 = and i16 %2745, 8, !dbg !699
  %2751 = icmp ne i16 %2750, 0, !dbg !699
  %2752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 0, i32 8, !dbg !700
  br i1 %2747, label %2753, label %2761, !dbg !701

2753:                                             ; preds = %2742
  %2754 = and i16 %2745, 16384, !dbg !702
  %2755 = icmp ne i16 %2754, 0, !dbg !702
  br i1 %2755, label %2756, label %2757, !dbg !703

2756:                                             ; preds = %2753
  store i32 10, i32* %2752, align 4, !dbg !704
  br label %2758, !dbg !705

2757:                                             ; preds = %2753
  store i32 0, i32* %2752, align 4, !dbg !706
  br label %2758, !dbg !707

2758:                                             ; preds = %2757, %2756
  %2759 = load i32, i32* %2517, align 4, !dbg !708
  %2760 = add i32 %2759, 1, !dbg !708
  store i32 %2760, i32* %2517, align 4, !dbg !708
  br label %2851, !dbg !709

2761:                                             ; preds = %2742
  br i1 %2749, label %2762, label %2806, !dbg !710

2762:                                             ; preds = %2761
  %2763 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 0, i32 0, !dbg !711
  %2764 = bitcast %union.MemValue* %2763 to i64*, !dbg !712
  %2765 = load i64, i64* %2764, align 4, !dbg !713
  %2766 = alloca i64, align 8, !dbg !714
  %2767 = icmp slt i64 %2765, 0, !dbg !715
  br i1 %2767, label %2768, label %2770, !dbg !716

2768:                                             ; preds = %2762
  %2769 = xor i64 %2765, -1, !dbg !717
  store i64 %2769, i64* %2766, align 4, !dbg !718
  br label %2771, !dbg !719

2770:                                             ; preds = %2762
  store i64 %2765, i64* %2766, align 4, !dbg !720
  br label %2771, !dbg !721

2771:                                             ; preds = %2770, %2768
  %2772 = load i32, i32* %2517, align 4, !dbg !722
  %2773 = add i32 %2772, 1, !dbg !722
  store i32 %2773, i32* %2517, align 4, !dbg !722
  %2774 = load i64, i64* %2766, align 4, !dbg !723
  %2775 = icmp slt i64 %2774, 127, !dbg !724
  %2776 = icmp slt i64 %2774, 32767, !dbg !725
  %2777 = icmp slt i64 %2774, 8388607, !dbg !726
  %2778 = icmp slt i64 %2774, 2147483647, !dbg !727
  br i1 %2775, label %2779, label %2788, !dbg !728

2779:                                             ; preds = %2771
  %2780 = and i64 %2765, 1, !dbg !729
  %2781 = icmp eq i64 %2780, %2765, !dbg !730
  br i1 %2781, label %2782, label %2785, !dbg !731

2782:                                             ; preds = %2779
  %2783 = trunc i64 %2774 to i32, !dbg !732
  %2784 = add i32 %2783, 8, !dbg !733
  store i32 %2784, i32* %2752, align 4, !dbg !734
  br label %2851, !dbg !735

2785:                                             ; preds = %2779
  %2786 = load i64, i64* %2516, align 4, !dbg !736
  %2787 = add i64 %2786, 1, !dbg !736
  store i64 %2787, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %2752, align 4, !dbg !737
  br label %2851, !dbg !738

2788:                                             ; preds = %2771
  %2789 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %2776, label %2790, label %2792, !dbg !740

2790:                                             ; preds = %2788
  %2791 = add i64 %2789, 2, !dbg !741
  store i64 %2791, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %2752, align 4, !dbg !742
  br label %2851, !dbg !743

2792:                                             ; preds = %2788
  br i1 %2777, label %2793, label %2795, !dbg !744

2793:                                             ; preds = %2792
  %2794 = add i64 %2789, 3, !dbg !745
  store i64 %2794, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %2752, align 4, !dbg !746
  br label %2851, !dbg !747

2795:                                             ; preds = %2792
  br i1 %2778, label %2796, label %2798, !dbg !748

2796:                                             ; preds = %2795
  %2797 = add i64 %2789, 4, !dbg !749
  store i64 %2797, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %2752, align 4, !dbg !750
  br label %2851, !dbg !751

2798:                                             ; preds = %2795
  %2799 = add i64 %2789, 8, !dbg !752
  store i64 %2799, i64* %2516, align 4, !dbg !752
  %2800 = and i16 %2745, 32, !dbg !753
  %2801 = icmp ne i16 %2800, 0, !dbg !753
  br i1 %2801, label %2802, label %2805, !dbg !754

2802:                                             ; preds = %2798
  %2803 = and i16 %2745, -33, !dbg !755
  %2804 = or i16 %2803, 8, !dbg !756
  store i16 %2804, i16* %2744, align 2, !dbg !757
  store i32 7, i32* %2752, align 4, !dbg !758
  br label %2851, !dbg !759

2805:                                             ; preds = %2798
  store i32 6, i32* %2752, align 4, !dbg !760
  br label %2851, !dbg !761

2806:                                             ; preds = %2761
  br i1 %2751, label %2807, label %2812, !dbg !762

2807:                                             ; preds = %2806
  %2808 = load i32, i32* %2517, align 4, !dbg !763
  %2809 = add i32 %2808, 1, !dbg !763
  store i32 %2809, i32* %2517, align 4, !dbg !763
  %2810 = load i64, i64* %2516, align 4, !dbg !764
  %2811 = add i64 %2810, 8, !dbg !764
  store i64 %2811, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %2752, align 4, !dbg !765
  br label %2851, !dbg !766

2812:                                             ; preds = %2806
  %2813 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 0, i32 4, !dbg !767
  %2814 = load i32, i32* %2813, align 4, !dbg !768
  %2815 = alloca i32, align 8, !dbg !769
  store i32 %2814, i32* %2815, align 4, !dbg !770
  %2816 = alloca i32, align 8, !dbg !771
  %2817 = add i32 %2814, %2814, !dbg !772
  %2818 = add i32 %2817, 12, !dbg !773
  %2819 = and i16 %2745, 2, !dbg !774
  %2820 = icmp ne i16 %2819, 0, !dbg !775
  %2821 = zext i1 %2820 to i32, !dbg !776
  %2822 = add i32 %2818, %2821, !dbg !777
  store i32 %2822, i32* %2816, align 4, !dbg !778
  %2823 = and i16 %2745, 16384, !dbg !779
  %2824 = icmp ne i16 %2823, 0, !dbg !780
  br i1 %2824, label %2825, label %2841, !dbg !781

2825:                                             ; preds = %2812
  %2826 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 0, i32 0, !dbg !782
  %2827 = bitcast %union.MemValue* %2826 to i32*, !dbg !783
  %2828 = load i32, i32* %2827, align 4, !dbg !784
  %2829 = add i32 %2828, %2828, !dbg !785
  %2830 = add i32 %2822, %2829, !dbg !786
  store i32 %2830, i32* %2816, align 4, !dbg !786
  %2831 = load i64, i64* %2516, align 4, !dbg !787
  %2832 = icmp ne i64 %2831, 0, !dbg !787
  br i1 %2832, label %2837, label %2833, !dbg !788

2833:                                             ; preds = %2825
  %2834 = zext i32 %2828 to i64, !dbg !789
  %2835 = load i64, i64* %2518, align 4, !dbg !790
  %2836 = add i64 %2835, %2834, !dbg !790
  store i64 %2836, i64* %2518, align 4, !dbg !790
  br label %2841, !dbg !791

2837:                                             ; preds = %2825
  %2838 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2743), !dbg !792
  %2839 = load i32, i32* %2815, align 4, !dbg !793
  %2840 = add i32 %2839, %2828, !dbg !793
  store i32 %2840, i32* %2815, align 4, !dbg !793
  br label %2841, !dbg !794

2841:                                             ; preds = %2833, %2837, %2812
  %2842 = load i32, i32* %2815, align 4, !dbg !795
  %2843 = zext i32 %2842 to i64, !dbg !796
  %2844 = load i64, i64* %2516, align 4, !dbg !797
  %2845 = add i64 %2844, %2843, !dbg !797
  store i64 %2845, i64* %2516, align 4, !dbg !797
  %2846 = load i32, i32* %2816, align 4, !dbg !798
  %2847 = zext i32 %2846 to i64, !dbg !799
  %2848 = call i32 @sqlite3VarintLen(i64 %2847), !dbg !800
  %2849 = load i32, i32* %2517, align 4, !dbg !801
  %2850 = add i32 %2849, %2848, !dbg !801
  store i32 %2850, i32* %2517, align 4, !dbg !801
  store i32 %2846, i32* %2752, align 4, !dbg !802
  br label %2851, !dbg !803

2851:                                             ; preds = %2790, %2793, %2796, %2802, %2805, %2785, %2782, %2841, %2807, %2758
  %2852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2743, i32 -1, !dbg !804
  %2853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 1, !dbg !695
  %2854 = load i16, i16* %2853, align 2, !dbg !696
  %2855 = and i16 %2854, 1, !dbg !697
  %2856 = icmp ne i16 %2855, 0, !dbg !697
  %2857 = and i16 %2854, 36, !dbg !698
  %2858 = icmp ne i16 %2857, 0, !dbg !698
  %2859 = and i16 %2854, 8, !dbg !699
  %2860 = icmp ne i16 %2859, 0, !dbg !699
  %2861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 8, !dbg !700
  br i1 %2856, label %2862, label %2870, !dbg !701

2862:                                             ; preds = %2851
  %2863 = and i16 %2854, 16384, !dbg !702
  %2864 = icmp ne i16 %2863, 0, !dbg !702
  br i1 %2864, label %2865, label %2866, !dbg !703

2865:                                             ; preds = %2862
  store i32 10, i32* %2861, align 4, !dbg !704
  br label %2867, !dbg !705

2866:                                             ; preds = %2862
  store i32 0, i32* %2861, align 4, !dbg !706
  br label %2867, !dbg !707

2867:                                             ; preds = %2866, %2865
  %2868 = load i32, i32* %2517, align 4, !dbg !708
  %2869 = add i32 %2868, 1, !dbg !708
  store i32 %2869, i32* %2517, align 4, !dbg !708
  br label %2960, !dbg !709

2870:                                             ; preds = %2851
  br i1 %2858, label %2871, label %2915, !dbg !710

2871:                                             ; preds = %2870
  %2872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 0, !dbg !711
  %2873 = bitcast %union.MemValue* %2872 to i64*, !dbg !712
  %2874 = load i64, i64* %2873, align 4, !dbg !713
  %2875 = alloca i64, align 8, !dbg !714
  %2876 = icmp slt i64 %2874, 0, !dbg !715
  br i1 %2876, label %2877, label %2879, !dbg !716

2877:                                             ; preds = %2871
  %2878 = xor i64 %2874, -1, !dbg !717
  store i64 %2878, i64* %2875, align 4, !dbg !718
  br label %2880, !dbg !719

2879:                                             ; preds = %2871
  store i64 %2874, i64* %2875, align 4, !dbg !720
  br label %2880, !dbg !721

2880:                                             ; preds = %2879, %2877
  %2881 = load i32, i32* %2517, align 4, !dbg !722
  %2882 = add i32 %2881, 1, !dbg !722
  store i32 %2882, i32* %2517, align 4, !dbg !722
  %2883 = load i64, i64* %2875, align 4, !dbg !723
  %2884 = icmp slt i64 %2883, 127, !dbg !724
  %2885 = icmp slt i64 %2883, 32767, !dbg !725
  %2886 = icmp slt i64 %2883, 8388607, !dbg !726
  %2887 = icmp slt i64 %2883, 2147483647, !dbg !727
  br i1 %2884, label %2888, label %2897, !dbg !728

2888:                                             ; preds = %2880
  %2889 = and i64 %2874, 1, !dbg !729
  %2890 = icmp eq i64 %2889, %2874, !dbg !730
  br i1 %2890, label %2891, label %2894, !dbg !731

2891:                                             ; preds = %2888
  %2892 = trunc i64 %2883 to i32, !dbg !732
  %2893 = add i32 %2892, 8, !dbg !733
  store i32 %2893, i32* %2861, align 4, !dbg !734
  br label %2960, !dbg !735

2894:                                             ; preds = %2888
  %2895 = load i64, i64* %2516, align 4, !dbg !736
  %2896 = add i64 %2895, 1, !dbg !736
  store i64 %2896, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %2861, align 4, !dbg !737
  br label %2960, !dbg !738

2897:                                             ; preds = %2880
  %2898 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %2885, label %2899, label %2901, !dbg !740

2899:                                             ; preds = %2897
  %2900 = add i64 %2898, 2, !dbg !741
  store i64 %2900, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %2861, align 4, !dbg !742
  br label %2960, !dbg !743

2901:                                             ; preds = %2897
  br i1 %2886, label %2902, label %2904, !dbg !744

2902:                                             ; preds = %2901
  %2903 = add i64 %2898, 3, !dbg !745
  store i64 %2903, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %2861, align 4, !dbg !746
  br label %2960, !dbg !747

2904:                                             ; preds = %2901
  br i1 %2887, label %2905, label %2907, !dbg !748

2905:                                             ; preds = %2904
  %2906 = add i64 %2898, 4, !dbg !749
  store i64 %2906, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %2861, align 4, !dbg !750
  br label %2960, !dbg !751

2907:                                             ; preds = %2904
  %2908 = add i64 %2898, 8, !dbg !752
  store i64 %2908, i64* %2516, align 4, !dbg !752
  %2909 = and i16 %2854, 32, !dbg !753
  %2910 = icmp ne i16 %2909, 0, !dbg !753
  br i1 %2910, label %2911, label %2914, !dbg !754

2911:                                             ; preds = %2907
  %2912 = and i16 %2854, -33, !dbg !755
  %2913 = or i16 %2912, 8, !dbg !756
  store i16 %2913, i16* %2853, align 2, !dbg !757
  store i32 7, i32* %2861, align 4, !dbg !758
  br label %2960, !dbg !759

2914:                                             ; preds = %2907
  store i32 6, i32* %2861, align 4, !dbg !760
  br label %2960, !dbg !761

2915:                                             ; preds = %2870
  br i1 %2860, label %2916, label %2921, !dbg !762

2916:                                             ; preds = %2915
  %2917 = load i32, i32* %2517, align 4, !dbg !763
  %2918 = add i32 %2917, 1, !dbg !763
  store i32 %2918, i32* %2517, align 4, !dbg !763
  %2919 = load i64, i64* %2516, align 4, !dbg !764
  %2920 = add i64 %2919, 8, !dbg !764
  store i64 %2920, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %2861, align 4, !dbg !765
  br label %2960, !dbg !766

2921:                                             ; preds = %2915
  %2922 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 4, !dbg !767
  %2923 = load i32, i32* %2922, align 4, !dbg !768
  %2924 = alloca i32, align 8, !dbg !769
  store i32 %2923, i32* %2924, align 4, !dbg !770
  %2925 = alloca i32, align 8, !dbg !771
  %2926 = add i32 %2923, %2923, !dbg !772
  %2927 = add i32 %2926, 12, !dbg !773
  %2928 = and i16 %2854, 2, !dbg !774
  %2929 = icmp ne i16 %2928, 0, !dbg !775
  %2930 = zext i1 %2929 to i32, !dbg !776
  %2931 = add i32 %2927, %2930, !dbg !777
  store i32 %2931, i32* %2925, align 4, !dbg !778
  %2932 = and i16 %2854, 16384, !dbg !779
  %2933 = icmp ne i16 %2932, 0, !dbg !780
  br i1 %2933, label %2934, label %2950, !dbg !781

2934:                                             ; preds = %2921
  %2935 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 0, !dbg !782
  %2936 = bitcast %union.MemValue* %2935 to i32*, !dbg !783
  %2937 = load i32, i32* %2936, align 4, !dbg !784
  %2938 = add i32 %2937, %2937, !dbg !785
  %2939 = add i32 %2931, %2938, !dbg !786
  store i32 %2939, i32* %2925, align 4, !dbg !786
  %2940 = load i64, i64* %2516, align 4, !dbg !787
  %2941 = icmp ne i64 %2940, 0, !dbg !787
  br i1 %2941, label %2946, label %2942, !dbg !788

2942:                                             ; preds = %2934
  %2943 = zext i32 %2937 to i64, !dbg !789
  %2944 = load i64, i64* %2518, align 4, !dbg !790
  %2945 = add i64 %2944, %2943, !dbg !790
  store i64 %2945, i64* %2518, align 4, !dbg !790
  br label %2950, !dbg !791

2946:                                             ; preds = %2934
  %2947 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2852), !dbg !792
  %2948 = load i32, i32* %2924, align 4, !dbg !793
  %2949 = add i32 %2948, %2937, !dbg !793
  store i32 %2949, i32* %2924, align 4, !dbg !793
  br label %2950, !dbg !794

2950:                                             ; preds = %2942, %2946, %2921
  %2951 = load i32, i32* %2924, align 4, !dbg !795
  %2952 = zext i32 %2951 to i64, !dbg !796
  %2953 = load i64, i64* %2516, align 4, !dbg !797
  %2954 = add i64 %2953, %2952, !dbg !797
  store i64 %2954, i64* %2516, align 4, !dbg !797
  %2955 = load i32, i32* %2925, align 4, !dbg !798
  %2956 = zext i32 %2955 to i64, !dbg !799
  %2957 = call i32 @sqlite3VarintLen(i64 %2956), !dbg !800
  %2958 = load i32, i32* %2517, align 4, !dbg !801
  %2959 = add i32 %2958, %2957, !dbg !801
  store i32 %2959, i32* %2517, align 4, !dbg !801
  store i32 %2955, i32* %2861, align 4, !dbg !802
  br label %2960, !dbg !803

2960:                                             ; preds = %2899, %2902, %2905, %2911, %2914, %2894, %2891, %2950, %2916, %2867
  %2961 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 -1, !dbg !804
  %2962 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 0, i32 1, !dbg !695
  %2963 = load i16, i16* %2962, align 2, !dbg !696
  %2964 = and i16 %2963, 1, !dbg !697
  %2965 = icmp ne i16 %2964, 0, !dbg !697
  %2966 = and i16 %2963, 36, !dbg !698
  %2967 = icmp ne i16 %2966, 0, !dbg !698
  %2968 = and i16 %2963, 8, !dbg !699
  %2969 = icmp ne i16 %2968, 0, !dbg !699
  %2970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 0, i32 8, !dbg !700
  br i1 %2965, label %2971, label %2979, !dbg !701

2971:                                             ; preds = %2960
  %2972 = and i16 %2963, 16384, !dbg !702
  %2973 = icmp ne i16 %2972, 0, !dbg !702
  br i1 %2973, label %2974, label %2975, !dbg !703

2974:                                             ; preds = %2971
  store i32 10, i32* %2970, align 4, !dbg !704
  br label %2976, !dbg !705

2975:                                             ; preds = %2971
  store i32 0, i32* %2970, align 4, !dbg !706
  br label %2976, !dbg !707

2976:                                             ; preds = %2975, %2974
  %2977 = load i32, i32* %2517, align 4, !dbg !708
  %2978 = add i32 %2977, 1, !dbg !708
  store i32 %2978, i32* %2517, align 4, !dbg !708
  br label %3069, !dbg !709

2979:                                             ; preds = %2960
  br i1 %2967, label %2980, label %3024, !dbg !710

2980:                                             ; preds = %2979
  %2981 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 0, i32 0, !dbg !711
  %2982 = bitcast %union.MemValue* %2981 to i64*, !dbg !712
  %2983 = load i64, i64* %2982, align 4, !dbg !713
  %2984 = alloca i64, align 8, !dbg !714
  %2985 = icmp slt i64 %2983, 0, !dbg !715
  br i1 %2985, label %2986, label %2988, !dbg !716

2986:                                             ; preds = %2980
  %2987 = xor i64 %2983, -1, !dbg !717
  store i64 %2987, i64* %2984, align 4, !dbg !718
  br label %2989, !dbg !719

2988:                                             ; preds = %2980
  store i64 %2983, i64* %2984, align 4, !dbg !720
  br label %2989, !dbg !721

2989:                                             ; preds = %2988, %2986
  %2990 = load i32, i32* %2517, align 4, !dbg !722
  %2991 = add i32 %2990, 1, !dbg !722
  store i32 %2991, i32* %2517, align 4, !dbg !722
  %2992 = load i64, i64* %2984, align 4, !dbg !723
  %2993 = icmp slt i64 %2992, 127, !dbg !724
  %2994 = icmp slt i64 %2992, 32767, !dbg !725
  %2995 = icmp slt i64 %2992, 8388607, !dbg !726
  %2996 = icmp slt i64 %2992, 2147483647, !dbg !727
  br i1 %2993, label %2997, label %3006, !dbg !728

2997:                                             ; preds = %2989
  %2998 = and i64 %2983, 1, !dbg !729
  %2999 = icmp eq i64 %2998, %2983, !dbg !730
  br i1 %2999, label %3000, label %3003, !dbg !731

3000:                                             ; preds = %2997
  %3001 = trunc i64 %2992 to i32, !dbg !732
  %3002 = add i32 %3001, 8, !dbg !733
  store i32 %3002, i32* %2970, align 4, !dbg !734
  br label %3069, !dbg !735

3003:                                             ; preds = %2997
  %3004 = load i64, i64* %2516, align 4, !dbg !736
  %3005 = add i64 %3004, 1, !dbg !736
  store i64 %3005, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %2970, align 4, !dbg !737
  br label %3069, !dbg !738

3006:                                             ; preds = %2989
  %3007 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %2994, label %3008, label %3010, !dbg !740

3008:                                             ; preds = %3006
  %3009 = add i64 %3007, 2, !dbg !741
  store i64 %3009, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %2970, align 4, !dbg !742
  br label %3069, !dbg !743

3010:                                             ; preds = %3006
  br i1 %2995, label %3011, label %3013, !dbg !744

3011:                                             ; preds = %3010
  %3012 = add i64 %3007, 3, !dbg !745
  store i64 %3012, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %2970, align 4, !dbg !746
  br label %3069, !dbg !747

3013:                                             ; preds = %3010
  br i1 %2996, label %3014, label %3016, !dbg !748

3014:                                             ; preds = %3013
  %3015 = add i64 %3007, 4, !dbg !749
  store i64 %3015, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %2970, align 4, !dbg !750
  br label %3069, !dbg !751

3016:                                             ; preds = %3013
  %3017 = add i64 %3007, 8, !dbg !752
  store i64 %3017, i64* %2516, align 4, !dbg !752
  %3018 = and i16 %2963, 32, !dbg !753
  %3019 = icmp ne i16 %3018, 0, !dbg !753
  br i1 %3019, label %3020, label %3023, !dbg !754

3020:                                             ; preds = %3016
  %3021 = and i16 %2963, -33, !dbg !755
  %3022 = or i16 %3021, 8, !dbg !756
  store i16 %3022, i16* %2962, align 2, !dbg !757
  store i32 7, i32* %2970, align 4, !dbg !758
  br label %3069, !dbg !759

3023:                                             ; preds = %3016
  store i32 6, i32* %2970, align 4, !dbg !760
  br label %3069, !dbg !761

3024:                                             ; preds = %2979
  br i1 %2969, label %3025, label %3030, !dbg !762

3025:                                             ; preds = %3024
  %3026 = load i32, i32* %2517, align 4, !dbg !763
  %3027 = add i32 %3026, 1, !dbg !763
  store i32 %3027, i32* %2517, align 4, !dbg !763
  %3028 = load i64, i64* %2516, align 4, !dbg !764
  %3029 = add i64 %3028, 8, !dbg !764
  store i64 %3029, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %2970, align 4, !dbg !765
  br label %3069, !dbg !766

3030:                                             ; preds = %3024
  %3031 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 0, i32 4, !dbg !767
  %3032 = load i32, i32* %3031, align 4, !dbg !768
  %3033 = alloca i32, align 8, !dbg !769
  store i32 %3032, i32* %3033, align 4, !dbg !770
  %3034 = alloca i32, align 8, !dbg !771
  %3035 = add i32 %3032, %3032, !dbg !772
  %3036 = add i32 %3035, 12, !dbg !773
  %3037 = and i16 %2963, 2, !dbg !774
  %3038 = icmp ne i16 %3037, 0, !dbg !775
  %3039 = zext i1 %3038 to i32, !dbg !776
  %3040 = add i32 %3036, %3039, !dbg !777
  store i32 %3040, i32* %3034, align 4, !dbg !778
  %3041 = and i16 %2963, 16384, !dbg !779
  %3042 = icmp ne i16 %3041, 0, !dbg !780
  br i1 %3042, label %3043, label %3059, !dbg !781

3043:                                             ; preds = %3030
  %3044 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 0, i32 0, !dbg !782
  %3045 = bitcast %union.MemValue* %3044 to i32*, !dbg !783
  %3046 = load i32, i32* %3045, align 4, !dbg !784
  %3047 = add i32 %3046, %3046, !dbg !785
  %3048 = add i32 %3040, %3047, !dbg !786
  store i32 %3048, i32* %3034, align 4, !dbg !786
  %3049 = load i64, i64* %2516, align 4, !dbg !787
  %3050 = icmp ne i64 %3049, 0, !dbg !787
  br i1 %3050, label %3055, label %3051, !dbg !788

3051:                                             ; preds = %3043
  %3052 = zext i32 %3046 to i64, !dbg !789
  %3053 = load i64, i64* %2518, align 4, !dbg !790
  %3054 = add i64 %3053, %3052, !dbg !790
  store i64 %3054, i64* %2518, align 4, !dbg !790
  br label %3059, !dbg !791

3055:                                             ; preds = %3043
  %3056 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2961), !dbg !792
  %3057 = load i32, i32* %3033, align 4, !dbg !793
  %3058 = add i32 %3057, %3046, !dbg !793
  store i32 %3058, i32* %3033, align 4, !dbg !793
  br label %3059, !dbg !794

3059:                                             ; preds = %3051, %3055, %3030
  %3060 = load i32, i32* %3033, align 4, !dbg !795
  %3061 = zext i32 %3060 to i64, !dbg !796
  %3062 = load i64, i64* %2516, align 4, !dbg !797
  %3063 = add i64 %3062, %3061, !dbg !797
  store i64 %3063, i64* %2516, align 4, !dbg !797
  %3064 = load i32, i32* %3034, align 4, !dbg !798
  %3065 = zext i32 %3064 to i64, !dbg !799
  %3066 = call i32 @sqlite3VarintLen(i64 %3065), !dbg !800
  %3067 = load i32, i32* %2517, align 4, !dbg !801
  %3068 = add i32 %3067, %3066, !dbg !801
  store i32 %3068, i32* %2517, align 4, !dbg !801
  store i32 %3064, i32* %2970, align 4, !dbg !802
  br label %3069, !dbg !803

3069:                                             ; preds = %3008, %3011, %3014, %3020, %3023, %3003, %3000, %3059, %3025, %2976
  %3070 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2961, i32 -1, !dbg !804
  %3071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 0, i32 1, !dbg !695
  %3072 = load i16, i16* %3071, align 2, !dbg !696
  %3073 = and i16 %3072, 1, !dbg !697
  %3074 = icmp ne i16 %3073, 0, !dbg !697
  %3075 = and i16 %3072, 36, !dbg !698
  %3076 = icmp ne i16 %3075, 0, !dbg !698
  %3077 = and i16 %3072, 8, !dbg !699
  %3078 = icmp ne i16 %3077, 0, !dbg !699
  %3079 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 0, i32 8, !dbg !700
  br i1 %3074, label %3080, label %3088, !dbg !701

3080:                                             ; preds = %3069
  %3081 = and i16 %3072, 16384, !dbg !702
  %3082 = icmp ne i16 %3081, 0, !dbg !702
  br i1 %3082, label %3083, label %3084, !dbg !703

3083:                                             ; preds = %3080
  store i32 10, i32* %3079, align 4, !dbg !704
  br label %3085, !dbg !705

3084:                                             ; preds = %3080
  store i32 0, i32* %3079, align 4, !dbg !706
  br label %3085, !dbg !707

3085:                                             ; preds = %3084, %3083
  %3086 = load i32, i32* %2517, align 4, !dbg !708
  %3087 = add i32 %3086, 1, !dbg !708
  store i32 %3087, i32* %2517, align 4, !dbg !708
  br label %3178, !dbg !709

3088:                                             ; preds = %3069
  br i1 %3076, label %3089, label %3133, !dbg !710

3089:                                             ; preds = %3088
  %3090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 0, i32 0, !dbg !711
  %3091 = bitcast %union.MemValue* %3090 to i64*, !dbg !712
  %3092 = load i64, i64* %3091, align 4, !dbg !713
  %3093 = alloca i64, align 8, !dbg !714
  %3094 = icmp slt i64 %3092, 0, !dbg !715
  br i1 %3094, label %3095, label %3097, !dbg !716

3095:                                             ; preds = %3089
  %3096 = xor i64 %3092, -1, !dbg !717
  store i64 %3096, i64* %3093, align 4, !dbg !718
  br label %3098, !dbg !719

3097:                                             ; preds = %3089
  store i64 %3092, i64* %3093, align 4, !dbg !720
  br label %3098, !dbg !721

3098:                                             ; preds = %3097, %3095
  %3099 = load i32, i32* %2517, align 4, !dbg !722
  %3100 = add i32 %3099, 1, !dbg !722
  store i32 %3100, i32* %2517, align 4, !dbg !722
  %3101 = load i64, i64* %3093, align 4, !dbg !723
  %3102 = icmp slt i64 %3101, 127, !dbg !724
  %3103 = icmp slt i64 %3101, 32767, !dbg !725
  %3104 = icmp slt i64 %3101, 8388607, !dbg !726
  %3105 = icmp slt i64 %3101, 2147483647, !dbg !727
  br i1 %3102, label %3106, label %3115, !dbg !728

3106:                                             ; preds = %3098
  %3107 = and i64 %3092, 1, !dbg !729
  %3108 = icmp eq i64 %3107, %3092, !dbg !730
  br i1 %3108, label %3109, label %3112, !dbg !731

3109:                                             ; preds = %3106
  %3110 = trunc i64 %3101 to i32, !dbg !732
  %3111 = add i32 %3110, 8, !dbg !733
  store i32 %3111, i32* %3079, align 4, !dbg !734
  br label %3178, !dbg !735

3112:                                             ; preds = %3106
  %3113 = load i64, i64* %2516, align 4, !dbg !736
  %3114 = add i64 %3113, 1, !dbg !736
  store i64 %3114, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %3079, align 4, !dbg !737
  br label %3178, !dbg !738

3115:                                             ; preds = %3098
  %3116 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %3103, label %3117, label %3119, !dbg !740

3117:                                             ; preds = %3115
  %3118 = add i64 %3116, 2, !dbg !741
  store i64 %3118, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %3079, align 4, !dbg !742
  br label %3178, !dbg !743

3119:                                             ; preds = %3115
  br i1 %3104, label %3120, label %3122, !dbg !744

3120:                                             ; preds = %3119
  %3121 = add i64 %3116, 3, !dbg !745
  store i64 %3121, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %3079, align 4, !dbg !746
  br label %3178, !dbg !747

3122:                                             ; preds = %3119
  br i1 %3105, label %3123, label %3125, !dbg !748

3123:                                             ; preds = %3122
  %3124 = add i64 %3116, 4, !dbg !749
  store i64 %3124, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %3079, align 4, !dbg !750
  br label %3178, !dbg !751

3125:                                             ; preds = %3122
  %3126 = add i64 %3116, 8, !dbg !752
  store i64 %3126, i64* %2516, align 4, !dbg !752
  %3127 = and i16 %3072, 32, !dbg !753
  %3128 = icmp ne i16 %3127, 0, !dbg !753
  br i1 %3128, label %3129, label %3132, !dbg !754

3129:                                             ; preds = %3125
  %3130 = and i16 %3072, -33, !dbg !755
  %3131 = or i16 %3130, 8, !dbg !756
  store i16 %3131, i16* %3071, align 2, !dbg !757
  store i32 7, i32* %3079, align 4, !dbg !758
  br label %3178, !dbg !759

3132:                                             ; preds = %3125
  store i32 6, i32* %3079, align 4, !dbg !760
  br label %3178, !dbg !761

3133:                                             ; preds = %3088
  br i1 %3078, label %3134, label %3139, !dbg !762

3134:                                             ; preds = %3133
  %3135 = load i32, i32* %2517, align 4, !dbg !763
  %3136 = add i32 %3135, 1, !dbg !763
  store i32 %3136, i32* %2517, align 4, !dbg !763
  %3137 = load i64, i64* %2516, align 4, !dbg !764
  %3138 = add i64 %3137, 8, !dbg !764
  store i64 %3138, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %3079, align 4, !dbg !765
  br label %3178, !dbg !766

3139:                                             ; preds = %3133
  %3140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 0, i32 4, !dbg !767
  %3141 = load i32, i32* %3140, align 4, !dbg !768
  %3142 = alloca i32, align 8, !dbg !769
  store i32 %3141, i32* %3142, align 4, !dbg !770
  %3143 = alloca i32, align 8, !dbg !771
  %3144 = add i32 %3141, %3141, !dbg !772
  %3145 = add i32 %3144, 12, !dbg !773
  %3146 = and i16 %3072, 2, !dbg !774
  %3147 = icmp ne i16 %3146, 0, !dbg !775
  %3148 = zext i1 %3147 to i32, !dbg !776
  %3149 = add i32 %3145, %3148, !dbg !777
  store i32 %3149, i32* %3143, align 4, !dbg !778
  %3150 = and i16 %3072, 16384, !dbg !779
  %3151 = icmp ne i16 %3150, 0, !dbg !780
  br i1 %3151, label %3152, label %3168, !dbg !781

3152:                                             ; preds = %3139
  %3153 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 0, i32 0, !dbg !782
  %3154 = bitcast %union.MemValue* %3153 to i32*, !dbg !783
  %3155 = load i32, i32* %3154, align 4, !dbg !784
  %3156 = add i32 %3155, %3155, !dbg !785
  %3157 = add i32 %3149, %3156, !dbg !786
  store i32 %3157, i32* %3143, align 4, !dbg !786
  %3158 = load i64, i64* %2516, align 4, !dbg !787
  %3159 = icmp ne i64 %3158, 0, !dbg !787
  br i1 %3159, label %3164, label %3160, !dbg !788

3160:                                             ; preds = %3152
  %3161 = zext i32 %3155 to i64, !dbg !789
  %3162 = load i64, i64* %2518, align 4, !dbg !790
  %3163 = add i64 %3162, %3161, !dbg !790
  store i64 %3163, i64* %2518, align 4, !dbg !790
  br label %3168, !dbg !791

3164:                                             ; preds = %3152
  %3165 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3070), !dbg !792
  %3166 = load i32, i32* %3142, align 4, !dbg !793
  %3167 = add i32 %3166, %3155, !dbg !793
  store i32 %3167, i32* %3142, align 4, !dbg !793
  br label %3168, !dbg !794

3168:                                             ; preds = %3160, %3164, %3139
  %3169 = load i32, i32* %3142, align 4, !dbg !795
  %3170 = zext i32 %3169 to i64, !dbg !796
  %3171 = load i64, i64* %2516, align 4, !dbg !797
  %3172 = add i64 %3171, %3170, !dbg !797
  store i64 %3172, i64* %2516, align 4, !dbg !797
  %3173 = load i32, i32* %3143, align 4, !dbg !798
  %3174 = zext i32 %3173 to i64, !dbg !799
  %3175 = call i32 @sqlite3VarintLen(i64 %3174), !dbg !800
  %3176 = load i32, i32* %2517, align 4, !dbg !801
  %3177 = add i32 %3176, %3175, !dbg !801
  store i32 %3177, i32* %2517, align 4, !dbg !801
  store i32 %3173, i32* %3079, align 4, !dbg !802
  br label %3178, !dbg !803

3178:                                             ; preds = %3117, %3120, %3123, %3129, %3132, %3112, %3109, %3168, %3134, %3085
  %3179 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3070, i32 -1, !dbg !804
  %3180 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3179, i32 0, i32 1, !dbg !695
  %3181 = load i16, i16* %3180, align 2, !dbg !696
  %3182 = and i16 %3181, 1, !dbg !697
  %3183 = icmp ne i16 %3182, 0, !dbg !697
  %3184 = and i16 %3181, 36, !dbg !698
  %3185 = icmp ne i16 %3184, 0, !dbg !698
  %3186 = and i16 %3181, 8, !dbg !699
  %3187 = icmp ne i16 %3186, 0, !dbg !699
  %3188 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3179, i32 0, i32 8, !dbg !700
  br i1 %3183, label %3189, label %3197, !dbg !701

3189:                                             ; preds = %3178
  %3190 = and i16 %3181, 16384, !dbg !702
  %3191 = icmp ne i16 %3190, 0, !dbg !702
  br i1 %3191, label %3192, label %3193, !dbg !703

3192:                                             ; preds = %3189
  store i32 10, i32* %3188, align 4, !dbg !704
  br label %3194, !dbg !705

3193:                                             ; preds = %3189
  store i32 0, i32* %3188, align 4, !dbg !706
  br label %3194, !dbg !707

3194:                                             ; preds = %3193, %3192
  %3195 = load i32, i32* %2517, align 4, !dbg !708
  %3196 = add i32 %3195, 1, !dbg !708
  store i32 %3196, i32* %2517, align 4, !dbg !708
  br label %3287, !dbg !709

3197:                                             ; preds = %3178
  br i1 %3185, label %3198, label %3242, !dbg !710

3198:                                             ; preds = %3197
  %3199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3179, i32 0, i32 0, !dbg !711
  %3200 = bitcast %union.MemValue* %3199 to i64*, !dbg !712
  %3201 = load i64, i64* %3200, align 4, !dbg !713
  %3202 = alloca i64, align 8, !dbg !714
  %3203 = icmp slt i64 %3201, 0, !dbg !715
  br i1 %3203, label %3204, label %3206, !dbg !716

3204:                                             ; preds = %3198
  %3205 = xor i64 %3201, -1, !dbg !717
  store i64 %3205, i64* %3202, align 4, !dbg !718
  br label %3207, !dbg !719

3206:                                             ; preds = %3198
  store i64 %3201, i64* %3202, align 4, !dbg !720
  br label %3207, !dbg !721

3207:                                             ; preds = %3206, %3204
  %3208 = load i32, i32* %2517, align 4, !dbg !722
  %3209 = add i32 %3208, 1, !dbg !722
  store i32 %3209, i32* %2517, align 4, !dbg !722
  %3210 = load i64, i64* %3202, align 4, !dbg !723
  %3211 = icmp slt i64 %3210, 127, !dbg !724
  %3212 = icmp slt i64 %3210, 32767, !dbg !725
  %3213 = icmp slt i64 %3210, 8388607, !dbg !726
  %3214 = icmp slt i64 %3210, 2147483647, !dbg !727
  br i1 %3211, label %3215, label %3224, !dbg !728

3215:                                             ; preds = %3207
  %3216 = and i64 %3201, 1, !dbg !729
  %3217 = icmp eq i64 %3216, %3201, !dbg !730
  br i1 %3217, label %3218, label %3221, !dbg !731

3218:                                             ; preds = %3215
  %3219 = trunc i64 %3210 to i32, !dbg !732
  %3220 = add i32 %3219, 8, !dbg !733
  store i32 %3220, i32* %3188, align 4, !dbg !734
  br label %3287, !dbg !735

3221:                                             ; preds = %3215
  %3222 = load i64, i64* %2516, align 4, !dbg !736
  %3223 = add i64 %3222, 1, !dbg !736
  store i64 %3223, i64* %2516, align 4, !dbg !736
  store i32 1, i32* %3188, align 4, !dbg !737
  br label %3287, !dbg !738

3224:                                             ; preds = %3207
  %3225 = load i64, i64* %2516, align 4, !dbg !739
  br i1 %3212, label %3226, label %3228, !dbg !740

3226:                                             ; preds = %3224
  %3227 = add i64 %3225, 2, !dbg !741
  store i64 %3227, i64* %2516, align 4, !dbg !741
  store i32 2, i32* %3188, align 4, !dbg !742
  br label %3287, !dbg !743

3228:                                             ; preds = %3224
  br i1 %3213, label %3229, label %3231, !dbg !744

3229:                                             ; preds = %3228
  %3230 = add i64 %3225, 3, !dbg !745
  store i64 %3230, i64* %2516, align 4, !dbg !745
  store i32 3, i32* %3188, align 4, !dbg !746
  br label %3287, !dbg !747

3231:                                             ; preds = %3228
  br i1 %3214, label %3232, label %3234, !dbg !748

3232:                                             ; preds = %3231
  %3233 = add i64 %3225, 4, !dbg !749
  store i64 %3233, i64* %2516, align 4, !dbg !749
  store i32 4, i32* %3188, align 4, !dbg !750
  br label %3287, !dbg !751

3234:                                             ; preds = %3231
  %3235 = add i64 %3225, 8, !dbg !752
  store i64 %3235, i64* %2516, align 4, !dbg !752
  %3236 = and i16 %3181, 32, !dbg !753
  %3237 = icmp ne i16 %3236, 0, !dbg !753
  br i1 %3237, label %3238, label %3241, !dbg !754

3238:                                             ; preds = %3234
  %3239 = and i16 %3181, -33, !dbg !755
  %3240 = or i16 %3239, 8, !dbg !756
  store i16 %3240, i16* %3180, align 2, !dbg !757
  store i32 7, i32* %3188, align 4, !dbg !758
  br label %3287, !dbg !759

3241:                                             ; preds = %3234
  store i32 6, i32* %3188, align 4, !dbg !760
  br label %3287, !dbg !761

3242:                                             ; preds = %3197
  br i1 %3187, label %3243, label %3248, !dbg !762

3243:                                             ; preds = %3242
  %3244 = load i32, i32* %2517, align 4, !dbg !763
  %3245 = add i32 %3244, 1, !dbg !763
  store i32 %3245, i32* %2517, align 4, !dbg !763
  %3246 = load i64, i64* %2516, align 4, !dbg !764
  %3247 = add i64 %3246, 8, !dbg !764
  store i64 %3247, i64* %2516, align 4, !dbg !764
  store i32 7, i32* %3188, align 4, !dbg !765
  br label %3287, !dbg !766

3248:                                             ; preds = %3242
  %3249 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3179, i32 0, i32 4, !dbg !767
  %3250 = load i32, i32* %3249, align 4, !dbg !768
  %3251 = alloca i32, align 8, !dbg !769
  store i32 %3250, i32* %3251, align 4, !dbg !770
  %3252 = alloca i32, align 8, !dbg !771
  %3253 = add i32 %3250, %3250, !dbg !772
  %3254 = add i32 %3253, 12, !dbg !773
  %3255 = and i16 %3181, 2, !dbg !774
  %3256 = icmp ne i16 %3255, 0, !dbg !775
  %3257 = zext i1 %3256 to i32, !dbg !776
  %3258 = add i32 %3254, %3257, !dbg !777
  store i32 %3258, i32* %3252, align 4, !dbg !778
  %3259 = and i16 %3181, 16384, !dbg !779
  %3260 = icmp ne i16 %3259, 0, !dbg !780
  br i1 %3260, label %3261, label %3277, !dbg !781

3261:                                             ; preds = %3248
  %3262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3179, i32 0, i32 0, !dbg !782
  %3263 = bitcast %union.MemValue* %3262 to i32*, !dbg !783
  %3264 = load i32, i32* %3263, align 4, !dbg !784
  %3265 = add i32 %3264, %3264, !dbg !785
  %3266 = add i32 %3258, %3265, !dbg !786
  store i32 %3266, i32* %3252, align 4, !dbg !786
  %3267 = load i64, i64* %2516, align 4, !dbg !787
  %3268 = icmp ne i64 %3267, 0, !dbg !787
  br i1 %3268, label %3273, label %3269, !dbg !788

3269:                                             ; preds = %3261
  %3270 = zext i32 %3264 to i64, !dbg !789
  %3271 = load i64, i64* %2518, align 4, !dbg !790
  %3272 = add i64 %3271, %3270, !dbg !790
  store i64 %3272, i64* %2518, align 4, !dbg !790
  br label %3277, !dbg !791

3273:                                             ; preds = %3261
  %3274 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3179), !dbg !792
  %3275 = load i32, i32* %3251, align 4, !dbg !793
  %3276 = add i32 %3275, %3264, !dbg !793
  store i32 %3276, i32* %3251, align 4, !dbg !793
  br label %3277, !dbg !794

3277:                                             ; preds = %3269, %3273, %3248
  %3278 = load i32, i32* %3251, align 4, !dbg !795
  %3279 = zext i32 %3278 to i64, !dbg !796
  %3280 = load i64, i64* %2516, align 4, !dbg !797
  %3281 = add i64 %3280, %3279, !dbg !797
  store i64 %3281, i64* %2516, align 4, !dbg !797
  %3282 = load i32, i32* %3252, align 4, !dbg !798
  %3283 = zext i32 %3282 to i64, !dbg !799
  %3284 = call i32 @sqlite3VarintLen(i64 %3283), !dbg !800
  %3285 = load i32, i32* %2517, align 4, !dbg !801
  %3286 = add i32 %3285, %3284, !dbg !801
  store i32 %3286, i32* %2517, align 4, !dbg !801
  store i32 %3282, i32* %3188, align 4, !dbg !802
  br label %3287, !dbg !803

3287:                                             ; preds = %3226, %3229, %3232, %3238, %3241, %3221, %3218, %3277, %3243, %3194
  %3288 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 5, !dbg !805
  %3289 = load i32, i32* %2517, align 4, !dbg !806
  %3290 = zext i32 %3289 to i64, !dbg !807
  %3291 = icmp slt i32 %3289, 126, !dbg !808
  br i1 %3291, label %3292, label %3294, !dbg !809

3292:                                             ; preds = %3287
  %3293 = add i32 %3289, 1, !dbg !810
  store i32 %3293, i32* %2517, align 4, !dbg !810
  br label %3303, !dbg !811

3294:                                             ; preds = %3287
  %3295 = call i32 @sqlite3VarintLen(i64 %3290), !dbg !812
  %3296 = load i32, i32* %2517, align 4, !dbg !813
  %3297 = add i32 %3296, %3295, !dbg !813
  store i32 %3297, i32* %2517, align 4, !dbg !813
  %3298 = call i32 @sqlite3VarintLen(i64 %3290), !dbg !814
  %3299 = icmp slt i32 %3295, %3298, !dbg !815
  br i1 %3299, label %3300, label %3303, !dbg !816

3300:                                             ; preds = %3294
  %3301 = load i32, i32* %2517, align 4, !dbg !817
  %3302 = add i32 %3301, 1, !dbg !817
  store i32 %3302, i32* %2517, align 4, !dbg !817
  br label %3303, !dbg !818

3303:                                             ; preds = %3300, %3294, %3292
  %3304 = load i32, i32* %2517, align 4, !dbg !819
  %3305 = zext i32 %3304 to i64, !dbg !819
  %3306 = load i64, i64* %2516, align 4, !dbg !820
  %3307 = add i64 %3305, %3306, !dbg !820
  %3308 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 7, !dbg !821
  %3309 = load i32, i32* %3308, align 4, !dbg !822
  %3310 = zext i32 %3309 to i64, !dbg !823
  %3311 = load i64, i64* %2518, align 4, !dbg !824
  %3312 = add i64 %3307, %3311, !dbg !825
  %3313 = icmp sle i64 %3312, %3310, !dbg !826
  br i1 %3313, label %3314, label %3317, !dbg !827

3314:                                             ; preds = %3303
  %3315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 6, !dbg !828
  %3316 = load i8*, i8** %3315, align 8, !dbg !829
  store i8* %3316, i8** %3288, align 8, !dbg !830
  br label %3320, !dbg !831

3317:                                             ; preds = %3303
  %3318 = trunc i64 %3307 to i32, !dbg !832
  %3319 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %2525, i32 %3318), !dbg !833
  br label %3320, !dbg !834

3320:                                             ; preds = %3317, %3314
  %3321 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 4, !dbg !835
  %3322 = trunc i64 %3307 to i32, !dbg !836
  store i32 %3322, i32* %3321, align 4, !dbg !837
  %3323 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 1, !dbg !838
  store i16 16, i16* %3323, align 2, !dbg !839
  %3324 = load i64, i64* %2518, align 4, !dbg !840
  %3325 = icmp ne i64 %3324, 0, !dbg !841
  br i1 %3325, label %3326, label %3332, !dbg !842

3326:                                             ; preds = %3320
  %3327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2525, i32 0, i32 0, i32 0, !dbg !843
  %3328 = bitcast double* %3327 to i32*, !dbg !844
  %3329 = trunc i64 %3324 to i32, !dbg !845
  store i32 %3329, i32* %3328, align 4, !dbg !846
  %3330 = load i16, i16* %3323, align 2, !dbg !847
  %3331 = or i16 %3330, 16384, !dbg !848
  store i16 %3331, i16* %3323, align 2, !dbg !849
  br label %3332, !dbg !850

3332:                                             ; preds = %3326, %3320
  %3333 = alloca i8*, align 8, !dbg !851
  %3334 = load i8*, i8** %3288, align 8, !dbg !852
  store i8* %3334, i8** %3333, align 8, !dbg !853
  %3335 = load i32, i32* %2517, align 4, !dbg !854
  %3336 = zext i32 %3335 to i64, !dbg !855
  %3337 = getelementptr i8, i8* %3334, i32 %3335, !dbg !856
  store i8* %3337, i8** %2519, align 8, !dbg !857
  %3338 = call i32 @sqlite3PutVarint(i8* %3334, i64 %3336), !dbg !858
  %3339 = getelementptr i8, i8* %3334, i32 %3338, !dbg !859
  store i8* %3339, i8** %3333, align 8, !dbg !860
  %3340 = load i8*, i8** %2519, align 8, !dbg !861
  %3341 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2523, i32 0, i32 8, !dbg !862
  %3342 = load i32, i32* %3341, align 4, !dbg !863
  %3343 = zext i32 %3342 to i64, !dbg !864
  %3344 = call i32 @sqlite3PutVarint(i8* %3339, i64 %3343), !dbg !865
  %3345 = getelementptr i8, i8* %3339, i32 %3344, !dbg !866
  store i8* %3345, i8** %3333, align 8, !dbg !867
  %3346 = call i32 @sqlite3VdbeSerialPut(i8* %3340, %struct.sqlite3_value* %2523, i32 %3342), !dbg !868
  %3347 = getelementptr i8, i8* %3340, i32 %3346, !dbg !869
  %3348 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2523, i32 1, !dbg !870
  %3349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3348, i32 0, i32 8, !dbg !862
  %3350 = load i32, i32* %3349, align 4, !dbg !863
  %3351 = zext i32 %3350 to i64, !dbg !864
  %3352 = call i32 @sqlite3PutVarint(i8* %3345, i64 %3351), !dbg !865
  %3353 = getelementptr i8, i8* %3345, i32 %3352, !dbg !866
  store i8* %3353, i8** %3333, align 8, !dbg !867
  %3354 = call i32 @sqlite3VdbeSerialPut(i8* %3347, %struct.sqlite3_value* %3348, i32 %3350), !dbg !868
  %3355 = getelementptr i8, i8* %3347, i32 %3354, !dbg !869
  %3356 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3348, i32 1, !dbg !870
  %3357 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3356, i32 0, i32 8, !dbg !862
  %3358 = load i32, i32* %3357, align 4, !dbg !863
  %3359 = zext i32 %3358 to i64, !dbg !864
  %3360 = call i32 @sqlite3PutVarint(i8* %3353, i64 %3359), !dbg !865
  %3361 = getelementptr i8, i8* %3353, i32 %3360, !dbg !866
  store i8* %3361, i8** %3333, align 8, !dbg !867
  %3362 = call i32 @sqlite3VdbeSerialPut(i8* %3355, %struct.sqlite3_value* %3356, i32 %3358), !dbg !868
  %3363 = getelementptr i8, i8* %3355, i32 %3362, !dbg !869
  %3364 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3356, i32 1, !dbg !870
  %3365 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3364, i32 0, i32 8, !dbg !862
  %3366 = load i32, i32* %3365, align 4, !dbg !863
  %3367 = zext i32 %3366 to i64, !dbg !864
  %3368 = call i32 @sqlite3PutVarint(i8* %3361, i64 %3367), !dbg !865
  %3369 = getelementptr i8, i8* %3361, i32 %3368, !dbg !866
  store i8* %3369, i8** %3333, align 8, !dbg !867
  %3370 = call i32 @sqlite3VdbeSerialPut(i8* %3363, %struct.sqlite3_value* %3364, i32 %3366), !dbg !868
  %3371 = getelementptr i8, i8* %3363, i32 %3370, !dbg !869
  %3372 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3364, i32 1, !dbg !870
  %3373 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3372, i32 0, i32 8, !dbg !862
  %3374 = load i32, i32* %3373, align 4, !dbg !863
  %3375 = zext i32 %3374 to i64, !dbg !864
  %3376 = call i32 @sqlite3PutVarint(i8* %3369, i64 %3375), !dbg !865
  %3377 = getelementptr i8, i8* %3369, i32 %3376, !dbg !866
  store i8* %3377, i8** %3333, align 8, !dbg !867
  %3378 = call i32 @sqlite3VdbeSerialPut(i8* %3371, %struct.sqlite3_value* %3372, i32 %3374), !dbg !868
  %3379 = getelementptr i8, i8* %3371, i32 %3378, !dbg !869
  %3380 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3372, i32 1, !dbg !870
  %3381 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3380, i32 0, i32 8, !dbg !862
  %3382 = load i32, i32* %3381, align 4, !dbg !863
  %3383 = zext i32 %3382 to i64, !dbg !864
  %3384 = call i32 @sqlite3PutVarint(i8* %3377, i64 %3383), !dbg !865
  %3385 = getelementptr i8, i8* %3377, i32 %3384, !dbg !866
  store i8* %3385, i8** %3333, align 8, !dbg !867
  %3386 = call i32 @sqlite3VdbeSerialPut(i8* %3379, %struct.sqlite3_value* %3380, i32 %3382), !dbg !868
  %3387 = getelementptr i8, i8* %3379, i32 %3386, !dbg !869
  %3388 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3380, i32 1, !dbg !870
  %3389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3388, i32 0, i32 8, !dbg !862
  %3390 = load i32, i32* %3389, align 4, !dbg !863
  %3391 = zext i32 %3390 to i64, !dbg !864
  %3392 = call i32 @sqlite3PutVarint(i8* %3385, i64 %3391), !dbg !865
  %3393 = getelementptr i8, i8* %3385, i32 %3392, !dbg !866
  store i8* %3393, i8** %3333, align 8, !dbg !867
  %3394 = call i32 @sqlite3VdbeSerialPut(i8* %3387, %struct.sqlite3_value* %3388, i32 %3390), !dbg !868
  call void @llvm.stackrestore(i8* %2515), !dbg !871
  br label %3395, !dbg !74

3395:                                             ; preds = %3332, %14
  %3396 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !872
  %3397 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3396, align 8, !dbg !875
  %3398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !876
  %3399 = call i8* @llvm.stacksave(), !dbg !877
  %3400 = alloca i32, align 8, !dbg !878
  store i32 0, i32* %3400, align 4, !dbg !877
  %3401 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3398, i32 0, i32 1, !dbg !877
  %3402 = load i16, i16* %3401, align 2, !dbg !877
  %3403 = and i16 %3402, 16384, !dbg !877
  %3404 = icmp ne i16 %3403, 0, !dbg !877
  br i1 %3404, label %3405, label %3407, !dbg !877

3405:                                             ; preds = %3395
  %3406 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3398), !dbg !877
  store i32 %3406, i32* %3400, align 4, !dbg !877
  br label %3407, !dbg !878

3407:                                             ; preds = %3405, %3395
  call void @llvm.stackrestore(i8* %3399), !dbg !877
  %3408 = load i32, i32* %3400, align 4, !dbg !877
  %3409 = call i8* @llvm.stacksave(), !dbg !879
  %3410 = alloca %struct.BtreePayload, align 8, !dbg !880
  %3411 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3410, i32 0, i32 1, !dbg !881
  %3412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3398, i32 0, i32 4, !dbg !882
  %3413 = load i32, i32* %3412, align 4, !dbg !883
  %3414 = zext i32 %3413 to i64, !dbg !884
  store i64 %3414, i64* %3411, align 4, !dbg !885
  %3415 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3410, i32 0, i32 0, !dbg !886
  %3416 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3398, i32 0, i32 5, !dbg !887
  %3417 = load i8*, i8** %3416, align 8, !dbg !888
  store i8* %3417, i8** %3415, align 8, !dbg !889
  %3418 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3410, i32 0, i32 3, !dbg !890
  store %struct.sqlite3_value* %7, %struct.sqlite3_value** %3418, align 8, !dbg !891
  %3419 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %3410, i32 0, i32 4, !dbg !892
  store i16 0, i16* %3419, align 2, !dbg !893
  %3420 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3397, i32 0, i32 12, i32 0, !dbg !894
  %3421 = load %struct.BtCursor*, %struct.BtCursor** %3420, align 8, !dbg !895
  %3422 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3397, i32 0, i32 10, !dbg !896
  %3423 = load i32, i32* %3422, align 4, !dbg !896
  %3424 = call i32 @sqlite3BtreeInsert(%struct.BtCursor* %3421, %struct.BtreePayload* %3410, i32 0, i32 %3423), !dbg !897
  %3425 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3397, i32 0, i32 9, !dbg !898
  store i32 0, i32* %3425, align 4, !dbg !899
  call void @llvm.stackrestore(i8* %3409), !dbg !900
  br label %3426, !dbg !74

3426:                                             ; preds = %3407, %14
  %3427 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !901
  %3428 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3427, align 8, !dbg !904
  %3429 = ptrtoint %struct.VdbeCursor* %3428 to i64, !dbg !905
  %3430 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3428, i32 0, i32 12, i32 0, !dbg !906
  %3431 = load %struct.BtCursor*, %struct.BtCursor** %3430, align 8, !dbg !907
  %3432 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %3431, i32 0), !dbg !908
  %3433 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3428, i32 0, i32 2, !dbg !909
  %3434 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3428, i32 0, i32 9, !dbg !910
  store i32 0, i32* %3434, align 4, !dbg !911
  %3435 = icmp eq i32 %3432, 0, !dbg !912
  br i1 %3435, label %3436, label %3437, !dbg !913

3436:                                             ; preds = %3426
  store i8 0, i8* %3433, align 1, !dbg !914
  br label %921, !dbg !915

3437:                                             ; preds = %3426
  store i8 1, i8* %3433, align 1, !dbg !916
  br label %3438, !dbg !917

3438:                                             ; preds = %827, %3437, %915, %14
  %3439 = call i8* @llvm.stacksave(), !dbg !167
  %3440 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %3441 = load i8, i8* %3440, align 1, !dbg !171
  %3442 = alloca i32, align 4, !dbg !172
  store i32 3, i32* %3442, align 4, !dbg !173
  %3443 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !174
  %3444 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %3445 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3443, align 8, !dbg !176
  store %struct.VdbeCursor* %3445, %struct.VdbeCursor** %3444, align 8, !dbg !177
  %3446 = alloca i8*, align 8, !dbg !178
  %3447 = alloca i32, align 4, !dbg !179
  %3448 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3444, i32* %3442), !dbg !180
  %3449 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3444, align 8, !dbg !181
  %3450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !182
  %3451 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 16, !dbg !183
  %3452 = load i16, i16* %3451, align 2, !dbg !184
  %3453 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 19, !dbg !185
  %3454 = load i32*, i32** %3453, align 8, !dbg !186
  %3455 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 0, !dbg !187
  %3456 = load i8, i8* %3455, align 1, !dbg !188
  %3457 = icmp ne i8 %3456, 3, !dbg !189
  %3458 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 2, !dbg !190
  %3459 = load i8, i8* %3458, align 1, !dbg !191
  %3460 = icmp ne i8 %3459, 0, !dbg !192
  %3461 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 14, !dbg !193
  %3462 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 21, !dbg !194
  %3463 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 22, !dbg !195
  %3464 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 20, !dbg !196
  %3465 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 17, !dbg !197
  %3466 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 9, !dbg !198
  %3467 = load i32, i32* %3466, align 4, !dbg !199
  %3468 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %3469 = load i32, i32* %3468, align 4, !dbg !201
  %3470 = icmp ne i32 %3467, %3469, !dbg !202
  br i1 %3470, label %3471, label %3513, !dbg !203

3471:                                             ; preds = %3438
  br i1 %3460, label %3493, label %3488, !dbg !204

3472:                                             ; preds = %3488, %3495
  %3473 = load i32, i32* %3468, align 4, !dbg !205
  store i32 %3473, i32* %3466, align 4, !dbg !206
  %3474 = load i8*, i8** %3464, align 8, !dbg !207
  %3475 = load i8, i8* %3474, align 1, !dbg !208
  %3476 = icmp sgt i8 %3475, -1, !dbg !211
  br i1 %3476, label %3477, label %3479, !dbg !212

3477:                                             ; preds = %3472
  %3478 = zext i8 %3475 to i32, !dbg !213
  store i32 %3478, i32* %3454, align 4, !dbg !214
  store i32 1, i32* %3461, align 4, !dbg !215
  br label %3482, !dbg !216

3479:                                             ; preds = %3472
  %3480 = call i8 @sqlite3GetVarint32(i8* %3474, i32* %3454), !dbg !217
  %3481 = zext i8 %3480 to i32, !dbg !218
  store i32 %3481, i32* %3461, align 4, !dbg !219
  br label %3482, !dbg !220

3482:                                             ; preds = %3479, %3477
  store i16 0, i16* %3465, align 2, !dbg !221
  %3483 = load i32, i32* %3463, align 4, !dbg !222
  %3484 = load i32, i32* %3454, align 4, !dbg !223
  %3485 = icmp ult i32 %3483, %3484, !dbg !224
  br i1 %3485, label %3487, label %3486, !dbg !225

3486:                                             ; preds = %3482
  store i8* %3474, i8** %3446, align 8, !dbg !226
  br label %3604, !dbg !227

3487:                                             ; preds = %3482
  store i8* null, i8** %3464, align 8, !dbg !228
  store i32 0, i32* %3463, align 4, !dbg !229
  br label %3513, !dbg !230

3488:                                             ; preds = %3471
  %3489 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 12, i32 0, !dbg !231
  %3490 = load %struct.BtCursor*, %struct.BtCursor** %3489, align 8, !dbg !232
  %3491 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3490), !dbg !233
  store i32 %3491, i32* %3462, align 4, !dbg !234
  %3492 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3490, i32* %3463), !dbg !235
  store i8* %3492, i8** %3464, align 8, !dbg !236
  br label %3472, !dbg !237

3493:                                             ; preds = %3471
  %3494 = icmp eq i8 %3456, 3, !dbg !238
  br i1 %3494, label %3495, label %3506, !dbg !239

3495:                                             ; preds = %3493
  %3496 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 10, !dbg !240
  %3497 = load i32, i32* %3496, align 4, !dbg !241
  %3498 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3497, !dbg !242
  %3499 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3498, i32 0, i32 1, !dbg !243
  %3500 = load i16, i16* %3499, align 2, !dbg !244
  %3501 = and i16 %3500, 16, !dbg !245
  %3502 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3498, i32 0, i32 4, !dbg !246
  %3503 = load i32, i32* %3502, align 4, !dbg !247
  store i32 %3503, i32* %3462, align 4, !dbg !248
  store i32 %3503, i32* %3463, align 4, !dbg !249
  %3504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3498, i32 0, i32 5, !dbg !250
  %3505 = load i8*, i8** %3504, align 8, !dbg !251
  store i8* %3505, i8** %3464, align 8, !dbg !252
  br label %3472, !dbg !253

3506:                                             ; preds = %3493
  %3507 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 1, !dbg !254
  %3508 = load i16, i16* %3507, align 2, !dbg !254
  %3509 = and i16 %3508, 9216, !dbg !254
  %3510 = icmp ne i16 %3509, 0, !dbg !254
  br i1 %3510, label %3511, label %3512, !dbg !254

3511:                                             ; preds = %3506
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3450), !dbg !254
  br label %3692, !dbg !254

3512:                                             ; preds = %3506
  store i16 1, i16* %3507, align 2, !dbg !254
  br label %3692, !dbg !254

3513:                                             ; preds = %3487, %3438
  %3514 = load i16, i16* %3465, align 2, !dbg !255
  %3515 = icmp ule i16 %3514, 0, !dbg !256
  br i1 %3515, label %3596, label %3593, !dbg !257

3516:                                             ; preds = %3593, %3682
  %3517 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 1, !dbg !258
  %3518 = load i16, i16* %3517, align 2, !dbg !259
  %3519 = and i16 9216, %3518, !dbg !260
  %3520 = icmp eq i16 0, %3519, !dbg !261
  br i1 %3520, label %3521, label %3525, !dbg !262

3521:                                             ; preds = %3516
  %3522 = icmp ne i16 %3519, 0, !dbg !263
  br i1 %3522, label %3523, label %3524, !dbg !263

3523:                                             ; preds = %3521
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3450), !dbg !263
  br label %3525, !dbg !263

3524:                                             ; preds = %3521
  store i16 1, i16* %3517, align 2, !dbg !263
  br label %3525, !dbg !263

3525:                                             ; preds = %3523, %3524, %3516
  %3526 = load i32, i32* %3447, align 4, !dbg !264
  %3527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 23, i32 0, !dbg !265
  %3528 = load i32, i32* %3527, align 4, !dbg !266
  %3529 = load i32, i32* %3463, align 4, !dbg !267
  %3530 = getelementptr i32, i32* %3454, i32 1, !dbg !268
  %3531 = load i32, i32* %3530, align 4, !dbg !269
  %3532 = icmp sge i32 %3529, %3531, !dbg !270
  br i1 %3532, label %3533, label %3572, !dbg !271

3533:                                             ; preds = %3525
  %3534 = load i8*, i8** %3464, align 8, !dbg !272
  %3535 = ptrtoint i8* %3534 to i64, !dbg !273
  %3536 = load i32, i32* %3454, align 4, !dbg !275
  %3537 = zext i32 %3536 to i64, !dbg !276
  %3538 = add i64 %3535, %3537, !dbg !277
  %3539 = inttoptr i64 %3538 to i8*, !dbg !278
  store i8* %3539, i8** %3446, align 8, !dbg !279
  %3540 = load i32, i32* %3447, align 4, !dbg !280
  %3541 = icmp ult i32 %3540, 12, !dbg !281
  br i1 %3541, label %3542, label %3544, !dbg !282

3542:                                             ; preds = %3533
  %3543 = call i32 @sqlite3VdbeSerialGet(i8* %3539, i32 %3540, %struct.sqlite3_value* %3450), !dbg !283
  br label %3692, !dbg !284

3544:                                             ; preds = %3533
  %3545 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %3545, align 2, !dbg !286
  %3546 = getelementptr i16, i16* %3545, i32 1, !dbg !287
  store i16 514, i16* %3546, align 2, !dbg !288
  %3547 = load i32, i32* %3447, align 4, !dbg !289
  %3548 = sub i32 %3547, 12, !dbg !290
  %3549 = lshr i32 %3548, 1, !dbg !291
  %3550 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 4, !dbg !292
  store i32 %3549, i32* %3550, align 4, !dbg !293
  %3551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 2, !dbg !294
  store i8 %3441, i8* %3551, align 1, !dbg !295
  %3552 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 5, !dbg !296
  %3553 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 7, !dbg !297
  %3554 = load i32, i32* %3553, align 4, !dbg !298
  %3555 = add i32 %3549, 2, !dbg !299
  %3556 = icmp slt i32 %3554, %3555, !dbg !300
  br i1 %3556, label %3557, label %3559, !dbg !301

3557:                                             ; preds = %3544
  store i16 1, i16* %3517, align 2, !dbg !302
  %3558 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3450, i32 %3555, i32 0), !dbg !303
  br label %3562, !dbg !304

3559:                                             ; preds = %3544
  %3560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 6, !dbg !305
  %3561 = load i8*, i8** %3560, align 8, !dbg !306
  store i8* %3561, i8** %3552, align 8, !dbg !307
  br label %3562, !dbg !308

3562:                                             ; preds = %3559, %3557
  %3563 = zext i32 %3549 to i64, !dbg !309
  %3564 = load i8*, i8** %3552, align 8, !dbg !310
  %3565 = load i8*, i8** %3446, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3564, i8* %3565, i64 %3563, i1 false), !dbg !312
  %3566 = getelementptr i8, i8* %3564, i32 %3549, !dbg !313
  store i8 0, i8* %3566, align 1, !dbg !314
  %3567 = add i32 %3549, 1, !dbg !315
  %3568 = getelementptr i8, i8* %3564, i32 %3567, !dbg !316
  store i8 0, i8* %3568, align 1, !dbg !317
  %3569 = and i32 %3547, 1, !dbg !318
  %3570 = getelementptr i16, i16* %3545, i32 %3569, !dbg !319
  %3571 = load i16, i16* %3570, align 2, !dbg !320
  store i16 %3571, i16* %3517, align 2, !dbg !321
  br label %3692, !dbg !322

3572:                                             ; preds = %3525
  %3573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 2, !dbg !323
  store i8 %3441, i8* %3573, align 1, !dbg !324
  %3574 = load i32, i32* %3447, align 4, !dbg !325
  %3575 = and i32 %3574, 1, !dbg !326
  %3576 = icmp eq i32 %3575, 0, !dbg !327
  %3577 = icmp sge i32 %3574, 12, !dbg !328
  %3578 = and i1 %3577, %3576, !dbg !329
  %3579 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3574), !dbg !330
  %3580 = icmp eq i32 %3579, 0, !dbg !331
  br i1 %3580, label %3591, label %3581, !dbg !332

3581:                                             ; preds = %3572
  %3582 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 12, i32 0, !dbg !333
  %3583 = load %struct.BtCursor*, %struct.BtCursor** %3582, align 8, !dbg !334
  %3584 = load i32, i32* %3454, align 4, !dbg !336
  %3585 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3583, i32 %3584, i32 %3579, %struct.sqlite3_value* %3450), !dbg !337
  %3586 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 5, !dbg !338
  %3587 = load i8*, i8** %3586, align 8, !dbg !339
  %3588 = call i32 @sqlite3VdbeSerialGet(i8* %3587, i32 %3574, %struct.sqlite3_value* %3450), !dbg !340
  %3589 = load i16, i16* %3517, align 2, !dbg !341
  %3590 = and i16 %3589, -4097, !dbg !342
  store i16 %3590, i16* %3517, align 2, !dbg !343
  br label %3692, !dbg !344

3591:                                             ; preds = %3572
  %3592 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3574, %struct.sqlite3_value* %3450), !dbg !345
  br label %3692, !dbg !346

3593:                                             ; preds = %3513
  %3594 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 23, i32 0, !dbg !347
  %3595 = load i32, i32* %3594, align 4, !dbg !348
  store i32 %3595, i32* %3447, align 4, !dbg !349
  br label %3516, !dbg !350

3596:                                             ; preds = %3513
  %3597 = load i32, i32* %3461, align 4, !dbg !351
  %3598 = load i32, i32* %3454, align 4, !dbg !352
  %3599 = icmp ult i32 %3597, %3598, !dbg !353
  br i1 %3599, label %3600, label %3681, !dbg !354

3600:                                             ; preds = %3596
  %3601 = load i8*, i8** %3464, align 8, !dbg !355
  %3602 = icmp eq i8* %3601, null, !dbg !356
  br i1 %3602, label %3604, label %3603, !dbg !357

3603:                                             ; preds = %3600
  store i8* %3601, i8** %3446, align 8, !dbg !358
  br label %3604, !dbg !359

3604:                                             ; preds = %3603, %3600, %3486
  %3605 = alloca i32, align 4, !dbg !360
  %3606 = load i16, i16* %3465, align 2, !dbg !361
  %3607 = zext i16 %3606 to i32, !dbg !362
  store i32 %3607, i32* %3605, align 4, !dbg !363
  %3608 = alloca i64, align 8, !dbg !364
  %3609 = getelementptr i32, i32* %3454, i32 %3607, !dbg !365
  %3610 = load i32, i32* %3609, align 4, !dbg !366
  %3611 = zext i32 %3610 to i64, !dbg !367
  store i64 %3611, i64* %3608, align 4, !dbg !368
  %3612 = load i8*, i8** %3446, align 8, !dbg !369
  %3613 = load i32, i32* %3461, align 4, !dbg !370
  %3614 = alloca i8*, align 8, !dbg !371
  %3615 = getelementptr i8, i8* %3612, i32 %3613, !dbg !372
  store i8* %3615, i8** %3614, align 8, !dbg !373
  %3616 = load i32, i32* %3454, align 4, !dbg !374
  %3617 = getelementptr i8, i8* %3612, i32 %3616, !dbg !375
  br label %3618, !dbg !376

3618:                                             ; preds = %3625, %3604
  %3619 = load i32, i32* %3605, align 4, !dbg !377
  %3620 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3449, i32 0, i32 23, i32 %3619, !dbg !378
  %3621 = load i8*, i8** %3614, align 8, !dbg !379
  %3622 = load i8, i8* %3621, align 1, !dbg !380
  %3623 = zext i8 %3622 to i32, !dbg !381
  store i32 %3623, i32* %3447, align 4, !dbg !382
  store i32 %3623, i32* %3620, align 4, !dbg !383
  %3624 = icmp sgt i8 %3622, -1, !dbg !384
  br i1 %3624, label %3648, label %3639, !dbg !385

3625:                                             ; preds = %3639, %3648
  %3626 = load i32, i32* %3605, align 4, !dbg !386
  %3627 = add i32 %3626, 1, !dbg !387
  store i32 %3627, i32* %3605, align 4, !dbg !388
  %3628 = load i64, i64* %3608, align 4, !dbg !389
  %3629 = and i64 4294967295, %3628, !dbg !390
  %3630 = trunc i64 %3629 to i32, !dbg !391
  %3631 = getelementptr i32, i32* %3454, i32 %3627, !dbg !392
  store i32 %3630, i32* %3631, align 4, !dbg !393
  %3632 = load i32, i32* %3605, align 4, !dbg !394
  %3633 = icmp sle i32 %3632, 0, !dbg !395
  %3634 = load i8*, i8** %3614, align 8, !dbg !396
  %3635 = ptrtoint i8* %3634 to i64, !dbg !397
  %3636 = ptrtoint i8* %3617 to i64, !dbg !398
  %3637 = icmp ult i64 %3635, %3636, !dbg !399
  %3638 = and i1 %3633, %3637, !dbg !400
  br i1 %3638, label %3618, label %3657, !dbg !401

3639:                                             ; preds = %3618
  %3640 = load i8*, i8** %3614, align 8, !dbg !402
  %3641 = call i8 @sqlite3GetVarint32(i8* %3640, i32* %3447), !dbg !403
  %3642 = getelementptr i8, i8* %3640, i8 %3641, !dbg !404
  store i8* %3642, i8** %3614, align 8, !dbg !405
  %3643 = load i32, i32* %3447, align 4, !dbg !406
  store i32 %3643, i32* %3620, align 4, !dbg !407
  %3644 = load i64, i64* %3608, align 4, !dbg !408
  %3645 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3643), !dbg !409
  %3646 = zext i32 %3645 to i64, !dbg !410
  %3647 = add i64 %3644, %3646, !dbg !411
  store i64 %3647, i64* %3608, align 4, !dbg !412
  br label %3625, !dbg !413

3648:                                             ; preds = %3618
  %3649 = getelementptr i8, i8* %3621, i32 1, !dbg !414
  store i8* %3649, i8** %3614, align 8, !dbg !415
  %3650 = load i32, i32* %3447, align 4, !dbg !416
  %3651 = trunc i32 %3650 to i8, !dbg !417
  %3652 = getelementptr i8, i8* %4, i8 %3651, !dbg !418
  %3653 = load i8, i8* %3652, align 1, !dbg !419
  %3654 = zext i8 %3653 to i64, !dbg !420
  %3655 = load i64, i64* %3608, align 4, !dbg !421
  %3656 = add i64 %3655, %3654, !dbg !422
  store i64 %3656, i64* %3608, align 4, !dbg !423
  br label %3625, !dbg !424

3657:                                             ; preds = %3625
  %3658 = load i64, i64* %3608, align 4, !dbg !425
  %3659 = load i32, i32* %3462, align 4, !dbg !426
  %3660 = zext i32 %3659 to i64, !dbg !427
  %3661 = icmp uge i64 %3635, %3636, !dbg !428
  %3662 = icmp ugt i64 %3635, %3636, !dbg !429
  %3663 = icmp ne i64 %3658, %3660, !dbg !430
  %3664 = icmp ugt i64 %3658, %3660, !dbg !431
  %3665 = or i1 %3662, %3663, !dbg !432
  %3666 = and i1 %3661, %3665, !dbg !433
  %3667 = or i1 %3666, %3664, !dbg !434
  br i1 %3667, label %3668, label %3672, !dbg !435

3668:                                             ; preds = %3657
  %3669 = load i32, i32* %3454, align 4, !dbg !436
  %3670 = icmp eq i32 %3669, 0, !dbg !437
  br i1 %3670, label %3671, label %3672, !dbg !438

3671:                                             ; preds = %3668
  store i32 0, i32* %3605, align 4, !dbg !439
  store i8* %3617, i8** %3614, align 8, !dbg !440
  br label %3672, !dbg !441

3672:                                             ; preds = %3671, %3668, %3657
  %3673 = load i32, i32* %3605, align 4, !dbg !442
  %3674 = trunc i32 %3673 to i16, !dbg !443
  store i16 %3674, i16* %3465, align 2, !dbg !444
  %3675 = load i8*, i8** %3614, align 8, !dbg !445
  %3676 = ptrtoint i8* %3675 to i64, !dbg !446
  %3677 = load i8*, i8** %3446, align 8, !dbg !447
  %3678 = ptrtoint i8* %3677 to i64, !dbg !448
  %3679 = sub i64 %3676, %3678, !dbg !449
  %3680 = trunc i64 %3679 to i32, !dbg !450
  store i32 %3680, i32* %3461, align 4, !dbg !451
  br label %3682, !dbg !452

3681:                                             ; preds = %3596
  store i32 0, i32* %3447, align 4, !dbg !453
  br label %3682, !dbg !454

3682:                                             ; preds = %3672, %3681
  %3683 = load i16, i16* %3465, align 2, !dbg !455
  %3684 = icmp sle i16 %3683, 0, !dbg !456
  br i1 %3684, label %3685, label %3516, !dbg !457

3685:                                             ; preds = %3682
  %3686 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3450, i32 0, i32 1, !dbg !458
  %3687 = load i16, i16* %3686, align 2, !dbg !458
  %3688 = and i16 %3687, 9216, !dbg !458
  %3689 = icmp ne i16 %3688, 0, !dbg !458
  br i1 %3689, label %3690, label %3691, !dbg !458

3690:                                             ; preds = %3685
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3450), !dbg !458
  br label %3692, !dbg !458

3691:                                             ; preds = %3685
  store i16 1, i16* %3686, align 2, !dbg !458
  br label %3692, !dbg !458

3692:                                             ; preds = %3690, %3691, %3562, %3542, %3581, %3591, %3511, %3512
  call void @llvm.stackrestore(i8* %3439), !dbg !459
  br label %3693, !dbg !74

3693:                                             ; preds = %3692, %14
  %3694 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !918
  %3695 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3694, i32 0, i32 1, !dbg !921
  %3696 = load i16, i16* %3695, align 2, !dbg !922
  %3697 = and i16 %3696, 1, !dbg !923
  %3698 = icmp ne i16 %3697, 0, !dbg !924
  br i1 %3698, label %6959, label %3699, !dbg !925

3699:                                             ; preds = %3693, %14
  %3700 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !926
  call void @applyAffinity(%struct.sqlite3_value* %3700, i8 67, i8 1), !dbg !929
  br label %3701, !dbg !74

3701:                                             ; preds = %3699, %14
  %3702 = call i8* @llvm.stacksave(), !dbg !930
  %3703 = alloca i32, align 8, !dbg !933
  store i32 0, i32* %3703, align 4, !dbg !934
  %3704 = alloca i32, align 8, !dbg !935
  store i32 0, i32* %3704, align 4, !dbg !936
  %3705 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !937
  %3706 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3705, align 8, !dbg !938
  %3707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 12, i32 0, !dbg !939
  %3708 = load %struct.BtCursor*, %struct.BtCursor** %3707, align 8, !dbg !940
  %3709 = alloca i32, align 8, !dbg !941
  store i32 24, i32* %3709, align 4, !dbg !942
  %3710 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 2, !dbg !943
  store i8 0, i8* %3710, align 1, !dbg !944
  %3711 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 3, !dbg !945
  store i8 0, i8* %3711, align 1, !dbg !946
  %3712 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 9, !dbg !947
  store i32 0, i32* %3712, align 4, !dbg !948
  %3713 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 4, !dbg !949
  %3714 = load i8, i8* %3713, align 1, !dbg !950
  %3715 = icmp ne i8 %3714, 0, !dbg !951
  br i1 %3715, label %3716, label %3779, !dbg !952

3716:                                             ; preds = %3701
  %3717 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !953
  %3718 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 1, !dbg !954
  %3719 = load i16, i16* %3718, align 2, !dbg !955
  %3720 = and i16 %3719, 46, !dbg !956
  %3721 = icmp eq i16 %3720, 2, !dbg !957
  br i1 %3721, label %3722, label %3747, !dbg !958

3722:                                             ; preds = %3716
  %3723 = call i8* @llvm.stacksave(), !dbg !959
  %3724 = alloca double, align 8, !dbg !960
  %3725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 0, i32 0, !dbg !959
  %3726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 2, !dbg !959
  %3727 = load i8, i8* %3726, align 1, !dbg !959
  %3728 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 5, !dbg !959
  %3729 = load i8*, i8** %3728, align 8, !dbg !959
  %3730 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 4, !dbg !959
  %3731 = load i32, i32* %3730, align 4, !dbg !959
  %3732 = call i32 @sqlite3AtoF(i8* %3729, double* %3724, i32 %3731, i8 %3727), !dbg !959
  %3733 = icmp sle i32 %3732, 0, !dbg !959
  br i1 %3733, label %3746, label %3734, !dbg !959

3734:                                             ; preds = %3722
  %3735 = icmp eq i32 %3732, 1, !dbg !959
  %3736 = load double, double* %3724, align 8, !dbg !959
  br i1 %3735, label %3737, label %3740, !dbg !959

3737:                                             ; preds = %3734
  %3738 = load i16, i16* %3718, align 2, !dbg !959
  %3739 = or i16 %3738, 4, !dbg !959
  store i16 %3739, i16* %3718, align 2, !dbg !959
  br label %3743, !dbg !959

3740:                                             ; preds = %3734
  store double %3736, double* %3725, align 8, !dbg !959
  %3741 = load i16, i16* %3718, align 2, !dbg !959
  %3742 = or i16 %3741, 8, !dbg !959
  store i16 %3742, i16* %3718, align 2, !dbg !959
  br label %3743, !dbg !959

3743:                                             ; preds = %3740, %3737
  %3744 = load i16, i16* %3718, align 2, !dbg !959
  %3745 = and i16 %3744, -3, !dbg !959
  store i16 %3745, i16* %3718, align 2, !dbg !959
  br label %3746, !dbg !959

3746:                                             ; preds = %3743, %3722
  call void @llvm.stackrestore(i8* %3723), !dbg !959
  br label %3747, !dbg !963

3747:                                             ; preds = %3746, %3716
  %3748 = call i64 @sqlite3VdbeIntValue(%struct.sqlite3_value* %3717), !dbg !964
  %3749 = load i16, i16* %3718, align 2, !dbg !965
  store i16 %3719, i16* %3718, align 2, !dbg !966
  %3750 = and i16 %3749, 36, !dbg !967
  %3751 = icmp eq i16 %3750, 0, !dbg !968
  br i1 %3751, label %3752, label %3775, !dbg !969

3752:                                             ; preds = %3747
  %3753 = and i16 %3749, 8, !dbg !970
  %3754 = icmp eq i16 %3753, 0, !dbg !971
  br i1 %3754, label %3755, label %3756, !dbg !972

3755:                                             ; preds = %3752
  br label %6959, !dbg !973

3756:                                             ; preds = %3752
  %3757 = sitofp i64 %3748 to double, !dbg !974
  %3758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3717, i32 0, i32 0, i32 0, !dbg !975
  %3759 = load double, double* %3758, align 8, !dbg !976
  %3760 = fcmp olt double %3759, %3757, !dbg !977
  br i1 %3760, label %3761, label %3767, !dbg !978

3761:                                             ; preds = %3756
  %3762 = load i32, i32* %3709, align 4, !dbg !979
  %3763 = and i32 %3762, 1, !dbg !980
  %3764 = icmp eq i32 %3763, 1, !dbg !981
  br i1 %3764, label %3765, label %3767, !dbg !982

3765:                                             ; preds = %3761
  %3766 = sub i32 %3762, -1, !dbg !983
  store i32 %3766, i32* %3709, align 4, !dbg !984
  br label %3767, !dbg !985

3767:                                             ; preds = %3761, %3765, %3756
  %3768 = fcmp ogt double %3759, %3757, !dbg !986
  br i1 %3768, label %3769, label %3775, !dbg !987

3769:                                             ; preds = %3767
  %3770 = load i32, i32* %3709, align 4, !dbg !988
  %3771 = and i32 %3770, 1, !dbg !989
  %3772 = icmp eq i32 %3771, 0, !dbg !990
  br i1 %3772, label %3773, label %3775, !dbg !991

3773:                                             ; preds = %3769
  %3774 = add i32 %3770, 1, !dbg !992
  store i32 %3774, i32* %3709, align 4, !dbg !993
  br label %3775, !dbg !994

3775:                                             ; preds = %3769, %3773, %3767, %3747
  %3776 = load %struct.BtCursor*, %struct.BtCursor** %3707, align 8, !dbg !995
  %3777 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %3776, %struct.UnpackedRecord* null, i64 %3748, i32 0, i32* %3703), !dbg !996
  %3778 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 18, !dbg !997
  store i64 %3748, i64* %3778, align 4, !dbg !998
  br label %3802, !dbg !999

3779:                                             ; preds = %3701
  %3780 = load %struct.BtCursor*, %struct.BtCursor** %3707, align 8, !dbg !1000
  %3781 = getelementptr %struct.BtCursor, %struct.BtCursor* %3780, i32 0, i32 3, !dbg !1001
  %3782 = load i8, i8* %3781, align 1, !dbg !1002
  %3783 = and i8 %3782, 2, !dbg !1003
  %3784 = icmp ne i8 %3783, 0, !dbg !1004
  br i1 %3784, label %3785, label %3786, !dbg !1005

3785:                                             ; preds = %3779
  store i32 1, i32* %3704, align 4, !dbg !1006
  br label %3786, !dbg !1007

3786:                                             ; preds = %3785, %3779
  %3787 = alloca %struct.UnpackedRecord, align 8, !dbg !1008
  %3788 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3787, i32 0, i32 0, !dbg !1009
  %3789 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3706, i32 0, i32 13, !dbg !1010
  %3790 = load %struct.KeyInfo*, %struct.KeyInfo** %3789, align 8, !dbg !1011
  store %struct.KeyInfo* %3790, %struct.KeyInfo** %3788, align 8, !dbg !1012
  %3791 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3787, i32 0, i32 2, !dbg !1013
  store i16 1, i16* %3791, align 2, !dbg !1014
  %3792 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3787, i32 0, i32 3, !dbg !1015
  store i8 1, i8* %3792, align 1, !dbg !1016
  %3793 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3787, i32 0, i32 1, !dbg !1017
  %3794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1018
  store %struct.sqlite3_value* %3794, %struct.sqlite3_value** %3793, align 8, !dbg !1019
  %3795 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3787, i32 0, i32 7, !dbg !1020
  store i8 0, i8* %3795, align 1, !dbg !1021
  %3796 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %3780, %struct.UnpackedRecord* %3787, i64 0, i32 0, i32* %3703), !dbg !1022
  %3797 = load i32, i32* %3704, align 4, !dbg !1023
  %3798 = icmp ne i32 %3797, 0, !dbg !1024
  %3799 = load i8, i8* %3795, align 1, !dbg !1025
  %3800 = icmp eq i8 %3799, 0, !dbg !1026
  %3801 = and i1 %3798, %3800, !dbg !1027
  br i1 %3801, label %3815, label %3802, !dbg !1028

3802:                                             ; preds = %3786, %3775
  %3803 = load i32, i32* %3703, align 4, !dbg !1029
  %3804 = icmp eq i32 %3803, 0, !dbg !1030
  %3805 = load i32, i32* %3709, align 4, !dbg !1031
  %3806 = icmp slt i32 %3803, 0, !dbg !1032
  %3807 = icmp eq i32 %3805, 25, !dbg !1033
  %3808 = and i1 %3804, %3807, !dbg !1034
  %3809 = or i1 %3806, %3808, !dbg !1035
  store i32 0, i32* %3703, align 4, !dbg !1036
  br i1 %3809, label %3810, label %3815, !dbg !1037

3810:                                             ; preds = %3802
  %3811 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %3708, i32 0), !dbg !1038
  %3812 = icmp eq i32 %3811, 0, !dbg !1039
  %3813 = icmp eq i32 %3811, 101, !dbg !1040
  br i1 %3813, label %3814, label %3815, !dbg !1041

3814:                                             ; preds = %3810
  store i32 1, i32* %3703, align 4, !dbg !1042
  br label %3815, !dbg !1043

3815:                                             ; preds = %3786, %3814, %3810, %3802
  %3816 = load i32, i32* %3703, align 4, !dbg !1044
  %3817 = icmp ne i32 %3816, 0, !dbg !1045
  br i1 %3817, label %6959, label %3818, !dbg !1046

3818:                                             ; preds = %3815
  %3819 = load i32, i32* %3704, align 4, !dbg !1047
  %3820 = icmp ne i32 %3819, 0, !dbg !1048
  call void @llvm.stackrestore(i8* %3702), !dbg !1049
  br i1 %3820, label %3840, label %3821, !dbg !1050

3821:                                             ; preds = %6957, %3818, %14
  %3822 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !1051
  %3823 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3822, align 8, !dbg !1054
  %3824 = call i8* @llvm.stacksave(), !dbg !1055
  %3825 = alloca %struct.UnpackedRecord, align 8, !dbg !1056
  %3826 = alloca i32, align 8, !dbg !1057
  %3827 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3825, i32 0, i32 0, !dbg !1058
  %3828 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3823, i32 0, i32 13, !dbg !1059
  %3829 = load %struct.KeyInfo*, %struct.KeyInfo** %3828, align 8, !dbg !1060
  store %struct.KeyInfo* %3829, %struct.KeyInfo** %3827, align 8, !dbg !1061
  %3830 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3825, i32 0, i32 2, !dbg !1062
  store i16 1, i16* %3830, align 2, !dbg !1063
  %3831 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3825, i32 0, i32 3, !dbg !1064
  store i8 -1, i8* %3831, align 1, !dbg !1065
  %3832 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3825, i32 0, i32 1, !dbg !1066
  %3833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1067
  store %struct.sqlite3_value* %3833, %struct.sqlite3_value** %3832, align 8, !dbg !1068
  %3834 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1069
  %3835 = call i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3* %3834, %struct.VdbeCursor* %3823, %struct.UnpackedRecord* %3825, i32* %3826), !dbg !1070
  %3836 = load i32, i32* %3826, align 4, !dbg !1071
  %3837 = add i32 %3836, 1, !dbg !1071
  store i32 %3837, i32* %3826, align 4, !dbg !1071
  call void @llvm.stackrestore(i8* %3824), !dbg !1072
  %3838 = load i32, i32* %3826, align 4, !dbg !1073
  %3839 = icmp sgt i32 %3838, 0, !dbg !1074
  br i1 %3839, label %6959, label %3840, !dbg !1075

3840:                                             ; preds = %3821, %3818, %14
  %3841 = call i8* @llvm.stacksave(), !dbg !167
  %3842 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %3843 = load i8, i8* %3842, align 1, !dbg !171
  %3844 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %3844, align 4, !dbg !173
  %3845 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %3846 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %3847 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3845, align 8, !dbg !176
  store %struct.VdbeCursor* %3847, %struct.VdbeCursor** %3846, align 8, !dbg !177
  %3848 = alloca i8*, align 8, !dbg !178
  %3849 = alloca i32, align 4, !dbg !179
  %3850 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3846, i32* %3844), !dbg !180
  %3851 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3846, align 8, !dbg !181
  %3852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !182
  %3853 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 16, !dbg !183
  %3854 = load i16, i16* %3853, align 2, !dbg !184
  %3855 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 19, !dbg !185
  %3856 = load i32*, i32** %3855, align 8, !dbg !186
  %3857 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 0, !dbg !187
  %3858 = load i8, i8* %3857, align 1, !dbg !188
  %3859 = icmp ne i8 %3858, 3, !dbg !189
  %3860 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 2, !dbg !190
  %3861 = load i8, i8* %3860, align 1, !dbg !191
  %3862 = icmp ne i8 %3861, 0, !dbg !192
  %3863 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 14, !dbg !193
  %3864 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 21, !dbg !194
  %3865 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 22, !dbg !195
  %3866 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 20, !dbg !196
  %3867 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 17, !dbg !197
  %3868 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 9, !dbg !198
  %3869 = load i32, i32* %3868, align 4, !dbg !199
  %3870 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %3871 = load i32, i32* %3870, align 4, !dbg !201
  %3872 = icmp ne i32 %3869, %3871, !dbg !202
  br i1 %3872, label %3873, label %3915, !dbg !203

3873:                                             ; preds = %3840
  br i1 %3862, label %3895, label %3890, !dbg !204

3874:                                             ; preds = %3890, %3897
  %3875 = load i32, i32* %3870, align 4, !dbg !205
  store i32 %3875, i32* %3868, align 4, !dbg !206
  %3876 = load i8*, i8** %3866, align 8, !dbg !207
  %3877 = load i8, i8* %3876, align 1, !dbg !208
  %3878 = icmp sgt i8 %3877, -1, !dbg !211
  br i1 %3878, label %3879, label %3881, !dbg !212

3879:                                             ; preds = %3874
  %3880 = zext i8 %3877 to i32, !dbg !213
  store i32 %3880, i32* %3856, align 4, !dbg !214
  store i32 1, i32* %3863, align 4, !dbg !215
  br label %3884, !dbg !216

3881:                                             ; preds = %3874
  %3882 = call i8 @sqlite3GetVarint32(i8* %3876, i32* %3856), !dbg !217
  %3883 = zext i8 %3882 to i32, !dbg !218
  store i32 %3883, i32* %3863, align 4, !dbg !219
  br label %3884, !dbg !220

3884:                                             ; preds = %3881, %3879
  store i16 0, i16* %3867, align 2, !dbg !221
  %3885 = load i32, i32* %3865, align 4, !dbg !222
  %3886 = load i32, i32* %3856, align 4, !dbg !223
  %3887 = icmp ult i32 %3885, %3886, !dbg !224
  br i1 %3887, label %3889, label %3888, !dbg !225

3888:                                             ; preds = %3884
  store i8* %3876, i8** %3848, align 8, !dbg !226
  br label %4008, !dbg !227

3889:                                             ; preds = %3884
  store i8* null, i8** %3866, align 8, !dbg !228
  store i32 0, i32* %3865, align 4, !dbg !229
  br label %3915, !dbg !230

3890:                                             ; preds = %3873
  %3891 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 12, i32 0, !dbg !231
  %3892 = load %struct.BtCursor*, %struct.BtCursor** %3891, align 8, !dbg !232
  %3893 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3892), !dbg !233
  store i32 %3893, i32* %3864, align 4, !dbg !234
  %3894 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3892, i32* %3865), !dbg !235
  store i8* %3894, i8** %3866, align 8, !dbg !236
  br label %3874, !dbg !237

3895:                                             ; preds = %3873
  %3896 = icmp eq i8 %3858, 3, !dbg !238
  br i1 %3896, label %3897, label %3908, !dbg !239

3897:                                             ; preds = %3895
  %3898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 10, !dbg !240
  %3899 = load i32, i32* %3898, align 4, !dbg !241
  %3900 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3899, !dbg !242
  %3901 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3900, i32 0, i32 1, !dbg !243
  %3902 = load i16, i16* %3901, align 2, !dbg !244
  %3903 = and i16 %3902, 16, !dbg !245
  %3904 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3900, i32 0, i32 4, !dbg !246
  %3905 = load i32, i32* %3904, align 4, !dbg !247
  store i32 %3905, i32* %3864, align 4, !dbg !248
  store i32 %3905, i32* %3865, align 4, !dbg !249
  %3906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3900, i32 0, i32 5, !dbg !250
  %3907 = load i8*, i8** %3906, align 8, !dbg !251
  store i8* %3907, i8** %3866, align 8, !dbg !252
  br label %3874, !dbg !253

3908:                                             ; preds = %3895
  %3909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 1, !dbg !254
  %3910 = load i16, i16* %3909, align 2, !dbg !254
  %3911 = and i16 %3910, 9216, !dbg !254
  %3912 = icmp ne i16 %3911, 0, !dbg !254
  br i1 %3912, label %3913, label %3914, !dbg !254

3913:                                             ; preds = %3908
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3852), !dbg !254
  br label %4096, !dbg !254

3914:                                             ; preds = %3908
  store i16 1, i16* %3909, align 2, !dbg !254
  br label %4096, !dbg !254

3915:                                             ; preds = %3889, %3840
  %3916 = load i16, i16* %3867, align 2, !dbg !255
  %3917 = icmp ule i16 %3916, 1, !dbg !256
  br i1 %3917, label %4000, label %3997, !dbg !257

3918:                                             ; preds = %3997, %4086
  %3919 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 1, !dbg !258
  %3920 = load i16, i16* %3919, align 2, !dbg !259
  %3921 = and i16 9216, %3920, !dbg !260
  %3922 = icmp eq i16 0, %3921, !dbg !261
  br i1 %3922, label %3923, label %3927, !dbg !262

3923:                                             ; preds = %3918
  %3924 = icmp ne i16 %3921, 0, !dbg !263
  br i1 %3924, label %3925, label %3926, !dbg !263

3925:                                             ; preds = %3923
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3852), !dbg !263
  br label %3927, !dbg !263

3926:                                             ; preds = %3923
  store i16 1, i16* %3919, align 2, !dbg !263
  br label %3927, !dbg !263

3927:                                             ; preds = %3925, %3926, %3918
  %3928 = load i32, i32* %3849, align 4, !dbg !264
  %3929 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 23, i32 1, !dbg !265
  %3930 = load i32, i32* %3929, align 4, !dbg !266
  %3931 = load i32, i32* %3865, align 4, !dbg !267
  %3932 = getelementptr i32, i32* %3856, i32 2, !dbg !268
  %3933 = load i32, i32* %3932, align 4, !dbg !269
  %3934 = icmp sge i32 %3931, %3933, !dbg !270
  br i1 %3934, label %3935, label %3975, !dbg !271

3935:                                             ; preds = %3927
  %3936 = load i8*, i8** %3866, align 8, !dbg !272
  %3937 = ptrtoint i8* %3936 to i64, !dbg !273
  %3938 = getelementptr i32, i32* %3856, i32 1, !dbg !274
  %3939 = load i32, i32* %3938, align 4, !dbg !275
  %3940 = zext i32 %3939 to i64, !dbg !276
  %3941 = add i64 %3937, %3940, !dbg !277
  %3942 = inttoptr i64 %3941 to i8*, !dbg !278
  store i8* %3942, i8** %3848, align 8, !dbg !279
  %3943 = load i32, i32* %3849, align 4, !dbg !280
  %3944 = icmp ult i32 %3943, 12, !dbg !281
  br i1 %3944, label %3945, label %3947, !dbg !282

3945:                                             ; preds = %3935
  %3946 = call i32 @sqlite3VdbeSerialGet(i8* %3942, i32 %3943, %struct.sqlite3_value* %3852), !dbg !283
  br label %4096, !dbg !284

3947:                                             ; preds = %3935
  %3948 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %3948, align 2, !dbg !286
  %3949 = getelementptr i16, i16* %3948, i32 1, !dbg !287
  store i16 514, i16* %3949, align 2, !dbg !288
  %3950 = load i32, i32* %3849, align 4, !dbg !289
  %3951 = sub i32 %3950, 12, !dbg !290
  %3952 = lshr i32 %3951, 1, !dbg !291
  %3953 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 4, !dbg !292
  store i32 %3952, i32* %3953, align 4, !dbg !293
  %3954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 2, !dbg !294
  store i8 %3843, i8* %3954, align 1, !dbg !295
  %3955 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 5, !dbg !296
  %3956 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 7, !dbg !297
  %3957 = load i32, i32* %3956, align 4, !dbg !298
  %3958 = add i32 %3952, 2, !dbg !299
  %3959 = icmp slt i32 %3957, %3958, !dbg !300
  br i1 %3959, label %3960, label %3962, !dbg !301

3960:                                             ; preds = %3947
  store i16 1, i16* %3919, align 2, !dbg !302
  %3961 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3852, i32 %3958, i32 0), !dbg !303
  br label %3965, !dbg !304

3962:                                             ; preds = %3947
  %3963 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 6, !dbg !305
  %3964 = load i8*, i8** %3963, align 8, !dbg !306
  store i8* %3964, i8** %3955, align 8, !dbg !307
  br label %3965, !dbg !308

3965:                                             ; preds = %3962, %3960
  %3966 = zext i32 %3952 to i64, !dbg !309
  %3967 = load i8*, i8** %3955, align 8, !dbg !310
  %3968 = load i8*, i8** %3848, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3967, i8* %3968, i64 %3966, i1 false), !dbg !312
  %3969 = getelementptr i8, i8* %3967, i32 %3952, !dbg !313
  store i8 0, i8* %3969, align 1, !dbg !314
  %3970 = add i32 %3952, 1, !dbg !315
  %3971 = getelementptr i8, i8* %3967, i32 %3970, !dbg !316
  store i8 0, i8* %3971, align 1, !dbg !317
  %3972 = and i32 %3950, 1, !dbg !318
  %3973 = getelementptr i16, i16* %3948, i32 %3972, !dbg !319
  %3974 = load i16, i16* %3973, align 2, !dbg !320
  store i16 %3974, i16* %3919, align 2, !dbg !321
  br label %4096, !dbg !322

3975:                                             ; preds = %3927
  %3976 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 2, !dbg !323
  store i8 %3843, i8* %3976, align 1, !dbg !324
  %3977 = load i32, i32* %3849, align 4, !dbg !325
  %3978 = and i32 %3977, 1, !dbg !326
  %3979 = icmp eq i32 %3978, 0, !dbg !327
  %3980 = icmp sge i32 %3977, 12, !dbg !328
  %3981 = and i1 %3980, %3979, !dbg !329
  %3982 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3977), !dbg !330
  %3983 = icmp eq i32 %3982, 0, !dbg !331
  br i1 %3983, label %3995, label %3984, !dbg !332

3984:                                             ; preds = %3975
  %3985 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 12, i32 0, !dbg !333
  %3986 = load %struct.BtCursor*, %struct.BtCursor** %3985, align 8, !dbg !334
  %3987 = getelementptr i32, i32* %3856, i32 1, !dbg !335
  %3988 = load i32, i32* %3987, align 4, !dbg !336
  %3989 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3986, i32 %3988, i32 %3982, %struct.sqlite3_value* %3852), !dbg !337
  %3990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 5, !dbg !338
  %3991 = load i8*, i8** %3990, align 8, !dbg !339
  %3992 = call i32 @sqlite3VdbeSerialGet(i8* %3991, i32 %3977, %struct.sqlite3_value* %3852), !dbg !340
  %3993 = load i16, i16* %3919, align 2, !dbg !341
  %3994 = and i16 %3993, -4097, !dbg !342
  store i16 %3994, i16* %3919, align 2, !dbg !343
  br label %4096, !dbg !344

3995:                                             ; preds = %3975
  %3996 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3977, %struct.sqlite3_value* %3852), !dbg !345
  br label %4096, !dbg !346

3997:                                             ; preds = %3915
  %3998 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 23, i32 1, !dbg !347
  %3999 = load i32, i32* %3998, align 4, !dbg !348
  store i32 %3999, i32* %3849, align 4, !dbg !349
  br label %3918, !dbg !350

4000:                                             ; preds = %3915
  %4001 = load i32, i32* %3863, align 4, !dbg !351
  %4002 = load i32, i32* %3856, align 4, !dbg !352
  %4003 = icmp ult i32 %4001, %4002, !dbg !353
  br i1 %4003, label %4004, label %4085, !dbg !354

4004:                                             ; preds = %4000
  %4005 = load i8*, i8** %3866, align 8, !dbg !355
  %4006 = icmp eq i8* %4005, null, !dbg !356
  br i1 %4006, label %4008, label %4007, !dbg !357

4007:                                             ; preds = %4004
  store i8* %4005, i8** %3848, align 8, !dbg !358
  br label %4008, !dbg !359

4008:                                             ; preds = %4007, %4004, %3888
  %4009 = alloca i32, align 4, !dbg !360
  %4010 = load i16, i16* %3867, align 2, !dbg !361
  %4011 = zext i16 %4010 to i32, !dbg !362
  store i32 %4011, i32* %4009, align 4, !dbg !363
  %4012 = alloca i64, align 8, !dbg !364
  %4013 = getelementptr i32, i32* %3856, i32 %4011, !dbg !365
  %4014 = load i32, i32* %4013, align 4, !dbg !366
  %4015 = zext i32 %4014 to i64, !dbg !367
  store i64 %4015, i64* %4012, align 4, !dbg !368
  %4016 = load i8*, i8** %3848, align 8, !dbg !369
  %4017 = load i32, i32* %3863, align 4, !dbg !370
  %4018 = alloca i8*, align 8, !dbg !371
  %4019 = getelementptr i8, i8* %4016, i32 %4017, !dbg !372
  store i8* %4019, i8** %4018, align 8, !dbg !373
  %4020 = load i32, i32* %3856, align 4, !dbg !374
  %4021 = getelementptr i8, i8* %4016, i32 %4020, !dbg !375
  br label %4022, !dbg !376

4022:                                             ; preds = %4029, %4008
  %4023 = load i32, i32* %4009, align 4, !dbg !377
  %4024 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3851, i32 0, i32 23, i32 %4023, !dbg !378
  %4025 = load i8*, i8** %4018, align 8, !dbg !379
  %4026 = load i8, i8* %4025, align 1, !dbg !380
  %4027 = zext i8 %4026 to i32, !dbg !381
  store i32 %4027, i32* %3849, align 4, !dbg !382
  store i32 %4027, i32* %4024, align 4, !dbg !383
  %4028 = icmp sgt i8 %4026, -1, !dbg !384
  br i1 %4028, label %4052, label %4043, !dbg !385

4029:                                             ; preds = %4043, %4052
  %4030 = load i32, i32* %4009, align 4, !dbg !386
  %4031 = add i32 %4030, 1, !dbg !387
  store i32 %4031, i32* %4009, align 4, !dbg !388
  %4032 = load i64, i64* %4012, align 4, !dbg !389
  %4033 = and i64 4294967295, %4032, !dbg !390
  %4034 = trunc i64 %4033 to i32, !dbg !391
  %4035 = getelementptr i32, i32* %3856, i32 %4031, !dbg !392
  store i32 %4034, i32* %4035, align 4, !dbg !393
  %4036 = load i32, i32* %4009, align 4, !dbg !394
  %4037 = icmp sle i32 %4036, 1, !dbg !395
  %4038 = load i8*, i8** %4018, align 8, !dbg !396
  %4039 = ptrtoint i8* %4038 to i64, !dbg !397
  %4040 = ptrtoint i8* %4021 to i64, !dbg !398
  %4041 = icmp ult i64 %4039, %4040, !dbg !399
  %4042 = and i1 %4037, %4041, !dbg !400
  br i1 %4042, label %4022, label %4061, !dbg !401

4043:                                             ; preds = %4022
  %4044 = load i8*, i8** %4018, align 8, !dbg !402
  %4045 = call i8 @sqlite3GetVarint32(i8* %4044, i32* %3849), !dbg !403
  %4046 = getelementptr i8, i8* %4044, i8 %4045, !dbg !404
  store i8* %4046, i8** %4018, align 8, !dbg !405
  %4047 = load i32, i32* %3849, align 4, !dbg !406
  store i32 %4047, i32* %4024, align 4, !dbg !407
  %4048 = load i64, i64* %4012, align 4, !dbg !408
  %4049 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4047), !dbg !409
  %4050 = zext i32 %4049 to i64, !dbg !410
  %4051 = add i64 %4048, %4050, !dbg !411
  store i64 %4051, i64* %4012, align 4, !dbg !412
  br label %4029, !dbg !413

4052:                                             ; preds = %4022
  %4053 = getelementptr i8, i8* %4025, i32 1, !dbg !414
  store i8* %4053, i8** %4018, align 8, !dbg !415
  %4054 = load i32, i32* %3849, align 4, !dbg !416
  %4055 = trunc i32 %4054 to i8, !dbg !417
  %4056 = getelementptr i8, i8* %4, i8 %4055, !dbg !418
  %4057 = load i8, i8* %4056, align 1, !dbg !419
  %4058 = zext i8 %4057 to i64, !dbg !420
  %4059 = load i64, i64* %4012, align 4, !dbg !421
  %4060 = add i64 %4059, %4058, !dbg !422
  store i64 %4060, i64* %4012, align 4, !dbg !423
  br label %4029, !dbg !424

4061:                                             ; preds = %4029
  %4062 = load i64, i64* %4012, align 4, !dbg !425
  %4063 = load i32, i32* %3864, align 4, !dbg !426
  %4064 = zext i32 %4063 to i64, !dbg !427
  %4065 = icmp uge i64 %4039, %4040, !dbg !428
  %4066 = icmp ugt i64 %4039, %4040, !dbg !429
  %4067 = icmp ne i64 %4062, %4064, !dbg !430
  %4068 = icmp ugt i64 %4062, %4064, !dbg !431
  %4069 = or i1 %4066, %4067, !dbg !432
  %4070 = and i1 %4065, %4069, !dbg !433
  %4071 = or i1 %4070, %4068, !dbg !434
  br i1 %4071, label %4072, label %4076, !dbg !435

4072:                                             ; preds = %4061
  %4073 = load i32, i32* %3856, align 4, !dbg !436
  %4074 = icmp eq i32 %4073, 0, !dbg !437
  br i1 %4074, label %4075, label %4076, !dbg !438

4075:                                             ; preds = %4072
  store i32 0, i32* %4009, align 4, !dbg !439
  store i8* %4021, i8** %4018, align 8, !dbg !440
  br label %4076, !dbg !441

4076:                                             ; preds = %4075, %4072, %4061
  %4077 = load i32, i32* %4009, align 4, !dbg !442
  %4078 = trunc i32 %4077 to i16, !dbg !443
  store i16 %4078, i16* %3867, align 2, !dbg !444
  %4079 = load i8*, i8** %4018, align 8, !dbg !445
  %4080 = ptrtoint i8* %4079 to i64, !dbg !446
  %4081 = load i8*, i8** %3848, align 8, !dbg !447
  %4082 = ptrtoint i8* %4081 to i64, !dbg !448
  %4083 = sub i64 %4080, %4082, !dbg !449
  %4084 = trunc i64 %4083 to i32, !dbg !450
  store i32 %4084, i32* %3863, align 4, !dbg !451
  br label %4086, !dbg !452

4085:                                             ; preds = %4000
  store i32 0, i32* %3849, align 4, !dbg !453
  br label %4086, !dbg !454

4086:                                             ; preds = %4076, %4085
  %4087 = load i16, i16* %3867, align 2, !dbg !455
  %4088 = icmp sle i16 %4087, 1, !dbg !456
  br i1 %4088, label %4089, label %3918, !dbg !457

4089:                                             ; preds = %4086
  %4090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3852, i32 0, i32 1, !dbg !458
  %4091 = load i16, i16* %4090, align 2, !dbg !458
  %4092 = and i16 %4091, 9216, !dbg !458
  %4093 = icmp ne i16 %4092, 0, !dbg !458
  br i1 %4093, label %4094, label %4095, !dbg !458

4094:                                             ; preds = %4089
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3852), !dbg !458
  br label %4096, !dbg !458

4095:                                             ; preds = %4089
  store i16 1, i16* %4090, align 2, !dbg !458
  br label %4096, !dbg !458

4096:                                             ; preds = %4094, %4095, %3965, %3945, %3984, %3995, %3913, %3914
  call void @llvm.stackrestore(i8* %3841), !dbg !459
  br label %4097, !dbg !74

4097:                                             ; preds = %4096, %14
  %4098 = call i8* @llvm.stacksave(), !dbg !1076
  %4099 = alloca i32, align 8, !dbg !1079
  %4100 = alloca i64, align 8, !dbg !1080
  %4101 = alloca i32, align 8, !dbg !1081
  %4102 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !1082
  %4103 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4102, i32 0, i32 1, !dbg !1083
  %4104 = load i16, i16* %4103, align 2, !dbg !1084
  %4105 = and i16 %4104, 36, !dbg !1085
  %4106 = icmp eq i16 %4105, 0, !dbg !1086
  br i1 %4106, label %4107, label %4118, !dbg !1087

4107:                                             ; preds = %4097
  %4108 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %4109 = load %struct.sqlite3_value, %struct.sqlite3_value* %4102, align 8, !dbg !1089
  store %struct.sqlite3_value %4109, %struct.sqlite3_value* %4108, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %4108, i8 67, i8 1), !dbg !1090
  %4110 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4108, i32 0, i32 1, !dbg !1091
  %4111 = load i16, i16* %4110, align 2, !dbg !1092
  %4112 = and i16 %4111, 4, !dbg !1093
  %4113 = icmp eq i16 %4112, 0, !dbg !1094
  br i1 %4113, label %6947, label %4114, !dbg !1095

4114:                                             ; preds = %4107
  %4115 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4108, i32 0, i32 0, !dbg !1096
  %4116 = bitcast %union.MemValue* %4115 to i64*, !dbg !1097
  %4117 = load i64, i64* %4116, align 4, !dbg !1098
  store i64 %4117, i64* %4100, align 4, !dbg !1099
  br label %4122, !dbg !1100

4118:                                             ; preds = %4097
  %4119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4102, i32 0, i32 0, !dbg !1101
  %4120 = bitcast %union.MemValue* %4119 to i64*, !dbg !1102
  %4121 = load i64, i64* %4120, align 4, !dbg !1103
  store i64 %4121, i64* %4100, align 4, !dbg !1104
  br label %4122, !dbg !1105

4122:                                             ; preds = %4118, %4114
  %4123 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !1106
  %4124 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4123, align 8, !dbg !1107
  %4125 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 12, i32 0, !dbg !1108
  %4126 = load %struct.BtCursor*, %struct.BtCursor** %4125, align 8, !dbg !1109
  store i32 0, i32* %4099, align 4, !dbg !1110
  %4127 = load i64, i64* %4100, align 4, !dbg !1111
  %4128 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %4126, %struct.UnpackedRecord* null, i64 %4127, i32 0, i32* %4099), !dbg !1112
  store i32 %4128, i32* %4101, align 4, !dbg !1113
  %4129 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 18, !dbg !1114
  store i64 %4127, i64* %4129, align 4, !dbg !1115
  %4130 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 2, !dbg !1116
  store i8 0, i8* %4130, align 1, !dbg !1117
  %4131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 9, !dbg !1118
  store i32 0, i32* %4131, align 4, !dbg !1119
  %4132 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 3, !dbg !1120
  store i8 0, i8* %4132, align 1, !dbg !1121
  %4133 = load i32, i32* %4099, align 4, !dbg !1122
  %4134 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4124, i32 0, i32 10, !dbg !1123
  store i32 %4133, i32* %4134, align 4, !dbg !1124
  %4135 = icmp ne i32 %4133, 0, !dbg !1125
  br i1 %4135, label %4136, label %4137, !dbg !1126

4136:                                             ; preds = %4122
  call void @llvm.stackrestore(i8* %4098), !dbg !1127
  br label %6947, !dbg !1128

4137:                                             ; preds = %4122
  %4138 = load i32, i32* %4101, align 4, !dbg !1129
  call void @llvm.stackrestore(i8* %4098), !dbg !1130
  br label %4139, !dbg !1131

4139:                                             ; preds = %4137, %14
  %4140 = call i8* @llvm.stacksave(), !dbg !167
  %4141 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4142 = load i8, i8* %4141, align 1, !dbg !171
  %4143 = alloca i32, align 4, !dbg !172
  store i32 1, i32* %4143, align 4, !dbg !173
  %4144 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !174
  %4145 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4146 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4144, align 8, !dbg !176
  store %struct.VdbeCursor* %4146, %struct.VdbeCursor** %4145, align 8, !dbg !177
  %4147 = alloca i8*, align 8, !dbg !178
  %4148 = alloca i32, align 4, !dbg !179
  %4149 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4145, i32* %4143), !dbg !180
  %4150 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4145, align 8, !dbg !181
  %4151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !182
  %4152 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 16, !dbg !183
  %4153 = load i16, i16* %4152, align 2, !dbg !184
  %4154 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 19, !dbg !185
  %4155 = load i32*, i32** %4154, align 8, !dbg !186
  %4156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 0, !dbg !187
  %4157 = load i8, i8* %4156, align 1, !dbg !188
  %4158 = icmp ne i8 %4157, 3, !dbg !189
  %4159 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 2, !dbg !190
  %4160 = load i8, i8* %4159, align 1, !dbg !191
  %4161 = icmp ne i8 %4160, 0, !dbg !192
  %4162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 14, !dbg !193
  %4163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 21, !dbg !194
  %4164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 22, !dbg !195
  %4165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 20, !dbg !196
  %4166 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 17, !dbg !197
  %4167 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 9, !dbg !198
  %4168 = load i32, i32* %4167, align 4, !dbg !199
  %4169 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4170 = load i32, i32* %4169, align 4, !dbg !201
  %4171 = icmp ne i32 %4168, %4170, !dbg !202
  br i1 %4171, label %4172, label %4214, !dbg !203

4172:                                             ; preds = %4139
  br i1 %4161, label %4194, label %4189, !dbg !204

4173:                                             ; preds = %4189, %4196
  %4174 = load i32, i32* %4169, align 4, !dbg !205
  store i32 %4174, i32* %4167, align 4, !dbg !206
  %4175 = load i8*, i8** %4165, align 8, !dbg !207
  %4176 = load i8, i8* %4175, align 1, !dbg !208
  %4177 = icmp sgt i8 %4176, -1, !dbg !211
  br i1 %4177, label %4178, label %4180, !dbg !212

4178:                                             ; preds = %4173
  %4179 = zext i8 %4176 to i32, !dbg !213
  store i32 %4179, i32* %4155, align 4, !dbg !214
  store i32 1, i32* %4162, align 4, !dbg !215
  br label %4183, !dbg !216

4180:                                             ; preds = %4173
  %4181 = call i8 @sqlite3GetVarint32(i8* %4175, i32* %4155), !dbg !217
  %4182 = zext i8 %4181 to i32, !dbg !218
  store i32 %4182, i32* %4162, align 4, !dbg !219
  br label %4183, !dbg !220

4183:                                             ; preds = %4180, %4178
  store i16 0, i16* %4166, align 2, !dbg !221
  %4184 = load i32, i32* %4164, align 4, !dbg !222
  %4185 = load i32, i32* %4155, align 4, !dbg !223
  %4186 = icmp ult i32 %4184, %4185, !dbg !224
  br i1 %4186, label %4188, label %4187, !dbg !225

4187:                                             ; preds = %4183
  store i8* %4175, i8** %4147, align 8, !dbg !226
  br label %4307, !dbg !227

4188:                                             ; preds = %4183
  store i8* null, i8** %4165, align 8, !dbg !228
  store i32 0, i32* %4164, align 4, !dbg !229
  br label %4214, !dbg !230

4189:                                             ; preds = %4172
  %4190 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 12, i32 0, !dbg !231
  %4191 = load %struct.BtCursor*, %struct.BtCursor** %4190, align 8, !dbg !232
  %4192 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4191), !dbg !233
  store i32 %4192, i32* %4163, align 4, !dbg !234
  %4193 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4191, i32* %4164), !dbg !235
  store i8* %4193, i8** %4165, align 8, !dbg !236
  br label %4173, !dbg !237

4194:                                             ; preds = %4172
  %4195 = icmp eq i8 %4157, 3, !dbg !238
  br i1 %4195, label %4196, label %4207, !dbg !239

4196:                                             ; preds = %4194
  %4197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 10, !dbg !240
  %4198 = load i32, i32* %4197, align 4, !dbg !241
  %4199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4198, !dbg !242
  %4200 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4199, i32 0, i32 1, !dbg !243
  %4201 = load i16, i16* %4200, align 2, !dbg !244
  %4202 = and i16 %4201, 16, !dbg !245
  %4203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4199, i32 0, i32 4, !dbg !246
  %4204 = load i32, i32* %4203, align 4, !dbg !247
  store i32 %4204, i32* %4163, align 4, !dbg !248
  store i32 %4204, i32* %4164, align 4, !dbg !249
  %4205 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4199, i32 0, i32 5, !dbg !250
  %4206 = load i8*, i8** %4205, align 8, !dbg !251
  store i8* %4206, i8** %4165, align 8, !dbg !252
  br label %4173, !dbg !253

4207:                                             ; preds = %4194
  %4208 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 1, !dbg !254
  %4209 = load i16, i16* %4208, align 2, !dbg !254
  %4210 = and i16 %4209, 9216, !dbg !254
  %4211 = icmp ne i16 %4210, 0, !dbg !254
  br i1 %4211, label %4212, label %4213, !dbg !254

4212:                                             ; preds = %4207
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4151), !dbg !254
  br label %4395, !dbg !254

4213:                                             ; preds = %4207
  store i16 1, i16* %4208, align 2, !dbg !254
  br label %4395, !dbg !254

4214:                                             ; preds = %4188, %4139
  %4215 = load i16, i16* %4166, align 2, !dbg !255
  %4216 = icmp ule i16 %4215, 5, !dbg !256
  br i1 %4216, label %4299, label %4296, !dbg !257

4217:                                             ; preds = %4296, %4385
  %4218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 1, !dbg !258
  %4219 = load i16, i16* %4218, align 2, !dbg !259
  %4220 = and i16 9216, %4219, !dbg !260
  %4221 = icmp eq i16 0, %4220, !dbg !261
  br i1 %4221, label %4222, label %4226, !dbg !262

4222:                                             ; preds = %4217
  %4223 = icmp ne i16 %4220, 0, !dbg !263
  br i1 %4223, label %4224, label %4225, !dbg !263

4224:                                             ; preds = %4222
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4151), !dbg !263
  br label %4226, !dbg !263

4225:                                             ; preds = %4222
  store i16 1, i16* %4218, align 2, !dbg !263
  br label %4226, !dbg !263

4226:                                             ; preds = %4224, %4225, %4217
  %4227 = load i32, i32* %4148, align 4, !dbg !264
  %4228 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 23, i32 5, !dbg !265
  %4229 = load i32, i32* %4228, align 4, !dbg !266
  %4230 = load i32, i32* %4164, align 4, !dbg !267
  %4231 = getelementptr i32, i32* %4155, i32 6, !dbg !268
  %4232 = load i32, i32* %4231, align 4, !dbg !269
  %4233 = icmp sge i32 %4230, %4232, !dbg !270
  br i1 %4233, label %4234, label %4274, !dbg !271

4234:                                             ; preds = %4226
  %4235 = load i8*, i8** %4165, align 8, !dbg !272
  %4236 = ptrtoint i8* %4235 to i64, !dbg !273
  %4237 = getelementptr i32, i32* %4155, i32 5, !dbg !274
  %4238 = load i32, i32* %4237, align 4, !dbg !275
  %4239 = zext i32 %4238 to i64, !dbg !276
  %4240 = add i64 %4236, %4239, !dbg !277
  %4241 = inttoptr i64 %4240 to i8*, !dbg !278
  store i8* %4241, i8** %4147, align 8, !dbg !279
  %4242 = load i32, i32* %4148, align 4, !dbg !280
  %4243 = icmp ult i32 %4242, 12, !dbg !281
  br i1 %4243, label %4244, label %4246, !dbg !282

4244:                                             ; preds = %4234
  %4245 = call i32 @sqlite3VdbeSerialGet(i8* %4241, i32 %4242, %struct.sqlite3_value* %4151), !dbg !283
  br label %4395, !dbg !284

4246:                                             ; preds = %4234
  %4247 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4247, align 2, !dbg !286
  %4248 = getelementptr i16, i16* %4247, i32 1, !dbg !287
  store i16 514, i16* %4248, align 2, !dbg !288
  %4249 = load i32, i32* %4148, align 4, !dbg !289
  %4250 = sub i32 %4249, 12, !dbg !290
  %4251 = lshr i32 %4250, 1, !dbg !291
  %4252 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 4, !dbg !292
  store i32 %4251, i32* %4252, align 4, !dbg !293
  %4253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 2, !dbg !294
  store i8 %4142, i8* %4253, align 1, !dbg !295
  %4254 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 5, !dbg !296
  %4255 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 7, !dbg !297
  %4256 = load i32, i32* %4255, align 4, !dbg !298
  %4257 = add i32 %4251, 2, !dbg !299
  %4258 = icmp slt i32 %4256, %4257, !dbg !300
  br i1 %4258, label %4259, label %4261, !dbg !301

4259:                                             ; preds = %4246
  store i16 1, i16* %4218, align 2, !dbg !302
  %4260 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4151, i32 %4257, i32 0), !dbg !303
  br label %4264, !dbg !304

4261:                                             ; preds = %4246
  %4262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 6, !dbg !305
  %4263 = load i8*, i8** %4262, align 8, !dbg !306
  store i8* %4263, i8** %4254, align 8, !dbg !307
  br label %4264, !dbg !308

4264:                                             ; preds = %4261, %4259
  %4265 = zext i32 %4251 to i64, !dbg !309
  %4266 = load i8*, i8** %4254, align 8, !dbg !310
  %4267 = load i8*, i8** %4147, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4266, i8* %4267, i64 %4265, i1 false), !dbg !312
  %4268 = getelementptr i8, i8* %4266, i32 %4251, !dbg !313
  store i8 0, i8* %4268, align 1, !dbg !314
  %4269 = add i32 %4251, 1, !dbg !315
  %4270 = getelementptr i8, i8* %4266, i32 %4269, !dbg !316
  store i8 0, i8* %4270, align 1, !dbg !317
  %4271 = and i32 %4249, 1, !dbg !318
  %4272 = getelementptr i16, i16* %4247, i32 %4271, !dbg !319
  %4273 = load i16, i16* %4272, align 2, !dbg !320
  store i16 %4273, i16* %4218, align 2, !dbg !321
  br label %4395, !dbg !322

4274:                                             ; preds = %4226
  %4275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 2, !dbg !323
  store i8 %4142, i8* %4275, align 1, !dbg !324
  %4276 = load i32, i32* %4148, align 4, !dbg !325
  %4277 = and i32 %4276, 1, !dbg !326
  %4278 = icmp eq i32 %4277, 0, !dbg !327
  %4279 = icmp sge i32 %4276, 12, !dbg !328
  %4280 = and i1 %4279, %4278, !dbg !329
  %4281 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4276), !dbg !330
  %4282 = icmp eq i32 %4281, 0, !dbg !331
  br i1 %4282, label %4294, label %4283, !dbg !332

4283:                                             ; preds = %4274
  %4284 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 12, i32 0, !dbg !333
  %4285 = load %struct.BtCursor*, %struct.BtCursor** %4284, align 8, !dbg !334
  %4286 = getelementptr i32, i32* %4155, i32 5, !dbg !335
  %4287 = load i32, i32* %4286, align 4, !dbg !336
  %4288 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4285, i32 %4287, i32 %4281, %struct.sqlite3_value* %4151), !dbg !337
  %4289 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 5, !dbg !338
  %4290 = load i8*, i8** %4289, align 8, !dbg !339
  %4291 = call i32 @sqlite3VdbeSerialGet(i8* %4290, i32 %4276, %struct.sqlite3_value* %4151), !dbg !340
  %4292 = load i16, i16* %4218, align 2, !dbg !341
  %4293 = and i16 %4292, -4097, !dbg !342
  store i16 %4293, i16* %4218, align 2, !dbg !343
  br label %4395, !dbg !344

4294:                                             ; preds = %4274
  %4295 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4276, %struct.sqlite3_value* %4151), !dbg !345
  br label %4395, !dbg !346

4296:                                             ; preds = %4214
  %4297 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 23, i32 5, !dbg !347
  %4298 = load i32, i32* %4297, align 4, !dbg !348
  store i32 %4298, i32* %4148, align 4, !dbg !349
  br label %4217, !dbg !350

4299:                                             ; preds = %4214
  %4300 = load i32, i32* %4162, align 4, !dbg !351
  %4301 = load i32, i32* %4155, align 4, !dbg !352
  %4302 = icmp ult i32 %4300, %4301, !dbg !353
  br i1 %4302, label %4303, label %4384, !dbg !354

4303:                                             ; preds = %4299
  %4304 = load i8*, i8** %4165, align 8, !dbg !355
  %4305 = icmp eq i8* %4304, null, !dbg !356
  br i1 %4305, label %4307, label %4306, !dbg !357

4306:                                             ; preds = %4303
  store i8* %4304, i8** %4147, align 8, !dbg !358
  br label %4307, !dbg !359

4307:                                             ; preds = %4306, %4303, %4187
  %4308 = alloca i32, align 4, !dbg !360
  %4309 = load i16, i16* %4166, align 2, !dbg !361
  %4310 = zext i16 %4309 to i32, !dbg !362
  store i32 %4310, i32* %4308, align 4, !dbg !363
  %4311 = alloca i64, align 8, !dbg !364
  %4312 = getelementptr i32, i32* %4155, i32 %4310, !dbg !365
  %4313 = load i32, i32* %4312, align 4, !dbg !366
  %4314 = zext i32 %4313 to i64, !dbg !367
  store i64 %4314, i64* %4311, align 4, !dbg !368
  %4315 = load i8*, i8** %4147, align 8, !dbg !369
  %4316 = load i32, i32* %4162, align 4, !dbg !370
  %4317 = alloca i8*, align 8, !dbg !371
  %4318 = getelementptr i8, i8* %4315, i32 %4316, !dbg !372
  store i8* %4318, i8** %4317, align 8, !dbg !373
  %4319 = load i32, i32* %4155, align 4, !dbg !374
  %4320 = getelementptr i8, i8* %4315, i32 %4319, !dbg !375
  br label %4321, !dbg !376

4321:                                             ; preds = %4328, %4307
  %4322 = load i32, i32* %4308, align 4, !dbg !377
  %4323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4150, i32 0, i32 23, i32 %4322, !dbg !378
  %4324 = load i8*, i8** %4317, align 8, !dbg !379
  %4325 = load i8, i8* %4324, align 1, !dbg !380
  %4326 = zext i8 %4325 to i32, !dbg !381
  store i32 %4326, i32* %4148, align 4, !dbg !382
  store i32 %4326, i32* %4323, align 4, !dbg !383
  %4327 = icmp sgt i8 %4325, -1, !dbg !384
  br i1 %4327, label %4351, label %4342, !dbg !385

4328:                                             ; preds = %4342, %4351
  %4329 = load i32, i32* %4308, align 4, !dbg !386
  %4330 = add i32 %4329, 1, !dbg !387
  store i32 %4330, i32* %4308, align 4, !dbg !388
  %4331 = load i64, i64* %4311, align 4, !dbg !389
  %4332 = and i64 4294967295, %4331, !dbg !390
  %4333 = trunc i64 %4332 to i32, !dbg !391
  %4334 = getelementptr i32, i32* %4155, i32 %4330, !dbg !392
  store i32 %4333, i32* %4334, align 4, !dbg !393
  %4335 = load i32, i32* %4308, align 4, !dbg !394
  %4336 = icmp sle i32 %4335, 5, !dbg !395
  %4337 = load i8*, i8** %4317, align 8, !dbg !396
  %4338 = ptrtoint i8* %4337 to i64, !dbg !397
  %4339 = ptrtoint i8* %4320 to i64, !dbg !398
  %4340 = icmp ult i64 %4338, %4339, !dbg !399
  %4341 = and i1 %4336, %4340, !dbg !400
  br i1 %4341, label %4321, label %4360, !dbg !401

4342:                                             ; preds = %4321
  %4343 = load i8*, i8** %4317, align 8, !dbg !402
  %4344 = call i8 @sqlite3GetVarint32(i8* %4343, i32* %4148), !dbg !403
  %4345 = getelementptr i8, i8* %4343, i8 %4344, !dbg !404
  store i8* %4345, i8** %4317, align 8, !dbg !405
  %4346 = load i32, i32* %4148, align 4, !dbg !406
  store i32 %4346, i32* %4323, align 4, !dbg !407
  %4347 = load i64, i64* %4311, align 4, !dbg !408
  %4348 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4346), !dbg !409
  %4349 = zext i32 %4348 to i64, !dbg !410
  %4350 = add i64 %4347, %4349, !dbg !411
  store i64 %4350, i64* %4311, align 4, !dbg !412
  br label %4328, !dbg !413

4351:                                             ; preds = %4321
  %4352 = getelementptr i8, i8* %4324, i32 1, !dbg !414
  store i8* %4352, i8** %4317, align 8, !dbg !415
  %4353 = load i32, i32* %4148, align 4, !dbg !416
  %4354 = trunc i32 %4353 to i8, !dbg !417
  %4355 = getelementptr i8, i8* %4, i8 %4354, !dbg !418
  %4356 = load i8, i8* %4355, align 1, !dbg !419
  %4357 = zext i8 %4356 to i64, !dbg !420
  %4358 = load i64, i64* %4311, align 4, !dbg !421
  %4359 = add i64 %4358, %4357, !dbg !422
  store i64 %4359, i64* %4311, align 4, !dbg !423
  br label %4328, !dbg !424

4360:                                             ; preds = %4328
  %4361 = load i64, i64* %4311, align 4, !dbg !425
  %4362 = load i32, i32* %4163, align 4, !dbg !426
  %4363 = zext i32 %4362 to i64, !dbg !427
  %4364 = icmp uge i64 %4338, %4339, !dbg !428
  %4365 = icmp ugt i64 %4338, %4339, !dbg !429
  %4366 = icmp ne i64 %4361, %4363, !dbg !430
  %4367 = icmp ugt i64 %4361, %4363, !dbg !431
  %4368 = or i1 %4365, %4366, !dbg !432
  %4369 = and i1 %4364, %4368, !dbg !433
  %4370 = or i1 %4369, %4367, !dbg !434
  br i1 %4370, label %4371, label %4375, !dbg !435

4371:                                             ; preds = %4360
  %4372 = load i32, i32* %4155, align 4, !dbg !436
  %4373 = icmp eq i32 %4372, 0, !dbg !437
  br i1 %4373, label %4374, label %4375, !dbg !438

4374:                                             ; preds = %4371
  store i32 0, i32* %4308, align 4, !dbg !439
  store i8* %4320, i8** %4317, align 8, !dbg !440
  br label %4375, !dbg !441

4375:                                             ; preds = %4374, %4371, %4360
  %4376 = load i32, i32* %4308, align 4, !dbg !442
  %4377 = trunc i32 %4376 to i16, !dbg !443
  store i16 %4377, i16* %4166, align 2, !dbg !444
  %4378 = load i8*, i8** %4317, align 8, !dbg !445
  %4379 = ptrtoint i8* %4378 to i64, !dbg !446
  %4380 = load i8*, i8** %4147, align 8, !dbg !447
  %4381 = ptrtoint i8* %4380 to i64, !dbg !448
  %4382 = sub i64 %4379, %4381, !dbg !449
  %4383 = trunc i64 %4382 to i32, !dbg !450
  store i32 %4383, i32* %4162, align 4, !dbg !451
  br label %4385, !dbg !452

4384:                                             ; preds = %4299
  store i32 0, i32* %4148, align 4, !dbg !453
  br label %4385, !dbg !454

4385:                                             ; preds = %4375, %4384
  %4386 = load i16, i16* %4166, align 2, !dbg !455
  %4387 = icmp sle i16 %4386, 5, !dbg !456
  br i1 %4387, label %4388, label %4217, !dbg !457

4388:                                             ; preds = %4385
  %4389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 1, !dbg !458
  %4390 = load i16, i16* %4389, align 2, !dbg !458
  %4391 = and i16 %4390, 9216, !dbg !458
  %4392 = icmp ne i16 %4391, 0, !dbg !458
  br i1 %4392, label %4393, label %4394, !dbg !458

4393:                                             ; preds = %4388
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4151), !dbg !458
  br label %4395, !dbg !458

4394:                                             ; preds = %4388
  store i16 1, i16* %4389, align 2, !dbg !458
  br label %4395, !dbg !458

4395:                                             ; preds = %4393, %4394, %4264, %4244, %4283, %4294, %4212, %4213
  call void @llvm.stackrestore(i8* %4140), !dbg !459
  br label %4396, !dbg !74

4396:                                             ; preds = %4395, %14
  %4397 = call i8* @llvm.stacksave(), !dbg !460
  %4398 = alloca i32, align 8, !dbg !463
  %4399 = alloca i32, align 8, !dbg !464
  %4400 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !465
  %4401 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !466
  %4402 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4400, i32 0, i32 1, !dbg !467
  %4403 = load i16, i16* %4402, align 2, !dbg !468
  %4404 = alloca i16, align 8, !dbg !469
  store i16 %4403, i16* %4404, align 2, !dbg !470
  %4405 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4401, i32 0, i32 1, !dbg !471
  %4406 = load i16, i16* %4405, align 2, !dbg !472
  %4407 = alloca i16, align 8, !dbg !473
  store i16 %4406, i16* %4407, align 2, !dbg !474
  %4408 = or i16 %4403, %4406, !dbg !475
  %4409 = and i16 %4408, 1, !dbg !476
  %4410 = icmp ne i16 %4409, 0, !dbg !477
  br i1 %4410, label %4411, label %4412, !dbg !478

4411:                                             ; preds = %4396
  call void @llvm.stackrestore(i8* %4397), !dbg !479
  br label %6947, !dbg !528

4412:                                             ; preds = %4396
  %4413 = and i16 %4403, 2, !dbg !482
  %4414 = and i16 %4403, 44, !dbg !483
  %4415 = icmp eq i16 %4413, 0, !dbg !484
  %4416 = icmp ne i16 %4414, 0, !dbg !485
  %4417 = and i16 %4406, 2, !dbg !486
  %4418 = and i16 %4406, 44, !dbg !487
  %4419 = icmp eq i16 %4417, 0, !dbg !488
  %4420 = icmp ne i16 %4418, 0, !dbg !489
  %4421 = and i1 %4415, %4416, !dbg !490
  br i1 %4421, label %4422, label %4428, !dbg !491

4422:                                             ; preds = %4412
  %4423 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %4400, i8 1, i8 1), !dbg !492
  %4424 = load i16, i16* %4402, align 2, !dbg !493
  %4425 = and i16 %4424, 15936, !dbg !493
  %4426 = and i16 %4403, -15937, !dbg !494
  %4427 = or i16 %4425, %4426, !dbg !495
  store i16 %4427, i16* %4404, align 2, !dbg !496
  br label %4428, !dbg !497

4428:                                             ; preds = %4422, %4412
  %4429 = and i1 %4419, %4420, !dbg !498
  br i1 %4429, label %4430, label %4436, !dbg !499

4430:                                             ; preds = %4428
  %4431 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %4401, i8 1, i8 1), !dbg !500
  %4432 = load i16, i16* %4405, align 2, !dbg !501
  %4433 = and i16 %4432, 15936, !dbg !501
  %4434 = and i16 %4406, -15937, !dbg !502
  %4435 = or i16 %4433, %4434, !dbg !503
  store i16 %4435, i16* %4407, align 2, !dbg !504
  br label %4436, !dbg !505

4436:                                             ; preds = %4430, %4428
  %4437 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 39, !dbg !506
  %4438 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4437, i32 0, i32 6, !dbg !507
  %4439 = bitcast %union.p4union* %4438 to %struct.CollSeq**, !dbg !508
  %4440 = load %struct.CollSeq*, %struct.CollSeq** %4439, align 8, !dbg !509
  %4441 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %4401, %struct.sqlite3_value* %4400, %struct.CollSeq* %4440), !dbg !510
  store i32 %4441, i32* %4398, align 4, !dbg !511
  %4442 = icmp slt i32 %4441, 0, !dbg !512
  br i1 %4442, label %4443, label %4444, !dbg !513

4443:                                             ; preds = %4436
  store i32 1, i32* %4399, align 4, !dbg !514
  br label %4448, !dbg !515

4444:                                             ; preds = %4436
  %4445 = icmp eq i32 %4441, 0, !dbg !516
  br i1 %4445, label %4446, label %4447, !dbg !517

4446:                                             ; preds = %4444
  store i32 0, i32* %4399, align 4, !dbg !518
  br label %4448, !dbg !519

4447:                                             ; preds = %4444
  store i32 1, i32* %4399, align 4, !dbg !520
  br label %4448, !dbg !521

4448:                                             ; preds = %4447, %4446, %4443
  store i16 %4406, i16* %4407, align 2, !dbg !522
  store i16 %4403, i16* %4404, align 2, !dbg !523
  %4449 = load i32, i32* %4399, align 4, !dbg !524
  %4450 = icmp ne i32 %4449, 0, !dbg !525
  call void @llvm.stackrestore(i8* %4397), !dbg !526
  br i1 %4450, label %6947, label %4451, !dbg !527

4451:                                             ; preds = %4448, %14
  %4452 = call i8* @llvm.stacksave(), !dbg !167
  %4453 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4454 = load i8, i8* %4453, align 1, !dbg !171
  %4455 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %4455, align 4, !dbg !173
  %4456 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %4457 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4458 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4456, align 8, !dbg !176
  store %struct.VdbeCursor* %4458, %struct.VdbeCursor** %4457, align 8, !dbg !177
  %4459 = alloca i8*, align 8, !dbg !178
  %4460 = alloca i32, align 4, !dbg !179
  %4461 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4457, i32* %4455), !dbg !180
  %4462 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4457, align 8, !dbg !181
  %4463 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !182
  %4464 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 16, !dbg !183
  %4465 = load i16, i16* %4464, align 2, !dbg !184
  %4466 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 19, !dbg !185
  %4467 = load i32*, i32** %4466, align 8, !dbg !186
  %4468 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 0, !dbg !187
  %4469 = load i8, i8* %4468, align 1, !dbg !188
  %4470 = icmp ne i8 %4469, 3, !dbg !189
  %4471 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 2, !dbg !190
  %4472 = load i8, i8* %4471, align 1, !dbg !191
  %4473 = icmp ne i8 %4472, 0, !dbg !192
  %4474 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 14, !dbg !193
  %4475 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 21, !dbg !194
  %4476 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 22, !dbg !195
  %4477 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 20, !dbg !196
  %4478 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 17, !dbg !197
  %4479 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 9, !dbg !198
  %4480 = load i32, i32* %4479, align 4, !dbg !199
  %4481 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4482 = load i32, i32* %4481, align 4, !dbg !201
  %4483 = icmp ne i32 %4480, %4482, !dbg !202
  br i1 %4483, label %4484, label %4526, !dbg !203

4484:                                             ; preds = %4451
  br i1 %4473, label %4506, label %4501, !dbg !204

4485:                                             ; preds = %4501, %4508
  %4486 = load i32, i32* %4481, align 4, !dbg !205
  store i32 %4486, i32* %4479, align 4, !dbg !206
  %4487 = load i8*, i8** %4477, align 8, !dbg !207
  %4488 = load i8, i8* %4487, align 1, !dbg !208
  %4489 = icmp sgt i8 %4488, -1, !dbg !211
  br i1 %4489, label %4490, label %4492, !dbg !212

4490:                                             ; preds = %4485
  %4491 = zext i8 %4488 to i32, !dbg !213
  store i32 %4491, i32* %4467, align 4, !dbg !214
  store i32 1, i32* %4474, align 4, !dbg !215
  br label %4495, !dbg !216

4492:                                             ; preds = %4485
  %4493 = call i8 @sqlite3GetVarint32(i8* %4487, i32* %4467), !dbg !217
  %4494 = zext i8 %4493 to i32, !dbg !218
  store i32 %4494, i32* %4474, align 4, !dbg !219
  br label %4495, !dbg !220

4495:                                             ; preds = %4492, %4490
  store i16 0, i16* %4478, align 2, !dbg !221
  %4496 = load i32, i32* %4476, align 4, !dbg !222
  %4497 = load i32, i32* %4467, align 4, !dbg !223
  %4498 = icmp ult i32 %4496, %4497, !dbg !224
  br i1 %4498, label %4500, label %4499, !dbg !225

4499:                                             ; preds = %4495
  store i8* %4487, i8** %4459, align 8, !dbg !226
  br label %4619, !dbg !227

4500:                                             ; preds = %4495
  store i8* null, i8** %4477, align 8, !dbg !228
  store i32 0, i32* %4476, align 4, !dbg !229
  br label %4526, !dbg !230

4501:                                             ; preds = %4484
  %4502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 12, i32 0, !dbg !231
  %4503 = load %struct.BtCursor*, %struct.BtCursor** %4502, align 8, !dbg !232
  %4504 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4503), !dbg !233
  store i32 %4504, i32* %4475, align 4, !dbg !234
  %4505 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4503, i32* %4476), !dbg !235
  store i8* %4505, i8** %4477, align 8, !dbg !236
  br label %4485, !dbg !237

4506:                                             ; preds = %4484
  %4507 = icmp eq i8 %4469, 3, !dbg !238
  br i1 %4507, label %4508, label %4519, !dbg !239

4508:                                             ; preds = %4506
  %4509 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 10, !dbg !240
  %4510 = load i32, i32* %4509, align 4, !dbg !241
  %4511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4510, !dbg !242
  %4512 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4511, i32 0, i32 1, !dbg !243
  %4513 = load i16, i16* %4512, align 2, !dbg !244
  %4514 = and i16 %4513, 16, !dbg !245
  %4515 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4511, i32 0, i32 4, !dbg !246
  %4516 = load i32, i32* %4515, align 4, !dbg !247
  store i32 %4516, i32* %4475, align 4, !dbg !248
  store i32 %4516, i32* %4476, align 4, !dbg !249
  %4517 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4511, i32 0, i32 5, !dbg !250
  %4518 = load i8*, i8** %4517, align 8, !dbg !251
  store i8* %4518, i8** %4477, align 8, !dbg !252
  br label %4485, !dbg !253

4519:                                             ; preds = %4506
  %4520 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 1, !dbg !254
  %4521 = load i16, i16* %4520, align 2, !dbg !254
  %4522 = and i16 %4521, 9216, !dbg !254
  %4523 = icmp ne i16 %4522, 0, !dbg !254
  br i1 %4523, label %4524, label %4525, !dbg !254

4524:                                             ; preds = %4519
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4463), !dbg !254
  br label %4707, !dbg !254

4525:                                             ; preds = %4519
  store i16 1, i16* %4520, align 2, !dbg !254
  br label %4707, !dbg !254

4526:                                             ; preds = %4500, %4451
  %4527 = load i16, i16* %4478, align 2, !dbg !255
  %4528 = icmp ule i16 %4527, 3, !dbg !256
  br i1 %4528, label %4611, label %4608, !dbg !257

4529:                                             ; preds = %4608, %4697
  %4530 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 1, !dbg !258
  %4531 = load i16, i16* %4530, align 2, !dbg !259
  %4532 = and i16 9216, %4531, !dbg !260
  %4533 = icmp eq i16 0, %4532, !dbg !261
  br i1 %4533, label %4534, label %4538, !dbg !262

4534:                                             ; preds = %4529
  %4535 = icmp ne i16 %4532, 0, !dbg !263
  br i1 %4535, label %4536, label %4537, !dbg !263

4536:                                             ; preds = %4534
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4463), !dbg !263
  br label %4538, !dbg !263

4537:                                             ; preds = %4534
  store i16 1, i16* %4530, align 2, !dbg !263
  br label %4538, !dbg !263

4538:                                             ; preds = %4536, %4537, %4529
  %4539 = load i32, i32* %4460, align 4, !dbg !264
  %4540 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 23, i32 3, !dbg !265
  %4541 = load i32, i32* %4540, align 4, !dbg !266
  %4542 = load i32, i32* %4476, align 4, !dbg !267
  %4543 = getelementptr i32, i32* %4467, i32 4, !dbg !268
  %4544 = load i32, i32* %4543, align 4, !dbg !269
  %4545 = icmp sge i32 %4542, %4544, !dbg !270
  br i1 %4545, label %4546, label %4586, !dbg !271

4546:                                             ; preds = %4538
  %4547 = load i8*, i8** %4477, align 8, !dbg !272
  %4548 = ptrtoint i8* %4547 to i64, !dbg !273
  %4549 = getelementptr i32, i32* %4467, i32 3, !dbg !274
  %4550 = load i32, i32* %4549, align 4, !dbg !275
  %4551 = zext i32 %4550 to i64, !dbg !276
  %4552 = add i64 %4548, %4551, !dbg !277
  %4553 = inttoptr i64 %4552 to i8*, !dbg !278
  store i8* %4553, i8** %4459, align 8, !dbg !279
  %4554 = load i32, i32* %4460, align 4, !dbg !280
  %4555 = icmp ult i32 %4554, 12, !dbg !281
  br i1 %4555, label %4556, label %4558, !dbg !282

4556:                                             ; preds = %4546
  %4557 = call i32 @sqlite3VdbeSerialGet(i8* %4553, i32 %4554, %struct.sqlite3_value* %4463), !dbg !283
  br label %4707, !dbg !284

4558:                                             ; preds = %4546
  %4559 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4559, align 2, !dbg !286
  %4560 = getelementptr i16, i16* %4559, i32 1, !dbg !287
  store i16 514, i16* %4560, align 2, !dbg !288
  %4561 = load i32, i32* %4460, align 4, !dbg !289
  %4562 = sub i32 %4561, 12, !dbg !290
  %4563 = lshr i32 %4562, 1, !dbg !291
  %4564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 4, !dbg !292
  store i32 %4563, i32* %4564, align 4, !dbg !293
  %4565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 2, !dbg !294
  store i8 %4454, i8* %4565, align 1, !dbg !295
  %4566 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 5, !dbg !296
  %4567 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 7, !dbg !297
  %4568 = load i32, i32* %4567, align 4, !dbg !298
  %4569 = add i32 %4563, 2, !dbg !299
  %4570 = icmp slt i32 %4568, %4569, !dbg !300
  br i1 %4570, label %4571, label %4573, !dbg !301

4571:                                             ; preds = %4558
  store i16 1, i16* %4530, align 2, !dbg !302
  %4572 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4463, i32 %4569, i32 0), !dbg !303
  br label %4576, !dbg !304

4573:                                             ; preds = %4558
  %4574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 6, !dbg !305
  %4575 = load i8*, i8** %4574, align 8, !dbg !306
  store i8* %4575, i8** %4566, align 8, !dbg !307
  br label %4576, !dbg !308

4576:                                             ; preds = %4573, %4571
  %4577 = zext i32 %4563 to i64, !dbg !309
  %4578 = load i8*, i8** %4566, align 8, !dbg !310
  %4579 = load i8*, i8** %4459, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4578, i8* %4579, i64 %4577, i1 false), !dbg !312
  %4580 = getelementptr i8, i8* %4578, i32 %4563, !dbg !313
  store i8 0, i8* %4580, align 1, !dbg !314
  %4581 = add i32 %4563, 1, !dbg !315
  %4582 = getelementptr i8, i8* %4578, i32 %4581, !dbg !316
  store i8 0, i8* %4582, align 1, !dbg !317
  %4583 = and i32 %4561, 1, !dbg !318
  %4584 = getelementptr i16, i16* %4559, i32 %4583, !dbg !319
  %4585 = load i16, i16* %4584, align 2, !dbg !320
  store i16 %4585, i16* %4530, align 2, !dbg !321
  br label %4707, !dbg !322

4586:                                             ; preds = %4538
  %4587 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 2, !dbg !323
  store i8 %4454, i8* %4587, align 1, !dbg !324
  %4588 = load i32, i32* %4460, align 4, !dbg !325
  %4589 = and i32 %4588, 1, !dbg !326
  %4590 = icmp eq i32 %4589, 0, !dbg !327
  %4591 = icmp sge i32 %4588, 12, !dbg !328
  %4592 = and i1 %4591, %4590, !dbg !329
  %4593 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4588), !dbg !330
  %4594 = icmp eq i32 %4593, 0, !dbg !331
  br i1 %4594, label %4606, label %4595, !dbg !332

4595:                                             ; preds = %4586
  %4596 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 12, i32 0, !dbg !333
  %4597 = load %struct.BtCursor*, %struct.BtCursor** %4596, align 8, !dbg !334
  %4598 = getelementptr i32, i32* %4467, i32 3, !dbg !335
  %4599 = load i32, i32* %4598, align 4, !dbg !336
  %4600 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4597, i32 %4599, i32 %4593, %struct.sqlite3_value* %4463), !dbg !337
  %4601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 5, !dbg !338
  %4602 = load i8*, i8** %4601, align 8, !dbg !339
  %4603 = call i32 @sqlite3VdbeSerialGet(i8* %4602, i32 %4588, %struct.sqlite3_value* %4463), !dbg !340
  %4604 = load i16, i16* %4530, align 2, !dbg !341
  %4605 = and i16 %4604, -4097, !dbg !342
  store i16 %4605, i16* %4530, align 2, !dbg !343
  br label %4707, !dbg !344

4606:                                             ; preds = %4586
  %4607 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4588, %struct.sqlite3_value* %4463), !dbg !345
  br label %4707, !dbg !346

4608:                                             ; preds = %4526
  %4609 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 23, i32 3, !dbg !347
  %4610 = load i32, i32* %4609, align 4, !dbg !348
  store i32 %4610, i32* %4460, align 4, !dbg !349
  br label %4529, !dbg !350

4611:                                             ; preds = %4526
  %4612 = load i32, i32* %4474, align 4, !dbg !351
  %4613 = load i32, i32* %4467, align 4, !dbg !352
  %4614 = icmp ult i32 %4612, %4613, !dbg !353
  br i1 %4614, label %4615, label %4696, !dbg !354

4615:                                             ; preds = %4611
  %4616 = load i8*, i8** %4477, align 8, !dbg !355
  %4617 = icmp eq i8* %4616, null, !dbg !356
  br i1 %4617, label %4619, label %4618, !dbg !357

4618:                                             ; preds = %4615
  store i8* %4616, i8** %4459, align 8, !dbg !358
  br label %4619, !dbg !359

4619:                                             ; preds = %4618, %4615, %4499
  %4620 = alloca i32, align 4, !dbg !360
  %4621 = load i16, i16* %4478, align 2, !dbg !361
  %4622 = zext i16 %4621 to i32, !dbg !362
  store i32 %4622, i32* %4620, align 4, !dbg !363
  %4623 = alloca i64, align 8, !dbg !364
  %4624 = getelementptr i32, i32* %4467, i32 %4622, !dbg !365
  %4625 = load i32, i32* %4624, align 4, !dbg !366
  %4626 = zext i32 %4625 to i64, !dbg !367
  store i64 %4626, i64* %4623, align 4, !dbg !368
  %4627 = load i8*, i8** %4459, align 8, !dbg !369
  %4628 = load i32, i32* %4474, align 4, !dbg !370
  %4629 = alloca i8*, align 8, !dbg !371
  %4630 = getelementptr i8, i8* %4627, i32 %4628, !dbg !372
  store i8* %4630, i8** %4629, align 8, !dbg !373
  %4631 = load i32, i32* %4467, align 4, !dbg !374
  %4632 = getelementptr i8, i8* %4627, i32 %4631, !dbg !375
  br label %4633, !dbg !376

4633:                                             ; preds = %4640, %4619
  %4634 = load i32, i32* %4620, align 4, !dbg !377
  %4635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4462, i32 0, i32 23, i32 %4634, !dbg !378
  %4636 = load i8*, i8** %4629, align 8, !dbg !379
  %4637 = load i8, i8* %4636, align 1, !dbg !380
  %4638 = zext i8 %4637 to i32, !dbg !381
  store i32 %4638, i32* %4460, align 4, !dbg !382
  store i32 %4638, i32* %4635, align 4, !dbg !383
  %4639 = icmp sgt i8 %4637, -1, !dbg !384
  br i1 %4639, label %4663, label %4654, !dbg !385

4640:                                             ; preds = %4654, %4663
  %4641 = load i32, i32* %4620, align 4, !dbg !386
  %4642 = add i32 %4641, 1, !dbg !387
  store i32 %4642, i32* %4620, align 4, !dbg !388
  %4643 = load i64, i64* %4623, align 4, !dbg !389
  %4644 = and i64 4294967295, %4643, !dbg !390
  %4645 = trunc i64 %4644 to i32, !dbg !391
  %4646 = getelementptr i32, i32* %4467, i32 %4642, !dbg !392
  store i32 %4645, i32* %4646, align 4, !dbg !393
  %4647 = load i32, i32* %4620, align 4, !dbg !394
  %4648 = icmp sle i32 %4647, 3, !dbg !395
  %4649 = load i8*, i8** %4629, align 8, !dbg !396
  %4650 = ptrtoint i8* %4649 to i64, !dbg !397
  %4651 = ptrtoint i8* %4632 to i64, !dbg !398
  %4652 = icmp ult i64 %4650, %4651, !dbg !399
  %4653 = and i1 %4648, %4652, !dbg !400
  br i1 %4653, label %4633, label %4672, !dbg !401

4654:                                             ; preds = %4633
  %4655 = load i8*, i8** %4629, align 8, !dbg !402
  %4656 = call i8 @sqlite3GetVarint32(i8* %4655, i32* %4460), !dbg !403
  %4657 = getelementptr i8, i8* %4655, i8 %4656, !dbg !404
  store i8* %4657, i8** %4629, align 8, !dbg !405
  %4658 = load i32, i32* %4460, align 4, !dbg !406
  store i32 %4658, i32* %4635, align 4, !dbg !407
  %4659 = load i64, i64* %4623, align 4, !dbg !408
  %4660 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4658), !dbg !409
  %4661 = zext i32 %4660 to i64, !dbg !410
  %4662 = add i64 %4659, %4661, !dbg !411
  store i64 %4662, i64* %4623, align 4, !dbg !412
  br label %4640, !dbg !413

4663:                                             ; preds = %4633
  %4664 = getelementptr i8, i8* %4636, i32 1, !dbg !414
  store i8* %4664, i8** %4629, align 8, !dbg !415
  %4665 = load i32, i32* %4460, align 4, !dbg !416
  %4666 = trunc i32 %4665 to i8, !dbg !417
  %4667 = getelementptr i8, i8* %4, i8 %4666, !dbg !418
  %4668 = load i8, i8* %4667, align 1, !dbg !419
  %4669 = zext i8 %4668 to i64, !dbg !420
  %4670 = load i64, i64* %4623, align 4, !dbg !421
  %4671 = add i64 %4670, %4669, !dbg !422
  store i64 %4671, i64* %4623, align 4, !dbg !423
  br label %4640, !dbg !424

4672:                                             ; preds = %4640
  %4673 = load i64, i64* %4623, align 4, !dbg !425
  %4674 = load i32, i32* %4475, align 4, !dbg !426
  %4675 = zext i32 %4674 to i64, !dbg !427
  %4676 = icmp uge i64 %4650, %4651, !dbg !428
  %4677 = icmp ugt i64 %4650, %4651, !dbg !429
  %4678 = icmp ne i64 %4673, %4675, !dbg !430
  %4679 = icmp ugt i64 %4673, %4675, !dbg !431
  %4680 = or i1 %4677, %4678, !dbg !432
  %4681 = and i1 %4676, %4680, !dbg !433
  %4682 = or i1 %4681, %4679, !dbg !434
  br i1 %4682, label %4683, label %4687, !dbg !435

4683:                                             ; preds = %4672
  %4684 = load i32, i32* %4467, align 4, !dbg !436
  %4685 = icmp eq i32 %4684, 0, !dbg !437
  br i1 %4685, label %4686, label %4687, !dbg !438

4686:                                             ; preds = %4683
  store i32 0, i32* %4620, align 4, !dbg !439
  store i8* %4632, i8** %4629, align 8, !dbg !440
  br label %4687, !dbg !441

4687:                                             ; preds = %4686, %4683, %4672
  %4688 = load i32, i32* %4620, align 4, !dbg !442
  %4689 = trunc i32 %4688 to i16, !dbg !443
  store i16 %4689, i16* %4478, align 2, !dbg !444
  %4690 = load i8*, i8** %4629, align 8, !dbg !445
  %4691 = ptrtoint i8* %4690 to i64, !dbg !446
  %4692 = load i8*, i8** %4459, align 8, !dbg !447
  %4693 = ptrtoint i8* %4692 to i64, !dbg !448
  %4694 = sub i64 %4691, %4693, !dbg !449
  %4695 = trunc i64 %4694 to i32, !dbg !450
  store i32 %4695, i32* %4474, align 4, !dbg !451
  br label %4697, !dbg !452

4696:                                             ; preds = %4611
  store i32 0, i32* %4460, align 4, !dbg !453
  br label %4697, !dbg !454

4697:                                             ; preds = %4687, %4696
  %4698 = load i16, i16* %4478, align 2, !dbg !455
  %4699 = icmp sle i16 %4698, 3, !dbg !456
  br i1 %4699, label %4700, label %4529, !dbg !457

4700:                                             ; preds = %4697
  %4701 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4463, i32 0, i32 1, !dbg !458
  %4702 = load i16, i16* %4701, align 2, !dbg !458
  %4703 = and i16 %4702, 9216, !dbg !458
  %4704 = icmp ne i16 %4703, 0, !dbg !458
  br i1 %4704, label %4705, label %4706, !dbg !458

4705:                                             ; preds = %4700
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4463), !dbg !458
  br label %4707, !dbg !458

4706:                                             ; preds = %4700
  store i16 1, i16* %4701, align 2, !dbg !458
  br label %4707, !dbg !458

4707:                                             ; preds = %4705, %4706, %4576, %4556, %4595, %4606, %4524, %4525
  call void @llvm.stackrestore(i8* %4452), !dbg !459
  br label %4708, !dbg !74

4708:                                             ; preds = %4707, %14
  %4709 = call i8* @llvm.stacksave(), !dbg !1076
  %4710 = alloca i32, align 8, !dbg !1079
  %4711 = alloca i64, align 8, !dbg !1080
  %4712 = alloca i32, align 8, !dbg !1081
  %4713 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !1082
  %4714 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4713, i32 0, i32 1, !dbg !1083
  %4715 = load i16, i16* %4714, align 2, !dbg !1084
  %4716 = and i16 %4715, 36, !dbg !1085
  %4717 = icmp eq i16 %4716, 0, !dbg !1086
  br i1 %4717, label %4718, label %4729, !dbg !1087

4718:                                             ; preds = %4708
  %4719 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %4720 = load %struct.sqlite3_value, %struct.sqlite3_value* %4713, align 8, !dbg !1089
  store %struct.sqlite3_value %4720, %struct.sqlite3_value* %4719, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %4719, i8 67, i8 1), !dbg !1090
  %4721 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4719, i32 0, i32 1, !dbg !1091
  %4722 = load i16, i16* %4721, align 2, !dbg !1092
  %4723 = and i16 %4722, 4, !dbg !1093
  %4724 = icmp eq i16 %4723, 0, !dbg !1094
  br i1 %4724, label %6947, label %4725, !dbg !1095

4725:                                             ; preds = %4718
  %4726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4719, i32 0, i32 0, !dbg !1096
  %4727 = bitcast %union.MemValue* %4726 to i64*, !dbg !1097
  %4728 = load i64, i64* %4727, align 4, !dbg !1098
  store i64 %4728, i64* %4711, align 4, !dbg !1099
  br label %4733, !dbg !1100

4729:                                             ; preds = %4708
  %4730 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4713, i32 0, i32 0, !dbg !1101
  %4731 = bitcast %union.MemValue* %4730 to i64*, !dbg !1102
  %4732 = load i64, i64* %4731, align 4, !dbg !1103
  store i64 %4732, i64* %4711, align 4, !dbg !1104
  br label %4733, !dbg !1105

4733:                                             ; preds = %4729, %4725
  %4734 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !1107
  %4735 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 12, i32 0, !dbg !1108
  %4736 = load %struct.BtCursor*, %struct.BtCursor** %4735, align 8, !dbg !1109
  store i32 0, i32* %4710, align 4, !dbg !1110
  %4737 = load i64, i64* %4711, align 4, !dbg !1111
  %4738 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %4736, %struct.UnpackedRecord* null, i64 %4737, i32 0, i32* %4710), !dbg !1112
  store i32 %4738, i32* %4712, align 4, !dbg !1113
  %4739 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 18, !dbg !1114
  store i64 %4737, i64* %4739, align 4, !dbg !1115
  %4740 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 2, !dbg !1116
  store i8 0, i8* %4740, align 1, !dbg !1117
  %4741 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 9, !dbg !1118
  store i32 0, i32* %4741, align 4, !dbg !1119
  %4742 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 3, !dbg !1120
  store i8 0, i8* %4742, align 1, !dbg !1121
  %4743 = load i32, i32* %4710, align 4, !dbg !1122
  %4744 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4734, i32 0, i32 10, !dbg !1123
  store i32 %4743, i32* %4744, align 4, !dbg !1124
  %4745 = icmp ne i32 %4743, 0, !dbg !1125
  br i1 %4745, label %4746, label %4747, !dbg !1126

4746:                                             ; preds = %4733
  call void @llvm.stackrestore(i8* %4709), !dbg !1127
  br label %6947, !dbg !1128

4747:                                             ; preds = %4733
  %4748 = load i32, i32* %4712, align 4, !dbg !1129
  call void @llvm.stackrestore(i8* %4709), !dbg !1130
  br label %4749, !dbg !1131

4749:                                             ; preds = %4747, %14
  %4750 = call i8* @llvm.stacksave(), !dbg !167
  %4751 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %4752 = load i8, i8* %4751, align 1, !dbg !171
  %4753 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %4753, align 4, !dbg !173
  %4754 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %4755 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %4756 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4754, align 8, !dbg !176
  store %struct.VdbeCursor* %4756, %struct.VdbeCursor** %4755, align 8, !dbg !177
  %4757 = alloca i8*, align 8, !dbg !178
  %4758 = alloca i32, align 4, !dbg !179
  %4759 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4755, i32* %4753), !dbg !180
  %4760 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4755, align 8, !dbg !181
  %4761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !182
  %4762 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 16, !dbg !183
  %4763 = load i16, i16* %4762, align 2, !dbg !184
  %4764 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 19, !dbg !185
  %4765 = load i32*, i32** %4764, align 8, !dbg !186
  %4766 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 0, !dbg !187
  %4767 = load i8, i8* %4766, align 1, !dbg !188
  %4768 = icmp ne i8 %4767, 3, !dbg !189
  %4769 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 2, !dbg !190
  %4770 = load i8, i8* %4769, align 1, !dbg !191
  %4771 = icmp ne i8 %4770, 0, !dbg !192
  %4772 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 14, !dbg !193
  %4773 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 21, !dbg !194
  %4774 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 22, !dbg !195
  %4775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 20, !dbg !196
  %4776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 17, !dbg !197
  %4777 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 9, !dbg !198
  %4778 = load i32, i32* %4777, align 4, !dbg !199
  %4779 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %4780 = load i32, i32* %4779, align 4, !dbg !201
  %4781 = icmp ne i32 %4778, %4780, !dbg !202
  br i1 %4781, label %4782, label %4824, !dbg !203

4782:                                             ; preds = %4749
  br i1 %4771, label %4804, label %4799, !dbg !204

4783:                                             ; preds = %4799, %4806
  %4784 = load i32, i32* %4779, align 4, !dbg !205
  store i32 %4784, i32* %4777, align 4, !dbg !206
  %4785 = load i8*, i8** %4775, align 8, !dbg !207
  %4786 = load i8, i8* %4785, align 1, !dbg !208
  %4787 = icmp sgt i8 %4786, -1, !dbg !211
  br i1 %4787, label %4788, label %4790, !dbg !212

4788:                                             ; preds = %4783
  %4789 = zext i8 %4786 to i32, !dbg !213
  store i32 %4789, i32* %4765, align 4, !dbg !214
  store i32 1, i32* %4772, align 4, !dbg !215
  br label %4793, !dbg !216

4790:                                             ; preds = %4783
  %4791 = call i8 @sqlite3GetVarint32(i8* %4785, i32* %4765), !dbg !217
  %4792 = zext i8 %4791 to i32, !dbg !218
  store i32 %4792, i32* %4772, align 4, !dbg !219
  br label %4793, !dbg !220

4793:                                             ; preds = %4790, %4788
  store i16 0, i16* %4776, align 2, !dbg !221
  %4794 = load i32, i32* %4774, align 4, !dbg !222
  %4795 = load i32, i32* %4765, align 4, !dbg !223
  %4796 = icmp ult i32 %4794, %4795, !dbg !224
  br i1 %4796, label %4798, label %4797, !dbg !225

4797:                                             ; preds = %4793
  store i8* %4785, i8** %4757, align 8, !dbg !226
  br label %4917, !dbg !227

4798:                                             ; preds = %4793
  store i8* null, i8** %4775, align 8, !dbg !228
  store i32 0, i32* %4774, align 4, !dbg !229
  br label %4824, !dbg !230

4799:                                             ; preds = %4782
  %4800 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 12, i32 0, !dbg !231
  %4801 = load %struct.BtCursor*, %struct.BtCursor** %4800, align 8, !dbg !232
  %4802 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4801), !dbg !233
  store i32 %4802, i32* %4773, align 4, !dbg !234
  %4803 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4801, i32* %4774), !dbg !235
  store i8* %4803, i8** %4775, align 8, !dbg !236
  br label %4783, !dbg !237

4804:                                             ; preds = %4782
  %4805 = icmp eq i8 %4767, 3, !dbg !238
  br i1 %4805, label %4806, label %4817, !dbg !239

4806:                                             ; preds = %4804
  %4807 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 10, !dbg !240
  %4808 = load i32, i32* %4807, align 4, !dbg !241
  %4809 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4808, !dbg !242
  %4810 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4809, i32 0, i32 1, !dbg !243
  %4811 = load i16, i16* %4810, align 2, !dbg !244
  %4812 = and i16 %4811, 16, !dbg !245
  %4813 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4809, i32 0, i32 4, !dbg !246
  %4814 = load i32, i32* %4813, align 4, !dbg !247
  store i32 %4814, i32* %4773, align 4, !dbg !248
  store i32 %4814, i32* %4774, align 4, !dbg !249
  %4815 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4809, i32 0, i32 5, !dbg !250
  %4816 = load i8*, i8** %4815, align 8, !dbg !251
  store i8* %4816, i8** %4775, align 8, !dbg !252
  br label %4783, !dbg !253

4817:                                             ; preds = %4804
  %4818 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 1, !dbg !254
  %4819 = load i16, i16* %4818, align 2, !dbg !254
  %4820 = and i16 %4819, 9216, !dbg !254
  %4821 = icmp ne i16 %4820, 0, !dbg !254
  br i1 %4821, label %4822, label %4823, !dbg !254

4822:                                             ; preds = %4817
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4761), !dbg !254
  br label %5005, !dbg !254

4823:                                             ; preds = %4817
  store i16 1, i16* %4818, align 2, !dbg !254
  br label %5005, !dbg !254

4824:                                             ; preds = %4798, %4749
  %4825 = load i16, i16* %4776, align 2, !dbg !255
  %4826 = icmp ule i16 %4825, 2, !dbg !256
  br i1 %4826, label %4909, label %4906, !dbg !257

4827:                                             ; preds = %4906, %4995
  %4828 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 1, !dbg !258
  %4829 = load i16, i16* %4828, align 2, !dbg !259
  %4830 = and i16 9216, %4829, !dbg !260
  %4831 = icmp eq i16 0, %4830, !dbg !261
  br i1 %4831, label %4832, label %4836, !dbg !262

4832:                                             ; preds = %4827
  %4833 = icmp ne i16 %4830, 0, !dbg !263
  br i1 %4833, label %4834, label %4835, !dbg !263

4834:                                             ; preds = %4832
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4761), !dbg !263
  br label %4836, !dbg !263

4835:                                             ; preds = %4832
  store i16 1, i16* %4828, align 2, !dbg !263
  br label %4836, !dbg !263

4836:                                             ; preds = %4834, %4835, %4827
  %4837 = load i32, i32* %4758, align 4, !dbg !264
  %4838 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 23, i32 2, !dbg !265
  %4839 = load i32, i32* %4838, align 4, !dbg !266
  %4840 = load i32, i32* %4774, align 4, !dbg !267
  %4841 = getelementptr i32, i32* %4765, i32 3, !dbg !268
  %4842 = load i32, i32* %4841, align 4, !dbg !269
  %4843 = icmp sge i32 %4840, %4842, !dbg !270
  br i1 %4843, label %4844, label %4884, !dbg !271

4844:                                             ; preds = %4836
  %4845 = load i8*, i8** %4775, align 8, !dbg !272
  %4846 = ptrtoint i8* %4845 to i64, !dbg !273
  %4847 = getelementptr i32, i32* %4765, i32 2, !dbg !274
  %4848 = load i32, i32* %4847, align 4, !dbg !275
  %4849 = zext i32 %4848 to i64, !dbg !276
  %4850 = add i64 %4846, %4849, !dbg !277
  %4851 = inttoptr i64 %4850 to i8*, !dbg !278
  store i8* %4851, i8** %4757, align 8, !dbg !279
  %4852 = load i32, i32* %4758, align 4, !dbg !280
  %4853 = icmp ult i32 %4852, 12, !dbg !281
  br i1 %4853, label %4854, label %4856, !dbg !282

4854:                                             ; preds = %4844
  %4855 = call i32 @sqlite3VdbeSerialGet(i8* %4851, i32 %4852, %struct.sqlite3_value* %4761), !dbg !283
  br label %5005, !dbg !284

4856:                                             ; preds = %4844
  %4857 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %4857, align 2, !dbg !286
  %4858 = getelementptr i16, i16* %4857, i32 1, !dbg !287
  store i16 514, i16* %4858, align 2, !dbg !288
  %4859 = load i32, i32* %4758, align 4, !dbg !289
  %4860 = sub i32 %4859, 12, !dbg !290
  %4861 = lshr i32 %4860, 1, !dbg !291
  %4862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 4, !dbg !292
  store i32 %4861, i32* %4862, align 4, !dbg !293
  %4863 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 2, !dbg !294
  store i8 %4752, i8* %4863, align 1, !dbg !295
  %4864 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 5, !dbg !296
  %4865 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 7, !dbg !297
  %4866 = load i32, i32* %4865, align 4, !dbg !298
  %4867 = add i32 %4861, 2, !dbg !299
  %4868 = icmp slt i32 %4866, %4867, !dbg !300
  br i1 %4868, label %4869, label %4871, !dbg !301

4869:                                             ; preds = %4856
  store i16 1, i16* %4828, align 2, !dbg !302
  %4870 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4761, i32 %4867, i32 0), !dbg !303
  br label %4874, !dbg !304

4871:                                             ; preds = %4856
  %4872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 6, !dbg !305
  %4873 = load i8*, i8** %4872, align 8, !dbg !306
  store i8* %4873, i8** %4864, align 8, !dbg !307
  br label %4874, !dbg !308

4874:                                             ; preds = %4871, %4869
  %4875 = zext i32 %4861 to i64, !dbg !309
  %4876 = load i8*, i8** %4864, align 8, !dbg !310
  %4877 = load i8*, i8** %4757, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4876, i8* %4877, i64 %4875, i1 false), !dbg !312
  %4878 = getelementptr i8, i8* %4876, i32 %4861, !dbg !313
  store i8 0, i8* %4878, align 1, !dbg !314
  %4879 = add i32 %4861, 1, !dbg !315
  %4880 = getelementptr i8, i8* %4876, i32 %4879, !dbg !316
  store i8 0, i8* %4880, align 1, !dbg !317
  %4881 = and i32 %4859, 1, !dbg !318
  %4882 = getelementptr i16, i16* %4857, i32 %4881, !dbg !319
  %4883 = load i16, i16* %4882, align 2, !dbg !320
  store i16 %4883, i16* %4828, align 2, !dbg !321
  br label %5005, !dbg !322

4884:                                             ; preds = %4836
  %4885 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 2, !dbg !323
  store i8 %4752, i8* %4885, align 1, !dbg !324
  %4886 = load i32, i32* %4758, align 4, !dbg !325
  %4887 = and i32 %4886, 1, !dbg !326
  %4888 = icmp eq i32 %4887, 0, !dbg !327
  %4889 = icmp sge i32 %4886, 12, !dbg !328
  %4890 = and i1 %4889, %4888, !dbg !329
  %4891 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4886), !dbg !330
  %4892 = icmp eq i32 %4891, 0, !dbg !331
  br i1 %4892, label %4904, label %4893, !dbg !332

4893:                                             ; preds = %4884
  %4894 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 12, i32 0, !dbg !333
  %4895 = load %struct.BtCursor*, %struct.BtCursor** %4894, align 8, !dbg !334
  %4896 = getelementptr i32, i32* %4765, i32 2, !dbg !335
  %4897 = load i32, i32* %4896, align 4, !dbg !336
  %4898 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4895, i32 %4897, i32 %4891, %struct.sqlite3_value* %4761), !dbg !337
  %4899 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 5, !dbg !338
  %4900 = load i8*, i8** %4899, align 8, !dbg !339
  %4901 = call i32 @sqlite3VdbeSerialGet(i8* %4900, i32 %4886, %struct.sqlite3_value* %4761), !dbg !340
  %4902 = load i16, i16* %4828, align 2, !dbg !341
  %4903 = and i16 %4902, -4097, !dbg !342
  store i16 %4903, i16* %4828, align 2, !dbg !343
  br label %5005, !dbg !344

4904:                                             ; preds = %4884
  %4905 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4886, %struct.sqlite3_value* %4761), !dbg !345
  br label %5005, !dbg !346

4906:                                             ; preds = %4824
  %4907 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 23, i32 2, !dbg !347
  %4908 = load i32, i32* %4907, align 4, !dbg !348
  store i32 %4908, i32* %4758, align 4, !dbg !349
  br label %4827, !dbg !350

4909:                                             ; preds = %4824
  %4910 = load i32, i32* %4772, align 4, !dbg !351
  %4911 = load i32, i32* %4765, align 4, !dbg !352
  %4912 = icmp ult i32 %4910, %4911, !dbg !353
  br i1 %4912, label %4913, label %4994, !dbg !354

4913:                                             ; preds = %4909
  %4914 = load i8*, i8** %4775, align 8, !dbg !355
  %4915 = icmp eq i8* %4914, null, !dbg !356
  br i1 %4915, label %4917, label %4916, !dbg !357

4916:                                             ; preds = %4913
  store i8* %4914, i8** %4757, align 8, !dbg !358
  br label %4917, !dbg !359

4917:                                             ; preds = %4916, %4913, %4797
  %4918 = alloca i32, align 4, !dbg !360
  %4919 = load i16, i16* %4776, align 2, !dbg !361
  %4920 = zext i16 %4919 to i32, !dbg !362
  store i32 %4920, i32* %4918, align 4, !dbg !363
  %4921 = alloca i64, align 8, !dbg !364
  %4922 = getelementptr i32, i32* %4765, i32 %4920, !dbg !365
  %4923 = load i32, i32* %4922, align 4, !dbg !366
  %4924 = zext i32 %4923 to i64, !dbg !367
  store i64 %4924, i64* %4921, align 4, !dbg !368
  %4925 = load i8*, i8** %4757, align 8, !dbg !369
  %4926 = load i32, i32* %4772, align 4, !dbg !370
  %4927 = alloca i8*, align 8, !dbg !371
  %4928 = getelementptr i8, i8* %4925, i32 %4926, !dbg !372
  store i8* %4928, i8** %4927, align 8, !dbg !373
  %4929 = load i32, i32* %4765, align 4, !dbg !374
  %4930 = getelementptr i8, i8* %4925, i32 %4929, !dbg !375
  br label %4931, !dbg !376

4931:                                             ; preds = %4938, %4917
  %4932 = load i32, i32* %4918, align 4, !dbg !377
  %4933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4760, i32 0, i32 23, i32 %4932, !dbg !378
  %4934 = load i8*, i8** %4927, align 8, !dbg !379
  %4935 = load i8, i8* %4934, align 1, !dbg !380
  %4936 = zext i8 %4935 to i32, !dbg !381
  store i32 %4936, i32* %4758, align 4, !dbg !382
  store i32 %4936, i32* %4933, align 4, !dbg !383
  %4937 = icmp sgt i8 %4935, -1, !dbg !384
  br i1 %4937, label %4961, label %4952, !dbg !385

4938:                                             ; preds = %4952, %4961
  %4939 = load i32, i32* %4918, align 4, !dbg !386
  %4940 = add i32 %4939, 1, !dbg !387
  store i32 %4940, i32* %4918, align 4, !dbg !388
  %4941 = load i64, i64* %4921, align 4, !dbg !389
  %4942 = and i64 4294967295, %4941, !dbg !390
  %4943 = trunc i64 %4942 to i32, !dbg !391
  %4944 = getelementptr i32, i32* %4765, i32 %4940, !dbg !392
  store i32 %4943, i32* %4944, align 4, !dbg !393
  %4945 = load i32, i32* %4918, align 4, !dbg !394
  %4946 = icmp sle i32 %4945, 2, !dbg !395
  %4947 = load i8*, i8** %4927, align 8, !dbg !396
  %4948 = ptrtoint i8* %4947 to i64, !dbg !397
  %4949 = ptrtoint i8* %4930 to i64, !dbg !398
  %4950 = icmp ult i64 %4948, %4949, !dbg !399
  %4951 = and i1 %4946, %4950, !dbg !400
  br i1 %4951, label %4931, label %4970, !dbg !401

4952:                                             ; preds = %4931
  %4953 = load i8*, i8** %4927, align 8, !dbg !402
  %4954 = call i8 @sqlite3GetVarint32(i8* %4953, i32* %4758), !dbg !403
  %4955 = getelementptr i8, i8* %4953, i8 %4954, !dbg !404
  store i8* %4955, i8** %4927, align 8, !dbg !405
  %4956 = load i32, i32* %4758, align 4, !dbg !406
  store i32 %4956, i32* %4933, align 4, !dbg !407
  %4957 = load i64, i64* %4921, align 4, !dbg !408
  %4958 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4956), !dbg !409
  %4959 = zext i32 %4958 to i64, !dbg !410
  %4960 = add i64 %4957, %4959, !dbg !411
  store i64 %4960, i64* %4921, align 4, !dbg !412
  br label %4938, !dbg !413

4961:                                             ; preds = %4931
  %4962 = getelementptr i8, i8* %4934, i32 1, !dbg !414
  store i8* %4962, i8** %4927, align 8, !dbg !415
  %4963 = load i32, i32* %4758, align 4, !dbg !416
  %4964 = trunc i32 %4963 to i8, !dbg !417
  %4965 = getelementptr i8, i8* %4, i8 %4964, !dbg !418
  %4966 = load i8, i8* %4965, align 1, !dbg !419
  %4967 = zext i8 %4966 to i64, !dbg !420
  %4968 = load i64, i64* %4921, align 4, !dbg !421
  %4969 = add i64 %4968, %4967, !dbg !422
  store i64 %4969, i64* %4921, align 4, !dbg !423
  br label %4938, !dbg !424

4970:                                             ; preds = %4938
  %4971 = load i64, i64* %4921, align 4, !dbg !425
  %4972 = load i32, i32* %4773, align 4, !dbg !426
  %4973 = zext i32 %4972 to i64, !dbg !427
  %4974 = icmp uge i64 %4948, %4949, !dbg !428
  %4975 = icmp ugt i64 %4948, %4949, !dbg !429
  %4976 = icmp ne i64 %4971, %4973, !dbg !430
  %4977 = icmp ugt i64 %4971, %4973, !dbg !431
  %4978 = or i1 %4975, %4976, !dbg !432
  %4979 = and i1 %4974, %4978, !dbg !433
  %4980 = or i1 %4979, %4977, !dbg !434
  br i1 %4980, label %4981, label %4985, !dbg !435

4981:                                             ; preds = %4970
  %4982 = load i32, i32* %4765, align 4, !dbg !436
  %4983 = icmp eq i32 %4982, 0, !dbg !437
  br i1 %4983, label %4984, label %4985, !dbg !438

4984:                                             ; preds = %4981
  store i32 0, i32* %4918, align 4, !dbg !439
  store i8* %4930, i8** %4927, align 8, !dbg !440
  br label %4985, !dbg !441

4985:                                             ; preds = %4984, %4981, %4970
  %4986 = load i32, i32* %4918, align 4, !dbg !442
  %4987 = trunc i32 %4986 to i16, !dbg !443
  store i16 %4987, i16* %4776, align 2, !dbg !444
  %4988 = load i8*, i8** %4927, align 8, !dbg !445
  %4989 = ptrtoint i8* %4988 to i64, !dbg !446
  %4990 = load i8*, i8** %4757, align 8, !dbg !447
  %4991 = ptrtoint i8* %4990 to i64, !dbg !448
  %4992 = sub i64 %4989, %4991, !dbg !449
  %4993 = trunc i64 %4992 to i32, !dbg !450
  store i32 %4993, i32* %4772, align 4, !dbg !451
  br label %4995, !dbg !452

4994:                                             ; preds = %4909
  store i32 0, i32* %4758, align 4, !dbg !453
  br label %4995, !dbg !454

4995:                                             ; preds = %4985, %4994
  %4996 = load i16, i16* %4776, align 2, !dbg !455
  %4997 = icmp sle i16 %4996, 2, !dbg !456
  br i1 %4997, label %4998, label %4827, !dbg !457

4998:                                             ; preds = %4995
  %4999 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4761, i32 0, i32 1, !dbg !458
  %5000 = load i16, i16* %4999, align 2, !dbg !458
  %5001 = and i16 %5000, 9216, !dbg !458
  %5002 = icmp ne i16 %5001, 0, !dbg !458
  br i1 %5002, label %5003, label %5004, !dbg !458

5003:                                             ; preds = %4998
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4761), !dbg !458
  br label %5005, !dbg !458

5004:                                             ; preds = %4998
  store i16 1, i16* %4999, align 2, !dbg !458
  br label %5005, !dbg !458

5005:                                             ; preds = %5003, %5004, %4874, %4854, %4893, %4904, %4822, %4823
  call void @llvm.stackrestore(i8* %4750), !dbg !459
  br label %5006, !dbg !74

5006:                                             ; preds = %5005, %14
  %5007 = call i8* @llvm.stacksave(), !dbg !1076
  %5008 = alloca i32, align 8, !dbg !1079
  %5009 = alloca i64, align 8, !dbg !1080
  %5010 = alloca i32, align 8, !dbg !1081
  %5011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !1082
  %5012 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5011, i32 0, i32 1, !dbg !1083
  %5013 = load i16, i16* %5012, align 2, !dbg !1084
  %5014 = and i16 %5013, 36, !dbg !1085
  %5015 = icmp eq i16 %5014, 0, !dbg !1086
  br i1 %5015, label %5016, label %5027, !dbg !1087

5016:                                             ; preds = %5006
  %5017 = alloca %struct.sqlite3_value, align 8, !dbg !1088
  %5018 = load %struct.sqlite3_value, %struct.sqlite3_value* %5011, align 8, !dbg !1089
  store %struct.sqlite3_value %5018, %struct.sqlite3_value* %5017, align 8, !dbg !1089
  call void @applyAffinity(%struct.sqlite3_value* %5017, i8 67, i8 1), !dbg !1090
  %5019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5017, i32 0, i32 1, !dbg !1091
  %5020 = load i16, i16* %5019, align 2, !dbg !1092
  %5021 = and i16 %5020, 4, !dbg !1093
  %5022 = icmp eq i16 %5021, 0, !dbg !1094
  br i1 %5022, label %6947, label %5023, !dbg !1095

5023:                                             ; preds = %5016
  %5024 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5017, i32 0, i32 0, !dbg !1096
  %5025 = bitcast %union.MemValue* %5024 to i64*, !dbg !1097
  %5026 = load i64, i64* %5025, align 4, !dbg !1098
  store i64 %5026, i64* %5009, align 4, !dbg !1099
  br label %5031, !dbg !1100

5027:                                             ; preds = %5006
  %5028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5011, i32 0, i32 0, !dbg !1101
  %5029 = bitcast %union.MemValue* %5028 to i64*, !dbg !1102
  %5030 = load i64, i64* %5029, align 4, !dbg !1103
  store i64 %5030, i64* %5009, align 4, !dbg !1104
  br label %5031, !dbg !1105

5031:                                             ; preds = %5027, %5023
  %5032 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !1106
  %5033 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5032, align 8, !dbg !1107
  %5034 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 12, i32 0, !dbg !1108
  %5035 = load %struct.BtCursor*, %struct.BtCursor** %5034, align 8, !dbg !1109
  store i32 0, i32* %5008, align 4, !dbg !1110
  %5036 = load i64, i64* %5009, align 4, !dbg !1111
  %5037 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %5035, %struct.UnpackedRecord* null, i64 %5036, i32 0, i32* %5008), !dbg !1112
  store i32 %5037, i32* %5010, align 4, !dbg !1113
  %5038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 18, !dbg !1114
  store i64 %5036, i64* %5038, align 4, !dbg !1115
  %5039 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 2, !dbg !1116
  store i8 0, i8* %5039, align 1, !dbg !1117
  %5040 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 9, !dbg !1118
  store i32 0, i32* %5040, align 4, !dbg !1119
  %5041 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 3, !dbg !1120
  store i8 0, i8* %5041, align 1, !dbg !1121
  %5042 = load i32, i32* %5008, align 4, !dbg !1122
  %5043 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5033, i32 0, i32 10, !dbg !1123
  store i32 %5042, i32* %5043, align 4, !dbg !1124
  %5044 = icmp ne i32 %5042, 0, !dbg !1125
  br i1 %5044, label %5045, label %5046, !dbg !1126

5045:                                             ; preds = %5031
  call void @llvm.stackrestore(i8* %5007), !dbg !1127
  br label %6947, !dbg !1128

5046:                                             ; preds = %5031
  %5047 = load i32, i32* %5010, align 4, !dbg !1129
  call void @llvm.stackrestore(i8* %5007), !dbg !1130
  br label %5048, !dbg !1131

5048:                                             ; preds = %5046, %14
  %5049 = call i8* @llvm.stacksave(), !dbg !167
  %5050 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5051 = load i8, i8* %5050, align 1, !dbg !171
  %5052 = alloca i32, align 4, !dbg !172
  store i32 2, i32* %5052, align 4, !dbg !173
  %5053 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !174
  %5054 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5055 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5053, align 8, !dbg !176
  store %struct.VdbeCursor* %5055, %struct.VdbeCursor** %5054, align 8, !dbg !177
  %5056 = alloca i8*, align 8, !dbg !178
  %5057 = alloca i32, align 4, !dbg !179
  %5058 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5054, i32* %5052), !dbg !180
  %5059 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5054, align 8, !dbg !181
  %5060 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !182
  %5061 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 16, !dbg !183
  %5062 = load i16, i16* %5061, align 2, !dbg !184
  %5063 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 19, !dbg !185
  %5064 = load i32*, i32** %5063, align 8, !dbg !186
  %5065 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 0, !dbg !187
  %5066 = load i8, i8* %5065, align 1, !dbg !188
  %5067 = icmp ne i8 %5066, 3, !dbg !189
  %5068 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 2, !dbg !190
  %5069 = load i8, i8* %5068, align 1, !dbg !191
  %5070 = icmp ne i8 %5069, 0, !dbg !192
  %5071 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 14, !dbg !193
  %5072 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 21, !dbg !194
  %5073 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 22, !dbg !195
  %5074 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 20, !dbg !196
  %5075 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 17, !dbg !197
  %5076 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 9, !dbg !198
  %5077 = load i32, i32* %5076, align 4, !dbg !199
  %5078 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5079 = load i32, i32* %5078, align 4, !dbg !201
  %5080 = icmp ne i32 %5077, %5079, !dbg !202
  br i1 %5080, label %5081, label %5123, !dbg !203

5081:                                             ; preds = %5048
  br i1 %5070, label %5103, label %5098, !dbg !204

5082:                                             ; preds = %5098, %5105
  %5083 = load i32, i32* %5078, align 4, !dbg !205
  store i32 %5083, i32* %5076, align 4, !dbg !206
  %5084 = load i8*, i8** %5074, align 8, !dbg !207
  %5085 = load i8, i8* %5084, align 1, !dbg !208
  %5086 = icmp sgt i8 %5085, -1, !dbg !211
  br i1 %5086, label %5087, label %5089, !dbg !212

5087:                                             ; preds = %5082
  %5088 = zext i8 %5085 to i32, !dbg !213
  store i32 %5088, i32* %5064, align 4, !dbg !214
  store i32 1, i32* %5071, align 4, !dbg !215
  br label %5092, !dbg !216

5089:                                             ; preds = %5082
  %5090 = call i8 @sqlite3GetVarint32(i8* %5084, i32* %5064), !dbg !217
  %5091 = zext i8 %5090 to i32, !dbg !218
  store i32 %5091, i32* %5071, align 4, !dbg !219
  br label %5092, !dbg !220

5092:                                             ; preds = %5089, %5087
  store i16 0, i16* %5075, align 2, !dbg !221
  %5093 = load i32, i32* %5073, align 4, !dbg !222
  %5094 = load i32, i32* %5064, align 4, !dbg !223
  %5095 = icmp ult i32 %5093, %5094, !dbg !224
  br i1 %5095, label %5097, label %5096, !dbg !225

5096:                                             ; preds = %5092
  store i8* %5084, i8** %5056, align 8, !dbg !226
  br label %5216, !dbg !227

5097:                                             ; preds = %5092
  store i8* null, i8** %5074, align 8, !dbg !228
  store i32 0, i32* %5073, align 4, !dbg !229
  br label %5123, !dbg !230

5098:                                             ; preds = %5081
  %5099 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 12, i32 0, !dbg !231
  %5100 = load %struct.BtCursor*, %struct.BtCursor** %5099, align 8, !dbg !232
  %5101 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5100), !dbg !233
  store i32 %5101, i32* %5072, align 4, !dbg !234
  %5102 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5100, i32* %5073), !dbg !235
  store i8* %5102, i8** %5074, align 8, !dbg !236
  br label %5082, !dbg !237

5103:                                             ; preds = %5081
  %5104 = icmp eq i8 %5066, 3, !dbg !238
  br i1 %5104, label %5105, label %5116, !dbg !239

5105:                                             ; preds = %5103
  %5106 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 10, !dbg !240
  %5107 = load i32, i32* %5106, align 4, !dbg !241
  %5108 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5107, !dbg !242
  %5109 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5108, i32 0, i32 1, !dbg !243
  %5110 = load i16, i16* %5109, align 2, !dbg !244
  %5111 = and i16 %5110, 16, !dbg !245
  %5112 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5108, i32 0, i32 4, !dbg !246
  %5113 = load i32, i32* %5112, align 4, !dbg !247
  store i32 %5113, i32* %5072, align 4, !dbg !248
  store i32 %5113, i32* %5073, align 4, !dbg !249
  %5114 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5108, i32 0, i32 5, !dbg !250
  %5115 = load i8*, i8** %5114, align 8, !dbg !251
  store i8* %5115, i8** %5074, align 8, !dbg !252
  br label %5082, !dbg !253

5116:                                             ; preds = %5103
  %5117 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 1, !dbg !254
  %5118 = load i16, i16* %5117, align 2, !dbg !254
  %5119 = and i16 %5118, 9216, !dbg !254
  %5120 = icmp ne i16 %5119, 0, !dbg !254
  br i1 %5120, label %5121, label %5122, !dbg !254

5121:                                             ; preds = %5116
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5060), !dbg !254
  br label %5304, !dbg !254

5122:                                             ; preds = %5116
  store i16 1, i16* %5117, align 2, !dbg !254
  br label %5304, !dbg !254

5123:                                             ; preds = %5097, %5048
  %5124 = load i16, i16* %5075, align 2, !dbg !255
  %5125 = icmp ule i16 %5124, 5, !dbg !256
  br i1 %5125, label %5208, label %5205, !dbg !257

5126:                                             ; preds = %5205, %5294
  %5127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 1, !dbg !258
  %5128 = load i16, i16* %5127, align 2, !dbg !259
  %5129 = and i16 9216, %5128, !dbg !260
  %5130 = icmp eq i16 0, %5129, !dbg !261
  br i1 %5130, label %5131, label %5135, !dbg !262

5131:                                             ; preds = %5126
  %5132 = icmp ne i16 %5129, 0, !dbg !263
  br i1 %5132, label %5133, label %5134, !dbg !263

5133:                                             ; preds = %5131
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5060), !dbg !263
  br label %5135, !dbg !263

5134:                                             ; preds = %5131
  store i16 1, i16* %5127, align 2, !dbg !263
  br label %5135, !dbg !263

5135:                                             ; preds = %5133, %5134, %5126
  %5136 = load i32, i32* %5057, align 4, !dbg !264
  %5137 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 23, i32 5, !dbg !265
  %5138 = load i32, i32* %5137, align 4, !dbg !266
  %5139 = load i32, i32* %5073, align 4, !dbg !267
  %5140 = getelementptr i32, i32* %5064, i32 6, !dbg !268
  %5141 = load i32, i32* %5140, align 4, !dbg !269
  %5142 = icmp sge i32 %5139, %5141, !dbg !270
  br i1 %5142, label %5143, label %5183, !dbg !271

5143:                                             ; preds = %5135
  %5144 = load i8*, i8** %5074, align 8, !dbg !272
  %5145 = ptrtoint i8* %5144 to i64, !dbg !273
  %5146 = getelementptr i32, i32* %5064, i32 5, !dbg !274
  %5147 = load i32, i32* %5146, align 4, !dbg !275
  %5148 = zext i32 %5147 to i64, !dbg !276
  %5149 = add i64 %5145, %5148, !dbg !277
  %5150 = inttoptr i64 %5149 to i8*, !dbg !278
  store i8* %5150, i8** %5056, align 8, !dbg !279
  %5151 = load i32, i32* %5057, align 4, !dbg !280
  %5152 = icmp ult i32 %5151, 12, !dbg !281
  br i1 %5152, label %5153, label %5155, !dbg !282

5153:                                             ; preds = %5143
  %5154 = call i32 @sqlite3VdbeSerialGet(i8* %5150, i32 %5151, %struct.sqlite3_value* %5060), !dbg !283
  br label %5304, !dbg !284

5155:                                             ; preds = %5143
  %5156 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5156, align 2, !dbg !286
  %5157 = getelementptr i16, i16* %5156, i32 1, !dbg !287
  store i16 514, i16* %5157, align 2, !dbg !288
  %5158 = load i32, i32* %5057, align 4, !dbg !289
  %5159 = sub i32 %5158, 12, !dbg !290
  %5160 = lshr i32 %5159, 1, !dbg !291
  %5161 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 4, !dbg !292
  store i32 %5160, i32* %5161, align 4, !dbg !293
  %5162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 2, !dbg !294
  store i8 %5051, i8* %5162, align 1, !dbg !295
  %5163 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 5, !dbg !296
  %5164 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 7, !dbg !297
  %5165 = load i32, i32* %5164, align 4, !dbg !298
  %5166 = add i32 %5160, 2, !dbg !299
  %5167 = icmp slt i32 %5165, %5166, !dbg !300
  br i1 %5167, label %5168, label %5170, !dbg !301

5168:                                             ; preds = %5155
  store i16 1, i16* %5127, align 2, !dbg !302
  %5169 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5060, i32 %5166, i32 0), !dbg !303
  br label %5173, !dbg !304

5170:                                             ; preds = %5155
  %5171 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 6, !dbg !305
  %5172 = load i8*, i8** %5171, align 8, !dbg !306
  store i8* %5172, i8** %5163, align 8, !dbg !307
  br label %5173, !dbg !308

5173:                                             ; preds = %5170, %5168
  %5174 = zext i32 %5160 to i64, !dbg !309
  %5175 = load i8*, i8** %5163, align 8, !dbg !310
  %5176 = load i8*, i8** %5056, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5175, i8* %5176, i64 %5174, i1 false), !dbg !312
  %5177 = getelementptr i8, i8* %5175, i32 %5160, !dbg !313
  store i8 0, i8* %5177, align 1, !dbg !314
  %5178 = add i32 %5160, 1, !dbg !315
  %5179 = getelementptr i8, i8* %5175, i32 %5178, !dbg !316
  store i8 0, i8* %5179, align 1, !dbg !317
  %5180 = and i32 %5158, 1, !dbg !318
  %5181 = getelementptr i16, i16* %5156, i32 %5180, !dbg !319
  %5182 = load i16, i16* %5181, align 2, !dbg !320
  store i16 %5182, i16* %5127, align 2, !dbg !321
  br label %5304, !dbg !322

5183:                                             ; preds = %5135
  %5184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 2, !dbg !323
  store i8 %5051, i8* %5184, align 1, !dbg !324
  %5185 = load i32, i32* %5057, align 4, !dbg !325
  %5186 = and i32 %5185, 1, !dbg !326
  %5187 = icmp eq i32 %5186, 0, !dbg !327
  %5188 = icmp sge i32 %5185, 12, !dbg !328
  %5189 = and i1 %5188, %5187, !dbg !329
  %5190 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5185), !dbg !330
  %5191 = icmp eq i32 %5190, 0, !dbg !331
  br i1 %5191, label %5203, label %5192, !dbg !332

5192:                                             ; preds = %5183
  %5193 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 12, i32 0, !dbg !333
  %5194 = load %struct.BtCursor*, %struct.BtCursor** %5193, align 8, !dbg !334
  %5195 = getelementptr i32, i32* %5064, i32 5, !dbg !335
  %5196 = load i32, i32* %5195, align 4, !dbg !336
  %5197 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5194, i32 %5196, i32 %5190, %struct.sqlite3_value* %5060), !dbg !337
  %5198 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 5, !dbg !338
  %5199 = load i8*, i8** %5198, align 8, !dbg !339
  %5200 = call i32 @sqlite3VdbeSerialGet(i8* %5199, i32 %5185, %struct.sqlite3_value* %5060), !dbg !340
  %5201 = load i16, i16* %5127, align 2, !dbg !341
  %5202 = and i16 %5201, -4097, !dbg !342
  store i16 %5202, i16* %5127, align 2, !dbg !343
  br label %5304, !dbg !344

5203:                                             ; preds = %5183
  %5204 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5185, %struct.sqlite3_value* %5060), !dbg !345
  br label %5304, !dbg !346

5205:                                             ; preds = %5123
  %5206 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 23, i32 5, !dbg !347
  %5207 = load i32, i32* %5206, align 4, !dbg !348
  store i32 %5207, i32* %5057, align 4, !dbg !349
  br label %5126, !dbg !350

5208:                                             ; preds = %5123
  %5209 = load i32, i32* %5071, align 4, !dbg !351
  %5210 = load i32, i32* %5064, align 4, !dbg !352
  %5211 = icmp ult i32 %5209, %5210, !dbg !353
  br i1 %5211, label %5212, label %5293, !dbg !354

5212:                                             ; preds = %5208
  %5213 = load i8*, i8** %5074, align 8, !dbg !355
  %5214 = icmp eq i8* %5213, null, !dbg !356
  br i1 %5214, label %5216, label %5215, !dbg !357

5215:                                             ; preds = %5212
  store i8* %5213, i8** %5056, align 8, !dbg !358
  br label %5216, !dbg !359

5216:                                             ; preds = %5215, %5212, %5096
  %5217 = alloca i32, align 4, !dbg !360
  %5218 = load i16, i16* %5075, align 2, !dbg !361
  %5219 = zext i16 %5218 to i32, !dbg !362
  store i32 %5219, i32* %5217, align 4, !dbg !363
  %5220 = alloca i64, align 8, !dbg !364
  %5221 = getelementptr i32, i32* %5064, i32 %5219, !dbg !365
  %5222 = load i32, i32* %5221, align 4, !dbg !366
  %5223 = zext i32 %5222 to i64, !dbg !367
  store i64 %5223, i64* %5220, align 4, !dbg !368
  %5224 = load i8*, i8** %5056, align 8, !dbg !369
  %5225 = load i32, i32* %5071, align 4, !dbg !370
  %5226 = alloca i8*, align 8, !dbg !371
  %5227 = getelementptr i8, i8* %5224, i32 %5225, !dbg !372
  store i8* %5227, i8** %5226, align 8, !dbg !373
  %5228 = load i32, i32* %5064, align 4, !dbg !374
  %5229 = getelementptr i8, i8* %5224, i32 %5228, !dbg !375
  br label %5230, !dbg !376

5230:                                             ; preds = %5237, %5216
  %5231 = load i32, i32* %5217, align 4, !dbg !377
  %5232 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5059, i32 0, i32 23, i32 %5231, !dbg !378
  %5233 = load i8*, i8** %5226, align 8, !dbg !379
  %5234 = load i8, i8* %5233, align 1, !dbg !380
  %5235 = zext i8 %5234 to i32, !dbg !381
  store i32 %5235, i32* %5057, align 4, !dbg !382
  store i32 %5235, i32* %5232, align 4, !dbg !383
  %5236 = icmp sgt i8 %5234, -1, !dbg !384
  br i1 %5236, label %5260, label %5251, !dbg !385

5237:                                             ; preds = %5251, %5260
  %5238 = load i32, i32* %5217, align 4, !dbg !386
  %5239 = add i32 %5238, 1, !dbg !387
  store i32 %5239, i32* %5217, align 4, !dbg !388
  %5240 = load i64, i64* %5220, align 4, !dbg !389
  %5241 = and i64 4294967295, %5240, !dbg !390
  %5242 = trunc i64 %5241 to i32, !dbg !391
  %5243 = getelementptr i32, i32* %5064, i32 %5239, !dbg !392
  store i32 %5242, i32* %5243, align 4, !dbg !393
  %5244 = load i32, i32* %5217, align 4, !dbg !394
  %5245 = icmp sle i32 %5244, 5, !dbg !395
  %5246 = load i8*, i8** %5226, align 8, !dbg !396
  %5247 = ptrtoint i8* %5246 to i64, !dbg !397
  %5248 = ptrtoint i8* %5229 to i64, !dbg !398
  %5249 = icmp ult i64 %5247, %5248, !dbg !399
  %5250 = and i1 %5245, %5249, !dbg !400
  br i1 %5250, label %5230, label %5269, !dbg !401

5251:                                             ; preds = %5230
  %5252 = load i8*, i8** %5226, align 8, !dbg !402
  %5253 = call i8 @sqlite3GetVarint32(i8* %5252, i32* %5057), !dbg !403
  %5254 = getelementptr i8, i8* %5252, i8 %5253, !dbg !404
  store i8* %5254, i8** %5226, align 8, !dbg !405
  %5255 = load i32, i32* %5057, align 4, !dbg !406
  store i32 %5255, i32* %5232, align 4, !dbg !407
  %5256 = load i64, i64* %5220, align 4, !dbg !408
  %5257 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5255), !dbg !409
  %5258 = zext i32 %5257 to i64, !dbg !410
  %5259 = add i64 %5256, %5258, !dbg !411
  store i64 %5259, i64* %5220, align 4, !dbg !412
  br label %5237, !dbg !413

5260:                                             ; preds = %5230
  %5261 = getelementptr i8, i8* %5233, i32 1, !dbg !414
  store i8* %5261, i8** %5226, align 8, !dbg !415
  %5262 = load i32, i32* %5057, align 4, !dbg !416
  %5263 = trunc i32 %5262 to i8, !dbg !417
  %5264 = getelementptr i8, i8* %4, i8 %5263, !dbg !418
  %5265 = load i8, i8* %5264, align 1, !dbg !419
  %5266 = zext i8 %5265 to i64, !dbg !420
  %5267 = load i64, i64* %5220, align 4, !dbg !421
  %5268 = add i64 %5267, %5266, !dbg !422
  store i64 %5268, i64* %5220, align 4, !dbg !423
  br label %5237, !dbg !424

5269:                                             ; preds = %5237
  %5270 = load i64, i64* %5220, align 4, !dbg !425
  %5271 = load i32, i32* %5072, align 4, !dbg !426
  %5272 = zext i32 %5271 to i64, !dbg !427
  %5273 = icmp uge i64 %5247, %5248, !dbg !428
  %5274 = icmp ugt i64 %5247, %5248, !dbg !429
  %5275 = icmp ne i64 %5270, %5272, !dbg !430
  %5276 = icmp ugt i64 %5270, %5272, !dbg !431
  %5277 = or i1 %5274, %5275, !dbg !432
  %5278 = and i1 %5273, %5277, !dbg !433
  %5279 = or i1 %5278, %5276, !dbg !434
  br i1 %5279, label %5280, label %5284, !dbg !435

5280:                                             ; preds = %5269
  %5281 = load i32, i32* %5064, align 4, !dbg !436
  %5282 = icmp eq i32 %5281, 0, !dbg !437
  br i1 %5282, label %5283, label %5284, !dbg !438

5283:                                             ; preds = %5280
  store i32 0, i32* %5217, align 4, !dbg !439
  store i8* %5229, i8** %5226, align 8, !dbg !440
  br label %5284, !dbg !441

5284:                                             ; preds = %5283, %5280, %5269
  %5285 = load i32, i32* %5217, align 4, !dbg !442
  %5286 = trunc i32 %5285 to i16, !dbg !443
  store i16 %5286, i16* %5075, align 2, !dbg !444
  %5287 = load i8*, i8** %5226, align 8, !dbg !445
  %5288 = ptrtoint i8* %5287 to i64, !dbg !446
  %5289 = load i8*, i8** %5056, align 8, !dbg !447
  %5290 = ptrtoint i8* %5289 to i64, !dbg !448
  %5291 = sub i64 %5288, %5290, !dbg !449
  %5292 = trunc i64 %5291 to i32, !dbg !450
  store i32 %5292, i32* %5071, align 4, !dbg !451
  br label %5294, !dbg !452

5293:                                             ; preds = %5208
  store i32 0, i32* %5057, align 4, !dbg !453
  br label %5294, !dbg !454

5294:                                             ; preds = %5284, %5293
  %5295 = load i16, i16* %5075, align 2, !dbg !455
  %5296 = icmp sle i16 %5295, 5, !dbg !456
  br i1 %5296, label %5297, label %5126, !dbg !457

5297:                                             ; preds = %5294
  %5298 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5060, i32 0, i32 1, !dbg !458
  %5299 = load i16, i16* %5298, align 2, !dbg !458
  %5300 = and i16 %5299, 9216, !dbg !458
  %5301 = icmp ne i16 %5300, 0, !dbg !458
  br i1 %5301, label %5302, label %5303, !dbg !458

5302:                                             ; preds = %5297
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5060), !dbg !458
  br label %5304, !dbg !458

5303:                                             ; preds = %5297
  store i16 1, i16* %5298, align 2, !dbg !458
  br label %5304, !dbg !458

5304:                                             ; preds = %5302, %5303, %5173, %5153, %5192, %5203, %5121, %5122
  call void @llvm.stackrestore(i8* %5049), !dbg !459
  br label %5305, !dbg !74

5305:                                             ; preds = %5304, %14
  %5306 = call i8* @llvm.stacksave(), !dbg !460
  %5307 = alloca i32, align 8, !dbg !463
  %5308 = alloca i32, align 8, !dbg !464
  %5309 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !465
  %5310 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !466
  %5311 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5309, i32 0, i32 1, !dbg !467
  %5312 = load i16, i16* %5311, align 2, !dbg !468
  %5313 = alloca i16, align 8, !dbg !469
  store i16 %5312, i16* %5313, align 2, !dbg !470
  %5314 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5310, i32 0, i32 1, !dbg !471
  %5315 = load i16, i16* %5314, align 2, !dbg !472
  %5316 = alloca i16, align 8, !dbg !473
  store i16 %5315, i16* %5316, align 2, !dbg !474
  %5317 = or i16 %5312, %5315, !dbg !475
  %5318 = and i16 %5317, 1, !dbg !476
  %5319 = icmp ne i16 %5318, 0, !dbg !477
  br i1 %5319, label %5320, label %5321, !dbg !478

5320:                                             ; preds = %5305
  call void @llvm.stackrestore(i8* %5306), !dbg !479
  br label %6947, !dbg !528

5321:                                             ; preds = %5305
  %5322 = and i16 %5312, 2, !dbg !482
  %5323 = and i16 %5312, 44, !dbg !483
  %5324 = icmp eq i16 %5322, 0, !dbg !484
  %5325 = icmp ne i16 %5323, 0, !dbg !485
  %5326 = and i16 %5315, 2, !dbg !486
  %5327 = and i16 %5315, 44, !dbg !487
  %5328 = icmp eq i16 %5326, 0, !dbg !488
  %5329 = icmp ne i16 %5327, 0, !dbg !489
  %5330 = and i1 %5324, %5325, !dbg !490
  br i1 %5330, label %5331, label %5337, !dbg !491

5331:                                             ; preds = %5321
  %5332 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5309, i8 1, i8 1), !dbg !492
  %5333 = load i16, i16* %5311, align 2, !dbg !493
  %5334 = and i16 %5333, 15936, !dbg !493
  %5335 = and i16 %5312, -15937, !dbg !494
  %5336 = or i16 %5334, %5335, !dbg !495
  store i16 %5336, i16* %5313, align 2, !dbg !496
  br label %5337, !dbg !497

5337:                                             ; preds = %5331, %5321
  %5338 = and i1 %5328, %5329, !dbg !498
  br i1 %5338, label %5339, label %5345, !dbg !499

5339:                                             ; preds = %5337
  %5340 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5310, i8 1, i8 1), !dbg !500
  %5341 = load i16, i16* %5314, align 2, !dbg !501
  %5342 = and i16 %5341, 15936, !dbg !501
  %5343 = and i16 %5315, -15937, !dbg !502
  %5344 = or i16 %5342, %5343, !dbg !503
  store i16 %5344, i16* %5316, align 2, !dbg !504
  br label %5345, !dbg !505

5345:                                             ; preds = %5339, %5337
  %5346 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, !dbg !506
  %5347 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5346, i32 0, i32 6, !dbg !507
  %5348 = bitcast %union.p4union* %5347 to %struct.CollSeq**, !dbg !508
  %5349 = load %struct.CollSeq*, %struct.CollSeq** %5348, align 8, !dbg !509
  %5350 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5310, %struct.sqlite3_value* %5309, %struct.CollSeq* %5349), !dbg !510
  store i32 %5350, i32* %5307, align 4, !dbg !511
  %5351 = icmp slt i32 %5350, 0, !dbg !512
  br i1 %5351, label %5352, label %5353, !dbg !513

5352:                                             ; preds = %5345
  store i32 1, i32* %5308, align 4, !dbg !514
  br label %5357, !dbg !515

5353:                                             ; preds = %5345
  %5354 = icmp eq i32 %5350, 0, !dbg !516
  br i1 %5354, label %5355, label %5356, !dbg !517

5355:                                             ; preds = %5353
  store i32 0, i32* %5308, align 4, !dbg !518
  br label %5357, !dbg !519

5356:                                             ; preds = %5353
  store i32 1, i32* %5308, align 4, !dbg !520
  br label %5357, !dbg !521

5357:                                             ; preds = %5356, %5355, %5352
  store i16 %5315, i16* %5316, align 2, !dbg !522
  store i16 %5312, i16* %5313, align 2, !dbg !523
  %5358 = load i32, i32* %5308, align 4, !dbg !524
  %5359 = icmp ne i32 %5358, 0, !dbg !525
  call void @llvm.stackrestore(i8* %5306), !dbg !526
  br i1 %5359, label %6947, label %5360, !dbg !527

5360:                                             ; preds = %5357, %14
  %5361 = call i8* @llvm.stacksave(), !dbg !167
  %5362 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5363 = load i8, i8* %5362, align 1, !dbg !171
  %5364 = alloca i32, align 4, !dbg !172
  store i32 0, i32* %5364, align 4, !dbg !173
  %5365 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5366 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !176
  store %struct.VdbeCursor* %5366, %struct.VdbeCursor** %5365, align 8, !dbg !177
  %5367 = alloca i8*, align 8, !dbg !178
  %5368 = alloca i32, align 4, !dbg !179
  %5369 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5365, i32* %5364), !dbg !180
  %5370 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5365, align 8, !dbg !181
  %5371 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !182
  %5372 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 16, !dbg !183
  %5373 = load i16, i16* %5372, align 2, !dbg !184
  %5374 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 19, !dbg !185
  %5375 = load i32*, i32** %5374, align 8, !dbg !186
  %5376 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 0, !dbg !187
  %5377 = load i8, i8* %5376, align 1, !dbg !188
  %5378 = icmp ne i8 %5377, 3, !dbg !189
  %5379 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 2, !dbg !190
  %5380 = load i8, i8* %5379, align 1, !dbg !191
  %5381 = icmp ne i8 %5380, 0, !dbg !192
  %5382 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 14, !dbg !193
  %5383 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 21, !dbg !194
  %5384 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 22, !dbg !195
  %5385 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 20, !dbg !196
  %5386 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 17, !dbg !197
  %5387 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 9, !dbg !198
  %5388 = load i32, i32* %5387, align 4, !dbg !199
  %5389 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5390 = load i32, i32* %5389, align 4, !dbg !201
  %5391 = icmp ne i32 %5388, %5390, !dbg !202
  br i1 %5391, label %5392, label %5434, !dbg !203

5392:                                             ; preds = %5360
  br i1 %5381, label %5414, label %5409, !dbg !204

5393:                                             ; preds = %5409, %5416
  %5394 = load i32, i32* %5389, align 4, !dbg !205
  store i32 %5394, i32* %5387, align 4, !dbg !206
  %5395 = load i8*, i8** %5385, align 8, !dbg !207
  %5396 = load i8, i8* %5395, align 1, !dbg !208
  %5397 = icmp sgt i8 %5396, -1, !dbg !211
  br i1 %5397, label %5398, label %5400, !dbg !212

5398:                                             ; preds = %5393
  %5399 = zext i8 %5396 to i32, !dbg !213
  store i32 %5399, i32* %5375, align 4, !dbg !214
  store i32 1, i32* %5382, align 4, !dbg !215
  br label %5403, !dbg !216

5400:                                             ; preds = %5393
  %5401 = call i8 @sqlite3GetVarint32(i8* %5395, i32* %5375), !dbg !217
  %5402 = zext i8 %5401 to i32, !dbg !218
  store i32 %5402, i32* %5382, align 4, !dbg !219
  br label %5403, !dbg !220

5403:                                             ; preds = %5400, %5398
  store i16 0, i16* %5386, align 2, !dbg !221
  %5404 = load i32, i32* %5384, align 4, !dbg !222
  %5405 = load i32, i32* %5375, align 4, !dbg !223
  %5406 = icmp ult i32 %5404, %5405, !dbg !224
  br i1 %5406, label %5408, label %5407, !dbg !225

5407:                                             ; preds = %5403
  store i8* %5395, i8** %5367, align 8, !dbg !226
  br label %5527, !dbg !227

5408:                                             ; preds = %5403
  store i8* null, i8** %5385, align 8, !dbg !228
  store i32 0, i32* %5384, align 4, !dbg !229
  br label %5434, !dbg !230

5409:                                             ; preds = %5392
  %5410 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 12, i32 0, !dbg !231
  %5411 = load %struct.BtCursor*, %struct.BtCursor** %5410, align 8, !dbg !232
  %5412 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5411), !dbg !233
  store i32 %5412, i32* %5383, align 4, !dbg !234
  %5413 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5411, i32* %5384), !dbg !235
  store i8* %5413, i8** %5385, align 8, !dbg !236
  br label %5393, !dbg !237

5414:                                             ; preds = %5392
  %5415 = icmp eq i8 %5377, 3, !dbg !238
  br i1 %5415, label %5416, label %5427, !dbg !239

5416:                                             ; preds = %5414
  %5417 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 10, !dbg !240
  %5418 = load i32, i32* %5417, align 4, !dbg !241
  %5419 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5418, !dbg !242
  %5420 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5419, i32 0, i32 1, !dbg !243
  %5421 = load i16, i16* %5420, align 2, !dbg !244
  %5422 = and i16 %5421, 16, !dbg !245
  %5423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5419, i32 0, i32 4, !dbg !246
  %5424 = load i32, i32* %5423, align 4, !dbg !247
  store i32 %5424, i32* %5383, align 4, !dbg !248
  store i32 %5424, i32* %5384, align 4, !dbg !249
  %5425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5419, i32 0, i32 5, !dbg !250
  %5426 = load i8*, i8** %5425, align 8, !dbg !251
  store i8* %5426, i8** %5385, align 8, !dbg !252
  br label %5393, !dbg !253

5427:                                             ; preds = %5414
  %5428 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 1, !dbg !254
  %5429 = load i16, i16* %5428, align 2, !dbg !254
  %5430 = and i16 %5429, 9216, !dbg !254
  %5431 = icmp ne i16 %5430, 0, !dbg !254
  br i1 %5431, label %5432, label %5433, !dbg !254

5432:                                             ; preds = %5427
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5371), !dbg !254
  br label %5615, !dbg !254

5433:                                             ; preds = %5427
  store i16 1, i16* %5428, align 2, !dbg !254
  br label %5615, !dbg !254

5434:                                             ; preds = %5408, %5360
  %5435 = load i16, i16* %5386, align 2, !dbg !255
  %5436 = icmp ule i16 %5435, 4, !dbg !256
  br i1 %5436, label %5519, label %5516, !dbg !257

5437:                                             ; preds = %5516, %5605
  %5438 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 1, !dbg !258
  %5439 = load i16, i16* %5438, align 2, !dbg !259
  %5440 = and i16 9216, %5439, !dbg !260
  %5441 = icmp eq i16 0, %5440, !dbg !261
  br i1 %5441, label %5442, label %5446, !dbg !262

5442:                                             ; preds = %5437
  %5443 = icmp ne i16 %5440, 0, !dbg !263
  br i1 %5443, label %5444, label %5445, !dbg !263

5444:                                             ; preds = %5442
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5371), !dbg !263
  br label %5446, !dbg !263

5445:                                             ; preds = %5442
  store i16 1, i16* %5438, align 2, !dbg !263
  br label %5446, !dbg !263

5446:                                             ; preds = %5444, %5445, %5437
  %5447 = load i32, i32* %5368, align 4, !dbg !264
  %5448 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 23, i32 4, !dbg !265
  %5449 = load i32, i32* %5448, align 4, !dbg !266
  %5450 = load i32, i32* %5384, align 4, !dbg !267
  %5451 = getelementptr i32, i32* %5375, i32 5, !dbg !268
  %5452 = load i32, i32* %5451, align 4, !dbg !269
  %5453 = icmp sge i32 %5450, %5452, !dbg !270
  br i1 %5453, label %5454, label %5494, !dbg !271

5454:                                             ; preds = %5446
  %5455 = load i8*, i8** %5385, align 8, !dbg !272
  %5456 = ptrtoint i8* %5455 to i64, !dbg !273
  %5457 = getelementptr i32, i32* %5375, i32 4, !dbg !274
  %5458 = load i32, i32* %5457, align 4, !dbg !275
  %5459 = zext i32 %5458 to i64, !dbg !276
  %5460 = add i64 %5456, %5459, !dbg !277
  %5461 = inttoptr i64 %5460 to i8*, !dbg !278
  store i8* %5461, i8** %5367, align 8, !dbg !279
  %5462 = load i32, i32* %5368, align 4, !dbg !280
  %5463 = icmp ult i32 %5462, 12, !dbg !281
  br i1 %5463, label %5464, label %5466, !dbg !282

5464:                                             ; preds = %5454
  %5465 = call i32 @sqlite3VdbeSerialGet(i8* %5461, i32 %5462, %struct.sqlite3_value* %5371), !dbg !283
  br label %5615, !dbg !284

5466:                                             ; preds = %5454
  %5467 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5467, align 2, !dbg !286
  %5468 = getelementptr i16, i16* %5467, i32 1, !dbg !287
  store i16 514, i16* %5468, align 2, !dbg !288
  %5469 = load i32, i32* %5368, align 4, !dbg !289
  %5470 = sub i32 %5469, 12, !dbg !290
  %5471 = lshr i32 %5470, 1, !dbg !291
  %5472 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 4, !dbg !292
  store i32 %5471, i32* %5472, align 4, !dbg !293
  %5473 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 2, !dbg !294
  store i8 %5363, i8* %5473, align 1, !dbg !295
  %5474 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 5, !dbg !296
  %5475 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 7, !dbg !297
  %5476 = load i32, i32* %5475, align 4, !dbg !298
  %5477 = add i32 %5471, 2, !dbg !299
  %5478 = icmp slt i32 %5476, %5477, !dbg !300
  br i1 %5478, label %5479, label %5481, !dbg !301

5479:                                             ; preds = %5466
  store i16 1, i16* %5438, align 2, !dbg !302
  %5480 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5371, i32 %5477, i32 0), !dbg !303
  br label %5484, !dbg !304

5481:                                             ; preds = %5466
  %5482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 6, !dbg !305
  %5483 = load i8*, i8** %5482, align 8, !dbg !306
  store i8* %5483, i8** %5474, align 8, !dbg !307
  br label %5484, !dbg !308

5484:                                             ; preds = %5481, %5479
  %5485 = zext i32 %5471 to i64, !dbg !309
  %5486 = load i8*, i8** %5474, align 8, !dbg !310
  %5487 = load i8*, i8** %5367, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5486, i8* %5487, i64 %5485, i1 false), !dbg !312
  %5488 = getelementptr i8, i8* %5486, i32 %5471, !dbg !313
  store i8 0, i8* %5488, align 1, !dbg !314
  %5489 = add i32 %5471, 1, !dbg !315
  %5490 = getelementptr i8, i8* %5486, i32 %5489, !dbg !316
  store i8 0, i8* %5490, align 1, !dbg !317
  %5491 = and i32 %5469, 1, !dbg !318
  %5492 = getelementptr i16, i16* %5467, i32 %5491, !dbg !319
  %5493 = load i16, i16* %5492, align 2, !dbg !320
  store i16 %5493, i16* %5438, align 2, !dbg !321
  br label %5615, !dbg !322

5494:                                             ; preds = %5446
  %5495 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 2, !dbg !323
  store i8 %5363, i8* %5495, align 1, !dbg !324
  %5496 = load i32, i32* %5368, align 4, !dbg !325
  %5497 = and i32 %5496, 1, !dbg !326
  %5498 = icmp eq i32 %5497, 0, !dbg !327
  %5499 = icmp sge i32 %5496, 12, !dbg !328
  %5500 = and i1 %5499, %5498, !dbg !329
  %5501 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5496), !dbg !330
  %5502 = icmp eq i32 %5501, 0, !dbg !331
  br i1 %5502, label %5514, label %5503, !dbg !332

5503:                                             ; preds = %5494
  %5504 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 12, i32 0, !dbg !333
  %5505 = load %struct.BtCursor*, %struct.BtCursor** %5504, align 8, !dbg !334
  %5506 = getelementptr i32, i32* %5375, i32 4, !dbg !335
  %5507 = load i32, i32* %5506, align 4, !dbg !336
  %5508 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5505, i32 %5507, i32 %5501, %struct.sqlite3_value* %5371), !dbg !337
  %5509 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 5, !dbg !338
  %5510 = load i8*, i8** %5509, align 8, !dbg !339
  %5511 = call i32 @sqlite3VdbeSerialGet(i8* %5510, i32 %5496, %struct.sqlite3_value* %5371), !dbg !340
  %5512 = load i16, i16* %5438, align 2, !dbg !341
  %5513 = and i16 %5512, -4097, !dbg !342
  store i16 %5513, i16* %5438, align 2, !dbg !343
  br label %5615, !dbg !344

5514:                                             ; preds = %5494
  %5515 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5496, %struct.sqlite3_value* %5371), !dbg !345
  br label %5615, !dbg !346

5516:                                             ; preds = %5434
  %5517 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 23, i32 4, !dbg !347
  %5518 = load i32, i32* %5517, align 4, !dbg !348
  store i32 %5518, i32* %5368, align 4, !dbg !349
  br label %5437, !dbg !350

5519:                                             ; preds = %5434
  %5520 = load i32, i32* %5382, align 4, !dbg !351
  %5521 = load i32, i32* %5375, align 4, !dbg !352
  %5522 = icmp ult i32 %5520, %5521, !dbg !353
  br i1 %5522, label %5523, label %5604, !dbg !354

5523:                                             ; preds = %5519
  %5524 = load i8*, i8** %5385, align 8, !dbg !355
  %5525 = icmp eq i8* %5524, null, !dbg !356
  br i1 %5525, label %5527, label %5526, !dbg !357

5526:                                             ; preds = %5523
  store i8* %5524, i8** %5367, align 8, !dbg !358
  br label %5527, !dbg !359

5527:                                             ; preds = %5526, %5523, %5407
  %5528 = alloca i32, align 4, !dbg !360
  %5529 = load i16, i16* %5386, align 2, !dbg !361
  %5530 = zext i16 %5529 to i32, !dbg !362
  store i32 %5530, i32* %5528, align 4, !dbg !363
  %5531 = alloca i64, align 8, !dbg !364
  %5532 = getelementptr i32, i32* %5375, i32 %5530, !dbg !365
  %5533 = load i32, i32* %5532, align 4, !dbg !366
  %5534 = zext i32 %5533 to i64, !dbg !367
  store i64 %5534, i64* %5531, align 4, !dbg !368
  %5535 = load i8*, i8** %5367, align 8, !dbg !369
  %5536 = load i32, i32* %5382, align 4, !dbg !370
  %5537 = alloca i8*, align 8, !dbg !371
  %5538 = getelementptr i8, i8* %5535, i32 %5536, !dbg !372
  store i8* %5538, i8** %5537, align 8, !dbg !373
  %5539 = load i32, i32* %5375, align 4, !dbg !374
  %5540 = getelementptr i8, i8* %5535, i32 %5539, !dbg !375
  br label %5541, !dbg !376

5541:                                             ; preds = %5548, %5527
  %5542 = load i32, i32* %5528, align 4, !dbg !377
  %5543 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5370, i32 0, i32 23, i32 %5542, !dbg !378
  %5544 = load i8*, i8** %5537, align 8, !dbg !379
  %5545 = load i8, i8* %5544, align 1, !dbg !380
  %5546 = zext i8 %5545 to i32, !dbg !381
  store i32 %5546, i32* %5368, align 4, !dbg !382
  store i32 %5546, i32* %5543, align 4, !dbg !383
  %5547 = icmp sgt i8 %5545, -1, !dbg !384
  br i1 %5547, label %5571, label %5562, !dbg !385

5548:                                             ; preds = %5562, %5571
  %5549 = load i32, i32* %5528, align 4, !dbg !386
  %5550 = add i32 %5549, 1, !dbg !387
  store i32 %5550, i32* %5528, align 4, !dbg !388
  %5551 = load i64, i64* %5531, align 4, !dbg !389
  %5552 = and i64 4294967295, %5551, !dbg !390
  %5553 = trunc i64 %5552 to i32, !dbg !391
  %5554 = getelementptr i32, i32* %5375, i32 %5550, !dbg !392
  store i32 %5553, i32* %5554, align 4, !dbg !393
  %5555 = load i32, i32* %5528, align 4, !dbg !394
  %5556 = icmp sle i32 %5555, 4, !dbg !395
  %5557 = load i8*, i8** %5537, align 8, !dbg !396
  %5558 = ptrtoint i8* %5557 to i64, !dbg !397
  %5559 = ptrtoint i8* %5540 to i64, !dbg !398
  %5560 = icmp ult i64 %5558, %5559, !dbg !399
  %5561 = and i1 %5556, %5560, !dbg !400
  br i1 %5561, label %5541, label %5580, !dbg !401

5562:                                             ; preds = %5541
  %5563 = load i8*, i8** %5537, align 8, !dbg !402
  %5564 = call i8 @sqlite3GetVarint32(i8* %5563, i32* %5368), !dbg !403
  %5565 = getelementptr i8, i8* %5563, i8 %5564, !dbg !404
  store i8* %5565, i8** %5537, align 8, !dbg !405
  %5566 = load i32, i32* %5368, align 4, !dbg !406
  store i32 %5566, i32* %5543, align 4, !dbg !407
  %5567 = load i64, i64* %5531, align 4, !dbg !408
  %5568 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5566), !dbg !409
  %5569 = zext i32 %5568 to i64, !dbg !410
  %5570 = add i64 %5567, %5569, !dbg !411
  store i64 %5570, i64* %5531, align 4, !dbg !412
  br label %5548, !dbg !413

5571:                                             ; preds = %5541
  %5572 = getelementptr i8, i8* %5544, i32 1, !dbg !414
  store i8* %5572, i8** %5537, align 8, !dbg !415
  %5573 = load i32, i32* %5368, align 4, !dbg !416
  %5574 = trunc i32 %5573 to i8, !dbg !417
  %5575 = getelementptr i8, i8* %4, i8 %5574, !dbg !418
  %5576 = load i8, i8* %5575, align 1, !dbg !419
  %5577 = zext i8 %5576 to i64, !dbg !420
  %5578 = load i64, i64* %5531, align 4, !dbg !421
  %5579 = add i64 %5578, %5577, !dbg !422
  store i64 %5579, i64* %5531, align 4, !dbg !423
  br label %5548, !dbg !424

5580:                                             ; preds = %5548
  %5581 = load i64, i64* %5531, align 4, !dbg !425
  %5582 = load i32, i32* %5383, align 4, !dbg !426
  %5583 = zext i32 %5582 to i64, !dbg !427
  %5584 = icmp uge i64 %5558, %5559, !dbg !428
  %5585 = icmp ugt i64 %5558, %5559, !dbg !429
  %5586 = icmp ne i64 %5581, %5583, !dbg !430
  %5587 = icmp ugt i64 %5581, %5583, !dbg !431
  %5588 = or i1 %5585, %5586, !dbg !432
  %5589 = and i1 %5584, %5588, !dbg !433
  %5590 = or i1 %5589, %5587, !dbg !434
  br i1 %5590, label %5591, label %5595, !dbg !435

5591:                                             ; preds = %5580
  %5592 = load i32, i32* %5375, align 4, !dbg !436
  %5593 = icmp eq i32 %5592, 0, !dbg !437
  br i1 %5593, label %5594, label %5595, !dbg !438

5594:                                             ; preds = %5591
  store i32 0, i32* %5528, align 4, !dbg !439
  store i8* %5540, i8** %5537, align 8, !dbg !440
  br label %5595, !dbg !441

5595:                                             ; preds = %5594, %5591, %5580
  %5596 = load i32, i32* %5528, align 4, !dbg !442
  %5597 = trunc i32 %5596 to i16, !dbg !443
  store i16 %5597, i16* %5386, align 2, !dbg !444
  %5598 = load i8*, i8** %5537, align 8, !dbg !445
  %5599 = ptrtoint i8* %5598 to i64, !dbg !446
  %5600 = load i8*, i8** %5367, align 8, !dbg !447
  %5601 = ptrtoint i8* %5600 to i64, !dbg !448
  %5602 = sub i64 %5599, %5601, !dbg !449
  %5603 = trunc i64 %5602 to i32, !dbg !450
  store i32 %5603, i32* %5382, align 4, !dbg !451
  br label %5605, !dbg !452

5604:                                             ; preds = %5519
  store i32 0, i32* %5368, align 4, !dbg !453
  br label %5605, !dbg !454

5605:                                             ; preds = %5595, %5604
  %5606 = load i16, i16* %5386, align 2, !dbg !455
  %5607 = icmp sle i16 %5606, 4, !dbg !456
  br i1 %5607, label %5608, label %5437, !dbg !457

5608:                                             ; preds = %5605
  %5609 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 1, !dbg !458
  %5610 = load i16, i16* %5609, align 2, !dbg !458
  %5611 = and i16 %5610, 9216, !dbg !458
  %5612 = icmp ne i16 %5611, 0, !dbg !458
  br i1 %5612, label %5613, label %5614, !dbg !458

5613:                                             ; preds = %5608
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5371), !dbg !458
  br label %5615, !dbg !458

5614:                                             ; preds = %5608
  store i16 1, i16* %5609, align 2, !dbg !458
  br label %5615, !dbg !458

5615:                                             ; preds = %5613, %5614, %5484, %5464, %5503, %5514, %5432, %5433
  call void @llvm.stackrestore(i8* %5361), !dbg !459
  br label %5616, !dbg !74

5616:                                             ; preds = %5615, %14
  %5617 = call i8* @llvm.stacksave(), !dbg !167
  %5618 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5619 = load i8, i8* %5618, align 1, !dbg !171
  %5620 = alloca i32, align 4, !dbg !172
  store i32 1, i32* %5620, align 4, !dbg !173
  %5621 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !174
  %5622 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5623 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5621, align 8, !dbg !176
  store %struct.VdbeCursor* %5623, %struct.VdbeCursor** %5622, align 8, !dbg !177
  %5624 = alloca i8*, align 8, !dbg !178
  %5625 = alloca i32, align 4, !dbg !179
  %5626 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5622, i32* %5620), !dbg !180
  %5627 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5622, align 8, !dbg !181
  %5628 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !182
  %5629 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 16, !dbg !183
  %5630 = load i16, i16* %5629, align 2, !dbg !184
  %5631 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 19, !dbg !185
  %5632 = load i32*, i32** %5631, align 8, !dbg !186
  %5633 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 0, !dbg !187
  %5634 = load i8, i8* %5633, align 1, !dbg !188
  %5635 = icmp ne i8 %5634, 3, !dbg !189
  %5636 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 2, !dbg !190
  %5637 = load i8, i8* %5636, align 1, !dbg !191
  %5638 = icmp ne i8 %5637, 0, !dbg !192
  %5639 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 14, !dbg !193
  %5640 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 21, !dbg !194
  %5641 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 22, !dbg !195
  %5642 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 20, !dbg !196
  %5643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 17, !dbg !197
  %5644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 9, !dbg !198
  %5645 = load i32, i32* %5644, align 4, !dbg !199
  %5646 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5647 = load i32, i32* %5646, align 4, !dbg !201
  %5648 = icmp ne i32 %5645, %5647, !dbg !202
  br i1 %5648, label %5649, label %5691, !dbg !203

5649:                                             ; preds = %5616
  br i1 %5638, label %5671, label %5666, !dbg !204

5650:                                             ; preds = %5666, %5673
  %5651 = load i32, i32* %5646, align 4, !dbg !205
  store i32 %5651, i32* %5644, align 4, !dbg !206
  %5652 = load i8*, i8** %5642, align 8, !dbg !207
  %5653 = load i8, i8* %5652, align 1, !dbg !208
  %5654 = icmp sgt i8 %5653, -1, !dbg !211
  br i1 %5654, label %5655, label %5657, !dbg !212

5655:                                             ; preds = %5650
  %5656 = zext i8 %5653 to i32, !dbg !213
  store i32 %5656, i32* %5632, align 4, !dbg !214
  store i32 1, i32* %5639, align 4, !dbg !215
  br label %5660, !dbg !216

5657:                                             ; preds = %5650
  %5658 = call i8 @sqlite3GetVarint32(i8* %5652, i32* %5632), !dbg !217
  %5659 = zext i8 %5658 to i32, !dbg !218
  store i32 %5659, i32* %5639, align 4, !dbg !219
  br label %5660, !dbg !220

5660:                                             ; preds = %5657, %5655
  store i16 0, i16* %5643, align 2, !dbg !221
  %5661 = load i32, i32* %5641, align 4, !dbg !222
  %5662 = load i32, i32* %5632, align 4, !dbg !223
  %5663 = icmp ult i32 %5661, %5662, !dbg !224
  br i1 %5663, label %5665, label %5664, !dbg !225

5664:                                             ; preds = %5660
  store i8* %5652, i8** %5624, align 8, !dbg !226
  br label %5784, !dbg !227

5665:                                             ; preds = %5660
  store i8* null, i8** %5642, align 8, !dbg !228
  store i32 0, i32* %5641, align 4, !dbg !229
  br label %5691, !dbg !230

5666:                                             ; preds = %5649
  %5667 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 12, i32 0, !dbg !231
  %5668 = load %struct.BtCursor*, %struct.BtCursor** %5667, align 8, !dbg !232
  %5669 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5668), !dbg !233
  store i32 %5669, i32* %5640, align 4, !dbg !234
  %5670 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5668, i32* %5641), !dbg !235
  store i8* %5670, i8** %5642, align 8, !dbg !236
  br label %5650, !dbg !237

5671:                                             ; preds = %5649
  %5672 = icmp eq i8 %5634, 3, !dbg !238
  br i1 %5672, label %5673, label %5684, !dbg !239

5673:                                             ; preds = %5671
  %5674 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 10, !dbg !240
  %5675 = load i32, i32* %5674, align 4, !dbg !241
  %5676 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5675, !dbg !242
  %5677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5676, i32 0, i32 1, !dbg !243
  %5678 = load i16, i16* %5677, align 2, !dbg !244
  %5679 = and i16 %5678, 16, !dbg !245
  %5680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5676, i32 0, i32 4, !dbg !246
  %5681 = load i32, i32* %5680, align 4, !dbg !247
  store i32 %5681, i32* %5640, align 4, !dbg !248
  store i32 %5681, i32* %5641, align 4, !dbg !249
  %5682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5676, i32 0, i32 5, !dbg !250
  %5683 = load i8*, i8** %5682, align 8, !dbg !251
  store i8* %5683, i8** %5642, align 8, !dbg !252
  br label %5650, !dbg !253

5684:                                             ; preds = %5671
  %5685 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 1, !dbg !254
  %5686 = load i16, i16* %5685, align 2, !dbg !254
  %5687 = and i16 %5686, 9216, !dbg !254
  %5688 = icmp ne i16 %5687, 0, !dbg !254
  br i1 %5688, label %5689, label %5690, !dbg !254

5689:                                             ; preds = %5684
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5628), !dbg !254
  br label %5872, !dbg !254

5690:                                             ; preds = %5684
  store i16 1, i16* %5685, align 2, !dbg !254
  br label %5872, !dbg !254

5691:                                             ; preds = %5665, %5616
  %5692 = load i16, i16* %5643, align 2, !dbg !255
  %5693 = icmp ule i16 %5692, 4, !dbg !256
  br i1 %5693, label %5776, label %5773, !dbg !257

5694:                                             ; preds = %5773, %5862
  %5695 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 1, !dbg !258
  %5696 = load i16, i16* %5695, align 2, !dbg !259
  %5697 = and i16 9216, %5696, !dbg !260
  %5698 = icmp eq i16 0, %5697, !dbg !261
  br i1 %5698, label %5699, label %5703, !dbg !262

5699:                                             ; preds = %5694
  %5700 = icmp ne i16 %5697, 0, !dbg !263
  br i1 %5700, label %5701, label %5702, !dbg !263

5701:                                             ; preds = %5699
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5628), !dbg !263
  br label %5703, !dbg !263

5702:                                             ; preds = %5699
  store i16 1, i16* %5695, align 2, !dbg !263
  br label %5703, !dbg !263

5703:                                             ; preds = %5701, %5702, %5694
  %5704 = load i32, i32* %5625, align 4, !dbg !264
  %5705 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 23, i32 4, !dbg !265
  %5706 = load i32, i32* %5705, align 4, !dbg !266
  %5707 = load i32, i32* %5641, align 4, !dbg !267
  %5708 = getelementptr i32, i32* %5632, i32 5, !dbg !268
  %5709 = load i32, i32* %5708, align 4, !dbg !269
  %5710 = icmp sge i32 %5707, %5709, !dbg !270
  br i1 %5710, label %5711, label %5751, !dbg !271

5711:                                             ; preds = %5703
  %5712 = load i8*, i8** %5642, align 8, !dbg !272
  %5713 = ptrtoint i8* %5712 to i64, !dbg !273
  %5714 = getelementptr i32, i32* %5632, i32 4, !dbg !274
  %5715 = load i32, i32* %5714, align 4, !dbg !275
  %5716 = zext i32 %5715 to i64, !dbg !276
  %5717 = add i64 %5713, %5716, !dbg !277
  %5718 = inttoptr i64 %5717 to i8*, !dbg !278
  store i8* %5718, i8** %5624, align 8, !dbg !279
  %5719 = load i32, i32* %5625, align 4, !dbg !280
  %5720 = icmp ult i32 %5719, 12, !dbg !281
  br i1 %5720, label %5721, label %5723, !dbg !282

5721:                                             ; preds = %5711
  %5722 = call i32 @sqlite3VdbeSerialGet(i8* %5718, i32 %5719, %struct.sqlite3_value* %5628), !dbg !283
  br label %5872, !dbg !284

5723:                                             ; preds = %5711
  %5724 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5724, align 2, !dbg !286
  %5725 = getelementptr i16, i16* %5724, i32 1, !dbg !287
  store i16 514, i16* %5725, align 2, !dbg !288
  %5726 = load i32, i32* %5625, align 4, !dbg !289
  %5727 = sub i32 %5726, 12, !dbg !290
  %5728 = lshr i32 %5727, 1, !dbg !291
  %5729 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 4, !dbg !292
  store i32 %5728, i32* %5729, align 4, !dbg !293
  %5730 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 2, !dbg !294
  store i8 %5619, i8* %5730, align 1, !dbg !295
  %5731 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 5, !dbg !296
  %5732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 7, !dbg !297
  %5733 = load i32, i32* %5732, align 4, !dbg !298
  %5734 = add i32 %5728, 2, !dbg !299
  %5735 = icmp slt i32 %5733, %5734, !dbg !300
  br i1 %5735, label %5736, label %5738, !dbg !301

5736:                                             ; preds = %5723
  store i16 1, i16* %5695, align 2, !dbg !302
  %5737 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5628, i32 %5734, i32 0), !dbg !303
  br label %5741, !dbg !304

5738:                                             ; preds = %5723
  %5739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 6, !dbg !305
  %5740 = load i8*, i8** %5739, align 8, !dbg !306
  store i8* %5740, i8** %5731, align 8, !dbg !307
  br label %5741, !dbg !308

5741:                                             ; preds = %5738, %5736
  %5742 = zext i32 %5728 to i64, !dbg !309
  %5743 = load i8*, i8** %5731, align 8, !dbg !310
  %5744 = load i8*, i8** %5624, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5743, i8* %5744, i64 %5742, i1 false), !dbg !312
  %5745 = getelementptr i8, i8* %5743, i32 %5728, !dbg !313
  store i8 0, i8* %5745, align 1, !dbg !314
  %5746 = add i32 %5728, 1, !dbg !315
  %5747 = getelementptr i8, i8* %5743, i32 %5746, !dbg !316
  store i8 0, i8* %5747, align 1, !dbg !317
  %5748 = and i32 %5726, 1, !dbg !318
  %5749 = getelementptr i16, i16* %5724, i32 %5748, !dbg !319
  %5750 = load i16, i16* %5749, align 2, !dbg !320
  store i16 %5750, i16* %5695, align 2, !dbg !321
  br label %5872, !dbg !322

5751:                                             ; preds = %5703
  %5752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 2, !dbg !323
  store i8 %5619, i8* %5752, align 1, !dbg !324
  %5753 = load i32, i32* %5625, align 4, !dbg !325
  %5754 = and i32 %5753, 1, !dbg !326
  %5755 = icmp eq i32 %5754, 0, !dbg !327
  %5756 = icmp sge i32 %5753, 12, !dbg !328
  %5757 = and i1 %5756, %5755, !dbg !329
  %5758 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5753), !dbg !330
  %5759 = icmp eq i32 %5758, 0, !dbg !331
  br i1 %5759, label %5771, label %5760, !dbg !332

5760:                                             ; preds = %5751
  %5761 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 12, i32 0, !dbg !333
  %5762 = load %struct.BtCursor*, %struct.BtCursor** %5761, align 8, !dbg !334
  %5763 = getelementptr i32, i32* %5632, i32 4, !dbg !335
  %5764 = load i32, i32* %5763, align 4, !dbg !336
  %5765 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5762, i32 %5764, i32 %5758, %struct.sqlite3_value* %5628), !dbg !337
  %5766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 5, !dbg !338
  %5767 = load i8*, i8** %5766, align 8, !dbg !339
  %5768 = call i32 @sqlite3VdbeSerialGet(i8* %5767, i32 %5753, %struct.sqlite3_value* %5628), !dbg !340
  %5769 = load i16, i16* %5695, align 2, !dbg !341
  %5770 = and i16 %5769, -4097, !dbg !342
  store i16 %5770, i16* %5695, align 2, !dbg !343
  br label %5872, !dbg !344

5771:                                             ; preds = %5751
  %5772 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5753, %struct.sqlite3_value* %5628), !dbg !345
  br label %5872, !dbg !346

5773:                                             ; preds = %5691
  %5774 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 23, i32 4, !dbg !347
  %5775 = load i32, i32* %5774, align 4, !dbg !348
  store i32 %5775, i32* %5625, align 4, !dbg !349
  br label %5694, !dbg !350

5776:                                             ; preds = %5691
  %5777 = load i32, i32* %5639, align 4, !dbg !351
  %5778 = load i32, i32* %5632, align 4, !dbg !352
  %5779 = icmp ult i32 %5777, %5778, !dbg !353
  br i1 %5779, label %5780, label %5861, !dbg !354

5780:                                             ; preds = %5776
  %5781 = load i8*, i8** %5642, align 8, !dbg !355
  %5782 = icmp eq i8* %5781, null, !dbg !356
  br i1 %5782, label %5784, label %5783, !dbg !357

5783:                                             ; preds = %5780
  store i8* %5781, i8** %5624, align 8, !dbg !358
  br label %5784, !dbg !359

5784:                                             ; preds = %5783, %5780, %5664
  %5785 = alloca i32, align 4, !dbg !360
  %5786 = load i16, i16* %5643, align 2, !dbg !361
  %5787 = zext i16 %5786 to i32, !dbg !362
  store i32 %5787, i32* %5785, align 4, !dbg !363
  %5788 = alloca i64, align 8, !dbg !364
  %5789 = getelementptr i32, i32* %5632, i32 %5787, !dbg !365
  %5790 = load i32, i32* %5789, align 4, !dbg !366
  %5791 = zext i32 %5790 to i64, !dbg !367
  store i64 %5791, i64* %5788, align 4, !dbg !368
  %5792 = load i8*, i8** %5624, align 8, !dbg !369
  %5793 = load i32, i32* %5639, align 4, !dbg !370
  %5794 = alloca i8*, align 8, !dbg !371
  %5795 = getelementptr i8, i8* %5792, i32 %5793, !dbg !372
  store i8* %5795, i8** %5794, align 8, !dbg !373
  %5796 = load i32, i32* %5632, align 4, !dbg !374
  %5797 = getelementptr i8, i8* %5792, i32 %5796, !dbg !375
  br label %5798, !dbg !376

5798:                                             ; preds = %5805, %5784
  %5799 = load i32, i32* %5785, align 4, !dbg !377
  %5800 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5627, i32 0, i32 23, i32 %5799, !dbg !378
  %5801 = load i8*, i8** %5794, align 8, !dbg !379
  %5802 = load i8, i8* %5801, align 1, !dbg !380
  %5803 = zext i8 %5802 to i32, !dbg !381
  store i32 %5803, i32* %5625, align 4, !dbg !382
  store i32 %5803, i32* %5800, align 4, !dbg !383
  %5804 = icmp sgt i8 %5802, -1, !dbg !384
  br i1 %5804, label %5828, label %5819, !dbg !385

5805:                                             ; preds = %5819, %5828
  %5806 = load i32, i32* %5785, align 4, !dbg !386
  %5807 = add i32 %5806, 1, !dbg !387
  store i32 %5807, i32* %5785, align 4, !dbg !388
  %5808 = load i64, i64* %5788, align 4, !dbg !389
  %5809 = and i64 4294967295, %5808, !dbg !390
  %5810 = trunc i64 %5809 to i32, !dbg !391
  %5811 = getelementptr i32, i32* %5632, i32 %5807, !dbg !392
  store i32 %5810, i32* %5811, align 4, !dbg !393
  %5812 = load i32, i32* %5785, align 4, !dbg !394
  %5813 = icmp sle i32 %5812, 4, !dbg !395
  %5814 = load i8*, i8** %5794, align 8, !dbg !396
  %5815 = ptrtoint i8* %5814 to i64, !dbg !397
  %5816 = ptrtoint i8* %5797 to i64, !dbg !398
  %5817 = icmp ult i64 %5815, %5816, !dbg !399
  %5818 = and i1 %5813, %5817, !dbg !400
  br i1 %5818, label %5798, label %5837, !dbg !401

5819:                                             ; preds = %5798
  %5820 = load i8*, i8** %5794, align 8, !dbg !402
  %5821 = call i8 @sqlite3GetVarint32(i8* %5820, i32* %5625), !dbg !403
  %5822 = getelementptr i8, i8* %5820, i8 %5821, !dbg !404
  store i8* %5822, i8** %5794, align 8, !dbg !405
  %5823 = load i32, i32* %5625, align 4, !dbg !406
  store i32 %5823, i32* %5800, align 4, !dbg !407
  %5824 = load i64, i64* %5788, align 4, !dbg !408
  %5825 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5823), !dbg !409
  %5826 = zext i32 %5825 to i64, !dbg !410
  %5827 = add i64 %5824, %5826, !dbg !411
  store i64 %5827, i64* %5788, align 4, !dbg !412
  br label %5805, !dbg !413

5828:                                             ; preds = %5798
  %5829 = getelementptr i8, i8* %5801, i32 1, !dbg !414
  store i8* %5829, i8** %5794, align 8, !dbg !415
  %5830 = load i32, i32* %5625, align 4, !dbg !416
  %5831 = trunc i32 %5830 to i8, !dbg !417
  %5832 = getelementptr i8, i8* %4, i8 %5831, !dbg !418
  %5833 = load i8, i8* %5832, align 1, !dbg !419
  %5834 = zext i8 %5833 to i64, !dbg !420
  %5835 = load i64, i64* %5788, align 4, !dbg !421
  %5836 = add i64 %5835, %5834, !dbg !422
  store i64 %5836, i64* %5788, align 4, !dbg !423
  br label %5805, !dbg !424

5837:                                             ; preds = %5805
  %5838 = load i64, i64* %5788, align 4, !dbg !425
  %5839 = load i32, i32* %5640, align 4, !dbg !426
  %5840 = zext i32 %5839 to i64, !dbg !427
  %5841 = icmp uge i64 %5815, %5816, !dbg !428
  %5842 = icmp ugt i64 %5815, %5816, !dbg !429
  %5843 = icmp ne i64 %5838, %5840, !dbg !430
  %5844 = icmp ugt i64 %5838, %5840, !dbg !431
  %5845 = or i1 %5842, %5843, !dbg !432
  %5846 = and i1 %5841, %5845, !dbg !433
  %5847 = or i1 %5846, %5844, !dbg !434
  br i1 %5847, label %5848, label %5852, !dbg !435

5848:                                             ; preds = %5837
  %5849 = load i32, i32* %5632, align 4, !dbg !436
  %5850 = icmp eq i32 %5849, 0, !dbg !437
  br i1 %5850, label %5851, label %5852, !dbg !438

5851:                                             ; preds = %5848
  store i32 0, i32* %5785, align 4, !dbg !439
  store i8* %5797, i8** %5794, align 8, !dbg !440
  br label %5852, !dbg !441

5852:                                             ; preds = %5851, %5848, %5837
  %5853 = load i32, i32* %5785, align 4, !dbg !442
  %5854 = trunc i32 %5853 to i16, !dbg !443
  store i16 %5854, i16* %5643, align 2, !dbg !444
  %5855 = load i8*, i8** %5794, align 8, !dbg !445
  %5856 = ptrtoint i8* %5855 to i64, !dbg !446
  %5857 = load i8*, i8** %5624, align 8, !dbg !447
  %5858 = ptrtoint i8* %5857 to i64, !dbg !448
  %5859 = sub i64 %5856, %5858, !dbg !449
  %5860 = trunc i64 %5859 to i32, !dbg !450
  store i32 %5860, i32* %5639, align 4, !dbg !451
  br label %5862, !dbg !452

5861:                                             ; preds = %5776
  store i32 0, i32* %5625, align 4, !dbg !453
  br label %5862, !dbg !454

5862:                                             ; preds = %5852, %5861
  %5863 = load i16, i16* %5643, align 2, !dbg !455
  %5864 = icmp sle i16 %5863, 4, !dbg !456
  br i1 %5864, label %5865, label %5694, !dbg !457

5865:                                             ; preds = %5862
  %5866 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5628, i32 0, i32 1, !dbg !458
  %5867 = load i16, i16* %5866, align 2, !dbg !458
  %5868 = and i16 %5867, 9216, !dbg !458
  %5869 = icmp ne i16 %5868, 0, !dbg !458
  br i1 %5869, label %5870, label %5871, !dbg !458

5870:                                             ; preds = %5865
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5628), !dbg !458
  br label %5872, !dbg !458

5871:                                             ; preds = %5865
  store i16 1, i16* %5866, align 2, !dbg !458
  br label %5872, !dbg !458

5872:                                             ; preds = %5870, %5871, %5741, %5721, %5760, %5771, %5689, %5690
  call void @llvm.stackrestore(i8* %5617), !dbg !459
  br label %5873, !dbg !74

5873:                                             ; preds = %5872, %14
  %5874 = call i8* @llvm.stacksave(), !dbg !167
  %5875 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %5876 = load i8, i8* %5875, align 1, !dbg !171
  %5877 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %5877, align 4, !dbg !173
  %5878 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %5879 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %5880 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5878, align 8, !dbg !176
  store %struct.VdbeCursor* %5880, %struct.VdbeCursor** %5879, align 8, !dbg !177
  %5881 = alloca i8*, align 8, !dbg !178
  %5882 = alloca i32, align 4, !dbg !179
  %5883 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5879, i32* %5877), !dbg !180
  %5884 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5879, align 8, !dbg !181
  %5885 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !182
  %5886 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 16, !dbg !183
  %5887 = load i16, i16* %5886, align 2, !dbg !184
  %5888 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 19, !dbg !185
  %5889 = load i32*, i32** %5888, align 8, !dbg !186
  %5890 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 0, !dbg !187
  %5891 = load i8, i8* %5890, align 1, !dbg !188
  %5892 = icmp ne i8 %5891, 3, !dbg !189
  %5893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 2, !dbg !190
  %5894 = load i8, i8* %5893, align 1, !dbg !191
  %5895 = icmp ne i8 %5894, 0, !dbg !192
  %5896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 14, !dbg !193
  %5897 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 21, !dbg !194
  %5898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 22, !dbg !195
  %5899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 20, !dbg !196
  %5900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 17, !dbg !197
  %5901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 9, !dbg !198
  %5902 = load i32, i32* %5901, align 4, !dbg !199
  %5903 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %5904 = load i32, i32* %5903, align 4, !dbg !201
  %5905 = icmp ne i32 %5902, %5904, !dbg !202
  br i1 %5905, label %5906, label %5948, !dbg !203

5906:                                             ; preds = %5873
  br i1 %5895, label %5928, label %5923, !dbg !204

5907:                                             ; preds = %5923, %5930
  %5908 = load i32, i32* %5903, align 4, !dbg !205
  store i32 %5908, i32* %5901, align 4, !dbg !206
  %5909 = load i8*, i8** %5899, align 8, !dbg !207
  %5910 = load i8, i8* %5909, align 1, !dbg !208
  %5911 = icmp sgt i8 %5910, -1, !dbg !211
  br i1 %5911, label %5912, label %5914, !dbg !212

5912:                                             ; preds = %5907
  %5913 = zext i8 %5910 to i32, !dbg !213
  store i32 %5913, i32* %5889, align 4, !dbg !214
  store i32 1, i32* %5896, align 4, !dbg !215
  br label %5917, !dbg !216

5914:                                             ; preds = %5907
  %5915 = call i8 @sqlite3GetVarint32(i8* %5909, i32* %5889), !dbg !217
  %5916 = zext i8 %5915 to i32, !dbg !218
  store i32 %5916, i32* %5896, align 4, !dbg !219
  br label %5917, !dbg !220

5917:                                             ; preds = %5914, %5912
  store i16 0, i16* %5900, align 2, !dbg !221
  %5918 = load i32, i32* %5898, align 4, !dbg !222
  %5919 = load i32, i32* %5889, align 4, !dbg !223
  %5920 = icmp ult i32 %5918, %5919, !dbg !224
  br i1 %5920, label %5922, label %5921, !dbg !225

5921:                                             ; preds = %5917
  store i8* %5909, i8** %5881, align 8, !dbg !226
  br label %6041, !dbg !227

5922:                                             ; preds = %5917
  store i8* null, i8** %5899, align 8, !dbg !228
  store i32 0, i32* %5898, align 4, !dbg !229
  br label %5948, !dbg !230

5923:                                             ; preds = %5906
  %5924 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 12, i32 0, !dbg !231
  %5925 = load %struct.BtCursor*, %struct.BtCursor** %5924, align 8, !dbg !232
  %5926 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5925), !dbg !233
  store i32 %5926, i32* %5897, align 4, !dbg !234
  %5927 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5925, i32* %5898), !dbg !235
  store i8* %5927, i8** %5899, align 8, !dbg !236
  br label %5907, !dbg !237

5928:                                             ; preds = %5906
  %5929 = icmp eq i8 %5891, 3, !dbg !238
  br i1 %5929, label %5930, label %5941, !dbg !239

5930:                                             ; preds = %5928
  %5931 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 10, !dbg !240
  %5932 = load i32, i32* %5931, align 4, !dbg !241
  %5933 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5932, !dbg !242
  %5934 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5933, i32 0, i32 1, !dbg !243
  %5935 = load i16, i16* %5934, align 2, !dbg !244
  %5936 = and i16 %5935, 16, !dbg !245
  %5937 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5933, i32 0, i32 4, !dbg !246
  %5938 = load i32, i32* %5937, align 4, !dbg !247
  store i32 %5938, i32* %5897, align 4, !dbg !248
  store i32 %5938, i32* %5898, align 4, !dbg !249
  %5939 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5933, i32 0, i32 5, !dbg !250
  %5940 = load i8*, i8** %5939, align 8, !dbg !251
  store i8* %5940, i8** %5899, align 8, !dbg !252
  br label %5907, !dbg !253

5941:                                             ; preds = %5928
  %5942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 1, !dbg !254
  %5943 = load i16, i16* %5942, align 2, !dbg !254
  %5944 = and i16 %5943, 9216, !dbg !254
  %5945 = icmp ne i16 %5944, 0, !dbg !254
  br i1 %5945, label %5946, label %5947, !dbg !254

5946:                                             ; preds = %5941
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5885), !dbg !254
  br label %6129, !dbg !254

5947:                                             ; preds = %5941
  store i16 1, i16* %5942, align 2, !dbg !254
  br label %6129, !dbg !254

5948:                                             ; preds = %5922, %5873
  %5949 = load i16, i16* %5900, align 2, !dbg !255
  %5950 = icmp ule i16 %5949, 4, !dbg !256
  br i1 %5950, label %6033, label %6030, !dbg !257

5951:                                             ; preds = %6030, %6119
  %5952 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 1, !dbg !258
  %5953 = load i16, i16* %5952, align 2, !dbg !259
  %5954 = and i16 9216, %5953, !dbg !260
  %5955 = icmp eq i16 0, %5954, !dbg !261
  br i1 %5955, label %5956, label %5960, !dbg !262

5956:                                             ; preds = %5951
  %5957 = icmp ne i16 %5954, 0, !dbg !263
  br i1 %5957, label %5958, label %5959, !dbg !263

5958:                                             ; preds = %5956
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5885), !dbg !263
  br label %5960, !dbg !263

5959:                                             ; preds = %5956
  store i16 1, i16* %5952, align 2, !dbg !263
  br label %5960, !dbg !263

5960:                                             ; preds = %5958, %5959, %5951
  %5961 = load i32, i32* %5882, align 4, !dbg !264
  %5962 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 23, i32 4, !dbg !265
  %5963 = load i32, i32* %5962, align 4, !dbg !266
  %5964 = load i32, i32* %5898, align 4, !dbg !267
  %5965 = getelementptr i32, i32* %5889, i32 5, !dbg !268
  %5966 = load i32, i32* %5965, align 4, !dbg !269
  %5967 = icmp sge i32 %5964, %5966, !dbg !270
  br i1 %5967, label %5968, label %6008, !dbg !271

5968:                                             ; preds = %5960
  %5969 = load i8*, i8** %5899, align 8, !dbg !272
  %5970 = ptrtoint i8* %5969 to i64, !dbg !273
  %5971 = getelementptr i32, i32* %5889, i32 4, !dbg !274
  %5972 = load i32, i32* %5971, align 4, !dbg !275
  %5973 = zext i32 %5972 to i64, !dbg !276
  %5974 = add i64 %5970, %5973, !dbg !277
  %5975 = inttoptr i64 %5974 to i8*, !dbg !278
  store i8* %5975, i8** %5881, align 8, !dbg !279
  %5976 = load i32, i32* %5882, align 4, !dbg !280
  %5977 = icmp ult i32 %5976, 12, !dbg !281
  br i1 %5977, label %5978, label %5980, !dbg !282

5978:                                             ; preds = %5968
  %5979 = call i32 @sqlite3VdbeSerialGet(i8* %5975, i32 %5976, %struct.sqlite3_value* %5885), !dbg !283
  br label %6129, !dbg !284

5980:                                             ; preds = %5968
  %5981 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %5981, align 2, !dbg !286
  %5982 = getelementptr i16, i16* %5981, i32 1, !dbg !287
  store i16 514, i16* %5982, align 2, !dbg !288
  %5983 = load i32, i32* %5882, align 4, !dbg !289
  %5984 = sub i32 %5983, 12, !dbg !290
  %5985 = lshr i32 %5984, 1, !dbg !291
  %5986 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 4, !dbg !292
  store i32 %5985, i32* %5986, align 4, !dbg !293
  %5987 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 2, !dbg !294
  store i8 %5876, i8* %5987, align 1, !dbg !295
  %5988 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 5, !dbg !296
  %5989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 7, !dbg !297
  %5990 = load i32, i32* %5989, align 4, !dbg !298
  %5991 = add i32 %5985, 2, !dbg !299
  %5992 = icmp slt i32 %5990, %5991, !dbg !300
  br i1 %5992, label %5993, label %5995, !dbg !301

5993:                                             ; preds = %5980
  store i16 1, i16* %5952, align 2, !dbg !302
  %5994 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5885, i32 %5991, i32 0), !dbg !303
  br label %5998, !dbg !304

5995:                                             ; preds = %5980
  %5996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 6, !dbg !305
  %5997 = load i8*, i8** %5996, align 8, !dbg !306
  store i8* %5997, i8** %5988, align 8, !dbg !307
  br label %5998, !dbg !308

5998:                                             ; preds = %5995, %5993
  %5999 = zext i32 %5985 to i64, !dbg !309
  %6000 = load i8*, i8** %5988, align 8, !dbg !310
  %6001 = load i8*, i8** %5881, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6000, i8* %6001, i64 %5999, i1 false), !dbg !312
  %6002 = getelementptr i8, i8* %6000, i32 %5985, !dbg !313
  store i8 0, i8* %6002, align 1, !dbg !314
  %6003 = add i32 %5985, 1, !dbg !315
  %6004 = getelementptr i8, i8* %6000, i32 %6003, !dbg !316
  store i8 0, i8* %6004, align 1, !dbg !317
  %6005 = and i32 %5983, 1, !dbg !318
  %6006 = getelementptr i16, i16* %5981, i32 %6005, !dbg !319
  %6007 = load i16, i16* %6006, align 2, !dbg !320
  store i16 %6007, i16* %5952, align 2, !dbg !321
  br label %6129, !dbg !322

6008:                                             ; preds = %5960
  %6009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 2, !dbg !323
  store i8 %5876, i8* %6009, align 1, !dbg !324
  %6010 = load i32, i32* %5882, align 4, !dbg !325
  %6011 = and i32 %6010, 1, !dbg !326
  %6012 = icmp eq i32 %6011, 0, !dbg !327
  %6013 = icmp sge i32 %6010, 12, !dbg !328
  %6014 = and i1 %6013, %6012, !dbg !329
  %6015 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6010), !dbg !330
  %6016 = icmp eq i32 %6015, 0, !dbg !331
  br i1 %6016, label %6028, label %6017, !dbg !332

6017:                                             ; preds = %6008
  %6018 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 12, i32 0, !dbg !333
  %6019 = load %struct.BtCursor*, %struct.BtCursor** %6018, align 8, !dbg !334
  %6020 = getelementptr i32, i32* %5889, i32 4, !dbg !335
  %6021 = load i32, i32* %6020, align 4, !dbg !336
  %6022 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6019, i32 %6021, i32 %6015, %struct.sqlite3_value* %5885), !dbg !337
  %6023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 5, !dbg !338
  %6024 = load i8*, i8** %6023, align 8, !dbg !339
  %6025 = call i32 @sqlite3VdbeSerialGet(i8* %6024, i32 %6010, %struct.sqlite3_value* %5885), !dbg !340
  %6026 = load i16, i16* %5952, align 2, !dbg !341
  %6027 = and i16 %6026, -4097, !dbg !342
  store i16 %6027, i16* %5952, align 2, !dbg !343
  br label %6129, !dbg !344

6028:                                             ; preds = %6008
  %6029 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6010, %struct.sqlite3_value* %5885), !dbg !345
  br label %6129, !dbg !346

6030:                                             ; preds = %5948
  %6031 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 23, i32 4, !dbg !347
  %6032 = load i32, i32* %6031, align 4, !dbg !348
  store i32 %6032, i32* %5882, align 4, !dbg !349
  br label %5951, !dbg !350

6033:                                             ; preds = %5948
  %6034 = load i32, i32* %5896, align 4, !dbg !351
  %6035 = load i32, i32* %5889, align 4, !dbg !352
  %6036 = icmp ult i32 %6034, %6035, !dbg !353
  br i1 %6036, label %6037, label %6118, !dbg !354

6037:                                             ; preds = %6033
  %6038 = load i8*, i8** %5899, align 8, !dbg !355
  %6039 = icmp eq i8* %6038, null, !dbg !356
  br i1 %6039, label %6041, label %6040, !dbg !357

6040:                                             ; preds = %6037
  store i8* %6038, i8** %5881, align 8, !dbg !358
  br label %6041, !dbg !359

6041:                                             ; preds = %6040, %6037, %5921
  %6042 = alloca i32, align 4, !dbg !360
  %6043 = load i16, i16* %5900, align 2, !dbg !361
  %6044 = zext i16 %6043 to i32, !dbg !362
  store i32 %6044, i32* %6042, align 4, !dbg !363
  %6045 = alloca i64, align 8, !dbg !364
  %6046 = getelementptr i32, i32* %5889, i32 %6044, !dbg !365
  %6047 = load i32, i32* %6046, align 4, !dbg !366
  %6048 = zext i32 %6047 to i64, !dbg !367
  store i64 %6048, i64* %6045, align 4, !dbg !368
  %6049 = load i8*, i8** %5881, align 8, !dbg !369
  %6050 = load i32, i32* %5896, align 4, !dbg !370
  %6051 = alloca i8*, align 8, !dbg !371
  %6052 = getelementptr i8, i8* %6049, i32 %6050, !dbg !372
  store i8* %6052, i8** %6051, align 8, !dbg !373
  %6053 = load i32, i32* %5889, align 4, !dbg !374
  %6054 = getelementptr i8, i8* %6049, i32 %6053, !dbg !375
  br label %6055, !dbg !376

6055:                                             ; preds = %6062, %6041
  %6056 = load i32, i32* %6042, align 4, !dbg !377
  %6057 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5884, i32 0, i32 23, i32 %6056, !dbg !378
  %6058 = load i8*, i8** %6051, align 8, !dbg !379
  %6059 = load i8, i8* %6058, align 1, !dbg !380
  %6060 = zext i8 %6059 to i32, !dbg !381
  store i32 %6060, i32* %5882, align 4, !dbg !382
  store i32 %6060, i32* %6057, align 4, !dbg !383
  %6061 = icmp sgt i8 %6059, -1, !dbg !384
  br i1 %6061, label %6085, label %6076, !dbg !385

6062:                                             ; preds = %6076, %6085
  %6063 = load i32, i32* %6042, align 4, !dbg !386
  %6064 = add i32 %6063, 1, !dbg !387
  store i32 %6064, i32* %6042, align 4, !dbg !388
  %6065 = load i64, i64* %6045, align 4, !dbg !389
  %6066 = and i64 4294967295, %6065, !dbg !390
  %6067 = trunc i64 %6066 to i32, !dbg !391
  %6068 = getelementptr i32, i32* %5889, i32 %6064, !dbg !392
  store i32 %6067, i32* %6068, align 4, !dbg !393
  %6069 = load i32, i32* %6042, align 4, !dbg !394
  %6070 = icmp sle i32 %6069, 4, !dbg !395
  %6071 = load i8*, i8** %6051, align 8, !dbg !396
  %6072 = ptrtoint i8* %6071 to i64, !dbg !397
  %6073 = ptrtoint i8* %6054 to i64, !dbg !398
  %6074 = icmp ult i64 %6072, %6073, !dbg !399
  %6075 = and i1 %6070, %6074, !dbg !400
  br i1 %6075, label %6055, label %6094, !dbg !401

6076:                                             ; preds = %6055
  %6077 = load i8*, i8** %6051, align 8, !dbg !402
  %6078 = call i8 @sqlite3GetVarint32(i8* %6077, i32* %5882), !dbg !403
  %6079 = getelementptr i8, i8* %6077, i8 %6078, !dbg !404
  store i8* %6079, i8** %6051, align 8, !dbg !405
  %6080 = load i32, i32* %5882, align 4, !dbg !406
  store i32 %6080, i32* %6057, align 4, !dbg !407
  %6081 = load i64, i64* %6045, align 4, !dbg !408
  %6082 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6080), !dbg !409
  %6083 = zext i32 %6082 to i64, !dbg !410
  %6084 = add i64 %6081, %6083, !dbg !411
  store i64 %6084, i64* %6045, align 4, !dbg !412
  br label %6062, !dbg !413

6085:                                             ; preds = %6055
  %6086 = getelementptr i8, i8* %6058, i32 1, !dbg !414
  store i8* %6086, i8** %6051, align 8, !dbg !415
  %6087 = load i32, i32* %5882, align 4, !dbg !416
  %6088 = trunc i32 %6087 to i8, !dbg !417
  %6089 = getelementptr i8, i8* %4, i8 %6088, !dbg !418
  %6090 = load i8, i8* %6089, align 1, !dbg !419
  %6091 = zext i8 %6090 to i64, !dbg !420
  %6092 = load i64, i64* %6045, align 4, !dbg !421
  %6093 = add i64 %6092, %6091, !dbg !422
  store i64 %6093, i64* %6045, align 4, !dbg !423
  br label %6062, !dbg !424

6094:                                             ; preds = %6062
  %6095 = load i64, i64* %6045, align 4, !dbg !425
  %6096 = load i32, i32* %5897, align 4, !dbg !426
  %6097 = zext i32 %6096 to i64, !dbg !427
  %6098 = icmp uge i64 %6072, %6073, !dbg !428
  %6099 = icmp ugt i64 %6072, %6073, !dbg !429
  %6100 = icmp ne i64 %6095, %6097, !dbg !430
  %6101 = icmp ugt i64 %6095, %6097, !dbg !431
  %6102 = or i1 %6099, %6100, !dbg !432
  %6103 = and i1 %6098, %6102, !dbg !433
  %6104 = or i1 %6103, %6101, !dbg !434
  br i1 %6104, label %6105, label %6109, !dbg !435

6105:                                             ; preds = %6094
  %6106 = load i32, i32* %5889, align 4, !dbg !436
  %6107 = icmp eq i32 %6106, 0, !dbg !437
  br i1 %6107, label %6108, label %6109, !dbg !438

6108:                                             ; preds = %6105
  store i32 0, i32* %6042, align 4, !dbg !439
  store i8* %6054, i8** %6051, align 8, !dbg !440
  br label %6109, !dbg !441

6109:                                             ; preds = %6108, %6105, %6094
  %6110 = load i32, i32* %6042, align 4, !dbg !442
  %6111 = trunc i32 %6110 to i16, !dbg !443
  store i16 %6111, i16* %5900, align 2, !dbg !444
  %6112 = load i8*, i8** %6051, align 8, !dbg !445
  %6113 = ptrtoint i8* %6112 to i64, !dbg !446
  %6114 = load i8*, i8** %5881, align 8, !dbg !447
  %6115 = ptrtoint i8* %6114 to i64, !dbg !448
  %6116 = sub i64 %6113, %6115, !dbg !449
  %6117 = trunc i64 %6116 to i32, !dbg !450
  store i32 %6117, i32* %5896, align 4, !dbg !451
  br label %6119, !dbg !452

6118:                                             ; preds = %6033
  store i32 0, i32* %5882, align 4, !dbg !453
  br label %6119, !dbg !454

6119:                                             ; preds = %6109, %6118
  %6120 = load i16, i16* %5900, align 2, !dbg !455
  %6121 = icmp sle i16 %6120, 4, !dbg !456
  br i1 %6121, label %6122, label %5951, !dbg !457

6122:                                             ; preds = %6119
  %6123 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5885, i32 0, i32 1, !dbg !458
  %6124 = load i16, i16* %6123, align 2, !dbg !458
  %6125 = and i16 %6124, 9216, !dbg !458
  %6126 = icmp ne i16 %6125, 0, !dbg !458
  br i1 %6126, label %6127, label %6128, !dbg !458

6127:                                             ; preds = %6122
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5885), !dbg !458
  br label %6129, !dbg !458

6128:                                             ; preds = %6122
  store i16 1, i16* %6123, align 2, !dbg !458
  br label %6129, !dbg !458

6129:                                             ; preds = %6127, %6128, %5998, %5978, %6017, %6028, %5946, %5947
  call void @llvm.stackrestore(i8* %5874), !dbg !459
  br label %6130, !dbg !74

6130:                                             ; preds = %6129, %14
  %6131 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !1132
  %6132 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6131, i32 0, i32 1, !dbg !1135
  %6133 = load i16, i16* %6132, align 2, !dbg !1136
  %6134 = and i16 %6133, 36, !dbg !1137
  %6135 = icmp ne i16 %6134, 0, !dbg !1138
  br i1 %6135, label %6136, label %6137, !dbg !1139

6136:                                             ; preds = %6130
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6131), !dbg !1140
  br label %6137, !dbg !1141

6137:                                             ; preds = %6136, %6130, %14
  %6138 = call i8* @llvm.stacksave(), !dbg !167
  %6139 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %6140 = load i8, i8* %6139, align 1, !dbg !171
  %6141 = alloca i32, align 4, !dbg !172
  store i32 7, i32* %6141, align 4, !dbg !173
  %6142 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !174
  %6143 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %6144 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6142, align 8, !dbg !176
  store %struct.VdbeCursor* %6144, %struct.VdbeCursor** %6143, align 8, !dbg !177
  %6145 = alloca i8*, align 8, !dbg !178
  %6146 = alloca i32, align 4, !dbg !179
  %6147 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6143, i32* %6141), !dbg !180
  %6148 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6143, align 8, !dbg !181
  %6149 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !182
  %6150 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 16, !dbg !183
  %6151 = load i16, i16* %6150, align 2, !dbg !184
  %6152 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 19, !dbg !185
  %6153 = load i32*, i32** %6152, align 8, !dbg !186
  %6154 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 0, !dbg !187
  %6155 = load i8, i8* %6154, align 1, !dbg !188
  %6156 = icmp ne i8 %6155, 3, !dbg !189
  %6157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 2, !dbg !190
  %6158 = load i8, i8* %6157, align 1, !dbg !191
  %6159 = icmp ne i8 %6158, 0, !dbg !192
  %6160 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 14, !dbg !193
  %6161 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 21, !dbg !194
  %6162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 22, !dbg !195
  %6163 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 20, !dbg !196
  %6164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 17, !dbg !197
  %6165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 9, !dbg !198
  %6166 = load i32, i32* %6165, align 4, !dbg !199
  %6167 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %6168 = load i32, i32* %6167, align 4, !dbg !201
  %6169 = icmp ne i32 %6166, %6168, !dbg !202
  br i1 %6169, label %6170, label %6212, !dbg !203

6170:                                             ; preds = %6137
  br i1 %6159, label %6192, label %6187, !dbg !204

6171:                                             ; preds = %6187, %6194
  %6172 = load i32, i32* %6167, align 4, !dbg !205
  store i32 %6172, i32* %6165, align 4, !dbg !206
  %6173 = load i8*, i8** %6163, align 8, !dbg !207
  %6174 = load i8, i8* %6173, align 1, !dbg !208
  %6175 = icmp sgt i8 %6174, -1, !dbg !211
  br i1 %6175, label %6176, label %6178, !dbg !212

6176:                                             ; preds = %6171
  %6177 = zext i8 %6174 to i32, !dbg !213
  store i32 %6177, i32* %6153, align 4, !dbg !214
  store i32 1, i32* %6160, align 4, !dbg !215
  br label %6181, !dbg !216

6178:                                             ; preds = %6171
  %6179 = call i8 @sqlite3GetVarint32(i8* %6173, i32* %6153), !dbg !217
  %6180 = zext i8 %6179 to i32, !dbg !218
  store i32 %6180, i32* %6160, align 4, !dbg !219
  br label %6181, !dbg !220

6181:                                             ; preds = %6178, %6176
  store i16 0, i16* %6164, align 2, !dbg !221
  %6182 = load i32, i32* %6162, align 4, !dbg !222
  %6183 = load i32, i32* %6153, align 4, !dbg !223
  %6184 = icmp ult i32 %6182, %6183, !dbg !224
  br i1 %6184, label %6186, label %6185, !dbg !225

6185:                                             ; preds = %6181
  store i8* %6173, i8** %6145, align 8, !dbg !226
  br label %6305, !dbg !227

6186:                                             ; preds = %6181
  store i8* null, i8** %6163, align 8, !dbg !228
  store i32 0, i32* %6162, align 4, !dbg !229
  br label %6212, !dbg !230

6187:                                             ; preds = %6170
  %6188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 12, i32 0, !dbg !231
  %6189 = load %struct.BtCursor*, %struct.BtCursor** %6188, align 8, !dbg !232
  %6190 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6189), !dbg !233
  store i32 %6190, i32* %6161, align 4, !dbg !234
  %6191 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6189, i32* %6162), !dbg !235
  store i8* %6191, i8** %6163, align 8, !dbg !236
  br label %6171, !dbg !237

6192:                                             ; preds = %6170
  %6193 = icmp eq i8 %6155, 3, !dbg !238
  br i1 %6193, label %6194, label %6205, !dbg !239

6194:                                             ; preds = %6192
  %6195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 10, !dbg !240
  %6196 = load i32, i32* %6195, align 4, !dbg !241
  %6197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6196, !dbg !242
  %6198 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6197, i32 0, i32 1, !dbg !243
  %6199 = load i16, i16* %6198, align 2, !dbg !244
  %6200 = and i16 %6199, 16, !dbg !245
  %6201 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6197, i32 0, i32 4, !dbg !246
  %6202 = load i32, i32* %6201, align 4, !dbg !247
  store i32 %6202, i32* %6161, align 4, !dbg !248
  store i32 %6202, i32* %6162, align 4, !dbg !249
  %6203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6197, i32 0, i32 5, !dbg !250
  %6204 = load i8*, i8** %6203, align 8, !dbg !251
  store i8* %6204, i8** %6163, align 8, !dbg !252
  br label %6171, !dbg !253

6205:                                             ; preds = %6192
  %6206 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 1, !dbg !254
  %6207 = load i16, i16* %6206, align 2, !dbg !254
  %6208 = and i16 %6207, 9216, !dbg !254
  %6209 = icmp ne i16 %6208, 0, !dbg !254
  br i1 %6209, label %6210, label %6211, !dbg !254

6210:                                             ; preds = %6205
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6149), !dbg !254
  br label %6393, !dbg !254

6211:                                             ; preds = %6205
  store i16 1, i16* %6206, align 2, !dbg !254
  br label %6393, !dbg !254

6212:                                             ; preds = %6186, %6137
  %6213 = load i16, i16* %6164, align 2, !dbg !255
  %6214 = icmp ule i16 %6213, 5, !dbg !256
  br i1 %6214, label %6297, label %6294, !dbg !257

6215:                                             ; preds = %6294, %6383
  %6216 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 1, !dbg !258
  %6217 = load i16, i16* %6216, align 2, !dbg !259
  %6218 = and i16 9216, %6217, !dbg !260
  %6219 = icmp eq i16 0, %6218, !dbg !261
  br i1 %6219, label %6220, label %6224, !dbg !262

6220:                                             ; preds = %6215
  %6221 = icmp ne i16 %6218, 0, !dbg !263
  br i1 %6221, label %6222, label %6223, !dbg !263

6222:                                             ; preds = %6220
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6149), !dbg !263
  br label %6224, !dbg !263

6223:                                             ; preds = %6220
  store i16 1, i16* %6216, align 2, !dbg !263
  br label %6224, !dbg !263

6224:                                             ; preds = %6222, %6223, %6215
  %6225 = load i32, i32* %6146, align 4, !dbg !264
  %6226 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 23, i32 5, !dbg !265
  %6227 = load i32, i32* %6226, align 4, !dbg !266
  %6228 = load i32, i32* %6162, align 4, !dbg !267
  %6229 = getelementptr i32, i32* %6153, i32 6, !dbg !268
  %6230 = load i32, i32* %6229, align 4, !dbg !269
  %6231 = icmp sge i32 %6228, %6230, !dbg !270
  br i1 %6231, label %6232, label %6272, !dbg !271

6232:                                             ; preds = %6224
  %6233 = load i8*, i8** %6163, align 8, !dbg !272
  %6234 = ptrtoint i8* %6233 to i64, !dbg !273
  %6235 = getelementptr i32, i32* %6153, i32 5, !dbg !274
  %6236 = load i32, i32* %6235, align 4, !dbg !275
  %6237 = zext i32 %6236 to i64, !dbg !276
  %6238 = add i64 %6234, %6237, !dbg !277
  %6239 = inttoptr i64 %6238 to i8*, !dbg !278
  store i8* %6239, i8** %6145, align 8, !dbg !279
  %6240 = load i32, i32* %6146, align 4, !dbg !280
  %6241 = icmp ult i32 %6240, 12, !dbg !281
  br i1 %6241, label %6242, label %6244, !dbg !282

6242:                                             ; preds = %6232
  %6243 = call i32 @sqlite3VdbeSerialGet(i8* %6239, i32 %6240, %struct.sqlite3_value* %6149), !dbg !283
  br label %6393, !dbg !284

6244:                                             ; preds = %6232
  %6245 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %6245, align 2, !dbg !286
  %6246 = getelementptr i16, i16* %6245, i32 1, !dbg !287
  store i16 514, i16* %6246, align 2, !dbg !288
  %6247 = load i32, i32* %6146, align 4, !dbg !289
  %6248 = sub i32 %6247, 12, !dbg !290
  %6249 = lshr i32 %6248, 1, !dbg !291
  %6250 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 4, !dbg !292
  store i32 %6249, i32* %6250, align 4, !dbg !293
  %6251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 2, !dbg !294
  store i8 %6140, i8* %6251, align 1, !dbg !295
  %6252 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 5, !dbg !296
  %6253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 7, !dbg !297
  %6254 = load i32, i32* %6253, align 4, !dbg !298
  %6255 = add i32 %6249, 2, !dbg !299
  %6256 = icmp slt i32 %6254, %6255, !dbg !300
  br i1 %6256, label %6257, label %6259, !dbg !301

6257:                                             ; preds = %6244
  store i16 1, i16* %6216, align 2, !dbg !302
  %6258 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6149, i32 %6255, i32 0), !dbg !303
  br label %6262, !dbg !304

6259:                                             ; preds = %6244
  %6260 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 6, !dbg !305
  %6261 = load i8*, i8** %6260, align 8, !dbg !306
  store i8* %6261, i8** %6252, align 8, !dbg !307
  br label %6262, !dbg !308

6262:                                             ; preds = %6259, %6257
  %6263 = zext i32 %6249 to i64, !dbg !309
  %6264 = load i8*, i8** %6252, align 8, !dbg !310
  %6265 = load i8*, i8** %6145, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6264, i8* %6265, i64 %6263, i1 false), !dbg !312
  %6266 = getelementptr i8, i8* %6264, i32 %6249, !dbg !313
  store i8 0, i8* %6266, align 1, !dbg !314
  %6267 = add i32 %6249, 1, !dbg !315
  %6268 = getelementptr i8, i8* %6264, i32 %6267, !dbg !316
  store i8 0, i8* %6268, align 1, !dbg !317
  %6269 = and i32 %6247, 1, !dbg !318
  %6270 = getelementptr i16, i16* %6245, i32 %6269, !dbg !319
  %6271 = load i16, i16* %6270, align 2, !dbg !320
  store i16 %6271, i16* %6216, align 2, !dbg !321
  br label %6393, !dbg !322

6272:                                             ; preds = %6224
  %6273 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 2, !dbg !323
  store i8 %6140, i8* %6273, align 1, !dbg !324
  %6274 = load i32, i32* %6146, align 4, !dbg !325
  %6275 = and i32 %6274, 1, !dbg !326
  %6276 = icmp eq i32 %6275, 0, !dbg !327
  %6277 = icmp sge i32 %6274, 12, !dbg !328
  %6278 = and i1 %6277, %6276, !dbg !329
  %6279 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6274), !dbg !330
  %6280 = icmp eq i32 %6279, 0, !dbg !331
  br i1 %6280, label %6292, label %6281, !dbg !332

6281:                                             ; preds = %6272
  %6282 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 12, i32 0, !dbg !333
  %6283 = load %struct.BtCursor*, %struct.BtCursor** %6282, align 8, !dbg !334
  %6284 = getelementptr i32, i32* %6153, i32 5, !dbg !335
  %6285 = load i32, i32* %6284, align 4, !dbg !336
  %6286 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6283, i32 %6285, i32 %6279, %struct.sqlite3_value* %6149), !dbg !337
  %6287 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 5, !dbg !338
  %6288 = load i8*, i8** %6287, align 8, !dbg !339
  %6289 = call i32 @sqlite3VdbeSerialGet(i8* %6288, i32 %6274, %struct.sqlite3_value* %6149), !dbg !340
  %6290 = load i16, i16* %6216, align 2, !dbg !341
  %6291 = and i16 %6290, -4097, !dbg !342
  store i16 %6291, i16* %6216, align 2, !dbg !343
  br label %6393, !dbg !344

6292:                                             ; preds = %6272
  %6293 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6274, %struct.sqlite3_value* %6149), !dbg !345
  br label %6393, !dbg !346

6294:                                             ; preds = %6212
  %6295 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 23, i32 5, !dbg !347
  %6296 = load i32, i32* %6295, align 4, !dbg !348
  store i32 %6296, i32* %6146, align 4, !dbg !349
  br label %6215, !dbg !350

6297:                                             ; preds = %6212
  %6298 = load i32, i32* %6160, align 4, !dbg !351
  %6299 = load i32, i32* %6153, align 4, !dbg !352
  %6300 = icmp ult i32 %6298, %6299, !dbg !353
  br i1 %6300, label %6301, label %6382, !dbg !354

6301:                                             ; preds = %6297
  %6302 = load i8*, i8** %6163, align 8, !dbg !355
  %6303 = icmp eq i8* %6302, null, !dbg !356
  br i1 %6303, label %6305, label %6304, !dbg !357

6304:                                             ; preds = %6301
  store i8* %6302, i8** %6145, align 8, !dbg !358
  br label %6305, !dbg !359

6305:                                             ; preds = %6304, %6301, %6185
  %6306 = alloca i32, align 4, !dbg !360
  %6307 = load i16, i16* %6164, align 2, !dbg !361
  %6308 = zext i16 %6307 to i32, !dbg !362
  store i32 %6308, i32* %6306, align 4, !dbg !363
  %6309 = alloca i64, align 8, !dbg !364
  %6310 = getelementptr i32, i32* %6153, i32 %6308, !dbg !365
  %6311 = load i32, i32* %6310, align 4, !dbg !366
  %6312 = zext i32 %6311 to i64, !dbg !367
  store i64 %6312, i64* %6309, align 4, !dbg !368
  %6313 = load i8*, i8** %6145, align 8, !dbg !369
  %6314 = load i32, i32* %6160, align 4, !dbg !370
  %6315 = alloca i8*, align 8, !dbg !371
  %6316 = getelementptr i8, i8* %6313, i32 %6314, !dbg !372
  store i8* %6316, i8** %6315, align 8, !dbg !373
  %6317 = load i32, i32* %6153, align 4, !dbg !374
  %6318 = getelementptr i8, i8* %6313, i32 %6317, !dbg !375
  br label %6319, !dbg !376

6319:                                             ; preds = %6326, %6305
  %6320 = load i32, i32* %6306, align 4, !dbg !377
  %6321 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6148, i32 0, i32 23, i32 %6320, !dbg !378
  %6322 = load i8*, i8** %6315, align 8, !dbg !379
  %6323 = load i8, i8* %6322, align 1, !dbg !380
  %6324 = zext i8 %6323 to i32, !dbg !381
  store i32 %6324, i32* %6146, align 4, !dbg !382
  store i32 %6324, i32* %6321, align 4, !dbg !383
  %6325 = icmp sgt i8 %6323, -1, !dbg !384
  br i1 %6325, label %6349, label %6340, !dbg !385

6326:                                             ; preds = %6340, %6349
  %6327 = load i32, i32* %6306, align 4, !dbg !386
  %6328 = add i32 %6327, 1, !dbg !387
  store i32 %6328, i32* %6306, align 4, !dbg !388
  %6329 = load i64, i64* %6309, align 4, !dbg !389
  %6330 = and i64 4294967295, %6329, !dbg !390
  %6331 = trunc i64 %6330 to i32, !dbg !391
  %6332 = getelementptr i32, i32* %6153, i32 %6328, !dbg !392
  store i32 %6331, i32* %6332, align 4, !dbg !393
  %6333 = load i32, i32* %6306, align 4, !dbg !394
  %6334 = icmp sle i32 %6333, 5, !dbg !395
  %6335 = load i8*, i8** %6315, align 8, !dbg !396
  %6336 = ptrtoint i8* %6335 to i64, !dbg !397
  %6337 = ptrtoint i8* %6318 to i64, !dbg !398
  %6338 = icmp ult i64 %6336, %6337, !dbg !399
  %6339 = and i1 %6334, %6338, !dbg !400
  br i1 %6339, label %6319, label %6358, !dbg !401

6340:                                             ; preds = %6319
  %6341 = load i8*, i8** %6315, align 8, !dbg !402
  %6342 = call i8 @sqlite3GetVarint32(i8* %6341, i32* %6146), !dbg !403
  %6343 = getelementptr i8, i8* %6341, i8 %6342, !dbg !404
  store i8* %6343, i8** %6315, align 8, !dbg !405
  %6344 = load i32, i32* %6146, align 4, !dbg !406
  store i32 %6344, i32* %6321, align 4, !dbg !407
  %6345 = load i64, i64* %6309, align 4, !dbg !408
  %6346 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6344), !dbg !409
  %6347 = zext i32 %6346 to i64, !dbg !410
  %6348 = add i64 %6345, %6347, !dbg !411
  store i64 %6348, i64* %6309, align 4, !dbg !412
  br label %6326, !dbg !413

6349:                                             ; preds = %6319
  %6350 = getelementptr i8, i8* %6322, i32 1, !dbg !414
  store i8* %6350, i8** %6315, align 8, !dbg !415
  %6351 = load i32, i32* %6146, align 4, !dbg !416
  %6352 = trunc i32 %6351 to i8, !dbg !417
  %6353 = getelementptr i8, i8* %4, i8 %6352, !dbg !418
  %6354 = load i8, i8* %6353, align 1, !dbg !419
  %6355 = zext i8 %6354 to i64, !dbg !420
  %6356 = load i64, i64* %6309, align 4, !dbg !421
  %6357 = add i64 %6356, %6355, !dbg !422
  store i64 %6357, i64* %6309, align 4, !dbg !423
  br label %6326, !dbg !424

6358:                                             ; preds = %6326
  %6359 = load i64, i64* %6309, align 4, !dbg !425
  %6360 = load i32, i32* %6161, align 4, !dbg !426
  %6361 = zext i32 %6360 to i64, !dbg !427
  %6362 = icmp uge i64 %6336, %6337, !dbg !428
  %6363 = icmp ugt i64 %6336, %6337, !dbg !429
  %6364 = icmp ne i64 %6359, %6361, !dbg !430
  %6365 = icmp ugt i64 %6359, %6361, !dbg !431
  %6366 = or i1 %6363, %6364, !dbg !432
  %6367 = and i1 %6362, %6366, !dbg !433
  %6368 = or i1 %6367, %6365, !dbg !434
  br i1 %6368, label %6369, label %6373, !dbg !435

6369:                                             ; preds = %6358
  %6370 = load i32, i32* %6153, align 4, !dbg !436
  %6371 = icmp eq i32 %6370, 0, !dbg !437
  br i1 %6371, label %6372, label %6373, !dbg !438

6372:                                             ; preds = %6369
  store i32 0, i32* %6306, align 4, !dbg !439
  store i8* %6318, i8** %6315, align 8, !dbg !440
  br label %6373, !dbg !441

6373:                                             ; preds = %6372, %6369, %6358
  %6374 = load i32, i32* %6306, align 4, !dbg !442
  %6375 = trunc i32 %6374 to i16, !dbg !443
  store i16 %6375, i16* %6164, align 2, !dbg !444
  %6376 = load i8*, i8** %6315, align 8, !dbg !445
  %6377 = ptrtoint i8* %6376 to i64, !dbg !446
  %6378 = load i8*, i8** %6145, align 8, !dbg !447
  %6379 = ptrtoint i8* %6378 to i64, !dbg !448
  %6380 = sub i64 %6377, %6379, !dbg !449
  %6381 = trunc i64 %6380 to i32, !dbg !450
  store i32 %6381, i32* %6160, align 4, !dbg !451
  br label %6383, !dbg !452

6382:                                             ; preds = %6297
  store i32 0, i32* %6146, align 4, !dbg !453
  br label %6383, !dbg !454

6383:                                             ; preds = %6373, %6382
  %6384 = load i16, i16* %6164, align 2, !dbg !455
  %6385 = icmp sle i16 %6384, 5, !dbg !456
  br i1 %6385, label %6386, label %6215, !dbg !457

6386:                                             ; preds = %6383
  %6387 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6149, i32 0, i32 1, !dbg !458
  %6388 = load i16, i16* %6387, align 2, !dbg !458
  %6389 = and i16 %6388, 9216, !dbg !458
  %6390 = icmp ne i16 %6389, 0, !dbg !458
  br i1 %6390, label %6391, label %6392, !dbg !458

6391:                                             ; preds = %6386
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6149), !dbg !458
  br label %6393, !dbg !458

6392:                                             ; preds = %6386
  store i16 1, i16* %6387, align 2, !dbg !458
  br label %6393, !dbg !458

6393:                                             ; preds = %6391, %6392, %6262, %6242, %6281, %6292, %6210, %6211
  call void @llvm.stackrestore(i8* %6138), !dbg !459
  br label %6394, !dbg !74

6394:                                             ; preds = %6393, %14
  %6395 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !1132
  %6396 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6395, i32 0, i32 1, !dbg !1135
  %6397 = load i16, i16* %6396, align 2, !dbg !1136
  %6398 = and i16 %6397, 36, !dbg !1137
  %6399 = icmp ne i16 %6398, 0, !dbg !1138
  br i1 %6399, label %6400, label %6401, !dbg !1139

6400:                                             ; preds = %6394
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6395), !dbg !1140
  br label %6401, !dbg !1141

6401:                                             ; preds = %6400, %6394, %14
  %6402 = call i8* @llvm.stacksave(), !dbg !679
  %6403 = alloca i64, align 8, !dbg !682
  store i64 0, i64* %6403, align 4, !dbg !683
  %6404 = alloca i32, align 8, !dbg !684
  store i32 0, i32* %6404, align 4, !dbg !685
  %6405 = alloca i64, align 8, !dbg !686
  store i64 0, i64* %6405, align 4, !dbg !687
  %6406 = alloca i8*, align 8, !dbg !688
  %6407 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 52, !dbg !689
  %6408 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6407, i32 0, i32 6, !dbg !690
  %6409 = bitcast %union.p4union* %6408 to i8**, !dbg !691
  %6410 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !692
  %6411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6410, i32 3, !dbg !693
  %6412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !694
  %6413 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 0, i32 1, !dbg !695
  %6414 = load i16, i16* %6413, align 2, !dbg !696
  %6415 = and i16 %6414, 1, !dbg !697
  %6416 = icmp ne i16 %6415, 0, !dbg !697
  %6417 = and i16 %6414, 36, !dbg !698
  %6418 = icmp ne i16 %6417, 0, !dbg !698
  %6419 = and i16 %6414, 8, !dbg !699
  %6420 = icmp ne i16 %6419, 0, !dbg !699
  %6421 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 0, i32 8, !dbg !700
  br i1 %6416, label %6422, label %6430, !dbg !701

6422:                                             ; preds = %6401
  %6423 = and i16 %6414, 16384, !dbg !702
  %6424 = icmp ne i16 %6423, 0, !dbg !702
  br i1 %6424, label %6425, label %6426, !dbg !703

6425:                                             ; preds = %6422
  store i32 10, i32* %6421, align 4, !dbg !704
  br label %6427, !dbg !705

6426:                                             ; preds = %6422
  store i32 0, i32* %6421, align 4, !dbg !706
  br label %6427, !dbg !707

6427:                                             ; preds = %6426, %6425
  %6428 = load i32, i32* %6404, align 4, !dbg !708
  %6429 = add i32 %6428, 1, !dbg !708
  store i32 %6429, i32* %6404, align 4, !dbg !708
  br label %6520, !dbg !709

6430:                                             ; preds = %6401
  br i1 %6418, label %6431, label %6475, !dbg !710

6431:                                             ; preds = %6430
  %6432 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 0, i32 0, !dbg !711
  %6433 = bitcast %union.MemValue* %6432 to i64*, !dbg !712
  %6434 = load i64, i64* %6433, align 4, !dbg !713
  %6435 = alloca i64, align 8, !dbg !714
  %6436 = icmp slt i64 %6434, 0, !dbg !715
  br i1 %6436, label %6437, label %6439, !dbg !716

6437:                                             ; preds = %6431
  %6438 = xor i64 %6434, -1, !dbg !717
  store i64 %6438, i64* %6435, align 4, !dbg !718
  br label %6440, !dbg !719

6439:                                             ; preds = %6431
  store i64 %6434, i64* %6435, align 4, !dbg !720
  br label %6440, !dbg !721

6440:                                             ; preds = %6439, %6437
  %6441 = load i32, i32* %6404, align 4, !dbg !722
  %6442 = add i32 %6441, 1, !dbg !722
  store i32 %6442, i32* %6404, align 4, !dbg !722
  %6443 = load i64, i64* %6435, align 4, !dbg !723
  %6444 = icmp slt i64 %6443, 127, !dbg !724
  %6445 = icmp slt i64 %6443, 32767, !dbg !725
  %6446 = icmp slt i64 %6443, 8388607, !dbg !726
  %6447 = icmp slt i64 %6443, 2147483647, !dbg !727
  br i1 %6444, label %6448, label %6457, !dbg !728

6448:                                             ; preds = %6440
  %6449 = and i64 %6434, 1, !dbg !729
  %6450 = icmp eq i64 %6449, %6434, !dbg !730
  br i1 %6450, label %6451, label %6454, !dbg !731

6451:                                             ; preds = %6448
  %6452 = trunc i64 %6443 to i32, !dbg !732
  %6453 = add i32 %6452, 8, !dbg !733
  store i32 %6453, i32* %6421, align 4, !dbg !734
  br label %6520, !dbg !735

6454:                                             ; preds = %6448
  %6455 = load i64, i64* %6403, align 4, !dbg !736
  %6456 = add i64 %6455, 1, !dbg !736
  store i64 %6456, i64* %6403, align 4, !dbg !736
  store i32 1, i32* %6421, align 4, !dbg !737
  br label %6520, !dbg !738

6457:                                             ; preds = %6440
  %6458 = load i64, i64* %6403, align 4, !dbg !739
  br i1 %6445, label %6459, label %6461, !dbg !740

6459:                                             ; preds = %6457
  %6460 = add i64 %6458, 2, !dbg !741
  store i64 %6460, i64* %6403, align 4, !dbg !741
  store i32 2, i32* %6421, align 4, !dbg !742
  br label %6520, !dbg !743

6461:                                             ; preds = %6457
  br i1 %6446, label %6462, label %6464, !dbg !744

6462:                                             ; preds = %6461
  %6463 = add i64 %6458, 3, !dbg !745
  store i64 %6463, i64* %6403, align 4, !dbg !745
  store i32 3, i32* %6421, align 4, !dbg !746
  br label %6520, !dbg !747

6464:                                             ; preds = %6461
  br i1 %6447, label %6465, label %6467, !dbg !748

6465:                                             ; preds = %6464
  %6466 = add i64 %6458, 4, !dbg !749
  store i64 %6466, i64* %6403, align 4, !dbg !749
  store i32 4, i32* %6421, align 4, !dbg !750
  br label %6520, !dbg !751

6467:                                             ; preds = %6464
  %6468 = add i64 %6458, 8, !dbg !752
  store i64 %6468, i64* %6403, align 4, !dbg !752
  %6469 = and i16 %6414, 32, !dbg !753
  %6470 = icmp ne i16 %6469, 0, !dbg !753
  br i1 %6470, label %6471, label %6474, !dbg !754

6471:                                             ; preds = %6467
  %6472 = and i16 %6414, -33, !dbg !755
  %6473 = or i16 %6472, 8, !dbg !756
  store i16 %6473, i16* %6413, align 2, !dbg !757
  store i32 7, i32* %6421, align 4, !dbg !758
  br label %6520, !dbg !759

6474:                                             ; preds = %6467
  store i32 6, i32* %6421, align 4, !dbg !760
  br label %6520, !dbg !761

6475:                                             ; preds = %6430
  br i1 %6420, label %6476, label %6481, !dbg !762

6476:                                             ; preds = %6475
  %6477 = load i32, i32* %6404, align 4, !dbg !763
  %6478 = add i32 %6477, 1, !dbg !763
  store i32 %6478, i32* %6404, align 4, !dbg !763
  %6479 = load i64, i64* %6403, align 4, !dbg !764
  %6480 = add i64 %6479, 8, !dbg !764
  store i64 %6480, i64* %6403, align 4, !dbg !764
  store i32 7, i32* %6421, align 4, !dbg !765
  br label %6520, !dbg !766

6481:                                             ; preds = %6475
  %6482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 0, i32 4, !dbg !767
  %6483 = load i32, i32* %6482, align 4, !dbg !768
  %6484 = alloca i32, align 8, !dbg !769
  store i32 %6483, i32* %6484, align 4, !dbg !770
  %6485 = alloca i32, align 8, !dbg !771
  %6486 = add i32 %6483, %6483, !dbg !772
  %6487 = add i32 %6486, 12, !dbg !773
  %6488 = and i16 %6414, 2, !dbg !774
  %6489 = icmp ne i16 %6488, 0, !dbg !775
  %6490 = zext i1 %6489 to i32, !dbg !776
  %6491 = add i32 %6487, %6490, !dbg !777
  store i32 %6491, i32* %6485, align 4, !dbg !778
  %6492 = and i16 %6414, 16384, !dbg !779
  %6493 = icmp ne i16 %6492, 0, !dbg !780
  br i1 %6493, label %6494, label %6510, !dbg !781

6494:                                             ; preds = %6481
  %6495 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 0, i32 0, !dbg !782
  %6496 = bitcast %union.MemValue* %6495 to i32*, !dbg !783
  %6497 = load i32, i32* %6496, align 4, !dbg !784
  %6498 = add i32 %6497, %6497, !dbg !785
  %6499 = add i32 %6491, %6498, !dbg !786
  store i32 %6499, i32* %6485, align 4, !dbg !786
  %6500 = load i64, i64* %6403, align 4, !dbg !787
  %6501 = icmp ne i64 %6500, 0, !dbg !787
  br i1 %6501, label %6506, label %6502, !dbg !788

6502:                                             ; preds = %6494
  %6503 = zext i32 %6497 to i64, !dbg !789
  %6504 = load i64, i64* %6405, align 4, !dbg !790
  %6505 = add i64 %6504, %6503, !dbg !790
  store i64 %6505, i64* %6405, align 4, !dbg !790
  br label %6510, !dbg !791

6506:                                             ; preds = %6494
  %6507 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6411), !dbg !792
  %6508 = load i32, i32* %6484, align 4, !dbg !793
  %6509 = add i32 %6508, %6497, !dbg !793
  store i32 %6509, i32* %6484, align 4, !dbg !793
  br label %6510, !dbg !794

6510:                                             ; preds = %6502, %6506, %6481
  %6511 = load i32, i32* %6484, align 4, !dbg !795
  %6512 = zext i32 %6511 to i64, !dbg !796
  %6513 = load i64, i64* %6403, align 4, !dbg !797
  %6514 = add i64 %6513, %6512, !dbg !797
  store i64 %6514, i64* %6403, align 4, !dbg !797
  %6515 = load i32, i32* %6485, align 4, !dbg !798
  %6516 = zext i32 %6515 to i64, !dbg !799
  %6517 = call i32 @sqlite3VarintLen(i64 %6516), !dbg !800
  %6518 = load i32, i32* %6404, align 4, !dbg !801
  %6519 = add i32 %6518, %6517, !dbg !801
  store i32 %6519, i32* %6404, align 4, !dbg !801
  store i32 %6515, i32* %6421, align 4, !dbg !802
  br label %6520, !dbg !803

6520:                                             ; preds = %6459, %6462, %6465, %6471, %6474, %6454, %6451, %6510, %6476, %6427
  %6521 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6411, i32 -1, !dbg !804
  %6522 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 0, i32 1, !dbg !695
  %6523 = load i16, i16* %6522, align 2, !dbg !696
  %6524 = and i16 %6523, 1, !dbg !697
  %6525 = icmp ne i16 %6524, 0, !dbg !697
  %6526 = and i16 %6523, 36, !dbg !698
  %6527 = icmp ne i16 %6526, 0, !dbg !698
  %6528 = and i16 %6523, 8, !dbg !699
  %6529 = icmp ne i16 %6528, 0, !dbg !699
  %6530 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 0, i32 8, !dbg !700
  br i1 %6525, label %6531, label %6539, !dbg !701

6531:                                             ; preds = %6520
  %6532 = and i16 %6523, 16384, !dbg !702
  %6533 = icmp ne i16 %6532, 0, !dbg !702
  br i1 %6533, label %6534, label %6535, !dbg !703

6534:                                             ; preds = %6531
  store i32 10, i32* %6530, align 4, !dbg !704
  br label %6536, !dbg !705

6535:                                             ; preds = %6531
  store i32 0, i32* %6530, align 4, !dbg !706
  br label %6536, !dbg !707

6536:                                             ; preds = %6535, %6534
  %6537 = load i32, i32* %6404, align 4, !dbg !708
  %6538 = add i32 %6537, 1, !dbg !708
  store i32 %6538, i32* %6404, align 4, !dbg !708
  br label %6629, !dbg !709

6539:                                             ; preds = %6520
  br i1 %6527, label %6540, label %6584, !dbg !710

6540:                                             ; preds = %6539
  %6541 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 0, i32 0, !dbg !711
  %6542 = bitcast %union.MemValue* %6541 to i64*, !dbg !712
  %6543 = load i64, i64* %6542, align 4, !dbg !713
  %6544 = alloca i64, align 8, !dbg !714
  %6545 = icmp slt i64 %6543, 0, !dbg !715
  br i1 %6545, label %6546, label %6548, !dbg !716

6546:                                             ; preds = %6540
  %6547 = xor i64 %6543, -1, !dbg !717
  store i64 %6547, i64* %6544, align 4, !dbg !718
  br label %6549, !dbg !719

6548:                                             ; preds = %6540
  store i64 %6543, i64* %6544, align 4, !dbg !720
  br label %6549, !dbg !721

6549:                                             ; preds = %6548, %6546
  %6550 = load i32, i32* %6404, align 4, !dbg !722
  %6551 = add i32 %6550, 1, !dbg !722
  store i32 %6551, i32* %6404, align 4, !dbg !722
  %6552 = load i64, i64* %6544, align 4, !dbg !723
  %6553 = icmp slt i64 %6552, 127, !dbg !724
  %6554 = icmp slt i64 %6552, 32767, !dbg !725
  %6555 = icmp slt i64 %6552, 8388607, !dbg !726
  %6556 = icmp slt i64 %6552, 2147483647, !dbg !727
  br i1 %6553, label %6557, label %6566, !dbg !728

6557:                                             ; preds = %6549
  %6558 = and i64 %6543, 1, !dbg !729
  %6559 = icmp eq i64 %6558, %6543, !dbg !730
  br i1 %6559, label %6560, label %6563, !dbg !731

6560:                                             ; preds = %6557
  %6561 = trunc i64 %6552 to i32, !dbg !732
  %6562 = add i32 %6561, 8, !dbg !733
  store i32 %6562, i32* %6530, align 4, !dbg !734
  br label %6629, !dbg !735

6563:                                             ; preds = %6557
  %6564 = load i64, i64* %6403, align 4, !dbg !736
  %6565 = add i64 %6564, 1, !dbg !736
  store i64 %6565, i64* %6403, align 4, !dbg !736
  store i32 1, i32* %6530, align 4, !dbg !737
  br label %6629, !dbg !738

6566:                                             ; preds = %6549
  %6567 = load i64, i64* %6403, align 4, !dbg !739
  br i1 %6554, label %6568, label %6570, !dbg !740

6568:                                             ; preds = %6566
  %6569 = add i64 %6567, 2, !dbg !741
  store i64 %6569, i64* %6403, align 4, !dbg !741
  store i32 2, i32* %6530, align 4, !dbg !742
  br label %6629, !dbg !743

6570:                                             ; preds = %6566
  br i1 %6555, label %6571, label %6573, !dbg !744

6571:                                             ; preds = %6570
  %6572 = add i64 %6567, 3, !dbg !745
  store i64 %6572, i64* %6403, align 4, !dbg !745
  store i32 3, i32* %6530, align 4, !dbg !746
  br label %6629, !dbg !747

6573:                                             ; preds = %6570
  br i1 %6556, label %6574, label %6576, !dbg !748

6574:                                             ; preds = %6573
  %6575 = add i64 %6567, 4, !dbg !749
  store i64 %6575, i64* %6403, align 4, !dbg !749
  store i32 4, i32* %6530, align 4, !dbg !750
  br label %6629, !dbg !751

6576:                                             ; preds = %6573
  %6577 = add i64 %6567, 8, !dbg !752
  store i64 %6577, i64* %6403, align 4, !dbg !752
  %6578 = and i16 %6523, 32, !dbg !753
  %6579 = icmp ne i16 %6578, 0, !dbg !753
  br i1 %6579, label %6580, label %6583, !dbg !754

6580:                                             ; preds = %6576
  %6581 = and i16 %6523, -33, !dbg !755
  %6582 = or i16 %6581, 8, !dbg !756
  store i16 %6582, i16* %6522, align 2, !dbg !757
  store i32 7, i32* %6530, align 4, !dbg !758
  br label %6629, !dbg !759

6583:                                             ; preds = %6576
  store i32 6, i32* %6530, align 4, !dbg !760
  br label %6629, !dbg !761

6584:                                             ; preds = %6539
  br i1 %6529, label %6585, label %6590, !dbg !762

6585:                                             ; preds = %6584
  %6586 = load i32, i32* %6404, align 4, !dbg !763
  %6587 = add i32 %6586, 1, !dbg !763
  store i32 %6587, i32* %6404, align 4, !dbg !763
  %6588 = load i64, i64* %6403, align 4, !dbg !764
  %6589 = add i64 %6588, 8, !dbg !764
  store i64 %6589, i64* %6403, align 4, !dbg !764
  store i32 7, i32* %6530, align 4, !dbg !765
  br label %6629, !dbg !766

6590:                                             ; preds = %6584
  %6591 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 0, i32 4, !dbg !767
  %6592 = load i32, i32* %6591, align 4, !dbg !768
  %6593 = alloca i32, align 8, !dbg !769
  store i32 %6592, i32* %6593, align 4, !dbg !770
  %6594 = alloca i32, align 8, !dbg !771
  %6595 = add i32 %6592, %6592, !dbg !772
  %6596 = add i32 %6595, 12, !dbg !773
  %6597 = and i16 %6523, 2, !dbg !774
  %6598 = icmp ne i16 %6597, 0, !dbg !775
  %6599 = zext i1 %6598 to i32, !dbg !776
  %6600 = add i32 %6596, %6599, !dbg !777
  store i32 %6600, i32* %6594, align 4, !dbg !778
  %6601 = and i16 %6523, 16384, !dbg !779
  %6602 = icmp ne i16 %6601, 0, !dbg !780
  br i1 %6602, label %6603, label %6619, !dbg !781

6603:                                             ; preds = %6590
  %6604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 0, i32 0, !dbg !782
  %6605 = bitcast %union.MemValue* %6604 to i32*, !dbg !783
  %6606 = load i32, i32* %6605, align 4, !dbg !784
  %6607 = add i32 %6606, %6606, !dbg !785
  %6608 = add i32 %6600, %6607, !dbg !786
  store i32 %6608, i32* %6594, align 4, !dbg !786
  %6609 = load i64, i64* %6403, align 4, !dbg !787
  %6610 = icmp ne i64 %6609, 0, !dbg !787
  br i1 %6610, label %6615, label %6611, !dbg !788

6611:                                             ; preds = %6603
  %6612 = zext i32 %6606 to i64, !dbg !789
  %6613 = load i64, i64* %6405, align 4, !dbg !790
  %6614 = add i64 %6613, %6612, !dbg !790
  store i64 %6614, i64* %6405, align 4, !dbg !790
  br label %6619, !dbg !791

6615:                                             ; preds = %6603
  %6616 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6521), !dbg !792
  %6617 = load i32, i32* %6593, align 4, !dbg !793
  %6618 = add i32 %6617, %6606, !dbg !793
  store i32 %6618, i32* %6593, align 4, !dbg !793
  br label %6619, !dbg !794

6619:                                             ; preds = %6611, %6615, %6590
  %6620 = load i32, i32* %6593, align 4, !dbg !795
  %6621 = zext i32 %6620 to i64, !dbg !796
  %6622 = load i64, i64* %6403, align 4, !dbg !797
  %6623 = add i64 %6622, %6621, !dbg !797
  store i64 %6623, i64* %6403, align 4, !dbg !797
  %6624 = load i32, i32* %6594, align 4, !dbg !798
  %6625 = zext i32 %6624 to i64, !dbg !799
  %6626 = call i32 @sqlite3VarintLen(i64 %6625), !dbg !800
  %6627 = load i32, i32* %6404, align 4, !dbg !801
  %6628 = add i32 %6627, %6626, !dbg !801
  store i32 %6628, i32* %6404, align 4, !dbg !801
  store i32 %6624, i32* %6530, align 4, !dbg !802
  br label %6629, !dbg !803

6629:                                             ; preds = %6568, %6571, %6574, %6580, %6583, %6563, %6560, %6619, %6585, %6536
  %6630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6521, i32 -1, !dbg !804
  %6631 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 1, !dbg !695
  %6632 = load i16, i16* %6631, align 2, !dbg !696
  %6633 = and i16 %6632, 1, !dbg !697
  %6634 = icmp ne i16 %6633, 0, !dbg !697
  %6635 = and i16 %6632, 36, !dbg !698
  %6636 = icmp ne i16 %6635, 0, !dbg !698
  %6637 = and i16 %6632, 8, !dbg !699
  %6638 = icmp ne i16 %6637, 0, !dbg !699
  %6639 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 8, !dbg !700
  br i1 %6634, label %6640, label %6648, !dbg !701

6640:                                             ; preds = %6629
  %6641 = and i16 %6632, 16384, !dbg !702
  %6642 = icmp ne i16 %6641, 0, !dbg !702
  br i1 %6642, label %6643, label %6644, !dbg !703

6643:                                             ; preds = %6640
  store i32 10, i32* %6639, align 4, !dbg !704
  br label %6645, !dbg !705

6644:                                             ; preds = %6640
  store i32 0, i32* %6639, align 4, !dbg !706
  br label %6645, !dbg !707

6645:                                             ; preds = %6644, %6643
  %6646 = load i32, i32* %6404, align 4, !dbg !708
  %6647 = add i32 %6646, 1, !dbg !708
  store i32 %6647, i32* %6404, align 4, !dbg !708
  br label %6738, !dbg !709

6648:                                             ; preds = %6629
  br i1 %6636, label %6649, label %6693, !dbg !710

6649:                                             ; preds = %6648
  %6650 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 0, !dbg !711
  %6651 = bitcast %union.MemValue* %6650 to i64*, !dbg !712
  %6652 = load i64, i64* %6651, align 4, !dbg !713
  %6653 = alloca i64, align 8, !dbg !714
  %6654 = icmp slt i64 %6652, 0, !dbg !715
  br i1 %6654, label %6655, label %6657, !dbg !716

6655:                                             ; preds = %6649
  %6656 = xor i64 %6652, -1, !dbg !717
  store i64 %6656, i64* %6653, align 4, !dbg !718
  br label %6658, !dbg !719

6657:                                             ; preds = %6649
  store i64 %6652, i64* %6653, align 4, !dbg !720
  br label %6658, !dbg !721

6658:                                             ; preds = %6657, %6655
  %6659 = load i32, i32* %6404, align 4, !dbg !722
  %6660 = add i32 %6659, 1, !dbg !722
  store i32 %6660, i32* %6404, align 4, !dbg !722
  %6661 = load i64, i64* %6653, align 4, !dbg !723
  %6662 = icmp slt i64 %6661, 127, !dbg !724
  %6663 = icmp slt i64 %6661, 32767, !dbg !725
  %6664 = icmp slt i64 %6661, 8388607, !dbg !726
  %6665 = icmp slt i64 %6661, 2147483647, !dbg !727
  br i1 %6662, label %6666, label %6675, !dbg !728

6666:                                             ; preds = %6658
  %6667 = and i64 %6652, 1, !dbg !729
  %6668 = icmp eq i64 %6667, %6652, !dbg !730
  br i1 %6668, label %6669, label %6672, !dbg !731

6669:                                             ; preds = %6666
  %6670 = trunc i64 %6661 to i32, !dbg !732
  %6671 = add i32 %6670, 8, !dbg !733
  store i32 %6671, i32* %6639, align 4, !dbg !734
  br label %6738, !dbg !735

6672:                                             ; preds = %6666
  %6673 = load i64, i64* %6403, align 4, !dbg !736
  %6674 = add i64 %6673, 1, !dbg !736
  store i64 %6674, i64* %6403, align 4, !dbg !736
  store i32 1, i32* %6639, align 4, !dbg !737
  br label %6738, !dbg !738

6675:                                             ; preds = %6658
  %6676 = load i64, i64* %6403, align 4, !dbg !739
  br i1 %6663, label %6677, label %6679, !dbg !740

6677:                                             ; preds = %6675
  %6678 = add i64 %6676, 2, !dbg !741
  store i64 %6678, i64* %6403, align 4, !dbg !741
  store i32 2, i32* %6639, align 4, !dbg !742
  br label %6738, !dbg !743

6679:                                             ; preds = %6675
  br i1 %6664, label %6680, label %6682, !dbg !744

6680:                                             ; preds = %6679
  %6681 = add i64 %6676, 3, !dbg !745
  store i64 %6681, i64* %6403, align 4, !dbg !745
  store i32 3, i32* %6639, align 4, !dbg !746
  br label %6738, !dbg !747

6682:                                             ; preds = %6679
  br i1 %6665, label %6683, label %6685, !dbg !748

6683:                                             ; preds = %6682
  %6684 = add i64 %6676, 4, !dbg !749
  store i64 %6684, i64* %6403, align 4, !dbg !749
  store i32 4, i32* %6639, align 4, !dbg !750
  br label %6738, !dbg !751

6685:                                             ; preds = %6682
  %6686 = add i64 %6676, 8, !dbg !752
  store i64 %6686, i64* %6403, align 4, !dbg !752
  %6687 = and i16 %6632, 32, !dbg !753
  %6688 = icmp ne i16 %6687, 0, !dbg !753
  br i1 %6688, label %6689, label %6692, !dbg !754

6689:                                             ; preds = %6685
  %6690 = and i16 %6632, -33, !dbg !755
  %6691 = or i16 %6690, 8, !dbg !756
  store i16 %6691, i16* %6631, align 2, !dbg !757
  store i32 7, i32* %6639, align 4, !dbg !758
  br label %6738, !dbg !759

6692:                                             ; preds = %6685
  store i32 6, i32* %6639, align 4, !dbg !760
  br label %6738, !dbg !761

6693:                                             ; preds = %6648
  br i1 %6638, label %6694, label %6699, !dbg !762

6694:                                             ; preds = %6693
  %6695 = load i32, i32* %6404, align 4, !dbg !763
  %6696 = add i32 %6695, 1, !dbg !763
  store i32 %6696, i32* %6404, align 4, !dbg !763
  %6697 = load i64, i64* %6403, align 4, !dbg !764
  %6698 = add i64 %6697, 8, !dbg !764
  store i64 %6698, i64* %6403, align 4, !dbg !764
  store i32 7, i32* %6639, align 4, !dbg !765
  br label %6738, !dbg !766

6699:                                             ; preds = %6693
  %6700 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 4, !dbg !767
  %6701 = load i32, i32* %6700, align 4, !dbg !768
  %6702 = alloca i32, align 8, !dbg !769
  store i32 %6701, i32* %6702, align 4, !dbg !770
  %6703 = alloca i32, align 8, !dbg !771
  %6704 = add i32 %6701, %6701, !dbg !772
  %6705 = add i32 %6704, 12, !dbg !773
  %6706 = and i16 %6632, 2, !dbg !774
  %6707 = icmp ne i16 %6706, 0, !dbg !775
  %6708 = zext i1 %6707 to i32, !dbg !776
  %6709 = add i32 %6705, %6708, !dbg !777
  store i32 %6709, i32* %6703, align 4, !dbg !778
  %6710 = and i16 %6632, 16384, !dbg !779
  %6711 = icmp ne i16 %6710, 0, !dbg !780
  br i1 %6711, label %6712, label %6728, !dbg !781

6712:                                             ; preds = %6699
  %6713 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 0, i32 0, !dbg !782
  %6714 = bitcast %union.MemValue* %6713 to i32*, !dbg !783
  %6715 = load i32, i32* %6714, align 4, !dbg !784
  %6716 = add i32 %6715, %6715, !dbg !785
  %6717 = add i32 %6709, %6716, !dbg !786
  store i32 %6717, i32* %6703, align 4, !dbg !786
  %6718 = load i64, i64* %6403, align 4, !dbg !787
  %6719 = icmp ne i64 %6718, 0, !dbg !787
  br i1 %6719, label %6724, label %6720, !dbg !788

6720:                                             ; preds = %6712
  %6721 = zext i32 %6715 to i64, !dbg !789
  %6722 = load i64, i64* %6405, align 4, !dbg !790
  %6723 = add i64 %6722, %6721, !dbg !790
  store i64 %6723, i64* %6405, align 4, !dbg !790
  br label %6728, !dbg !791

6724:                                             ; preds = %6712
  %6725 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6630), !dbg !792
  %6726 = load i32, i32* %6702, align 4, !dbg !793
  %6727 = add i32 %6726, %6715, !dbg !793
  store i32 %6727, i32* %6702, align 4, !dbg !793
  br label %6728, !dbg !794

6728:                                             ; preds = %6720, %6724, %6699
  %6729 = load i32, i32* %6702, align 4, !dbg !795
  %6730 = zext i32 %6729 to i64, !dbg !796
  %6731 = load i64, i64* %6403, align 4, !dbg !797
  %6732 = add i64 %6731, %6730, !dbg !797
  store i64 %6732, i64* %6403, align 4, !dbg !797
  %6733 = load i32, i32* %6703, align 4, !dbg !798
  %6734 = zext i32 %6733 to i64, !dbg !799
  %6735 = call i32 @sqlite3VarintLen(i64 %6734), !dbg !800
  %6736 = load i32, i32* %6404, align 4, !dbg !801
  %6737 = add i32 %6736, %6735, !dbg !801
  store i32 %6737, i32* %6404, align 4, !dbg !801
  store i32 %6733, i32* %6639, align 4, !dbg !802
  br label %6738, !dbg !803

6738:                                             ; preds = %6677, %6680, %6683, %6689, %6692, %6672, %6669, %6728, %6694, %6645
  %6739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6630, i32 -1, !dbg !804
  %6740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6739, i32 0, i32 1, !dbg !695
  %6741 = load i16, i16* %6740, align 2, !dbg !696
  %6742 = and i16 %6741, 1, !dbg !697
  %6743 = icmp ne i16 %6742, 0, !dbg !697
  %6744 = and i16 %6741, 36, !dbg !698
  %6745 = icmp ne i16 %6744, 0, !dbg !698
  %6746 = and i16 %6741, 8, !dbg !699
  %6747 = icmp ne i16 %6746, 0, !dbg !699
  %6748 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6739, i32 0, i32 8, !dbg !700
  br i1 %6743, label %6749, label %6757, !dbg !701

6749:                                             ; preds = %6738
  %6750 = and i16 %6741, 16384, !dbg !702
  %6751 = icmp ne i16 %6750, 0, !dbg !702
  br i1 %6751, label %6752, label %6753, !dbg !703

6752:                                             ; preds = %6749
  store i32 10, i32* %6748, align 4, !dbg !704
  br label %6754, !dbg !705

6753:                                             ; preds = %6749
  store i32 0, i32* %6748, align 4, !dbg !706
  br label %6754, !dbg !707

6754:                                             ; preds = %6753, %6752
  %6755 = load i32, i32* %6404, align 4, !dbg !708
  %6756 = add i32 %6755, 1, !dbg !708
  store i32 %6756, i32* %6404, align 4, !dbg !708
  br label %6847, !dbg !709

6757:                                             ; preds = %6738
  br i1 %6745, label %6758, label %6802, !dbg !710

6758:                                             ; preds = %6757
  %6759 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6739, i32 0, i32 0, !dbg !711
  %6760 = bitcast %union.MemValue* %6759 to i64*, !dbg !712
  %6761 = load i64, i64* %6760, align 4, !dbg !713
  %6762 = alloca i64, align 8, !dbg !714
  %6763 = icmp slt i64 %6761, 0, !dbg !715
  br i1 %6763, label %6764, label %6766, !dbg !716

6764:                                             ; preds = %6758
  %6765 = xor i64 %6761, -1, !dbg !717
  store i64 %6765, i64* %6762, align 4, !dbg !718
  br label %6767, !dbg !719

6766:                                             ; preds = %6758
  store i64 %6761, i64* %6762, align 4, !dbg !720
  br label %6767, !dbg !721

6767:                                             ; preds = %6766, %6764
  %6768 = load i32, i32* %6404, align 4, !dbg !722
  %6769 = add i32 %6768, 1, !dbg !722
  store i32 %6769, i32* %6404, align 4, !dbg !722
  %6770 = load i64, i64* %6762, align 4, !dbg !723
  %6771 = icmp slt i64 %6770, 127, !dbg !724
  %6772 = icmp slt i64 %6770, 32767, !dbg !725
  %6773 = icmp slt i64 %6770, 8388607, !dbg !726
  %6774 = icmp slt i64 %6770, 2147483647, !dbg !727
  br i1 %6771, label %6775, label %6784, !dbg !728

6775:                                             ; preds = %6767
  %6776 = and i64 %6761, 1, !dbg !729
  %6777 = icmp eq i64 %6776, %6761, !dbg !730
  br i1 %6777, label %6778, label %6781, !dbg !731

6778:                                             ; preds = %6775
  %6779 = trunc i64 %6770 to i32, !dbg !732
  %6780 = add i32 %6779, 8, !dbg !733
  store i32 %6780, i32* %6748, align 4, !dbg !734
  br label %6847, !dbg !735

6781:                                             ; preds = %6775
  %6782 = load i64, i64* %6403, align 4, !dbg !736
  %6783 = add i64 %6782, 1, !dbg !736
  store i64 %6783, i64* %6403, align 4, !dbg !736
  store i32 1, i32* %6748, align 4, !dbg !737
  br label %6847, !dbg !738

6784:                                             ; preds = %6767
  %6785 = load i64, i64* %6403, align 4, !dbg !739
  br i1 %6772, label %6786, label %6788, !dbg !740

6786:                                             ; preds = %6784
  %6787 = add i64 %6785, 2, !dbg !741
  store i64 %6787, i64* %6403, align 4, !dbg !741
  store i32 2, i32* %6748, align 4, !dbg !742
  br label %6847, !dbg !743

6788:                                             ; preds = %6784
  br i1 %6773, label %6789, label %6791, !dbg !744

6789:                                             ; preds = %6788
  %6790 = add i64 %6785, 3, !dbg !745
  store i64 %6790, i64* %6403, align 4, !dbg !745
  store i32 3, i32* %6748, align 4, !dbg !746
  br label %6847, !dbg !747

6791:                                             ; preds = %6788
  br i1 %6774, label %6792, label %6794, !dbg !748

6792:                                             ; preds = %6791
  %6793 = add i64 %6785, 4, !dbg !749
  store i64 %6793, i64* %6403, align 4, !dbg !749
  store i32 4, i32* %6748, align 4, !dbg !750
  br label %6847, !dbg !751

6794:                                             ; preds = %6791
  %6795 = add i64 %6785, 8, !dbg !752
  store i64 %6795, i64* %6403, align 4, !dbg !752
  %6796 = and i16 %6741, 32, !dbg !753
  %6797 = icmp ne i16 %6796, 0, !dbg !753
  br i1 %6797, label %6798, label %6801, !dbg !754

6798:                                             ; preds = %6794
  %6799 = and i16 %6741, -33, !dbg !755
  %6800 = or i16 %6799, 8, !dbg !756
  store i16 %6800, i16* %6740, align 2, !dbg !757
  store i32 7, i32* %6748, align 4, !dbg !758
  br label %6847, !dbg !759

6801:                                             ; preds = %6794
  store i32 6, i32* %6748, align 4, !dbg !760
  br label %6847, !dbg !761

6802:                                             ; preds = %6757
  br i1 %6747, label %6803, label %6808, !dbg !762

6803:                                             ; preds = %6802
  %6804 = load i32, i32* %6404, align 4, !dbg !763
  %6805 = add i32 %6804, 1, !dbg !763
  store i32 %6805, i32* %6404, align 4, !dbg !763
  %6806 = load i64, i64* %6403, align 4, !dbg !764
  %6807 = add i64 %6806, 8, !dbg !764
  store i64 %6807, i64* %6403, align 4, !dbg !764
  store i32 7, i32* %6748, align 4, !dbg !765
  br label %6847, !dbg !766

6808:                                             ; preds = %6802
  %6809 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6739, i32 0, i32 4, !dbg !767
  %6810 = load i32, i32* %6809, align 4, !dbg !768
  %6811 = alloca i32, align 8, !dbg !769
  store i32 %6810, i32* %6811, align 4, !dbg !770
  %6812 = alloca i32, align 8, !dbg !771
  %6813 = add i32 %6810, %6810, !dbg !772
  %6814 = add i32 %6813, 12, !dbg !773
  %6815 = and i16 %6741, 2, !dbg !774
  %6816 = icmp ne i16 %6815, 0, !dbg !775
  %6817 = zext i1 %6816 to i32, !dbg !776
  %6818 = add i32 %6814, %6817, !dbg !777
  store i32 %6818, i32* %6812, align 4, !dbg !778
  %6819 = and i16 %6741, 16384, !dbg !779
  %6820 = icmp ne i16 %6819, 0, !dbg !780
  br i1 %6820, label %6821, label %6837, !dbg !781

6821:                                             ; preds = %6808
  %6822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6739, i32 0, i32 0, !dbg !782
  %6823 = bitcast %union.MemValue* %6822 to i32*, !dbg !783
  %6824 = load i32, i32* %6823, align 4, !dbg !784
  %6825 = add i32 %6824, %6824, !dbg !785
  %6826 = add i32 %6818, %6825, !dbg !786
  store i32 %6826, i32* %6812, align 4, !dbg !786
  %6827 = load i64, i64* %6403, align 4, !dbg !787
  %6828 = icmp ne i64 %6827, 0, !dbg !787
  br i1 %6828, label %6833, label %6829, !dbg !788

6829:                                             ; preds = %6821
  %6830 = zext i32 %6824 to i64, !dbg !789
  %6831 = load i64, i64* %6405, align 4, !dbg !790
  %6832 = add i64 %6831, %6830, !dbg !790
  store i64 %6832, i64* %6405, align 4, !dbg !790
  br label %6837, !dbg !791

6833:                                             ; preds = %6821
  %6834 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6739), !dbg !792
  %6835 = load i32, i32* %6811, align 4, !dbg !793
  %6836 = add i32 %6835, %6824, !dbg !793
  store i32 %6836, i32* %6811, align 4, !dbg !793
  br label %6837, !dbg !794

6837:                                             ; preds = %6829, %6833, %6808
  %6838 = load i32, i32* %6811, align 4, !dbg !795
  %6839 = zext i32 %6838 to i64, !dbg !796
  %6840 = load i64, i64* %6403, align 4, !dbg !797
  %6841 = add i64 %6840, %6839, !dbg !797
  store i64 %6841, i64* %6403, align 4, !dbg !797
  %6842 = load i32, i32* %6812, align 4, !dbg !798
  %6843 = zext i32 %6842 to i64, !dbg !799
  %6844 = call i32 @sqlite3VarintLen(i64 %6843), !dbg !800
  %6845 = load i32, i32* %6404, align 4, !dbg !801
  %6846 = add i32 %6845, %6844, !dbg !801
  store i32 %6846, i32* %6404, align 4, !dbg !801
  store i32 %6842, i32* %6748, align 4, !dbg !802
  br label %6847, !dbg !803

6847:                                             ; preds = %6786, %6789, %6792, %6798, %6801, %6781, %6778, %6837, %6803, %6754
  %6848 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 5, !dbg !805
  %6849 = load i32, i32* %6404, align 4, !dbg !806
  %6850 = zext i32 %6849 to i64, !dbg !807
  %6851 = icmp slt i32 %6849, 126, !dbg !808
  br i1 %6851, label %6852, label %6854, !dbg !809

6852:                                             ; preds = %6847
  %6853 = add i32 %6849, 1, !dbg !810
  store i32 %6853, i32* %6404, align 4, !dbg !810
  br label %6863, !dbg !811

6854:                                             ; preds = %6847
  %6855 = call i32 @sqlite3VarintLen(i64 %6850), !dbg !812
  %6856 = load i32, i32* %6404, align 4, !dbg !813
  %6857 = add i32 %6856, %6855, !dbg !813
  store i32 %6857, i32* %6404, align 4, !dbg !813
  %6858 = call i32 @sqlite3VarintLen(i64 %6850), !dbg !814
  %6859 = icmp slt i32 %6855, %6858, !dbg !815
  br i1 %6859, label %6860, label %6863, !dbg !816

6860:                                             ; preds = %6854
  %6861 = load i32, i32* %6404, align 4, !dbg !817
  %6862 = add i32 %6861, 1, !dbg !817
  store i32 %6862, i32* %6404, align 4, !dbg !817
  br label %6863, !dbg !818

6863:                                             ; preds = %6860, %6854, %6852
  %6864 = load i32, i32* %6404, align 4, !dbg !819
  %6865 = zext i32 %6864 to i64, !dbg !819
  %6866 = load i64, i64* %6403, align 4, !dbg !820
  %6867 = add i64 %6865, %6866, !dbg !820
  %6868 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 7, !dbg !821
  %6869 = load i32, i32* %6868, align 4, !dbg !822
  %6870 = zext i32 %6869 to i64, !dbg !823
  %6871 = load i64, i64* %6405, align 4, !dbg !824
  %6872 = add i64 %6867, %6871, !dbg !825
  %6873 = icmp sle i64 %6872, %6870, !dbg !826
  br i1 %6873, label %6874, label %6877, !dbg !827

6874:                                             ; preds = %6863
  %6875 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 6, !dbg !828
  %6876 = load i8*, i8** %6875, align 8, !dbg !829
  store i8* %6876, i8** %6848, align 8, !dbg !830
  br label %6880, !dbg !831

6877:                                             ; preds = %6863
  %6878 = trunc i64 %6867 to i32, !dbg !832
  %6879 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %6412, i32 %6878), !dbg !833
  br label %6880, !dbg !834

6880:                                             ; preds = %6877, %6874
  %6881 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 4, !dbg !835
  %6882 = trunc i64 %6867 to i32, !dbg !836
  store i32 %6882, i32* %6881, align 4, !dbg !837
  %6883 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 1, !dbg !838
  store i16 16, i16* %6883, align 2, !dbg !839
  %6884 = load i64, i64* %6405, align 4, !dbg !840
  %6885 = icmp ne i64 %6884, 0, !dbg !841
  br i1 %6885, label %6886, label %6892, !dbg !842

6886:                                             ; preds = %6880
  %6887 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6412, i32 0, i32 0, i32 0, !dbg !843
  %6888 = bitcast double* %6887 to i32*, !dbg !844
  %6889 = trunc i64 %6884 to i32, !dbg !845
  store i32 %6889, i32* %6888, align 4, !dbg !846
  %6890 = load i16, i16* %6883, align 2, !dbg !847
  %6891 = or i16 %6890, 16384, !dbg !848
  store i16 %6891, i16* %6883, align 2, !dbg !849
  br label %6892, !dbg !850

6892:                                             ; preds = %6886, %6880
  %6893 = alloca i8*, align 8, !dbg !851
  %6894 = load i8*, i8** %6848, align 8, !dbg !852
  store i8* %6894, i8** %6893, align 8, !dbg !853
  %6895 = load i32, i32* %6404, align 4, !dbg !854
  %6896 = zext i32 %6895 to i64, !dbg !855
  %6897 = getelementptr i8, i8* %6894, i32 %6895, !dbg !856
  store i8* %6897, i8** %6406, align 8, !dbg !857
  %6898 = call i32 @sqlite3PutVarint(i8* %6894, i64 %6896), !dbg !858
  %6899 = getelementptr i8, i8* %6894, i32 %6898, !dbg !859
  store i8* %6899, i8** %6893, align 8, !dbg !860
  %6900 = load i8*, i8** %6406, align 8, !dbg !861
  %6901 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6410, i32 0, i32 8, !dbg !862
  %6902 = load i32, i32* %6901, align 4, !dbg !863
  %6903 = zext i32 %6902 to i64, !dbg !864
  %6904 = call i32 @sqlite3PutVarint(i8* %6899, i64 %6903), !dbg !865
  %6905 = getelementptr i8, i8* %6899, i32 %6904, !dbg !866
  store i8* %6905, i8** %6893, align 8, !dbg !867
  %6906 = call i32 @sqlite3VdbeSerialPut(i8* %6900, %struct.sqlite3_value* %6410, i32 %6902), !dbg !868
  %6907 = getelementptr i8, i8* %6900, i32 %6906, !dbg !869
  %6908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6410, i32 1, !dbg !870
  %6909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6908, i32 0, i32 8, !dbg !862
  %6910 = load i32, i32* %6909, align 4, !dbg !863
  %6911 = zext i32 %6910 to i64, !dbg !864
  %6912 = call i32 @sqlite3PutVarint(i8* %6905, i64 %6911), !dbg !865
  %6913 = getelementptr i8, i8* %6905, i32 %6912, !dbg !866
  store i8* %6913, i8** %6893, align 8, !dbg !867
  %6914 = call i32 @sqlite3VdbeSerialPut(i8* %6907, %struct.sqlite3_value* %6908, i32 %6910), !dbg !868
  %6915 = getelementptr i8, i8* %6907, i32 %6914, !dbg !869
  %6916 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6908, i32 1, !dbg !870
  %6917 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6916, i32 0, i32 8, !dbg !862
  %6918 = load i32, i32* %6917, align 4, !dbg !863
  %6919 = zext i32 %6918 to i64, !dbg !864
  %6920 = call i32 @sqlite3PutVarint(i8* %6913, i64 %6919), !dbg !865
  %6921 = getelementptr i8, i8* %6913, i32 %6920, !dbg !866
  store i8* %6921, i8** %6893, align 8, !dbg !867
  %6922 = call i32 @sqlite3VdbeSerialPut(i8* %6915, %struct.sqlite3_value* %6916, i32 %6918), !dbg !868
  %6923 = getelementptr i8, i8* %6915, i32 %6922, !dbg !869
  %6924 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6916, i32 1, !dbg !870
  %6925 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6924, i32 0, i32 8, !dbg !862
  %6926 = load i32, i32* %6925, align 4, !dbg !863
  %6927 = zext i32 %6926 to i64, !dbg !864
  %6928 = call i32 @sqlite3PutVarint(i8* %6921, i64 %6927), !dbg !865
  %6929 = getelementptr i8, i8* %6921, i32 %6928, !dbg !866
  store i8* %6929, i8** %6893, align 8, !dbg !867
  %6930 = call i32 @sqlite3VdbeSerialPut(i8* %6923, %struct.sqlite3_value* %6924, i32 %6926), !dbg !868
  call void @llvm.stackrestore(i8* %6402), !dbg !871
  br label %6931, !dbg !74

6931:                                             ; preds = %6892, %14
  %6932 = call i8* @llvm.stacksave(), !dbg !1142
  %6933 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1145
  %6934 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6933, align 8, !dbg !1146
  %6935 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !1147
  %6936 = call i8* @llvm.stacksave(), !dbg !1148
  %6937 = alloca i32, align 8, !dbg !1149
  store i32 0, i32* %6937, align 4, !dbg !1148
  %6938 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6935, i32 0, i32 1, !dbg !1148
  %6939 = load i16, i16* %6938, align 2, !dbg !1148
  %6940 = and i16 %6939, 16384, !dbg !1148
  %6941 = icmp ne i16 %6940, 0, !dbg !1148
  br i1 %6941, label %6942, label %6944, !dbg !1148

6942:                                             ; preds = %6931
  %6943 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6935), !dbg !1148
  store i32 %6943, i32* %6937, align 4, !dbg !1148
  br label %6944, !dbg !1149

6944:                                             ; preds = %6942, %6931
  call void @llvm.stackrestore(i8* %6936), !dbg !1148
  %6945 = load i32, i32* %6937, align 4, !dbg !1148
  %6946 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %6934, %struct.sqlite3_value* %6935), !dbg !1150
  call void @llvm.stackrestore(i8* %6932), !dbg !1151
  br label %6947, !dbg !74

6947:                                             ; preds = %6944, %5357, %5320, %5045, %5016, %4746, %4718, %4448, %4411, %4136, %4107, %14
  %6948 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !901
  %6949 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6948, align 8, !dbg !904
  %6950 = ptrtoint %struct.VdbeCursor* %6949 to i64, !dbg !905
  %6951 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6949, i32 0, i32 12, i32 0, !dbg !906
  %6952 = load %struct.BtCursor*, %struct.BtCursor** %6951, align 8, !dbg !907
  %6953 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %6952, i32 0), !dbg !908
  %6954 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6949, i32 0, i32 2, !dbg !909
  %6955 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6949, i32 0, i32 9, !dbg !910
  store i32 0, i32* %6955, align 4, !dbg !911
  %6956 = icmp eq i32 %6953, 0, !dbg !912
  br i1 %6956, label %6957, label %6958, !dbg !913

6957:                                             ; preds = %6947
  store i8 0, i8* %6954, align 1, !dbg !914
  br label %3821, !dbg !915

6958:                                             ; preds = %6947
  store i8 1, i8* %6954, align 1, !dbg !916
  br label %6959, !dbg !917

6959:                                             ; preds = %3755, %811, %774, %6958, %3821, %3815, %3693, %14
  %6960 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !901
  %6961 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6960, align 8, !dbg !904
  %6962 = ptrtoint %struct.VdbeCursor* %6961 to i64, !dbg !905
  %6963 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6961, i32 0, i32 12, i32 0, !dbg !906
  %6964 = load %struct.BtCursor*, %struct.BtCursor** %6963, align 8, !dbg !907
  %6965 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %6964, i32 0), !dbg !908
  %6966 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6961, i32 0, i32 2, !dbg !909
  %6967 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6961, i32 0, i32 9, !dbg !910
  store i32 0, i32* %6967, align 4, !dbg !911
  %6968 = icmp eq i32 %6965, 0, !dbg !912
  br i1 %6968, label %6969, label %6970, !dbg !913

6969:                                             ; preds = %6959
  store i8 0, i8* %6966, align 1, !dbg !914
  br label %190, !dbg !915

6970:                                             ; preds = %6959
  store i8 1, i8* %6966, align 1, !dbg !916
  br label %6971, !dbg !917

6971:                                             ; preds = %6970, %184, %14
  %6972 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 8, i32 4, i32 -1, i8 3), !dbg !1152
  %6973 = ptrtoint %struct.VdbeCursor* %6972 to i64, !dbg !1155
  %6974 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6972, i32 0, i32 2, !dbg !1156
  store i8 1, i8* %6974, align 1, !dbg !1157
  %6975 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6972, i32 0, i32 10, !dbg !1158
  store i32 14, i32* %6975, align 4, !dbg !1159
  %6976 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6972, i32 0, i32 4, !dbg !1160
  store i8 1, i8* %6976, align 1, !dbg !1161
  %6977 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !1162
  %6978 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6972, i32 0, i32 12, i32 0, !dbg !1163
  store %struct.BtCursor* %6977, %struct.BtCursor** %6978, align 8, !dbg !1164
  br label %6979, !dbg !74

6979:                                             ; preds = %6971, %14
  %6980 = call i8* @llvm.stacksave(), !dbg !133
  %6981 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %6982 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %6981, i32 6, !dbg !137
  %6983 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6982, align 8, !dbg !138
  %6984 = alloca i32, align 4, !dbg !139
  store i32 1, i32* %6984, align 4, !dbg !140
  %6985 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6983, i32 0, i32 0, !dbg !141
  %6986 = load i8, i8* %6985, align 1, !dbg !142
  %6987 = icmp eq i8 %6986, 1, !dbg !143
  %6988 = alloca i32, align 4, !dbg !144
  store i32 0, i32* %6988, align 4, !dbg !145
  br i1 %6987, label %6989, label %6991, !dbg !146

6989:                                             ; preds = %6979
  %6990 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %6983, i32* %6984), !dbg !147
  store i32 %6990, i32* %6988, align 4, !dbg !148
  br label %6997, !dbg !149

6991:                                             ; preds = %6979
  %6992 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6983, i32 0, i32 12, i32 0, !dbg !150
  %6993 = load %struct.BtCursor*, %struct.BtCursor** %6992, align 8, !dbg !151
  %6994 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %6993, i32* %6984), !dbg !152
  store i32 %6994, i32* %6988, align 4, !dbg !153
  %6995 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6983, i32 0, i32 3, !dbg !154
  store i8 0, i8* %6995, align 1, !dbg !155
  %6996 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6983, i32 0, i32 9, !dbg !156
  store i32 0, i32* %6996, align 4, !dbg !157
  br label %6997, !dbg !158

6997:                                             ; preds = %6991, %6989
  %6998 = load i32, i32* %6988, align 4, !dbg !159
  %6999 = load i32, i32* %6984, align 4, !dbg !160
  %7000 = trunc i32 %6999 to i8, !dbg !161
  %7001 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6983, i32 0, i32 2, !dbg !162
  store i8 %7000, i8* %7001, align 1, !dbg !163
  call void @llvm.stackrestore(i8* %6980), !dbg !164
  %7002 = icmp ne i32 %6999, 0, !dbg !165
  br i1 %7002, label %9031, label %7003, !dbg !166

7003:                                             ; preds = %8849, %6997, %14
  %7004 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !1165
  %7005 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !1168
  %7006 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %7005, i32 6, !dbg !1169
  %7007 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7006, align 8, !dbg !1170
  %7008 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %7007, %struct.sqlite3_value* %7004), !dbg !1171
  %7009 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %7005, i32 8, !dbg !1172
  %7010 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7009, align 8, !dbg !1173
  %7011 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7010, i32 0, i32 9, !dbg !1174
  store i32 0, i32* %7011, align 4, !dbg !1175
  br label %7012, !dbg !74

7012:                                             ; preds = %7003, %14
  %7013 = call i8* @llvm.stacksave(), !dbg !167
  %7014 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %7015 = load i8, i8* %7014, align 1, !dbg !171
  %7016 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %7016, align 4, !dbg !173
  %7017 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %7018 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %7019 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7017, align 8, !dbg !176
  store %struct.VdbeCursor* %7019, %struct.VdbeCursor** %7018, align 8, !dbg !177
  %7020 = alloca i8*, align 8, !dbg !178
  %7021 = alloca i32, align 4, !dbg !179
  %7022 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7018, i32* %7016), !dbg !180
  %7023 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7018, align 8, !dbg !181
  %7024 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !182
  %7025 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 16, !dbg !183
  %7026 = load i16, i16* %7025, align 2, !dbg !184
  %7027 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 19, !dbg !185
  %7028 = load i32*, i32** %7027, align 8, !dbg !186
  %7029 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 0, !dbg !187
  %7030 = load i8, i8* %7029, align 1, !dbg !188
  %7031 = icmp ne i8 %7030, 3, !dbg !189
  %7032 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 2, !dbg !190
  %7033 = load i8, i8* %7032, align 1, !dbg !191
  %7034 = icmp ne i8 %7033, 0, !dbg !192
  %7035 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 14, !dbg !193
  %7036 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 21, !dbg !194
  %7037 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 22, !dbg !195
  %7038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 20, !dbg !196
  %7039 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 17, !dbg !197
  %7040 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 9, !dbg !198
  %7041 = load i32, i32* %7040, align 4, !dbg !199
  %7042 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %7043 = load i32, i32* %7042, align 4, !dbg !201
  %7044 = icmp ne i32 %7041, %7043, !dbg !202
  br i1 %7044, label %7045, label %7087, !dbg !203

7045:                                             ; preds = %7012
  br i1 %7034, label %7067, label %7062, !dbg !204

7046:                                             ; preds = %7062, %7069
  %7047 = load i32, i32* %7042, align 4, !dbg !205
  store i32 %7047, i32* %7040, align 4, !dbg !206
  %7048 = load i8*, i8** %7038, align 8, !dbg !207
  %7049 = load i8, i8* %7048, align 1, !dbg !208
  %7050 = icmp sgt i8 %7049, -1, !dbg !211
  br i1 %7050, label %7051, label %7053, !dbg !212

7051:                                             ; preds = %7046
  %7052 = zext i8 %7049 to i32, !dbg !213
  store i32 %7052, i32* %7028, align 4, !dbg !214
  store i32 1, i32* %7035, align 4, !dbg !215
  br label %7056, !dbg !216

7053:                                             ; preds = %7046
  %7054 = call i8 @sqlite3GetVarint32(i8* %7048, i32* %7028), !dbg !217
  %7055 = zext i8 %7054 to i32, !dbg !218
  store i32 %7055, i32* %7035, align 4, !dbg !219
  br label %7056, !dbg !220

7056:                                             ; preds = %7053, %7051
  store i16 0, i16* %7039, align 2, !dbg !221
  %7057 = load i32, i32* %7037, align 4, !dbg !222
  %7058 = load i32, i32* %7028, align 4, !dbg !223
  %7059 = icmp ult i32 %7057, %7058, !dbg !224
  br i1 %7059, label %7061, label %7060, !dbg !225

7060:                                             ; preds = %7056
  store i8* %7048, i8** %7020, align 8, !dbg !226
  br label %7178, !dbg !227

7061:                                             ; preds = %7056
  store i8* null, i8** %7038, align 8, !dbg !228
  store i32 0, i32* %7037, align 4, !dbg !229
  br label %7087, !dbg !230

7062:                                             ; preds = %7045
  %7063 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 12, i32 0, !dbg !231
  %7064 = load %struct.BtCursor*, %struct.BtCursor** %7063, align 8, !dbg !232
  %7065 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7064), !dbg !233
  store i32 %7065, i32* %7036, align 4, !dbg !234
  %7066 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7064, i32* %7037), !dbg !235
  store i8* %7066, i8** %7038, align 8, !dbg !236
  br label %7046, !dbg !237

7067:                                             ; preds = %7045
  %7068 = icmp eq i8 %7030, 3, !dbg !238
  br i1 %7068, label %7069, label %7080, !dbg !239

7069:                                             ; preds = %7067
  %7070 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 10, !dbg !240
  %7071 = load i32, i32* %7070, align 4, !dbg !241
  %7072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7071, !dbg !242
  %7073 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7072, i32 0, i32 1, !dbg !243
  %7074 = load i16, i16* %7073, align 2, !dbg !244
  %7075 = and i16 %7074, 16, !dbg !245
  %7076 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7072, i32 0, i32 4, !dbg !246
  %7077 = load i32, i32* %7076, align 4, !dbg !247
  store i32 %7077, i32* %7036, align 4, !dbg !248
  store i32 %7077, i32* %7037, align 4, !dbg !249
  %7078 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7072, i32 0, i32 5, !dbg !250
  %7079 = load i8*, i8** %7078, align 8, !dbg !251
  store i8* %7079, i8** %7038, align 8, !dbg !252
  br label %7046, !dbg !253

7080:                                             ; preds = %7067
  %7081 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 1, !dbg !254
  %7082 = load i16, i16* %7081, align 2, !dbg !254
  %7083 = and i16 %7082, 9216, !dbg !254
  %7084 = icmp ne i16 %7083, 0, !dbg !254
  br i1 %7084, label %7085, label %7086, !dbg !254

7085:                                             ; preds = %7080
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7024), !dbg !254
  br label %7266, !dbg !254

7086:                                             ; preds = %7080
  store i16 1, i16* %7081, align 2, !dbg !254
  br label %7266, !dbg !254

7087:                                             ; preds = %7061, %7012
  %7088 = load i16, i16* %7039, align 2, !dbg !255
  %7089 = icmp ule i16 %7088, 0, !dbg !256
  br i1 %7089, label %7170, label %7167, !dbg !257

7090:                                             ; preds = %7167, %7256
  %7091 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 1, !dbg !258
  %7092 = load i16, i16* %7091, align 2, !dbg !259
  %7093 = and i16 9216, %7092, !dbg !260
  %7094 = icmp eq i16 0, %7093, !dbg !261
  br i1 %7094, label %7095, label %7099, !dbg !262

7095:                                             ; preds = %7090
  %7096 = icmp ne i16 %7093, 0, !dbg !263
  br i1 %7096, label %7097, label %7098, !dbg !263

7097:                                             ; preds = %7095
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7024), !dbg !263
  br label %7099, !dbg !263

7098:                                             ; preds = %7095
  store i16 1, i16* %7091, align 2, !dbg !263
  br label %7099, !dbg !263

7099:                                             ; preds = %7097, %7098, %7090
  %7100 = load i32, i32* %7021, align 4, !dbg !264
  %7101 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 23, i32 0, !dbg !265
  %7102 = load i32, i32* %7101, align 4, !dbg !266
  %7103 = load i32, i32* %7037, align 4, !dbg !267
  %7104 = getelementptr i32, i32* %7028, i32 1, !dbg !268
  %7105 = load i32, i32* %7104, align 4, !dbg !269
  %7106 = icmp sge i32 %7103, %7105, !dbg !270
  br i1 %7106, label %7107, label %7146, !dbg !271

7107:                                             ; preds = %7099
  %7108 = load i8*, i8** %7038, align 8, !dbg !272
  %7109 = ptrtoint i8* %7108 to i64, !dbg !273
  %7110 = load i32, i32* %7028, align 4, !dbg !275
  %7111 = zext i32 %7110 to i64, !dbg !276
  %7112 = add i64 %7109, %7111, !dbg !277
  %7113 = inttoptr i64 %7112 to i8*, !dbg !278
  store i8* %7113, i8** %7020, align 8, !dbg !279
  %7114 = load i32, i32* %7021, align 4, !dbg !280
  %7115 = icmp ult i32 %7114, 12, !dbg !281
  br i1 %7115, label %7116, label %7118, !dbg !282

7116:                                             ; preds = %7107
  %7117 = call i32 @sqlite3VdbeSerialGet(i8* %7113, i32 %7114, %struct.sqlite3_value* %7024), !dbg !283
  br label %7266, !dbg !284

7118:                                             ; preds = %7107
  %7119 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %7119, align 2, !dbg !286
  %7120 = getelementptr i16, i16* %7119, i32 1, !dbg !287
  store i16 514, i16* %7120, align 2, !dbg !288
  %7121 = load i32, i32* %7021, align 4, !dbg !289
  %7122 = sub i32 %7121, 12, !dbg !290
  %7123 = lshr i32 %7122, 1, !dbg !291
  %7124 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 4, !dbg !292
  store i32 %7123, i32* %7124, align 4, !dbg !293
  %7125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 2, !dbg !294
  store i8 %7015, i8* %7125, align 1, !dbg !295
  %7126 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 5, !dbg !296
  %7127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 7, !dbg !297
  %7128 = load i32, i32* %7127, align 4, !dbg !298
  %7129 = add i32 %7123, 2, !dbg !299
  %7130 = icmp slt i32 %7128, %7129, !dbg !300
  br i1 %7130, label %7131, label %7133, !dbg !301

7131:                                             ; preds = %7118
  store i16 1, i16* %7091, align 2, !dbg !302
  %7132 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7024, i32 %7129, i32 0), !dbg !303
  br label %7136, !dbg !304

7133:                                             ; preds = %7118
  %7134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 6, !dbg !305
  %7135 = load i8*, i8** %7134, align 8, !dbg !306
  store i8* %7135, i8** %7126, align 8, !dbg !307
  br label %7136, !dbg !308

7136:                                             ; preds = %7133, %7131
  %7137 = zext i32 %7123 to i64, !dbg !309
  %7138 = load i8*, i8** %7126, align 8, !dbg !310
  %7139 = load i8*, i8** %7020, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7138, i8* %7139, i64 %7137, i1 false), !dbg !312
  %7140 = getelementptr i8, i8* %7138, i32 %7123, !dbg !313
  store i8 0, i8* %7140, align 1, !dbg !314
  %7141 = add i32 %7123, 1, !dbg !315
  %7142 = getelementptr i8, i8* %7138, i32 %7141, !dbg !316
  store i8 0, i8* %7142, align 1, !dbg !317
  %7143 = and i32 %7121, 1, !dbg !318
  %7144 = getelementptr i16, i16* %7119, i32 %7143, !dbg !319
  %7145 = load i16, i16* %7144, align 2, !dbg !320
  store i16 %7145, i16* %7091, align 2, !dbg !321
  br label %7266, !dbg !322

7146:                                             ; preds = %7099
  %7147 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 2, !dbg !323
  store i8 %7015, i8* %7147, align 1, !dbg !324
  %7148 = load i32, i32* %7021, align 4, !dbg !325
  %7149 = and i32 %7148, 1, !dbg !326
  %7150 = icmp eq i32 %7149, 0, !dbg !327
  %7151 = icmp sge i32 %7148, 12, !dbg !328
  %7152 = and i1 %7151, %7150, !dbg !329
  %7153 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7148), !dbg !330
  %7154 = icmp eq i32 %7153, 0, !dbg !331
  br i1 %7154, label %7165, label %7155, !dbg !332

7155:                                             ; preds = %7146
  %7156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 12, i32 0, !dbg !333
  %7157 = load %struct.BtCursor*, %struct.BtCursor** %7156, align 8, !dbg !334
  %7158 = load i32, i32* %7028, align 4, !dbg !336
  %7159 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7157, i32 %7158, i32 %7153, %struct.sqlite3_value* %7024), !dbg !337
  %7160 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 5, !dbg !338
  %7161 = load i8*, i8** %7160, align 8, !dbg !339
  %7162 = call i32 @sqlite3VdbeSerialGet(i8* %7161, i32 %7148, %struct.sqlite3_value* %7024), !dbg !340
  %7163 = load i16, i16* %7091, align 2, !dbg !341
  %7164 = and i16 %7163, -4097, !dbg !342
  store i16 %7164, i16* %7091, align 2, !dbg !343
  br label %7266, !dbg !344

7165:                                             ; preds = %7146
  %7166 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7148, %struct.sqlite3_value* %7024), !dbg !345
  br label %7266, !dbg !346

7167:                                             ; preds = %7087
  %7168 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 23, i32 0, !dbg !347
  %7169 = load i32, i32* %7168, align 4, !dbg !348
  store i32 %7169, i32* %7021, align 4, !dbg !349
  br label %7090, !dbg !350

7170:                                             ; preds = %7087
  %7171 = load i32, i32* %7035, align 4, !dbg !351
  %7172 = load i32, i32* %7028, align 4, !dbg !352
  %7173 = icmp ult i32 %7171, %7172, !dbg !353
  br i1 %7173, label %7174, label %7255, !dbg !354

7174:                                             ; preds = %7170
  %7175 = load i8*, i8** %7038, align 8, !dbg !355
  %7176 = icmp eq i8* %7175, null, !dbg !356
  br i1 %7176, label %7178, label %7177, !dbg !357

7177:                                             ; preds = %7174
  store i8* %7175, i8** %7020, align 8, !dbg !358
  br label %7178, !dbg !359

7178:                                             ; preds = %7177, %7174, %7060
  %7179 = alloca i32, align 4, !dbg !360
  %7180 = load i16, i16* %7039, align 2, !dbg !361
  %7181 = zext i16 %7180 to i32, !dbg !362
  store i32 %7181, i32* %7179, align 4, !dbg !363
  %7182 = alloca i64, align 8, !dbg !364
  %7183 = getelementptr i32, i32* %7028, i32 %7181, !dbg !365
  %7184 = load i32, i32* %7183, align 4, !dbg !366
  %7185 = zext i32 %7184 to i64, !dbg !367
  store i64 %7185, i64* %7182, align 4, !dbg !368
  %7186 = load i8*, i8** %7020, align 8, !dbg !369
  %7187 = load i32, i32* %7035, align 4, !dbg !370
  %7188 = alloca i8*, align 8, !dbg !371
  %7189 = getelementptr i8, i8* %7186, i32 %7187, !dbg !372
  store i8* %7189, i8** %7188, align 8, !dbg !373
  %7190 = load i32, i32* %7028, align 4, !dbg !374
  %7191 = getelementptr i8, i8* %7186, i32 %7190, !dbg !375
  br label %7192, !dbg !376

7192:                                             ; preds = %7199, %7178
  %7193 = load i32, i32* %7179, align 4, !dbg !377
  %7194 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7023, i32 0, i32 23, i32 %7193, !dbg !378
  %7195 = load i8*, i8** %7188, align 8, !dbg !379
  %7196 = load i8, i8* %7195, align 1, !dbg !380
  %7197 = zext i8 %7196 to i32, !dbg !381
  store i32 %7197, i32* %7021, align 4, !dbg !382
  store i32 %7197, i32* %7194, align 4, !dbg !383
  %7198 = icmp sgt i8 %7196, -1, !dbg !384
  br i1 %7198, label %7222, label %7213, !dbg !385

7199:                                             ; preds = %7213, %7222
  %7200 = load i32, i32* %7179, align 4, !dbg !386
  %7201 = add i32 %7200, 1, !dbg !387
  store i32 %7201, i32* %7179, align 4, !dbg !388
  %7202 = load i64, i64* %7182, align 4, !dbg !389
  %7203 = and i64 4294967295, %7202, !dbg !390
  %7204 = trunc i64 %7203 to i32, !dbg !391
  %7205 = getelementptr i32, i32* %7028, i32 %7201, !dbg !392
  store i32 %7204, i32* %7205, align 4, !dbg !393
  %7206 = load i32, i32* %7179, align 4, !dbg !394
  %7207 = icmp sle i32 %7206, 0, !dbg !395
  %7208 = load i8*, i8** %7188, align 8, !dbg !396
  %7209 = ptrtoint i8* %7208 to i64, !dbg !397
  %7210 = ptrtoint i8* %7191 to i64, !dbg !398
  %7211 = icmp ult i64 %7209, %7210, !dbg !399
  %7212 = and i1 %7207, %7211, !dbg !400
  br i1 %7212, label %7192, label %7231, !dbg !401

7213:                                             ; preds = %7192
  %7214 = load i8*, i8** %7188, align 8, !dbg !402
  %7215 = call i8 @sqlite3GetVarint32(i8* %7214, i32* %7021), !dbg !403
  %7216 = getelementptr i8, i8* %7214, i8 %7215, !dbg !404
  store i8* %7216, i8** %7188, align 8, !dbg !405
  %7217 = load i32, i32* %7021, align 4, !dbg !406
  store i32 %7217, i32* %7194, align 4, !dbg !407
  %7218 = load i64, i64* %7182, align 4, !dbg !408
  %7219 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7217), !dbg !409
  %7220 = zext i32 %7219 to i64, !dbg !410
  %7221 = add i64 %7218, %7220, !dbg !411
  store i64 %7221, i64* %7182, align 4, !dbg !412
  br label %7199, !dbg !413

7222:                                             ; preds = %7192
  %7223 = getelementptr i8, i8* %7195, i32 1, !dbg !414
  store i8* %7223, i8** %7188, align 8, !dbg !415
  %7224 = load i32, i32* %7021, align 4, !dbg !416
  %7225 = trunc i32 %7224 to i8, !dbg !417
  %7226 = getelementptr i8, i8* %4, i8 %7225, !dbg !418
  %7227 = load i8, i8* %7226, align 1, !dbg !419
  %7228 = zext i8 %7227 to i64, !dbg !420
  %7229 = load i64, i64* %7182, align 4, !dbg !421
  %7230 = add i64 %7229, %7228, !dbg !422
  store i64 %7230, i64* %7182, align 4, !dbg !423
  br label %7199, !dbg !424

7231:                                             ; preds = %7199
  %7232 = load i64, i64* %7182, align 4, !dbg !425
  %7233 = load i32, i32* %7036, align 4, !dbg !426
  %7234 = zext i32 %7233 to i64, !dbg !427
  %7235 = icmp uge i64 %7209, %7210, !dbg !428
  %7236 = icmp ugt i64 %7209, %7210, !dbg !429
  %7237 = icmp ne i64 %7232, %7234, !dbg !430
  %7238 = icmp ugt i64 %7232, %7234, !dbg !431
  %7239 = or i1 %7236, %7237, !dbg !432
  %7240 = and i1 %7235, %7239, !dbg !433
  %7241 = or i1 %7240, %7238, !dbg !434
  br i1 %7241, label %7242, label %7246, !dbg !435

7242:                                             ; preds = %7231
  %7243 = load i32, i32* %7028, align 4, !dbg !436
  %7244 = icmp eq i32 %7243, 0, !dbg !437
  br i1 %7244, label %7245, label %7246, !dbg !438

7245:                                             ; preds = %7242
  store i32 0, i32* %7179, align 4, !dbg !439
  store i8* %7191, i8** %7188, align 8, !dbg !440
  br label %7246, !dbg !441

7246:                                             ; preds = %7245, %7242, %7231
  %7247 = load i32, i32* %7179, align 4, !dbg !442
  %7248 = trunc i32 %7247 to i16, !dbg !443
  store i16 %7248, i16* %7039, align 2, !dbg !444
  %7249 = load i8*, i8** %7188, align 8, !dbg !445
  %7250 = ptrtoint i8* %7249 to i64, !dbg !446
  %7251 = load i8*, i8** %7020, align 8, !dbg !447
  %7252 = ptrtoint i8* %7251 to i64, !dbg !448
  %7253 = sub i64 %7250, %7252, !dbg !449
  %7254 = trunc i64 %7253 to i32, !dbg !450
  store i32 %7254, i32* %7035, align 4, !dbg !451
  br label %7256, !dbg !452

7255:                                             ; preds = %7170
  store i32 0, i32* %7021, align 4, !dbg !453
  br label %7256, !dbg !454

7256:                                             ; preds = %7246, %7255
  %7257 = load i16, i16* %7039, align 2, !dbg !455
  %7258 = icmp sle i16 %7257, 0, !dbg !456
  br i1 %7258, label %7259, label %7090, !dbg !457

7259:                                             ; preds = %7256
  %7260 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7024, i32 0, i32 1, !dbg !458
  %7261 = load i16, i16* %7260, align 2, !dbg !458
  %7262 = and i16 %7261, 9216, !dbg !458
  %7263 = icmp ne i16 %7262, 0, !dbg !458
  br i1 %7263, label %7264, label %7265, !dbg !458

7264:                                             ; preds = %7259
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7024), !dbg !458
  br label %7266, !dbg !458

7265:                                             ; preds = %7259
  store i16 1, i16* %7260, align 2, !dbg !458
  br label %7266, !dbg !458

7266:                                             ; preds = %7264, %7265, %7136, %7116, %7155, %7165, %7085, %7086
  call void @llvm.stackrestore(i8* %7013), !dbg !459
  br label %7267, !dbg !74

7267:                                             ; preds = %7266, %14
  %7268 = call i8* @llvm.stacksave(), !dbg !167
  %7269 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %7270 = load i8, i8* %7269, align 1, !dbg !171
  %7271 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %7271, align 4, !dbg !173
  %7272 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %7273 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %7274 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7272, align 8, !dbg !176
  store %struct.VdbeCursor* %7274, %struct.VdbeCursor** %7273, align 8, !dbg !177
  %7275 = alloca i8*, align 8, !dbg !178
  %7276 = alloca i32, align 4, !dbg !179
  %7277 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7273, i32* %7271), !dbg !180
  %7278 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7273, align 8, !dbg !181
  %7279 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !182
  %7280 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 16, !dbg !183
  %7281 = load i16, i16* %7280, align 2, !dbg !184
  %7282 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 19, !dbg !185
  %7283 = load i32*, i32** %7282, align 8, !dbg !186
  %7284 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 0, !dbg !187
  %7285 = load i8, i8* %7284, align 1, !dbg !188
  %7286 = icmp ne i8 %7285, 3, !dbg !189
  %7287 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 2, !dbg !190
  %7288 = load i8, i8* %7287, align 1, !dbg !191
  %7289 = icmp ne i8 %7288, 0, !dbg !192
  %7290 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 14, !dbg !193
  %7291 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 21, !dbg !194
  %7292 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 22, !dbg !195
  %7293 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 20, !dbg !196
  %7294 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 17, !dbg !197
  %7295 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 9, !dbg !198
  %7296 = load i32, i32* %7295, align 4, !dbg !199
  %7297 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %7298 = load i32, i32* %7297, align 4, !dbg !201
  %7299 = icmp ne i32 %7296, %7298, !dbg !202
  br i1 %7299, label %7300, label %7342, !dbg !203

7300:                                             ; preds = %7267
  br i1 %7289, label %7322, label %7317, !dbg !204

7301:                                             ; preds = %7317, %7324
  %7302 = load i32, i32* %7297, align 4, !dbg !205
  store i32 %7302, i32* %7295, align 4, !dbg !206
  %7303 = load i8*, i8** %7293, align 8, !dbg !207
  %7304 = load i8, i8* %7303, align 1, !dbg !208
  %7305 = icmp sgt i8 %7304, -1, !dbg !211
  br i1 %7305, label %7306, label %7308, !dbg !212

7306:                                             ; preds = %7301
  %7307 = zext i8 %7304 to i32, !dbg !213
  store i32 %7307, i32* %7283, align 4, !dbg !214
  store i32 1, i32* %7290, align 4, !dbg !215
  br label %7311, !dbg !216

7308:                                             ; preds = %7301
  %7309 = call i8 @sqlite3GetVarint32(i8* %7303, i32* %7283), !dbg !217
  %7310 = zext i8 %7309 to i32, !dbg !218
  store i32 %7310, i32* %7290, align 4, !dbg !219
  br label %7311, !dbg !220

7311:                                             ; preds = %7308, %7306
  store i16 0, i16* %7294, align 2, !dbg !221
  %7312 = load i32, i32* %7292, align 4, !dbg !222
  %7313 = load i32, i32* %7283, align 4, !dbg !223
  %7314 = icmp ult i32 %7312, %7313, !dbg !224
  br i1 %7314, label %7316, label %7315, !dbg !225

7315:                                             ; preds = %7311
  store i8* %7303, i8** %7275, align 8, !dbg !226
  br label %7435, !dbg !227

7316:                                             ; preds = %7311
  store i8* null, i8** %7293, align 8, !dbg !228
  store i32 0, i32* %7292, align 4, !dbg !229
  br label %7342, !dbg !230

7317:                                             ; preds = %7300
  %7318 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 12, i32 0, !dbg !231
  %7319 = load %struct.BtCursor*, %struct.BtCursor** %7318, align 8, !dbg !232
  %7320 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7319), !dbg !233
  store i32 %7320, i32* %7291, align 4, !dbg !234
  %7321 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7319, i32* %7292), !dbg !235
  store i8* %7321, i8** %7293, align 8, !dbg !236
  br label %7301, !dbg !237

7322:                                             ; preds = %7300
  %7323 = icmp eq i8 %7285, 3, !dbg !238
  br i1 %7323, label %7324, label %7335, !dbg !239

7324:                                             ; preds = %7322
  %7325 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 10, !dbg !240
  %7326 = load i32, i32* %7325, align 4, !dbg !241
  %7327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7326, !dbg !242
  %7328 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7327, i32 0, i32 1, !dbg !243
  %7329 = load i16, i16* %7328, align 2, !dbg !244
  %7330 = and i16 %7329, 16, !dbg !245
  %7331 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7327, i32 0, i32 4, !dbg !246
  %7332 = load i32, i32* %7331, align 4, !dbg !247
  store i32 %7332, i32* %7291, align 4, !dbg !248
  store i32 %7332, i32* %7292, align 4, !dbg !249
  %7333 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7327, i32 0, i32 5, !dbg !250
  %7334 = load i8*, i8** %7333, align 8, !dbg !251
  store i8* %7334, i8** %7293, align 8, !dbg !252
  br label %7301, !dbg !253

7335:                                             ; preds = %7322
  %7336 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 1, !dbg !254
  %7337 = load i16, i16* %7336, align 2, !dbg !254
  %7338 = and i16 %7337, 9216, !dbg !254
  %7339 = icmp ne i16 %7338, 0, !dbg !254
  br i1 %7339, label %7340, label %7341, !dbg !254

7340:                                             ; preds = %7335
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7279), !dbg !254
  br label %7523, !dbg !254

7341:                                             ; preds = %7335
  store i16 1, i16* %7336, align 2, !dbg !254
  br label %7523, !dbg !254

7342:                                             ; preds = %7316, %7267
  %7343 = load i16, i16* %7294, align 2, !dbg !255
  %7344 = icmp ule i16 %7343, 1, !dbg !256
  br i1 %7344, label %7427, label %7424, !dbg !257

7345:                                             ; preds = %7424, %7513
  %7346 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 1, !dbg !258
  %7347 = load i16, i16* %7346, align 2, !dbg !259
  %7348 = and i16 9216, %7347, !dbg !260
  %7349 = icmp eq i16 0, %7348, !dbg !261
  br i1 %7349, label %7350, label %7354, !dbg !262

7350:                                             ; preds = %7345
  %7351 = icmp ne i16 %7348, 0, !dbg !263
  br i1 %7351, label %7352, label %7353, !dbg !263

7352:                                             ; preds = %7350
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7279), !dbg !263
  br label %7354, !dbg !263

7353:                                             ; preds = %7350
  store i16 1, i16* %7346, align 2, !dbg !263
  br label %7354, !dbg !263

7354:                                             ; preds = %7352, %7353, %7345
  %7355 = load i32, i32* %7276, align 4, !dbg !264
  %7356 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 23, i32 1, !dbg !265
  %7357 = load i32, i32* %7356, align 4, !dbg !266
  %7358 = load i32, i32* %7292, align 4, !dbg !267
  %7359 = getelementptr i32, i32* %7283, i32 2, !dbg !268
  %7360 = load i32, i32* %7359, align 4, !dbg !269
  %7361 = icmp sge i32 %7358, %7360, !dbg !270
  br i1 %7361, label %7362, label %7402, !dbg !271

7362:                                             ; preds = %7354
  %7363 = load i8*, i8** %7293, align 8, !dbg !272
  %7364 = ptrtoint i8* %7363 to i64, !dbg !273
  %7365 = getelementptr i32, i32* %7283, i32 1, !dbg !274
  %7366 = load i32, i32* %7365, align 4, !dbg !275
  %7367 = zext i32 %7366 to i64, !dbg !276
  %7368 = add i64 %7364, %7367, !dbg !277
  %7369 = inttoptr i64 %7368 to i8*, !dbg !278
  store i8* %7369, i8** %7275, align 8, !dbg !279
  %7370 = load i32, i32* %7276, align 4, !dbg !280
  %7371 = icmp ult i32 %7370, 12, !dbg !281
  br i1 %7371, label %7372, label %7374, !dbg !282

7372:                                             ; preds = %7362
  %7373 = call i32 @sqlite3VdbeSerialGet(i8* %7369, i32 %7370, %struct.sqlite3_value* %7279), !dbg !283
  br label %7523, !dbg !284

7374:                                             ; preds = %7362
  %7375 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %7375, align 2, !dbg !286
  %7376 = getelementptr i16, i16* %7375, i32 1, !dbg !287
  store i16 514, i16* %7376, align 2, !dbg !288
  %7377 = load i32, i32* %7276, align 4, !dbg !289
  %7378 = sub i32 %7377, 12, !dbg !290
  %7379 = lshr i32 %7378, 1, !dbg !291
  %7380 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 4, !dbg !292
  store i32 %7379, i32* %7380, align 4, !dbg !293
  %7381 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 2, !dbg !294
  store i8 %7270, i8* %7381, align 1, !dbg !295
  %7382 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 5, !dbg !296
  %7383 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 7, !dbg !297
  %7384 = load i32, i32* %7383, align 4, !dbg !298
  %7385 = add i32 %7379, 2, !dbg !299
  %7386 = icmp slt i32 %7384, %7385, !dbg !300
  br i1 %7386, label %7387, label %7389, !dbg !301

7387:                                             ; preds = %7374
  store i16 1, i16* %7346, align 2, !dbg !302
  %7388 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7279, i32 %7385, i32 0), !dbg !303
  br label %7392, !dbg !304

7389:                                             ; preds = %7374
  %7390 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 6, !dbg !305
  %7391 = load i8*, i8** %7390, align 8, !dbg !306
  store i8* %7391, i8** %7382, align 8, !dbg !307
  br label %7392, !dbg !308

7392:                                             ; preds = %7389, %7387
  %7393 = zext i32 %7379 to i64, !dbg !309
  %7394 = load i8*, i8** %7382, align 8, !dbg !310
  %7395 = load i8*, i8** %7275, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7394, i8* %7395, i64 %7393, i1 false), !dbg !312
  %7396 = getelementptr i8, i8* %7394, i32 %7379, !dbg !313
  store i8 0, i8* %7396, align 1, !dbg !314
  %7397 = add i32 %7379, 1, !dbg !315
  %7398 = getelementptr i8, i8* %7394, i32 %7397, !dbg !316
  store i8 0, i8* %7398, align 1, !dbg !317
  %7399 = and i32 %7377, 1, !dbg !318
  %7400 = getelementptr i16, i16* %7375, i32 %7399, !dbg !319
  %7401 = load i16, i16* %7400, align 2, !dbg !320
  store i16 %7401, i16* %7346, align 2, !dbg !321
  br label %7523, !dbg !322

7402:                                             ; preds = %7354
  %7403 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 2, !dbg !323
  store i8 %7270, i8* %7403, align 1, !dbg !324
  %7404 = load i32, i32* %7276, align 4, !dbg !325
  %7405 = and i32 %7404, 1, !dbg !326
  %7406 = icmp eq i32 %7405, 0, !dbg !327
  %7407 = icmp sge i32 %7404, 12, !dbg !328
  %7408 = and i1 %7407, %7406, !dbg !329
  %7409 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7404), !dbg !330
  %7410 = icmp eq i32 %7409, 0, !dbg !331
  br i1 %7410, label %7422, label %7411, !dbg !332

7411:                                             ; preds = %7402
  %7412 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 12, i32 0, !dbg !333
  %7413 = load %struct.BtCursor*, %struct.BtCursor** %7412, align 8, !dbg !334
  %7414 = getelementptr i32, i32* %7283, i32 1, !dbg !335
  %7415 = load i32, i32* %7414, align 4, !dbg !336
  %7416 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7413, i32 %7415, i32 %7409, %struct.sqlite3_value* %7279), !dbg !337
  %7417 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 5, !dbg !338
  %7418 = load i8*, i8** %7417, align 8, !dbg !339
  %7419 = call i32 @sqlite3VdbeSerialGet(i8* %7418, i32 %7404, %struct.sqlite3_value* %7279), !dbg !340
  %7420 = load i16, i16* %7346, align 2, !dbg !341
  %7421 = and i16 %7420, -4097, !dbg !342
  store i16 %7421, i16* %7346, align 2, !dbg !343
  br label %7523, !dbg !344

7422:                                             ; preds = %7402
  %7423 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7404, %struct.sqlite3_value* %7279), !dbg !345
  br label %7523, !dbg !346

7424:                                             ; preds = %7342
  %7425 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 23, i32 1, !dbg !347
  %7426 = load i32, i32* %7425, align 4, !dbg !348
  store i32 %7426, i32* %7276, align 4, !dbg !349
  br label %7345, !dbg !350

7427:                                             ; preds = %7342
  %7428 = load i32, i32* %7290, align 4, !dbg !351
  %7429 = load i32, i32* %7283, align 4, !dbg !352
  %7430 = icmp ult i32 %7428, %7429, !dbg !353
  br i1 %7430, label %7431, label %7512, !dbg !354

7431:                                             ; preds = %7427
  %7432 = load i8*, i8** %7293, align 8, !dbg !355
  %7433 = icmp eq i8* %7432, null, !dbg !356
  br i1 %7433, label %7435, label %7434, !dbg !357

7434:                                             ; preds = %7431
  store i8* %7432, i8** %7275, align 8, !dbg !358
  br label %7435, !dbg !359

7435:                                             ; preds = %7434, %7431, %7315
  %7436 = alloca i32, align 4, !dbg !360
  %7437 = load i16, i16* %7294, align 2, !dbg !361
  %7438 = zext i16 %7437 to i32, !dbg !362
  store i32 %7438, i32* %7436, align 4, !dbg !363
  %7439 = alloca i64, align 8, !dbg !364
  %7440 = getelementptr i32, i32* %7283, i32 %7438, !dbg !365
  %7441 = load i32, i32* %7440, align 4, !dbg !366
  %7442 = zext i32 %7441 to i64, !dbg !367
  store i64 %7442, i64* %7439, align 4, !dbg !368
  %7443 = load i8*, i8** %7275, align 8, !dbg !369
  %7444 = load i32, i32* %7290, align 4, !dbg !370
  %7445 = alloca i8*, align 8, !dbg !371
  %7446 = getelementptr i8, i8* %7443, i32 %7444, !dbg !372
  store i8* %7446, i8** %7445, align 8, !dbg !373
  %7447 = load i32, i32* %7283, align 4, !dbg !374
  %7448 = getelementptr i8, i8* %7443, i32 %7447, !dbg !375
  br label %7449, !dbg !376

7449:                                             ; preds = %7456, %7435
  %7450 = load i32, i32* %7436, align 4, !dbg !377
  %7451 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7278, i32 0, i32 23, i32 %7450, !dbg !378
  %7452 = load i8*, i8** %7445, align 8, !dbg !379
  %7453 = load i8, i8* %7452, align 1, !dbg !380
  %7454 = zext i8 %7453 to i32, !dbg !381
  store i32 %7454, i32* %7276, align 4, !dbg !382
  store i32 %7454, i32* %7451, align 4, !dbg !383
  %7455 = icmp sgt i8 %7453, -1, !dbg !384
  br i1 %7455, label %7479, label %7470, !dbg !385

7456:                                             ; preds = %7470, %7479
  %7457 = load i32, i32* %7436, align 4, !dbg !386
  %7458 = add i32 %7457, 1, !dbg !387
  store i32 %7458, i32* %7436, align 4, !dbg !388
  %7459 = load i64, i64* %7439, align 4, !dbg !389
  %7460 = and i64 4294967295, %7459, !dbg !390
  %7461 = trunc i64 %7460 to i32, !dbg !391
  %7462 = getelementptr i32, i32* %7283, i32 %7458, !dbg !392
  store i32 %7461, i32* %7462, align 4, !dbg !393
  %7463 = load i32, i32* %7436, align 4, !dbg !394
  %7464 = icmp sle i32 %7463, 1, !dbg !395
  %7465 = load i8*, i8** %7445, align 8, !dbg !396
  %7466 = ptrtoint i8* %7465 to i64, !dbg !397
  %7467 = ptrtoint i8* %7448 to i64, !dbg !398
  %7468 = icmp ult i64 %7466, %7467, !dbg !399
  %7469 = and i1 %7464, %7468, !dbg !400
  br i1 %7469, label %7449, label %7488, !dbg !401

7470:                                             ; preds = %7449
  %7471 = load i8*, i8** %7445, align 8, !dbg !402
  %7472 = call i8 @sqlite3GetVarint32(i8* %7471, i32* %7276), !dbg !403
  %7473 = getelementptr i8, i8* %7471, i8 %7472, !dbg !404
  store i8* %7473, i8** %7445, align 8, !dbg !405
  %7474 = load i32, i32* %7276, align 4, !dbg !406
  store i32 %7474, i32* %7451, align 4, !dbg !407
  %7475 = load i64, i64* %7439, align 4, !dbg !408
  %7476 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7474), !dbg !409
  %7477 = zext i32 %7476 to i64, !dbg !410
  %7478 = add i64 %7475, %7477, !dbg !411
  store i64 %7478, i64* %7439, align 4, !dbg !412
  br label %7456, !dbg !413

7479:                                             ; preds = %7449
  %7480 = getelementptr i8, i8* %7452, i32 1, !dbg !414
  store i8* %7480, i8** %7445, align 8, !dbg !415
  %7481 = load i32, i32* %7276, align 4, !dbg !416
  %7482 = trunc i32 %7481 to i8, !dbg !417
  %7483 = getelementptr i8, i8* %4, i8 %7482, !dbg !418
  %7484 = load i8, i8* %7483, align 1, !dbg !419
  %7485 = zext i8 %7484 to i64, !dbg !420
  %7486 = load i64, i64* %7439, align 4, !dbg !421
  %7487 = add i64 %7486, %7485, !dbg !422
  store i64 %7487, i64* %7439, align 4, !dbg !423
  br label %7456, !dbg !424

7488:                                             ; preds = %7456
  %7489 = load i64, i64* %7439, align 4, !dbg !425
  %7490 = load i32, i32* %7291, align 4, !dbg !426
  %7491 = zext i32 %7490 to i64, !dbg !427
  %7492 = icmp uge i64 %7466, %7467, !dbg !428
  %7493 = icmp ugt i64 %7466, %7467, !dbg !429
  %7494 = icmp ne i64 %7489, %7491, !dbg !430
  %7495 = icmp ugt i64 %7489, %7491, !dbg !431
  %7496 = or i1 %7493, %7494, !dbg !432
  %7497 = and i1 %7492, %7496, !dbg !433
  %7498 = or i1 %7497, %7495, !dbg !434
  br i1 %7498, label %7499, label %7503, !dbg !435

7499:                                             ; preds = %7488
  %7500 = load i32, i32* %7283, align 4, !dbg !436
  %7501 = icmp eq i32 %7500, 0, !dbg !437
  br i1 %7501, label %7502, label %7503, !dbg !438

7502:                                             ; preds = %7499
  store i32 0, i32* %7436, align 4, !dbg !439
  store i8* %7448, i8** %7445, align 8, !dbg !440
  br label %7503, !dbg !441

7503:                                             ; preds = %7502, %7499, %7488
  %7504 = load i32, i32* %7436, align 4, !dbg !442
  %7505 = trunc i32 %7504 to i16, !dbg !443
  store i16 %7505, i16* %7294, align 2, !dbg !444
  %7506 = load i8*, i8** %7445, align 8, !dbg !445
  %7507 = ptrtoint i8* %7506 to i64, !dbg !446
  %7508 = load i8*, i8** %7275, align 8, !dbg !447
  %7509 = ptrtoint i8* %7508 to i64, !dbg !448
  %7510 = sub i64 %7507, %7509, !dbg !449
  %7511 = trunc i64 %7510 to i32, !dbg !450
  store i32 %7511, i32* %7290, align 4, !dbg !451
  br label %7513, !dbg !452

7512:                                             ; preds = %7427
  store i32 0, i32* %7276, align 4, !dbg !453
  br label %7513, !dbg !454

7513:                                             ; preds = %7503, %7512
  %7514 = load i16, i16* %7294, align 2, !dbg !455
  %7515 = icmp sle i16 %7514, 1, !dbg !456
  br i1 %7515, label %7516, label %7345, !dbg !457

7516:                                             ; preds = %7513
  %7517 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7279, i32 0, i32 1, !dbg !458
  %7518 = load i16, i16* %7517, align 2, !dbg !458
  %7519 = and i16 %7518, 9216, !dbg !458
  %7520 = icmp ne i16 %7519, 0, !dbg !458
  br i1 %7520, label %7521, label %7522, !dbg !458

7521:                                             ; preds = %7516
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7279), !dbg !458
  br label %7523, !dbg !458

7522:                                             ; preds = %7516
  store i16 1, i16* %7517, align 2, !dbg !458
  br label %7523, !dbg !458

7523:                                             ; preds = %7521, %7522, %7392, %7372, %7411, %7422, %7340, %7341
  call void @llvm.stackrestore(i8* %7268), !dbg !459
  br label %7524, !dbg !74

7524:                                             ; preds = %7523, %14
  %7525 = call i8* @llvm.stacksave(), !dbg !1176
  %7526 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 61, !dbg !1179
  %7527 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7526, i32 0, i32 6, !dbg !1180
  %7528 = bitcast %union.p4union* %7527 to %struct.KeyInfo**, !dbg !1181
  %7529 = load %struct.KeyInfo*, %struct.KeyInfo** %7528, align 8, !dbg !1182
  %7530 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %7529, i32 0, i32 6, i32 0, !dbg !1183
  %7531 = alloca i32*, align 8, !dbg !1184
  store i32* null, i32** %7531, align 8, !dbg !1185
  %7532 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %7529, i32 0, i32 5, !dbg !1186
  %7533 = load i8*, i8** %7532, align 8, !dbg !1187
  %7534 = load %struct.CollSeq*, %struct.CollSeq** %7530, align 8, !dbg !1188
  %7535 = load i8, i8* %7533, align 1, !dbg !1189
  %7536 = and i8 %7535, 1, !dbg !1190
  %7537 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1191
  %7538 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !1192
  %7539 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %7537, %struct.sqlite3_value* %7538, %struct.CollSeq* %7534), !dbg !1193
  store i32 %7539, i32* %2, align 4, !dbg !1194
  %7540 = icmp ne i32 %7539, 0, !dbg !1195
  br i1 %7540, label %7541, label %7561, !dbg !1196

7541:                                             ; preds = %7524
  %7542 = and i8 %7535, 2, !dbg !1197
  %7543 = icmp ne i8 %7542, 0, !dbg !1198
  br i1 %7543, label %7544, label %7556, !dbg !1199

7544:                                             ; preds = %7541
  %7545 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, i32 1, !dbg !1200
  %7546 = load i16, i16* %7545, align 2, !dbg !1201
  %7547 = and i16 %7546, 1, !dbg !1202
  %7548 = icmp ne i16 %7547, 0, !dbg !1203
  %7549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, i32 1, !dbg !1204
  %7550 = load i16, i16* %7549, align 2, !dbg !1205
  %7551 = and i16 %7550, 1, !dbg !1206
  %7552 = icmp ne i16 %7551, 0, !dbg !1207
  %7553 = or i1 %7548, %7552, !dbg !1208
  br i1 %7553, label %7554, label %7556, !dbg !1209

7554:                                             ; preds = %7544
  %7555 = sub i32 0, %7539, !dbg !1210
  store i32 %7555, i32* %2, align 4, !dbg !1211
  br label %7556, !dbg !1212

7556:                                             ; preds = %7544, %7554, %7541
  %7557 = icmp ne i8 %7536, 0, !dbg !1213
  br i1 %7557, label %7558, label %7591, !dbg !1214

7558:                                             ; preds = %7556
  %7559 = load i32, i32* %2, align 4, !dbg !1215
  %7560 = sub i32 0, %7559, !dbg !1216
  store i32 %7560, i32* %2, align 4, !dbg !1217
  br label %7591, !dbg !1218

7561:                                             ; preds = %7524
  %7562 = getelementptr %struct.CollSeq*, %struct.CollSeq** %7530, i32 1, !dbg !1219
  %7563 = load %struct.CollSeq*, %struct.CollSeq** %7562, align 8, !dbg !1188
  %7564 = getelementptr i8, i8* %7533, i32 1, !dbg !1220
  %7565 = load i8, i8* %7564, align 1, !dbg !1189
  %7566 = and i8 %7565, 1, !dbg !1190
  %7567 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !1191
  %7568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !1192
  %7569 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %7567, %struct.sqlite3_value* %7568, %struct.CollSeq* %7563), !dbg !1193
  store i32 %7569, i32* %2, align 4, !dbg !1194
  %7570 = icmp ne i32 %7569, 0, !dbg !1195
  br i1 %7570, label %7571, label %7591, !dbg !1196

7571:                                             ; preds = %7561
  %7572 = and i8 %7565, 2, !dbg !1197
  %7573 = icmp ne i8 %7572, 0, !dbg !1198
  br i1 %7573, label %7574, label %7586, !dbg !1199

7574:                                             ; preds = %7571
  %7575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, i32 1, !dbg !1200
  %7576 = load i16, i16* %7575, align 2, !dbg !1201
  %7577 = and i16 %7576, 1, !dbg !1202
  %7578 = icmp ne i16 %7577, 0, !dbg !1203
  %7579 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, i32 1, !dbg !1204
  %7580 = load i16, i16* %7579, align 2, !dbg !1205
  %7581 = and i16 %7580, 1, !dbg !1206
  %7582 = icmp ne i16 %7581, 0, !dbg !1207
  %7583 = or i1 %7578, %7582, !dbg !1208
  br i1 %7583, label %7584, label %7586, !dbg !1209

7584:                                             ; preds = %7574
  %7585 = sub i32 0, %7569, !dbg !1210
  store i32 %7585, i32* %2, align 4, !dbg !1211
  br label %7586, !dbg !1212

7586:                                             ; preds = %7574, %7584, %7571
  %7587 = icmp ne i8 %7566, 0, !dbg !1213
  br i1 %7587, label %7588, label %7591, !dbg !1214

7588:                                             ; preds = %7586
  %7589 = load i32, i32* %2, align 4, !dbg !1215
  %7590 = sub i32 0, %7589, !dbg !1216
  store i32 %7590, i32* %2, align 4, !dbg !1217
  br label %7591, !dbg !1218

7591:                                             ; preds = %7558, %7556, %7588, %7586, %7561
  call void @llvm.stackrestore(i8* %7525), !dbg !1221
  br label %7592, !dbg !74

7592:                                             ; preds = %7591, %14
  %7593 = load i32, i32* %2, align 4, !dbg !1222
  %7594 = icmp slt i32 %7593, 0, !dbg !1225
  %7595 = icmp sgt i32 %7593, 0, !dbg !1226
  %or.cond = or i1 %7594, %7595, !dbg !1227
  br i1 %or.cond, label %7596, label %7617, !dbg !1227

7596:                                             ; preds = %7592, %14
  %7597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !1228
  %7598 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1231
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %7598, %struct.sqlite3_value* %7597), !dbg !1232
  %7599 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7597, i32 1, !dbg !1233
  %7600 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7598, i32 1, !dbg !1234
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %7600, %struct.sqlite3_value* %7599), !dbg !1232
  br label %7601, !dbg !74

7601:                                             ; preds = %7596, %14
  %7602 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !100
  %7603 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7602, i32 0, i32 1, !dbg !103
  store i16 4, i16* %7603, align 2, !dbg !104
  %7604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7602, i32 0, i32 0, i32 0, !dbg !105
  %7605 = bitcast double* %7604 to i64*, !dbg !106
  store i64 64, i64* %7605, align 4, !dbg !107
  br label %8881, !dbg !108

7606:                                             ; preds = %14
  %7607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1235
  %7608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7607, i32 0, i32 0, i32 0, !dbg !1238
  %7609 = bitcast double* %7608 to i64*, !dbg !1239
  %7610 = load i64, i64* %7609, align 4, !dbg !1240
  %7611 = icmp sgt i64 %7610, 0, !dbg !1241
  br i1 %7611, label %7612, label %.critedge, !dbg !1242

7612:                                             ; preds = %7606
  br label %9031, !dbg !1243

.critedge:                                        ; preds = %7606, %14
  %7613 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !100
  %7614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7613, i32 0, i32 1, !dbg !103
  store i16 4, i16* %7614, align 2, !dbg !104
  %7615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7613, i32 0, i32 0, i32 0, !dbg !105
  %7616 = bitcast double* %7615 to i64*, !dbg !106
  store i64 66, i64* %7616, align 4, !dbg !107
  br label %8952, !dbg !108

7617:                                             ; preds = %7592, %14
  %7618 = call i8* @llvm.stacksave(), !dbg !167
  %7619 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %7620 = load i8, i8* %7619, align 1, !dbg !171
  %7621 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %7621, align 4, !dbg !173
  %7622 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %7623 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %7624 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7622, align 8, !dbg !176
  store %struct.VdbeCursor* %7624, %struct.VdbeCursor** %7623, align 8, !dbg !177
  %7625 = alloca i8*, align 8, !dbg !178
  %7626 = alloca i32, align 4, !dbg !179
  %7627 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7623, i32* %7621), !dbg !180
  %7628 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7623, align 8, !dbg !181
  %7629 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !182
  %7630 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 16, !dbg !183
  %7631 = load i16, i16* %7630, align 2, !dbg !184
  %7632 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 19, !dbg !185
  %7633 = load i32*, i32** %7632, align 8, !dbg !186
  %7634 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 0, !dbg !187
  %7635 = load i8, i8* %7634, align 1, !dbg !188
  %7636 = icmp ne i8 %7635, 3, !dbg !189
  %7637 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 2, !dbg !190
  %7638 = load i8, i8* %7637, align 1, !dbg !191
  %7639 = icmp ne i8 %7638, 0, !dbg !192
  %7640 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 14, !dbg !193
  %7641 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 21, !dbg !194
  %7642 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 22, !dbg !195
  %7643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 20, !dbg !196
  %7644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 17, !dbg !197
  %7645 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 9, !dbg !198
  %7646 = load i32, i32* %7645, align 4, !dbg !199
  %7647 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %7648 = load i32, i32* %7647, align 4, !dbg !201
  %7649 = icmp ne i32 %7646, %7648, !dbg !202
  br i1 %7649, label %7650, label %7692, !dbg !203

7650:                                             ; preds = %7617
  br i1 %7639, label %7672, label %7667, !dbg !204

7651:                                             ; preds = %7667, %7674
  %7652 = load i32, i32* %7647, align 4, !dbg !205
  store i32 %7652, i32* %7645, align 4, !dbg !206
  %7653 = load i8*, i8** %7643, align 8, !dbg !207
  %7654 = load i8, i8* %7653, align 1, !dbg !208
  %7655 = icmp sgt i8 %7654, -1, !dbg !211
  br i1 %7655, label %7656, label %7658, !dbg !212

7656:                                             ; preds = %7651
  %7657 = zext i8 %7654 to i32, !dbg !213
  store i32 %7657, i32* %7633, align 4, !dbg !214
  store i32 1, i32* %7640, align 4, !dbg !215
  br label %7661, !dbg !216

7658:                                             ; preds = %7651
  %7659 = call i8 @sqlite3GetVarint32(i8* %7653, i32* %7633), !dbg !217
  %7660 = zext i8 %7659 to i32, !dbg !218
  store i32 %7660, i32* %7640, align 4, !dbg !219
  br label %7661, !dbg !220

7661:                                             ; preds = %7658, %7656
  store i16 0, i16* %7644, align 2, !dbg !221
  %7662 = load i32, i32* %7642, align 4, !dbg !222
  %7663 = load i32, i32* %7633, align 4, !dbg !223
  %7664 = icmp ult i32 %7662, %7663, !dbg !224
  br i1 %7664, label %7666, label %7665, !dbg !225

7665:                                             ; preds = %7661
  store i8* %7653, i8** %7625, align 8, !dbg !226
  br label %7785, !dbg !227

7666:                                             ; preds = %7661
  store i8* null, i8** %7643, align 8, !dbg !228
  store i32 0, i32* %7642, align 4, !dbg !229
  br label %7692, !dbg !230

7667:                                             ; preds = %7650
  %7668 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 12, i32 0, !dbg !231
  %7669 = load %struct.BtCursor*, %struct.BtCursor** %7668, align 8, !dbg !232
  %7670 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7669), !dbg !233
  store i32 %7670, i32* %7641, align 4, !dbg !234
  %7671 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7669, i32* %7642), !dbg !235
  store i8* %7671, i8** %7643, align 8, !dbg !236
  br label %7651, !dbg !237

7672:                                             ; preds = %7650
  %7673 = icmp eq i8 %7635, 3, !dbg !238
  br i1 %7673, label %7674, label %7685, !dbg !239

7674:                                             ; preds = %7672
  %7675 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 10, !dbg !240
  %7676 = load i32, i32* %7675, align 4, !dbg !241
  %7677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7676, !dbg !242
  %7678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7677, i32 0, i32 1, !dbg !243
  %7679 = load i16, i16* %7678, align 2, !dbg !244
  %7680 = and i16 %7679, 16, !dbg !245
  %7681 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7677, i32 0, i32 4, !dbg !246
  %7682 = load i32, i32* %7681, align 4, !dbg !247
  store i32 %7682, i32* %7641, align 4, !dbg !248
  store i32 %7682, i32* %7642, align 4, !dbg !249
  %7683 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7677, i32 0, i32 5, !dbg !250
  %7684 = load i8*, i8** %7683, align 8, !dbg !251
  store i8* %7684, i8** %7643, align 8, !dbg !252
  br label %7651, !dbg !253

7685:                                             ; preds = %7672
  %7686 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 1, !dbg !254
  %7687 = load i16, i16* %7686, align 2, !dbg !254
  %7688 = and i16 %7687, 9216, !dbg !254
  %7689 = icmp ne i16 %7688, 0, !dbg !254
  br i1 %7689, label %7690, label %7691, !dbg !254

7690:                                             ; preds = %7685
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7629), !dbg !254
  br label %7873, !dbg !254

7691:                                             ; preds = %7685
  store i16 1, i16* %7686, align 2, !dbg !254
  br label %7873, !dbg !254

7692:                                             ; preds = %7666, %7617
  %7693 = load i16, i16* %7644, align 2, !dbg !255
  %7694 = icmp ule i16 %7693, 2, !dbg !256
  br i1 %7694, label %7777, label %7774, !dbg !257

7695:                                             ; preds = %7774, %7863
  %7696 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 1, !dbg !258
  %7697 = load i16, i16* %7696, align 2, !dbg !259
  %7698 = and i16 9216, %7697, !dbg !260
  %7699 = icmp eq i16 0, %7698, !dbg !261
  br i1 %7699, label %7700, label %7704, !dbg !262

7700:                                             ; preds = %7695
  %7701 = icmp ne i16 %7698, 0, !dbg !263
  br i1 %7701, label %7702, label %7703, !dbg !263

7702:                                             ; preds = %7700
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7629), !dbg !263
  br label %7704, !dbg !263

7703:                                             ; preds = %7700
  store i16 1, i16* %7696, align 2, !dbg !263
  br label %7704, !dbg !263

7704:                                             ; preds = %7702, %7703, %7695
  %7705 = load i32, i32* %7626, align 4, !dbg !264
  %7706 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 23, i32 2, !dbg !265
  %7707 = load i32, i32* %7706, align 4, !dbg !266
  %7708 = load i32, i32* %7642, align 4, !dbg !267
  %7709 = getelementptr i32, i32* %7633, i32 3, !dbg !268
  %7710 = load i32, i32* %7709, align 4, !dbg !269
  %7711 = icmp sge i32 %7708, %7710, !dbg !270
  br i1 %7711, label %7712, label %7752, !dbg !271

7712:                                             ; preds = %7704
  %7713 = load i8*, i8** %7643, align 8, !dbg !272
  %7714 = ptrtoint i8* %7713 to i64, !dbg !273
  %7715 = getelementptr i32, i32* %7633, i32 2, !dbg !274
  %7716 = load i32, i32* %7715, align 4, !dbg !275
  %7717 = zext i32 %7716 to i64, !dbg !276
  %7718 = add i64 %7714, %7717, !dbg !277
  %7719 = inttoptr i64 %7718 to i8*, !dbg !278
  store i8* %7719, i8** %7625, align 8, !dbg !279
  %7720 = load i32, i32* %7626, align 4, !dbg !280
  %7721 = icmp ult i32 %7720, 12, !dbg !281
  br i1 %7721, label %7722, label %7724, !dbg !282

7722:                                             ; preds = %7712
  %7723 = call i32 @sqlite3VdbeSerialGet(i8* %7719, i32 %7720, %struct.sqlite3_value* %7629), !dbg !283
  br label %7873, !dbg !284

7724:                                             ; preds = %7712
  %7725 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %7725, align 2, !dbg !286
  %7726 = getelementptr i16, i16* %7725, i32 1, !dbg !287
  store i16 514, i16* %7726, align 2, !dbg !288
  %7727 = load i32, i32* %7626, align 4, !dbg !289
  %7728 = sub i32 %7727, 12, !dbg !290
  %7729 = lshr i32 %7728, 1, !dbg !291
  %7730 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 4, !dbg !292
  store i32 %7729, i32* %7730, align 4, !dbg !293
  %7731 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 2, !dbg !294
  store i8 %7620, i8* %7731, align 1, !dbg !295
  %7732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 5, !dbg !296
  %7733 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 7, !dbg !297
  %7734 = load i32, i32* %7733, align 4, !dbg !298
  %7735 = add i32 %7729, 2, !dbg !299
  %7736 = icmp slt i32 %7734, %7735, !dbg !300
  br i1 %7736, label %7737, label %7739, !dbg !301

7737:                                             ; preds = %7724
  store i16 1, i16* %7696, align 2, !dbg !302
  %7738 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7629, i32 %7735, i32 0), !dbg !303
  br label %7742, !dbg !304

7739:                                             ; preds = %7724
  %7740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 6, !dbg !305
  %7741 = load i8*, i8** %7740, align 8, !dbg !306
  store i8* %7741, i8** %7732, align 8, !dbg !307
  br label %7742, !dbg !308

7742:                                             ; preds = %7739, %7737
  %7743 = zext i32 %7729 to i64, !dbg !309
  %7744 = load i8*, i8** %7732, align 8, !dbg !310
  %7745 = load i8*, i8** %7625, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7744, i8* %7745, i64 %7743, i1 false), !dbg !312
  %7746 = getelementptr i8, i8* %7744, i32 %7729, !dbg !313
  store i8 0, i8* %7746, align 1, !dbg !314
  %7747 = add i32 %7729, 1, !dbg !315
  %7748 = getelementptr i8, i8* %7744, i32 %7747, !dbg !316
  store i8 0, i8* %7748, align 1, !dbg !317
  %7749 = and i32 %7727, 1, !dbg !318
  %7750 = getelementptr i16, i16* %7725, i32 %7749, !dbg !319
  %7751 = load i16, i16* %7750, align 2, !dbg !320
  store i16 %7751, i16* %7696, align 2, !dbg !321
  br label %7873, !dbg !322

7752:                                             ; preds = %7704
  %7753 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 2, !dbg !323
  store i8 %7620, i8* %7753, align 1, !dbg !324
  %7754 = load i32, i32* %7626, align 4, !dbg !325
  %7755 = and i32 %7754, 1, !dbg !326
  %7756 = icmp eq i32 %7755, 0, !dbg !327
  %7757 = icmp sge i32 %7754, 12, !dbg !328
  %7758 = and i1 %7757, %7756, !dbg !329
  %7759 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7754), !dbg !330
  %7760 = icmp eq i32 %7759, 0, !dbg !331
  br i1 %7760, label %7772, label %7761, !dbg !332

7761:                                             ; preds = %7752
  %7762 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 12, i32 0, !dbg !333
  %7763 = load %struct.BtCursor*, %struct.BtCursor** %7762, align 8, !dbg !334
  %7764 = getelementptr i32, i32* %7633, i32 2, !dbg !335
  %7765 = load i32, i32* %7764, align 4, !dbg !336
  %7766 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7763, i32 %7765, i32 %7759, %struct.sqlite3_value* %7629), !dbg !337
  %7767 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 5, !dbg !338
  %7768 = load i8*, i8** %7767, align 8, !dbg !339
  %7769 = call i32 @sqlite3VdbeSerialGet(i8* %7768, i32 %7754, %struct.sqlite3_value* %7629), !dbg !340
  %7770 = load i16, i16* %7696, align 2, !dbg !341
  %7771 = and i16 %7770, -4097, !dbg !342
  store i16 %7771, i16* %7696, align 2, !dbg !343
  br label %7873, !dbg !344

7772:                                             ; preds = %7752
  %7773 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7754, %struct.sqlite3_value* %7629), !dbg !345
  br label %7873, !dbg !346

7774:                                             ; preds = %7692
  %7775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 23, i32 2, !dbg !347
  %7776 = load i32, i32* %7775, align 4, !dbg !348
  store i32 %7776, i32* %7626, align 4, !dbg !349
  br label %7695, !dbg !350

7777:                                             ; preds = %7692
  %7778 = load i32, i32* %7640, align 4, !dbg !351
  %7779 = load i32, i32* %7633, align 4, !dbg !352
  %7780 = icmp ult i32 %7778, %7779, !dbg !353
  br i1 %7780, label %7781, label %7862, !dbg !354

7781:                                             ; preds = %7777
  %7782 = load i8*, i8** %7643, align 8, !dbg !355
  %7783 = icmp eq i8* %7782, null, !dbg !356
  br i1 %7783, label %7785, label %7784, !dbg !357

7784:                                             ; preds = %7781
  store i8* %7782, i8** %7625, align 8, !dbg !358
  br label %7785, !dbg !359

7785:                                             ; preds = %7784, %7781, %7665
  %7786 = alloca i32, align 4, !dbg !360
  %7787 = load i16, i16* %7644, align 2, !dbg !361
  %7788 = zext i16 %7787 to i32, !dbg !362
  store i32 %7788, i32* %7786, align 4, !dbg !363
  %7789 = alloca i64, align 8, !dbg !364
  %7790 = getelementptr i32, i32* %7633, i32 %7788, !dbg !365
  %7791 = load i32, i32* %7790, align 4, !dbg !366
  %7792 = zext i32 %7791 to i64, !dbg !367
  store i64 %7792, i64* %7789, align 4, !dbg !368
  %7793 = load i8*, i8** %7625, align 8, !dbg !369
  %7794 = load i32, i32* %7640, align 4, !dbg !370
  %7795 = alloca i8*, align 8, !dbg !371
  %7796 = getelementptr i8, i8* %7793, i32 %7794, !dbg !372
  store i8* %7796, i8** %7795, align 8, !dbg !373
  %7797 = load i32, i32* %7633, align 4, !dbg !374
  %7798 = getelementptr i8, i8* %7793, i32 %7797, !dbg !375
  br label %7799, !dbg !376

7799:                                             ; preds = %7806, %7785
  %7800 = load i32, i32* %7786, align 4, !dbg !377
  %7801 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7628, i32 0, i32 23, i32 %7800, !dbg !378
  %7802 = load i8*, i8** %7795, align 8, !dbg !379
  %7803 = load i8, i8* %7802, align 1, !dbg !380
  %7804 = zext i8 %7803 to i32, !dbg !381
  store i32 %7804, i32* %7626, align 4, !dbg !382
  store i32 %7804, i32* %7801, align 4, !dbg !383
  %7805 = icmp sgt i8 %7803, -1, !dbg !384
  br i1 %7805, label %7829, label %7820, !dbg !385

7806:                                             ; preds = %7820, %7829
  %7807 = load i32, i32* %7786, align 4, !dbg !386
  %7808 = add i32 %7807, 1, !dbg !387
  store i32 %7808, i32* %7786, align 4, !dbg !388
  %7809 = load i64, i64* %7789, align 4, !dbg !389
  %7810 = and i64 4294967295, %7809, !dbg !390
  %7811 = trunc i64 %7810 to i32, !dbg !391
  %7812 = getelementptr i32, i32* %7633, i32 %7808, !dbg !392
  store i32 %7811, i32* %7812, align 4, !dbg !393
  %7813 = load i32, i32* %7786, align 4, !dbg !394
  %7814 = icmp sle i32 %7813, 2, !dbg !395
  %7815 = load i8*, i8** %7795, align 8, !dbg !396
  %7816 = ptrtoint i8* %7815 to i64, !dbg !397
  %7817 = ptrtoint i8* %7798 to i64, !dbg !398
  %7818 = icmp ult i64 %7816, %7817, !dbg !399
  %7819 = and i1 %7814, %7818, !dbg !400
  br i1 %7819, label %7799, label %7838, !dbg !401

7820:                                             ; preds = %7799
  %7821 = load i8*, i8** %7795, align 8, !dbg !402
  %7822 = call i8 @sqlite3GetVarint32(i8* %7821, i32* %7626), !dbg !403
  %7823 = getelementptr i8, i8* %7821, i8 %7822, !dbg !404
  store i8* %7823, i8** %7795, align 8, !dbg !405
  %7824 = load i32, i32* %7626, align 4, !dbg !406
  store i32 %7824, i32* %7801, align 4, !dbg !407
  %7825 = load i64, i64* %7789, align 4, !dbg !408
  %7826 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7824), !dbg !409
  %7827 = zext i32 %7826 to i64, !dbg !410
  %7828 = add i64 %7825, %7827, !dbg !411
  store i64 %7828, i64* %7789, align 4, !dbg !412
  br label %7806, !dbg !413

7829:                                             ; preds = %7799
  %7830 = getelementptr i8, i8* %7802, i32 1, !dbg !414
  store i8* %7830, i8** %7795, align 8, !dbg !415
  %7831 = load i32, i32* %7626, align 4, !dbg !416
  %7832 = trunc i32 %7831 to i8, !dbg !417
  %7833 = getelementptr i8, i8* %4, i8 %7832, !dbg !418
  %7834 = load i8, i8* %7833, align 1, !dbg !419
  %7835 = zext i8 %7834 to i64, !dbg !420
  %7836 = load i64, i64* %7789, align 4, !dbg !421
  %7837 = add i64 %7836, %7835, !dbg !422
  store i64 %7837, i64* %7789, align 4, !dbg !423
  br label %7806, !dbg !424

7838:                                             ; preds = %7806
  %7839 = load i64, i64* %7789, align 4, !dbg !425
  %7840 = load i32, i32* %7641, align 4, !dbg !426
  %7841 = zext i32 %7840 to i64, !dbg !427
  %7842 = icmp uge i64 %7816, %7817, !dbg !428
  %7843 = icmp ugt i64 %7816, %7817, !dbg !429
  %7844 = icmp ne i64 %7839, %7841, !dbg !430
  %7845 = icmp ugt i64 %7839, %7841, !dbg !431
  %7846 = or i1 %7843, %7844, !dbg !432
  %7847 = and i1 %7842, %7846, !dbg !433
  %7848 = or i1 %7847, %7845, !dbg !434
  br i1 %7848, label %7849, label %7853, !dbg !435

7849:                                             ; preds = %7838
  %7850 = load i32, i32* %7633, align 4, !dbg !436
  %7851 = icmp eq i32 %7850, 0, !dbg !437
  br i1 %7851, label %7852, label %7853, !dbg !438

7852:                                             ; preds = %7849
  store i32 0, i32* %7786, align 4, !dbg !439
  store i8* %7798, i8** %7795, align 8, !dbg !440
  br label %7853, !dbg !441

7853:                                             ; preds = %7852, %7849, %7838
  %7854 = load i32, i32* %7786, align 4, !dbg !442
  %7855 = trunc i32 %7854 to i16, !dbg !443
  store i16 %7855, i16* %7644, align 2, !dbg !444
  %7856 = load i8*, i8** %7795, align 8, !dbg !445
  %7857 = ptrtoint i8* %7856 to i64, !dbg !446
  %7858 = load i8*, i8** %7625, align 8, !dbg !447
  %7859 = ptrtoint i8* %7858 to i64, !dbg !448
  %7860 = sub i64 %7857, %7859, !dbg !449
  %7861 = trunc i64 %7860 to i32, !dbg !450
  store i32 %7861, i32* %7640, align 4, !dbg !451
  br label %7863, !dbg !452

7862:                                             ; preds = %7777
  store i32 0, i32* %7626, align 4, !dbg !453
  br label %7863, !dbg !454

7863:                                             ; preds = %7853, %7862
  %7864 = load i16, i16* %7644, align 2, !dbg !455
  %7865 = icmp sle i16 %7864, 2, !dbg !456
  br i1 %7865, label %7866, label %7695, !dbg !457

7866:                                             ; preds = %7863
  %7867 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7629, i32 0, i32 1, !dbg !458
  %7868 = load i16, i16* %7867, align 2, !dbg !458
  %7869 = and i16 %7868, 9216, !dbg !458
  %7870 = icmp ne i16 %7869, 0, !dbg !458
  br i1 %7870, label %7871, label %7872, !dbg !458

7871:                                             ; preds = %7866
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7629), !dbg !458
  br label %7873, !dbg !458

7872:                                             ; preds = %7866
  store i16 1, i16* %7867, align 2, !dbg !458
  br label %7873, !dbg !458

7873:                                             ; preds = %7871, %7872, %7742, %7722, %7761, %7772, %7690, %7691
  call void @llvm.stackrestore(i8* %7618), !dbg !459
  br label %7874, !dbg !74

7874:                                             ; preds = %7873, %14
  %7875 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !1132
  %7876 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7875, i32 0, i32 1, !dbg !1135
  %7877 = load i16, i16* %7876, align 2, !dbg !1136
  %7878 = and i16 %7877, 36, !dbg !1137
  %7879 = icmp ne i16 %7878, 0, !dbg !1138
  br i1 %7879, label %7880, label %7881, !dbg !1139

7880:                                             ; preds = %7874
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %7875), !dbg !1140
  br label %7881, !dbg !1141

7881:                                             ; preds = %7880, %7874, %14
  %7882 = call i8* @llvm.stacksave(), !dbg !167
  %7883 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %7884 = load i8, i8* %7883, align 1, !dbg !171
  %7885 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %7885, align 4, !dbg !173
  %7886 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %7887 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %7888 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7886, align 8, !dbg !176
  store %struct.VdbeCursor* %7888, %struct.VdbeCursor** %7887, align 8, !dbg !177
  %7889 = alloca i8*, align 8, !dbg !178
  %7890 = alloca i32, align 4, !dbg !179
  %7891 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7887, i32* %7885), !dbg !180
  %7892 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7887, align 8, !dbg !181
  %7893 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !182
  %7894 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 16, !dbg !183
  %7895 = load i16, i16* %7894, align 2, !dbg !184
  %7896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 19, !dbg !185
  %7897 = load i32*, i32** %7896, align 8, !dbg !186
  %7898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 0, !dbg !187
  %7899 = load i8, i8* %7898, align 1, !dbg !188
  %7900 = icmp ne i8 %7899, 3, !dbg !189
  %7901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 2, !dbg !190
  %7902 = load i8, i8* %7901, align 1, !dbg !191
  %7903 = icmp ne i8 %7902, 0, !dbg !192
  %7904 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 14, !dbg !193
  %7905 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 21, !dbg !194
  %7906 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 22, !dbg !195
  %7907 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 20, !dbg !196
  %7908 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 17, !dbg !197
  %7909 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 9, !dbg !198
  %7910 = load i32, i32* %7909, align 4, !dbg !199
  %7911 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %7912 = load i32, i32* %7911, align 4, !dbg !201
  %7913 = icmp ne i32 %7910, %7912, !dbg !202
  br i1 %7913, label %7914, label %7956, !dbg !203

7914:                                             ; preds = %7881
  br i1 %7903, label %7936, label %7931, !dbg !204

7915:                                             ; preds = %7931, %7938
  %7916 = load i32, i32* %7911, align 4, !dbg !205
  store i32 %7916, i32* %7909, align 4, !dbg !206
  %7917 = load i8*, i8** %7907, align 8, !dbg !207
  %7918 = load i8, i8* %7917, align 1, !dbg !208
  %7919 = icmp sgt i8 %7918, -1, !dbg !211
  br i1 %7919, label %7920, label %7922, !dbg !212

7920:                                             ; preds = %7915
  %7921 = zext i8 %7918 to i32, !dbg !213
  store i32 %7921, i32* %7897, align 4, !dbg !214
  store i32 1, i32* %7904, align 4, !dbg !215
  br label %7925, !dbg !216

7922:                                             ; preds = %7915
  %7923 = call i8 @sqlite3GetVarint32(i8* %7917, i32* %7897), !dbg !217
  %7924 = zext i8 %7923 to i32, !dbg !218
  store i32 %7924, i32* %7904, align 4, !dbg !219
  br label %7925, !dbg !220

7925:                                             ; preds = %7922, %7920
  store i16 0, i16* %7908, align 2, !dbg !221
  %7926 = load i32, i32* %7906, align 4, !dbg !222
  %7927 = load i32, i32* %7897, align 4, !dbg !223
  %7928 = icmp ult i32 %7926, %7927, !dbg !224
  br i1 %7928, label %7930, label %7929, !dbg !225

7929:                                             ; preds = %7925
  store i8* %7917, i8** %7889, align 8, !dbg !226
  br label %8049, !dbg !227

7930:                                             ; preds = %7925
  store i8* null, i8** %7907, align 8, !dbg !228
  store i32 0, i32* %7906, align 4, !dbg !229
  br label %7956, !dbg !230

7931:                                             ; preds = %7914
  %7932 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 12, i32 0, !dbg !231
  %7933 = load %struct.BtCursor*, %struct.BtCursor** %7932, align 8, !dbg !232
  %7934 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7933), !dbg !233
  store i32 %7934, i32* %7905, align 4, !dbg !234
  %7935 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7933, i32* %7906), !dbg !235
  store i8* %7935, i8** %7907, align 8, !dbg !236
  br label %7915, !dbg !237

7936:                                             ; preds = %7914
  %7937 = icmp eq i8 %7899, 3, !dbg !238
  br i1 %7937, label %7938, label %7949, !dbg !239

7938:                                             ; preds = %7936
  %7939 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 10, !dbg !240
  %7940 = load i32, i32* %7939, align 4, !dbg !241
  %7941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7940, !dbg !242
  %7942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7941, i32 0, i32 1, !dbg !243
  %7943 = load i16, i16* %7942, align 2, !dbg !244
  %7944 = and i16 %7943, 16, !dbg !245
  %7945 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7941, i32 0, i32 4, !dbg !246
  %7946 = load i32, i32* %7945, align 4, !dbg !247
  store i32 %7946, i32* %7905, align 4, !dbg !248
  store i32 %7946, i32* %7906, align 4, !dbg !249
  %7947 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7941, i32 0, i32 5, !dbg !250
  %7948 = load i8*, i8** %7947, align 8, !dbg !251
  store i8* %7948, i8** %7907, align 8, !dbg !252
  br label %7915, !dbg !253

7949:                                             ; preds = %7936
  %7950 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 1, !dbg !254
  %7951 = load i16, i16* %7950, align 2, !dbg !254
  %7952 = and i16 %7951, 9216, !dbg !254
  %7953 = icmp ne i16 %7952, 0, !dbg !254
  br i1 %7953, label %7954, label %7955, !dbg !254

7954:                                             ; preds = %7949
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7893), !dbg !254
  br label %8137, !dbg !254

7955:                                             ; preds = %7949
  store i16 1, i16* %7950, align 2, !dbg !254
  br label %8137, !dbg !254

7956:                                             ; preds = %7930, %7881
  %7957 = load i16, i16* %7908, align 2, !dbg !255
  %7958 = icmp ule i16 %7957, 3, !dbg !256
  br i1 %7958, label %8041, label %8038, !dbg !257

7959:                                             ; preds = %8038, %8127
  %7960 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 1, !dbg !258
  %7961 = load i16, i16* %7960, align 2, !dbg !259
  %7962 = and i16 9216, %7961, !dbg !260
  %7963 = icmp eq i16 0, %7962, !dbg !261
  br i1 %7963, label %7964, label %7968, !dbg !262

7964:                                             ; preds = %7959
  %7965 = icmp ne i16 %7962, 0, !dbg !263
  br i1 %7965, label %7966, label %7967, !dbg !263

7966:                                             ; preds = %7964
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7893), !dbg !263
  br label %7968, !dbg !263

7967:                                             ; preds = %7964
  store i16 1, i16* %7960, align 2, !dbg !263
  br label %7968, !dbg !263

7968:                                             ; preds = %7966, %7967, %7959
  %7969 = load i32, i32* %7890, align 4, !dbg !264
  %7970 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 23, i32 3, !dbg !265
  %7971 = load i32, i32* %7970, align 4, !dbg !266
  %7972 = load i32, i32* %7906, align 4, !dbg !267
  %7973 = getelementptr i32, i32* %7897, i32 4, !dbg !268
  %7974 = load i32, i32* %7973, align 4, !dbg !269
  %7975 = icmp sge i32 %7972, %7974, !dbg !270
  br i1 %7975, label %7976, label %8016, !dbg !271

7976:                                             ; preds = %7968
  %7977 = load i8*, i8** %7907, align 8, !dbg !272
  %7978 = ptrtoint i8* %7977 to i64, !dbg !273
  %7979 = getelementptr i32, i32* %7897, i32 3, !dbg !274
  %7980 = load i32, i32* %7979, align 4, !dbg !275
  %7981 = zext i32 %7980 to i64, !dbg !276
  %7982 = add i64 %7978, %7981, !dbg !277
  %7983 = inttoptr i64 %7982 to i8*, !dbg !278
  store i8* %7983, i8** %7889, align 8, !dbg !279
  %7984 = load i32, i32* %7890, align 4, !dbg !280
  %7985 = icmp ult i32 %7984, 12, !dbg !281
  br i1 %7985, label %7986, label %7988, !dbg !282

7986:                                             ; preds = %7976
  %7987 = call i32 @sqlite3VdbeSerialGet(i8* %7983, i32 %7984, %struct.sqlite3_value* %7893), !dbg !283
  br label %8137, !dbg !284

7988:                                             ; preds = %7976
  %7989 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %7989, align 2, !dbg !286
  %7990 = getelementptr i16, i16* %7989, i32 1, !dbg !287
  store i16 514, i16* %7990, align 2, !dbg !288
  %7991 = load i32, i32* %7890, align 4, !dbg !289
  %7992 = sub i32 %7991, 12, !dbg !290
  %7993 = lshr i32 %7992, 1, !dbg !291
  %7994 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 4, !dbg !292
  store i32 %7993, i32* %7994, align 4, !dbg !293
  %7995 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 2, !dbg !294
  store i8 %7884, i8* %7995, align 1, !dbg !295
  %7996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 5, !dbg !296
  %7997 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 7, !dbg !297
  %7998 = load i32, i32* %7997, align 4, !dbg !298
  %7999 = add i32 %7993, 2, !dbg !299
  %8000 = icmp slt i32 %7998, %7999, !dbg !300
  br i1 %8000, label %8001, label %8003, !dbg !301

8001:                                             ; preds = %7988
  store i16 1, i16* %7960, align 2, !dbg !302
  %8002 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7893, i32 %7999, i32 0), !dbg !303
  br label %8006, !dbg !304

8003:                                             ; preds = %7988
  %8004 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 6, !dbg !305
  %8005 = load i8*, i8** %8004, align 8, !dbg !306
  store i8* %8005, i8** %7996, align 8, !dbg !307
  br label %8006, !dbg !308

8006:                                             ; preds = %8003, %8001
  %8007 = zext i32 %7993 to i64, !dbg !309
  %8008 = load i8*, i8** %7996, align 8, !dbg !310
  %8009 = load i8*, i8** %7889, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8008, i8* %8009, i64 %8007, i1 false), !dbg !312
  %8010 = getelementptr i8, i8* %8008, i32 %7993, !dbg !313
  store i8 0, i8* %8010, align 1, !dbg !314
  %8011 = add i32 %7993, 1, !dbg !315
  %8012 = getelementptr i8, i8* %8008, i32 %8011, !dbg !316
  store i8 0, i8* %8012, align 1, !dbg !317
  %8013 = and i32 %7991, 1, !dbg !318
  %8014 = getelementptr i16, i16* %7989, i32 %8013, !dbg !319
  %8015 = load i16, i16* %8014, align 2, !dbg !320
  store i16 %8015, i16* %7960, align 2, !dbg !321
  br label %8137, !dbg !322

8016:                                             ; preds = %7968
  %8017 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 2, !dbg !323
  store i8 %7884, i8* %8017, align 1, !dbg !324
  %8018 = load i32, i32* %7890, align 4, !dbg !325
  %8019 = and i32 %8018, 1, !dbg !326
  %8020 = icmp eq i32 %8019, 0, !dbg !327
  %8021 = icmp sge i32 %8018, 12, !dbg !328
  %8022 = and i1 %8021, %8020, !dbg !329
  %8023 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8018), !dbg !330
  %8024 = icmp eq i32 %8023, 0, !dbg !331
  br i1 %8024, label %8036, label %8025, !dbg !332

8025:                                             ; preds = %8016
  %8026 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 12, i32 0, !dbg !333
  %8027 = load %struct.BtCursor*, %struct.BtCursor** %8026, align 8, !dbg !334
  %8028 = getelementptr i32, i32* %7897, i32 3, !dbg !335
  %8029 = load i32, i32* %8028, align 4, !dbg !336
  %8030 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8027, i32 %8029, i32 %8023, %struct.sqlite3_value* %7893), !dbg !337
  %8031 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 5, !dbg !338
  %8032 = load i8*, i8** %8031, align 8, !dbg !339
  %8033 = call i32 @sqlite3VdbeSerialGet(i8* %8032, i32 %8018, %struct.sqlite3_value* %7893), !dbg !340
  %8034 = load i16, i16* %7960, align 2, !dbg !341
  %8035 = and i16 %8034, -4097, !dbg !342
  store i16 %8035, i16* %7960, align 2, !dbg !343
  br label %8137, !dbg !344

8036:                                             ; preds = %8016
  %8037 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8018, %struct.sqlite3_value* %7893), !dbg !345
  br label %8137, !dbg !346

8038:                                             ; preds = %7956
  %8039 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 23, i32 3, !dbg !347
  %8040 = load i32, i32* %8039, align 4, !dbg !348
  store i32 %8040, i32* %7890, align 4, !dbg !349
  br label %7959, !dbg !350

8041:                                             ; preds = %7956
  %8042 = load i32, i32* %7904, align 4, !dbg !351
  %8043 = load i32, i32* %7897, align 4, !dbg !352
  %8044 = icmp ult i32 %8042, %8043, !dbg !353
  br i1 %8044, label %8045, label %8126, !dbg !354

8045:                                             ; preds = %8041
  %8046 = load i8*, i8** %7907, align 8, !dbg !355
  %8047 = icmp eq i8* %8046, null, !dbg !356
  br i1 %8047, label %8049, label %8048, !dbg !357

8048:                                             ; preds = %8045
  store i8* %8046, i8** %7889, align 8, !dbg !358
  br label %8049, !dbg !359

8049:                                             ; preds = %8048, %8045, %7929
  %8050 = alloca i32, align 4, !dbg !360
  %8051 = load i16, i16* %7908, align 2, !dbg !361
  %8052 = zext i16 %8051 to i32, !dbg !362
  store i32 %8052, i32* %8050, align 4, !dbg !363
  %8053 = alloca i64, align 8, !dbg !364
  %8054 = getelementptr i32, i32* %7897, i32 %8052, !dbg !365
  %8055 = load i32, i32* %8054, align 4, !dbg !366
  %8056 = zext i32 %8055 to i64, !dbg !367
  store i64 %8056, i64* %8053, align 4, !dbg !368
  %8057 = load i8*, i8** %7889, align 8, !dbg !369
  %8058 = load i32, i32* %7904, align 4, !dbg !370
  %8059 = alloca i8*, align 8, !dbg !371
  %8060 = getelementptr i8, i8* %8057, i32 %8058, !dbg !372
  store i8* %8060, i8** %8059, align 8, !dbg !373
  %8061 = load i32, i32* %7897, align 4, !dbg !374
  %8062 = getelementptr i8, i8* %8057, i32 %8061, !dbg !375
  br label %8063, !dbg !376

8063:                                             ; preds = %8070, %8049
  %8064 = load i32, i32* %8050, align 4, !dbg !377
  %8065 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7892, i32 0, i32 23, i32 %8064, !dbg !378
  %8066 = load i8*, i8** %8059, align 8, !dbg !379
  %8067 = load i8, i8* %8066, align 1, !dbg !380
  %8068 = zext i8 %8067 to i32, !dbg !381
  store i32 %8068, i32* %7890, align 4, !dbg !382
  store i32 %8068, i32* %8065, align 4, !dbg !383
  %8069 = icmp sgt i8 %8067, -1, !dbg !384
  br i1 %8069, label %8093, label %8084, !dbg !385

8070:                                             ; preds = %8084, %8093
  %8071 = load i32, i32* %8050, align 4, !dbg !386
  %8072 = add i32 %8071, 1, !dbg !387
  store i32 %8072, i32* %8050, align 4, !dbg !388
  %8073 = load i64, i64* %8053, align 4, !dbg !389
  %8074 = and i64 4294967295, %8073, !dbg !390
  %8075 = trunc i64 %8074 to i32, !dbg !391
  %8076 = getelementptr i32, i32* %7897, i32 %8072, !dbg !392
  store i32 %8075, i32* %8076, align 4, !dbg !393
  %8077 = load i32, i32* %8050, align 4, !dbg !394
  %8078 = icmp sle i32 %8077, 3, !dbg !395
  %8079 = load i8*, i8** %8059, align 8, !dbg !396
  %8080 = ptrtoint i8* %8079 to i64, !dbg !397
  %8081 = ptrtoint i8* %8062 to i64, !dbg !398
  %8082 = icmp ult i64 %8080, %8081, !dbg !399
  %8083 = and i1 %8078, %8082, !dbg !400
  br i1 %8083, label %8063, label %8102, !dbg !401

8084:                                             ; preds = %8063
  %8085 = load i8*, i8** %8059, align 8, !dbg !402
  %8086 = call i8 @sqlite3GetVarint32(i8* %8085, i32* %7890), !dbg !403
  %8087 = getelementptr i8, i8* %8085, i8 %8086, !dbg !404
  store i8* %8087, i8** %8059, align 8, !dbg !405
  %8088 = load i32, i32* %7890, align 4, !dbg !406
  store i32 %8088, i32* %8065, align 4, !dbg !407
  %8089 = load i64, i64* %8053, align 4, !dbg !408
  %8090 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8088), !dbg !409
  %8091 = zext i32 %8090 to i64, !dbg !410
  %8092 = add i64 %8089, %8091, !dbg !411
  store i64 %8092, i64* %8053, align 4, !dbg !412
  br label %8070, !dbg !413

8093:                                             ; preds = %8063
  %8094 = getelementptr i8, i8* %8066, i32 1, !dbg !414
  store i8* %8094, i8** %8059, align 8, !dbg !415
  %8095 = load i32, i32* %7890, align 4, !dbg !416
  %8096 = trunc i32 %8095 to i8, !dbg !417
  %8097 = getelementptr i8, i8* %4, i8 %8096, !dbg !418
  %8098 = load i8, i8* %8097, align 1, !dbg !419
  %8099 = zext i8 %8098 to i64, !dbg !420
  %8100 = load i64, i64* %8053, align 4, !dbg !421
  %8101 = add i64 %8100, %8099, !dbg !422
  store i64 %8101, i64* %8053, align 4, !dbg !423
  br label %8070, !dbg !424

8102:                                             ; preds = %8070
  %8103 = load i64, i64* %8053, align 4, !dbg !425
  %8104 = load i32, i32* %7905, align 4, !dbg !426
  %8105 = zext i32 %8104 to i64, !dbg !427
  %8106 = icmp uge i64 %8080, %8081, !dbg !428
  %8107 = icmp ugt i64 %8080, %8081, !dbg !429
  %8108 = icmp ne i64 %8103, %8105, !dbg !430
  %8109 = icmp ugt i64 %8103, %8105, !dbg !431
  %8110 = or i1 %8107, %8108, !dbg !432
  %8111 = and i1 %8106, %8110, !dbg !433
  %8112 = or i1 %8111, %8109, !dbg !434
  br i1 %8112, label %8113, label %8117, !dbg !435

8113:                                             ; preds = %8102
  %8114 = load i32, i32* %7897, align 4, !dbg !436
  %8115 = icmp eq i32 %8114, 0, !dbg !437
  br i1 %8115, label %8116, label %8117, !dbg !438

8116:                                             ; preds = %8113
  store i32 0, i32* %8050, align 4, !dbg !439
  store i8* %8062, i8** %8059, align 8, !dbg !440
  br label %8117, !dbg !441

8117:                                             ; preds = %8116, %8113, %8102
  %8118 = load i32, i32* %8050, align 4, !dbg !442
  %8119 = trunc i32 %8118 to i16, !dbg !443
  store i16 %8119, i16* %7908, align 2, !dbg !444
  %8120 = load i8*, i8** %8059, align 8, !dbg !445
  %8121 = ptrtoint i8* %8120 to i64, !dbg !446
  %8122 = load i8*, i8** %7889, align 8, !dbg !447
  %8123 = ptrtoint i8* %8122 to i64, !dbg !448
  %8124 = sub i64 %8121, %8123, !dbg !449
  %8125 = trunc i64 %8124 to i32, !dbg !450
  store i32 %8125, i32* %7904, align 4, !dbg !451
  br label %8127, !dbg !452

8126:                                             ; preds = %8041
  store i32 0, i32* %7890, align 4, !dbg !453
  br label %8127, !dbg !454

8127:                                             ; preds = %8117, %8126
  %8128 = load i16, i16* %7908, align 2, !dbg !455
  %8129 = icmp sle i16 %8128, 3, !dbg !456
  br i1 %8129, label %8130, label %7959, !dbg !457

8130:                                             ; preds = %8127
  %8131 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7893, i32 0, i32 1, !dbg !458
  %8132 = load i16, i16* %8131, align 2, !dbg !458
  %8133 = and i16 %8132, 9216, !dbg !458
  %8134 = icmp ne i16 %8133, 0, !dbg !458
  br i1 %8134, label %8135, label %8136, !dbg !458

8135:                                             ; preds = %8130
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7893), !dbg !458
  br label %8137, !dbg !458

8136:                                             ; preds = %8130
  store i16 1, i16* %8131, align 2, !dbg !458
  br label %8137, !dbg !458

8137:                                             ; preds = %8135, %8136, %8006, %7986, %8025, %8036, %7954, %7955
  call void @llvm.stackrestore(i8* %7882), !dbg !459
  br label %8138, !dbg !74

8138:                                             ; preds = %8137, %14
  %8139 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1132
  %8140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8139, i32 0, i32 1, !dbg !1135
  %8141 = load i16, i16* %8140, align 2, !dbg !1136
  %8142 = and i16 %8141, 36, !dbg !1137
  %8143 = icmp ne i16 %8142, 0, !dbg !1138
  br i1 %8143, label %8144, label %8145, !dbg !1139

8144:                                             ; preds = %8138
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %8139), !dbg !1140
  br label %8145, !dbg !1141

8145:                                             ; preds = %8144, %8138, %14
  %8146 = call i8* @llvm.stacksave(), !dbg !1244
  %8147 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1247
  %8148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !1248
  %8149 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 29, !dbg !1249
  %8150 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8149, i32 0, i32 1, !dbg !1250
  %8151 = alloca i16, align 2, !dbg !1251
  %8152 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8147, i32 0, i32 1, !dbg !1252
  %8153 = load i16, i16* %8152, align 2, !dbg !1255
  %8154 = and i16 %8153, 44, !dbg !1256
  %8155 = icmp ne i16 %8154, 0, !dbg !1257
  br i1 %8155, label %8156, label %8157, !dbg !1258

8156:                                             ; preds = %8145
  store i16 %8154, i16* %8151, align 2, !dbg !1251
  br label %8163, !dbg !1259

8157:                                             ; preds = %8145
  %8158 = and i16 %8153, 18, !dbg !1251
  %8159 = icmp ne i16 %8158, 0, !dbg !1260
  br i1 %8159, label %8160, label %8162, !dbg !1261

8160:                                             ; preds = %8157
  %8161 = call i16 @computeNumericType(%struct.sqlite3_value* %8147), !dbg !1262
  br label %8163, !dbg !1263

8162:                                             ; preds = %8157
  store i16 0, i16* %8151, align 2, !dbg !1251
  br label %8163, !dbg !1264

8163:                                             ; preds = %8160, %8162, %8156
  %8164 = load i16, i16* %8151, align 2, !dbg !1251
  %8165 = alloca i16, align 2, !dbg !1265
  %8166 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8148, i32 0, i32 1, !dbg !1252
  %8167 = load i16, i16* %8166, align 2, !dbg !1255
  %8168 = and i16 %8167, 44, !dbg !1256
  %8169 = icmp ne i16 %8168, 0, !dbg !1257
  br i1 %8169, label %8170, label %8171, !dbg !1258

8170:                                             ; preds = %8163
  store i16 %8168, i16* %8165, align 2, !dbg !1265
  br label %8177, !dbg !1259

8171:                                             ; preds = %8163
  %8172 = and i16 %8167, 18, !dbg !1265
  %8173 = icmp ne i16 %8172, 0, !dbg !1260
  br i1 %8173, label %8174, label %8176, !dbg !1261

8174:                                             ; preds = %8171
  %8175 = call i16 @computeNumericType(%struct.sqlite3_value* %8148), !dbg !1262
  br label %8177, !dbg !1263

8176:                                             ; preds = %8171
  store i16 0, i16* %8165, align 2, !dbg !1265
  br label %8177, !dbg !1264

8177:                                             ; preds = %8174, %8176, %8170
  %8178 = load i16, i16* %8165, align 2, !dbg !1265
  %8179 = load i16, i16* %8152, align 2, !dbg !1266
  %8180 = load i16, i16* %8166, align 2, !dbg !1267
  %8181 = or i16 %8179, %8180, !dbg !1268
  %8182 = and i16 %8164, %8178, !dbg !1269
  %8183 = and i16 %8182, 4, !dbg !1270
  %8184 = icmp ne i16 %8183, 0, !dbg !1271
  br i1 %8184, label %8185, label %8202, !dbg !1272

8185:                                             ; preds = %8177
  %8186 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8147, i32 0, i32 0, !dbg !1273
  %8187 = bitcast %union.MemValue* %8186 to i64*, !dbg !1274
  %8188 = load i64, i64* %8187, align 4, !dbg !1275
  %8189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8148, i32 0, i32 0, !dbg !1276
  %8190 = bitcast %union.MemValue* %8189 to i64*, !dbg !1277
  %8191 = load i64, i64* %8190, align 4, !dbg !1278
  %8192 = alloca i64, align 8, !dbg !1279
  store i64 %8191, i64* %8192, align 4, !dbg !1280
  %8193 = call i32 @sqlite3SubInt64(i64* %8192, i64 %8188), !dbg !1281
  %8194 = icmp eq i32 %8193, 0, !dbg !1282
  br i1 %8194, label %8195, label %8205, !dbg !1283

8195:                                             ; preds = %8185
  %8196 = load i64, i64* %8192, align 4, !dbg !1284
  %8197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8149, i32 0, i32 0, !dbg !1285
  %8198 = bitcast %union.MemValue* %8197 to i64*, !dbg !1286
  store i64 %8196, i64* %8198, align 4, !dbg !1287
  %8199 = load i16, i16* %8150, align 2, !dbg !1288
  %8200 = and i16 %8199, 15936, !dbg !1288
  %8201 = or i16 %8200, 4, !dbg !1288
  store i16 %8201, i16* %8150, align 2, !dbg !1288
  br label %8223, !dbg !1289

8202:                                             ; preds = %8177
  %8203 = and i16 %8181, 1, !dbg !1290
  %8204 = icmp ne i16 %8203, 0, !dbg !1291
  br i1 %8204, label %8217, label %8205, !dbg !1292

8205:                                             ; preds = %8202, %8185
  %8206 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %8147), !dbg !1293
  %8207 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %8148), !dbg !1294
  %8208 = fsub double %8207, %8206, !dbg !1295
  %8209 = call i32 @sqlite3IsNaN(double %8208), !dbg !1296
  %8210 = icmp ne i32 %8209, 0, !dbg !1297
  br i1 %8210, label %8217, label %8211, !dbg !1298

8211:                                             ; preds = %8205
  %8212 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8149, i32 0, i32 0, !dbg !1299
  %8213 = bitcast %union.MemValue* %8212 to double*, !dbg !1300
  store double %8208, double* %8213, align 8, !dbg !1301
  %8214 = load i16, i16* %8150, align 2, !dbg !1288
  %8215 = and i16 %8214, 15936, !dbg !1288
  %8216 = or i16 %8215, 8, !dbg !1288
  store i16 %8216, i16* %8150, align 2, !dbg !1288
  br label %8223, !dbg !1302

8217:                                             ; preds = %8202, %8205
  %8218 = load i16, i16* %8150, align 2, !dbg !1303
  %8219 = and i16 %8218, 9216, !dbg !1303
  %8220 = icmp ne i16 %8219, 0, !dbg !1303
  br i1 %8220, label %8221, label %8222, !dbg !1303

8221:                                             ; preds = %8217
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8149), !dbg !1303
  br label %8223, !dbg !1303

8222:                                             ; preds = %8217
  store i16 1, i16* %8150, align 2, !dbg !1303
  br label %8223, !dbg !1303

8223:                                             ; preds = %8221, %8222, %8195, %8211
  call void @llvm.stackrestore(i8* %8146), !dbg !1304
  br label %8224, !dbg !74

8224:                                             ; preds = %8223, %14
  %8225 = call i8* @llvm.stacksave(), !dbg !1305
  %8226 = alloca i32, align 8, !dbg !1308
  store i32 0, i32* %8226, align 4, !dbg !1309
  %8227 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, i32 1, !dbg !1310
  %8228 = load i8, i8* %8227, align 1, !dbg !1311
  %8229 = icmp eq i8 %8228, -8, !dbg !1312
  br i1 %8229, label %8230, label %8252, !dbg !1313

8230:                                             ; preds = %8224
  %8231 = alloca %struct.sqlite3_context*, align 8, !dbg !1314
  %8232 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1315
  %8233 = bitcast i8* %8232 to %struct.sqlite3_context*, !dbg !1316
  store %struct.sqlite3_context* %8233, %struct.sqlite3_context** %8231, align 8, !dbg !1317
  %8234 = ptrtoint %struct.sqlite3_context* %8233 to i64, !dbg !1318
  %8235 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 0, !dbg !1319
  %8236 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 1, !dbg !1320
  %8237 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 2, !dbg !1321
  %8238 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 3, !dbg !1322
  %8239 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 4, !dbg !1323
  %8240 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 5, !dbg !1324
  %8241 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 6, !dbg !1325
  %8242 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 7, !dbg !1326
  %8243 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8233, i32 0, i32 8, !dbg !1327
  %8244 = bitcast [1 x %struct.sqlite3_value*]* %8243 to %struct.sqlite3_value**, !dbg !1328
  %8245 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, i32 6, i32 0, !dbg !1329
  %8246 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %8244, i32 1, !dbg !1330
  %8247 = bitcast %struct.sqlite3_value** %8246 to %struct.sqlite3_value*, !dbg !1331
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %8247, %struct.sqlite3* %13, i16 1), !dbg !1332
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %8237, align 8, !dbg !1333
  store %struct.sqlite3_value* %8247, %struct.sqlite3_value** %8235, align 8, !dbg !1334
  %8248 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, !dbg !1335
  %8249 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8248, i32 0, i32 6, !dbg !1336
  %8250 = bitcast %union.p4union* %8249 to %struct.FuncDef**, !dbg !1337
  %8251 = load %struct.FuncDef*, %struct.FuncDef** %8250, align 8, !dbg !1338
  store %struct.FuncDef* %8251, %struct.FuncDef** %8236, align 8, !dbg !1339
  store i32 72, i32* %8239, align 4, !dbg !1340
  store %struct.Vdbe* %0, %struct.Vdbe** %8238, align 8, !dbg !1341
  store i8 0, i8* %8241, align 1, !dbg !1342
  store i32 0, i32* %8240, align 4, !dbg !1343
  store i8 1, i8* %8242, align 1, !dbg !1344
  store i8 -16, i8* %8227, align 1, !dbg !1345
  store i8* %8232, i8** %8245, align 8, !dbg !1346
  br label %8252, !dbg !1347

8252:                                             ; preds = %8230, %8224
  %8253 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, i32 6, i32 0, !dbg !1348
  %8254 = bitcast i8** %8253 to %struct.sqlite3_context**, !dbg !1349
  %8255 = load %struct.sqlite3_context*, %struct.sqlite3_context** %8254, align 8, !dbg !1350
  %8256 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 0, !dbg !1351
  %8257 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 1, !dbg !1352
  %8258 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 5, !dbg !1353
  %8259 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 6, !dbg !1354
  %8260 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 7, !dbg !1355
  %8261 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 8, !dbg !1356
  %8262 = bitcast [1 x %struct.sqlite3_value*]* %8261 to %struct.sqlite3_value**, !dbg !1357
  %8263 = alloca i32, align 8, !dbg !1358
  %8264 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1359
  %8265 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8255, i32 0, i32 2, !dbg !1360
  %8266 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8265, align 8, !dbg !1361
  %8267 = icmp ne %struct.sqlite3_value* %8266, %8264, !dbg !1362
  br i1 %8267, label %8268, label %8281, !dbg !1363

8268:                                             ; preds = %8252
  store %struct.sqlite3_value* %8264, %struct.sqlite3_value** %8265, align 8, !dbg !1364
  %8269 = load i8, i8* %8260, align 1, !dbg !1365
  %8270 = zext i8 %8269 to i32, !dbg !1366
  %8271 = add i32 %8270, -1, !dbg !1367
  %8272 = alloca i32, align 8, !dbg !1368
  store i32 %8271, i32* %8272, align 4, !dbg !1369
  br label %8278, !dbg !1370

8273:                                             ; preds = %8278
  %8274 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %8262, i32 %8279, !dbg !1371
  %8275 = add i32 %8279, 29, !dbg !1372
  %8276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8275, !dbg !1373
  store %struct.sqlite3_value* %8276, %struct.sqlite3_value** %8274, align 8, !dbg !1374
  %8277 = add i32 %8279, -1, !dbg !1375
  store i32 %8277, i32* %8272, align 4, !dbg !1376
  br label %8278, !dbg !1377

8278:                                             ; preds = %8273, %8268
  %8279 = load i32, i32* %8272, align 4, !dbg !1378
  %8280 = icmp sge i32 %8279, 0, !dbg !1379
  br i1 %8280, label %8273, label %8281, !dbg !1380

8281:                                             ; preds = %8278, %8252
  %8282 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8264, i32 0, i32 4, !dbg !1381
  %8283 = load i32, i32* %8282, align 4, !dbg !1382
  %8284 = add i32 %8283, 1, !dbg !1383
  store i32 %8284, i32* %8282, align 4, !dbg !1384
  %8285 = load %struct.FuncDef*, %struct.FuncDef** %8257, align 8, !dbg !1385
  %8286 = load i8, i8* %8260, align 1, !dbg !1386
  %8287 = zext i8 %8286 to i32, !dbg !1387
  %8288 = getelementptr %struct.FuncDef, %struct.FuncDef* %8285, i32 0, i32 4, !dbg !1388
  %8289 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %8288, align 8, !dbg !1389
  call void %8289(%struct.sqlite3_context* %8255, i32 %8287, %struct.sqlite3_value** %8262), !dbg !1390
  %8290 = load i32, i32* %8258, align 4, !dbg !1391
  %8291 = icmp ne i32 %8290, 0, !dbg !1392
  br i1 %8291, label %8292, label %8307, !dbg !1393

8292:                                             ; preds = %8281
  %8293 = icmp sgt i32 %8290, 0, !dbg !1394
  br i1 %8293, label %8294, label %8298, !dbg !1395

8294:                                             ; preds = %8292
  %8295 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8256, align 8, !dbg !1396
  %8296 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %8295), !dbg !1397
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %8296), !dbg !1398
  %8297 = load i32, i32* %8258, align 4, !dbg !1399
  store i32 %8297, i32* %8226, align 4, !dbg !1400
  br label %8298, !dbg !1401

8298:                                             ; preds = %8294, %8292
  %8299 = load i8, i8* %8259, align 1, !dbg !1402
  %8300 = icmp ne i8 %8299, 0, !dbg !1403
  br i1 %8300, label %8301, label %8303, !dbg !1404

8301:                                             ; preds = %8298
  store i32 31, i32* %8263, align 4, !dbg !1405
  %8302 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1406
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %8302, i64 1), !dbg !1407
  store i8 0, i8* %8259, align 1, !dbg !1408
  br label %8303, !dbg !1409

8303:                                             ; preds = %8301, %8298
  %8304 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8256, align 8, !dbg !1410
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %8304), !dbg !1411
  %8305 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8304, i32 0, i32 1, !dbg !1412
  store i16 1, i16* %8305, align 2, !dbg !1413
  store i32 0, i32* %8258, align 4, !dbg !1414
  %8306 = load i32, i32* %8226, align 4, !dbg !1415
  br label %8307, !dbg !1416

8307:                                             ; preds = %8281, %8303
  call void @llvm.stackrestore(i8* %8225), !dbg !1417
  br label %8308, !dbg !74

8308:                                             ; preds = %8307, %14
  %8309 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !1418
  %8310 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %8309, i32 0), !dbg !1421
  %8311 = icmp ne i32 %8310, 0, !dbg !1422
  br i1 %8311, label %8824, label %8312, !dbg !1423

8312:                                             ; preds = %8308, %14
  %8313 = call i8* @llvm.stacksave(), !dbg !167
  %8314 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %8315 = load i8, i8* %8314, align 1, !dbg !171
  %8316 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %8316, align 4, !dbg !173
  %8317 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %8318 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %8319 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8317, align 8, !dbg !176
  store %struct.VdbeCursor* %8319, %struct.VdbeCursor** %8318, align 8, !dbg !177
  %8320 = alloca i8*, align 8, !dbg !178
  %8321 = alloca i32, align 4, !dbg !179
  %8322 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8318, i32* %8316), !dbg !180
  %8323 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8318, align 8, !dbg !181
  %8324 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !182
  %8325 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 16, !dbg !183
  %8326 = load i16, i16* %8325, align 2, !dbg !184
  %8327 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 19, !dbg !185
  %8328 = load i32*, i32** %8327, align 8, !dbg !186
  %8329 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 0, !dbg !187
  %8330 = load i8, i8* %8329, align 1, !dbg !188
  %8331 = icmp ne i8 %8330, 3, !dbg !189
  %8332 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 2, !dbg !190
  %8333 = load i8, i8* %8332, align 1, !dbg !191
  %8334 = icmp ne i8 %8333, 0, !dbg !192
  %8335 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 14, !dbg !193
  %8336 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 21, !dbg !194
  %8337 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 22, !dbg !195
  %8338 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 20, !dbg !196
  %8339 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 17, !dbg !197
  %8340 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 9, !dbg !198
  %8341 = load i32, i32* %8340, align 4, !dbg !199
  %8342 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %8343 = load i32, i32* %8342, align 4, !dbg !201
  %8344 = icmp ne i32 %8341, %8343, !dbg !202
  br i1 %8344, label %8345, label %8387, !dbg !203

8345:                                             ; preds = %8312
  br i1 %8334, label %8367, label %8362, !dbg !204

8346:                                             ; preds = %8362, %8369
  %8347 = load i32, i32* %8342, align 4, !dbg !205
  store i32 %8347, i32* %8340, align 4, !dbg !206
  %8348 = load i8*, i8** %8338, align 8, !dbg !207
  %8349 = load i8, i8* %8348, align 1, !dbg !208
  %8350 = icmp sgt i8 %8349, -1, !dbg !211
  br i1 %8350, label %8351, label %8353, !dbg !212

8351:                                             ; preds = %8346
  %8352 = zext i8 %8349 to i32, !dbg !213
  store i32 %8352, i32* %8328, align 4, !dbg !214
  store i32 1, i32* %8335, align 4, !dbg !215
  br label %8356, !dbg !216

8353:                                             ; preds = %8346
  %8354 = call i8 @sqlite3GetVarint32(i8* %8348, i32* %8328), !dbg !217
  %8355 = zext i8 %8354 to i32, !dbg !218
  store i32 %8355, i32* %8335, align 4, !dbg !219
  br label %8356, !dbg !220

8356:                                             ; preds = %8353, %8351
  store i16 0, i16* %8339, align 2, !dbg !221
  %8357 = load i32, i32* %8337, align 4, !dbg !222
  %8358 = load i32, i32* %8328, align 4, !dbg !223
  %8359 = icmp ult i32 %8357, %8358, !dbg !224
  br i1 %8359, label %8361, label %8360, !dbg !225

8360:                                             ; preds = %8356
  store i8* %8348, i8** %8320, align 8, !dbg !226
  br label %8478, !dbg !227

8361:                                             ; preds = %8356
  store i8* null, i8** %8338, align 8, !dbg !228
  store i32 0, i32* %8337, align 4, !dbg !229
  br label %8387, !dbg !230

8362:                                             ; preds = %8345
  %8363 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 12, i32 0, !dbg !231
  %8364 = load %struct.BtCursor*, %struct.BtCursor** %8363, align 8, !dbg !232
  %8365 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8364), !dbg !233
  store i32 %8365, i32* %8336, align 4, !dbg !234
  %8366 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8364, i32* %8337), !dbg !235
  store i8* %8366, i8** %8338, align 8, !dbg !236
  br label %8346, !dbg !237

8367:                                             ; preds = %8345
  %8368 = icmp eq i8 %8330, 3, !dbg !238
  br i1 %8368, label %8369, label %8380, !dbg !239

8369:                                             ; preds = %8367
  %8370 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 10, !dbg !240
  %8371 = load i32, i32* %8370, align 4, !dbg !241
  %8372 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8371, !dbg !242
  %8373 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8372, i32 0, i32 1, !dbg !243
  %8374 = load i16, i16* %8373, align 2, !dbg !244
  %8375 = and i16 %8374, 16, !dbg !245
  %8376 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8372, i32 0, i32 4, !dbg !246
  %8377 = load i32, i32* %8376, align 4, !dbg !247
  store i32 %8377, i32* %8336, align 4, !dbg !248
  store i32 %8377, i32* %8337, align 4, !dbg !249
  %8378 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8372, i32 0, i32 5, !dbg !250
  %8379 = load i8*, i8** %8378, align 8, !dbg !251
  store i8* %8379, i8** %8338, align 8, !dbg !252
  br label %8346, !dbg !253

8380:                                             ; preds = %8367
  %8381 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 1, !dbg !254
  %8382 = load i16, i16* %8381, align 2, !dbg !254
  %8383 = and i16 %8382, 9216, !dbg !254
  %8384 = icmp ne i16 %8383, 0, !dbg !254
  br i1 %8384, label %8385, label %8386, !dbg !254

8385:                                             ; preds = %8380
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8324), !dbg !254
  br label %8566, !dbg !254

8386:                                             ; preds = %8380
  store i16 1, i16* %8381, align 2, !dbg !254
  br label %8566, !dbg !254

8387:                                             ; preds = %8361, %8312
  %8388 = load i16, i16* %8339, align 2, !dbg !255
  %8389 = icmp ule i16 %8388, 0, !dbg !256
  br i1 %8389, label %8470, label %8467, !dbg !257

8390:                                             ; preds = %8467, %8556
  %8391 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 1, !dbg !258
  %8392 = load i16, i16* %8391, align 2, !dbg !259
  %8393 = and i16 9216, %8392, !dbg !260
  %8394 = icmp eq i16 0, %8393, !dbg !261
  br i1 %8394, label %8395, label %8399, !dbg !262

8395:                                             ; preds = %8390
  %8396 = icmp ne i16 %8393, 0, !dbg !263
  br i1 %8396, label %8397, label %8398, !dbg !263

8397:                                             ; preds = %8395
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8324), !dbg !263
  br label %8399, !dbg !263

8398:                                             ; preds = %8395
  store i16 1, i16* %8391, align 2, !dbg !263
  br label %8399, !dbg !263

8399:                                             ; preds = %8397, %8398, %8390
  %8400 = load i32, i32* %8321, align 4, !dbg !264
  %8401 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 23, i32 0, !dbg !265
  %8402 = load i32, i32* %8401, align 4, !dbg !266
  %8403 = load i32, i32* %8337, align 4, !dbg !267
  %8404 = getelementptr i32, i32* %8328, i32 1, !dbg !268
  %8405 = load i32, i32* %8404, align 4, !dbg !269
  %8406 = icmp sge i32 %8403, %8405, !dbg !270
  br i1 %8406, label %8407, label %8446, !dbg !271

8407:                                             ; preds = %8399
  %8408 = load i8*, i8** %8338, align 8, !dbg !272
  %8409 = ptrtoint i8* %8408 to i64, !dbg !273
  %8410 = load i32, i32* %8328, align 4, !dbg !275
  %8411 = zext i32 %8410 to i64, !dbg !276
  %8412 = add i64 %8409, %8411, !dbg !277
  %8413 = inttoptr i64 %8412 to i8*, !dbg !278
  store i8* %8413, i8** %8320, align 8, !dbg !279
  %8414 = load i32, i32* %8321, align 4, !dbg !280
  %8415 = icmp ult i32 %8414, 12, !dbg !281
  br i1 %8415, label %8416, label %8418, !dbg !282

8416:                                             ; preds = %8407
  %8417 = call i32 @sqlite3VdbeSerialGet(i8* %8413, i32 %8414, %struct.sqlite3_value* %8324), !dbg !283
  br label %8566, !dbg !284

8418:                                             ; preds = %8407
  %8419 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %8419, align 2, !dbg !286
  %8420 = getelementptr i16, i16* %8419, i32 1, !dbg !287
  store i16 514, i16* %8420, align 2, !dbg !288
  %8421 = load i32, i32* %8321, align 4, !dbg !289
  %8422 = sub i32 %8421, 12, !dbg !290
  %8423 = lshr i32 %8422, 1, !dbg !291
  %8424 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 4, !dbg !292
  store i32 %8423, i32* %8424, align 4, !dbg !293
  %8425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 2, !dbg !294
  store i8 %8315, i8* %8425, align 1, !dbg !295
  %8426 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 5, !dbg !296
  %8427 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 7, !dbg !297
  %8428 = load i32, i32* %8427, align 4, !dbg !298
  %8429 = add i32 %8423, 2, !dbg !299
  %8430 = icmp slt i32 %8428, %8429, !dbg !300
  br i1 %8430, label %8431, label %8433, !dbg !301

8431:                                             ; preds = %8418
  store i16 1, i16* %8391, align 2, !dbg !302
  %8432 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8324, i32 %8429, i32 0), !dbg !303
  br label %8436, !dbg !304

8433:                                             ; preds = %8418
  %8434 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 6, !dbg !305
  %8435 = load i8*, i8** %8434, align 8, !dbg !306
  store i8* %8435, i8** %8426, align 8, !dbg !307
  br label %8436, !dbg !308

8436:                                             ; preds = %8433, %8431
  %8437 = zext i32 %8423 to i64, !dbg !309
  %8438 = load i8*, i8** %8426, align 8, !dbg !310
  %8439 = load i8*, i8** %8320, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8438, i8* %8439, i64 %8437, i1 false), !dbg !312
  %8440 = getelementptr i8, i8* %8438, i32 %8423, !dbg !313
  store i8 0, i8* %8440, align 1, !dbg !314
  %8441 = add i32 %8423, 1, !dbg !315
  %8442 = getelementptr i8, i8* %8438, i32 %8441, !dbg !316
  store i8 0, i8* %8442, align 1, !dbg !317
  %8443 = and i32 %8421, 1, !dbg !318
  %8444 = getelementptr i16, i16* %8419, i32 %8443, !dbg !319
  %8445 = load i16, i16* %8444, align 2, !dbg !320
  store i16 %8445, i16* %8391, align 2, !dbg !321
  br label %8566, !dbg !322

8446:                                             ; preds = %8399
  %8447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 2, !dbg !323
  store i8 %8315, i8* %8447, align 1, !dbg !324
  %8448 = load i32, i32* %8321, align 4, !dbg !325
  %8449 = and i32 %8448, 1, !dbg !326
  %8450 = icmp eq i32 %8449, 0, !dbg !327
  %8451 = icmp sge i32 %8448, 12, !dbg !328
  %8452 = and i1 %8451, %8450, !dbg !329
  %8453 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8448), !dbg !330
  %8454 = icmp eq i32 %8453, 0, !dbg !331
  br i1 %8454, label %8465, label %8455, !dbg !332

8455:                                             ; preds = %8446
  %8456 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 12, i32 0, !dbg !333
  %8457 = load %struct.BtCursor*, %struct.BtCursor** %8456, align 8, !dbg !334
  %8458 = load i32, i32* %8328, align 4, !dbg !336
  %8459 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8457, i32 %8458, i32 %8453, %struct.sqlite3_value* %8324), !dbg !337
  %8460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 5, !dbg !338
  %8461 = load i8*, i8** %8460, align 8, !dbg !339
  %8462 = call i32 @sqlite3VdbeSerialGet(i8* %8461, i32 %8448, %struct.sqlite3_value* %8324), !dbg !340
  %8463 = load i16, i16* %8391, align 2, !dbg !341
  %8464 = and i16 %8463, -4097, !dbg !342
  store i16 %8464, i16* %8391, align 2, !dbg !343
  br label %8566, !dbg !344

8465:                                             ; preds = %8446
  %8466 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8448, %struct.sqlite3_value* %8324), !dbg !345
  br label %8566, !dbg !346

8467:                                             ; preds = %8387
  %8468 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 23, i32 0, !dbg !347
  %8469 = load i32, i32* %8468, align 4, !dbg !348
  store i32 %8469, i32* %8321, align 4, !dbg !349
  br label %8390, !dbg !350

8470:                                             ; preds = %8387
  %8471 = load i32, i32* %8335, align 4, !dbg !351
  %8472 = load i32, i32* %8328, align 4, !dbg !352
  %8473 = icmp ult i32 %8471, %8472, !dbg !353
  br i1 %8473, label %8474, label %8555, !dbg !354

8474:                                             ; preds = %8470
  %8475 = load i8*, i8** %8338, align 8, !dbg !355
  %8476 = icmp eq i8* %8475, null, !dbg !356
  br i1 %8476, label %8478, label %8477, !dbg !357

8477:                                             ; preds = %8474
  store i8* %8475, i8** %8320, align 8, !dbg !358
  br label %8478, !dbg !359

8478:                                             ; preds = %8477, %8474, %8360
  %8479 = alloca i32, align 4, !dbg !360
  %8480 = load i16, i16* %8339, align 2, !dbg !361
  %8481 = zext i16 %8480 to i32, !dbg !362
  store i32 %8481, i32* %8479, align 4, !dbg !363
  %8482 = alloca i64, align 8, !dbg !364
  %8483 = getelementptr i32, i32* %8328, i32 %8481, !dbg !365
  %8484 = load i32, i32* %8483, align 4, !dbg !366
  %8485 = zext i32 %8484 to i64, !dbg !367
  store i64 %8485, i64* %8482, align 4, !dbg !368
  %8486 = load i8*, i8** %8320, align 8, !dbg !369
  %8487 = load i32, i32* %8335, align 4, !dbg !370
  %8488 = alloca i8*, align 8, !dbg !371
  %8489 = getelementptr i8, i8* %8486, i32 %8487, !dbg !372
  store i8* %8489, i8** %8488, align 8, !dbg !373
  %8490 = load i32, i32* %8328, align 4, !dbg !374
  %8491 = getelementptr i8, i8* %8486, i32 %8490, !dbg !375
  br label %8492, !dbg !376

8492:                                             ; preds = %8499, %8478
  %8493 = load i32, i32* %8479, align 4, !dbg !377
  %8494 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8323, i32 0, i32 23, i32 %8493, !dbg !378
  %8495 = load i8*, i8** %8488, align 8, !dbg !379
  %8496 = load i8, i8* %8495, align 1, !dbg !380
  %8497 = zext i8 %8496 to i32, !dbg !381
  store i32 %8497, i32* %8321, align 4, !dbg !382
  store i32 %8497, i32* %8494, align 4, !dbg !383
  %8498 = icmp sgt i8 %8496, -1, !dbg !384
  br i1 %8498, label %8522, label %8513, !dbg !385

8499:                                             ; preds = %8513, %8522
  %8500 = load i32, i32* %8479, align 4, !dbg !386
  %8501 = add i32 %8500, 1, !dbg !387
  store i32 %8501, i32* %8479, align 4, !dbg !388
  %8502 = load i64, i64* %8482, align 4, !dbg !389
  %8503 = and i64 4294967295, %8502, !dbg !390
  %8504 = trunc i64 %8503 to i32, !dbg !391
  %8505 = getelementptr i32, i32* %8328, i32 %8501, !dbg !392
  store i32 %8504, i32* %8505, align 4, !dbg !393
  %8506 = load i32, i32* %8479, align 4, !dbg !394
  %8507 = icmp sle i32 %8506, 0, !dbg !395
  %8508 = load i8*, i8** %8488, align 8, !dbg !396
  %8509 = ptrtoint i8* %8508 to i64, !dbg !397
  %8510 = ptrtoint i8* %8491 to i64, !dbg !398
  %8511 = icmp ult i64 %8509, %8510, !dbg !399
  %8512 = and i1 %8507, %8511, !dbg !400
  br i1 %8512, label %8492, label %8531, !dbg !401

8513:                                             ; preds = %8492
  %8514 = load i8*, i8** %8488, align 8, !dbg !402
  %8515 = call i8 @sqlite3GetVarint32(i8* %8514, i32* %8321), !dbg !403
  %8516 = getelementptr i8, i8* %8514, i8 %8515, !dbg !404
  store i8* %8516, i8** %8488, align 8, !dbg !405
  %8517 = load i32, i32* %8321, align 4, !dbg !406
  store i32 %8517, i32* %8494, align 4, !dbg !407
  %8518 = load i64, i64* %8482, align 4, !dbg !408
  %8519 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8517), !dbg !409
  %8520 = zext i32 %8519 to i64, !dbg !410
  %8521 = add i64 %8518, %8520, !dbg !411
  store i64 %8521, i64* %8482, align 4, !dbg !412
  br label %8499, !dbg !413

8522:                                             ; preds = %8492
  %8523 = getelementptr i8, i8* %8495, i32 1, !dbg !414
  store i8* %8523, i8** %8488, align 8, !dbg !415
  %8524 = load i32, i32* %8321, align 4, !dbg !416
  %8525 = trunc i32 %8524 to i8, !dbg !417
  %8526 = getelementptr i8, i8* %4, i8 %8525, !dbg !418
  %8527 = load i8, i8* %8526, align 1, !dbg !419
  %8528 = zext i8 %8527 to i64, !dbg !420
  %8529 = load i64, i64* %8482, align 4, !dbg !421
  %8530 = add i64 %8529, %8528, !dbg !422
  store i64 %8530, i64* %8482, align 4, !dbg !423
  br label %8499, !dbg !424

8531:                                             ; preds = %8499
  %8532 = load i64, i64* %8482, align 4, !dbg !425
  %8533 = load i32, i32* %8336, align 4, !dbg !426
  %8534 = zext i32 %8533 to i64, !dbg !427
  %8535 = icmp uge i64 %8509, %8510, !dbg !428
  %8536 = icmp ugt i64 %8509, %8510, !dbg !429
  %8537 = icmp ne i64 %8532, %8534, !dbg !430
  %8538 = icmp ugt i64 %8532, %8534, !dbg !431
  %8539 = or i1 %8536, %8537, !dbg !432
  %8540 = and i1 %8535, %8539, !dbg !433
  %8541 = or i1 %8540, %8538, !dbg !434
  br i1 %8541, label %8542, label %8546, !dbg !435

8542:                                             ; preds = %8531
  %8543 = load i32, i32* %8328, align 4, !dbg !436
  %8544 = icmp eq i32 %8543, 0, !dbg !437
  br i1 %8544, label %8545, label %8546, !dbg !438

8545:                                             ; preds = %8542
  store i32 0, i32* %8479, align 4, !dbg !439
  store i8* %8491, i8** %8488, align 8, !dbg !440
  br label %8546, !dbg !441

8546:                                             ; preds = %8545, %8542, %8531
  %8547 = load i32, i32* %8479, align 4, !dbg !442
  %8548 = trunc i32 %8547 to i16, !dbg !443
  store i16 %8548, i16* %8339, align 2, !dbg !444
  %8549 = load i8*, i8** %8488, align 8, !dbg !445
  %8550 = ptrtoint i8* %8549 to i64, !dbg !446
  %8551 = load i8*, i8** %8320, align 8, !dbg !447
  %8552 = ptrtoint i8* %8551 to i64, !dbg !448
  %8553 = sub i64 %8550, %8552, !dbg !449
  %8554 = trunc i64 %8553 to i32, !dbg !450
  store i32 %8554, i32* %8335, align 4, !dbg !451
  br label %8556, !dbg !452

8555:                                             ; preds = %8470
  store i32 0, i32* %8321, align 4, !dbg !453
  br label %8556, !dbg !454

8556:                                             ; preds = %8546, %8555
  %8557 = load i16, i16* %8339, align 2, !dbg !455
  %8558 = icmp sle i16 %8557, 0, !dbg !456
  br i1 %8558, label %8559, label %8390, !dbg !457

8559:                                             ; preds = %8556
  %8560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 1, !dbg !458
  %8561 = load i16, i16* %8560, align 2, !dbg !458
  %8562 = and i16 %8561, 9216, !dbg !458
  %8563 = icmp ne i16 %8562, 0, !dbg !458
  br i1 %8563, label %8564, label %8565, !dbg !458

8564:                                             ; preds = %8559
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8324), !dbg !458
  br label %8566, !dbg !458

8565:                                             ; preds = %8559
  store i16 1, i16* %8560, align 2, !dbg !458
  br label %8566, !dbg !458

8566:                                             ; preds = %8564, %8565, %8436, %8416, %8455, %8465, %8385, %8386
  call void @llvm.stackrestore(i8* %8313), !dbg !459
  br label %8567, !dbg !74

8567:                                             ; preds = %8566, %14
  %8568 = call i8* @llvm.stacksave(), !dbg !167
  %8569 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !170
  %8570 = load i8, i8* %8569, align 1, !dbg !171
  %8571 = alloca i32, align 4, !dbg !172
  store i32 8, i32* %8571, align 4, !dbg !173
  %8572 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !174
  %8573 = alloca %struct.VdbeCursor*, align 8, !dbg !175
  %8574 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8572, align 8, !dbg !176
  store %struct.VdbeCursor* %8574, %struct.VdbeCursor** %8573, align 8, !dbg !177
  %8575 = alloca i8*, align 8, !dbg !178
  %8576 = alloca i32, align 4, !dbg !179
  %8577 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8573, i32* %8571), !dbg !180
  %8578 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8573, align 8, !dbg !181
  %8579 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !182
  %8580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 16, !dbg !183
  %8581 = load i16, i16* %8580, align 2, !dbg !184
  %8582 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 19, !dbg !185
  %8583 = load i32*, i32** %8582, align 8, !dbg !186
  %8584 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 0, !dbg !187
  %8585 = load i8, i8* %8584, align 1, !dbg !188
  %8586 = icmp ne i8 %8585, 3, !dbg !189
  %8587 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 2, !dbg !190
  %8588 = load i8, i8* %8587, align 1, !dbg !191
  %8589 = icmp ne i8 %8588, 0, !dbg !192
  %8590 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 14, !dbg !193
  %8591 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 21, !dbg !194
  %8592 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 22, !dbg !195
  %8593 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 20, !dbg !196
  %8594 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 17, !dbg !197
  %8595 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 9, !dbg !198
  %8596 = load i32, i32* %8595, align 4, !dbg !199
  %8597 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !200
  %8598 = load i32, i32* %8597, align 4, !dbg !201
  %8599 = icmp ne i32 %8596, %8598, !dbg !202
  br i1 %8599, label %8600, label %8642, !dbg !203

8600:                                             ; preds = %8567
  br i1 %8589, label %8622, label %8617, !dbg !204

8601:                                             ; preds = %8617, %8624
  %8602 = load i32, i32* %8597, align 4, !dbg !205
  store i32 %8602, i32* %8595, align 4, !dbg !206
  %8603 = load i8*, i8** %8593, align 8, !dbg !207
  %8604 = load i8, i8* %8603, align 1, !dbg !208
  %8605 = icmp sgt i8 %8604, -1, !dbg !211
  br i1 %8605, label %8606, label %8608, !dbg !212

8606:                                             ; preds = %8601
  %8607 = zext i8 %8604 to i32, !dbg !213
  store i32 %8607, i32* %8583, align 4, !dbg !214
  store i32 1, i32* %8590, align 4, !dbg !215
  br label %8611, !dbg !216

8608:                                             ; preds = %8601
  %8609 = call i8 @sqlite3GetVarint32(i8* %8603, i32* %8583), !dbg !217
  %8610 = zext i8 %8609 to i32, !dbg !218
  store i32 %8610, i32* %8590, align 4, !dbg !219
  br label %8611, !dbg !220

8611:                                             ; preds = %8608, %8606
  store i16 0, i16* %8594, align 2, !dbg !221
  %8612 = load i32, i32* %8592, align 4, !dbg !222
  %8613 = load i32, i32* %8583, align 4, !dbg !223
  %8614 = icmp ult i32 %8612, %8613, !dbg !224
  br i1 %8614, label %8616, label %8615, !dbg !225

8615:                                             ; preds = %8611
  store i8* %8603, i8** %8575, align 8, !dbg !226
  br label %8735, !dbg !227

8616:                                             ; preds = %8611
  store i8* null, i8** %8593, align 8, !dbg !228
  store i32 0, i32* %8592, align 4, !dbg !229
  br label %8642, !dbg !230

8617:                                             ; preds = %8600
  %8618 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 12, i32 0, !dbg !231
  %8619 = load %struct.BtCursor*, %struct.BtCursor** %8618, align 8, !dbg !232
  %8620 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8619), !dbg !233
  store i32 %8620, i32* %8591, align 4, !dbg !234
  %8621 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8619, i32* %8592), !dbg !235
  store i8* %8621, i8** %8593, align 8, !dbg !236
  br label %8601, !dbg !237

8622:                                             ; preds = %8600
  %8623 = icmp eq i8 %8585, 3, !dbg !238
  br i1 %8623, label %8624, label %8635, !dbg !239

8624:                                             ; preds = %8622
  %8625 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 10, !dbg !240
  %8626 = load i32, i32* %8625, align 4, !dbg !241
  %8627 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8626, !dbg !242
  %8628 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8627, i32 0, i32 1, !dbg !243
  %8629 = load i16, i16* %8628, align 2, !dbg !244
  %8630 = and i16 %8629, 16, !dbg !245
  %8631 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8627, i32 0, i32 4, !dbg !246
  %8632 = load i32, i32* %8631, align 4, !dbg !247
  store i32 %8632, i32* %8591, align 4, !dbg !248
  store i32 %8632, i32* %8592, align 4, !dbg !249
  %8633 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8627, i32 0, i32 5, !dbg !250
  %8634 = load i8*, i8** %8633, align 8, !dbg !251
  store i8* %8634, i8** %8593, align 8, !dbg !252
  br label %8601, !dbg !253

8635:                                             ; preds = %8622
  %8636 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 1, !dbg !254
  %8637 = load i16, i16* %8636, align 2, !dbg !254
  %8638 = and i16 %8637, 9216, !dbg !254
  %8639 = icmp ne i16 %8638, 0, !dbg !254
  br i1 %8639, label %8640, label %8641, !dbg !254

8640:                                             ; preds = %8635
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8579), !dbg !254
  br label %8823, !dbg !254

8641:                                             ; preds = %8635
  store i16 1, i16* %8636, align 2, !dbg !254
  br label %8823, !dbg !254

8642:                                             ; preds = %8616, %8567
  %8643 = load i16, i16* %8594, align 2, !dbg !255
  %8644 = icmp ule i16 %8643, 1, !dbg !256
  br i1 %8644, label %8727, label %8724, !dbg !257

8645:                                             ; preds = %8724, %8813
  %8646 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 1, !dbg !258
  %8647 = load i16, i16* %8646, align 2, !dbg !259
  %8648 = and i16 9216, %8647, !dbg !260
  %8649 = icmp eq i16 0, %8648, !dbg !261
  br i1 %8649, label %8650, label %8654, !dbg !262

8650:                                             ; preds = %8645
  %8651 = icmp ne i16 %8648, 0, !dbg !263
  br i1 %8651, label %8652, label %8653, !dbg !263

8652:                                             ; preds = %8650
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8579), !dbg !263
  br label %8654, !dbg !263

8653:                                             ; preds = %8650
  store i16 1, i16* %8646, align 2, !dbg !263
  br label %8654, !dbg !263

8654:                                             ; preds = %8652, %8653, %8645
  %8655 = load i32, i32* %8576, align 4, !dbg !264
  %8656 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 23, i32 1, !dbg !265
  %8657 = load i32, i32* %8656, align 4, !dbg !266
  %8658 = load i32, i32* %8592, align 4, !dbg !267
  %8659 = getelementptr i32, i32* %8583, i32 2, !dbg !268
  %8660 = load i32, i32* %8659, align 4, !dbg !269
  %8661 = icmp sge i32 %8658, %8660, !dbg !270
  br i1 %8661, label %8662, label %8702, !dbg !271

8662:                                             ; preds = %8654
  %8663 = load i8*, i8** %8593, align 8, !dbg !272
  %8664 = ptrtoint i8* %8663 to i64, !dbg !273
  %8665 = getelementptr i32, i32* %8583, i32 1, !dbg !274
  %8666 = load i32, i32* %8665, align 4, !dbg !275
  %8667 = zext i32 %8666 to i64, !dbg !276
  %8668 = add i64 %8664, %8667, !dbg !277
  %8669 = inttoptr i64 %8668 to i8*, !dbg !278
  store i8* %8669, i8** %8575, align 8, !dbg !279
  %8670 = load i32, i32* %8576, align 4, !dbg !280
  %8671 = icmp ult i32 %8670, 12, !dbg !281
  br i1 %8671, label %8672, label %8674, !dbg !282

8672:                                             ; preds = %8662
  %8673 = call i32 @sqlite3VdbeSerialGet(i8* %8669, i32 %8670, %struct.sqlite3_value* %8579), !dbg !283
  br label %8823, !dbg !284

8674:                                             ; preds = %8662
  %8675 = alloca i16, i32 2, align 2, !dbg !285
  store i16 16, i16* %8675, align 2, !dbg !286
  %8676 = getelementptr i16, i16* %8675, i32 1, !dbg !287
  store i16 514, i16* %8676, align 2, !dbg !288
  %8677 = load i32, i32* %8576, align 4, !dbg !289
  %8678 = sub i32 %8677, 12, !dbg !290
  %8679 = lshr i32 %8678, 1, !dbg !291
  %8680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 4, !dbg !292
  store i32 %8679, i32* %8680, align 4, !dbg !293
  %8681 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 2, !dbg !294
  store i8 %8570, i8* %8681, align 1, !dbg !295
  %8682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 5, !dbg !296
  %8683 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 7, !dbg !297
  %8684 = load i32, i32* %8683, align 4, !dbg !298
  %8685 = add i32 %8679, 2, !dbg !299
  %8686 = icmp slt i32 %8684, %8685, !dbg !300
  br i1 %8686, label %8687, label %8689, !dbg !301

8687:                                             ; preds = %8674
  store i16 1, i16* %8646, align 2, !dbg !302
  %8688 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8579, i32 %8685, i32 0), !dbg !303
  br label %8692, !dbg !304

8689:                                             ; preds = %8674
  %8690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 6, !dbg !305
  %8691 = load i8*, i8** %8690, align 8, !dbg !306
  store i8* %8691, i8** %8682, align 8, !dbg !307
  br label %8692, !dbg !308

8692:                                             ; preds = %8689, %8687
  %8693 = zext i32 %8679 to i64, !dbg !309
  %8694 = load i8*, i8** %8682, align 8, !dbg !310
  %8695 = load i8*, i8** %8575, align 8, !dbg !311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8694, i8* %8695, i64 %8693, i1 false), !dbg !312
  %8696 = getelementptr i8, i8* %8694, i32 %8679, !dbg !313
  store i8 0, i8* %8696, align 1, !dbg !314
  %8697 = add i32 %8679, 1, !dbg !315
  %8698 = getelementptr i8, i8* %8694, i32 %8697, !dbg !316
  store i8 0, i8* %8698, align 1, !dbg !317
  %8699 = and i32 %8677, 1, !dbg !318
  %8700 = getelementptr i16, i16* %8675, i32 %8699, !dbg !319
  %8701 = load i16, i16* %8700, align 2, !dbg !320
  store i16 %8701, i16* %8646, align 2, !dbg !321
  br label %8823, !dbg !322

8702:                                             ; preds = %8654
  %8703 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 2, !dbg !323
  store i8 %8570, i8* %8703, align 1, !dbg !324
  %8704 = load i32, i32* %8576, align 4, !dbg !325
  %8705 = and i32 %8704, 1, !dbg !326
  %8706 = icmp eq i32 %8705, 0, !dbg !327
  %8707 = icmp sge i32 %8704, 12, !dbg !328
  %8708 = and i1 %8707, %8706, !dbg !329
  %8709 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8704), !dbg !330
  %8710 = icmp eq i32 %8709, 0, !dbg !331
  br i1 %8710, label %8722, label %8711, !dbg !332

8711:                                             ; preds = %8702
  %8712 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 12, i32 0, !dbg !333
  %8713 = load %struct.BtCursor*, %struct.BtCursor** %8712, align 8, !dbg !334
  %8714 = getelementptr i32, i32* %8583, i32 1, !dbg !335
  %8715 = load i32, i32* %8714, align 4, !dbg !336
  %8716 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8713, i32 %8715, i32 %8709, %struct.sqlite3_value* %8579), !dbg !337
  %8717 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 5, !dbg !338
  %8718 = load i8*, i8** %8717, align 8, !dbg !339
  %8719 = call i32 @sqlite3VdbeSerialGet(i8* %8718, i32 %8704, %struct.sqlite3_value* %8579), !dbg !340
  %8720 = load i16, i16* %8646, align 2, !dbg !341
  %8721 = and i16 %8720, -4097, !dbg !342
  store i16 %8721, i16* %8646, align 2, !dbg !343
  br label %8823, !dbg !344

8722:                                             ; preds = %8702
  %8723 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8704, %struct.sqlite3_value* %8579), !dbg !345
  br label %8823, !dbg !346

8724:                                             ; preds = %8642
  %8725 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 23, i32 1, !dbg !347
  %8726 = load i32, i32* %8725, align 4, !dbg !348
  store i32 %8726, i32* %8576, align 4, !dbg !349
  br label %8645, !dbg !350

8727:                                             ; preds = %8642
  %8728 = load i32, i32* %8590, align 4, !dbg !351
  %8729 = load i32, i32* %8583, align 4, !dbg !352
  %8730 = icmp ult i32 %8728, %8729, !dbg !353
  br i1 %8730, label %8731, label %8812, !dbg !354

8731:                                             ; preds = %8727
  %8732 = load i8*, i8** %8593, align 8, !dbg !355
  %8733 = icmp eq i8* %8732, null, !dbg !356
  br i1 %8733, label %8735, label %8734, !dbg !357

8734:                                             ; preds = %8731
  store i8* %8732, i8** %8575, align 8, !dbg !358
  br label %8735, !dbg !359

8735:                                             ; preds = %8734, %8731, %8615
  %8736 = alloca i32, align 4, !dbg !360
  %8737 = load i16, i16* %8594, align 2, !dbg !361
  %8738 = zext i16 %8737 to i32, !dbg !362
  store i32 %8738, i32* %8736, align 4, !dbg !363
  %8739 = alloca i64, align 8, !dbg !364
  %8740 = getelementptr i32, i32* %8583, i32 %8738, !dbg !365
  %8741 = load i32, i32* %8740, align 4, !dbg !366
  %8742 = zext i32 %8741 to i64, !dbg !367
  store i64 %8742, i64* %8739, align 4, !dbg !368
  %8743 = load i8*, i8** %8575, align 8, !dbg !369
  %8744 = load i32, i32* %8590, align 4, !dbg !370
  %8745 = alloca i8*, align 8, !dbg !371
  %8746 = getelementptr i8, i8* %8743, i32 %8744, !dbg !372
  store i8* %8746, i8** %8745, align 8, !dbg !373
  %8747 = load i32, i32* %8583, align 4, !dbg !374
  %8748 = getelementptr i8, i8* %8743, i32 %8747, !dbg !375
  br label %8749, !dbg !376

8749:                                             ; preds = %8756, %8735
  %8750 = load i32, i32* %8736, align 4, !dbg !377
  %8751 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8578, i32 0, i32 23, i32 %8750, !dbg !378
  %8752 = load i8*, i8** %8745, align 8, !dbg !379
  %8753 = load i8, i8* %8752, align 1, !dbg !380
  %8754 = zext i8 %8753 to i32, !dbg !381
  store i32 %8754, i32* %8576, align 4, !dbg !382
  store i32 %8754, i32* %8751, align 4, !dbg !383
  %8755 = icmp sgt i8 %8753, -1, !dbg !384
  br i1 %8755, label %8779, label %8770, !dbg !385

8756:                                             ; preds = %8770, %8779
  %8757 = load i32, i32* %8736, align 4, !dbg !386
  %8758 = add i32 %8757, 1, !dbg !387
  store i32 %8758, i32* %8736, align 4, !dbg !388
  %8759 = load i64, i64* %8739, align 4, !dbg !389
  %8760 = and i64 4294967295, %8759, !dbg !390
  %8761 = trunc i64 %8760 to i32, !dbg !391
  %8762 = getelementptr i32, i32* %8583, i32 %8758, !dbg !392
  store i32 %8761, i32* %8762, align 4, !dbg !393
  %8763 = load i32, i32* %8736, align 4, !dbg !394
  %8764 = icmp sle i32 %8763, 1, !dbg !395
  %8765 = load i8*, i8** %8745, align 8, !dbg !396
  %8766 = ptrtoint i8* %8765 to i64, !dbg !397
  %8767 = ptrtoint i8* %8748 to i64, !dbg !398
  %8768 = icmp ult i64 %8766, %8767, !dbg !399
  %8769 = and i1 %8764, %8768, !dbg !400
  br i1 %8769, label %8749, label %8788, !dbg !401

8770:                                             ; preds = %8749
  %8771 = load i8*, i8** %8745, align 8, !dbg !402
  %8772 = call i8 @sqlite3GetVarint32(i8* %8771, i32* %8576), !dbg !403
  %8773 = getelementptr i8, i8* %8771, i8 %8772, !dbg !404
  store i8* %8773, i8** %8745, align 8, !dbg !405
  %8774 = load i32, i32* %8576, align 4, !dbg !406
  store i32 %8774, i32* %8751, align 4, !dbg !407
  %8775 = load i64, i64* %8739, align 4, !dbg !408
  %8776 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8774), !dbg !409
  %8777 = zext i32 %8776 to i64, !dbg !410
  %8778 = add i64 %8775, %8777, !dbg !411
  store i64 %8778, i64* %8739, align 4, !dbg !412
  br label %8756, !dbg !413

8779:                                             ; preds = %8749
  %8780 = getelementptr i8, i8* %8752, i32 1, !dbg !414
  store i8* %8780, i8** %8745, align 8, !dbg !415
  %8781 = load i32, i32* %8576, align 4, !dbg !416
  %8782 = trunc i32 %8781 to i8, !dbg !417
  %8783 = getelementptr i8, i8* %4, i8 %8782, !dbg !418
  %8784 = load i8, i8* %8783, align 1, !dbg !419
  %8785 = zext i8 %8784 to i64, !dbg !420
  %8786 = load i64, i64* %8739, align 4, !dbg !421
  %8787 = add i64 %8786, %8785, !dbg !422
  store i64 %8787, i64* %8739, align 4, !dbg !423
  br label %8756, !dbg !424

8788:                                             ; preds = %8756
  %8789 = load i64, i64* %8739, align 4, !dbg !425
  %8790 = load i32, i32* %8591, align 4, !dbg !426
  %8791 = zext i32 %8790 to i64, !dbg !427
  %8792 = icmp uge i64 %8766, %8767, !dbg !428
  %8793 = icmp ugt i64 %8766, %8767, !dbg !429
  %8794 = icmp ne i64 %8789, %8791, !dbg !430
  %8795 = icmp ugt i64 %8789, %8791, !dbg !431
  %8796 = or i1 %8793, %8794, !dbg !432
  %8797 = and i1 %8792, %8796, !dbg !433
  %8798 = or i1 %8797, %8795, !dbg !434
  br i1 %8798, label %8799, label %8803, !dbg !435

8799:                                             ; preds = %8788
  %8800 = load i32, i32* %8583, align 4, !dbg !436
  %8801 = icmp eq i32 %8800, 0, !dbg !437
  br i1 %8801, label %8802, label %8803, !dbg !438

8802:                                             ; preds = %8799
  store i32 0, i32* %8736, align 4, !dbg !439
  store i8* %8748, i8** %8745, align 8, !dbg !440
  br label %8803, !dbg !441

8803:                                             ; preds = %8802, %8799, %8788
  %8804 = load i32, i32* %8736, align 4, !dbg !442
  %8805 = trunc i32 %8804 to i16, !dbg !443
  store i16 %8805, i16* %8594, align 2, !dbg !444
  %8806 = load i8*, i8** %8745, align 8, !dbg !445
  %8807 = ptrtoint i8* %8806 to i64, !dbg !446
  %8808 = load i8*, i8** %8575, align 8, !dbg !447
  %8809 = ptrtoint i8* %8808 to i64, !dbg !448
  %8810 = sub i64 %8807, %8809, !dbg !449
  %8811 = trunc i64 %8810 to i32, !dbg !450
  store i32 %8811, i32* %8590, align 4, !dbg !451
  br label %8813, !dbg !452

8812:                                             ; preds = %8727
  store i32 0, i32* %8576, align 4, !dbg !453
  br label %8813, !dbg !454

8813:                                             ; preds = %8803, %8812
  %8814 = load i16, i16* %8594, align 2, !dbg !455
  %8815 = icmp sle i16 %8814, 1, !dbg !456
  br i1 %8815, label %8816, label %8645, !dbg !457

8816:                                             ; preds = %8813
  %8817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8579, i32 0, i32 1, !dbg !458
  %8818 = load i16, i16* %8817, align 2, !dbg !458
  %8819 = and i16 %8818, 9216, !dbg !458
  %8820 = icmp ne i16 %8819, 0, !dbg !458
  br i1 %8820, label %8821, label %8822, !dbg !458

8821:                                             ; preds = %8816
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8579), !dbg !458
  br label %8823, !dbg !458

8822:                                             ; preds = %8816
  store i16 1, i16* %8817, align 2, !dbg !458
  br label %8823, !dbg !458

8823:                                             ; preds = %8821, %8822, %8692, %8672, %8711, %8722, %8640, %8641
  call void @llvm.stackrestore(i8* %8568), !dbg !459
  br label %8824, !dbg !74

8824:                                             ; preds = %8823, %8308, %14
  %8825 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 76, !dbg !75
  %8826 = call i8* @llvm.stacksave(), !dbg !78
  %8827 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8825, i32 0, i32 4, !dbg !79
  %8828 = load i32, i32* %8827, align 4, !dbg !82
  %8829 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8828, !dbg !83
  %8830 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8829, i32 0, i32 1, !dbg !78
  %8831 = load i16, i16* %8830, align 2, !dbg !78
  %8832 = and i16 %8831, 9216, !dbg !78
  %8833 = icmp ne i16 %8832, 0, !dbg !78
  %8834 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %8833, label %8835, label %8837, !dbg !78

8835:                                             ; preds = %8824
  %8836 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8829), !dbg !78
  store %struct.sqlite3_value* %8836, %struct.sqlite3_value** %8834, align 8, !dbg !78
  br label %8838, !dbg !78

8837:                                             ; preds = %8824
  store i16 4, i16* %8830, align 2, !dbg !78
  store %struct.sqlite3_value* %8829, %struct.sqlite3_value** %8834, align 8, !dbg !78
  br label %8838, !dbg !78

8838:                                             ; preds = %8837, %8835
  %8839 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8834, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %8826), !dbg !78
  %8840 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8839, i32 0, i32 0, i32 0, !dbg !84
  %8841 = bitcast double* %8840 to i64*, !dbg !85
  store i64 1, i64* %8841, align 4, !dbg !86
  br label %8842, !dbg !74

8842:                                             ; preds = %8838, %14
  %8843 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1424
  %8844 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8843, align 8, !dbg !1427
  %8845 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %8844), !dbg !1428
  %8846 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8844, i32 0, i32 9, !dbg !1429
  store i32 0, i32* %8846, align 4, !dbg !1430
  %8847 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8844, i32 0, i32 2, !dbg !1431
  %8848 = icmp eq i32 %8845, 0, !dbg !1432
  br i1 %8848, label %8849, label %8850, !dbg !1433

8849:                                             ; preds = %8842
  store i8 0, i8* %8847, align 1, !dbg !1434
  br label %7003, !dbg !1435

8850:                                             ; preds = %8842
  store i8 1, i8* %8847, align 1, !dbg !1436
  br label %8851, !dbg !1437

8851:                                             ; preds = %8850, %14
  %8852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !100
  %8853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8852, i32 0, i32 1, !dbg !103
  store i16 4, i16* %8853, align 2, !dbg !104
  %8854 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8852, i32 0, i32 0, i32 0, !dbg !105
  %8855 = bitcast double* %8854 to i64*, !dbg !106
  store i64 78, i64* %8855, align 4, !dbg !107
  br label %8881, !dbg !108

8856:                                             ; preds = %14
  %8857 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 80, !dbg !75
  %8858 = call i8* @llvm.stacksave(), !dbg !78
  %8859 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8857, i32 0, i32 4, !dbg !79
  %8860 = load i32, i32* %8859, align 4, !dbg !82
  %8861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8860, !dbg !83
  %8862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8861, i32 0, i32 1, !dbg !78
  %8863 = load i16, i16* %8862, align 2, !dbg !78
  %8864 = and i16 %8863, 9216, !dbg !78
  %8865 = icmp ne i16 %8864, 0, !dbg !78
  %8866 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %8865, label %8867, label %8869, !dbg !78

8867:                                             ; preds = %8856
  %8868 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8861), !dbg !78
  store %struct.sqlite3_value* %8868, %struct.sqlite3_value** %8866, align 8, !dbg !78
  br label %8870, !dbg !78

8869:                                             ; preds = %8856
  store i16 4, i16* %8862, align 2, !dbg !78
  store %struct.sqlite3_value* %8861, %struct.sqlite3_value** %8866, align 8, !dbg !78
  br label %8870, !dbg !78

8870:                                             ; preds = %8869, %8867
  %8871 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8866, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %8858), !dbg !78
  %8872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8871, i32 0, i32 0, i32 0, !dbg !84
  %8873 = bitcast double* %8872 to i64*, !dbg !85
  store i64 1, i64* %8873, align 4, !dbg !86
  br label %8874, !dbg !74

8874:                                             ; preds = %8870, %14
  %8875 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1438
  %8876 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8875, i32 0, i32 0, i32 0, !dbg !1441
  %8877 = bitcast double* %8876 to i64*, !dbg !1442
  %8878 = load i64, i64* %8877, align 4, !dbg !1443
  %8879 = add i64 %8878, 1, !dbg !1444
  %8880 = trunc i64 %8879 to i32, !dbg !1445
  store i32 %8880, i32* %15, align 4, !dbg !1446
  br label %14, !dbg !1447

8881:                                             ; preds = %8851, %7601, %14
  %8882 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !1235
  %8883 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8882, i32 0, i32 0, i32 0, !dbg !1238
  %8884 = bitcast double* %8883 to i64*, !dbg !1239
  %8885 = load i64, i64* %8884, align 4, !dbg !1240
  %8886 = icmp sgt i64 %8885, 0, !dbg !1241
  br i1 %8886, label %8887, label %.critedge1, !dbg !1242

8887:                                             ; preds = %8881
  br label %8894, !dbg !1243

.critedge1:                                       ; preds = %8881, %14
  %8888 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1438
  %8889 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8888, i32 0, i32 0, i32 0, !dbg !1441
  %8890 = bitcast double* %8889 to i64*, !dbg !1442
  %8891 = load i64, i64* %8890, align 4, !dbg !1443
  %8892 = add i64 %8891, 1, !dbg !1444
  %8893 = trunc i64 %8892 to i32, !dbg !1445
  store i32 %8893, i32* %15, align 4, !dbg !1446
  br label %14, !dbg !1447

8894:                                             ; preds = %8887, %14
  %8895 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 84, !dbg !1448
  %8896 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8895, i32 0, i32 6, !dbg !1451
  %8897 = bitcast %union.p4union* %8896 to %struct.FuncDef**, !dbg !1452
  %8898 = load %struct.FuncDef*, %struct.FuncDef** %8897, align 8, !dbg !1453
  %8899 = call i8* @llvm.stacksave(), !dbg !1454
  %8900 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1455
  %8901 = alloca i32, align 8, !dbg !1456
  %8902 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %8900, %struct.FuncDef* %8898), !dbg !1457
  store i32 %8902, i32* %8901, align 4, !dbg !1458
  %8903 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %8900, i32 1), !dbg !1459
  %8904 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %8900), !dbg !1460
  call void @llvm.stackrestore(i8* %8899), !dbg !1461
  br label %8905, !dbg !74

8905:                                             ; preds = %8894, %14
  %8906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1462
  %8907 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1465
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8907, %struct.sqlite3_value* %8906, i32 4096), !dbg !1466
  %8908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1462
  %8909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !1465
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8909, %struct.sqlite3_value* %8908, i32 4096), !dbg !1466
  %8910 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1462
  %8911 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !1465
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8911, %struct.sqlite3_value* %8910, i32 4096), !dbg !1466
  br label %8912, !dbg !74

8912:                                             ; preds = %8905, %14
  %8913 = call i8* @llvm.stacksave(), !dbg !1467
  %8914 = call i32 @sqlite3VdbeCheckFk(%struct.Vdbe* %0, i32 0), !dbg !1470
  %8915 = call i32 @sqlite3VdbeCloseStatement(%struct.Vdbe* %0, i32 1), !dbg !1471
  %8916 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !1472
  %8917 = load i32, i32* %8916, align 4, !dbg !1473
  %8918 = add i32 %8917, 2, !dbg !1474
  %8919 = or i32 %8918, 1, !dbg !1475
  store i32 %8919, i32* %8916, align 4, !dbg !1476
  %8920 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1477
  %8921 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 27, !dbg !1478
  store %struct.sqlite3_value* %8920, %struct.sqlite3_value** %8921, align 8, !dbg !1479
  %8922 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8920, i32 1, !dbg !1480
  %8923 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8922, i32 0, i32 1, !dbg !1481
  %8924 = load i16, i16* %8923, align 2, !dbg !1482
  %8925 = and i16 %8924, 4096, !dbg !1483
  %8926 = icmp ne i16 %8925, 0, !dbg !1484
  br i1 %8926, label %8927, label %8929, !dbg !1485

8927:                                             ; preds = %8912
  %8928 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %8922), !dbg !1486
  br label %8929, !dbg !1487

8929:                                             ; preds = %8927, %8912
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %8922), !dbg !1488
  %8930 = load i16, i16* %8923, align 2, !dbg !1482
  %8931 = and i16 %8930, 4096, !dbg !1483
  %8932 = icmp ne i16 %8931, 0, !dbg !1484
  br i1 %8932, label %8933, label %8935, !dbg !1485

8933:                                             ; preds = %8929
  %8934 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %8922), !dbg !1486
  br label %8935, !dbg !1487

8935:                                             ; preds = %8933, %8929
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %8922), !dbg !1488
  %8936 = load i16, i16* %8923, align 2, !dbg !1482
  %8937 = and i16 %8936, 4096, !dbg !1483
  %8938 = icmp ne i16 %8937, 0, !dbg !1484
  br i1 %8938, label %8939, label %8941, !dbg !1485

8939:                                             ; preds = %8935
  %8940 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %8922), !dbg !1486
  br label %8941, !dbg !1487

8941:                                             ; preds = %8939, %8935
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %8922), !dbg !1488
  %8942 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1489
  %8943 = getelementptr %struct.sqlite3, %struct.sqlite3* %8942, i32 0, i32 19, !dbg !1490
  %8944 = load i8, i8* %8943, align 1, !dbg !1491
  store i32 87, i32* %15, align 4, !dbg !1492
  call void @llvm.stackrestore(i8* %8913), !dbg !1493
  ret i32 100, !dbg !1494

8945:                                             ; preds = %14
  %8946 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1438
  %8947 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8946, i32 0, i32 0, i32 0, !dbg !1441
  %8948 = bitcast double* %8947 to i64*, !dbg !1442
  %8949 = load i64, i64* %8948, align 4, !dbg !1443
  %8950 = add i64 %8949, 1, !dbg !1444
  %8951 = trunc i64 %8950 to i32, !dbg !1445
  store i32 %8951, i32* %15, align 4, !dbg !1446
  br label %14, !dbg !1447

8952:                                             ; preds = %.critedge, %76, %14
  %8953 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 88, !dbg !87
  %8954 = call i8* @llvm.stacksave(), !dbg !90
  %8955 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8953, i32 0, i32 4, !dbg !79
  %8956 = load i32, i32* %8955, align 4, !dbg !82
  %8957 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8956, !dbg !83
  %8958 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8957, i32 0, i32 1, !dbg !90
  %8959 = load i16, i16* %8958, align 2, !dbg !90
  %8960 = and i16 %8959, 9216, !dbg !90
  %8961 = icmp ne i16 %8960, 0, !dbg !90
  %8962 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %8961, label %8963, label %8965, !dbg !90

8963:                                             ; preds = %8952
  %8964 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8957), !dbg !90
  store %struct.sqlite3_value* %8964, %struct.sqlite3_value** %8962, align 8, !dbg !90
  br label %8966, !dbg !90

8965:                                             ; preds = %8952
  store i16 4, i16* %8958, align 2, !dbg !90
  store %struct.sqlite3_value* %8957, %struct.sqlite3_value** %8962, align 8, !dbg !90
  br label %8966, !dbg !90

8966:                                             ; preds = %8965, %8963
  %8967 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8962, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %8954), !dbg !90
  %8968 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8967, i32 0, i32 1, !dbg !91
  store i16 1, i16* %8968, align 2, !dbg !92
  %8969 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8967, i32 0, i32 4, !dbg !93
  store i32 0, i32* %8969, align 4, !dbg !94
  %8970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8967, i32 1, !dbg !95
  %8971 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8970, i32 0, i32 1, !dbg !96
  %8972 = load i16, i16* %8971, align 2, !dbg !96
  %8973 = and i16 %8972, 9216, !dbg !96
  %8974 = icmp ne i16 %8973, 0, !dbg !96
  br i1 %8974, label %8975, label %8976, !dbg !96

8975:                                             ; preds = %8966
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8970), !dbg !96
  br label %8977, !dbg !96

8976:                                             ; preds = %8966
  store i16 1, i16* %8971, align 2, !dbg !96
  br label %8977, !dbg !96

8977:                                             ; preds = %8976, %8975
  store i16 1, i16* %8971, align 2, !dbg !97
  %8978 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8970, i32 0, i32 4, !dbg !98
  store i32 0, i32* %8978, align 4, !dbg !99
  %8979 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8970, i32 1, !dbg !95
  %8980 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8979, i32 0, i32 1, !dbg !96
  %8981 = load i16, i16* %8980, align 2, !dbg !96
  %8982 = and i16 %8981, 9216, !dbg !96
  %8983 = icmp ne i16 %8982, 0, !dbg !96
  br i1 %8983, label %8984, label %8985, !dbg !96

8984:                                             ; preds = %8977
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8979), !dbg !96
  br label %8986, !dbg !96

8985:                                             ; preds = %8977
  store i16 1, i16* %8980, align 2, !dbg !96
  br label %8986, !dbg !96

8986:                                             ; preds = %8985, %8984
  store i16 1, i16* %8980, align 2, !dbg !97
  %8987 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8979, i32 0, i32 4, !dbg !98
  store i32 0, i32* %8987, align 4, !dbg !99
  %8988 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8979, i32 1, !dbg !95
  %8989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8988, i32 0, i32 1, !dbg !96
  %8990 = load i16, i16* %8989, align 2, !dbg !96
  %8991 = and i16 %8990, 9216, !dbg !96
  %8992 = icmp ne i16 %8991, 0, !dbg !96
  br i1 %8992, label %8993, label %8994, !dbg !96

8993:                                             ; preds = %8986
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8988), !dbg !96
  br label %8995, !dbg !96

8994:                                             ; preds = %8986
  store i16 1, i16* %8989, align 2, !dbg !96
  br label %8995, !dbg !96

8995:                                             ; preds = %8994, %8993
  store i16 1, i16* %8989, align 2, !dbg !97
  %8996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8988, i32 0, i32 4, !dbg !98
  store i32 0, i32* %8996, align 4, !dbg !99
  %8997 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8988, i32 1, !dbg !95
  %8998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8997, i32 0, i32 1, !dbg !96
  %8999 = load i16, i16* %8998, align 2, !dbg !96
  %9000 = and i16 %8999, 9216, !dbg !96
  %9001 = icmp ne i16 %9000, 0, !dbg !96
  br i1 %9001, label %9002, label %9003, !dbg !96

9002:                                             ; preds = %8995
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8997), !dbg !96
  br label %9004, !dbg !96

9003:                                             ; preds = %8995
  store i16 1, i16* %8998, align 2, !dbg !96
  br label %9004, !dbg !96

9004:                                             ; preds = %9003, %9002
  store i16 1, i16* %8998, align 2, !dbg !97
  %9005 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8997, i32 0, i32 4, !dbg !98
  store i32 0, i32* %9005, align 4, !dbg !99
  br label %9006, !dbg !74

9006:                                             ; preds = %9004, %14
  %9007 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 89, !dbg !75
  %9008 = call i8* @llvm.stacksave(), !dbg !78
  %9009 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9007, i32 0, i32 4, !dbg !79
  %9010 = load i32, i32* %9009, align 4, !dbg !82
  %9011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9010, !dbg !83
  %9012 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9011, i32 0, i32 1, !dbg !78
  %9013 = load i16, i16* %9012, align 2, !dbg !78
  %9014 = and i16 %9013, 9216, !dbg !78
  %9015 = icmp ne i16 %9014, 0, !dbg !78
  %9016 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %9015, label %9017, label %9019, !dbg !78

9017:                                             ; preds = %9006
  %9018 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %9011), !dbg !78
  store %struct.sqlite3_value* %9018, %struct.sqlite3_value** %9016, align 8, !dbg !78
  br label %9020, !dbg !78

9019:                                             ; preds = %9006
  store i16 4, i16* %9012, align 2, !dbg !78
  store %struct.sqlite3_value* %9011, %struct.sqlite3_value** %9016, align 8, !dbg !78
  br label %9020, !dbg !78

9020:                                             ; preds = %9019, %9017
  %9021 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9016, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %9008), !dbg !78
  %9022 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9021, i32 0, i32 0, i32 0, !dbg !84
  %9023 = bitcast double* %9022 to i64*, !dbg !85
  store i64 0, i64* %9023, align 4, !dbg !86
  br label %9024, !dbg !74

9024:                                             ; preds = %9020, %14
  %9025 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1438
  %9026 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9025, i32 0, i32 0, i32 0, !dbg !1441
  %9027 = bitcast double* %9026 to i64*, !dbg !1442
  %9028 = load i64, i64* %9027, align 4, !dbg !1443
  %9029 = add i64 %9028, 1, !dbg !1444
  %9030 = trunc i64 %9029 to i32, !dbg !1445
  store i32 %9030, i32* %15, align 4, !dbg !1446
  br label %14, !dbg !1447

9031:                                             ; preds = %7612, %14, %6997, %14
  %9032 = call i32 @sqlite3VdbeHalt(%struct.Vdbe* %0), !dbg !1495
  ret i32 101, !dbg !1498

9033:                                             ; preds = %17, %14
  %9034 = call i8* @llvm.stacksave(), !dbg !1499
  %9035 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1502
  %9036 = load %struct.Db*, %struct.Db** %9035, align 8, !dbg !1503
  %9037 = getelementptr %struct.Db, %struct.Db* %9036, i32 0, i32 1, !dbg !1504
  %9038 = load %struct.Btree*, %struct.Btree** %9037, align 8, !dbg !1505
  %9039 = ptrtoint %struct.Btree* %9038 to i64, !dbg !1506
  %9040 = alloca i32, align 8, !dbg !1507
  %9041 = alloca i32, align 8, !dbg !1508
  %9042 = icmp ne i64 %9039, 0, !dbg !1509
  br i1 %9042, label %9043, label %9045, !dbg !1510

9043:                                             ; preds = %9033
  %9044 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %9038, i32 0, i32* %9040), !dbg !1511
  store i32 %9044, i32* %9041, align 4, !dbg !1512
  br label %9045, !dbg !1513

9045:                                             ; preds = %9043, %9033
  %9046 = load i32, i32* %9040, align 4, !dbg !1514
  %9047 = icmp ne i32 %9046, 5, !dbg !1515
  %9048 = getelementptr %struct.Db, %struct.Db* %9036, i32 0, i32 4, !dbg !1516
  %9049 = load %struct.Schema*, %struct.Schema** %9048, align 8, !dbg !1517
  %9050 = getelementptr %struct.Schema, %struct.Schema* %9049, i32 0, i32 1, !dbg !1518
  %9051 = load i32, i32* %9050, align 4, !dbg !1519
  %9052 = icmp ne i32 %9051, 0, !dbg !1520
  %9053 = or i1 %9052, %9047, !dbg !1521
  %9054 = load i32, i32* %9041, align 4, !dbg !1522
  call void @llvm.stackrestore(i8* %9034), !dbg !1523
  br label %9055, !dbg !74

9055:                                             ; preds = %9045, %14
  %9056 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 93, !dbg !1524
  %9057 = call i8* @llvm.stacksave(), !dbg !1527
  %9058 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9056, i32 0, i32 4, !dbg !79
  %9059 = load i32, i32* %9058, align 4, !dbg !82
  %9060 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9059, !dbg !83
  %9061 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9060, i32 0, i32 1, !dbg !1527
  %9062 = load i16, i16* %9061, align 2, !dbg !1527
  %9063 = and i16 %9062, 9216, !dbg !1527
  %9064 = icmp ne i16 %9063, 0, !dbg !1527
  %9065 = alloca %struct.sqlite3_value*, align 8, !dbg !1527
  br i1 %9064, label %9066, label %9068, !dbg !1527

9066:                                             ; preds = %9055
  %9067 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %9060), !dbg !1527
  store %struct.sqlite3_value* %9067, %struct.sqlite3_value** %9065, align 8, !dbg !1527
  br label %9069, !dbg !1527

9068:                                             ; preds = %9055
  store i16 4, i16* %9061, align 2, !dbg !1527
  store %struct.sqlite3_value* %9060, %struct.sqlite3_value** %9065, align 8, !dbg !1527
  br label %9069, !dbg !1527

9069:                                             ; preds = %9068, %9066
  %9070 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9065, align 8, !dbg !1527
  call void @llvm.stackrestore(i8* %9057), !dbg !1527
  %9071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9070, i32 0, i32 1, !dbg !1528
  %9072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9070, i32 0, i32 2, !dbg !1529
  %9073 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9070, i32 0, i32 4, !dbg !1530
  %9074 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9070, i32 0, i32 5, !dbg !1531
  store i16 2562, i16* %9071, align 2, !dbg !1532
  %9075 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9056, i32 0, i32 6, !dbg !1533
  %9076 = bitcast %union.p4union* %9075 to i8**, !dbg !1534
  %9077 = load i8*, i8** %9076, align 8, !dbg !1535
  store i8* %9077, i8** %9074, align 8, !dbg !1536
  store i32 6, i32* %9073, align 4, !dbg !1537
  store i8 1, i8* %9072, align 1, !dbg !1538
  br label %9078, !dbg !74

9078:                                             ; preds = %9069, %14
  %9079 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 94, !dbg !1524
  %9080 = call i8* @llvm.stacksave(), !dbg !1527
  %9081 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9079, i32 0, i32 4, !dbg !79
  %9082 = load i32, i32* %9081, align 4, !dbg !82
  %9083 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9082, !dbg !83
  %9084 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9083, i32 0, i32 1, !dbg !1527
  %9085 = load i16, i16* %9084, align 2, !dbg !1527
  %9086 = and i16 %9085, 9216, !dbg !1527
  %9087 = icmp ne i16 %9086, 0, !dbg !1527
  %9088 = alloca %struct.sqlite3_value*, align 8, !dbg !1527
  br i1 %9087, label %9089, label %9091, !dbg !1527

9089:                                             ; preds = %9078
  %9090 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %9083), !dbg !1527
  store %struct.sqlite3_value* %9090, %struct.sqlite3_value** %9088, align 8, !dbg !1527
  br label %9092, !dbg !1527

9091:                                             ; preds = %9078
  store i16 4, i16* %9084, align 2, !dbg !1527
  store %struct.sqlite3_value* %9083, %struct.sqlite3_value** %9088, align 8, !dbg !1527
  br label %9092, !dbg !1527

9092:                                             ; preds = %9091, %9089
  %9093 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9088, align 8, !dbg !1527
  call void @llvm.stackrestore(i8* %9080), !dbg !1527
  %9094 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9093, i32 0, i32 1, !dbg !1528
  %9095 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9093, i32 0, i32 2, !dbg !1529
  %9096 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9093, i32 0, i32 4, !dbg !1530
  %9097 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9093, i32 0, i32 5, !dbg !1531
  store i16 2562, i16* %9094, align 2, !dbg !1532
  %9098 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9079, i32 0, i32 6, !dbg !1533
  %9099 = bitcast %union.p4union* %9098 to i8**, !dbg !1534
  %9100 = load i8*, i8** %9099, align 8, !dbg !1535
  store i8* %9100, i8** %9097, align 8, !dbg !1536
  store i32 6, i32* %9096, align 4, !dbg !1537
  store i8 1, i8* %9095, align 1, !dbg !1538
  br label %9101, !dbg !74

9101:                                             ; preds = %9092, %14
  %9102 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 95, !dbg !1524
  %9103 = call i8* @llvm.stacksave(), !dbg !1527
  %9104 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9102, i32 0, i32 4, !dbg !79
  %9105 = load i32, i32* %9104, align 4, !dbg !82
  %9106 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9105, !dbg !83
  %9107 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9106, i32 0, i32 1, !dbg !1527
  %9108 = load i16, i16* %9107, align 2, !dbg !1527
  %9109 = and i16 %9108, 9216, !dbg !1527
  %9110 = icmp ne i16 %9109, 0, !dbg !1527
  %9111 = alloca %struct.sqlite3_value*, align 8, !dbg !1527
  br i1 %9110, label %9112, label %9114, !dbg !1527

9112:                                             ; preds = %9101
  %9113 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %9106), !dbg !1527
  store %struct.sqlite3_value* %9113, %struct.sqlite3_value** %9111, align 8, !dbg !1527
  br label %9115, !dbg !1527

9114:                                             ; preds = %9101
  store i16 4, i16* %9107, align 2, !dbg !1527
  store %struct.sqlite3_value* %9106, %struct.sqlite3_value** %9111, align 8, !dbg !1527
  br label %9115, !dbg !1527

9115:                                             ; preds = %9114, %9112
  %9116 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9111, align 8, !dbg !1527
  call void @llvm.stackrestore(i8* %9103), !dbg !1527
  %9117 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9116, i32 0, i32 1, !dbg !1528
  %9118 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9116, i32 0, i32 2, !dbg !1529
  %9119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9116, i32 0, i32 4, !dbg !1530
  %9120 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9116, i32 0, i32 5, !dbg !1531
  store i16 2562, i16* %9117, align 2, !dbg !1532
  %9121 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9102, i32 0, i32 6, !dbg !1533
  %9122 = bitcast %union.p4union* %9121 to i8**, !dbg !1534
  %9123 = load i8*, i8** %9122, align 8, !dbg !1535
  store i8* %9123, i8** %9120, align 8, !dbg !1536
  store i32 7, i32* %9119, align 4, !dbg !1537
  store i8 1, i8* %9118, align 1, !dbg !1538
  br label %22, !dbg !74
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status64(i32, i64* nocapture, i64* nocapture, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_enter(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_leave(%struct.sqlite3_mutex*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status(i32, i32* nocapture, i32* nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @countLookasideSlots(%struct.LookasideSlot* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_status(%struct.sqlite3*, i32, i32* nocapture, i32*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_msize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeClearObject(%struct.sqlite3*, %struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFree(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getDigits(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
declare i32 @parseTimezone(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseHhMmSs(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @datetimeError(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeJD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @parseYyyyMmDd(i8* nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDateTimeToCurrent(%struct.sqlite3_context* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @setRawDateNumber(%struct.DateTime* nocapture, double) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @parseDateOrTime(%struct.sqlite3_context* nocapture, i8* readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @validJulianDay(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeHMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD_HMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @clearYMD_HMS_TZ(%struct.DateTime* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @osLocaltime(i64*, %struct.tm* nocapture) local_unnamed_addr #3

declare %struct.tm* @localtime(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i64 @localtimeOffset(%struct.DateTime* nocapture readonly, %struct.sqlite3_context* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseModifier(%struct.sqlite3_context* nocapture, i8* readonly, i32, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stricmp(i8* readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_strnicmp(i8* readonly, i8* readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDate(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_type(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_value_double(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @juliandayFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_double(%struct.sqlite3_context* nocapture readonly, double) #3

; Function Attrs: nounwind ssp uwtable
declare void @datetimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_snprintf(i32, i8* returned, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @timeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @strftimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_context_db_handle(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_toobig(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_nomem(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MallocSize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cdateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimestampFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_vfs* @sqlite3_vfs_find(i8* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_initialize() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vfsUnlink(%struct.sqlite3_vfs* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_register(%struct.sqlite3_vfs*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_unregister(%struct.sqlite3_vfs* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_mutex_alloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_free(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_mutex_try(%struct.sqlite3_mutex*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexEnd() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_mutex* @noopMutexAlloc(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexFree(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexEnter(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexTry(%struct.sqlite3_mutex* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexLeave(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexEnd() #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @pthreadMutexAlloc(i32) #3

declare i32 @pthread_mutexattr_init(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @pthread_mutexattr_settype(%struct._opaque_pthread_mutexattr_t*, i32) local_unnamed_addr #12

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @"\01_pthread_mutexattr_destroy"(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexFree(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexEnter(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @pthreadMutexTry(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_trylock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexLeave(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_release_memory(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_memory_alarm(void (i8*, i64, i32)* nocapture readnone, i8* nocapture readnone, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_soft_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_used() #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_soft_heap_limit(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_hard_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_highwater(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @mallocWithAlarm(i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc64(i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isLookaside(%struct.sqlite3* nocapture readonly, i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @lookasideMallocSize(%struct.sqlite3* nocapture readonly, i8* readnone) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @measureAllocationSize(%struct.sqlite3* readonly, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3Realloc(i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc64(i8*, i64) #3

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbMallocRawFinish(%struct.sqlite3*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3OomFault(%struct.sqlite3*) unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbReallocFinish(%struct.sqlite3*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @apiOomError(%struct.sqlite3*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare signext i8 @et_getdigit(x86_fp80* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @setStrAccumError(%struct.sqlite3_str* nocapture, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_reset(%struct.sqlite3_str* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @getIntArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_value_int64(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare double @getDoubleArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @getTextArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @printfTempBuf(%struct.sqlite3_str*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRaw(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_vappendf(%struct.sqlite3_str*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_append(%struct.sqlite3_str*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendchar(%struct.sqlite3_str*, i32, i8 signext) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendall(%struct.sqlite3_str*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3StrAccumEnlarge(%struct.sqlite3_str*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @enlargeAndAppend(%struct.sqlite3_str*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @strAccumFinishRealloc(%struct.sqlite3_str* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_str_finish(%struct.sqlite3_str*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_errcode(%struct.sqlite3_str* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_length(%struct.sqlite3_str* readonly) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @sqlite3_str_value(%struct.sqlite3_str* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_str* @sqlite3_str_new(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vmprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_mprintf(i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vsnprintf(i32, i8* returned, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @renderLogMsg(i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_log(i32, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendf(%struct.sqlite3_str*, i8*, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @compare2pow63(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable writeonly
declare i32 @putVarint64(i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
declare void @logBadConnection(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @strHash(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @insertElement(%struct.Hash* nocapture, %struct._ht*, %struct.HashElem*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @rehash(%struct.Hash* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.HashElem* @findElementWithHash(%struct.Hash* nocapture readonly, i8* nocapture readonly, i32*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @removeElementGivenHash(%struct.Hash* nocapture, %struct.HashElem*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @posixOpen(i8*, i32, i32) #3

declare i32 @"\01_open"(i8*, i32, ...) local_unnamed_addr #12

declare i32 @"\01_close"(i32) #12

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) #9

declare i8* @getcwd(i8*, i64) #12

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #12

declare i32 @"\01_fstat$INODE64"(i32, %struct.stat*) #12

declare i32 @ftruncate(i32, i64) #12

declare i32 @"\01_fcntl"(i32, i32, ...) #12

declare i64 @"\01_read"(i32, i8*, i64) #12

declare i64 @"\01_pread"(i32, i8*, i64, i64) #12

declare i64 @"\01_write"(i32, i8*, i64) #12

declare i64 @"\01_pwrite"(i32, i8*, i64, i64) #12

declare i32 @"\01_fchmod"(i32, i16 zeroext) #12

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) #9

; Function Attrs: nounwind ssp uwtable
declare i32 @openDirectory(i8*, i32* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i16 zeroext) #9

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) #9

declare i32 @fchown(i32, i32, i32) #12

declare i32 @geteuid() #12

declare i8* @"\01_mmap"(i8*, i64, i32, i32, i32, i64) #12

declare i32 @"\01_munmap"(i8*, i64) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetpagesize() #3

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #9

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @robustFchown(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @unixSetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly, void ()*) #8

; Function Attrs: nounwind readonly ssp uwtable
declare void ()* @unixGetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @unixNextSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_open(i8*, i32, i16 zeroext) local_unnamed_addr #3

declare i32* @__error() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixEnterMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixLeaveMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqliteErrorFromPosixError(i32, i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLogErrorAtLine(i32 returned, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @robust_close(%struct.unixFile* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @storeLastErrno(%struct.unixFile* nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @closePendingFds(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseInodeInfo(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findInodeInfo(%struct.unixFile* nocapture, %struct.unixInodeInfo** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @fileHasMoved(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @verifyDbFile(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileLock(%struct.unixFile* nocapture readonly, %struct.flock*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPendingFd(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @posixUnlock(%struct.sqlite3_file*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @closeUnixFile(%struct.sqlite3_file*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixUnmapfile(%struct.unixFile* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixClose(%struct.sqlite3_file*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @nolockCheckReservedLock(%struct.sqlite3_file* nocapture readnone, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockLock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockUnlock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @nolockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockCheckReservedLock(%struct.sqlite3_file* nocapture readonly, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree nounwind
declare i32 @utimes(i8* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_flock(i32, i32) local_unnamed_addr #3

declare i32 @flock(i32, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @flockCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpSetLock(i8*, %struct.unixFile* nocapture, i64, i64, i32) local_unnamed_addr #3

declare i32 @fsctl(i8*, i64, i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpLock(%struct.sqlite3_file* nocapture, i32) #3

declare i64 @random() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @nfsUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndRead(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWriteFd(i32, i64, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWrite(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixWrite(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @full_fsync(i32, i32, i32) local_unnamed_addr #3

declare i32 @"\01_fsync"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSync(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileSize(%struct.sqlite3_file* nocapture, i64* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fcntlSizeHint(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixMapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @unixModeBit(%struct.unixFile* nocapture, i8 zeroext, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileControl(%struct.sqlite3_file*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetTempname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyFileControl(%struct.sqlite3_file*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDeviceCharacteristics(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixSectorSize(%struct.sqlite3_file* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixDeviceCharacteristics(%struct.sqlite3_file* nocapture) #15

declare i64 @sysconf(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmSystemLock(%struct.unixFile* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmRegionPerMap() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmPurge(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLockSharedMemory(%struct.unixFile* nocapture readonly, %struct.unixShmNode* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpenSharedMemory(%struct.unixFile*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_uri_boolean(i8* readonly, i8* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmMap(%struct.sqlite3_file*, i32, i32, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmLock(%struct.sqlite3_file* nocapture readonly, i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmBarrier(%struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmUnmap(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixRemapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFetch(%struct.sqlite3_file* nocapture, i64, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnfetch(%struct.sqlite3_file* nocapture, i64, i8* readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @posixIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nolockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @dotlockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @flockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @afpIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyLock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCheckReservedLock(%struct.sqlite3_file*, i32*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @proxyIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nfsIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_io_methods* @autolockIoFinderImpl(i8*, %struct.unixFile* nocapture readonly) #3

declare i32 @"\01_statfs$INODE64"(i8*, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInUnixFile(%struct.sqlite3_vfs*, i32, %struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

declare void @srandomdev() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i8* @unixTempFileDir() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare %struct.UnixUnusedFd* @findReusableFd(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getFileMode(i8*, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findCreateFileMode(i8*, i32, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_parameter(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*) #3

declare i32 @getpid() local_unnamed_addr #12

declare i32 @"\01_fstatfs$INODE64"(i32, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTransformUnixFile(%struct.unixFile* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixDelete(%struct.sqlite3_vfs* nocapture readnone, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixAccess(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @mkFullPathname(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFullPathname(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @unixDlOpen(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i8* @dlopen(i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlError(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i8* @dlerror() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void ()* @unixDlSym(%struct.sqlite3_vfs* nocapture readnone, i8*, i8*) #3

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlClose(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i32 @dlclose(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRandomness(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i64 @time(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSleep(%struct.sqlite3_vfs* nocapture readnone, i32) #3

declare i32 @"\01_sleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTimeInt64(%struct.sqlite3_vfs* nocapture readnone, i64* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTime(%struct.sqlite3_vfs* nocapture readnone, double* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetLastError(%struct.sqlite3_vfs* nocapture readnone, i32, i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetLockPath(i8* nocapture readonly, i8*, i64) local_unnamed_addr #3

declare i64 @"\01_confstr"(i32, i8*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateLockPath(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateUnixFile(i8*, %struct.unixFile** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetHostID(i8*, i32*) local_unnamed_addr #3

declare i32 @gethostuuid(i8*, %struct.timespec*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyBreakConchLock(%struct.unixFile* readonly, i8* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @__strlcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyConchLock(%struct.unixFile*, i8* nocapture readonly, i32) local_unnamed_addr #3

declare i32 @"\01_usleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTakeConch(%struct.unixFile*) local_unnamed_addr #3

declare i32 @futimes(i32, %struct.timeval*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbStrDup(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyReleaseConch(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateConchPathname(i8*, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @switchLockProxyPath(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @proxyGetDbPathForUnixFile(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_os_init() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_os_end() local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcacheManageDirtyList(%struct.PgHdr*, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcacheUnpin(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @numberOfCachePages(%struct.PCache* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree noinline nounwind ssp uwtable
declare %struct.PgHdr* @pcacheFetchFinishWithInit(%struct.PCache*, i32, %struct.sqlite3_pcache_page*) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheMergeDirtyList(%struct.PgHdr*, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheSortDirtyList(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1InitBulk(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pcache1Alloc(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1AllocPage(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1FreePage(%struct.PgHdr1*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1UnderMemoryPressure(%struct.PCache1* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pcache1ResizeHash(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1PinPage(%struct.PgHdr1* returned) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1RemoveFromHash(%struct.PgHdr1*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1EnforceMaxPage(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1TruncateUnsafe(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1Init(i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable writeonly
declare void @pcache1Shutdown(i8* nocapture readnone) #20

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache* @pcache1Create(i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Destroy(%struct.sqlite3_pcache*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Cachesize(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Shrink(%struct.sqlite3_pcache* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1Pagecount(%struct.sqlite3_pcache* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchStage2(%struct.PCache1*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchNoMutex(%struct.sqlite3_pcache*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache_page* @pcache1Fetch(%struct.sqlite3_pcache*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Unpin(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcache1Rekey(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Truncate(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryAlloc(%struct.RowSet* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryMerge(%struct.RowSetEntry*, %struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntrySort(%struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @rowSetTreeToList(%struct.RowSetEntry*, %struct.RowSetEntry** nocapture, %struct.RowSetEntry** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetNDeepTree(%struct.RowSetEntry**, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetListToTree(%struct.RowSetEntry*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setGetterMethod(%struct.Pager* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @getPageError(%struct.Pager* nocapture readonly, i32, %struct.PgHdr** nocapture, i32) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageMMap(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageNormal(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @subjRequiresPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @read32bits(%struct.sqlite3_file*, i64, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @write32bits(%struct.sqlite3_file*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUnlockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerLockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @jrnlBufferSize(%struct.Pager* nocapture readnone) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @readMasterJournal(%struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @journalHdrOffset(%struct.Pager* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @zeroJournalHdr(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeJournalHdr(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readJournalHdr(%struct.Pager* nocapture, i32, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetPagesize(%struct.Pager* nocapture, i32* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeMasterJournal(%struct.Pager* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_reset(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseAllSavepoints(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BitvecDestroy(%struct.Bitvec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addToSavepointBitvecs(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BitvecSet(%struct.Bitvec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_unlock(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @pager_error(%struct.Pager* nocapture, i32 returned) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pagerFlushOnCommit(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_end_transaction(%struct.Pager*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_truncate(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockAndRollback(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerRollback(%struct.Pager*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pager_cksum(%struct.Pager* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback_one_page(%struct.Pager*, i64* nocapture, %struct.Bitvec*, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3PcacheRelease(%struct.PgHdr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_delmaster(%struct.Pager* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setSectorSize(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readDbPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalFindFrame(%struct.Wal* nocapture, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pager_write_changecounter(%struct.PgHdr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUndoCallback(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerRollbackWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerWalFrames(%struct.Pager* nocapture, %struct.PgHdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerBeginReadTransaction(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPagecount(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWalIfPresent(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPlaybackSavepoint(%struct.Pager*, %struct.PagerSavepoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFixMaplimit(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpentemp(%struct.Pager* nocapture readonly, %struct.sqlite3_file*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_wait_on_lock(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerSyncHotJournal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerAcquireMapPage(%struct.Pager*, i32, i8*, %struct.PgHdr** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerReleaseMapPage(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFreeMapHdrs(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @databaseIsUnmoved(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @syncJournal(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write_pagelist(%struct.Pager*, %struct.PgHdr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @openSubJournal(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPageIfRequired(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerStress(i8*, %struct.PgHdr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @hasHotJournal(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockIfUnused(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_open_journal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerAddPageToRollbackJournal(%struct.PgHdr* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerWriteLargeSector(%struct.PgHdr* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_incr_changecounter(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerOpenSavepoint(%struct.Pager* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerExclusiveLock(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walIndexPageRealloc(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexPage(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull %struct.WalCkptInfo* @walCkptInfo(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WalIndexHdr* @walIndexHdr(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare void @walChecksumBytes(i32, i8* readonly, i32, i32* readonly, i32* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walShmBarrier(%struct.Wal* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexWriteHdr(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @walEncodeFrame(%struct.Wal*, i32, i32, i8* readonly, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @walDecodeFrame(%struct.Wal* nocapture, i32* nocapture, i32* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walHash(i32) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walNextHash(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @walHashGet(%struct.Wal* nocapture, i32, %struct.WalHashLoc* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walFramePage(i32) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walFramePgno(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @walCleanupHash(%struct.Wal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexAppend(%struct.Wal* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexRecover(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexClose(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walIteratorNext(%struct.WalIterator* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare void @walMerge(i32* nocapture readonly, i16*, i32, i16** nocapture, i32* nocapture, i16*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walMergesort(i32* nocapture readonly, i16*, i16*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIteratorFree(%struct.WalIterator*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIteratorInit(%struct.Wal* nocapture, i32, %struct.WalIterator** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBusyLock(%struct.Wal* nocapture readonly, i32 (i8*)*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @walPagesize(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @walRestartHdr(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walLimitSize(%struct.Wal* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexTryHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexReadHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBeginShmUnreliable(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walTryBeginRead(%struct.Wal*, i32* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRestartLog(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteToLog(%struct.WalWriter* nocapture readonly, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteOneFrame(%struct.WalWriter* nocapture readonly, %struct.PgHdr* nocapture readonly, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRewriteChecksums(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @lockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @unlockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLockCarefully(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeEnterAll(%struct.sqlite3* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLeaveAll(%struct.sqlite3* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_enable_shared_cache(i32) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @querySharedCacheTableLock(%struct.Btree* readonly, i32, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @setSharedCacheTableLock(%struct.Btree*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @clearAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @downgradeAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateAllOverflowCache(%struct.BtShared* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateIncrblobCursors(%struct.Btree* nocapture, i32, i64, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeSetHasContent(%struct.BtShared* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreeGetHasContent(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @btreeClearHasContent(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeReleaseAllCursorPages(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageNotNull(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorKey(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveAllCursors(%struct.BtShared* nocapture readonly, i32, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @saveCursorsOnList(%struct.BtCursor*, i32, %struct.BtCursor* readnone) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeMoveto(%struct.BtCursor*, i8*, i64, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeRestoreCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @ptrmapPageno(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPut(%struct.BtShared* nocapture readonly, i32, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @ptrmapGet(%struct.BtShared* nocapture readonly, i32, i8* nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind ssp uwtable
declare void @btreeParseCellAdjustSizeForOverflow(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) local_unnamed_addr #21

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly, %struct.CellInfo* nocapture) #15

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local zeroext i8 @sqlite3GetVarint(i8* nocapture readonly %p, i64* nocapture %v) unnamed_addr #2 {
entry:
  %0 = load i8, i8* %p, align 1, !tbaa !10
  %cmp = icmp sgt i8 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv2 = zext i8 %0 to i64
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds i8, i8* %p, i64 1
  %1 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %cmp5 = icmp sgt i8 %1, -1
  %conv9 = zext i8 %0 to i32
  br i1 %cmp5, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end
  %and = shl nuw nsw i32 %conv9, 7
  %shl = and i32 %and, 16256
  %conv11 = zext i8 %1 to i32
  %or = or i32 %shl, %conv11
  %conv12 = zext i32 %or to i64
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %shl16 = shl nuw nsw i32 %conv9, 14
  %conv18 = zext i8 %1 to i32
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 2
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv19 = zext i8 %2 to i32
  %or20 = or i32 %shl16, %conv19
  %tobool = icmp slt i8 %2, 0
  %and29 = and i32 %or20, 2080895
  br i1 %tobool, label %if.end28, label %if.then22

if.then22:                                        ; preds = %if.end13
  %and24 = shl nuw nsw i32 %conv18, 7
  %shl25 = and i32 %and24, 16256
  %or26 = or i32 %and29, %shl25
  %conv27 = zext i32 %or26 to i64
  br label %cleanup

if.end28:                                         ; preds = %if.end13
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 3
  %shl30 = shl nuw nsw i32 %conv18, 14
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv31 = zext i8 %3 to i32
  %or32 = or i32 %shl30, %conv31
  %tobool34 = icmp slt i8 %3, 0
  %and41 = and i32 %or32, 2080895
  br i1 %tobool34, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end28
  %shl37 = shl nuw nsw i32 %and29, 7
  %or38 = or i32 %and41, %shl37
  %conv39 = zext i32 %or38 to i64
  br label %cleanup

if.end40:                                         ; preds = %if.end28
  %incdec.ptr42 = getelementptr inbounds i8, i8* %p, i64 4
  %shl43 = shl i32 %and29, 14
  %4 = load i8, i8* %incdec.ptr42, align 1, !tbaa !10
  %conv44 = zext i8 %4 to i32
  %or45 = or i32 %shl43, %conv44
  %tobool47 = icmp slt i8 %4, 0
  br i1 %tobool47, label %if.end55, label %if.then48

if.then48:                                        ; preds = %if.end40
  %shl49 = shl nuw nsw i32 %and41, 7
  %or50 = or i32 %or45, %shl49
  %shr = lshr i32 %and29, 18
  %conv51 = zext i32 %shr to i64
  %shl52 = shl nuw nsw i64 %conv51, 32
  %conv53 = zext i32 %or50 to i64
  %or54 = or i64 %shl52, %conv53
  br label %cleanup

if.end55:                                         ; preds = %if.end40
  %shl56 = shl nuw nsw i32 %and29, 7
  %or57 = or i32 %and41, %shl56
  %incdec.ptr58 = getelementptr inbounds i8, i8* %p, i64 5
  %shl59 = shl i32 %and41, 14
  %5 = load i8, i8* %incdec.ptr58, align 1, !tbaa !10
  %conv60 = zext i8 %5 to i32
  %or61 = or i32 %shl59, %conv60
  %tobool63 = icmp slt i8 %5, 0
  br i1 %tobool63, label %if.end73, label %if.then64

if.then64:                                        ; preds = %if.end55
  %and65 = shl i32 %or45, 7
  %shl66 = and i32 %and65, 266354560
  %or67 = or i32 %or61, %shl66
  %shr68 = lshr i32 %or57, 18
  %conv69 = zext i32 %shr68 to i64
  %shl70 = shl nuw nsw i64 %conv69, 32
  %conv71 = zext i32 %or67 to i64
  %or72 = or i64 %shl70, %conv71
  br label %cleanup

if.end73:                                         ; preds = %if.end55
  %incdec.ptr74 = getelementptr inbounds i8, i8* %p, i64 6
  %shl75 = shl i32 %or45, 14
  %6 = load i8, i8* %incdec.ptr74, align 1, !tbaa !10
  %conv76 = zext i8 %6 to i32
  %or77 = or i32 %shl75, %conv76
  %tobool79 = icmp slt i8 %6, 0
  br i1 %tobool79, label %if.end90, label %if.then80

if.then80:                                        ; preds = %if.end73
  %and81 = and i32 %or77, -266354561
  %and82 = shl i32 %or61, 7
  %shl83 = and i32 %and82, 266354560
  %or84 = or i32 %and81, %shl83
  %shr85 = lshr i32 %or57, 11
  %conv86 = zext i32 %shr85 to i64
  %shl87 = shl nuw nsw i64 %conv86, 32
  %conv88 = zext i32 %or84 to i64
  %or89 = or i64 %shl87, %conv88
  br label %cleanup

if.end90:                                         ; preds = %if.end73
  %and91 = and i32 %or77, 2080895
  %incdec.ptr92 = getelementptr inbounds i8, i8* %p, i64 7
  %shl93 = shl i32 %or61, 14
  %7 = load i8, i8* %incdec.ptr92, align 1, !tbaa !10
  %conv94 = zext i8 %7 to i32
  %or95 = or i32 %shl93, %conv94
  %tobool97 = icmp slt i8 %7, 0
  br i1 %tobool97, label %if.end107, label %if.then98

if.then98:                                        ; preds = %if.end90
  %and99 = and i32 %or95, -266354561
  %shl100 = shl nuw nsw i32 %and91, 7
  %or101 = or i32 %and99, %shl100
  %shr102 = lshr i32 %or57, 4
  %conv103 = zext i32 %shr102 to i64
  %shl104 = shl nuw nsw i64 %conv103, 32
  %conv105 = zext i32 %or101 to i64
  %or106 = or i64 %shl104, %conv105
  br label %cleanup

if.end107:                                        ; preds = %if.end90
  %incdec.ptr108 = getelementptr inbounds i8, i8* %p, i64 8
  %shl109 = shl i32 %and91, 15
  %8 = load i8, i8* %incdec.ptr108, align 1, !tbaa !10
  %conv110 = zext i8 %8 to i32
  %and112 = shl i32 %or95, 8
  %shl113 = and i32 %and112, 532709120
  %or111 = or i32 %shl113, %shl109
  %or114 = or i32 %or111, %conv110
  %shl115 = shl nuw i32 %or57, 4
  %9 = lshr i8 %4, 3
  %10 = and i8 %9, 15
  %shr119 = zext i8 %10 to i32
  %or120 = or i32 %shl115, %shr119
  %conv121 = zext i32 %or120 to i64
  %shl122 = shl nuw i64 %conv121, 32
  %conv123 = zext i32 %or114 to i64
  %or124 = or i64 %shl122, %conv123
  br label %cleanup

cleanup:                                          ; preds = %if.end107, %if.then98, %if.then80, %if.then64, %if.then48, %if.then35, %if.then22, %if.then7, %if.then
  %or124.sink = phi i64 [ %or124, %if.end107 ], [ %or106, %if.then98 ], [ %or89, %if.then80 ], [ %or72, %if.then64 ], [ %or54, %if.then48 ], [ %conv39, %if.then35 ], [ %conv27, %if.then22 ], [ %conv12, %if.then7 ], [ %conv2, %if.then ]
  %retval.0 = phi i8 [ 9, %if.end107 ], [ 8, %if.then98 ], [ 7, %if.then80 ], [ 6, %if.then64 ], [ 5, %if.then48 ], [ 4, %if.then35 ], [ 3, %if.then22 ], [ 2, %if.then7 ], [ 1, %if.then ]
  store i64 %or124.sink, i64* %v, align 8, !tbaa !16
  ret i8 %retval.0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtr(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrIndex(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @btreeParseCell(%struct.MemPage*, i32, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtr(%struct.MemPage* nocapture readonly, i8*) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPutOvflPtr(%struct.MemPage*, %struct.MemPage* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @defragmentPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pageFindSlot(%struct.MemPage* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateSpace(%struct.MemPage*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @freeSpace(%struct.MemPage* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @decodeFlags(%struct.MemPage* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeComputeFreeSpace(%struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeCellSizeCheck(%struct.MemPage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInitPage(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.MemPage* @btreePageFromDbPage(%struct.PgHdr*, i32, %struct.BtShared*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MemPage* @btreePageLookup(%struct.BtShared*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreePagecount(%struct.BtShared* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAndInitPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, %struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePage(%struct.MemPage* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageOne(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetUnusedPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pageReinit(%struct.PgHdr* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInvokeBusyHandler(i8* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @removeFromSharingList(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @allocateTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @lockBtree(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSharedLock(%struct.Pager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unlockBtreeIfUnused(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @newDatabase(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setChildPtrmaps(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @modifyPagePointer(%struct.MemPage*, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @relocatePage(%struct.BtShared*, %struct.MemPage*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @incrVacuumStep(%struct.BtShared*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateBtreePage(%struct.BtShared*, %struct.MemPage** nocapture, i32* nocapture, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @finalDbSize(%struct.BtShared* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @autoVacuumCommit(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeEndTransaction(%struct.Btree*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeSetNPage(%struct.BtShared* nocapture, %struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursorWithLock(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @getCellInfo(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @getOverflowPage(%struct.BtShared*, i32, %struct.MemPage**, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @copyPayload(i8*, i8*, i32, i32, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @accessPayload(%struct.BtCursor*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @accessPayloadChecked(%struct.BtCursor*, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @fetchPayload(%struct.BtCursor* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToChild(%struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @moveToParent(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRoot(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToLeftmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRightmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeNext(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreePrevious(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @freePage2(%struct.BtShared*, %struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freePage(%struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearCell(%struct.MemPage*, i8*, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInCell(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @dropCell(%struct.MemPage* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @insertCell(%struct.MemPage*, i32, i8*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @populateCellCache(%struct.CellArray* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @cachedCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @rebuildPage(%struct.CellArray* nocapture readonly, i32, i32, %struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageInsertArray(%struct.MemPage* nocapture readonly, i8*, i8** nocapture, i8* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageFreeArray(%struct.MemPage* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @editPage(%struct.MemPage*, i32, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_quick(%struct.MemPage*, %struct.MemPage*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @copyNodeContent(%struct.MemPage* nocapture readonly, %struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_nonroot(%struct.MemPage*, i32, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_deeper(%struct.MemPage*, %struct.MemPage** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @anotherValidCursor(%struct.BtCursor* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteContent(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteCell(%struct.BtCursor* nocapture readonly, %struct.BtreePayload* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCreateTable(%struct.Btree* nocapture, i32* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearDatabasePage(%struct.BtShared*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeDropTable(%struct.Btree*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkAppendMsg(%struct.IntegrityCk*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkRef(%struct.IntegrityCk*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkPtrmap(%struct.IntegrityCk*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkList(%struct.IntegrityCk*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeHeapInsert(i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @btreeHeapPull(i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkTreePage(%struct.IntegrityCk*, i32, i64* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Btree* @findBtree(%struct.sqlite3*, %struct.sqlite3*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTempDatabase(%struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorWithMsg(%struct.sqlite3*, i32, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDestPgsz(%struct.sqlite3_backup* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetPageSize(%struct.Btree* nocapture, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @checkReadTransaction(%struct.sqlite3*, %struct.Btree* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_backup* @sqlite3_backup_init(%struct.sqlite3*, i8*, %struct.sqlite3*, i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @isFatalError(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @backupOnePage(%struct.sqlite3_backup* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @backupTruncateFile(%struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @attachBackupObject(%struct.sqlite3_backup*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_step(%struct.sqlite3_backup*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ResetAllSchemasOfConnection(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerCommitPhaseOne(%struct.Pager*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseTwo(%struct.Btree*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseOne(%struct.Btree* nocapture, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_finish(%struct.sqlite3_backup*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeRollback(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3LeaveMutexAndCloseZombie(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_remaining(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_pagecount(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @backupUpdate(%struct.sqlite3_backup* nocapture, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMemRenderNum(i32, i8*, %struct.sqlite3_value* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeMemAddTerminator(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClear(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define i64 @doubleToInt64(double %r) local_unnamed_addr #22 {
entry:
  %cmp = fcmp ugt double %r, 0xC3E0000000000000
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult double %r, 0x43E0000000000000
  br i1 %cmp1, label %if.else3, label %return

if.else3:                                         ; preds = %if.else
  %conv = fptosi double %r to i64
  br label %return

return:                                           ; preds = %if.else3, %if.else, %entry
  %retval.0 = phi i64 [ %conv, %if.else3 ], [ -9223372036854775808, %entry ], [ 9223372036854775807, %if.else ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind ssp uwtable
declare i64 @memIntValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3Atoi64(i8* readonly %zNum, i64* nocapture %pNum, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  %conv = zext i8 %enc to i32
  %cmp = icmp eq i8 %enc, 1
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %sub = sub nsw i32 3, %conv
  %cmp3255 = icmp slt i32 %sub, %length
  br i1 %cmp3255, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %length to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv266 = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next267, %for.inc ]
  %i.0256 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %zNum, i64 %indvars.iv266
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %for.inc, label %for.end.loopexit.split.loop.exit295

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next267 = add i64 %indvars.iv266, 2
  %add = add nsw i32 %i.0256, 2
  %cmp3 = icmp slt i64 %indvars.iv.next267, %1
  br i1 %cmp3, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit295:              ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv266 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit295, %for.inc, %if.else
  %i.0.lcssa = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit295 ], [ %add, %for.inc ]
  %cmp3.lcssa = phi i32 [ 0, %if.else ], [ 1, %for.end.loopexit.split.loop.exit295 ], [ 0, %for.inc ]
  %xor = xor i32 %i.0.lcssa, 1
  %and = and i32 %conv, 1
  %idx.ext13 = zext i32 %and to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext13
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %zNum.addr.0 = phi i8* [ %add.ptr14, %for.end ], [ %zNum, %entry ]
  %incr.0 = phi i32 [ 2, %for.end ], [ 1, %entry ]
  %nonNum.0 = phi i32 [ %cmp3.lcssa, %for.end ], [ 0, %entry ]
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %entry ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext.pn
  %cmp15252 = icmp ult i8* %zNum.addr.0, %zEnd.0
  br i1 %cmp15252, label %land.rhs17.lr.ph, label %if.end43

land.rhs17.lr.ph:                                 ; preds = %if.end
  %idx.ext23 = zext i32 %incr.0 to i64
  br label %land.rhs17

land.rhs17:                                       ; preds = %while.body, %land.rhs17.lr.ph
  %zNum.addr.1253 = phi i8* [ %zNum.addr.0, %land.rhs17.lr.ph ], [ %add.ptr24, %while.body ]
  %4 = load i8, i8* %zNum.addr.1253, align 1, !tbaa !10
  %idxprom18 = zext i8 %4 to i64
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom18
  %5 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %6 = and i8 %5, 1
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.then27, label %while.body

while.body:                                       ; preds = %land.rhs17
  %add.ptr24 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  %cmp15 = icmp ult i8* %add.ptr24, %zEnd.0
  br i1 %cmp15, label %land.rhs17, label %if.end43

if.then27:                                        ; preds = %land.rhs17
  switch i8 %4, label %if.end43 [
    i8 45, label %if.then31
    i8 43, label %if.then38
  ]

if.then31:                                        ; preds = %if.then27
  %add.ptr33 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.then38:                                        ; preds = %if.then27
  %add.ptr40 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.then31, %if.then27, %while.body, %if.end
  %zNum.addr.2 = phi i8* [ %add.ptr33, %if.then31 ], [ %add.ptr40, %if.then38 ], [ %zNum.addr.1253, %if.then27 ], [ %zNum.addr.0, %if.end ], [ %add.ptr24, %while.body ]
  %neg.0 = phi i32 [ 1, %if.then31 ], [ 0, %if.then38 ], [ 0, %if.then27 ], [ 0, %if.end ], [ 0, %while.body ]
  %cmp45248 = icmp ult i8* %zNum.addr.2, %zEnd.0
  br i1 %cmp45248, label %land.rhs47.lr.ph, label %while.end56

land.rhs47.lr.ph:                                 ; preds = %if.end43
  %idx.ext54 = zext i32 %incr.0 to i64
  br label %land.rhs47

land.rhs47:                                       ; preds = %while.body53, %land.rhs47.lr.ph
  %zNum.addr.3249 = phi i8* [ %zNum.addr.2, %land.rhs47.lr.ph ], [ %add.ptr55, %while.body53 ]
  %7 = load i8, i8* %zNum.addr.3249, align 1, !tbaa !10
  %cmp50 = icmp eq i8 %7, 48
  br i1 %cmp50, label %while.body53, label %while.end56

while.body53:                                     ; preds = %land.rhs47
  %add.ptr55 = getelementptr inbounds i8, i8* %zNum.addr.3249, i64 %idx.ext54
  %cmp45 = icmp ult i8* %add.ptr55, %zEnd.0
  br i1 %cmp45, label %land.rhs47, label %while.end56

while.end56:                                      ; preds = %while.body53, %land.rhs47, %if.end43
  %zNum.addr.3.lcssa = phi i8* [ %zNum.addr.2, %if.end43 ], [ %add.ptr55, %while.body53 ], [ %zNum.addr.3249, %land.rhs47 ]
  %cmp60238 = icmp ult i8* %zNum.addr.3.lcssa, %zEnd.0
  br i1 %cmp60238, label %land.end70.preheader, label %for.end77.thread

for.end77.thread:                                 ; preds = %while.end56
  %tobool81272 = icmp eq i32 %neg.0, 0
  br i1 %tobool81272, label %if.end88, label %if.then84

land.end70.preheader:                             ; preds = %while.end56
  %8 = zext i32 %incr.0 to i64
  br label %land.end70

land.end70:                                       ; preds = %for.body71, %land.end70.preheader
  %indvars.iv264 = phi i64 [ 0, %land.end70.preheader ], [ %indvars.iv.next265, %for.body71 ]
  %arrayidx59241 = phi i8* [ %zNum.addr.3.lcssa, %land.end70.preheader ], [ %arrayidx59, %for.body71 ]
  %i.1240 = phi i32 [ 0, %land.end70.preheader ], [ %add76, %for.body71 ]
  %u.0239 = phi i64 [ 0, %land.end70.preheader ], [ %sub74, %for.body71 ]
  %9 = load i8, i8* %arrayidx59241, align 1, !tbaa !10
  %.off = add i8 %9, -48
  %10 = icmp ult i8 %.off, 10
  br i1 %10, label %for.body71, label %for.end77.split.loop.exit

for.body71:                                       ; preds = %land.end70
  %mul = mul i64 %u.0239, 10
  %conv72288 = zext i8 %9 to i64
  %add73 = add i64 %mul, -48
  %sub74 = add i64 %add73, %conv72288
  %indvars.iv.next265 = add i64 %indvars.iv264, %8
  %add76 = add nuw nsw i32 %i.1240, %incr.0
  %arrayidx59 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next265
  %cmp60 = icmp ult i8* %arrayidx59, %zEnd.0
  br i1 %cmp60, label %land.end70, label %for.end77

for.end77.split.loop.exit:                        ; preds = %land.end70
  %11 = trunc i64 %indvars.iv264 to i32
  br label %for.end77

for.end77:                                        ; preds = %for.end77.split.loop.exit, %for.body71
  %u.0.lcssa = phi i64 [ %u.0239, %for.end77.split.loop.exit ], [ %sub74, %for.body71 ]
  %i.1.lcssa = phi i32 [ %11, %for.end77.split.loop.exit ], [ %add76, %for.body71 ]
  %cmp60.lcssa = phi i1 [ true, %for.end77.split.loop.exit ], [ false, %for.body71 ]
  %cmp78 = icmp slt i64 %u.0.lcssa, 0
  %tobool81 = icmp ne i32 %neg.0, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %for.end77
  %cond = select i1 %tobool81, i64 -9223372036854775808, i64 9223372036854775807
  br label %if.end88

if.else82:                                        ; preds = %for.end77
  br i1 %tobool81, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.else82, %for.end77.thread
  %u.0.lcssa273286 = phi i64 [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %i.1.lcssa275284 = phi i32 [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  %cmp60.lcssa277282 = phi i1 [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %sub85 = sub nsw i64 0, %u.0.lcssa273286
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.else82, %if.then80, %for.end77.thread
  %sub85.sink = phi i64 [ %sub85, %if.then84 ], [ %cond, %if.then80 ], [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %tobool81279 = phi i1 [ true, %if.then84 ], [ %tobool81, %if.then80 ], [ false, %for.end77.thread ], [ false, %if.else82 ]
  %cmp60.lcssa276 = phi i1 [ %cmp60.lcssa277282, %if.then84 ], [ %cmp60.lcssa, %if.then80 ], [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %i.1.lcssa274 = phi i32 [ %i.1.lcssa275284, %if.then84 ], [ %i.1.lcssa, %if.then80 ], [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  store i64 %sub85.sink, i64* %pNum, align 8, !tbaa !16
  %cmp89 = icmp eq i32 %i.1.lcssa274, 0
  %cmp92 = icmp eq i8* %zNum.addr.2, %zNum.addr.3.lcssa
  %or.cond = and i1 %cmp92, %cmp89
  br i1 %or.cond, label %if.end120, label %if.else95

if.else95:                                        ; preds = %if.end88
  %tobool96 = icmp ne i32 %nonNum.0, 0
  %cmp60.not = xor i1 %cmp60.lcssa276, true
  %brmerge = or i1 %tobool96, %cmp60.not
  br i1 %brmerge, label %if.end120, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else95
  %12 = zext i32 %i.1.lcssa274 to i64
  %13 = zext i32 %incr.0 to i64
  br label %do.body

do.body:                                          ; preds = %if.end112, %do.body.preheader
  %indvars.iv = phi i64 [ %12, %do.body.preheader ], [ %indvars.iv.next, %if.end112 ]
  %arrayidx105 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %idxprom106 = zext i8 %14 to i64
  %arrayidx107 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom106
  %15 = load i8, i8* %arrayidx107, align 1, !tbaa !10
  %16 = and i8 %15, 1
  %tobool110 = icmp eq i8 %16, 0
  br i1 %tobool110, label %if.end120, label %if.end112

if.end112:                                        ; preds = %do.body
  %indvars.iv.next = add i64 %indvars.iv, %13
  %arrayidx115 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next
  %cmp116 = icmp ult i8* %arrayidx115, %zEnd.0
  br i1 %cmp116, label %do.body, label %if.end120

if.end120:                                        ; preds = %if.end112, %do.body, %if.else95, %if.end88
  %rc.1 = phi i32 [ -1, %if.end88 ], [ %nonNum.0, %if.else95 ], [ 1, %do.body ], [ 0, %if.end112 ]
  %mul121 = mul nuw nsw i32 %incr.0, 19
  %cmp122 = icmp ult i32 %i.1.lcssa274, %mul121
  br i1 %cmp122, label %cleanup, label %if.else125

if.else125:                                       ; preds = %if.end120
  %cmp127 = icmp ugt i32 %i.1.lcssa274, %mul121
  br i1 %cmp127, label %if.else133.thread, label %cond.false

if.else133.thread:                                ; preds = %if.else125
  %cond135233 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135233, i64* %pNum, align 8, !tbaa !16
  br label %cleanup

cond.false:                                       ; preds = %if.else125
  %17 = zext i32 %incr.0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %cond.false
  %indvars.iv.i = phi i64 [ 0, %cond.false ], [ %indvars.iv.next.i, %for.body.i ]
  %18 = mul nuw nsw i64 %indvars.iv.i, %17
  %arrayidx.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %18
  %19 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = sext i8 %19 to i32
  %arrayidx3.i = getelementptr inbounds [19 x i8], [19 x i8]* @.str.33, i64 0, i64 %indvars.iv.i
  %20 = load i8, i8* %arrayidx3.i, align 1, !tbaa !10
  %conv4.i = sext i8 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp eq i32 %sub.i, 0
  %cmp1.i = icmp ult i64 %indvars.iv.i, 17
  %21 = and i1 %cmp1.i, %cmp.i
  br i1 %21, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i
  %mul5.i = mul nsw i32 %sub.i, 10
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %for.end.i
  %mul8.i = mul nuw nsw i32 %incr.0, 18
  %idxprom9.i = zext i32 %mul8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %idxprom9.i
  %22 = load i8, i8* %arrayidx10.i, align 1, !tbaa !10
  %conv11.i = sext i8 %22 to i32
  %sub12.i = add nsw i32 %conv11.i, -56
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %for.end.i
  %cond129 = phi i32 [ %sub12.i, %if.then.i ], [ %mul5.i, %for.end.i ]
  %cmp130 = icmp slt i32 %cond129, 0
  br i1 %cmp130, label %cleanup, label %if.else133

if.else133:                                       ; preds = %cond.end
  %cond135 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135, i64* %pNum, align 8, !tbaa !16
  %cmp136 = icmp eq i32 %cond129, 0
  %cond144 = select i1 %tobool81279, i32 %rc.1, i32 3
  %spec.select236 = select i1 %cmp136, i32 %cond144, i32 2
  ret i32 %spec.select236

cleanup:                                          ; preds = %cond.end, %if.else133.thread, %if.end120
  %23 = phi i32 [ 2, %if.else133.thread ], [ %rc.1, %cond.end ], [ %rc.1, %if.end120 ]
  ret i32 %23
}

; Function Attrs: noinline nounwind ssp uwtable
declare double @memRealValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeReleaseAndSetInt64(%struct.sqlite3_value*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeClrCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @valueToText(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @valueNew(%struct.sqlite3*, %struct.ValueNewStat4Ctx* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @valueFromExpr(%struct.sqlite3*, %struct.Expr* nocapture readonly, i8 zeroext, i8 zeroext, %struct.sqlite3_value** nocapture, %struct.ValueNewStat4Ctx* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MPrintf(%struct.sqlite3*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMemNumerify(%struct.sqlite3_value* nocapture) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @valueBytes(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @growOpArray(%struct.Vdbe* nocapture, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @growOp3(%struct.Vdbe* nocapture, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp3(%struct.Vdbe*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @resizeResolveLabel(%struct.Parse* nocapture, %struct.Vdbe* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @resolveP2Values(%struct.Vdbe* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeEphemeralFunction(%struct.sqlite3*, %struct.FuncDef*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4Mem(%struct.sqlite3*, %struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4FuncCtx(%struct.sqlite3*, %struct.sqlite3_context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @freeP4(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeFreeOpArray(%struct.sqlite3*, %struct.VdbeOp*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeChangeP4Full(%struct.Vdbe* nocapture readonly, %struct.VdbeOp*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeChangeP4(%struct.Vdbe*, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @displayP4(%struct.VdbeOp* nocapture readonly, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeLeave(%struct.Vdbe* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @initMemArray(%struct.sqlite3_value* nocapture, i32, %struct.sqlite3*, i16 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @releaseMemArray(%struct.sqlite3_value*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @allocSpace(%struct.ReusableSpace* nocapture, i8* readnone, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @closeCursorsInFrame(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @closeAllCursors(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFrameRestore(%struct.VdbeFrame* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCommit(%struct.sqlite3*, %struct.Vdbe* nocapture readnone) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeCloseStatement(%struct.Vdbe* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSavepoint(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @handleMovedCursor(%struct.VdbeCursor* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @serialGet(i8* nocapture readonly, i32, %struct.sqlite3_value*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCompareMemString(%struct.sqlite3_value*, %struct.sqlite3_value*, %struct.CollSeq* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isAllZero(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @vdbeRecordDecodeInt(i32, i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareInt(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompare(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompareWithSkip(i32, i8*, %struct.UnpackedRecord*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareString(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_expired(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafety(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafetyNotNull(%struct.Vdbe* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_finalize(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_reset(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeReset(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_clear_bindings(%struct.sqlite3_stmt* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_blob(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_int(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_subtype(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_value_pointer(%struct.sqlite3_value* nocapture readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16be(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16le(%struct.sqlite3_value*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_nochange(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_frombind(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_value_dup(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_value_free(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @setResultStrOrError(%struct.sqlite3_context* nocapture, i8*, i32, i8 zeroext, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @invokeValueDestructor(i8*, void (i8*)*, %struct.sqlite3_context*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error16(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_null(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_pointer(%struct.sqlite3_context* nocapture readonly, i8*, i8*, void (i8*)*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_result_subtype(%struct.sqlite3_context* nocapture readonly, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16be(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16le(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_value(%struct.sqlite3_context* nocapture readonly, %struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_zeroblob(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_result_zeroblob64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_code(%struct.sqlite3_context* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @doWalCallbacks(%struct.sqlite3*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_step(%struct.sqlite3_stmt*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_user_data(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_vtab_nochange(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @createAggContext(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_aggregate_context(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_get_auxdata(%struct.sqlite3_context* nocapture readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_auxdata(%struct.sqlite3_context* nocapture, i32, i8*, void (i8*)*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_aggregate_count(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_column_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_data_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_value* @columnNullValue() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @columnMem(%struct.sqlite3_stmt* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @columnMallocFailure(%struct.sqlite3_stmt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_blob(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_column_double(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_int(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_column_int64(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_column_value(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_type(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @columnName(%struct.sqlite3_stmt* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeUnbind(%struct.Vdbe*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @bindText(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_null(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_pointer(%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_value(%struct.sqlite3_stmt*, i32, %struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_bind_parameter_name(%struct.sqlite3_stmt* readonly, i32) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_index(%struct.sqlite3_stmt* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_transfer_bindings(%struct.sqlite3_stmt* nocapture, %struct.sqlite3_stmt* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_db_handle(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_readonly(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_isexplain(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_busy(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_stmt* @sqlite3_next_stmt(%struct.sqlite3* nocapture readonly, %struct.sqlite3_stmt* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_stmt_status(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_sql(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare noalias i8* @sqlite3_expanded_sql(%struct.sqlite3_stmt* nocapture readnone) #11

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define i32 @alsoAnInt(%struct.sqlite3_value* nocapture readonly %pRec, double %rValue, i64* nocapture %piValue) local_unnamed_addr #2 {
entry:
  %conv = fptosi double %rValue to i64
  %cmp.i = fcmp oeq double %rValue, 0.000000e+00
  br i1 %cmp.i, label %if.then, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %entry
  %conv.i = sitofp i64 %conv to double
  %0 = bitcast double %conv.i to i64
  %1 = bitcast double %rValue to i64
  %2 = icmp ne i64 %1, %0
  %conv.off = add i64 %conv, 2251799813685248
  %3 = icmp ugt i64 %conv.off, 4503599627370495
  %4 = or i1 %3, %2
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.rhs.i, %entry
  store i64 %conv, i64* %piValue, align 8, !tbaa !16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %5 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %6 = load i32, i32* %n, align 4, !tbaa !29
  %enc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %7 = load i8, i8* %enc, align 2, !tbaa !21
  %call1 = call i32 @sqlite3Atoi64(i8* %5, i64* %piValue, i32 %6, i8 zeroext %7)
  %cmp = icmp eq i32 %call1, 0
  %conv2 = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %conv2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_numeric_type(%struct.sqlite3_value* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @out2Prerelease(%struct.Vdbe* nocapture readonly, %struct.VdbeOp* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobSeekToRow(%struct.Incrblob* nocapture, i64, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeExec(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_open(%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorMsg(%struct.Parse* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMakeReady(%struct.Vdbe*, %struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_close(%struct.sqlite3_blob*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobReadWrite(%struct.sqlite3_blob*, i8*, i32, i32, i32 (%struct.BtCursor*, i32, i32, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_read(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePayloadChecked(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_write(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePutData(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_blob_bytes(%struct.sqlite3_blob* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_reopen(%struct.sqlite3_blob*, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaReaderClear(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeIncrFree(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadBlob(%struct.PmaReader* nocapture, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadVarint(%struct.PmaReader* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMapFile(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderSeek(%struct.SortSubtask* nocapture readonly, %struct.PmaReader*, %struct.SorterFile* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderNext(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrSwap(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderInit(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i64, %struct.PmaReader*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareTail(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompare(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareText(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareInt(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterRecordFree(%struct.sqlite3*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSortSubtaskCleanup(%struct.sqlite3*, %struct.SortSubtask*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinThread(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCreateThread(%struct.SortSubtask* nocapture, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinAll(%struct.VdbeSorter* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MergeEngine* @vdbeMergeEngineNew(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineFree(%struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterExtendFile(%struct.sqlite3* nocapture readonly, %struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterOpenTempFile(%struct.sqlite3* nocapture readonly, i64, %struct.sqlite3_file** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSortAllocUnpacked(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SorterRecord* @vdbeSorterMerge(%struct.SortSubtask*, %struct.SorterRecord*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)* @vdbeSorterGetCompare(%struct.VdbeSorter* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSort(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriterInit(%struct.sqlite3_file*, %struct.PmaWriter*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteBlob(%struct.PmaWriter* nocapture, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaWriterFinish(%struct.PmaWriter*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteVarint(%struct.PmaWriter* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterListToPMA(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineStep(%struct.MergeEngine* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeSorterFlushThread(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterFlushPMA(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrPopulate(%struct.IncrMerger* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeIncrPopulateThread(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrBgPopulate(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrMergerNew(%struct.SortSubtask*, %struct.MergeEngine*, %struct.IncrMerger** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vdbeIncrMergerSetThreads(%struct.IncrMerger* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineCompare(%struct.MergeEngine* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineInit(%struct.SortSubtask*, %struct.MergeEngine* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrMergeInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbePmaReaderBgIncrInit(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineLevel0(%struct.SortSubtask* nocapture readonly, i32, i64* nocapture, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @vdbeSorterTreeDepth(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterAddToTree(%struct.SortSubtask*, i32, i32, %struct.MergeEngine* nocapture readonly, %struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMergeTreeBuild(%struct.VdbeSorter*, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSetupMerge(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @vdbeSorterRowkey(%struct.VdbeSorter* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @memjrnlRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #8

; Function Attrs: nounwind ssp uwtable
declare void @memjrnlFreeChunks(%struct.MemJournal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlCreateFile(%struct.MemJournal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlWrite(%struct.sqlite3_file*, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlClose(%struct.sqlite3_file* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @memjrnlSync(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @memjrnlFileSize(%struct.sqlite3_file* nocapture readonly, i64* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @walkWindowList(%struct.Walker*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walkExpr(%struct.Walker*, %struct.Expr*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelect(%struct.Walker*, %struct.Select*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @incrAggDepth(%struct.Walker* nocapture readonly, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @incrAggFunctionDepth(%struct.Expr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveAlias(%struct.Parse* nocapture readonly, %struct.ExprList* nocapture readonly, i32, %struct.Expr*, i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nameInUsingClause(%struct.IdList* readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @areDoubleQuotedStringsEnabled(%struct.sqlite3* nocapture readonly, %struct.NameContext* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @lookupName(%struct.Parse*, i8*, i8*, i8*, %struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3MatchEName(%struct.ExprList_item* nocapture readonly, i8* readonly, i8* readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @notValidImpl(%struct.Parse* nocapture, %struct.NameContext* nocapture readonly, i8*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprProbability(%struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveExprStep(%struct.Walker*, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.FuncDef* @sqlite3FindFunction(%struct.sqlite3*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @resolveAsName(%struct.Parse* nocapture readnone, %struct.ExprList* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderByTermToExprList(%struct.Parse*, %struct.Select* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCompare(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveOutOfRangeError(%struct.Parse* nocapture, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveCompoundOrderBy(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprIsInteger(%struct.Expr* readonly, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @resolveRemoveWindowsCb(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare void @windowRemoveExprFromSelect(%struct.Select*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderGroupBy(%struct.NameContext*, %struct.Select*, %struct.ExprList*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ResolveOrderGroupBy(%struct.Parse* nocapture, %struct.Select* nocapture readonly, %struct.ExprList* readonly, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveSelectStep(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectPrep(%struct.Parse*, %struct.Select*, %struct.NameContext*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare signext i8 @comparisonAffinity(%struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local signext i8 @sqlite3ExprAffinity(%struct.Expr* nocapture readonly) unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare zeroext i8 @binaryCompareP5(%struct.Expr* nocapture readonly, %struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @codeCompare(%struct.Parse* nocapture, %struct.Expr*, %struct.Expr*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp4(%struct.Vdbe*, i32, i32, i32, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeSubselect(%struct.Parse*, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CodeSubselect(%struct.Parse*, %struct.Expr* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprVectorRegister(%struct.Parse*, %struct.Expr*, i32, i32, %struct.Expr** nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTemp(%struct.Parse*, %struct.Expr*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeVectorCompare(%struct.Parse*, %struct.Expr* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExpr(%struct.Expr* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExprList(%struct.ExprList* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfSelect(%struct.Select* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @exprSetHeight(%struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @exprStructSize(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @dupedExprStructSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprNodeSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprSize(%struct.Expr* readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprDup(%struct.sqlite3*, %struct.Expr*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectDup(%struct.sqlite3*, %struct.Select* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListDup(%struct.sqlite3*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowDup(%struct.sqlite3*, %struct.Expr*, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.With* @withDup(%struct.sqlite3*, %struct.With* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @gatherSelectWindowsCallback(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @gatherSelectWindowsSelectCallback(%struct.Walker* nocapture readonly, %struct.Select* readnone) #7

; Function Attrs: nounwind ssp uwtable
declare void @gatherSelectWindows(%struct.Select*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @exprListDeleteNN(%struct.sqlite3*, %struct.ExprList*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsConstant(%struct.Walker* nocapture, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsConst(%struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare dso_local i32 @sqlite3SelectWalkFail(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #10

; Function Attrs: nounwind ssp uwtable
declare i32 @exprNodeIsConstantOrGroupBy(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @isCandidateForInOpt(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i8* @exprINAffinity(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeReal(%struct.Vdbe* nocapture, i8* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeInteger(%struct.Parse* nocapture, %struct.Expr* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3DecOrHexToI64(i8* readonly, i64*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @exprToRegister(%struct.Expr*, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeVector(%struct.Parse*, %struct.Expr*, i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDoNotMergeFlagOnCopy(%struct.Vdbe* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeInlineFunction(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCode(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTarget(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesExpr(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesNonNullRow(%struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprCodeBetween(%struct.Parse*, %struct.Expr* nocapture readonly, i32, void (%struct.Parse*, %struct.Expr*, i32, i32)*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCompareVariable(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprImpliesNotNull(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @impliesNotNullRow(%struct.Walker*, %struct.Expr* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprIdxCover(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprSrcCount(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoColumn(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoFunc(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeAggregate(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @analyzeAggregatesInSelect(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @analyzeAggregatesInSelectEnd(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @isAlterableTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTestSchema(%struct.Parse*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3NestedParse(%struct.Parse*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameReloadSchema(%struct.Parse* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @isRealTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameUnmapExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readnone) #15

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkWith(%struct.Walker*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameUnmapSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTokenFree(%struct.sqlite3*, %struct.RenameToken*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameTokenFind(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, i8* readnone) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameColumnSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameColumnExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.RenameToken* @renameColumnTokenNext(%struct.RenameCtx* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnParseError(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnElistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.ExprList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnIdlistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.IdList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameParseSql(%struct.Parse*, i8* readonly, %struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3RunParser(%struct.Parse*, i8*, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameEditSql(%struct.sqlite3_context* nocapture, %struct.RenameCtx* nocapture, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameResolveTrigger(%struct.Parse*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local %struct.Table* @sqlite3FindTable(%struct.sqlite3* nocapture readonly, i8* nocapture readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ViewGetColumnNames(%struct.Parse*, %struct.Table* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkTrigger(%struct.Walker*, %struct.Trigger* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameParseCleanup(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameTableExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameTableSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableTest(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @openStatTable(%struct.Parse*, i32, i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableLock(%struct.Parse* nocapture, i32, i32, i8 zeroext, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @statAccumDestructor(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @statInit(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statPush(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statGet(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @callStatGet(%struct.Parse* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeOneTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readnone, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strlike(i8* readonly, i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3OpenTable(%struct.Parse*, i32, i32, %struct.Table* nocapture readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @loadAnalysis(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeDatabase(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @decodeIntArray(i8* readonly, i32, i32* nocapture readnone, i16* nocapture, %struct.Index* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strglob(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @analysisLoader(i8* nocapture readonly, i32, i8** readonly, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveAttachExpr(%struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @attachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ParseUri(i8*, i8*, i32* nocapture, %struct.sqlite3_vfs** nocapture, i8** nocapture, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Schema* @sqlite3SchemaGet(%struct.sqlite3*, %struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeSetPagerFlags(%struct.Btree* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_filename(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeClose(%struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @detachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CollapseDatabaseArray(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeAttach(%struct.Parse*, i32, %struct.FuncDef*, %struct.Expr* readonly, %struct.Expr*, %struct.Expr*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_set_authorizer(%struct.sqlite3* nocapture, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteAuthBadReturnCode(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeTableLocks(%struct.Parse*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @deleteTable(%struct.sqlite3*, %struct.Table*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3HashInsert(%struct.Hash* nocapture, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @makeColumnPartOfPrimaryKey(%struct.Parse* nocapture, %struct.Column* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @identLength(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @identPut(i8* nocapture, i32* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @createTableStmt(%struct.sqlite3*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resizeIndexObject(%struct.sqlite3*, %struct.Index* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateTableWidth(%struct.Table* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateIndexWidth(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @hasColumn(i16* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isDupColumn(%struct.Index* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @recomputeColumnsNotIndexed(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @convertToWithoutRowidTable(%struct.Parse*, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppend(%struct.sqlite3*, %struct.ExprList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprAlloc(%struct.sqlite3*, i32, %struct.Token* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateIndex(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.SrcList*, %struct.ExprList*, i32, %struct.Token* readnone, %struct.Expr*, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteViewResetAll(%struct.sqlite3*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyRootPage(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyTable(%struct.Parse*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tableMayNotBeDropped(%struct.sqlite3* nocapture readnone, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @collationMatch(i8* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @reindexTable(%struct.Parse*, %struct.Table* nocapture readonly, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RefillIndex(%struct.Parse*, %struct.Index* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @reindexDatabases(%struct.Parse*, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @callCollNeeded(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @synthCollSeq(%struct.sqlite3* nocapture readonly, %struct.CollSeq*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @findCollSeqEntry(%struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @matchQuality(%struct.FuncDef* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tabIsReadOnly(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @minmaxFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @typeofFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lengthFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @absFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @instrFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @printfFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value**) #3

; Function Attrs: nounwind ssp uwtable
declare void @substrFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @roundFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @contextMalloc(%struct.sqlite3_context* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @upperFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lowerFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomBlob(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_insert_rowid(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @sqlite3_last_insert_rowid(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @total_changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_total_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @patternCompare(i8*, i8*, %struct.compareInfo* readonly, i32) local_unnamed_addr #18

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare void @likeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nullifFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @versionFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_libversion() #11

; Function Attrs: nounwind ssp uwtable
declare void @sourceidFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_sourceid() #11

; Function Attrs: nounwind ssp uwtable
declare void @errlogFunc(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @compileoptionusedFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_compileoption_used(i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare void @compileoptiongetFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readnone ssp uwtable
declare i8* @sqlite3_compileoption_get(i32) #23

; Function Attrs: nounwind ssp uwtable
declare void @quoteFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @unicodeFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @charFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @hexFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroblobFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @replaceFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @trimFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @loadExt(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_load_extension(%struct.sqlite3*, i8*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @avgFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @totalFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minmaxStep(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValueFinalize(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValue(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatValue(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @fkLookupParent(%struct.Parse*, i32, %struct.Table* readonly, %struct.Index*, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3IndexAffinityStr(%struct.sqlite3*, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableRegister(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableColumn(%struct.sqlite3*, %struct.Table*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkScanChildren(%struct.Parse*, %struct.SrcList*, %struct.Table*, %struct.Index* readonly, %struct.FKey* nocapture readonly, i32* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3PExpr(%struct.Parse* nocapture, i32, %struct.Expr*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.WhereInfo* @sqlite3WhereBegin(%struct.Parse*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.ExprList*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereEnd(%struct.WhereInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkTriggerDelete(%struct.sqlite3*, %struct.Trigger*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkChildIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkParentIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isSetNullAction(%struct.Parse* nocapture readonly, %struct.FKey* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.Trigger* @fkActionTrigger(%struct.Parse*, %struct.Table* nocapture readonly, %struct.FKey* nocapture, %struct.ExprList* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkLocateIndex(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, %struct.Index** nocapture, i32**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectNew(%struct.Parse* nocapture, %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, i32, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppend(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token* readonly, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readsTable(%struct.Parse*, i32, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprColumnFlagUnion(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @autoIncBegin(%struct.Parse* nocapture, i32, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @autoIncStep(%struct.Parse* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @autoIncrementEnd(%struct.Parse*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @checkConstraintExprNode(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @xferCompatibleIndex(%struct.Index* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @xferOptimization(%struct.Parse*, %struct.Table*, %struct.Select* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_exec(%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_enable_load_extension(%struct.sqlite3* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_auto_extension(void ()*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_cancel_auto_extension(void ()* readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_reset_auto_extension() #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @getSafetyLevel(i8* readonly, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getLockingMode(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAutoVacuum(i8* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getTempStore(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @invalidateTempStorage(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @changeTempStorage(%struct.Parse* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setPragmaResultColumnNames(%struct.Vdbe* nocapture, %struct.PragmaName* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleInt(%struct.Vdbe*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleText(%struct.Vdbe* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setAllPagerFlags(%struct.sqlite3* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @actionName(i8 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.PragmaName* @pragmaLocate(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pragmaFunclistLine(%struct.Vdbe* nocapture, %struct.FuncDef* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMultiLoad(%struct.Vdbe* nocapture, i32, i8* nocapture readonly, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @integrityCheckResultRow(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @corruptSchema(%struct.InitData* nocapture, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @schemaIsValid(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3LockAndPrepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare16(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @clearSelect(%struct.sqlite3*, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SrcListDelete(%struct.sqlite3*, %struct.SrcList*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @findRightmost(%struct.Select* readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @columnIndex(%struct.Table* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @tableAndColumnIndex(%struct.SrcList* nocapture readonly, i32, i8* nocapture readonly, i32*, i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @addWhereTerm(%struct.Parse* nocapture, %struct.SrcList* nocapture, i32, i32, i32, i32, i32, %struct.Expr** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @unsetJoinExpr(%struct.Expr*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteProcessJoin(%struct.Parse* nocapture, %struct.Select* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SetJoinExpr(%struct.Expr*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @innerLoopLoadRow(%struct.Parse*, %struct.Select* nocapture readonly, %struct.RowLoadInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeExprList(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @makeSorterRecord(%struct.Parse*, %struct.SortCtx* nocapture readonly, %struct.Select* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pushOntoSorter(%struct.Parse*, %struct.SortCtx* nocapture, %struct.Select* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeOffset(%struct.Vdbe* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeDistinct(%struct.Parse* nocapture, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @selectInnerLoop(%struct.Parse*, %struct.Select* nocapture readonly, i32, %struct.SortCtx*, %struct.DistinctCtx* readonly, %struct.SelectDest* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3ExprCollSeq(%struct.Parse* nocapture, %struct.Expr* readonly) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @selectOpName(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @explainTempTable(%struct.Parse* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeExplain(%struct.Parse* nocapture, i8 zeroext, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateSortTail(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SortCtx* nocapture readonly, i32, %struct.SelectDest* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @columnTypeImpl(%struct.NameContext*, %struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnTypes(%struct.Parse*, %struct.SrcList*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnNames(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @computeLimitRegisters(%struct.Parse*, %struct.Select* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @multiSelectCollSeq(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.KeyInfo* @multiSelectOrderByKeyInfo(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateWithRecursiveQuery(%struct.Parse*, %struct.Select*, %struct.SelectDest*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Select(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectValues(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelect(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectOrderBy(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @generateOutputSubroutine(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SelectDest* nocapture readonly, %struct.SelectDest* nocapture, i32, i32, %struct.KeyInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @substExpr(%struct.SubstContext* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substSelect(%struct.SubstContext* nocapture readonly, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substExprList(%struct.SubstContext*, %struct.ExprList*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flattenSubquery(%struct.Parse*, %struct.Select*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListEnlarge(%struct.Parse* nocapture, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @constInsert(%struct.WhereConst* nocapture, %struct.Expr*, %struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @findConstInWhere(%struct.WhereConst*, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstantExprRewrite(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstants(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3SelectWalkNoop(%struct.Walker* nocapture readnone, %struct.Select* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @pushDownWhereTerms(%struct.Parse*, %struct.Select*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @minMaxQuery(%struct.sqlite3*, %struct.Expr* nocapture readonly, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @isSimpleCount(%struct.Select* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @convertCompoundSelectToSubquery(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppendFromTerm(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token*, %struct.Token*, %struct.Token* readonly, %struct.Select*, %struct.Expr*, %struct.IdList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @cannotBeFunction(%struct.Parse* nocapture, %struct.SrcList_item* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.Cte* @searchWith(%struct.With*, %struct.SrcList_item* nocapture readonly, %struct.With** nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @withExpand(%struct.Walker*, %struct.SrcList_item* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ColumnsFromExprList(%struct.sqlite3*, %struct.ExprList* readonly, i16* nocapture, %struct.Column** nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @selectPopWith(%struct.Walker* nocapture readonly, %struct.Select* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @selectExpander(%struct.Walker*, %struct.Select* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SrcListAssignCursors(%struct.Parse* nocapture, %struct.SrcList*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @selectAddSubqueryTypeInfo(%struct.Walker* nocapture readonly, %struct.Select* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectAddColumnTypeAndCollation(%struct.Parse* nocapture, %struct.Table* nocapture, %struct.Select* nocapture readonly, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resetAccumulator(%struct.Parse* nocapture, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @finalizeAggFunctions(%struct.Parse* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @updateAccumulator(%struct.Parse*, i32, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfFalse(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @explainSimpleCount(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @havingToWhereExprCb(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @havingToWhere(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList_item* @isSelfJoinView(%struct.SrcList* readonly, %struct.SrcList_item* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table_cb(i8* nocapture, i32, i8** readonly, i8** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table(%struct.sqlite3*, i8*, i8*** nocapture, i32*, i32*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_table(i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @triggerSpanDup(%struct.sqlite3*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerStep* @triggerStepAllocate(%struct.Parse* nocapture, i8 zeroext, %struct.Token* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @tableOfTrigger(%struct.Trigger* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @checkColumnOverlap(%struct.IdList* readonly, %struct.ExprList* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList* @targetSrcList(%struct.Parse* nocapture readonly, %struct.TriggerStep* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeTriggerProgram(%struct.Parse*, %struct.TriggerStep* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Update(%struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.Expr*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Insert(%struct.Parse*, %struct.SrcList*, %struct.Select*, %struct.IdList*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListDup(%struct.sqlite3*, %struct.IdList* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteFrom(%struct.Parse*, %struct.SrcList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @transferParseError(%struct.Parse* nocapture, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @codeRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeDelete(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @getRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexColumnIsBeingUpdated(%struct.Index* nocapture readonly, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexWhereClauseMightChange(%struct.Index* nocapture readonly, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSql(%struct.sqlite3*, i8** nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSqlF(%struct.sqlite3*, i8** nocapture, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @explainIndexColumnName(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @explainAppendTerm(%struct.sqlite3_str*, %struct.Index* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @explainIndexRange(%struct.sqlite3_str*, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableTerm(%struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeApplyAffinity(%struct.Parse* nocapture readonly, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @updateRangeAffinityStr(%struct.Expr* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @removeUnindexableInClauseTerms(%struct.Parse* nocapture readonly, i32, %struct.WhereLoop* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeEqualityTerm(%struct.Parse*, %struct.WhereTerm* nocapture, %struct.WhereLevel* nocapture, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindInIndex(%struct.Parse*, %struct.Expr*, i32, i32*, i32*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeAllEqualityTerms(%struct.Parse*, %struct.WhereLevel*, i32, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLikeOptimizationStringFixup(%struct.Vdbe* nocapture readonly, %struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeDeferredSeek(%struct.WhereInfo* nocapture, %struct.Index* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeExprOrVector(%struct.Parse*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @preserveExpr(%struct.IdxExprTrans* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransNode(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransColumn(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @whereIndexExprTrans(%struct.Index* nocapture readonly, i32, i32, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereApplyPartialIndexConstraints(%struct.Expr* readonly, i32, %struct.WhereClause* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereOrInfoDelete(%struct.sqlite3*, %struct.WhereOrInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereClauseClear(%struct.WhereClause* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereAndInfoDelete(%struct.sqlite3*, %struct.WhereAndInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereClauseInsert(%struct.WhereClause*, %struct.Expr*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @allowedOp(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @exprCommute(%struct.Parse* nocapture, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @operatorMask(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @isLikeOrGlob(%struct.Parse*, %struct.Expr* nocapture readonly, %struct.Expr** nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @transferJoinMarkings(%struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @markTermAsChild(%struct.WhereClause* nocapture readonly, i32, i32) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereTerm* @whereNthSubterm(%struct.WhereTerm* readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @whereCombineDisjuncts(%struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.WhereTerm* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyze(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyzeOrTerm(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereSplit(%struct.WhereClause*, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @termIsEquivalence(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i64 @exprSelectUsage(%struct.WhereMaskSet* nocapture, %struct.Select* readonly) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @exprMightBeIndexed2(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @exprMightBeIndexed(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCheckIN(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereExprUsageNN(%struct.WhereMaskSet* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @whereOrMove(%struct.WhereOrSet*, %struct.WhereOrSet*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereOrInsert(%struct.WhereOrSet* nocapture, i64, i16 signext, i16 signext) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @createMask(%struct.WhereMaskSet* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanNext(%struct.WhereScan* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInitIndexExpr(%struct.WhereScan* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInit(%struct.WhereScan* nocapture, %struct.WhereClause*, i32, i32, i32, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findIndexCol(%struct.Parse* nocapture, %struct.ExprList* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @indexColumnNotNull(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDistinctRedundant(%struct.Parse* nocapture, %struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare signext i16 @estLog(i16 signext) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @translateColumnToCopy(%struct.Parse* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #15

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @termCanDriveIndex(%struct.WhereTerm* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @constructAutomaticIndex(%struct.Parse*, %struct.WhereClause* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64, %struct.WhereLevel* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopResize(%struct.sqlite3*, %struct.WhereLoop*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GenerateIndexKey(%struct.Parse*, %struct.Index* nocapture, i32, i32, i32, i32*, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereRangeAdjust(%struct.WhereTerm* readonly, i16 signext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereRangeScanEst(%struct.Parse* nocapture readnone, %struct.WhereLoopBuilder* nocapture readnone, %struct.WhereTerm* readonly, %struct.WhereTerm* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @whereLoopInit(%struct.WhereLoop*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClearUnion(%struct.sqlite3*, %struct.WhereLoop* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClear(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopXfer(%struct.sqlite3*, %struct.WhereLoop*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopDelete(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereInfoFree(%struct.sqlite3*, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @whereLoopCheaperProperSubset(%struct.WhereLoop* nocapture readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLoopAdjustCost(%struct.WhereLoop* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereLoop** @whereLoopFindLesser(%struct.WhereLoop** readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopInsert(%struct.WhereLoopBuilder* nocapture, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopOutputAdjust(%struct.WhereClause* nocapture readonly, %struct.WhereLoop* nocapture, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereRangeVectorLen(%struct.Parse* nocapture, i32, %struct.Index* nocapture readonly, i32, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtreeIndex(%struct.WhereLoopBuilder*, %struct.SrcList_item* readonly, %struct.Index* readonly, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexMightHelpWithOrderBy(%struct.WhereLoopBuilder* nocapture readonly, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereUsablePartialIndex(i32, i32, %struct.WhereClause* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtree(%struct.WhereLoopBuilder*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddOr(%struct.WhereLoopBuilder* nocapture, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddAll(%struct.WhereLoopBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare signext i8 @wherePathSatisfiesOrderBy(%struct.WhereInfo*, %struct.ExprList* nocapture readonly, %struct.WherePath* nocapture readonly, i16 zeroext, i16 zeroext, %struct.WhereLoop* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereSortingCost(%struct.WhereInfo* nocapture readonly, i16 signext, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @wherePathSolver(%struct.WhereInfo*, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereShortCut(%struct.WhereLoopBuilder* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsDeterministic(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsDeterministic(%struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopValueFunc(%struct.sqlite3_context* nocapture) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.Window* @windowFind(%struct.Parse* nocapture, %struct.Window*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteExprCb(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteSelectCb(%struct.Walker*, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare void @selectWindowRewriteEList(%struct.Parse*, %struct.Window*, %struct.SrcList*, %struct.ExprList* readonly, %struct.Table*, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.ExprList* @exprListAppendList(%struct.Parse* nocapture readonly, %struct.ExprList*, %struct.ExprList* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCheckValue(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowArgCount(%struct.Window* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowReadPeerValues(%struct.WindowCodeArg* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggStep(%struct.WindowCodeArg* nocapture readonly, %struct.Window* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggFinal(%struct.WindowCodeArg* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowFullScan(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowReturnOneRow(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowInitAccum(%struct.Parse*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowCacheFrame(%struct.Window* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowIfNewPeer(%struct.Parse*, %struct.ExprList* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCodeRangeTest(%struct.WindowCodeArg* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowCodeOp(%struct.WindowCodeArg*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowExprGtZero(%struct.Parse* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableLookaside(%struct.Parse* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @yy_destructor(%struct.yyParser* nocapture readonly, i16 zeroext, %union.YYMINORTYPE* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowDelete(%struct.sqlite3*, %struct.Window*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteTriggerStep(%struct.sqlite3*, %struct.TriggerStep*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_pop_parser_stack(%struct.yyParser* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_shift_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_reduce_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @yyStackOverflow(%struct.yyParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_shift(%struct.yyParser*, i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @yy_reduce(%struct.yyParser*, i32, i32, i8*, i32, %struct.Parse*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3StartTable(%struct.Parse*, %struct.Token*, %struct.Token*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3EndTable(%struct.Parse*, %struct.Token* nocapture readonly, %struct.Token* readonly, i8 zeroext, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddDefaultValue(%struct.Parse*, %struct.Expr*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @tokenExpr(%struct.Parse* nocapture, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddPrimaryKey(%struct.Parse*, %struct.ExprList*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateForeignKey(%struct.Parse* nocapture, %struct.ExprList*, %struct.Token*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddGenerated(%struct.Parse* nocapture, %struct.Expr*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTable(%struct.Parse*, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3JoinType(%struct.Parse* nocapture, %struct.Token*, %struct.Token*, %struct.Token*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppendVector(%struct.Parse*, %struct.ExprList*, %struct.IdList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListAppend(%struct.Parse* nocapture, %struct.IdList*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GetInt32(i8* nocapture readonly, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Vacuum(%struct.Parse*, %struct.Token*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Pragma(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.Token*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Analyze(%struct.Parse*, %struct.Token*, %struct.Token* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.With* @sqlite3WithAdd(%struct.Parse* nocapture, %struct.With*, %struct.Token* readonly, %struct.ExprList*, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowChain(%struct.Parse* nocapture, %struct.Window* nocapture, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowAlloc(%struct.Parse*, i32, i32, %struct.Expr*, i32, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_syntax_error(%struct.yyParser* nocapture, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @yy_accept(%struct.yyParser* nocapture) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @keywordCode(i8* nocapture readonly, i32 returned, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_keyword_name(i32, i8** nocapture, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_keyword_count() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_keyword_check(i8* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getToken(i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local i32 @sqlite3GetToken(i8* readonly, i32*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeWindowKeyword(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeOverKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeFilterKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_complete(i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_complete16(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_libversion_number() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_threadsafe() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_shutdown() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_config(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setupLookaside(%struct.sqlite3*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_db_mutex(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_release_memory(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_cacheflush(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_config(%struct.sqlite3*, i32, ...) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @binCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @rtrimCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nocaseCollatingFunc(i8* nocapture readnone, i32, i8* readonly, i32, i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_last_insert_rowid(%struct.sqlite3* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @functionDestroy(%struct.sqlite3*, %struct.FuncDef* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @disconnectAllVtab(%struct.sqlite3* nocapture) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @connectionIsBusy(%struct.sqlite3* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Close(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close_v2(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteDefaultBusyCallback(i8* nocapture readonly, i32, %struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_handler(%struct.sqlite3* nocapture, i32 (i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_progress_handler(%struct.sqlite3* nocapture, i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_timeout(%struct.sqlite3*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_interrupt(%struct.sqlite3*) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @createFunctionApi(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CreateFunc(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, %struct.FuncDestructor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function_v2(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_window_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function16(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_overload_function(%struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3InvalidFunction(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_commit_hook(%struct.sqlite3* nocapture, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_update_hook(%struct.sqlite3* nocapture, void (i8*, i32, i8*, i8*, i64)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_rollback_hook(%struct.sqlite3* nocapture, void (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_autocheckpoint(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_wal_hook(%struct.sqlite3* nocapture, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalDefaultHook(i8*, %struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint_v2(%struct.sqlite3*, i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Checkpoint(%struct.sqlite3* nocapture readonly, i32, i32, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint(%struct.sqlite3*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg16(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_system_errno(%struct.sqlite3* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_errstr(i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @createCollation(%struct.sqlite3*, i8*, i8 zeroext, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @sqlite3_limit(%struct.sqlite3* nocapture, i32, i32) #15

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @uriParameter(i8* readonly, i8* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @openDatabase(i8*, %struct.sqlite3** nocapture, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open_v2(i8*, %struct.sqlite3** nocapture, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open16(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation_v2(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation16(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed16(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_global_recover() local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_get_autocommit(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @sqlite3_thread_cleanup() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_table_column_metadata(%struct.sqlite3*, i8* readonly, i8*, i8*, i8**, i8**, i32*, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_sleep(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_result_codes(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_file_control(%struct.sqlite3* nocapture readonly, i8* readonly, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_test_control(i32, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @databaseName(i8* readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare nonnull i8* @appendText(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_create_filename(i8*, i8*, i8*, i32, i8** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_key(i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_uri_int64(i8* readonly, i8* readonly, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_filename_database(i8* readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_journal(i8* readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_wal(i8* readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_db_filename(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_db_readonly(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ErrorFinish(%struct.sqlite3* nocapture, i32) unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3BitvecClear(%struct.Bitvec*, i32, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeTripAllCursors(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeCloseCursor(%struct.BtCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeSorterReset(%struct.sqlite3*, %struct.VdbeSorter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeTransferError(%struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RollbackAll(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #24

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3NoopDestructor(i8* nocapture) #11

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFinishMoveto(%struct.VdbeCursor* nocapture) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SchemaClear(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitOne(%struct.sqlite3*, i32, i8**, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitCallback(i8* nocapture, i32, i8**, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AnalysisLoad(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFrameMemDel(i8*) #15

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetJournalMode(%struct.Pager*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3RunVacuum(i8** nocapture, %struct.sqlite3*, i32, %struct.sqlite3_value*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RowSetDelete(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalClose(%struct.Wal*, %struct.sqlite3*, i32, i32, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i32, i8*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetSpillSize(%struct.Btree* nocapture, i32) unnamed_addr #3

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) local_unnamed_addr #12

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelectExpr(%struct.Walker*, %struct.Select* nocapture readonly) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ExprDeleteNN(%struct.sqlite3*, %struct.Expr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListDup(%struct.sqlite3*, %struct.SrcList* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGeneratedColumn(%struct.Parse*, %struct.Column*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeRunJustOnce(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeIN(%struct.Parse*, %struct.Expr*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeCopy(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGetColumnOfTable(%struct.Vdbe* nocapture, %struct.Table* readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3BlobCompare(%struct.sqlite3_value* nocapture readonly, %struct.sqlite3_value* nocapture readonly) unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WindowCompare(%struct.Parse*, %struct.Window* readonly, %struct.Window* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.KeyInfo* @sqlite3KeyInfoOfIndex(%struct.Parse* nocapture, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3PagerClose(%struct.Pager*, %struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AuthReadCol(%struct.Parse* nocapture, i8*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ReadSchema(%struct.Parse*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Table* @sqlite3ResultSetOfSelect(%struct.Parse*, %struct.Select*, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSrcList(%struct.DbFixer* nocapture readonly, %struct.SrcList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CheckObjectName(%struct.Parse* nocapture, i8*, i8* readonly, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindDb(%struct.sqlite3*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSelect(%struct.DbFixer* nocapture readonly, %struct.Select* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixExpr(%struct.DbFixer* nocapture readonly, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UniqueConstraint(%struct.Parse*, i32, %struct.Index* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3GetCollSeq(%struct.Parse* nocapture, i8 zeroext, %struct.CollSeq*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3ExprWalkNoop(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readnone) #11

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprSimplifiedAndOr(%struct.Expr* readonly) unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfTrue(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTableAndIndices(%struct.Parse*, %struct.Table* nocapture readonly, i32, i8 zeroext, i32, i8* readonly, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ComputeGeneratedColumns(%struct.Parse*, i32, %struct.Table*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableAffinity(%struct.Vdbe* nocapture, %struct.Table* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeRowTrigger(%struct.Parse*, %struct.Trigger*, i32, %struct.ExprList* readonly, i32, %struct.Table*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateConstraintChecks(%struct.Parse*, %struct.Table*, i32* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i32, i32* nocapture, i32*, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3FkCheck(%struct.Parse*, %struct.Table*, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CompleteInsertion(%struct.Parse*, %struct.Table*, i32, i32, i32, i32* nocapture readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowDelete(%struct.Parse*, %struct.Table*, %struct.Trigger*, i32, i32, i32, i16 signext, i8 zeroext, i8 zeroext, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowIndexDelete(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UpsertDoUpdate(%struct.Parse*, %struct.Upsert*, %struct.Table* nocapture readonly, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkOldmask(%struct.Parse* nocapture, %struct.Table* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MaterializeView(%struct.Parse*, %struct.Table* nocapture readonly, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SetHasNullFlag(%struct.Vdbe* nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereExplainOneScan(%struct.Parse* nocapture readonly, %struct.SrcList* nocapture readonly, %struct.WhereLevel* nocapture readonly, i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereCodeOneLoopStart(%struct.Parse*, %struct.Vdbe*, %struct.WhereInfo*, i32, %struct.WhereLevel*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeVerifyNamedSchema(%struct.Parse* nocapture, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeDropTable(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTriggerPtr(%struct.Parse*, %struct.Trigger* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3WindowOffsetExpr(%struct.Parse*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemMalloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MemFree(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemRealloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemSize(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3MemRoundup(i32) #11

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemInit(i8* nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3MemShutdown(i8* nocapture) #11

; Function Attrs: allocsize(1)
declare i8* @malloc_zone_malloc(%struct._malloc_zone_t*, i64) local_unnamed_addr #26

declare void @malloc_zone_free(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: allocsize(2)
declare i8* @malloc_zone_realloc(%struct._malloc_zone_t*, i8*, i64) local_unnamed_addr #27

declare i64 @malloc_size(i8*) local_unnamed_addr #12

declare i32 @sysctlbyname(i8*, i8*, i64*, i8*, i64) local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_default_zone() local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_create_zone(i64, i32) local_unnamed_addr #12

declare void @malloc_set_zone_name(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #28

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #28

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) local_unnamed_addr #29

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #28

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #30

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #28

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree
declare i64 @strlcat(i8*, i8*, i64) #31

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) #31

attributes #0 = { norecurse nounwind nonlazybind uwtable willreturn "nonfree" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { alwaysinline nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noinline nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree noinline norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { noinline nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { allocsize(2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { nounwind readnone speculatable willreturn }
attributes #29 = { nofree nounwind }
attributes #30 = { cold noreturn nounwind }
attributes #31 = { nofree }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 7, !"PIC Level", i32 2}
!5 = !{!"clang version 11.0.0 (https://github.com/KowalskiThomas/LLVM 63660cfe7d4c851881497a874a10f82c1b74cd5a)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"double", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"UnpackedRecord", !13, i64 0, !13, i64 8, !14, i64 16, !8, i64 18, !8, i64 19, !8, i64 20, !8, i64 21, !8, i64 22}
!13 = !{!"any pointer", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!12, !8, i64 18}
!16 = !{!17, !17, i64 0}
!17 = !{!"long long", !8, i64 0}
!18 = !{!19, !8, i64 4}
!19 = !{!"KeyInfo", !20, i64 0, !8, i64 4, !14, i64 6, !14, i64 8, !13, i64 16, !13, i64 24, !8, i64 32}
!20 = !{!"int", !8, i64 0}
!21 = !{!22, !8, i64 10}
!22 = !{!"sqlite3_value", !8, i64 0, !14, i64 8, !8, i64 10, !8, i64 11, !20, i64 12, !13, i64 16, !13, i64 24, !20, i64 32, !20, i64 36, !13, i64 40, !13, i64 48}
!23 = !{!19, !13, i64 16}
!24 = !{!22, !13, i64 40}
!25 = !{!22, !20, i64 32}
!26 = !{!22, !13, i64 16}
!27 = !{!12, !14, i64 16}
!28 = !{!22, !14, i64 8}
!29 = !{!22, !20, i64 12}
!30 = !{!22, !13, i64 24}
!31 = !{!32, !13, i64 8}
!32 = !{!"sqlite3_str", !13, i64 0, !13, i64 8, !20, i64 16, !20, i64 20, !20, i64 24, !8, i64 28, !8, i64 29}
!33 = !{!32, !13, i64 0}
!34 = !{!32, !20, i64 16}
!35 = !{!32, !20, i64 24}
!36 = !{!14, !14, i64 0}
!37 = distinct !DISubprogram(name: "jittedFunction", linkageName: "jittedFunction", scope: null, file: !38, line: 1624, type: !39, scopeLine: 1624, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !40)
!38 = !DIFile(filename: "../src/mlir/sqlite_bridge/ModuleWriter.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!39 = !DISubroutineType(types: !40)
!40 = !{}
!41 = !DILocation(line: 100, scope: !42)
!42 = !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!43 = !DILocation(line: 102, scope: !42)
!44 = !DILocation(line: 106, scope: !42)
!45 = !DILocation(line: 107, scope: !42)
!46 = !DILocation(line: 111, scope: !42)
!47 = !DILocation(line: 112, scope: !42)
!48 = !DILocation(line: 116, scope: !42)
!49 = !DILocation(line: 117, scope: !42)
!50 = !DILocation(line: 131, scope: !42)
!51 = !DILocation(line: 135, scope: !42)
!52 = !DILocation(line: 136, scope: !42)
!53 = !DILocation(line: 1582, scope: !42)
!54 = !DILocation(line: 24, scope: !55)
!55 = !DILexicalBlockFile(scope: !37, file: !56, discriminator: 0)
!56 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!57 = !DILocation(line: 28, scope: !55)
!58 = !DILocation(line: 34, scope: !55)
!59 = !DILocation(line: 38, scope: !55)
!60 = !DILocation(line: 39, scope: !55)
!61 = !DILocation(line: 40, scope: !55)
!62 = !DILocation(line: 46, scope: !55)
!63 = !DILocation(line: 37, scope: !64)
!64 = !DILexicalBlockFile(scope: !37, file: !65, discriminator: 0)
!65 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterOpenLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!66 = !DILocation(line: 45, scope: !64)
!67 = !DILocation(line: 50, scope: !64)
!68 = !DILocation(line: 52, scope: !64)
!69 = !DILocation(line: 53, scope: !64)
!70 = !DILocation(line: 54, scope: !64)
!71 = !DILocation(line: 55, scope: !64)
!72 = !DILocation(line: 57, scope: !64)
!73 = !DILocation(line: 59, scope: !64)
!74 = !DILocation(line: 1560, scope: !42)
!75 = !DILocation(line: 30, scope: !76)
!76 = !DILexicalBlockFile(scope: !37, file: !77, discriminator: 0)
!77 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IntegerLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!78 = !DILocation(line: 36, scope: !76)
!79 = !DILocation(line: 34, scope: !80)
!80 = !DILexicalBlockFile(scope: !37, file: !81, discriminator: 0)
!81 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/OutToPrerelease.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!82 = !DILocation(line: 38, scope: !80)
!83 = !DILocation(line: 41, scope: !80)
!84 = !DILocation(line: 39, scope: !76)
!85 = !DILocation(line: 40, scope: !76)
!86 = !DILocation(line: 42, scope: !76)
!87 = !DILocation(line: 42, scope: !88)
!88 = !DILexicalBlockFile(scope: !37, file: !89, discriminator: 0)
!89 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!90 = !DILocation(line: 43, scope: !88)
!91 = !DILocation(line: 52, scope: !88)
!92 = !DILocation(line: 55, scope: !88)
!93 = !DILocation(line: 58, scope: !88)
!94 = !DILocation(line: 59, scope: !88)
!95 = !DILocation(line: 63, scope: !88)
!96 = !DILocation(line: 66, scope: !88)
!97 = !DILocation(line: 71, scope: !88)
!98 = !DILocation(line: 74, scope: !88)
!99 = !DILocation(line: 75, scope: !88)
!100 = !DILocation(line: 35, scope: !101)
!101 = !DILexicalBlockFile(scope: !37, file: !102, discriminator: 0)
!102 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/GosubLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!103 = !DILocation(line: 38, scope: !101)
!104 = !DILocation(line: 39, scope: !101)
!105 = !DILocation(line: 42, scope: !101)
!106 = !DILocation(line: 43, scope: !101)
!107 = !DILocation(line: 45, scope: !101)
!108 = !DILocation(line: 51, scope: !101)
!109 = !DILocation(line: 37, scope: !110)
!110 = !DILexicalBlockFile(scope: !37, file: !111, discriminator: 0)
!111 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenReadLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!112 = !DILocation(line: 38, scope: !110)
!113 = !DILocation(line: 39, scope: !110)
!114 = !DILocation(line: 43, scope: !110)
!115 = !DILocation(line: 45, scope: !110)
!116 = !DILocation(line: 94, scope: !110)
!117 = !DILocation(line: 103, scope: !110)
!118 = !DILocation(line: 104, scope: !110)
!119 = !DILocation(line: 107, scope: !110)
!120 = !DILocation(line: 109, scope: !110)
!121 = !DILocation(line: 111, scope: !110)
!122 = !DILocation(line: 112, scope: !110)
!123 = !DILocation(line: 115, scope: !110)
!124 = !DILocation(line: 117, scope: !110)
!125 = !DILocation(line: 120, scope: !110)
!126 = !DILocation(line: 126, scope: !110)
!127 = !DILocation(line: 129, scope: !110)
!128 = !DILocation(line: 136, scope: !110)
!129 = !DILocation(line: 138, scope: !110)
!130 = !DILocation(line: 141, scope: !110)
!131 = !DILocation(line: 142, scope: !110)
!132 = !DILocation(line: 145, scope: !110)
!133 = !DILocation(line: 28, scope: !134)
!134 = !DILexicalBlockFile(scope: !37, file: !135, discriminator: 0)
!135 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RewindLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!136 = !DILocation(line: 39, scope: !134)
!137 = !DILocation(line: 41, scope: !134)
!138 = !DILocation(line: 43, scope: !134)
!139 = !DILocation(line: 45, scope: !134)
!140 = !DILocation(line: 46, scope: !134)
!141 = !DILocation(line: 49, scope: !134)
!142 = !DILocation(line: 56, scope: !134)
!143 = !DILocation(line: 58, scope: !134)
!144 = !DILocation(line: 73, scope: !134)
!145 = !DILocation(line: 74, scope: !134)
!146 = !DILocation(line: 77, scope: !134)
!147 = !DILocation(line: 85, scope: !134)
!148 = !DILocation(line: 87, scope: !134)
!149 = !DILocation(line: 89, scope: !134)
!150 = !DILocation(line: 100, scope: !134)
!151 = !DILocation(line: 107, scope: !134)
!152 = !DILocation(line: 111, scope: !134)
!153 = !DILocation(line: 115, scope: !134)
!154 = !DILocation(line: 121, scope: !134)
!155 = !DILocation(line: 125, scope: !134)
!156 = !DILocation(line: 129, scope: !134)
!157 = !DILocation(line: 133, scope: !134)
!158 = !DILocation(line: 136, scope: !134)
!159 = !DILocation(line: 142, scope: !134)
!160 = !DILocation(line: 148, scope: !134)
!161 = !DILocation(line: 149, scope: !134)
!162 = !DILocation(line: 151, scope: !134)
!163 = !DILocation(line: 155, scope: !134)
!164 = !DILocation(line: 157, scope: !134)
!165 = !DILocation(line: 159, scope: !134)
!166 = !DILocation(line: 162, scope: !134)
!167 = !DILocation(line: 30, scope: !168)
!168 = !DILexicalBlockFile(scope: !37, file: !169, discriminator: 0)
!169 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ColumnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!170 = !DILocation(line: 42, scope: !168)
!171 = !DILocation(line: 43, scope: !168)
!172 = !DILocation(line: 60, scope: !168)
!173 = !DILocation(line: 61, scope: !168)
!174 = !DILocation(line: 67, scope: !168)
!175 = !DILocation(line: 72, scope: !168)
!176 = !DILocation(line: 73, scope: !168)
!177 = !DILocation(line: 74, scope: !168)
!178 = !DILocation(line: 85, scope: !168)
!179 = !DILocation(line: 88, scope: !168)
!180 = !DILocation(line: 93, scope: !168)
!181 = !DILocation(line: 103, scope: !168)
!182 = !DILocation(line: 120, scope: !168)
!183 = !DILocation(line: 126, scope: !168)
!184 = !DILocation(line: 130, scope: !168)
!185 = !DILocation(line: 142, scope: !168)
!186 = !DILocation(line: 147, scope: !168)
!187 = !DILocation(line: 153, scope: !168)
!188 = !DILocation(line: 159, scope: !168)
!189 = !DILocation(line: 168, scope: !168)
!190 = !DILocation(line: 174, scope: !168)
!191 = !DILocation(line: 179, scope: !168)
!192 = !DILocation(line: 181, scope: !168)
!193 = !DILocation(line: 199, scope: !168)
!194 = !DILocation(line: 206, scope: !168)
!195 = !DILocation(line: 214, scope: !168)
!196 = !DILocation(line: 222, scope: !168)
!197 = !DILocation(line: 230, scope: !168)
!198 = !DILocation(line: 248, scope: !168)
!199 = !DILocation(line: 253, scope: !168)
!200 = !DILocation(line: 257, scope: !168)
!201 = !DILocation(line: 261, scope: !168)
!202 = !DILocation(line: 264, scope: !168)
!203 = !DILocation(line: 268, scope: !168)
!204 = !DILocation(line: 303, scope: !168)
!205 = !DILocation(line: 498, scope: !168)
!206 = !DILocation(line: 499, scope: !168)
!207 = !DILocation(line: 504, scope: !168)
!208 = !DILocation(line: 23, scope: !209)
!209 = !DILexicalBlockFile(scope: !37, file: !210, discriminator: 0)
!210 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/GetVarint32.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!211 = !DILocation(line: 36, scope: !209)
!212 = !DILocation(line: 39, scope: !209)
!213 = !DILocation(line: 47, scope: !209)
!214 = !DILocation(line: 50, scope: !209)
!215 = !DILocation(line: 53, scope: !209)
!216 = !DILocation(line: 55, scope: !209)
!217 = !DILocation(line: 64, scope: !209)
!218 = !DILocation(line: 71, scope: !209)
!219 = !DILocation(line: 72, scope: !209)
!220 = !DILocation(line: 73, scope: !209)
!221 = !DILocation(line: 509, scope: !168)
!222 = !DILocation(line: 517, scope: !168)
!223 = !DILocation(line: 518, scope: !168)
!224 = !DILocation(line: 521, scope: !168)
!225 = !DILocation(line: 524, scope: !168)
!226 = !DILocation(line: 547, scope: !168)
!227 = !DILocation(line: 550, scope: !168)
!228 = !DILocation(line: 533, scope: !168)
!229 = !DILocation(line: 535, scope: !168)
!230 = !DILocation(line: 556, scope: !168)
!231 = !DILocation(line: 425, scope: !168)
!232 = !DILocation(line: 433, scope: !168)
!233 = !DILocation(line: 469, scope: !168)
!234 = !DILocation(line: 474, scope: !168)
!235 = !DILocation(line: 478, scope: !168)
!236 = !DILocation(line: 484, scope: !168)
!237 = !DILocation(line: 491, scope: !168)
!238 = !DILocation(line: 327, scope: !168)
!239 = !DILocation(line: 332, scope: !168)
!240 = !DILocation(line: 343, scope: !168)
!241 = !DILocation(line: 349, scope: !168)
!242 = !DILocation(line: 352, scope: !168)
!243 = !DILocation(line: 358, scope: !168)
!244 = !DILocation(line: 362, scope: !168)
!245 = !DILocation(line: 364, scope: !168)
!246 = !DILocation(line: 372, scope: !168)
!247 = !DILocation(line: 377, scope: !168)
!248 = !DILocation(line: 378, scope: !168)
!249 = !DILocation(line: 379, scope: !168)
!250 = !DILocation(line: 384, scope: !168)
!251 = !DILocation(line: 389, scope: !168)
!252 = !DILocation(line: 390, scope: !168)
!253 = !DILocation(line: 405, scope: !168)
!254 = !DILocation(line: 411, scope: !168)
!255 = !DILocation(line: 563, scope: !168)
!256 = !DILocation(line: 565, scope: !168)
!257 = !DILocation(line: 575, scope: !168)
!258 = !DILocation(line: 1037, scope: !168)
!259 = !DILocation(line: 1041, scope: !168)
!260 = !DILocation(line: 1042, scope: !168)
!261 = !DILocation(line: 1044, scope: !168)
!262 = !DILocation(line: 1057, scope: !168)
!263 = !DILocation(line: 1063, scope: !168)
!264 = !DILocation(line: 1072, scope: !168)
!265 = !DILocation(line: 1077, scope: !168)
!266 = !DILocation(line: 1083, scope: !168)
!267 = !DILocation(line: 1095, scope: !168)
!268 = !DILocation(line: 1097, scope: !168)
!269 = !DILocation(line: 1099, scope: !168)
!270 = !DILocation(line: 1101, scope: !168)
!271 = !DILocation(line: 1103, scope: !168)
!272 = !DILocation(line: 1109, scope: !168)
!273 = !DILocation(line: 1110, scope: !168)
!274 = !DILocation(line: 1111, scope: !168)
!275 = !DILocation(line: 1112, scope: !168)
!276 = !DILocation(line: 1113, scope: !168)
!277 = !DILocation(line: 1114, scope: !168)
!278 = !DILocation(line: 1115, scope: !168)
!279 = !DILocation(line: 1116, scope: !168)
!280 = !DILocation(line: 1123, scope: !168)
!281 = !DILocation(line: 1124, scope: !168)
!282 = !DILocation(line: 1125, scope: !168)
!283 = !DILocation(line: 1130, scope: !168)
!284 = !DILocation(line: 1134, scope: !168)
!285 = !DILocation(line: 1140, scope: !168)
!286 = !DILocation(line: 1141, scope: !168)
!287 = !DILocation(line: 1142, scope: !168)
!288 = !DILocation(line: 1143, scope: !168)
!289 = !DILocation(line: 1145, scope: !168)
!290 = !DILocation(line: 1148, scope: !168)
!291 = !DILocation(line: 1149, scope: !168)
!292 = !DILocation(line: 1152, scope: !168)
!293 = !DILocation(line: 1157, scope: !168)
!294 = !DILocation(line: 1159, scope: !168)
!295 = !DILocation(line: 1163, scope: !168)
!296 = !DILocation(line: 1172, scope: !168)
!297 = !DILocation(line: 1182, scope: !168)
!298 = !DILocation(line: 1188, scope: !168)
!299 = !DILocation(line: 1190, scope: !168)
!300 = !DILocation(line: 1192, scope: !168)
!301 = !DILocation(line: 1194, scope: !168)
!302 = !DILocation(line: 1199, scope: !168)
!303 = !DILocation(line: 1201, scope: !168)
!304 = !DILocation(line: 1210, scope: !168)
!305 = !DILocation(line: 1217, scope: !168)
!306 = !DILocation(line: 1222, scope: !168)
!307 = !DILocation(line: 1225, scope: !168)
!308 = !DILocation(line: 1227, scope: !168)
!309 = !DILocation(line: 1234, scope: !168)
!310 = !DILocation(line: 1235, scope: !168)
!311 = !DILocation(line: 1236, scope: !168)
!312 = !DILocation(line: 1237, scope: !168)
!313 = !DILocation(line: 1242, scope: !168)
!314 = !DILocation(line: 1243, scope: !168)
!315 = !DILocation(line: 1245, scope: !168)
!316 = !DILocation(line: 1246, scope: !168)
!317 = !DILocation(line: 1247, scope: !168)
!318 = !DILocation(line: 1250, scope: !168)
!319 = !DILocation(line: 1252, scope: !168)
!320 = !DILocation(line: 1254, scope: !168)
!321 = !DILocation(line: 1256, scope: !168)
!322 = !DILocation(line: 1258, scope: !168)
!323 = !DILocation(line: 1268, scope: !168)
!324 = !DILocation(line: 1272, scope: !168)
!325 = !DILocation(line: 1281, scope: !168)
!326 = !DILocation(line: 1282, scope: !168)
!327 = !DILocation(line: 1283, scope: !168)
!328 = !DILocation(line: 1285, scope: !168)
!329 = !DILocation(line: 1287, scope: !168)
!330 = !DILocation(line: 1297, scope: !168)
!331 = !DILocation(line: 1300, scope: !168)
!332 = !DILocation(line: 1309, scope: !168)
!333 = !DILocation(line: 1326, scope: !168)
!334 = !DILocation(line: 1334, scope: !168)
!335 = !DILocation(line: 1339, scope: !168)
!336 = !DILocation(line: 1340, scope: !168)
!337 = !DILocation(line: 1343, scope: !168)
!338 = !DILocation(line: 1354, scope: !168)
!339 = !DILocation(line: 1359, scope: !168)
!340 = !DILocation(line: 1363, scope: !168)
!341 = !DILocation(line: 1373, scope: !168)
!342 = !DILocation(line: 1375, scope: !168)
!343 = !DILocation(line: 1376, scope: !168)
!344 = !DILocation(line: 1378, scope: !168)
!345 = !DILocation(line: 1314, scope: !168)
!346 = !DILocation(line: 1318, scope: !168)
!347 = !DILocation(line: 1017, scope: !168)
!348 = !DILocation(line: 1023, scope: !168)
!349 = !DILocation(line: 1025, scope: !168)
!350 = !DILocation(line: 1027, scope: !168)
!351 = !DILocation(line: 584, scope: !168)
!352 = !DILocation(line: 585, scope: !168)
!353 = !DILocation(line: 586, scope: !168)
!354 = !DILocation(line: 595, scope: !168)
!355 = !DILocation(line: 605, scope: !168)
!356 = !DILocation(line: 607, scope: !168)
!357 = !DILocation(line: 614, scope: !168)
!358 = !DILocation(line: 628, scope: !168)
!359 = !DILocation(line: 629, scope: !168)
!360 = !DILocation(line: 644, scope: !168)
!361 = !DILocation(line: 645, scope: !168)
!362 = !DILocation(line: 646, scope: !168)
!363 = !DILocation(line: 647, scope: !168)
!364 = !DILocation(line: 649, scope: !168)
!365 = !DILocation(line: 651, scope: !168)
!366 = !DILocation(line: 654, scope: !168)
!367 = !DILocation(line: 655, scope: !168)
!368 = !DILocation(line: 656, scope: !168)
!369 = !DILocation(line: 658, scope: !168)
!370 = !DILocation(line: 659, scope: !168)
!371 = !DILocation(line: 662, scope: !168)
!372 = !DILocation(line: 664, scope: !168)
!373 = !DILocation(line: 666, scope: !168)
!374 = !DILocation(line: 668, scope: !168)
!375 = !DILocation(line: 670, scope: !168)
!376 = !DILocation(line: 684, scope: !168)
!377 = !DILocation(line: 695, scope: !168)
!378 = !DILocation(line: 697, scope: !168)
!379 = !DILocation(line: 703, scope: !168)
!380 = !DILocation(line: 704, scope: !168)
!381 = !DILocation(line: 705, scope: !168)
!382 = !DILocation(line: 708, scope: !168)
!383 = !DILocation(line: 710, scope: !168)
!384 = !DILocation(line: 713, scope: !168)
!385 = !DILocation(line: 717, scope: !168)
!386 = !DILocation(line: 786, scope: !168)
!387 = !DILocation(line: 788, scope: !168)
!388 = !DILocation(line: 790, scope: !168)
!389 = !DILocation(line: 794, scope: !168)
!390 = !DILocation(line: 795, scope: !168)
!391 = !DILocation(line: 796, scope: !168)
!392 = !DILocation(line: 799, scope: !168)
!393 = !DILocation(line: 804, scope: !168)
!394 = !DILocation(line: 814, scope: !168)
!395 = !DILocation(line: 817, scope: !168)
!396 = !DILocation(line: 821, scope: !168)
!397 = !DILocation(line: 822, scope: !168)
!398 = !DILocation(line: 823, scope: !168)
!399 = !DILocation(line: 825, scope: !168)
!400 = !DILocation(line: 830, scope: !168)
!401 = !DILocation(line: 833, scope: !168)
!402 = !DILocation(line: 750, scope: !168)
!403 = !DILocation(line: 753, scope: !168)
!404 = !DILocation(line: 760, scope: !168)
!405 = !DILocation(line: 766, scope: !168)
!406 = !DILocation(line: 769, scope: !168)
!407 = !DILocation(line: 770, scope: !168)
!408 = !DILocation(line: 773, scope: !168)
!409 = !DILocation(line: 775, scope: !168)
!410 = !DILocation(line: 778, scope: !168)
!411 = !DILocation(line: 779, scope: !168)
!412 = !DILocation(line: 780, scope: !168)
!413 = !DILocation(line: 782, scope: !168)
!414 = !DILocation(line: 723, scope: !168)
!415 = !DILocation(line: 726, scope: !168)
!416 = !DILocation(line: 730, scope: !168)
!417 = !DILocation(line: 731, scope: !168)
!418 = !DILocation(line: 732, scope: !168)
!419 = !DILocation(line: 733, scope: !168)
!420 = !DILocation(line: 734, scope: !168)
!421 = !DILocation(line: 737, scope: !168)
!422 = !DILocation(line: 739, scope: !168)
!423 = !DILocation(line: 741, scope: !168)
!424 = !DILocation(line: 743, scope: !168)
!425 = !DILocation(line: 843, scope: !168)
!426 = !DILocation(line: 844, scope: !168)
!427 = !DILocation(line: 845, scope: !168)
!428 = !DILocation(line: 853, scope: !168)
!429 = !DILocation(line: 857, scope: !168)
!430 = !DILocation(line: 861, scope: !168)
!431 = !DILocation(line: 865, scope: !168)
!432 = !DILocation(line: 869, scope: !168)
!433 = !DILocation(line: 870, scope: !168)
!434 = !DILocation(line: 871, scope: !168)
!435 = !DILocation(line: 877, scope: !168)
!436 = !DILocation(line: 887, scope: !168)
!437 = !DILocation(line: 889, scope: !168)
!438 = !DILocation(line: 892, scope: !168)
!439 = !DILocation(line: 897, scope: !168)
!440 = !DILocation(line: 898, scope: !168)
!441 = !DILocation(line: 900, scope: !168)
!442 = !DILocation(line: 922, scope: !168)
!443 = !DILocation(line: 923, scope: !168)
!444 = !DILocation(line: 924, scope: !168)
!445 = !DILocation(line: 927, scope: !168)
!446 = !DILocation(line: 928, scope: !168)
!447 = !DILocation(line: 929, scope: !168)
!448 = !DILocation(line: 930, scope: !168)
!449 = !DILocation(line: 931, scope: !168)
!450 = !DILocation(line: 932, scope: !168)
!451 = !DILocation(line: 933, scope: !168)
!452 = !DILocation(line: 946, scope: !168)
!453 = !DILocation(line: 961, scope: !168)
!454 = !DILocation(line: 963, scope: !168)
!455 = !DILocation(line: 972, scope: !168)
!456 = !DILocation(line: 974, scope: !168)
!457 = !DILocation(line: 975, scope: !168)
!458 = !DILocation(line: 1001, scope: !168)
!459 = !DILocation(line: 1391, scope: !168)
!460 = !DILocation(line: 58, scope: !461)
!461 = !DILexicalBlockFile(scope: !37, file: !462, discriminator: 0)
!462 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareJumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!463 = !DILocation(line: 61, scope: !461)
!464 = !DILocation(line: 63, scope: !461)
!465 = !DILocation(line: 66, scope: !461)
!466 = !DILocation(line: 69, scope: !461)
!467 = !DILocation(line: 72, scope: !461)
!468 = !DILocation(line: 73, scope: !461)
!469 = !DILocation(line: 74, scope: !461)
!470 = !DILocation(line: 75, scope: !461)
!471 = !DILocation(line: 78, scope: !461)
!472 = !DILocation(line: 79, scope: !461)
!473 = !DILocation(line: 80, scope: !461)
!474 = !DILocation(line: 81, scope: !461)
!475 = !DILocation(line: 236, scope: !461)
!476 = !DILocation(line: 238, scope: !461)
!477 = !DILocation(line: 244, scope: !461)
!478 = !DILocation(line: 246, scope: !461)
!479 = !DILocation(line: 332, scope: !461)
!480 = !DILocation(line: 696, scope: !461)
!481 = !DILocation(line: 697, scope: !461)
!482 = !DILocation(line: 503, scope: !461)
!483 = !DILocation(line: 505, scope: !461)
!484 = !DILocation(line: 508, scope: !461)
!485 = !DILocation(line: 510, scope: !461)
!486 = !DILocation(line: 513, scope: !461)
!487 = !DILocation(line: 515, scope: !461)
!488 = !DILocation(line: 518, scope: !461)
!489 = !DILocation(line: 520, scope: !461)
!490 = !DILocation(line: 526, scope: !461)
!491 = !DILocation(line: 528, scope: !461)
!492 = !DILocation(line: 532, scope: !461)
!493 = !DILocation(line: 539, scope: !461)
!494 = !DILocation(line: 540, scope: !461)
!495 = !DILocation(line: 541, scope: !461)
!496 = !DILocation(line: 542, scope: !461)
!497 = !DILocation(line: 544, scope: !461)
!498 = !DILocation(line: 553, scope: !461)
!499 = !DILocation(line: 555, scope: !461)
!500 = !DILocation(line: 559, scope: !461)
!501 = !DILocation(line: 566, scope: !461)
!502 = !DILocation(line: 567, scope: !461)
!503 = !DILocation(line: 568, scope: !461)
!504 = !DILocation(line: 569, scope: !461)
!505 = !DILocation(line: 571, scope: !461)
!506 = !DILocation(line: 579, scope: !461)
!507 = !DILocation(line: 580, scope: !461)
!508 = !DILocation(line: 581, scope: !461)
!509 = !DILocation(line: 582, scope: !461)
!510 = !DILocation(line: 583, scope: !461)
!511 = !DILocation(line: 588, scope: !461)
!512 = !DILocation(line: 612, scope: !461)
!513 = !DILocation(line: 614, scope: !461)
!514 = !DILocation(line: 619, scope: !461)
!515 = !DILocation(line: 621, scope: !461)
!516 = !DILocation(line: 626, scope: !461)
!517 = !DILocation(line: 628, scope: !461)
!518 = !DILocation(line: 634, scope: !461)
!519 = !DILocation(line: 636, scope: !461)
!520 = !DILocation(line: 642, scope: !461)
!521 = !DILocation(line: 644, scope: !461)
!522 = !DILocation(line: 650, scope: !461)
!523 = !DILocation(line: 652, scope: !461)
!524 = !DILocation(line: 688, scope: !461)
!525 = !DILocation(line: 689, scope: !461)
!526 = !DILocation(line: 690, scope: !461)
!527 = !DILocation(line: 691, scope: !461)
!528 = !DILocation(line: 334, scope: !461)
!529 = !DILocation(line: 36, scope: !530)
!530 = !DILexicalBlockFile(scope: !37, file: !531, discriminator: 0)
!531 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OnceLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!532 = !DILocation(line: 37, scope: !530)
!533 = !DILocation(line: 38, scope: !530)
!534 = !DILocation(line: 41, scope: !530)
!535 = !DILocation(line: 42, scope: !530)
!536 = !DILocation(line: 45, scope: !530)
!537 = !DILocation(line: 52, scope: !530)
!538 = !DILocation(line: 53, scope: !530)
!539 = !DILocation(line: 59, scope: !530)
!540 = !DILocation(line: 60, scope: !530)
!541 = !DILocation(line: 62, scope: !530)
!542 = !DILocation(line: 63, scope: !530)
!543 = !DILocation(line: 79, scope: !530)
!544 = !DILocation(line: 85, scope: !530)
!545 = !DILocation(line: 88, scope: !530)
!546 = !DILocation(line: 91, scope: !530)
!547 = !DILocation(line: 97, scope: !530)
!548 = !DILocation(line: 103, scope: !530)
!549 = !DILocation(line: 50, scope: !550)
!550 = !DILexicalBlockFile(scope: !37, file: !551, discriminator: 0)
!551 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenEphemeralLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!552 = !DILocation(line: 53, scope: !550)
!553 = !DILocation(line: 54, scope: !550)
!554 = !DILocation(line: 57, scope: !550)
!555 = !DILocation(line: 58, scope: !550)
!556 = !DILocation(line: 59, scope: !550)
!557 = !DILocation(line: 66, scope: !550)
!558 = !DILocation(line: 68, scope: !550)
!559 = !DILocation(line: 75, scope: !550)
!560 = !DILocation(line: 76, scope: !550)
!561 = !DILocation(line: 77, scope: !550)
!562 = !DILocation(line: 82, scope: !550)
!563 = !DILocation(line: 87, scope: !550)
!564 = !DILocation(line: 88, scope: !550)
!565 = !DILocation(line: 91, scope: !550)
!566 = !DILocation(line: 92, scope: !550)
!567 = !DILocation(line: 95, scope: !550)
!568 = !DILocation(line: 96, scope: !550)
!569 = !DILocation(line: 98, scope: !550)
!570 = !DILocation(line: 103, scope: !550)
!571 = !DILocation(line: 105, scope: !550)
!572 = !DILocation(line: 112, scope: !550)
!573 = !DILocation(line: 119, scope: !550)
!574 = !DILocation(line: 128, scope: !550)
!575 = !DILocation(line: 129, scope: !550)
!576 = !DILocation(line: 130, scope: !550)
!577 = !DILocation(line: 131, scope: !550)
!578 = !DILocation(line: 135, scope: !550)
!579 = !DILocation(line: 136, scope: !550)
!580 = !DILocation(line: 139, scope: !550)
!581 = !DILocation(line: 141, scope: !550)
!582 = !DILocation(line: 149, scope: !550)
!583 = !DILocation(line: 155, scope: !550)
!584 = !DILocation(line: 157, scope: !550)
!585 = !DILocation(line: 161, scope: !550)
!586 = !DILocation(line: 162, scope: !550)
!587 = !DILocation(line: 167, scope: !550)
!588 = !DILocation(line: 169, scope: !550)
!589 = !DILocation(line: 177, scope: !550)
!590 = !DILocation(line: 178, scope: !550)
!591 = !DILocation(line: 180, scope: !550)
!592 = !DILocation(line: 184, scope: !550)
!593 = !DILocation(line: 185, scope: !550)
!594 = !DILocation(line: 186, scope: !550)
!595 = !DILocation(line: 187, scope: !550)
!596 = !DILocation(line: 197, scope: !550)
!597 = !DILocation(line: 198, scope: !550)
!598 = !DILocation(line: 201, scope: !550)
!599 = !DILocation(line: 204, scope: !550)
!600 = !DILocation(line: 211, scope: !550)
!601 = !DILocation(line: 213, scope: !550)
!602 = !DILocation(line: 218, scope: !550)
!603 = !DILocation(line: 219, scope: !550)
!604 = !DILocation(line: 224, scope: !550)
!605 = !DILocation(line: 230, scope: !550)
!606 = !DILocation(line: 232, scope: !550)
!607 = !DILocation(line: 237, scope: !550)
!608 = !DILocation(line: 238, scope: !550)
!609 = !DILocation(line: 239, scope: !550)
!610 = !DILocation(line: 246, scope: !550)
!611 = !DILocation(line: 248, scope: !550)
!612 = !DILocation(line: 254, scope: !550)
!613 = !DILocation(line: 255, scope: !550)
!614 = !DILocation(line: 257, scope: !550)
!615 = !DILocation(line: 263, scope: !550)
!616 = !DILocation(line: 266, scope: !550)
!617 = !DILocation(line: 267, scope: !550)
!618 = !DILocation(line: 268, scope: !550)
!619 = !DILocation(line: 275, scope: !550)
!620 = !DILocation(line: 278, scope: !550)
!621 = !DILocation(line: 279, scope: !550)
!622 = !DILocation(line: 281, scope: !550)
!623 = !DILocation(line: 293, scope: !550)
!624 = !DILocation(line: 294, scope: !550)
!625 = !DILocation(line: 295, scope: !550)
!626 = !DILocation(line: 296, scope: !550)
!627 = !DILocation(line: 297, scope: !550)
!628 = !DILocation(line: 299, scope: !550)
!629 = !DILocation(line: 305, scope: !550)
!630 = !DILocation(line: 311, scope: !550)
!631 = !DILocation(line: 312, scope: !550)
!632 = !DILocation(line: 313, scope: !550)
!633 = !DILocation(line: 319, scope: !550)
!634 = !DILocation(line: 39, scope: !635)
!635 = !DILexicalBlockFile(scope: !37, file: !636, discriminator: 0)
!636 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!637 = !DILocation(line: 40, scope: !635)
!638 = !DILocation(line: 43, scope: !635)
!639 = !DILocation(line: 44, scope: !635)
!640 = !DILocation(line: 47, scope: !635)
!641 = !DILocation(line: 48, scope: !635)
!642 = !DILocation(line: 51, scope: !635)
!643 = !DILocation(line: 52, scope: !635)
!644 = !DILocation(line: 53, scope: !635)
!645 = !DILocation(line: 68, scope: !635)
!646 = !DILocation(line: 73, scope: !635)
!647 = !DILocation(line: 74, scope: !635)
!648 = !DILocation(line: 77, scope: !635)
!649 = !DILocation(line: 82, scope: !635)
!650 = !DILocation(line: 83, scope: !635)
!651 = !DILocation(line: 84, scope: !635)
!652 = !DILocation(line: 86, scope: !635)
!653 = !DILocation(line: 92, scope: !635)
!654 = !DILocation(line: 93, scope: !635)
!655 = !DILocation(line: 94, scope: !635)
!656 = !DILocation(line: 96, scope: !635)
!657 = !DILocation(line: 102, scope: !635)
!658 = !DILocation(line: 103, scope: !635)
!659 = !DILocation(line: 104, scope: !635)
!660 = !DILocation(line: 106, scope: !635)
!661 = !DILocation(line: 120, scope: !635)
!662 = !DILocation(line: 128, scope: !635)
!663 = !DILocation(line: 129, scope: !635)
!664 = !DILocation(line: 135, scope: !635)
!665 = !DILocation(line: 140, scope: !635)
!666 = !DILocation(line: 141, scope: !635)
!667 = !DILocation(line: 144, scope: !635)
!668 = !DILocation(line: 149, scope: !635)
!669 = !DILocation(line: 150, scope: !635)
!670 = !DILocation(line: 151, scope: !635)
!671 = !DILocation(line: 152, scope: !635)
!672 = !DILocation(line: 154, scope: !635)
!673 = !DILocation(line: 159, scope: !635)
!674 = !DILocation(line: 160, scope: !635)
!675 = !DILocation(line: 161, scope: !635)
!676 = !DILocation(line: 162, scope: !635)
!677 = !DILocation(line: 164, scope: !635)
!678 = !DILocation(line: 167, scope: !635)
!679 = !DILocation(line: 48, scope: !680)
!680 = !DILexicalBlockFile(scope: !37, file: !681, discriminator: 0)
!681 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MakeRecordLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!682 = !DILocation(line: 54, scope: !680)
!683 = !DILocation(line: 55, scope: !680)
!684 = !DILocation(line: 58, scope: !680)
!685 = !DILocation(line: 59, scope: !680)
!686 = !DILocation(line: 62, scope: !680)
!687 = !DILocation(line: 63, scope: !680)
!688 = !DILocation(line: 66, scope: !680)
!689 = !DILocation(line: 72, scope: !680)
!690 = !DILocation(line: 73, scope: !680)
!691 = !DILocation(line: 74, scope: !680)
!692 = !DILocation(line: 80, scope: !680)
!693 = !DILocation(line: 87, scope: !680)
!694 = !DILocation(line: 94, scope: !680)
!695 = !DILocation(line: 145, scope: !680)
!696 = !DILocation(line: 146, scope: !680)
!697 = !DILocation(line: 148, scope: !680)
!698 = !DILocation(line: 149, scope: !680)
!699 = !DILocation(line: 150, scope: !680)
!700 = !DILocation(line: 151, scope: !680)
!701 = !DILocation(line: 162, scope: !680)
!702 = !DILocation(line: 171, scope: !680)
!703 = !DILocation(line: 172, scope: !680)
!704 = !DILocation(line: 177, scope: !680)
!705 = !DILocation(line: 179, scope: !680)
!706 = !DILocation(line: 185, scope: !680)
!707 = !DILocation(line: 187, scope: !680)
!708 = !DILocation(line: 193, scope: !680)
!709 = !DILocation(line: 195, scope: !680)
!710 = !DILocation(line: 199, scope: !680)
!711 = !DILocation(line: 205, scope: !680)
!712 = !DILocation(line: 206, scope: !680)
!713 = !DILocation(line: 207, scope: !680)
!714 = !DILocation(line: 209, scope: !680)
!715 = !DILocation(line: 211, scope: !680)
!716 = !DILocation(line: 218, scope: !680)
!717 = !DILocation(line: 224, scope: !680)
!718 = !DILocation(line: 225, scope: !680)
!719 = !DILocation(line: 227, scope: !680)
!720 = !DILocation(line: 232, scope: !680)
!721 = !DILocation(line: 234, scope: !680)
!722 = !DILocation(line: 239, scope: !680)
!723 = !DILocation(line: 241, scope: !680)
!724 = !DILocation(line: 242, scope: !680)
!725 = !DILocation(line: 243, scope: !680)
!726 = !DILocation(line: 244, scope: !680)
!727 = !DILocation(line: 245, scope: !680)
!728 = !DILocation(line: 261, scope: !680)
!729 = !DILocation(line: 271, scope: !680)
!730 = !DILocation(line: 272, scope: !680)
!731 = !DILocation(line: 276, scope: !680)
!732 = !DILocation(line: 282, scope: !680)
!733 = !DILocation(line: 283, scope: !680)
!734 = !DILocation(line: 284, scope: !680)
!735 = !DILocation(line: 286, scope: !680)
!736 = !DILocation(line: 292, scope: !680)
!737 = !DILocation(line: 295, scope: !680)
!738 = !DILocation(line: 297, scope: !680)
!739 = !DILocation(line: 0, scope: !680)
!740 = !DILocation(line: 306, scope: !680)
!741 = !DILocation(line: 311, scope: !680)
!742 = !DILocation(line: 312, scope: !680)
!743 = !DILocation(line: 314, scope: !680)
!744 = !DILocation(line: 318, scope: !680)
!745 = !DILocation(line: 323, scope: !680)
!746 = !DILocation(line: 324, scope: !680)
!747 = !DILocation(line: 326, scope: !680)
!748 = !DILocation(line: 330, scope: !680)
!749 = !DILocation(line: 335, scope: !680)
!750 = !DILocation(line: 336, scope: !680)
!751 = !DILocation(line: 338, scope: !680)
!752 = !DILocation(line: 355, scope: !680)
!753 = !DILocation(line: 361, scope: !680)
!754 = !DILocation(line: 362, scope: !680)
!755 = !DILocation(line: 368, scope: !680)
!756 = !DILocation(line: 369, scope: !680)
!757 = !DILocation(line: 370, scope: !680)
!758 = !DILocation(line: 371, scope: !680)
!759 = !DILocation(line: 373, scope: !680)
!760 = !DILocation(line: 377, scope: !680)
!761 = !DILocation(line: 378, scope: !680)
!762 = !DILocation(line: 391, scope: !680)
!763 = !DILocation(line: 396, scope: !680)
!764 = !DILocation(line: 397, scope: !680)
!765 = !DILocation(line: 398, scope: !680)
!766 = !DILocation(line: 400, scope: !680)
!767 = !DILocation(line: 406, scope: !680)
!768 = !DILocation(line: 407, scope: !680)
!769 = !DILocation(line: 408, scope: !680)
!770 = !DILocation(line: 409, scope: !680)
!771 = !DILocation(line: 412, scope: !680)
!772 = !DILocation(line: 413, scope: !680)
!773 = !DILocation(line: 414, scope: !680)
!774 = !DILocation(line: 415, scope: !680)
!775 = !DILocation(line: 416, scope: !680)
!776 = !DILocation(line: 417, scope: !680)
!777 = !DILocation(line: 418, scope: !680)
!778 = !DILocation(line: 419, scope: !680)
!779 = !DILocation(line: 421, scope: !680)
!780 = !DILocation(line: 427, scope: !680)
!781 = !DILocation(line: 428, scope: !680)
!782 = !DILocation(line: 434, scope: !680)
!783 = !DILocation(line: 436, scope: !680)
!784 = !DILocation(line: 438, scope: !680)
!785 = !DILocation(line: 440, scope: !680)
!786 = !DILocation(line: 442, scope: !680)
!787 = !DILocation(line: 448, scope: !680)
!788 = !DILocation(line: 449, scope: !680)
!789 = !DILocation(line: 468, scope: !680)
!790 = !DILocation(line: 469, scope: !680)
!791 = !DILocation(line: 470, scope: !680)
!792 = !DILocation(line: 454, scope: !680)
!793 = !DILocation(line: 461, scope: !680)
!794 = !DILocation(line: 463, scope: !680)
!795 = !DILocation(line: 479, scope: !680)
!796 = !DILocation(line: 480, scope: !680)
!797 = !DILocation(line: 481, scope: !680)
!798 = !DILocation(line: 484, scope: !680)
!799 = !DILocation(line: 485, scope: !680)
!800 = !DILocation(line: 486, scope: !680)
!801 = !DILocation(line: 487, scope: !680)
!802 = !DILocation(line: 490, scope: !680)
!803 = !DILocation(line: 492, scope: !680)
!804 = !DILocation(line: 500, scope: !680)
!805 = !DILocation(line: 506, scope: !680)
!806 = !DILocation(line: 508, scope: !680)
!807 = !DILocation(line: 509, scope: !680)
!808 = !DILocation(line: 510, scope: !680)
!809 = !DILocation(line: 516, scope: !680)
!810 = !DILocation(line: 520, scope: !680)
!811 = !DILocation(line: 521, scope: !680)
!812 = !DILocation(line: 527, scope: !680)
!813 = !DILocation(line: 530, scope: !680)
!814 = !DILocation(line: 535, scope: !680)
!815 = !DILocation(line: 536, scope: !680)
!816 = !DILocation(line: 537, scope: !680)
!817 = !DILocation(line: 541, scope: !680)
!818 = !DILocation(line: 542, scope: !680)
!819 = !DILocation(line: 550, scope: !680)
!820 = !DILocation(line: 551, scope: !680)
!821 = !DILocation(line: 554, scope: !680)
!822 = !DILocation(line: 555, scope: !680)
!823 = !DILocation(line: 556, scope: !680)
!824 = !DILocation(line: 557, scope: !680)
!825 = !DILocation(line: 558, scope: !680)
!826 = !DILocation(line: 559, scope: !680)
!827 = !DILocation(line: 566, scope: !680)
!828 = !DILocation(line: 571, scope: !680)
!829 = !DILocation(line: 572, scope: !680)
!830 = !DILocation(line: 573, scope: !680)
!831 = !DILocation(line: 575, scope: !680)
!832 = !DILocation(line: 603, scope: !680)
!833 = !DILocation(line: 604, scope: !680)
!834 = !DILocation(line: 619, scope: !680)
!835 = !DILocation(line: 625, scope: !680)
!836 = !DILocation(line: 626, scope: !680)
!837 = !DILocation(line: 627, scope: !680)
!838 = !DILocation(line: 630, scope: !680)
!839 = !DILocation(line: 631, scope: !680)
!840 = !DILocation(line: 638, scope: !680)
!841 = !DILocation(line: 639, scope: !680)
!842 = !DILocation(line: 641, scope: !680)
!843 = !DILocation(line: 646, scope: !680)
!844 = !DILocation(line: 647, scope: !680)
!845 = !DILocation(line: 648, scope: !680)
!846 = !DILocation(line: 649, scope: !680)
!847 = !DILocation(line: 652, scope: !680)
!848 = !DILocation(line: 653, scope: !680)
!849 = !DILocation(line: 654, scope: !680)
!850 = !DILocation(line: 656, scope: !680)
!851 = !DILocation(line: 662, scope: !680)
!852 = !DILocation(line: 663, scope: !680)
!853 = !DILocation(line: 664, scope: !680)
!854 = !DILocation(line: 667, scope: !680)
!855 = !DILocation(line: 668, scope: !680)
!856 = !DILocation(line: 671, scope: !680)
!857 = !DILocation(line: 673, scope: !680)
!858 = !DILocation(line: 677, scope: !680)
!859 = !DILocation(line: 678, scope: !680)
!860 = !DILocation(line: 679, scope: !680)
!861 = !DILocation(line: 684, scope: !680)
!862 = !DILocation(line: 687, scope: !680)
!863 = !DILocation(line: 688, scope: !680)
!864 = !DILocation(line: 689, scope: !680)
!865 = !DILocation(line: 693, scope: !680)
!866 = !DILocation(line: 694, scope: !680)
!867 = !DILocation(line: 695, scope: !680)
!868 = !DILocation(line: 698, scope: !680)
!869 = !DILocation(line: 699, scope: !680)
!870 = !DILocation(line: 701, scope: !680)
!871 = !DILocation(line: 707, scope: !680)
!872 = !DILocation(line: 40, scope: !873)
!873 = !DILexicalBlockFile(scope: !37, file: !874, discriminator: 0)
!874 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!875 = !DILocation(line: 41, scope: !873)
!876 = !DILocation(line: 43, scope: !873)
!877 = !DILocation(line: 51, scope: !873)
!878 = !DILocation(line: 24, scope: !873)
!879 = !DILocation(line: 57, scope: !873)
!880 = !DILocation(line: 58, scope: !873)
!881 = !DILocation(line: 61, scope: !873)
!882 = !DILocation(line: 62, scope: !873)
!883 = !DILocation(line: 63, scope: !873)
!884 = !DILocation(line: 64, scope: !873)
!885 = !DILocation(line: 65, scope: !873)
!886 = !DILocation(line: 68, scope: !873)
!887 = !DILocation(line: 69, scope: !873)
!888 = !DILocation(line: 70, scope: !873)
!889 = !DILocation(line: 71, scope: !873)
!890 = !DILocation(line: 74, scope: !873)
!891 = !DILocation(line: 76, scope: !873)
!892 = !DILocation(line: 79, scope: !873)
!893 = !DILocation(line: 81, scope: !873)
!894 = !DILocation(line: 84, scope: !873)
!895 = !DILocation(line: 85, scope: !873)
!896 = !DILocation(line: 89, scope: !873)
!897 = !DILocation(line: 92, scope: !873)
!898 = !DILocation(line: 101, scope: !873)
!899 = !DILocation(line: 102, scope: !873)
!900 = !DILocation(line: 107, scope: !873)
!901 = !DILocation(line: 42, scope: !902)
!902 = !DILexicalBlockFile(scope: !37, file: !903, discriminator: 0)
!903 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!904 = !DILocation(line: 43, scope: !902)
!905 = !DILocation(line: 46, scope: !902)
!906 = !DILocation(line: 65, scope: !902)
!907 = !DILocation(line: 71, scope: !902)
!908 = !DILocation(line: 75, scope: !902)
!909 = !DILocation(line: 80, scope: !902)
!910 = !DILocation(line: 83, scope: !902)
!911 = !DILocation(line: 84, scope: !902)
!912 = !DILocation(line: 87, scope: !902)
!913 = !DILocation(line: 93, scope: !902)
!914 = !DILocation(line: 99, scope: !902)
!915 = !DILocation(line: 101, scope: !902)
!916 = !DILocation(line: 114, scope: !902)
!917 = !DILocation(line: 116, scope: !902)
!918 = !DILocation(line: 33, scope: !919)
!919 = !DILexicalBlockFile(scope: !37, file: !920, discriminator: 0)
!920 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IsNullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!921 = !DILocation(line: 36, scope: !919)
!922 = !DILocation(line: 37, scope: !919)
!923 = !DILocation(line: 38, scope: !919)
!924 = !DILocation(line: 39, scope: !919)
!925 = !DILocation(line: 42, scope: !919)
!926 = !DILocation(line: 40, scope: !927)
!927 = !DILexicalBlockFile(scope: !37, file: !928, discriminator: 0)
!928 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!929 = !DILocation(line: 43, scope: !927)
!930 = !DILocation(line: 50, scope: !931)
!931 = !DILexicalBlockFile(scope: !37, file: !932, discriminator: 0)
!932 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekGELowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!933 = !DILocation(line: 52, scope: !931)
!934 = !DILocation(line: 53, scope: !931)
!935 = !DILocation(line: 56, scope: !931)
!936 = !DILocation(line: 57, scope: !931)
!937 = !DILocation(line: 60, scope: !931)
!938 = !DILocation(line: 61, scope: !931)
!939 = !DILocation(line: 63, scope: !931)
!940 = !DILocation(line: 64, scope: !931)
!941 = !DILocation(line: 68, scope: !931)
!942 = !DILocation(line: 69, scope: !931)
!943 = !DILocation(line: 72, scope: !931)
!944 = !DILocation(line: 73, scope: !931)
!945 = !DILocation(line: 76, scope: !931)
!946 = !DILocation(line: 77, scope: !931)
!947 = !DILocation(line: 80, scope: !931)
!948 = !DILocation(line: 81, scope: !931)
!949 = !DILocation(line: 84, scope: !931)
!950 = !DILocation(line: 85, scope: !931)
!951 = !DILocation(line: 92, scope: !931)
!952 = !DILocation(line: 94, scope: !931)
!953 = !DILocation(line: 99, scope: !931)
!954 = !DILocation(line: 102, scope: !931)
!955 = !DILocation(line: 103, scope: !931)
!956 = !DILocation(line: 105, scope: !931)
!957 = !DILocation(line: 106, scope: !931)
!958 = !DILocation(line: 114, scope: !931)
!959 = !DILocation(line: 119, scope: !931)
!960 = !DILocation(line: 42, scope: !961)
!961 = !DILexicalBlockFile(scope: !37, file: !962, discriminator: 0)
!962 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/ApplyNumericAffinity.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!963 = !DILocation(line: 121, scope: !931)
!964 = !DILocation(line: 126, scope: !931)
!965 = !DILocation(line: 129, scope: !931)
!966 = !DILocation(line: 132, scope: !931)
!967 = !DILocation(line: 134, scope: !931)
!968 = !DILocation(line: 135, scope: !931)
!969 = !DILocation(line: 141, scope: !931)
!970 = !DILocation(line: 145, scope: !931)
!971 = !DILocation(line: 146, scope: !931)
!972 = !DILocation(line: 153, scope: !931)
!973 = !DILocation(line: 164, scope: !931)
!974 = !DILocation(line: 185, scope: !931)
!975 = !DILocation(line: 186, scope: !931)
!976 = !DILocation(line: 187, scope: !931)
!977 = !DILocation(line: 193, scope: !931)
!978 = !DILocation(line: 194, scope: !931)
!979 = !DILocation(line: 198, scope: !931)
!980 = !DILocation(line: 199, scope: !931)
!981 = !DILocation(line: 201, scope: !931)
!982 = !DILocation(line: 207, scope: !931)
!983 = !DILocation(line: 211, scope: !931)
!984 = !DILocation(line: 212, scope: !931)
!985 = !DILocation(line: 214, scope: !931)
!986 = !DILocation(line: 226, scope: !931)
!987 = !DILocation(line: 227, scope: !931)
!988 = !DILocation(line: 231, scope: !931)
!989 = !DILocation(line: 232, scope: !931)
!990 = !DILocation(line: 239, scope: !931)
!991 = !DILocation(line: 240, scope: !931)
!992 = !DILocation(line: 244, scope: !931)
!993 = !DILocation(line: 245, scope: !931)
!994 = !DILocation(line: 247, scope: !931)
!995 = !DILocation(line: 264, scope: !931)
!996 = !DILocation(line: 265, scope: !931)
!997 = !DILocation(line: 273, scope: !931)
!998 = !DILocation(line: 274, scope: !931)
!999 = !DILocation(line: 281, scope: !931)
!1000 = !DILocation(line: 288, scope: !931)
!1001 = !DILocation(line: 289, scope: !931)
!1002 = !DILocation(line: 290, scope: !931)
!1003 = !DILocation(line: 291, scope: !931)
!1004 = !DILocation(line: 292, scope: !931)
!1005 = !DILocation(line: 299, scope: !931)
!1006 = !DILocation(line: 303, scope: !931)
!1007 = !DILocation(line: 305, scope: !931)
!1008 = !DILocation(line: 312, scope: !931)
!1009 = !DILocation(line: 315, scope: !931)
!1010 = !DILocation(line: 317, scope: !931)
!1011 = !DILocation(line: 318, scope: !931)
!1012 = !DILocation(line: 319, scope: !931)
!1013 = !DILocation(line: 323, scope: !931)
!1014 = !DILocation(line: 324, scope: !931)
!1015 = !DILocation(line: 327, scope: !931)
!1016 = !DILocation(line: 329, scope: !931)
!1017 = !DILocation(line: 332, scope: !931)
!1018 = !DILocation(line: 334, scope: !931)
!1019 = !DILocation(line: 335, scope: !931)
!1020 = !DILocation(line: 339, scope: !931)
!1021 = !DILocation(line: 340, scope: !931)
!1022 = !DILocation(line: 342, scope: !931)
!1023 = !DILocation(line: 356, scope: !931)
!1024 = !DILocation(line: 357, scope: !931)
!1025 = !DILocation(line: 358, scope: !931)
!1026 = !DILocation(line: 359, scope: !931)
!1027 = !DILocation(line: 360, scope: !931)
!1028 = !DILocation(line: 364, scope: !931)
!1029 = !DILocation(line: 371, scope: !931)
!1030 = !DILocation(line: 372, scope: !931)
!1031 = !DILocation(line: 373, scope: !931)
!1032 = !DILocation(line: 375, scope: !931)
!1033 = !DILocation(line: 377, scope: !931)
!1034 = !DILocation(line: 378, scope: !931)
!1035 = !DILocation(line: 379, scope: !931)
!1036 = !DILocation(line: 0, scope: !931)
!1037 = !DILocation(line: 386, scope: !931)
!1038 = !DILocation(line: 394, scope: !931)
!1039 = !DILocation(line: 397, scope: !931)
!1040 = !DILocation(line: 398, scope: !931)
!1041 = !DILocation(line: 408, scope: !931)
!1042 = !DILocation(line: 413, scope: !931)
!1043 = !DILocation(line: 415, scope: !931)
!1044 = !DILocation(line: 494, scope: !931)
!1045 = !DILocation(line: 495, scope: !931)
!1046 = !DILocation(line: 501, scope: !931)
!1047 = !DILocation(line: 504, scope: !931)
!1048 = !DILocation(line: 505, scope: !931)
!1049 = !DILocation(line: 507, scope: !931)
!1050 = !DILocation(line: 508, scope: !931)
!1051 = !DILocation(line: 44, scope: !1052)
!1052 = !DILexicalBlockFile(scope: !37, file: !1053, discriminator: 0)
!1053 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxCompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1054 = !DILocation(line: 45, scope: !1052)
!1055 = !DILocation(line: 47, scope: !1052)
!1056 = !DILocation(line: 48, scope: !1052)
!1057 = !DILocation(line: 49, scope: !1052)
!1058 = !DILocation(line: 52, scope: !1052)
!1059 = !DILocation(line: 54, scope: !1052)
!1060 = !DILocation(line: 55, scope: !1052)
!1061 = !DILocation(line: 56, scope: !1052)
!1062 = !DILocation(line: 60, scope: !1052)
!1063 = !DILocation(line: 61, scope: !1052)
!1064 = !DILocation(line: 63, scope: !1052)
!1065 = !DILocation(line: 66, scope: !1052)
!1066 = !DILocation(line: 73, scope: !1052)
!1067 = !DILocation(line: 75, scope: !1052)
!1068 = !DILocation(line: 76, scope: !1052)
!1069 = !DILocation(line: 81, scope: !1052)
!1070 = !DILocation(line: 82, scope: !1052)
!1071 = !DILocation(line: 91, scope: !1052)
!1072 = !DILocation(line: 103, scope: !1052)
!1073 = !DILocation(line: 107, scope: !1052)
!1074 = !DILocation(line: 108, scope: !1052)
!1075 = !DILocation(line: 109, scope: !1052)
!1076 = !DILocation(line: 41, scope: !1077)
!1077 = !DILexicalBlockFile(scope: !37, file: !1078, discriminator: 0)
!1078 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1079 = !DILocation(line: 43, scope: !1077)
!1080 = !DILocation(line: 44, scope: !1077)
!1081 = !DILocation(line: 45, scope: !1077)
!1082 = !DILocation(line: 47, scope: !1077)
!1083 = !DILocation(line: 49, scope: !1077)
!1084 = !DILocation(line: 50, scope: !1077)
!1085 = !DILocation(line: 51, scope: !1077)
!1086 = !DILocation(line: 58, scope: !1077)
!1087 = !DILocation(line: 60, scope: !1077)
!1088 = !DILocation(line: 65, scope: !1077)
!1089 = !DILocation(line: 66, scope: !1077)
!1090 = !DILocation(line: 69, scope: !1077)
!1091 = !DILocation(line: 72, scope: !1077)
!1092 = !DILocation(line: 73, scope: !1077)
!1093 = !DILocation(line: 74, scope: !1077)
!1094 = !DILocation(line: 75, scope: !1077)
!1095 = !DILocation(line: 81, scope: !1077)
!1096 = !DILocation(line: 85, scope: !1077)
!1097 = !DILocation(line: 86, scope: !1077)
!1098 = !DILocation(line: 87, scope: !1077)
!1099 = !DILocation(line: 88, scope: !1077)
!1100 = !DILocation(line: 90, scope: !1077)
!1101 = !DILocation(line: 95, scope: !1077)
!1102 = !DILocation(line: 96, scope: !1077)
!1103 = !DILocation(line: 97, scope: !1077)
!1104 = !DILocation(line: 98, scope: !1077)
!1105 = !DILocation(line: 100, scope: !1077)
!1106 = !DILocation(line: 106, scope: !1077)
!1107 = !DILocation(line: 107, scope: !1077)
!1108 = !DILocation(line: 110, scope: !1077)
!1109 = !DILocation(line: 111, scope: !1077)
!1110 = !DILocation(line: 114, scope: !1077)
!1111 = !DILocation(line: 117, scope: !1077)
!1112 = !DILocation(line: 118, scope: !1077)
!1113 = !DILocation(line: 125, scope: !1077)
!1114 = !DILocation(line: 128, scope: !1077)
!1115 = !DILocation(line: 129, scope: !1077)
!1116 = !DILocation(line: 132, scope: !1077)
!1117 = !DILocation(line: 133, scope: !1077)
!1118 = !DILocation(line: 136, scope: !1077)
!1119 = !DILocation(line: 137, scope: !1077)
!1120 = !DILocation(line: 140, scope: !1077)
!1121 = !DILocation(line: 141, scope: !1077)
!1122 = !DILocation(line: 144, scope: !1077)
!1123 = !DILocation(line: 145, scope: !1077)
!1124 = !DILocation(line: 146, scope: !1077)
!1125 = !DILocation(line: 155, scope: !1077)
!1126 = !DILocation(line: 157, scope: !1077)
!1127 = !DILocation(line: 165, scope: !1077)
!1128 = !DILocation(line: 166, scope: !1077)
!1129 = !DILocation(line: 178, scope: !1077)
!1130 = !DILocation(line: 183, scope: !1077)
!1131 = !DILocation(line: 184, scope: !1077)
!1132 = !DILocation(line: 35, scope: !1133)
!1133 = !DILexicalBlockFile(scope: !37, file: !1134, discriminator: 0)
!1134 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RealAffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1135 = !DILocation(line: 38, scope: !1133)
!1136 = !DILocation(line: 39, scope: !1133)
!1137 = !DILocation(line: 41, scope: !1133)
!1138 = !DILocation(line: 47, scope: !1133)
!1139 = !DILocation(line: 49, scope: !1133)
!1140 = !DILocation(line: 53, scope: !1133)
!1141 = !DILocation(line: 55, scope: !1133)
!1142 = !DILocation(line: 26, scope: !1143)
!1143 = !DILexicalBlockFile(scope: !37, file: !1144, discriminator: 0)
!1144 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1145 = !DILocation(line: 41, scope: !1143)
!1146 = !DILocation(line: 42, scope: !1143)
!1147 = !DILocation(line: 45, scope: !1143)
!1148 = !DILocation(line: 48, scope: !1143)
!1149 = !DILocation(line: 24, scope: !1143)
!1150 = !DILocation(line: 56, scope: !1143)
!1151 = !DILocation(line: 66, scope: !1143)
!1152 = !DILocation(line: 32, scope: !1153)
!1153 = !DILexicalBlockFile(scope: !37, file: !1154, discriminator: 0)
!1154 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenPseudoLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1155 = !DILocation(line: 41, scope: !1153)
!1156 = !DILocation(line: 46, scope: !1153)
!1157 = !DILocation(line: 47, scope: !1153)
!1158 = !DILocation(line: 49, scope: !1153)
!1159 = !DILocation(line: 50, scope: !1153)
!1160 = !DILocation(line: 52, scope: !1153)
!1161 = !DILocation(line: 53, scope: !1153)
!1162 = !DILocation(line: 55, scope: !1153)
!1163 = !DILocation(line: 56, scope: !1153)
!1164 = !DILocation(line: 57, scope: !1153)
!1165 = !DILocation(line: 36, scope: !1166)
!1166 = !DILexicalBlockFile(scope: !37, file: !1167, discriminator: 0)
!1167 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterDataLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1168 = !DILocation(line: 39, scope: !1166)
!1169 = !DILocation(line: 40, scope: !1166)
!1170 = !DILocation(line: 41, scope: !1166)
!1171 = !DILocation(line: 46, scope: !1166)
!1172 = !DILocation(line: 60, scope: !1166)
!1173 = !DILocation(line: 61, scope: !1166)
!1174 = !DILocation(line: 62, scope: !1166)
!1175 = !DILocation(line: 63, scope: !1166)
!1176 = !DILocation(line: 31, scope: !1177)
!1177 = !DILexicalBlockFile(scope: !37, file: !1178, discriminator: 0)
!1178 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1179 = !DILocation(line: 52, scope: !1177)
!1180 = !DILocation(line: 53, scope: !1177)
!1181 = !DILocation(line: 54, scope: !1177)
!1182 = !DILocation(line: 55, scope: !1177)
!1183 = !DILocation(line: 56, scope: !1177)
!1184 = !DILocation(line: 130, scope: !1177)
!1185 = !DILocation(line: 134, scope: !1177)
!1186 = !DILocation(line: 154, scope: !1177)
!1187 = !DILocation(line: 155, scope: !1177)
!1188 = !DILocation(line: 161, scope: !1177)
!1189 = !DILocation(line: 165, scope: !1177)
!1190 = !DILocation(line: 166, scope: !1177)
!1191 = !DILocation(line: 168, scope: !1177)
!1192 = !DILocation(line: 169, scope: !1177)
!1193 = !DILocation(line: 170, scope: !1177)
!1194 = !DILocation(line: 171, scope: !1177)
!1195 = !DILocation(line: 172, scope: !1177)
!1196 = !DILocation(line: 178, scope: !1177)
!1197 = !DILocation(line: 186, scope: !1177)
!1198 = !DILocation(line: 187, scope: !1177)
!1199 = !DILocation(line: 189, scope: !1177)
!1200 = !DILocation(line: 199, scope: !1177)
!1201 = !DILocation(line: 200, scope: !1177)
!1202 = !DILocation(line: 201, scope: !1177)
!1203 = !DILocation(line: 202, scope: !1177)
!1204 = !DILocation(line: 204, scope: !1177)
!1205 = !DILocation(line: 205, scope: !1177)
!1206 = !DILocation(line: 206, scope: !1177)
!1207 = !DILocation(line: 207, scope: !1177)
!1208 = !DILocation(line: 209, scope: !1177)
!1209 = !DILocation(line: 212, scope: !1177)
!1210 = !DILocation(line: 216, scope: !1177)
!1211 = !DILocation(line: 217, scope: !1177)
!1212 = !DILocation(line: 219, scope: !1177)
!1213 = !DILocation(line: 233, scope: !1177)
!1214 = !DILocation(line: 234, scope: !1177)
!1215 = !DILocation(line: 238, scope: !1177)
!1216 = !DILocation(line: 239, scope: !1177)
!1217 = !DILocation(line: 240, scope: !1177)
!1218 = !DILocation(line: 242, scope: !1177)
!1219 = !DILocation(line: 160, scope: !1177)
!1220 = !DILocation(line: 164, scope: !1177)
!1221 = !DILocation(line: 260, scope: !1177)
!1222 = !DILocation(line: 36, scope: !1223)
!1223 = !DILexicalBlockFile(scope: !37, file: !1224, discriminator: 0)
!1224 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/JumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1225 = !DILocation(line: 38, scope: !1223)
!1226 = !DILocation(line: 42, scope: !1223)
!1227 = !DILocation(line: 39, scope: !1223)
!1228 = !DILocation(line: 36, scope: !1229)
!1229 = !DILexicalBlockFile(scope: !37, file: !1230, discriminator: 0)
!1230 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MoveLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1231 = !DILocation(line: 37, scope: !1229)
!1232 = !DILocation(line: 39, scope: !1229)
!1233 = !DILocation(line: 43, scope: !1229)
!1234 = !DILocation(line: 44, scope: !1229)
!1235 = !DILocation(line: 34, scope: !1236)
!1236 = !DILexicalBlockFile(scope: !37, file: !1237, discriminator: 0)
!1237 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfPosLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1238 = !DILocation(line: 35, scope: !1236)
!1239 = !DILocation(line: 36, scope: !1236)
!1240 = !DILocation(line: 37, scope: !1236)
!1241 = !DILocation(line: 43, scope: !1236)
!1242 = !DILocation(line: 45, scope: !1236)
!1243 = !DILocation(line: 61, scope: !1236)
!1244 = !DILocation(line: 66, scope: !1245)
!1245 = !DILexicalBlockFile(scope: !37, file: !1246, discriminator: 0)
!1246 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ArithmeticLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1247 = !DILocation(line: 71, scope: !1245)
!1248 = !DILocation(line: 74, scope: !1245)
!1249 = !DILocation(line: 78, scope: !1245)
!1250 = !DILocation(line: 79, scope: !1245)
!1251 = !DILocation(line: 185, scope: !1245)
!1252 = !DILocation(line: 39, scope: !1253)
!1253 = !DILexicalBlockFile(scope: !37, file: !1254, discriminator: 0)
!1254 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/NumericType.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1255 = !DILocation(line: 43, scope: !1253)
!1256 = !DILocation(line: 45, scope: !1253)
!1257 = !DILocation(line: 56, scope: !1253)
!1258 = !DILocation(line: 61, scope: !1253)
!1259 = !DILocation(line: 67, scope: !1253)
!1260 = !DILocation(line: 83, scope: !1253)
!1261 = !DILocation(line: 88, scope: !1253)
!1262 = !DILocation(line: 94, scope: !1253)
!1263 = !DILocation(line: 98, scope: !1253)
!1264 = !DILocation(line: 106, scope: !1253)
!1265 = !DILocation(line: 188, scope: !1245)
!1266 = !DILocation(line: 193, scope: !1245)
!1267 = !DILocation(line: 197, scope: !1245)
!1268 = !DILocation(line: 200, scope: !1245)
!1269 = !DILocation(line: 203, scope: !1245)
!1270 = !DILocation(line: 204, scope: !1245)
!1271 = !DILocation(line: 205, scope: !1245)
!1272 = !DILocation(line: 214, scope: !1245)
!1273 = !DILocation(line: 222, scope: !1245)
!1274 = !DILocation(line: 223, scope: !1245)
!1275 = !DILocation(line: 224, scope: !1245)
!1276 = !DILocation(line: 227, scope: !1245)
!1277 = !DILocation(line: 228, scope: !1245)
!1278 = !DILocation(line: 229, scope: !1245)
!1279 = !DILocation(line: 230, scope: !1245)
!1280 = !DILocation(line: 231, scope: !1245)
!1281 = !DILocation(line: 247, scope: !1245)
!1282 = !DILocation(line: 250, scope: !1245)
!1283 = !DILocation(line: 251, scope: !1245)
!1284 = !DILocation(line: 346, scope: !1245)
!1285 = !DILocation(line: 347, scope: !1245)
!1286 = !DILocation(line: 348, scope: !1245)
!1287 = !DILocation(line: 349, scope: !1245)
!1288 = !DILocation(line: 39, scope: !1245)
!1289 = !DILocation(line: 354, scope: !1245)
!1290 = !DILocation(line: 358, scope: !1245)
!1291 = !DILocation(line: 359, scope: !1245)
!1292 = !DILocation(line: 360, scope: !1245)
!1293 = !DILocation(line: 370, scope: !1245)
!1294 = !DILocation(line: 373, scope: !1245)
!1295 = !DILocation(line: 384, scope: !1245)
!1296 = !DILocation(line: 445, scope: !1245)
!1297 = !DILocation(line: 446, scope: !1245)
!1298 = !DILocation(line: 448, scope: !1245)
!1299 = !DILocation(line: 453, scope: !1245)
!1300 = !DILocation(line: 454, scope: !1245)
!1301 = !DILocation(line: 455, scope: !1245)
!1302 = !DILocation(line: 460, scope: !1245)
!1303 = !DILocation(line: 476, scope: !1245)
!1304 = !DILocation(line: 469, scope: !1245)
!1305 = !DILocation(line: 25, scope: !1306)
!1306 = !DILexicalBlockFile(scope: !37, file: !1307, discriminator: 0)
!1307 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggStepLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1308 = !DILocation(line: 47, scope: !1306)
!1309 = !DILocation(line: 48, scope: !1306)
!1310 = !DILocation(line: 58, scope: !1306)
!1311 = !DILocation(line: 63, scope: !1306)
!1312 = !DILocation(line: 64, scope: !1306)
!1313 = !DILocation(line: 66, scope: !1306)
!1314 = !DILocation(line: 73, scope: !1306)
!1315 = !DILocation(line: 75, scope: !1306)
!1316 = !DILocation(line: 79, scope: !1306)
!1317 = !DILocation(line: 80, scope: !1306)
!1318 = !DILocation(line: 83, scope: !1306)
!1319 = !DILocation(line: 88, scope: !1306)
!1320 = !DILocation(line: 89, scope: !1306)
!1321 = !DILocation(line: 90, scope: !1306)
!1322 = !DILocation(line: 91, scope: !1306)
!1323 = !DILocation(line: 92, scope: !1306)
!1324 = !DILocation(line: 93, scope: !1306)
!1325 = !DILocation(line: 94, scope: !1306)
!1326 = !DILocation(line: 95, scope: !1306)
!1327 = !DILocation(line: 96, scope: !1306)
!1328 = !DILocation(line: 97, scope: !1306)
!1329 = !DILocation(line: 108, scope: !1306)
!1330 = !DILocation(line: 116, scope: !1306)
!1331 = !DILocation(line: 117, scope: !1306)
!1332 = !DILocation(line: 119, scope: !1306)
!1333 = !DILocation(line: 125, scope: !1306)
!1334 = !DILocation(line: 126, scope: !1306)
!1335 = !DILocation(line: 128, scope: !1306)
!1336 = !DILocation(line: 129, scope: !1306)
!1337 = !DILocation(line: 130, scope: !1306)
!1338 = !DILocation(line: 131, scope: !1306)
!1339 = !DILocation(line: 133, scope: !1306)
!1340 = !DILocation(line: 136, scope: !1306)
!1341 = !DILocation(line: 137, scope: !1306)
!1342 = !DILocation(line: 138, scope: !1306)
!1343 = !DILocation(line: 139, scope: !1306)
!1344 = !DILocation(line: 140, scope: !1306)
!1345 = !DILocation(line: 143, scope: !1306)
!1346 = !DILocation(line: 146, scope: !1306)
!1347 = !DILocation(line: 150, scope: !1306)
!1348 = !DILocation(line: 158, scope: !1306)
!1349 = !DILocation(line: 164, scope: !1306)
!1350 = !DILocation(line: 165, scope: !1306)
!1351 = !DILocation(line: 166, scope: !1306)
!1352 = !DILocation(line: 167, scope: !1306)
!1353 = !DILocation(line: 171, scope: !1306)
!1354 = !DILocation(line: 172, scope: !1306)
!1355 = !DILocation(line: 173, scope: !1306)
!1356 = !DILocation(line: 174, scope: !1306)
!1357 = !DILocation(line: 175, scope: !1306)
!1358 = !DILocation(line: 178, scope: !1306)
!1359 = !DILocation(line: 182, scope: !1306)
!1360 = !DILocation(line: 187, scope: !1306)
!1361 = !DILocation(line: 188, scope: !1306)
!1362 = !DILocation(line: 189, scope: !1306)
!1363 = !DILocation(line: 194, scope: !1306)
!1364 = !DILocation(line: 198, scope: !1306)
!1365 = !DILocation(line: 199, scope: !1306)
!1366 = !DILocation(line: 200, scope: !1306)
!1367 = !DILocation(line: 201, scope: !1306)
!1368 = !DILocation(line: 202, scope: !1306)
!1369 = !DILocation(line: 203, scope: !1306)
!1370 = !DILocation(line: 210, scope: !1306)
!1371 = !DILocation(line: 231, scope: !1306)
!1372 = !DILocation(line: 233, scope: !1306)
!1373 = !DILocation(line: 234, scope: !1306)
!1374 = !DILocation(line: 239, scope: !1306)
!1375 = !DILocation(line: 242, scope: !1306)
!1376 = !DILocation(line: 243, scope: !1306)
!1377 = !DILocation(line: 246, scope: !1306)
!1378 = !DILocation(line: 216, scope: !1306)
!1379 = !DILocation(line: 219, scope: !1306)
!1380 = !DILocation(line: 221, scope: !1306)
!1381 = !DILocation(line: 256, scope: !1306)
!1382 = !DILocation(line: 258, scope: !1306)
!1383 = !DILocation(line: 259, scope: !1306)
!1384 = !DILocation(line: 260, scope: !1306)
!1385 = !DILocation(line: 263, scope: !1306)
!1386 = !DILocation(line: 270, scope: !1306)
!1387 = !DILocation(line: 271, scope: !1306)
!1388 = !DILocation(line: 277, scope: !1306)
!1389 = !DILocation(line: 278, scope: !1306)
!1390 = !DILocation(line: 279, scope: !1306)
!1391 = !DILocation(line: 282, scope: !1306)
!1392 = !DILocation(line: 283, scope: !1306)
!1393 = !DILocation(line: 289, scope: !1306)
!1394 = !DILocation(line: 293, scope: !1306)
!1395 = !DILocation(line: 297, scope: !1306)
!1396 = !DILocation(line: 302, scope: !1306)
!1397 = !DILocation(line: 303, scope: !1306)
!1398 = !DILocation(line: 305, scope: !1306)
!1399 = !DILocation(line: 311, scope: !1306)
!1400 = !DILocation(line: 312, scope: !1306)
!1401 = !DILocation(line: 314, scope: !1306)
!1402 = !DILocation(line: 319, scope: !1306)
!1403 = !DILocation(line: 320, scope: !1306)
!1404 = !DILocation(line: 325, scope: !1306)
!1405 = !DILocation(line: 336, scope: !1306)
!1406 = !DILocation(line: 342, scope: !1306)
!1407 = !DILocation(line: 341, scope: !1306)
!1408 = !DILocation(line: 350, scope: !1306)
!1409 = !DILocation(line: 352, scope: !1306)
!1410 = !DILocation(line: 358, scope: !1306)
!1411 = !DILocation(line: 359, scope: !1306)
!1412 = !DILocation(line: 362, scope: !1306)
!1413 = !DILocation(line: 363, scope: !1306)
!1414 = !DILocation(line: 366, scope: !1306)
!1415 = !DILocation(line: 369, scope: !1306)
!1416 = !DILocation(line: 374, scope: !1306)
!1417 = !DILocation(line: 382, scope: !1306)
!1418 = !DILocation(line: 34, scope: !1419)
!1419 = !DILexicalBlockFile(scope: !37, file: !1420, discriminator: 0)
!1420 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1421 = !DILocation(line: 35, scope: !1419)
!1422 = !DILocation(line: 40, scope: !1419)
!1423 = !DILocation(line: 41, scope: !1419)
!1424 = !DILocation(line: 36, scope: !1425)
!1425 = !DILexicalBlockFile(scope: !37, file: !1426, discriminator: 0)
!1426 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterNextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1427 = !DILocation(line: 37, scope: !1425)
!1428 = !DILocation(line: 43, scope: !1425)
!1429 = !DILocation(line: 46, scope: !1425)
!1430 = !DILocation(line: 47, scope: !1425)
!1431 = !DILocation(line: 49, scope: !1425)
!1432 = !DILocation(line: 55, scope: !1425)
!1433 = !DILocation(line: 56, scope: !1425)
!1434 = !DILocation(line: 60, scope: !1425)
!1435 = !DILocation(line: 62, scope: !1425)
!1436 = !DILocation(line: 75, scope: !1425)
!1437 = !DILocation(line: 85, scope: !1425)
!1438 = !DILocation(line: 31, scope: !1439)
!1439 = !DILexicalBlockFile(scope: !37, file: !1440, discriminator: 0)
!1440 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ReturnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1441 = !DILocation(line: 33, scope: !1439)
!1442 = !DILocation(line: 35, scope: !1439)
!1443 = !DILocation(line: 37, scope: !1439)
!1444 = !DILocation(line: 39, scope: !1439)
!1445 = !DILocation(line: 41, scope: !1439)
!1446 = !DILocation(line: 45, scope: !1439)
!1447 = !DILocation(line: 48, scope: !1439)
!1448 = !DILocation(line: 31, scope: !1449)
!1449 = !DILexicalBlockFile(scope: !37, file: !1450, discriminator: 0)
!1450 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggFinalLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1451 = !DILocation(line: 32, scope: !1449)
!1452 = !DILocation(line: 33, scope: !1449)
!1453 = !DILocation(line: 34, scope: !1449)
!1454 = !DILocation(line: 39, scope: !1449)
!1455 = !DILocation(line: 45, scope: !1449)
!1456 = !DILocation(line: 47, scope: !1449)
!1457 = !DILocation(line: 48, scope: !1449)
!1458 = !DILocation(line: 49, scope: !1449)
!1459 = !DILocation(line: 56, scope: !1449)
!1460 = !DILocation(line: 59, scope: !1449)
!1461 = !DILocation(line: 67, scope: !1449)
!1462 = !DILocation(line: 40, scope: !1463)
!1463 = !DILexicalBlockFile(scope: !37, file: !1464, discriminator: 0)
!1464 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1465 = !DILocation(line: 41, scope: !1463)
!1466 = !DILocation(line: 43, scope: !1463)
!1467 = !DILocation(line: 23, scope: !1468)
!1468 = !DILexicalBlockFile(scope: !37, file: !1469, discriminator: 0)
!1469 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ResultRowLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1470 = !DILocation(line: 28, scope: !1468)
!1471 = !DILocation(line: 52, scope: !1468)
!1472 = !DILocation(line: 56, scope: !1468)
!1473 = !DILocation(line: 62, scope: !1468)
!1474 = !DILocation(line: 63, scope: !1468)
!1475 = !DILocation(line: 64, scope: !1468)
!1476 = !DILocation(line: 65, scope: !1468)
!1477 = !DILocation(line: 71, scope: !1468)
!1478 = !DILocation(line: 75, scope: !1468)
!1479 = !DILocation(line: 76, scope: !1468)
!1480 = !DILocation(line: 80, scope: !1468)
!1481 = !DILocation(line: 82, scope: !1468)
!1482 = !DILocation(line: 83, scope: !1468)
!1483 = !DILocation(line: 84, scope: !1468)
!1484 = !DILocation(line: 85, scope: !1468)
!1485 = !DILocation(line: 91, scope: !1468)
!1486 = !DILocation(line: 95, scope: !1468)
!1487 = !DILocation(line: 99, scope: !1468)
!1488 = !DILocation(line: 106, scope: !1468)
!1489 = !DILocation(line: 111, scope: !1468)
!1490 = !DILocation(line: 112, scope: !1468)
!1491 = !DILocation(line: 113, scope: !1468)
!1492 = !DILocation(line: 121, scope: !1468)
!1493 = !DILocation(line: 127, scope: !1468)
!1494 = !DILocation(line: 128, scope: !1468)
!1495 = !DILocation(line: 26, scope: !1496)
!1496 = !DILexicalBlockFile(scope: !37, file: !1497, discriminator: 0)
!1497 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/HaltLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1498 = !DILocation(line: 29, scope: !1496)
!1499 = !DILocation(line: 25, scope: !1500)
!1500 = !DILexicalBlockFile(scope: !37, file: !1501, discriminator: 0)
!1501 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/TransactionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1502 = !DILocation(line: 48, scope: !1500)
!1503 = !DILocation(line: 52, scope: !1500)
!1504 = !DILocation(line: 53, scope: !1500)
!1505 = !DILocation(line: 54, scope: !1500)
!1506 = !DILocation(line: 55, scope: !1500)
!1507 = !DILocation(line: 57, scope: !1500)
!1508 = !DILocation(line: 58, scope: !1500)
!1509 = !DILocation(line: 60, scope: !1500)
!1510 = !DILocation(line: 65, scope: !1500)
!1511 = !DILocation(line: 69, scope: !1500)
!1512 = !DILocation(line: 71, scope: !1500)
!1513 = !DILocation(line: 143, scope: !1500)
!1514 = !DILocation(line: 152, scope: !1500)
!1515 = !DILocation(line: 153, scope: !1500)
!1516 = !DILocation(line: 156, scope: !1500)
!1517 = !DILocation(line: 157, scope: !1500)
!1518 = !DILocation(line: 158, scope: !1500)
!1519 = !DILocation(line: 159, scope: !1500)
!1520 = !DILocation(line: 161, scope: !1500)
!1521 = !DILocation(line: 162, scope: !1500)
!1522 = !DILocation(line: 181, scope: !1500)
!1523 = !DILocation(line: 189, scope: !1500)
!1524 = !DILocation(line: 42, scope: !1525)
!1525 = !DILexicalBlockFile(scope: !37, file: !1526, discriminator: 0)
!1526 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/StringLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1527 = !DILocation(line: 43, scope: !1525)
!1528 = !DILocation(line: 48, scope: !1525)
!1529 = !DILocation(line: 49, scope: !1525)
!1530 = !DILocation(line: 50, scope: !1525)
!1531 = !DILocation(line: 51, scope: !1525)
!1532 = !DILocation(line: 52, scope: !1525)
!1533 = !DILocation(line: 55, scope: !1525)
!1534 = !DILocation(line: 56, scope: !1525)
!1535 = !DILocation(line: 57, scope: !1525)
!1536 = !DILocation(line: 58, scope: !1525)
!1537 = !DILocation(line: 59, scope: !1525)
!1538 = !DILocation(line: 60, scope: !1525)
