; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%struct.sqlite3StatType = type { [10 x i64], [10 x i64] }
%struct.Sqlite3Config = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.sqlite3_mem_methods, %struct.sqlite3_mutex_methods, %struct.sqlite3_pcache_methods2, i8*, i32, i32, i32, i64, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sqlite3_mutex*, void (i8*, i32, i8*)*, i8*, i32 (i32)*, i32, i32, i32, i32 }
%struct.sqlite3_mem_methods = type { i8* (i32)*, void (i8*)*, i8* (i8*, i32)*, i32 (i8*)*, i32 (i32)*, i32 (i8*)*, void (i8*)*, i8* }
%struct.sqlite3_mutex_methods = type { i32 ()*, i32 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)* }
%struct.sqlite3_pcache_methods2 = type { i32, i8*, i32 (i8*)*, void (i8*)*, %struct.sqlite3_pcache* (i32, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, i32 (%struct.sqlite3_pcache*)*, %struct.sqlite3_pcache_page* (%struct.sqlite3_pcache*, i32, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, void (%struct.sqlite3_pcache*)*, void (%struct.sqlite3_pcache*)* }
%struct.sqlite3_pcache = type opaque
%struct.sqlite3_pcache_page = type { i8*, i8* }
%struct.sqlite3_mutex = type { %struct._opaque_pthread_mutex_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.anon.9 = type { i8, i8, i8*, double, double }
%struct.sqlite3_vfs = type { i32, i32, i32, %struct.sqlite3_vfs*, i8*, i8*, i32 (%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)*, void (%struct.sqlite3_vfs*, i32, i8*)*, void ()* (%struct.sqlite3_vfs*, i8*, i8*)*, void (%struct.sqlite3_vfs*, i8*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*, double*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i64*)*, i32 (%struct.sqlite3_vfs*, i8*, void ()*)*, void ()* (%struct.sqlite3_vfs*, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)* }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%struct.BenignMallocHooks = type { void ()*, void ()* }
%struct.Mem0Global = type { %struct.sqlite3_mutex*, i64, i64, i32 }
%struct.et_info = type { i8, i8, i8, i8, i8, i8 }
%struct.sqlite3_str = type { %struct.sqlite3*, i8*, i32, i32, i32, i8, i8 }
%struct.sqlite3 = type { %struct.sqlite3_vfs*, %struct.Vdbe*, %struct.CollSeq*, %struct.sqlite3_mutex*, %struct.Db*, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [12 x i32], i32, %struct.sqlite3InitInfo, i32, i32, i32, i32, i32, i32, i8**, i32 (i32, i8*, i8*, i8*)*, i8*, void (i8*, i8*, i64)*, i8*, i8*, i32 (i8*)*, i8*, void (i8*)*, i8*, void (i8*, i32, i8*, i8*, i64)*, %struct.Parse*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*, void (i8*, %struct.sqlite3*, i32, i8*)*, i8*, %struct.sqlite3_value*, %union.anon.8, %struct.Lookaside, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*, i32 (i8*)*, i8*, i32, %struct.Hash, %struct.Hash, %struct.BusyHandler, [2 x %struct.Db], %struct.Savepoint*, i32, i32, i32, i64, i64, i32* }
%struct.Vdbe = type <{ %struct.sqlite3*, %struct.Vdbe*, %struct.Vdbe*, %struct.Parse*, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i64, i64, %struct.sqlite3_value*, %struct.sqlite3_value**, %struct.VdbeCursor**, %struct.sqlite3_value*, %struct.VdbeOp*, i32, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, i8*, i32*, i16, i8, i8, i8, i16, i8, i32, i32, [7 x i32], [4 x i8], i8*, i8*, %struct.VdbeFrame*, %struct.VdbeFrame*, i32, i32, %struct.SubProgram*, %struct.AuxData* }>
%struct.VdbeCursor = type { i8, i8, i8, i8, i8, i8, %struct.Btree*, i64, i32*, i32, i32, %struct.VdbeCursor*, %union.anon.7, %struct.KeyInfo*, i32, i32, i16, i16, i64, i32*, i8*, i32, i32, [1 x i32] }
%struct.Btree = type { %struct.sqlite3*, %struct.BtShared*, i8, i8, i8, i8, i32, i32, i32, %struct.Btree*, %struct.Btree*, %struct.BtLock }
%struct.BtShared = type { %struct.Pager*, %struct.sqlite3*, %struct.BtCursor*, %struct.MemPage*, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i32, i32, i32, i32, i8*, void (i8*)*, %struct.sqlite3_mutex*, %struct.Bitvec*, i32, %struct.BtShared*, %struct.BtLock*, %struct.Btree*, i8* }
%struct.Pager = type { %struct.sqlite3_vfs*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Bitvec*, %struct.sqlite3_file*, %struct.sqlite3_file*, %struct.sqlite3_file*, i64, i64, %struct.sqlite3_backup*, %struct.PagerSavepoint*, i32, i32, [16 x i8], i32, i64, %struct.PgHdr*, i16, i16, i32, i32, i32, i32, i64, i8*, i8*, i32 (i8*)*, i8*, [4 x i32], void (%struct.PgHdr*)*, i32 (%struct.Pager*, i32, %struct.PgHdr**, i32)*, i8*, %struct.PCache*, %struct.Wal*, i8* }
%struct.sqlite3_backup = type { %struct.sqlite3*, %struct.Btree*, i32, i32, i32, %struct.sqlite3*, %struct.Btree*, i32, i32, i32, i32, %struct.sqlite3_backup* }
%struct.PagerSavepoint = type { i64, i64, %struct.Bitvec*, i32, i32, [4 x i32] }
%struct.PgHdr = type { %struct.sqlite3_pcache_page*, i8*, i8*, %struct.PCache*, %struct.PgHdr*, %struct.Pager*, i32, i16, i16, %struct.PgHdr*, %struct.PgHdr* }
%struct.PCache = type { %struct.PgHdr*, %struct.PgHdr*, %struct.PgHdr*, i32, i32, i32, i32, i32, i8, i8, i32 (i8*, %struct.PgHdr*)*, i8*, %struct.sqlite3_pcache* }
%struct.Wal = type { %struct.sqlite3_vfs*, %struct.sqlite3_file*, %struct.sqlite3_file*, i32, i64, i32, i32, i32**, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.WalIndexHdr, i32, i32, i8*, i32 }
%struct.WalIndexHdr = type { i32, i32, i32, i8, i8, i16, i32, i32, [2 x i32], [2 x i32], [2 x i32] }
%struct.BtCursor = type { i8, i8, i8, i8, i32, %struct.Btree*, i32*, i8*, %struct.BtShared*, %struct.BtCursor*, %struct.CellInfo, i64, i32, i8, i8, i16, [19 x i16], %struct.KeyInfo*, %struct.MemPage*, [19 x %struct.MemPage*] }
%struct.CellInfo = type { i64, i8*, i32, i16, i16 }
%struct.MemPage = type { i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i32, i16, i16, [4 x i16], [4 x i8*], %struct.BtShared*, i8*, i8*, i8*, i8*, %struct.PgHdr*, i16 (%struct.MemPage*, i8*)*, void (%struct.MemPage*, i8*, %struct.CellInfo*)* }
%struct.Bitvec = type { i32, i32, i32, %union.anon.10 }
%union.anon.10 = type { [62 x %struct.Bitvec*] }
%struct.BtLock = type { %struct.Btree*, i32, i8, %struct.BtLock* }
%union.anon.7 = type { %struct.BtCursor* }
%struct.KeyInfo = type { i32, i8, i16, i16, %struct.sqlite3*, i8*, [1 x %struct.CollSeq*] }
%struct.VdbeOp = type { i8, i8, i16, i32, i32, i32, %union.p4union }
%union.p4union = type { i8* }
%struct.VdbeFrame = type { %struct.Vdbe*, %struct.VdbeFrame*, %struct.VdbeOp*, i64*, %struct.sqlite3_value*, %struct.VdbeCursor**, i8*, i8*, i64, %struct.AuxData*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SubProgram = type { %struct.VdbeOp*, i32, i32, i32, i8*, i8*, %struct.SubProgram* }
%struct.AuxData = type { i32, i32, i8*, void (i8*)*, %struct.AuxData* }
%struct.CollSeq = type { i8*, i8, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)* }
%struct.Db = type { i8*, %struct.Btree*, i8, i8, %struct.Schema* }
%struct.Schema = type { i32, i32, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Table*, i8, i8, i16, i32 }
%struct.Table = type { i8*, %struct.Column*, %struct.Index*, %struct.Select*, %struct.FKey*, i8*, %struct.ExprList*, i32, i32, i32, i16, i16, i16, i16, i16, i8, i32, %struct.Trigger*, %struct.Schema*, %struct.Table* }
%struct.Column = type { i8*, %struct.Expr*, i8*, i8, i8, i8, i16 }
%struct.Expr = type { i8, i8, i8, i32, %union.anon, %struct.Expr*, %struct.Expr*, %union.anon.0, i32, i32, i16, i16, i16, %struct.AggInfo*, %union.anon.3 }
%union.anon = type { i8* }
%union.anon.0 = type { %struct.ExprList* }
%struct.AggInfo = type { i8, i8, i32, i32, i32, i32, i32, %struct.ExprList*, %struct.AggInfo_col*, i32, i32, %struct.AggInfo_func*, i32 }
%struct.AggInfo_col = type { %struct.Table*, i32, i32, i32, i32, %struct.Expr* }
%struct.AggInfo_func = type { %struct.Expr*, %struct.FuncDef*, i32, i32 }
%struct.FuncDef = type { i8, i32, i8*, %struct.FuncDef*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, i8*, %union.anon.2 }
%struct.sqlite3_context = type { %struct.sqlite3_value*, %struct.FuncDef*, %struct.sqlite3_value*, %struct.Vdbe*, i32, i32, i8, i8, [1 x %struct.sqlite3_value*] }
%union.anon.2 = type { %struct.FuncDef* }
%union.anon.3 = type { %struct.Table* }
%struct.Index = type <{ i8*, i16*, i16*, %struct.Table*, i8*, %struct.Index*, %struct.Schema*, i8*, i8**, %struct.Expr*, %struct.ExprList*, i32, i16, i16, i16, i8, i16, [3 x i8], i64 }>
%struct.Select = type { i8, i16, i32, i32, i32, i32, [2 x i32], %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Select*, %struct.Select*, %struct.Expr*, %struct.With*, %struct.Window*, %struct.Window* }
%struct.SrcList = type { i32, i32, [1 x %struct.SrcList_item] }
%struct.SrcList_item = type { %struct.Schema*, i8*, i8*, i8*, %struct.Table*, %struct.Select*, i32, i32, i32, %struct.anon, i32, %struct.Expr*, %struct.IdList*, i64, %union.anon.1, %struct.Index* }
%struct.anon = type { i8, i8, [2 x i8] }
%struct.IdList = type { %struct.IdList_item*, i32 }
%struct.IdList_item = type { i8*, i32 }
%union.anon.1 = type { i8* }
%struct.With = type { i32, %struct.With*, [1 x %struct.Cte] }
%struct.Cte = type { i8*, %struct.ExprList*, %struct.Select*, i8* }
%struct.Window = type { i8*, i8*, %struct.ExprList*, %struct.ExprList*, i8, i8, i8, i8, i8, %struct.Expr*, %struct.Expr*, %struct.Window**, %struct.Window*, %struct.Expr*, %struct.FuncDef*, i32, i32, i32, i32, i32, i32, %struct.Expr*, i32, i32, i32, i32, i32, i8 }
%struct.FKey = type { %struct.Table*, %struct.FKey*, i8*, %struct.FKey*, %struct.FKey*, i32, i8, [2 x i8], [2 x %struct.Trigger*], [1 x %struct.sColMap] }
%struct.sColMap = type { i32, i8* }
%struct.ExprList = type { i32, [1 x %struct.ExprList_item] }
%struct.ExprList_item = type { %struct.Expr*, i8*, i8, i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.Trigger = type { i8*, i8*, i8, i8, %struct.Expr*, %struct.IdList*, %struct.Schema*, %struct.Schema*, %struct.TriggerStep*, %struct.Trigger* }
%struct.TriggerStep = type { i8, i8, %struct.Trigger*, %struct.Select*, i8*, %struct.Expr*, %struct.ExprList*, %struct.IdList*, %struct.Upsert*, i8*, %struct.TriggerStep*, %struct.TriggerStep* }
%struct.Upsert = type { %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.Index*, %struct.SrcList*, i32, i32, i32 }
%struct.sqlite3InitInfo = type { i32, i8, i8, i8, i8** }
%struct.Parse = type { %struct.sqlite3*, i8*, %struct.Vdbe*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.ExprList*, %struct.Token, i32, i32, i32, i32, i32, i32, i32, %struct.TableLock*, %struct.AutoincInfo*, %struct.Parse*, %struct.Table*, %struct.Parse*, i32, i32, i32, i32, i8, i8, i8, [8 x i32], %struct.Token, %struct.Token, i16, i8, i8, i8, i32, i32, i32*, %struct.Vdbe*, i8*, %struct.Table*, %struct.Index*, %struct.Trigger*, i8*, %struct.Table*, %struct.TriggerPrg*, %struct.With*, %struct.With*, %struct.RenameToken* }
%struct.TableLock = type { i32, i32, i8, i8* }
%struct.AutoincInfo = type { %struct.AutoincInfo*, %struct.Table*, i32, i32 }
%struct.Token = type { i8*, i32 }
%struct.TriggerPrg = type { %struct.Trigger*, %struct.TriggerPrg*, %struct.SubProgram*, i32, [2 x i32] }
%struct.RenameToken = type { i8*, %struct.Token, %struct.RenameToken* }
%struct.sqlite3_value = type { %union.MemValue, i16, i8, i8, i32, i8*, i8*, i32, i32, %struct.sqlite3*, void (i8*)* }
%union.MemValue = type { double }
%union.anon.8 = type { double }
%struct.Lookaside = type { i32, i16, i16, i8, i32, [3 x i32], %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, i8*, i8*, i8* }
%struct.LookasideSlot = type { %struct.LookasideSlot* }
%struct.Hash = type { i32, i32, %struct.HashElem*, %struct._ht* }
%struct.HashElem = type { %struct.HashElem*, %struct.HashElem*, i8*, i8* }
%struct._ht = type { i32, %struct.HashElem* }
%struct.BusyHandler = type { i32 (i8*, i32)*, i8*, i32, i8 }
%struct.Savepoint = type { i8*, i64, i64, %struct.Savepoint* }
%struct.sqlite3PrngType = type { i8, i8, i8, [256 x i8] }
%struct.unix_syscall = type { i8*, void ()*, void ()* }
%struct.unixInodeInfo = type { %struct.unixFileId, %struct.sqlite3_mutex*, i32, i32, i8, i8, %struct.UnixUnusedFd*, i32, %struct.unixShmNode*, %struct.unixInodeInfo*, %struct.unixInodeInfo*, i64 }
%struct.unixFileId = type { i32, i64 }
%struct.UnixUnusedFd = type { i32, i32, %struct.UnixUnusedFd* }
%struct.unixShmNode = type { %struct.unixInodeInfo*, %struct.sqlite3_mutex*, i8*, i32, i32, i16, i8, i8, i8**, i32, %struct.unixShm* }
%struct.unixShm = type { %struct.unixShmNode*, %struct.unixShm*, i8, i8, i16, i16 }
%struct.unixFile = type { %struct.sqlite3_io_methods*, %struct.sqlite3_vfs*, %struct.unixInodeInfo*, i32, i8, i16, i32, i8*, %struct.UnixUnusedFd*, i8*, %struct.unixShm*, i32, i32, i64, i64, i64, i8*, i32, i32, i32, i32 }
%struct.Mapping = type { i8*, %struct.sqlite3_io_methods* }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.PCacheGlobal = type { %struct.PGroup, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.sqlite3_mutex*, %struct.PgFreeslot*, i32, i32 }
%struct.PGroup = type { %struct.sqlite3_mutex*, i32, i32, i32, i32, %struct.PgHdr1 }
%struct.PgHdr1 = type { %struct.sqlite3_pcache_page, i32, i16, i16, %struct.PgHdr1*, %struct.PCache1*, %struct.PgHdr1*, %struct.PgHdr1* }
%struct.PCache1 = type { %struct.PGroup*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PgHdr1**, %struct.PgHdr1*, i8* }
%struct.PgFreeslot = type { %struct.PgFreeslot* }
%struct.compareInfo = type { i8, i8, i8, i8 }
%struct.sqlite3AutoExtList = type { i32, void ()** }
%struct.PragmaName = type { i8*, i8, i8, i8, i8, i64 }
%struct.SelectDest = type { i8, i32, i32, i32, i8*, %struct.ExprList* }
%struct.FuncDefHash = type { [23 x %struct.FuncDef*] }
%struct.anon.22 = type { i32, i32 }
%struct._malloc_zone_t = type { i8*, i8*, i64 (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i64)*, i8* (%struct._malloc_zone_t*, i64, i64)*, i8* (%struct._malloc_zone_t*, i64)*, void (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i8*, i64)*, void (%struct._malloc_zone_t*)*, i8*, i32 (%struct._malloc_zone_t*, i64, i8**, i32)*, void (%struct._malloc_zone_t*, i8**, i32)*, %struct.malloc_introspection_t*, i32, i8* (%struct._malloc_zone_t*, i64, i64)*, void (%struct._malloc_zone_t*, i8*, i64)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*, i8*)* }
%struct.malloc_introspection_t = type { i32 (i32, i8*, i32, i64, i32 (i32, i64, i64, i8**)*, void (i32, i8*, i32, %struct.vm_range_t*, i32)*)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i32)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, %struct.malloc_statistics_t*)*, i32 (%struct._malloc_zone_t*)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*, void (i8*, i8*)*)*, void (%struct._malloc_zone_t*)*, void (i32, i32, i64, i32 (i32, i64, i64, i8**)*, void (i8*, ...)*)*, void (i32, i64, i32 (i32, i64, i64, i8**)*, %struct.malloc_statistics_t*)* }
%struct.vm_range_t = type { i64, i64 }
%struct.malloc_statistics_t = type { i32, i64, i64, i64 }
%struct.sqlite3_api_routines = type { i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, double)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*, i8*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, %struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i32 (i8*, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, double (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i64 (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, %struct.sqlite3_value* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3*, i32 (i8*)*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*)*, i32 (%struct.sqlite3_stmt*)*, %struct.sqlite3* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*)*, i32 (i32)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, void (i8*)*, void (i8**)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3*, i8*, i8***, i32*, i32*, i8**)*, i32 ()*, void (%struct.sqlite3*)*, i64 (%struct.sqlite3*)*, i8* ()*, i32 ()*, i8* (i32)*, i8* (i8*, ...)*, i32 (i8*, %struct.sqlite3**)*, i32 (i8*, %struct.sqlite3**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i8* (%struct.sqlite3*, void (i8*, i8*, i64)*, i8*)*, void (%struct.sqlite3*, i32, i32 (i8*)*, i8*)*, i8* (i8*, i32)*, i32 (%struct.sqlite3_stmt*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, double)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i64)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, %struct.sqlite3_value*)*, i8* (%struct.sqlite3*, void (i8*)*, i8*)*, i32 (%struct.sqlite3*, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*)*, void (%struct.sqlite3_context*, i32, i8*, void (i8*)*)*, i8* (i32, i8*, i8*, ...)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i8**, i8**, i32*, i32*, i32*)*, void ()*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, void (i8*, i8*)*, i8*)*, i32 (%struct.sqlite3_stmt*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3*, void (i8*, i32, i8*, i8*, i64)*, i8*)*, i8* (%struct.sqlite3_context*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, double (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i64 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob**)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*)*, i64 (i32)*, i64 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (i8*, %struct.sqlite3**, i32, i8*)*, i32 (i32)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, i32 (i32)*, void (i32)*, %struct.sqlite3_vfs* (i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*)*, i32 ()*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, ...)*, void (i32, i8*)*, %struct.sqlite3* (%struct.sqlite3_context*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i32, i32)*, %struct.sqlite3_stmt* (%struct.sqlite3*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*)*, i32 (i32, i32*, i32*, i32)*, i32 (%struct.sqlite3_backup*)*, %struct.sqlite3_backup* (%struct.sqlite3*, i8*, %struct.sqlite3*, i8*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*, i32)*, i8* (i32)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i32, ...)*, %struct.sqlite3_mutex* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32*, i32*, i32)*, i32 (%struct.sqlite3*)*, void (i32, i8*, ...)*, i64 (i64)*, i8* ()*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*, void (i8**, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i8*)*, i8* (%struct.sqlite3*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*)*, i32 (%struct.sqlite3_blob*, i64)*, i32 (%struct.sqlite3*, i32, ...)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*)*, i8* (i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i8*, i64)*, i8* (i8*, i8*)*, i8* (i32, i8*, i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32, i32*, i32*)*, i32 (void ()*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8)*, i32 (void ()*)*, i32 (%struct.sqlite3*, i8*, i8*, i8**)*, i8* (i64)*, i64 (i8*)*, i8* (i8*, i64)*, void ()*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8)*, i32 (i8*, i8*)*, %struct.sqlite3_value* (%struct.sqlite3_value*)*, void (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_context*, i64)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_value*)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, i64*, i64*, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32 (i32, i8*, i8*, i8*)*, i8*)*, i8* (%struct.sqlite3_stmt*)*, void (%struct.sqlite3*, i64)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i8*, void (i8*)*)*, i8* (%struct.sqlite3_value*, i8*)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_index_info*, i32)*, i32 ()*, i32 (i32, i8**, i32*)*, i32 (i8*, i32)*, %struct.sqlite3_str* (%struct.sqlite3*)*, i8* (%struct.sqlite3_str*)*, void (%struct.sqlite3_str*, i8*, ...)*, void (%struct.sqlite3_str*, i8*, %struct.__va_list_tag*)*, void (%struct.sqlite3_str*, i8*, i32)*, void (%struct.sqlite3_str*, i8*)*, void (%struct.sqlite3_str*, i32, i8)*, void (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i8* (%struct.sqlite3_str*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*)*, i8* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i8**)*, i64 (i64)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*, i8*, i8*, i32, i8**)*, void (i8*)* }
%struct.sqlite3_stmt = type opaque
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %struct.sqlite3_index_constraint*, i32, %struct.sqlite3_index_orderby*, %struct.sqlite3_index_constraint_usage*, i32, i8*, i32, i32, double, i64, i32, i64 }
%struct.sqlite3_index_constraint = type { i32, i8, i8, i32 }
%struct.sqlite3_index_orderby = type { i32, i8 }
%struct.sqlite3_index_constraint_usage = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sqlite3_blob = type opaque
%struct.WindowUpdate = type { i8*, i32, i32, i32 }
%struct.anon.23 = type { i8, i8, i8 }
%struct.EncName = type { i8*, i8 }
%struct.OpenMode = type { i8*, i32 }
%struct.RowSet = type { %struct.RowSetChunk*, %struct.sqlite3*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, i16, i16, i32 }
%struct.RowSetChunk = type { %struct.RowSetChunk*, [42 x %struct.RowSetEntry] }
%struct.RowSetEntry = type { i64, %struct.RowSetEntry*, %struct.RowSetEntry* }
%struct.UnpackedRecord = type { %struct.KeyInfo*, %struct.sqlite3_value*, i16, i8, i8, i8, i8, i8 }
%struct.BtreePayload = type { i8*, i64, i8*, %struct.sqlite3_value*, i16, i32, i32 }
%struct.DateTime = type { i64, i32, i32, i32, i32, i32, i32, double, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct.PrintfArguments = type { i32, i32, %struct.sqlite3_value** }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.flock = type { i64, i64, i32, i16, i16 }
%struct.timeval = type { i64, i32 }
%struct.statfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.fsid, i32, i32, i32, i32, [16 x i8], [1024 x i8], [1024 x i8], i32, [7 x i32] }
%struct.fsid = type { [2 x i32] }
%struct.WalCkptInfo = type { i32, [5 x i32], [8 x i8], i32, i32 }
%struct.WalHashLoc = type { i16*, i32*, i32 }
%struct.WalIterator = type { i32, i32, [1 x %struct.WalSegment] }
%struct.WalSegment = type { i32, i16*, i32*, i32, i32 }
%struct.WalWriter = type { %struct.Wal*, %struct.sqlite3_file*, i64, i32, i32 }
%struct.CellArray = type { i32, %struct.MemPage*, i8**, i16*, [6 x i8*], [6 x i32] }
%struct.IntegrityCk = type { %struct.BtShared*, %struct.Pager*, i8*, i32, i32, i32, i32, i8*, i32, i32, %struct.sqlite3_str, i32*, %struct.sqlite3* }
%struct.ValueNewStat4Ctx = type { %struct.Parse*, %struct.Index*, %struct.UnpackedRecord**, i32 }
%struct.ReusableSpace = type { i8*, i64, i64 }
%struct.Incrblob = type { i32, i32, i16, %struct.BtCursor*, %struct.sqlite3_stmt*, %struct.sqlite3*, i8*, %struct.Table* }
%struct.PmaReader = type { i64, i64, i32, i32, %struct.sqlite3_file*, i8*, i8*, i8*, i32, i8*, %struct.IncrMerger* }
%struct.IncrMerger = type { %struct.SortSubtask*, %struct.MergeEngine*, i64, i32, i32, i32, [2 x %struct.SorterFile] }
%struct.SortSubtask = type { %struct.SQLiteThread*, i32, %struct.VdbeSorter*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)*, %struct.SorterFile, %struct.SorterFile }
%struct.SQLiteThread = type { %struct._opaque_pthread_t*, i32, i8*, i8* (i8*)*, i8* }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.VdbeSorter = type { i32, i32, i32, i32, %struct.PmaReader*, %struct.MergeEngine*, %struct.sqlite3*, %struct.KeyInfo*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32, i8, i8, i8, i8, i8, [1 x %struct.SortSubtask] }
%struct.SorterList = type { %struct.SorterRecord*, i8*, i32 }
%struct.SorterRecord = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.SorterRecord* }
%struct.SorterFile = type { %struct.sqlite3_file*, i64 }
%struct.MergeEngine = type { i32, %struct.SortSubtask*, i32*, %struct.PmaReader* }
%struct.PmaWriter = type { i32, i8*, i32, i32, i32, i64, %struct.sqlite3_file* }
%struct.MemJournal = type { %struct.sqlite3_io_methods*, i32, i32, i32, %struct.FileChunk*, %struct.FilePoint, %struct.FilePoint, i32, %struct.sqlite3_vfs*, i8* }
%struct.FileChunk = type { %struct.FileChunk*, [8 x i8] }
%struct.FilePoint = type { i64, %struct.FileChunk* }
%struct.Walker = type { %struct.Parse*, i32 (%struct.Walker*, %struct.Expr*)*, i32 (%struct.Walker*, %struct.Select*)*, void (%struct.Walker*, %struct.Select*)*, i32, i16, %union.anon.12 }
%union.anon.12 = type { %struct.NameContext* }
%struct.NameContext = type { %struct.Parse*, %struct.SrcList*, %union.anon.13, %struct.NameContext*, i32, i32, i32, %struct.Select* }
%union.anon.13 = type { %struct.ExprList* }
%struct.RenameCtx = type { %struct.RenameToken*, i32, i32, %struct.Table*, i8* }
%struct.WhereInfo = type { %struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.ExprList*, %struct.Expr*, [2 x i32], i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i16, i32, %struct.WhereLoop*, %struct.WhereExprMod*, i64, %struct.WhereClause, %struct.WhereMaskSet, [1 x %struct.WhereLevel] }
%struct.WhereLoop = type { i64, i64, i8, i8, i16, i16, i16, %union.anon.15, i32, i16, i16, i16, %struct.WhereTerm**, %struct.WhereLoop*, [3 x %struct.WhereTerm*] }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i16, i16, i16, i16, %struct.Index* }
%struct.WhereTerm = type { %struct.Expr*, %struct.WhereClause*, i16, i16, i16, i8, i8, i32, i32, i32, %union.anon.18, i64, i64 }
%union.anon.18 = type { %struct.WhereOrInfo* }
%struct.WhereOrInfo = type { %struct.WhereClause, i64 }
%struct.WhereExprMod = type { %struct.WhereExprMod*, %struct.Expr*, %struct.Expr }
%struct.WhereClause = type { %struct.WhereInfo*, %struct.WhereClause*, i8, i8, i32, i32, %struct.WhereTerm*, [8 x %struct.WhereTerm] }
%struct.WhereMaskSet = type { i32, i32, [64 x i32] }
%struct.WhereLevel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %union.anon.19, %struct.WhereLoop*, i64 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32, %struct.InLoop* }
%struct.InLoop = type { i32, i32, i32, i32, i8 }
%struct.InitData = type { %struct.sqlite3*, i8**, i32, i32, i32, i32 }
%struct.RowLoadInfo = type { i32, i8 }
%struct.SortCtx = type { %struct.ExprList*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.RowLoadInfo* }
%struct.DistinctCtx = type { i8, i8, i32, i32 }
%struct.SubstContext = type { %struct.Parse*, i32, i32, i32, %struct.ExprList* }
%struct.WhereConst = type { %struct.Parse*, i32, i32, %struct.Expr** }
%struct.IdxExprTrans = type { %struct.Expr*, i32, i32, i32, i32, %struct.WhereInfo*, %struct.sqlite3* }
%struct.WhereAndInfo = type { %struct.WhereClause }
%struct.WhereOrSet = type { i16, [3 x %struct.WhereOrCost] }
%struct.WhereOrCost = type { i64, i16, i16 }
%struct.WhereScan = type { %struct.WhereClause*, %struct.WhereClause*, i8*, %struct.Expr*, i8, i8, i8, i32, i32, [11 x i32], [11 x i16] }
%struct.WhereLoopBuilder = type { %struct.WhereInfo*, %struct.WhereClause*, %struct.ExprList*, %struct.WhereLoop*, %struct.WhereOrSet*, i8, i8, i32 }
%struct.WherePath = type { i64, i64, i16, i16, i16, i8, %struct.WhereLoop** }
%struct.WindowCodeArg = type { %struct.Parse*, %struct.Window*, %struct.Vdbe*, i32, i32, i32, i32, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg }
%struct.WindowCsrAndReg = type { i32, i32 }
%struct.yyParser = type { %struct.yyStackEntry*, %struct.Parse*, [100 x %struct.yyStackEntry], %struct.yyStackEntry* }
%struct.yyStackEntry = type { i16, i16, %union.YYMINORTYPE }
%union.YYMINORTYPE = type { %struct.Token }
%struct.FuncDestructor = type { i32, void (i8*)*, i8* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }
%struct.DbFixer = type { %struct.Parse*, %struct.Schema*, i8, i8*, i8*, %struct.Token* }

@sqlite3_version = constant [7 x i8] c"3.32.0\00", align 1
@sqlite3Stat = local_unnamed_addr global %struct.sqlite3StatType zeroinitializer, align 8
@statMutex = local_unnamed_addr constant [10 x i8] c"\00\01\01\00\00\00\00\01\00\00", align 1
@sqlite3Config = external dso_local global %struct.Sqlite3Config, align 8
@getDigits.aMx = internal unnamed_addr constant [6 x i16] [i16 12, i16 14, i16 24, i16 31, i16 59, i16 9999], align 2
@sqlite3CtypeMap = internal constant [256 x i8] c"\00\00\00\00\00\00\00\00\00\01\01\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\80\00@\00\00\80\00\00\00\00\00\00\00\00\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\00\00\00\00\00\00\00\0A\0A\0A\0A\0A\0A\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\80\00\00\00@\80******\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\22\00\00\00\00\00@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", align 16
@.str = private unnamed_addr constant [8 x i8] c"20b:20e\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"20c:20e\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"20e\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"40f-21a-21d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"local time unavailable\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@aXformType = local_unnamed_addr constant [6 x %struct.anon.9] [%struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), double 0x425B0625EAB00000, double 1.000000e+03 }, %struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double 0x41FCD35BA5000000, double 6.000000e+04 }, %struct.anon.9 { i8 0, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), double 0x419EBF50B0000000, double 3.600000e+06 }, %struct.anon.9 { i8 0, i8 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), double 0x41547F8B40000000, double 8.640000e+07 }, %struct.anon.9 { i8 1, i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), double 1.765460e+05, double 2.592000e+09 }, %struct.anon.9 { i8 2, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), double 1.471300e+04, double 3.153600e+10 }], align 16
@sqlite3UpperToLower = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@.str.12 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"unixepoch\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"weekday \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"start of \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"%06.3f\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"%.16g\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@vfsList = local_unnamed_addr global %struct.sqlite3_vfs* null, align 8
@sqlite3Hooks = local_unnamed_addr global %struct.BenignMallocHooks zeroinitializer, align 8
@pthreadMutexAlloc.staticMutexes = internal global [12 x %struct.sqlite3_mutex] [%struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }], align 16
@mem0 = local_unnamed_addr global %struct.Mem0Global zeroinitializer, align 8
@aDigits = local_unnamed_addr constant [33 x i8] c"0123456789ABCDEF0123456789abcdef\00", align 16
@aPrefix = local_unnamed_addr constant [7 x i8] c"-x0\00X0\00", align 1
@fmtinfo = local_unnamed_addr constant [23 x %struct.et_info] [%struct.et_info { i8 100, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 115, i8 0, i8 4, i8 5, i8 0, i8 0 }, %struct.et_info { i8 103, i8 0, i8 1, i8 3, i8 30, i8 0 }, %struct.et_info { i8 122, i8 0, i8 4, i8 6, i8 0, i8 0 }, %struct.et_info { i8 113, i8 0, i8 4, i8 9, i8 0, i8 0 }, %struct.et_info { i8 81, i8 0, i8 4, i8 10, i8 0, i8 0 }, %struct.et_info { i8 119, i8 0, i8 4, i8 14, i8 0, i8 0 }, %struct.et_info { i8 99, i8 0, i8 0, i8 8, i8 0, i8 0 }, %struct.et_info { i8 111, i8 8, i8 0, i8 0, i8 0, i8 2 }, %struct.et_info { i8 117, i8 10, i8 0, i8 16, i8 0, i8 0 }, %struct.et_info { i8 120, i8 16, i8 0, i8 0, i8 16, i8 1 }, %struct.et_info { i8 88, i8 16, i8 0, i8 0, i8 0, i8 4 }, %struct.et_info { i8 102, i8 0, i8 1, i8 1, i8 0, i8 0 }, %struct.et_info { i8 101, i8 0, i8 1, i8 2, i8 30, i8 0 }, %struct.et_info { i8 69, i8 0, i8 1, i8 2, i8 14, i8 0 }, %struct.et_info { i8 71, i8 0, i8 1, i8 3, i8 14, i8 0 }, %struct.et_info { i8 105, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 110, i8 0, i8 0, i8 4, i8 0, i8 0 }, %struct.et_info { i8 37, i8 0, i8 0, i8 7, i8 0, i8 0 }, %struct.et_info { i8 112, i8 16, i8 0, i8 13, i8 0, i8 1 }, %struct.et_info { i8 84, i8 0, i8 0, i8 11, i8 0, i8 0 }, %struct.et_info { i8 83, i8 0, i8 0, i8 12, i8 0, i8 0 }, %struct.et_info { i8 114, i8 10, i8 1, i8 15, i8 0, i8 0 }], align 16
@arRound = local_unnamed_addr constant [10 x double] [double 5.000000e-01, double 5.000000e-02, double 5.000000e-03, double 5.000000e-04, double 5.000000e-05, double 5.000000e-06, double 5.000000e-07, double 5.000000e-08, double 5.000000e-09, double 5.000000e-10], align 16
@.str.26 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@sqlite3_str_vappendf.zOrd = internal unnamed_addr constant [9 x i8] c"thstndrd\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@sqlite3OomStr = internal global %struct.sqlite3_str { %struct.sqlite3* null, i8* null, i32 0, i32 0, i32 0, i8 7, i8 0 }, align 8
@sqlite3Prng = local_unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"922337203685477580\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"API call with %s database connection pointer\00", align 1
@findElementWithHash.nullElement = internal global %struct.HashElem zeroinitializer, align 8
@randomnessPid = global i32 0, align 4
@.str.35 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"pread64\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"pwrite64\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"fallocate\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"openDirectory\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"mremap\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@aSyscall = external local_unnamed_addr global [29 x %struct.unix_syscall], align 16
@.str.64 = private unnamed_addr constant [43 x i8] c"attempt to open \22%s\22 as file descriptor %d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@unixBigLock = local_unnamed_addr global %struct.sqlite3_mutex* null, align 8
@inodeList = local_unnamed_addr global %struct.unixInodeInfo* null, align 8
@.str.66 = private unnamed_addr constant [31 x i8] c"os_unix.c:%d: (%d) %s(%s) - %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"cannot fstat db file %s\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"file unlinked while open: %s\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"multiple links to file: %s\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"file renamed while open: %s\00", align 1
@sqlite3PendingByte = internal unnamed_addr global i32 1073741824, align 4
@.str.72 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"full_fsync\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s-shm\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"readonly_shm\00", align 1
@posixIoMethods = external constant %struct.sqlite3_io_methods, align 8
@posixIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nolockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@dotlockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@dotlockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@flockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@flockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@afpIoMethods = external constant %struct.sqlite3_io_methods, align 8
@afpIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@proxyIoMethods = external constant %struct.sqlite3_io_methods, align 8
@proxyIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nfsIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nfsIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@autolockIoFinderImpl.aMap = internal unnamed_addr constant [6 x %struct.Mapping] [%struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct.sqlite3_io_methods* @nolockIoMethods }, %struct.Mapping zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [4 x i8] c"hfs\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"ufs\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"afpfs\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"smbfs\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"webdav\00", align 1
@autolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"psow\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"unix-excl\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s.lock\00", align 1
@unixTempFileDir.azDirs = internal unnamed_addr global [6 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [9 x i8] c"/var/tmp\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@sqlite3_temp_directory = local_unnamed_addr global i8* null, align 8
@.str.88 = private unnamed_addr constant [14 x i8] c"SQLITE_TMPDIR\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"%s/etilqs_%llx%c\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"modeof\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"msdos\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exfat\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"SQLITE_FORCE_PROXY_LOCKING\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c":auto:\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sqliteplocks\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@__const.proxyGetHostID.timeout = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.101 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"path error (len %d)\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"read error (len %d)\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"create failed (%d)\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"write failed (%d)\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"rename failed (%d)\00", align 1
@__stderrp = external local_unnamed_addr global %struct.__sFILE*, align 8
@.str.107 = private unnamed_addr constant [24 x i8] c"broke stale lock on %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"failed to break stale lock on %s, %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"-conch\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c":auto: (not held)\00", align 1
@sqlite3_os_init.aVfs = external dso_local global [9 x %struct.sqlite3_vfs], align 16
@.str.111 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"unix-none\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"unix-dotfile\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"unix-posix\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"unix-flock\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"unix-afp\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"unix-nfs\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"unix-proxy\00", align 1
@pcache1_g = global %struct.PCacheGlobal zeroinitializer, align 8
@aJournalMagic = constant [8 x i8] c"\D9\D5\05\F9 \A1c\D7", align 1
@zeroJournalHdr.zeroHdr = internal constant [28 x i8] zeroinitializer, align 16
@.str.119 = private unnamed_addr constant [27 x i8] c"recovered %d pages from %s\00", align 1
@syncJournal.zerobyte = internal constant i8 0, align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"recovered %d frames from WAL file %s\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"cannot limit WAL size: %s\00", align 1
@zMagicHeader = constant [16 x i8] c"SQLite format 3\00", align 16
@sqlite3SharedCacheList = internal unnamed_addr global %struct.BtShared* null, align 8
@.str.122 = private unnamed_addr constant [4 x i8] c"@  \00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"invalid page number %d\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"2nd reference to page %d\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Failed to read ptrmap key=%d\00", align 1
@.str.127 = private unnamed_addr constant [54 x i8] c"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"failed to get page %d\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"freelist leaf count too big on page %d\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%s is %d but should be %d\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.132 = private unnamed_addr constant [21 x i8] c"overflow list length\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"Page %d: \00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"unable to get the page. error code=%d\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"btreeInitPage() returns error code %d\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"free space corruption\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"On tree page %d cell %d: \00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"On page %d at right child: \00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Offset %d out of range %d..%d\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"Extends off end of page\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"Rowid %lld out of order\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Child page depth differs\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Multiple uses for byte %u of page %d\00", align 1
@.str.144 = private unnamed_addr constant [52 x i8] c"Fragmentation of %d bytes reported as %d on page %d\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"unknown database %s\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"destination database is in use\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"source and destination must be distinct\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"%!.15g\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"k(%d\00", align 1
@.str.152 = private constant [7 x i8] c"BINARY\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c",%s%s%s\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"N.\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c")\00", align 1
@displayP4.encnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0)], align 16
@.str.157 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"16LE\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"16BE\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"%.18s-%s\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"(blob)\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"%s-mjXXXXXX9XXz%c%c\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"MJ delete: %s\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"MJ collide: %s\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"-mj%06X9%02X\00", align 1
@sqlite3SmallTypeSizes = local_unnamed_addr constant [128 x i8] c"\00\01\02\03\04\06\08\08\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12\13\13\14\14\15\15\16\16\17\17\18\18\19\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !!\22\22##$$%%&&''(())**++,,--..//00112233445566778899", align 16
@.str.172 = private unnamed_addr constant [45 x i8] c"API called with finalized prepared statement\00", align 1
@.str.173 = private unnamed_addr constant [40 x i8] c"API called with NULL prepared statement\00", align 1
@sqlite3_value_type.aType = internal unnamed_addr constant [64 x i8] c"\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\02\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05\04\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05", align 16
@.str.174 = private unnamed_addr constant [23 x i8] c"string or blob too big\00", align 1
@columnNullValue.nullMem = internal constant %struct.sqlite3_value { %union.MemValue zeroinitializer, i16 1, i8 0, i8 0, i32 0, i8* null, i8* null, i32 0, i32 0, %struct.sqlite3* null, void (i8*)* null }, align 8
@.str.175 = private unnamed_addr constant [40 x i8] c"bind on a busy prepared statement: [%s]\00", align 1
@enableJit = local_unnamed_addr global i8 -1, align 1
@Argv = local_unnamed_addr global i8** null, align 8
@Argc = local_unnamed_addr global i32 -1, align 4
@maxVdbeSteps = local_unnamed_addr global i64 -1, align 8
@pcHasBeenSet = local_unnamed_addr global i8 0, align 1
@iCompare = local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [29 x i8] c"cannot open value of type %s\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"no such rowid: %lld\00", align 1
@.str.182 = private unnamed_addr constant [36 x i8] c"cannot open table without rowid: %s\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"cannot open view: %s\00", align 1
@.str.184 = private unnamed_addr constant [21 x i8] c"no such column: \22%s\22\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"foreign key\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.187 = private unnamed_addr constant [34 x i8] c"cannot open %s column for writing\00", align 1
@vdbeSorterCompareInt.aLen = internal unnamed_addr constant [10 x i8] c"\00\01\02\03\04\06\08\00\00\00", align 1
@MemJournalMethods = external constant %struct.sqlite3_io_methods, align 8
@.str.188 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"excluded\00", align 1
@.str.191 = private unnamed_addr constant [31 x i8] c"misuse of aliased aggregate %s\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"misuse of aliased window function %s\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"row value misused\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"double-quoted string literal: \22%w\22\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"no such column\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"ambiguous column name\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"%s: %s.%s.%s\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"%s: %s.%s\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.200 = private unnamed_addr constant [28 x i8] c"partial index WHERE clauses\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"index expressions\00", align 1
@.str.202 = private unnamed_addr constant [18 x i8] c"CHECK constraints\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"generated columns\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"%s prohibited in %s\00", align 1
@.str.205 = private unnamed_addr constant [17 x i8] c"the \22.\22 operator\00", align 1
@.str.206 = private unnamed_addr constant [71 x i8] c"second argument to likelihood() must be a constant between 0.0 and 1.0\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"not authorized to use function: %s\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"non-deterministic functions\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"%.*s() may not be used as a window function\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"misuse of %s function %.*s()\00", align 1
@.str.213 = private unnamed_addr constant [23 x i8] c"no such function: %.*s\00", align 1
@.str.214 = private unnamed_addr constant [45 x i8] c"wrong number of arguments to function %.*s()\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"FILTER may not be used with non-aggregate %.*s()\00", align 1
@.str.216 = private unnamed_addr constant [11 x i8] c"subqueries\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.218 = private unnamed_addr constant [56 x i8] c"%r %s BY term out of range - should be between 1 and %d\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"too many terms in ORDER BY clause\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"ORDER\00", align 1
@.str.221 = private unnamed_addr constant [61 x i8] c"%r ORDER BY term does not match any column in the result set\00", align 1
@.str.222 = private unnamed_addr constant [44 x i8] c"a GROUP BY clause is required before HAVING\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"GROUP\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"aggregate functions are not allowed in the GROUP BY clause\00", align 1
@.str.225 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.226 = private unnamed_addr constant [26 x i8] c"hex literal too big: %s%s\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"sqlite_\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"table %s may not be altered\00", align 1
@.str.229 = private unnamed_addr constant [156 x i8] c"SELECT 1 FROM \22%w\22.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.231 = private unnamed_addr constant [155 x i8] c"SELECT 1 FROM temp.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"view\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"cannot rename columns of %s \22%s\22\00", align 1
@.str.234 = private unnamed_addr constant [21 x i8] c"error in %s %s%s: %s\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c" after rename\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"\22%w\22\00", align 1
@.str.237 = private unnamed_addr constant [13 x i8] c"sqlite_stat1\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"tbl,idx,stat\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"sqlite_stat4\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"sqlite_stat3\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"CREATE TABLE %Q.%s(%s)\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"DELETE FROM %Q.%s WHERE %s=%Q\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"stat_init\00", align 1
@statInitFuncdef = external constant %struct.FuncDef, align 8
@.str.244 = private unnamed_addr constant [10 x i8] c"stat_push\00", align 1
@statPushFuncdef = external constant %struct.FuncDef, align 8
@.str.245 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c" %llu\00", align 1
@.str.247 = private unnamed_addr constant [9 x i8] c"stat_get\00", align 1
@statGetFuncdef = external constant %struct.FuncDef, align 8
@.str.248 = private unnamed_addr constant [10 x i8] c"sqlite\\_%\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"BBB\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"tbl\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"unordered*\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"sz=[0-9]*\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"noskipscan*\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"too many attached databases - max %d\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"database %s is already in use\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"database is already attached\00", align 1
@.str.258 = private unnamed_addr constant [68 x i8] c"attached databases must use the same text encoding as main database\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"unable to open database: %s\00", align 1
@.str.261 = private unnamed_addr constant [21 x i8] c"no such database: %s\00", align 1
@.str.262 = private unnamed_addr constant [26 x i8] c"cannot detach database %s\00", align 1
@.str.263 = private unnamed_addr constant [22 x i8] c"database %s is locked\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"authorizer malfunction\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"generated columns cannot be part of the PRIMARY KEY\00", align 1
@.str.266 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.267 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c",\0A  \00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"\0A)\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@createTableStmt.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0)], align 16
@.str.271 = private unnamed_addr constant [6 x i8] c" TEXT\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c" NUM\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c" INT\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c" REAL\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"corrupt schema\00", align 1
@.str.276 = private unnamed_addr constant [56 x i8] c"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\00", align 1
@typeofFunc.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)], align 16
@.str.277 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.279 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@globInfo = constant %struct.compareInfo { i8 42, i8 63, i8 91, i8 0 }, align 1
@likeInfoNorm = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 1 }, align 1
@likeInfoAlt = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 0 }, align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"LIKE or GLOB pattern too complex\00", align 1
@.str.282 = private unnamed_addr constant [45 x i8] c"ESCAPE expression must be a single character\00", align 1
@hexdigits = local_unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@.str.283 = private unnamed_addr constant [7 x i8] c"%!.20e\00", align 1
@trimFunc.lenOne = internal unnamed_addr constant [1 x i8] c"\01", align 1
@trimFunc.azOne = internal constant [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.284, i32 0, i32 0)], align 8
@.str.284 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"not authorized\00", align 1
@.str.286 = private unnamed_addr constant [30 x i8] c"FOREIGN KEY constraint failed\00", align 1
@sqlite3Autoext = local_unnamed_addr global %struct.sqlite3AutoExtList zeroinitializer, align 8
@.str.287 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.288 = private unnamed_addr constant [4 x i8] c"seq\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.290 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"on_update\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"on_delete\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"notnull\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"dflt_value\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"pk\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"coll\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"narg\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"hght\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"flgs\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"partial\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"rowid\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"fkid\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"busy\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.322 = private unnamed_addr constant [13 x i8] c"checkpointed\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"database\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.325 = private unnamed_addr constant [11 x i8] c"cache_size\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@pragCName = local_unnamed_addr constant [51 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0)], align 16
@.str.327 = private unnamed_addr constant [15 x i8] c"application_id\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"auto_vacuum\00", align 1
@.str.329 = private unnamed_addr constant [16 x i8] c"automatic_index\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"busy_timeout\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"cache_spill\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"case_sensitive_like\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"cell_size_check\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"checkpoint_fullfsync\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"collation_list\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"compile_options\00", align 1
@.str.337 = private unnamed_addr constant [14 x i8] c"count_changes\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"database_list\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"default_cache_size\00", align 1
@.str.341 = private unnamed_addr constant [19 x i8] c"defer_foreign_keys\00", align 1
@.str.342 = private unnamed_addr constant [23 x i8] c"empty_result_callbacks\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"foreign_key_check\00", align 1
@.str.345 = private unnamed_addr constant [17 x i8] c"foreign_key_list\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"foreign_keys\00", align 1
@.str.347 = private unnamed_addr constant [15 x i8] c"freelist_count\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"full_column_names\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"fullfsync\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"function_list\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"hard_heap_limit\00", align 1
@.str.352 = private unnamed_addr constant [25 x i8] c"ignore_check_constraints\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"incremental_vacuum\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"index_info\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"index_list\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"index_xinfo\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"integrity_check\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"journal_mode\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"journal_size_limit\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"legacy_alter_table\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"lock_proxy_file\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"locking_mode\00", align 1
@.str.363 = private unnamed_addr constant [15 x i8] c"max_page_count\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"mmap_size\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"page_count\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"page_size\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"pragma_list\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"query_only\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"quick_check\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"read_uncommitted\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"recursive_triggers\00", align 1
@.str.373 = private unnamed_addr constant [26 x i8] c"reverse_unordered_selects\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"schema_version\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"secure_delete\00", align 1
@.str.376 = private unnamed_addr constant [19 x i8] c"short_column_names\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"shrink_memory\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"soft_heap_limit\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c"synchronous\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"table_info\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"table_xinfo\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"temp_store\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"temp_store_directory\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.385 = private unnamed_addr constant [15 x i8] c"trusted_schema\00", align 1
@.str.386 = private unnamed_addr constant [13 x i8] c"user_version\00", align 1
@.str.387 = private unnamed_addr constant [19 x i8] c"wal_autocheckpoint\00", align 1
@.str.388 = private unnamed_addr constant [15 x i8] c"wal_checkpoint\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"writable_schema\00", align 1
@aPragmaName = constant [64 x %struct.PragmaName] [%struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i8 2, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.329, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 32768 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i8 4, i8 16, i8 50, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8 5, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i32 0, i32 0), i8 6, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), i8 7, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 2097152 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.334, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8 8, i8 16, i8 32, i8 2, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i32 0, i32 0), i8 9, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.337, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4294967296 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 15 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8 11, i8 17, i8 41, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i8 12, i8 -107, i8 49, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.341, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 524288 }, %struct.PragmaName { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.342, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 256 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i32 0, i32 0), i8 13, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8 14, i8 17, i8 37, i8 4, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.345, i32 0, i32 0), i8 15, i8 97, i8 0, i8 8, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16384 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.347, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8 16, i8 16, i8 21, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), i8 17, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.352, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 512 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), i8 18, i8 3, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8 19, i8 97, i8 15, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i8 20, i8 97, i8 32, i8 5, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i32 0, i32 0), i8 19, i8 97, i8 15, i8 6, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), i8 22, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i32 0, i32 0), i8 23, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 67108864 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i32 0, i32 0), i8 24, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8 25, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.363, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8 27, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8 29, i8 33, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), i8 30, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8 31, i8 16, i8 9, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1048576 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1024 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8192 }, %struct.PragmaName { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.373, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4096 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.374, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8 32, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.376, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 64 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i8 33, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8 34, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i32 0, i32 0), i8 35, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i8 36, i8 97, i8 8, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8 36, i8 97, i8 8, i8 7, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8 37, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i8 38, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0), i8 39, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.385, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 128 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 6 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.387, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.388, i32 0, i32 0), i8 41, i8 1, i8 44, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.389, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 134217729 }], align 16
@getSafetyLevel.zText = internal unnamed_addr constant [25 x i8] c"onoffalseyestruextrafull\00", align 16
@getSafetyLevel.iValue = internal unnamed_addr constant [8 x i8] c"\01\00\00\00\01\01\03\02", align 1
@.str.390 = private unnamed_addr constant [10 x i8] c"exclusive\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.396 = private unnamed_addr constant [62 x i8] c"temporary storage cannot be changed from within a transaction\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"SET NULL\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"SET DEFAULT\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"CASCADE\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"RESTRICT\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"NO ACTION\00", align 1
@pragmaFunclistLine.azEnc = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.404, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.404 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.407 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"sissii\00", align 1
@.str.409 = private unnamed_addr constant [31 x i8] c"malformed database schema (%s)\00", align 1
@.str.410 = private unnamed_addr constant [8 x i8] c"%z - %s\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"a NATURAL join may not have an ON or USING clause\00", align 1
@.str.412 = private unnamed_addr constant [55 x i8] c"cannot have both ON and USING clauses in the same join\00", align 1
@.str.413 = private unnamed_addr constant [64 x i8] c"cannot join using column %s - column not present in both tables\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"UNION ALL\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"INTERSECT\00", align 1
@.str.416 = private unnamed_addr constant [7 x i8] c"EXCEPT\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"UNION\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"USE TEMP B-TREE FOR %s\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.420 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"column%d\00", align 1
@.str.422 = private unnamed_addr constant [49 x i8] c"cannot use window functions in recursive queries\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"SETUP\00", align 1
@.str.424 = private unnamed_addr constant [42 x i8] c"recursive aggregate queries not supported\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"RECURSIVE STEP\00", align 1
@.str.426 = private unnamed_addr constant [23 x i8] c"SCAN %d CONSTANT ROW%s\00", align 1
@.str.427 = private unnamed_addr constant [42 x i8] c"%s clause should come after %s not before\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"ORDER BY\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"LIMIT\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"COMPOUND QUERY\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"LEFT-MOST SUBQUERY\00", align 1
@.str.432 = private unnamed_addr constant [21 x i8] c"%s USING TEMP B-TREE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"MERGE (%s)\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.437 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"'%s' is not a function\00", align 1
@.str.439 = private unnamed_addr constant [43 x i8] c"multiple references to recursive table: %s\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"circular reference: %s\00", align 1
@.str.441 = private unnamed_addr constant [38 x i8] c"table %s has %d values for %d columns\00", align 1
@.str.442 = private unnamed_addr constant [34 x i8] c"multiple recursive references: %s\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"recursive reference in a subquery: %s\00", align 1
@.str.444 = private unnamed_addr constant [39 x i8] c"too many references to \22%s\22: max 65535\00", align 1
@.str.445 = private unnamed_addr constant [31 x i8] c"access to view \22%s\22 prohibited\00", align 1
@.str.446 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"%s.%s.%s\00", align 1
@.str.448 = private unnamed_addr constant [18 x i8] c"no such table: %s\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"no tables specified\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"too many columns in result set\00", align 1
@.str.451 = private unnamed_addr constant [51 x i8] c"DISTINCT aggregates must have exactly one argument\00", align 1
@.str.452 = private unnamed_addr constant [18 x i8] c"SCAN TABLE %s%s%s\00", align 1
@.str.453 = private unnamed_addr constant [23 x i8] c" USING COVERING INDEX \00", align 1
@.str.454 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.455 = private unnamed_addr constant [65 x i8] c"sqlite3_get_table() called with two or more incompatible queries\00", align 1
@.str.456 = private unnamed_addr constant [4 x i8] c"CRE\00", align 1
@.str.457 = private unnamed_addr constant [4 x i8] c"INS\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"<expr>\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c" AND \00", align 1
@.str.460 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"%s=?\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"ANY(%s)\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.465 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.466 = private unnamed_addr constant [41 x i8] c"ON clause references tables to its right\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"NOCASE\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"automatic index on %s(%s)\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"auto-index\00", align 1
@.str.470 = private unnamed_addr constant [35 x i8] c"abbreviated query algorithm search\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"no query solution\00", align 1
@.str.472 = private unnamed_addr constant [56 x i8] c"second argument to nth_value must be a positive integer\00", align 1
@.str.473 = private unnamed_addr constant [45 x i8] c"argument of ntile must be a positive integer\00", align 1
@row_numberName = constant [11 x i8] c"row_number\00", align 1
@dense_rankName = constant [11 x i8] c"dense_rank\00", align 1
@rankName = constant [5 x i8] c"rank\00", align 1
@percent_rankName = constant [13 x i8] c"percent_rank\00", align 1
@cume_distName = constant [10 x i8] c"cume_dist\00", align 1
@ntileName = constant [6 x i8] c"ntile\00", align 1
@last_valueName = constant [11 x i8] c"last_value\00", align 1
@nth_valueName = constant [10 x i8] c"nth_value\00", align 1
@first_valueName = constant [12 x i8] c"first_value\00", align 1
@leadName = constant [5 x i8] c"lead\00", align 1
@lagName = constant [4 x i8] c"lag\00", align 1
@.str.474 = private unnamed_addr constant [19 x i8] c"no such window: %s\00", align 1
@windowCheckValue.azErr = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.478, i32 0, i32 0)], align 16
@.str.475 = private unnamed_addr constant [53 x i8] c"frame starting offset must be a non-negative integer\00", align 1
@.str.476 = private unnamed_addr constant [51 x i8] c"frame ending offset must be a non-negative integer\00", align 1
@.str.477 = private unnamed_addr constant [52 x i8] c"frame starting offset must be a non-negative number\00", align 1
@.str.478 = private unnamed_addr constant [50 x i8] c"frame ending offset must be a non-negative number\00", align 1
@windowCheckValue.aOp = internal unnamed_addr constant [5 x i32] [i32 57, i32 57, i32 54, i32 57, i32 57], align 16
@yy_action = local_unnamed_addr constant [1924 x i16] [i16 528, i16 1183, i16 528, i16 114, i16 111, i16 208, i16 114, i16 111, i16 208, i16 192, i16 1186, i16 528, i16 418, i16 528, i16 450, i16 528, i16 1447, i16 362, i16 528, i16 380, i16 6, i16 373, i16 70, i16 70, i16 42, i16 42, i16 476, i16 1423, i16 485, i16 418, i16 417, i16 911, i16 505, i16 42, i16 42, i16 71, i16 71, i16 51, i16 51, i16 912, i16 71, i16 71, i16 484, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 415, i16 380, i16 261, i16 261, i16 261, i16 261, i16 16, i16 16, i16 970, i16 970, i16 981, i16 984, i16 1226, i16 1226, i16 510, i16 525, i16 477, i16 525, i16 528, i16 491, i16 350, i16 236, i16 205, i16 486, i16 356, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 42, i16 42, i16 418, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1452, i16 349, i16 413, i16 1150, i16 1, i16 1, i16 534, i16 3, i16 1154, i16 1454, i16 1185, i16 348, i16 940, i16 286, i16 1081, i16 143, i16 1081, i16 380, i16 940, i16 114, i16 111, i16 208, i16 1234, i16 1440, i16 98, i16 370, i16 164, i16 974, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 261, i16 261, i16 228, i16 261, i16 261, i16 463, i16 460, i16 459, i16 306, i16 423, i16 296, i16 123, i16 435, i16 525, i16 306, i16 458, i16 525, i16 177, i16 1452, i16 499, i16 116, i16 116, i16 116, i16 115, i16 409, i16 285, i16 519, i16 218, i16 1221, i16 335, i16 1200, i16 380, i16 431, i16 120, i16 120, i16 120, i16 120, i16 113, i16 1221, i16 1109, i16 1110, i16 1111, i16 794, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 351, i16 12, i16 83, i16 1109, i16 81, i16 142, i16 256, i16 1109, i16 80, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 169, i16 426, i16 307, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1109, i16 1110, i16 1111, i16 1497, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 114, i16 111, i16 208, i16 528, i16 1109, i16 1109, i16 1110, i16 1111, i16 1491, i16 1109, i16 1110, i16 1111, i16 114, i16 111, i16 208, i16 380, i16 1193, i16 183, i16 1003, i16 321, i16 120, i16 120, i16 120, i16 120, i16 440, i16 71, i16 71, i16 487, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1379, i16 1468, i16 1109, i16 464, i16 1109, i16 1110, i16 1111, i16 281, i16 522, i16 522, i16 522, i16 97, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1392, i16 1334, i16 203, i16 473, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 164, i16 12, i16 1392, i16 1394, i16 1109, i16 1110, i16 1111, i16 228, i16 1076, i16 215, i16 463, i16 460, i16 459, i16 319, i16 488, i16 380, i16 334, i16 1465, i16 399, i16 816, i16 458, i16 1076, i16 239, i16 325, i16 1076, i16 407, i16 407, i16 407, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 285, i16 519, i16 1130, i16 809, i16 164, i16 235, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 189, i16 1392, i16 314, i16 178, i16 317, i16 425, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 382, i16 466, i16 1076, i16 419, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1076, i16 527, i16 396, i16 1076, i16 1109, i16 1130, i16 285, i16 519, i16 247, i16 264, i16 333, i16 469, i16 328, i16 468, i16 233, i16 380, i16 217, i16 812, i16 336, i16 1094, i16 324, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1076, i16 394, i16 960, i16 961, i16 1109, i16 1110, i16 1111, i16 285, i16 519, i16 1109, i16 444, i16 495, i16 163, i16 1076, i16 441, i16 347, i16 1076, i16 812, i16 951, i16 450, i16 505, i16 163, i16 950, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 1333, i16 1224, i16 1224, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 950, i16 950, i16 952, i16 528, i16 877, i16 115, i16 409, i16 13, i16 13, i16 293, i16 1422, i16 1109, i16 1110, i16 1111, i16 494, i16 380, i16 334, i16 1465, i16 526, i16 945, i16 866, i16 866, i16 388, i16 439, i16 32, i16 71, i16 71, i16 490, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 433, i16 284, i16 1471, i16 534, i16 3, i16 1154, i16 1109, i16 510, i16 474, i16 1446, i16 286, i16 378, i16 143, i16 6, i16 506, i16 1439, i16 509, i16 503, i16 1446, i16 1234, i16 508, i16 336, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 137, i16 5, i16 206, i16 1387, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 261, i16 261, i16 528, i16 255, i16 255, i16 533, i16 401, i16 1154, i16 1109, i16 1110, i16 1111, i16 270, i16 286, i16 525, i16 143, i16 380, i16 525, i16 406, i16 405, i16 335, i16 267, i16 1234, i16 335, i16 1109, i16 71, i16 71, i16 832, i16 218, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 261, i16 261, i16 467, i16 380, i16 355, i16 1023, i16 510, i16 1139, i16 192, i16 1139, i16 833, i16 145, i16 450, i16 525, i16 141, i16 475, i16 258, i16 1109, i16 1434, i16 896, i16 368, i16 71, i16 71, i16 1109, i16 1110, i16 1111, i16 1109, i16 218, i16 100, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 211, i16 1044, i16 528, i16 1386, i16 433, i16 282, i16 960, i16 1028, i16 1028, i16 447, i16 386, i16 397, i16 1319, i16 511, i16 1444, i16 357, i16 1045, i16 353, i16 6, i16 1109, i16 1110, i16 1111, i16 951, i16 414, i16 71, i16 71, i16 950, i16 528, i16 1109, i16 1110, i16 1111, i16 1046, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 125, i16 103, i16 1147, i16 898, i16 261, i16 261, i16 71, i16 71, i16 192, i16 852, i16 528, i16 386, i16 897, i16 207, i16 950, i16 950, i16 952, i16 525, i16 510, i16 853, i16 379, i16 380, i16 262, i16 262, i16 426, i16 307, i16 193, i16 512, i16 782, i16 783, i16 784, i16 386, i16 55, i16 55, i16 271, i16 525, i16 295, i16 450, i16 896, i16 390, i16 528, i16 380, i16 275, i16 404, i16 275, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1445, i16 380, i16 56, i16 56, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 268, i16 1233, i16 2, i16 377, i16 376, i16 121, i16 110, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 269, i16 285, i16 519, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 528, i16 439, i16 528, i16 9, i16 1109, i16 239, i16 1113, i16 450, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 528, i16 420, i16 528, i16 15, i16 15, i16 13, i16 13, i16 471, i16 528, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 393, i16 1130, i16 44, i16 44, i16 57, i16 57, i16 406, i16 405, i16 1431, i16 380, i16 13, i16 13, i16 1229, i16 872, i16 1136, i16 1109, i16 1110, i16 1111, i16 871, i16 1138, i16 1109, i16 1110, i16 1111, i16 1113, i16 439, i16 395, i16 294, i16 1137, i16 450, i16 455, i16 335, i16 104, i16 528, i16 102, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 433, i16 1109, i16 1139, i16 528, i16 1139, i16 13, i16 13, i16 232, i16 1130, i16 305, i16 109, i16 261, i16 261, i16 107, i16 520, i16 140, i16 4, i16 38, i16 1076, i16 1319, i16 274, i16 13, i16 13, i16 312, i16 525, i16 13, i16 13, i16 1319, i16 144, i16 502, i16 523, i16 1076, i16 528, i16 911, i16 1076, i16 288, i16 186, i16 528, i16 896, i16 528, i16 187, i16 912, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 410, i16 13, i16 13, i16 1109, i16 1110, i16 1111, i16 71, i16 71, i16 58, i16 58, i16 107, i16 520, i16 517, i16 4, i16 304, i16 289, i16 507, i16 1232, i16 273, i16 528, i16 272, i16 383, i16 164, i16 437, i16 1172, i16 1443, i16 501, i16 523, i16 1496, i16 6, i16 1025, i16 841, i16 493, i16 478, i16 1025, i16 481, i16 391, i16 324, i16 513, i16 8, i16 960, i16 59, i16 59, i16 408, i16 392, i16 500, i16 105, i16 105, i16 261, i16 261, i16 410, i16 261, i16 261, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 261, i16 261, i16 950, i16 525, i16 517, i16 301, i16 525, i16 528, i16 445, i16 261, i16 261, i16 261, i16 261, i16 525, i16 261, i16 261, i16 508, i16 207, i16 497, i16 285, i16 519, i16 528, i16 525, i16 496, i16 525, i16 260, i16 205, i16 525, i16 528, i16 60, i16 60, i16 528, i16 960, i16 950, i16 950, i16 952, i16 953, i16 27, i16 105, i16 105, i16 528, i16 1319, i16 896, i16 61, i16 61, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 62, i16 62, i16 950, i16 45, i16 45, i16 107, i16 520, i16 528, i16 4, i16 528, i16 438, i16 1044, i16 46, i16 46, i16 1175, i16 384, i16 298, i16 292, i16 300, i16 231, i16 230, i16 229, i16 523, i16 1442, i16 528, i16 1270, i16 1045, i16 6, i16 30, i16 47, i16 47, i16 49, i16 49, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1470, i16 1098, i16 412, i16 1046, i16 528, i16 265, i16 1238, i16 410, i16 50, i16 50, i16 366, i16 366, i16 365, i16 250, i16 363, i16 97, i16 1319, i16 791, i16 525, i16 517, i16 528, i16 31, i16 528, i16 446, i16 516, i16 1129, i16 63, i16 63, i16 528, i16 232, i16 212, i16 872, i16 291, i16 497, i16 428, i16 528, i16 871, i16 1022, i16 498, i16 1022, i16 290, i16 201, i16 64, i16 64, i16 65, i16 65, i16 528, i16 960, i16 1459, i16 528, i16 14, i16 14, i16 1269, i16 105, i16 105, i16 139, i16 937, i16 66, i16 66, i16 299, i16 106, i16 528, i16 410, i16 530, i16 529, i16 528, i16 422, i16 950, i16 127, i16 127, i16 214, i16 67, i16 67, i16 303, i16 107, i16 520, i16 97, i16 4, i16 156, i16 1411, i16 17, i16 158, i16 528, i16 52, i16 52, i16 528, i16 402, i16 68, i16 68, i16 528, i16 1204, i16 523, i16 804, i16 528, i16 819, i16 528, i16 383, i16 213, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1410, i16 69, i16 69, i16 528, i16 53, i16 53, i16 831, i16 830, i16 151, i16 151, i16 823, i16 410, i16 152, i16 152, i16 76, i16 76, i16 427, i16 528, i16 521, i16 384, i16 1010, i16 528, i16 1021, i16 517, i16 1021, i16 54, i16 54, i16 528, i16 381, i16 442, i16 528, i16 309, i16 528, i16 285, i16 519, i16 1266, i16 196, i16 497, i16 528, i16 72, i16 72, i16 954, i16 496, i16 128, i16 128, i16 804, i16 263, i16 819, i16 313, i16 73, i16 73, i16 960, i16 129, i16 129, i16 130, i16 130, i16 416, i16 105, i16 105, i16 95, i16 126, i16 126, i16 838, i16 839, i16 106, i16 528, i16 410, i16 530, i16 529, i16 1098, i16 412, i16 950, i16 316, i16 265, i16 942, i16 1203, i16 1010, i16 238, i16 366, i16 366, i16 365, i16 250, i16 363, i16 432, i16 318, i16 791, i16 238, i16 150, i16 150, i16 528, i16 107, i16 520, i16 528, i16 4, i16 528, i16 320, i16 528, i16 954, i16 212, i16 1217, i16 291, i16 1257, i16 950, i16 950, i16 952, i16 953, i16 27, i16 523, i16 290, i16 528, i16 1202, i16 149, i16 149, i16 528, i16 134, i16 134, i16 133, i16 133, i16 131, i16 131, i16 107, i16 520, i16 528, i16 4, i16 332, i16 528, i16 914, i16 915, i16 1201, i16 528, i16 410, i16 132, i16 132, i16 528, i16 331, i16 75, i16 75, i16 523, i16 214, i16 327, i16 434, i16 280, i16 517, i16 238, i16 77, i16 77, i16 156, i16 74, i16 74, i16 158, i16 869, i16 43, i16 43, i16 109, i16 308, i16 48, i16 48, i16 97, i16 337, i16 456, i16 410, i16 322, i16 234, i16 1484, i16 97, i16 213, i16 1006, i16 338, i16 905, i16 234, i16 960, i16 238, i16 517, i16 1278, i16 1318, i16 1253, i16 105, i16 105, i16 876, i16 802, i16 1264, i16 870, i16 138, i16 106, i16 109, i16 410, i16 530, i16 529, i16 514, i16 515, i16 950, i16 1324, i16 99, i16 520, i16 451, i16 4, i16 1182, i16 1174, i16 1163, i16 381, i16 960, i16 1162, i16 1164, i16 1478, i16 285, i16 519, i16 105, i16 105, i16 253, i16 523, i16 195, i16 210, i16 1250, i16 106, i16 340, i16 410, i16 530, i16 529, i16 342, i16 11, i16 950, i16 950, i16 950, i16 952, i16 953, i16 27, i16 344, i16 416, i16 198, i16 367, i16 1303, i16 421, i16 410, i16 297, i16 302, i16 1311, i16 372, i16 436, i16 461, i16 202, i16 1200, i16 330, i16 1383, i16 1382, i16 517, i16 190, i16 346, i16 191, i16 518, i16 197, i16 360, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1481, i16 1147, i16 242, i16 1430, i16 165, i16 1428, i16 1144, i16 385, i16 83, i16 430, i16 1388, i16 79, i16 175, i16 1308, i16 82, i16 161, i16 960, i16 167, i16 1300, i16 95, i16 424, i16 170, i16 105, i16 105, i16 35, i16 171, i16 172, i16 371, i16 173, i16 106, i16 36, i16 410, i16 530, i16 529, i16 1314, i16 179, i16 950, i16 265, i16 369, i16 429, i16 443, i16 1377, i16 366, i16 366, i16 365, i16 250, i16 363, i16 454, i16 222, i16 791, i16 88, i16 449, i16 1399, i16 254, i16 224, i16 184, i16 311, i16 452, i16 315, i16 225, i16 470, i16 1165, i16 212, i16 226, i16 291, i16 374, i16 90, i16 950, i16 950, i16 952, i16 953, i16 27, i16 290, i16 398, i16 1211, i16 1495, i16 823, i16 1494, i16 203, i16 1220, i16 1219, i16 1464, i16 1218, i16 1261, i16 400, i16 278, i16 375, i16 1190, i16 1189, i16 329, i16 489, i16 1188, i16 1493, i16 279, i16 94, i16 339, i16 241, i16 480, i16 1262, i16 1210, i16 483, i16 341, i16 214, i16 1260, i16 1259, i16 343, i16 345, i16 240, i16 403, i16 124, i16 156, i16 10, i16 508, i16 158, i16 1285, i16 1450, i16 1449, i16 354, i16 492, i16 101, i16 96, i16 248, i16 1171, i16 34, i16 531, i16 1363, i16 1104, i16 249, i16 251, i16 213, i16 1243, i16 252, i16 352, i16 359, i16 194, i16 1242, i16 358, i16 532, i16 1160, i16 1155, i16 1415, i16 153, i16 1416, i16 1284, i16 1414, i16 154, i16 136, i16 276, i16 1413, i16 778, i16 411, i16 199, i16 287, i16 200, i16 78, i16 155, i16 209, i16 266, i16 283, i16 135, i16 1020, i16 1018, i16 934, i16 381, i16 166, i16 157, i16 216, i16 168, i16 285, i16 519, i16 855, i16 1034, i16 938, i16 159, i16 174, i16 387, i16 389, i16 84, i16 176, i16 85, i16 86, i16 87, i16 160, i16 1037, i16 1033, i16 219, i16 220, i16 146, i16 18, i16 221, i16 1026, i16 416, i16 1141, i16 310, i16 238, i16 448, i16 223, i16 180, i16 181, i16 37, i16 793, i16 331, i16 227, i16 453, i16 323, i16 465, i16 834, i16 182, i16 89, i16 19, i16 20, i16 457, i16 821, i16 462, i16 326, i16 91, i16 277, i16 147, i16 92, i16 472, i16 479, i16 1092, i16 148, i16 986, i16 904, i16 1062, i16 162, i16 93, i16 39, i16 482, i16 1063, i16 40, i16 204, i16 257, i16 259, i16 185, i16 899, i16 237, i16 109, i16 1082, i16 1078, i16 1080, i16 21, i16 1066, i16 1086, i16 33, i16 504, i16 188, i16 22, i16 23, i16 24, i16 1085, i16 25, i16 97, i16 1001, i16 987, i16 985, i16 989, i16 26, i16 1043, i16 244, i16 7, i16 1042, i16 243, i16 990, i16 28, i16 41, i16 524, i16 955, i16 803, i16 108, i16 29, i16 245, i16 865, i16 246, i16 1486, i16 364, i16 361, i16 1100, i16 1099, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1485], align 16
@yy_lookahead = local_unnamed_addr constant [2105 x i16] [i16 189, i16 211, i16 189, i16 267, i16 268, i16 269, i16 267, i16 268, i16 269, i16 189, i16 211, i16 189, i16 189, i16 189, i16 189, i16 189, i16 294, i16 197, i16 189, i16 19, i16 298, i16 201, i16 211, i16 212, i16 211, i16 212, i16 200, i16 288, i16 200, i16 206, i16 207, i16 31, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 39, i16 211, i16 212, i16 189, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 233, i16 19, i16 234, i16 235, i16 234, i16 235, i16 211, i16 212, i16 46, i16 47, i16 48, i16 49, i16 230, i16 231, i16 248, i16 247, i16 248, i16 247, i16 189, i16 248, i16 214, i16 251, i16 252, i16 257, i16 271, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 211, i16 212, i16 277, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 299, i16 300, i16 289, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 299, i16 211, i16 301, i16 73, i16 191, i16 86, i16 193, i16 88, i16 19, i16 73, i16 267, i16 268, i16 269, i16 200, i16 292, i16 26, i16 200, i16 81, i16 119, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 234, i16 235, i16 117, i16 234, i16 235, i16 120, i16 121, i16 122, i16 125, i16 126, i16 127, i16 69, i16 189, i16 247, i16 125, i16 130, i16 247, i16 22, i16 299, i16 300, i16 107, i16 108, i16 109, i16 110, i16 111, i16 136, i16 137, i16 261, i16 218, i16 189, i16 220, i16 19, i16 263, i16 54, i16 55, i16 56, i16 57, i16 58, i16 228, i16 114, i16 115, i16 116, i16 21, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 214, i16 208, i16 148, i16 59, i16 24, i16 236, i16 208, i16 59, i16 67, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 72, i16 126, i16 127, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 114, i16 115, i16 116, i16 225, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 267, i16 268, i16 269, i16 189, i16 59, i16 114, i16 115, i16 116, i16 210, i16 114, i16 115, i16 116, i16 267, i16 268, i16 269, i16 19, i16 218, i16 72, i16 121, i16 23, i16 54, i16 55, i16 56, i16 57, i16 284, i16 211, i16 212, i16 19, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 158, i16 189, i16 59, i16 23, i16 114, i16 115, i16 116, i16 248, i16 205, i16 206, i16 207, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 162, i16 163, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 81, i16 208, i16 206, i16 207, i16 114, i16 115, i16 116, i16 117, i16 76, i16 24, i16 120, i16 121, i16 122, i16 16, i16 114, i16 19, i16 296, i16 297, i16 19, i16 23, i16 130, i16 89, i16 24, i16 24, i16 92, i16 205, i16 206, i16 207, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 136, i16 137, i16 59, i16 23, i16 81, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 279, i16 277, i16 77, i16 22, i16 79, i16 284, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 194, i16 95, i16 76, i16 118, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 89, i16 189, i16 111, i16 92, i16 59, i16 115, i16 136, i16 137, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 19, i16 139, i16 59, i16 189, i16 23, i16 129, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 76, i16 227, i16 99, i16 23, i16 114, i16 115, i16 116, i16 136, i16 137, i16 59, i16 274, i16 87, i16 189, i16 89, i16 278, i16 189, i16 92, i16 114, i16 115, i16 189, i16 189, i16 189, i16 119, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 230, i16 231, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 150, i16 151, i16 152, i16 189, i16 107, i16 110, i16 111, i16 211, i16 212, i16 189, i16 233, i16 114, i16 115, i16 116, i16 143, i16 19, i16 296, i16 297, i16 132, i16 23, i16 134, i16 135, i16 226, i16 189, i16 22, i16 211, i16 212, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 189, i16 239, i16 183, i16 184, i16 185, i16 186, i16 59, i16 248, i16 293, i16 294, i16 191, i16 249, i16 193, i16 298, i16 291, i16 292, i16 257, i16 293, i16 294, i16 200, i16 143, i16 189, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 161, i16 22, i16 189, i16 276, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 234, i16 235, i16 189, i16 234, i16 235, i16 184, i16 227, i16 186, i16 114, i16 115, i16 116, i16 285, i16 191, i16 247, i16 193, i16 19, i16 247, i16 105, i16 106, i16 189, i16 262, i16 200, i16 189, i16 59, i16 211, i16 212, i16 35, i16 261, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 234, i16 235, i16 66, i16 19, i16 189, i16 11, i16 248, i16 150, i16 189, i16 152, i16 74, i16 236, i16 189, i16 247, i16 236, i16 257, i16 23, i16 59, i16 189, i16 26, i16 201, i16 211, i16 212, i16 114, i16 115, i16 116, i16 59, i16 261, i16 156, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 15, i16 12, i16 189, i16 233, i16 189, i16 248, i16 99, i16 125, i16 126, i16 127, i16 189, i16 128, i16 189, i16 200, i16 294, i16 244, i16 27, i16 246, i16 298, i16 114, i16 115, i16 116, i16 115, i16 189, i16 211, i16 212, i16 119, i16 189, i16 114, i16 115, i16 116, i16 42, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 22, i16 156, i16 60, i16 141, i16 234, i16 235, i16 211, i16 212, i16 189, i16 63, i16 189, i16 189, i16 141, i16 116, i16 150, i16 151, i16 152, i16 247, i16 248, i16 73, i16 201, i16 19, i16 234, i16 235, i16 126, i16 127, i16 24, i16 257, i16 7, i16 8, i16 9, i16 189, i16 211, i16 212, i16 262, i16 247, i16 258, i16 189, i16 141, i16 259, i16 189, i16 19, i16 223, i16 248, i16 225, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 294, i16 19, i16 211, i16 212, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 233, i16 22, i16 105, i16 106, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 136, i16 137, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 189, i16 189, i16 189, i16 22, i16 59, i16 24, i16 59, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 189, i16 263, i16 189, i16 211, i16 212, i16 211, i16 212, i16 107, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 226, i16 59, i16 211, i16 212, i16 211, i16 212, i16 105, i16 106, i16 189, i16 19, i16 211, i16 212, i16 233, i16 133, i16 113, i16 114, i16 115, i16 116, i16 138, i16 118, i16 114, i16 115, i16 116, i16 115, i16 189, i16 226, i16 200, i16 126, i16 189, i16 19, i16 189, i16 155, i16 189, i16 157, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 189, i16 59, i16 150, i16 189, i16 152, i16 211, i16 212, i16 46, i16 115, i16 285, i16 26, i16 234, i16 235, i16 19, i16 20, i16 22, i16 22, i16 24, i16 76, i16 189, i16 226, i16 211, i16 212, i16 233, i16 247, i16 211, i16 212, i16 189, i16 236, i16 87, i16 36, i16 89, i16 189, i16 31, i16 92, i16 189, i16 226, i16 189, i16 26, i16 189, i16 226, i16 39, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 211, i16 212, i16 114, i16 115, i16 116, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 71, i16 22, i16 200, i16 189, i16 226, i16 200, i16 285, i16 189, i16 262, i16 113, i16 81, i16 19, i16 200, i16 294, i16 66, i16 36, i16 23, i16 298, i16 29, i16 26, i16 143, i16 200, i16 33, i16 200, i16 259, i16 129, i16 200, i16 48, i16 99, i16 211, i16 212, i16 248, i16 259, i16 85, i16 105, i16 106, i16 234, i16 235, i16 59, i16 234, i16 235, i16 112, i16 94, i16 114, i16 115, i16 116, i16 234, i16 235, i16 119, i16 247, i16 71, i16 16, i16 247, i16 189, i16 65, i16 234, i16 235, i16 234, i16 235, i16 247, i16 234, i16 235, i16 143, i16 116, i16 85, i16 136, i16 137, i16 189, i16 247, i16 90, i16 247, i16 251, i16 252, i16 247, i16 189, i16 211, i16 212, i16 189, i16 99, i16 150, i16 151, i16 152, i16 153, i16 154, i16 105, i16 106, i16 189, i16 189, i16 141, i16 211, i16 212, i16 112, i16 144, i16 114, i16 115, i16 116, i16 211, i16 212, i16 119, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 189, i16 114, i16 12, i16 211, i16 212, i16 203, i16 204, i16 77, i16 189, i16 79, i16 125, i16 126, i16 127, i16 36, i16 294, i16 189, i16 189, i16 27, i16 298, i16 22, i16 211, i16 212, i16 211, i16 212, i16 150, i16 151, i16 152, i16 153, i16 154, i16 0, i16 1, i16 2, i16 42, i16 189, i16 5, i16 235, i16 59, i16 211, i16 212, i16 10, i16 11, i16 12, i16 13, i16 14, i16 26, i16 189, i16 17, i16 247, i16 71, i16 189, i16 53, i16 189, i16 259, i16 63, i16 26, i16 211, i16 212, i16 189, i16 46, i16 30, i16 133, i16 32, i16 85, i16 127, i16 189, i16 138, i16 150, i16 90, i16 152, i16 40, i16 26, i16 211, i16 212, i16 211, i16 212, i16 189, i16 99, i16 303, i16 189, i16 211, i16 212, i16 189, i16 105, i16 106, i16 22, i16 149, i16 211, i16 212, i16 158, i16 112, i16 189, i16 114, i16 115, i16 116, i16 189, i16 189, i16 119, i16 211, i16 212, i16 70, i16 211, i16 212, i16 23, i16 19, i16 20, i16 26, i16 22, i16 78, i16 189, i16 22, i16 81, i16 189, i16 211, i16 212, i16 189, i16 259, i16 211, i16 212, i16 189, i16 221, i16 36, i16 59, i16 189, i16 59, i16 189, i16 113, i16 97, i16 150, i16 151, i16 152, i16 153, i16 154, i16 189, i16 211, i16 212, i16 189, i16 211, i16 212, i16 118, i16 119, i16 211, i16 212, i16 124, i16 59, i16 211, i16 212, i16 211, i16 212, i16 61, i16 189, i16 203, i16 204, i16 59, i16 189, i16 150, i16 71, i16 152, i16 211, i16 212, i16 189, i16 131, i16 189, i16 189, i16 189, i16 189, i16 136, i16 137, i16 189, i16 140, i16 85, i16 189, i16 211, i16 212, i16 59, i16 90, i16 211, i16 212, i16 115, i16 22, i16 115, i16 189, i16 211, i16 212, i16 99, i16 211, i16 212, i16 211, i16 212, i16 159, i16 105, i16 106, i16 147, i16 211, i16 212, i16 7, i16 8, i16 112, i16 189, i16 114, i16 115, i16 116, i16 1, i16 2, i16 119, i16 189, i16 5, i16 23, i16 221, i16 115, i16 26, i16 10, i16 11, i16 12, i16 13, i16 14, i16 23, i16 189, i16 17, i16 26, i16 211, i16 212, i16 189, i16 19, i16 20, i16 189, i16 22, i16 189, i16 189, i16 189, i16 115, i16 30, i16 189, i16 32, i16 253, i16 150, i16 151, i16 152, i16 153, i16 154, i16 36, i16 40, i16 189, i16 221, i16 211, i16 212, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 119, i16 189, i16 83, i16 84, i16 189, i16 189, i16 59, i16 211, i16 212, i16 189, i16 129, i16 211, i16 212, i16 36, i16 70, i16 189, i16 23, i16 250, i16 71, i16 26, i16 211, i16 212, i16 78, i16 211, i16 212, i16 81, i16 23, i16 211, i16 212, i16 26, i16 23, i16 211, i16 212, i16 26, i16 189, i16 23, i16 59, i16 23, i16 26, i16 139, i16 26, i16 97, i16 23, i16 189, i16 23, i16 26, i16 99, i16 26, i16 71, i16 189, i16 189, i16 189, i16 105, i16 106, i16 107, i16 23, i16 189, i16 23, i16 26, i16 112, i16 26, i16 114, i16 115, i16 116, i16 189, i16 231, i16 119, i16 189, i16 19, i16 20, i16 281, i16 22, i16 189, i16 189, i16 189, i16 131, i16 99, i16 189, i16 189, i16 189, i16 136, i16 137, i16 105, i16 106, i16 280, i16 36, i16 237, i16 290, i16 250, i16 112, i16 250, i16 114, i16 115, i16 116, i16 250, i16 238, i16 119, i16 150, i16 151, i16 152, i16 153, i16 154, i16 250, i16 159, i16 209, i16 187, i16 241, i16 254, i16 59, i16 254, i16 286, i16 241, i16 241, i16 286, i16 215, i16 224, i16 220, i16 214, i16 214, i16 214, i16 71, i16 244, i16 254, i16 244, i16 273, i16 238, i16 240, i16 150, i16 151, i16 152, i16 153, i16 154, i16 192, i16 60, i16 139, i16 196, i16 290, i16 196, i16 38, i16 196, i16 148, i16 113, i16 276, i16 287, i16 22, i16 265, i16 287, i16 43, i16 99, i16 229, i16 241, i16 147, i16 18, i16 232, i16 105, i16 106, i16 264, i16 232, i16 232, i16 265, i16 232, i16 112, i16 264, i16 114, i16 115, i16 116, i16 229, i16 229, i16 119, i16 5, i16 241, i16 241, i16 196, i16 241, i16 10, i16 11, i16 12, i16 13, i16 14, i16 18, i16 195, i16 17, i16 155, i16 62, i16 283, i16 196, i16 195, i16 22, i16 282, i16 216, i16 196, i16 195, i16 113, i16 196, i16 30, i16 195, i16 32, i16 216, i16 22, i16 150, i16 151, i16 152, i16 153, i16 154, i16 40, i16 64, i16 222, i16 219, i16 124, i16 219, i16 162, i16 213, i16 213, i16 297, i16 213, i16 256, i16 111, i16 275, i16 216, i16 213, i16 215, i16 213, i16 142, i16 213, i16 213, i16 275, i16 113, i16 255, i16 91, i16 216, i16 256, i16 222, i16 216, i16 255, i16 70, i16 256, i16 256, i16 255, i16 255, i16 196, i16 82, i16 146, i16 78, i16 22, i16 143, i16 81, i16 260, i16 302, i16 302, i16 196, i16 144, i16 155, i16 145, i16 25, i16 199, i16 26, i16 198, i16 270, i16 13, i16 190, i16 190, i16 97, i16 245, i16 6, i16 244, i16 241, i16 243, i16 245, i16 242, i16 188, i16 188, i16 188, i16 208, i16 202, i16 208, i16 260, i16 208, i16 202, i16 217, i16 217, i16 208, i16 4, i16 3, i16 209, i16 160, i16 209, i16 208, i16 202, i16 15, i16 98, i16 272, i16 16, i16 23, i16 23, i16 137, i16 131, i16 148, i16 128, i16 24, i16 140, i16 136, i16 137, i16 20, i16 1, i16 149, i16 128, i16 140, i16 61, i16 37, i16 53, i16 148, i16 53, i16 53, i16 53, i16 128, i16 114, i16 1, i16 34, i16 139, i16 5, i16 22, i16 113, i16 68, i16 159, i16 75, i16 158, i16 26, i16 41, i16 139, i16 68, i16 113, i16 24, i16 20, i16 129, i16 123, i16 19, i16 23, i16 96, i16 28, i16 22, i16 22, i16 22, i16 22, i16 67, i16 59, i16 67, i16 24, i16 22, i16 67, i16 23, i16 147, i16 22, i16 24, i16 23, i16 23, i16 23, i16 114, i16 23, i16 37, i16 26, i16 22, i16 24, i16 23, i16 22, i16 139, i16 23, i16 23, i16 22, i16 141, i16 34, i16 26, i16 75, i16 88, i16 86, i16 34, i16 23, i16 75, i16 22, i16 24, i16 26, i16 34, i16 34, i16 34, i16 93, i16 34, i16 26, i16 23, i16 23, i16 23, i16 23, i16 34, i16 23, i16 22, i16 44, i16 23, i16 26, i16 11, i16 22, i16 22, i16 26, i16 23, i16 23, i16 22, i16 22, i16 139, i16 133, i16 139, i16 139, i16 15, i16 23, i16 1, i16 1, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 139, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304], align 16
@yy_shift_ofst = local_unnamed_addr constant [535 x i16] [i16 1448, i16 1277, i16 1072, i16 1668, i16 1072, i16 319, i16 1122, i16 1225, i16 1332, i16 1481, i16 1481, i16 1481, i16 57, i16 0, i16 0, i16 180, i16 897, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 930, i16 930, i16 1020, i16 1020, i16 290, i16 378, i16 319, i16 319, i16 319, i16 319, i16 319, i16 319, i16 40, i16 110, i16 219, i16 288, i16 327, i16 396, i16 435, i16 504, i16 543, i16 612, i16 651, i16 720, i16 877, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 917, i16 897, i16 1019, i16 763, i16 763, i16 1451, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1553, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 147, i16 258, i16 258, i16 258, i16 258, i16 258, i16 360, i16 424, i16 81, i16 183, i16 1039, i16 183, i16 636, i16 636, i16 183, i16 434, i16 434, i16 189, i16 434, i16 434, i16 134, i16 225, i16 225, i16 511, i16 29, i16 1924, i16 1924, i16 399, i16 399, i16 399, i16 93, i16 163, i16 187, i16 163, i16 163, i16 821, i16 821, i16 487, i16 237, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 332, i16 332, i16 183, i16 773, i16 419, i16 419, i16 937, i16 937, i16 548, i16 840, i16 1924, i16 1924, i16 466, i16 739, i16 739, i16 453, i16 53, i16 618, i16 513, i16 688, i16 737, i16 746, i16 935, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 51, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 715, i16 715, i16 715, i16 183, i16 183, i16 183, i16 183, i16 772, i16 183, i16 183, i16 183, i16 971, i16 1091, i16 183, i16 183, i16 1238, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 714, i16 1132, i16 502, i16 398, i16 398, i16 398, i16 398, i16 1090, i16 502, i16 502, i16 909, i16 853, i16 896, i16 817, i16 1292, i16 300, i16 300, i16 1135, i16 1292, i16 1292, i16 1135, i16 1266, i16 1136, i16 1260, i16 1080, i16 1080, i16 1080, i16 300, i16 1062, i16 1062, i16 905, i16 1276, i16 1175, i16 1071, i16 1577, i16 1499, i16 1499, i16 1604, i16 1604, i16 1499, i16 1496, i16 1532, i16 1626, i16 1608, i16 1508, i16 1638, i16 1638, i16 1638, i16 1638, i16 1508, i16 1508, i16 1532, i16 1626, i16 1608, i16 1608, i16 1508, i16 1499, i16 1665, i16 1531, i16 1625, i16 1499, i16 1665, i16 1669, i16 1499, i16 1665, i16 1499, i16 1665, i16 1669, i16 1583, i16 1583, i16 1583, i16 1645, i16 1680, i16 1680, i16 1669, i16 1583, i16 1588, i16 1583, i16 1645, i16 1583, i16 1583, i16 1552, i16 1669, i16 1609, i16 1609, i16 1669, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1499, i16 1641, i16 1641, i16 1662, i16 1662, i16 1599, i16 1605, i16 1725, i16 1499, i16 1600, i16 1599, i16 1611, i16 1610, i16 1508, i16 1732, i16 1733, i16 1749, i16 1749, i16 1761, i16 1761, i16 1761, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 20, i16 1178, i16 397, i16 1133, i16 1310, i16 1245, i16 385, i16 1184, i16 1327, i16 1335, i16 1431, i16 1440, i16 1497, i16 1511, i16 1516, i16 1518, i16 1312, i16 1268, i16 1435, i16 1385, i16 1341, i16 1523, i16 1525, i16 1423, i16 1507, i16 1164, i16 1252, i16 1536, i16 1538, i16 1362, i16 1404, i16 1781, i16 1783, i16 1628, i16 1777, i16 1695, i16 1779, i16 1773, i16 1774, i16 1661, i16 1652, i16 1673, i16 1778, i16 1663, i16 1786, i16 1806, i16 1670, i16 1659, i16 1681, i16 1750, i16 1775, i16 1666, i16 1760, i16 1762, i16 1763, i16 1764, i16 1690, i16 1705, i16 1787, i16 1683, i16 1819, i16 1818, i16 1802, i16 1712, i16 1671, i16 1758, i16 1804, i16 1765, i16 1753, i16 1790, i16 1693, i16 1721, i16 1811, i16 1816, i16 1820, i16 1708, i16 1715, i16 1821, i16 1780, i16 1822, i16 1823, i16 1817, i16 1824, i16 1782, i16 1789, i16 1826, i16 1745, i16 1814, i16 1829, i16 1785, i16 1825, i16 1830, i16 1707, i16 1833, i16 1834, i16 1835, i16 1836, i16 1837, i16 1838, i16 1842, i16 1832, i16 1843, i16 1845, i16 1841, i16 1729, i16 1846, i16 1847, i16 1746, i16 1839, i16 1849, i16 1731, i16 1848, i16 1844, i16 1850, i16 1851, i16 1852, i16 1788, i16 1800, i16 1791, i16 1853, i16 1805, i16 1794, i16 1854, i16 1856, i16 1859, i16 1858, i16 1857, i16 1863, i16 1860, i16 1867, i16 1848, i16 1868, i16 1869, i16 1870, i16 1872, i16 1873, i16 1875, i16 1874, i16 1889, i16 1879, i16 1880, i16 1881, i16 1882, i16 1884, i16 1885, i16 1877, i16 1776, i16 1769, i16 1771, i16 1772, i16 1784, i16 1890, i16 1897, i16 1913, i16 1914], align 16
@yy_reduce_ofst = local_unnamed_addr constant [380 x i16] [i16 -66, i16 490, i16 645, i16 545, i16 -174, i16 -172, i16 -187, i16 -178, i16 -113, i16 -176, i16 430, i16 537, i16 -63, i16 -136, i16 25, i16 -261, i16 37, i16 412, i16 803, i16 828, i16 872, i16 -171, i16 888, i16 892, i16 106, i16 589, i16 921, i16 -189, i16 670, i16 926, i16 -177, i16 196, i16 386, i16 395, i16 694, i16 855, i16 945, i16 948, i16 955, i16 964, i16 966, i16 969, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -147, i16 696, i16 726, i16 801, i16 820, i16 822, i16 928, i16 961, i16 1007, i16 1021, i16 1028, i16 1031, i16 1040, i16 1057, i16 1059, i16 1074, i16 1092, i16 1108, i16 1110, i16 1116, i16 1123, i16 1134, i16 1137, i16 1149, i16 1153, i16 1170, i16 1173, i16 1177, i16 1181, i16 1183, i16 1194, i16 1208, i16 1212, i16 1218, i16 1221, i16 1223, i16 1229, i16 1256, i16 1280, i16 1283, i16 1285, i16 1287, i16 1300, i16 1304, i16 1313, i16 1316, i16 1320, i16 1324, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -175, i16 -22, i16 394, i16 150, i16 220, i16 -180, i16 493, i16 663, i16 299, i16 493, i16 663, i16 193, i16 120, i16 336, i16 -264, i16 -264, i16 -264, i16 -264, i16 90, i16 90, i16 90, i16 436, i16 482, i16 8, i16 647, i16 889, i16 -160, i16 373, i16 -278, i16 554, i16 598, i16 653, i16 697, i16 717, i16 557, i16 393, i16 602, i16 723, i16 808, i16 450, i16 655, i16 802, i16 908, i16 916, i16 864, i16 1041, i16 868, i16 337, i16 870, i16 503, i16 1104, i16 552, i16 641, i16 -157, i16 32, i16 862, i16 968, i16 1050, i16 1195, i16 603, i16 1048, i16 963, i16 433, i16 -210, i16 -201, i16 -89, i16 -9, i16 55, i16 159, i16 320, i16 389, i16 454, i16 522, i16 594, i16 608, i16 666, i16 848, i16 924, i16 957, i16 1067, i16 1075, i16 1140, i16 1154, i16 747, i16 1167, i16 1191, i16 1220, i16 1222, i16 1226, i16 1239, i16 1263, i16 1275, i16 1286, i16 1290, i16 1146, i16 1234, i16 1269, i16 1319, i16 1330, i16 1349, i16 1358, i16 1228, i16 1364, i16 1365, i16 1366, i16 1271, i16 1022, i16 1371, i16 1379, i16 1338, i16 1382, i16 320, i16 1387, i16 1388, i16 1389, i16 1392, i16 1393, i16 1394, i16 1293, i16 1308, i16 1353, i16 1342, i16 1344, i16 1348, i16 1356, i16 1228, i16 1353, i16 1353, i16 1361, i16 1399, i16 1422, i16 1301, i16 1369, i16 1357, i16 1359, i16 1328, i16 1374, i16 1375, i16 1331, i16 1403, i16 1395, i16 1400, i16 1407, i16 1408, i16 1409, i16 1372, i16 1381, i16 1383, i16 1355, i16 1390, i16 1391, i16 1444, i16 1350, i16 1443, i16 1445, i16 1360, i16 1363, i16 1447, i16 1370, i16 1384, i16 1396, i16 1424, i16 1413, i16 1425, i16 1429, i16 1430, i16 1432, i16 1433, i16 1434, i16 1398, i16 1402, i16 1441, i16 1442, i16 1436, i16 1480, i16 1489, i16 1405, i16 1410, i16 1493, i16 1495, i16 1477, i16 1498, i16 1500, i16 1501, i16 1504, i16 1485, i16 1502, i16 1503, i16 1505, i16 1488, i16 1492, i16 1494, i16 1506, i16 1510, i16 1509, i16 1512, i16 1513, i16 1514, i16 1515, i16 1420, i16 1517, i16 1446, i16 1454, i16 1520, i16 1463, i16 1476, i16 1478, i16 1482, i16 1483, i16 1486, i16 1484, i16 1487, i16 1547, i16 1449, i16 1450, i16 1490, i16 1519, i16 1521, i16 1524, i16 1491, i16 1557, i16 1522, i16 1526, i16 1527, i16 1530, i16 1528, i16 1559, i16 1562, i16 1573, i16 1574, i16 1585, i16 1586, i16 1587, i16 1575, i16 1568, i16 1570, i16 1572, i16 1576, i16 1579, i16 1565, i16 1566, i16 1578, i16 1580, i16 1582, i16 1589], align 16
@yy_default = local_unnamed_addr constant [535 x i16] [i16 1523, i16 1523, i16 1372, i16 1523, i16 1149, i16 1258, i16 1149, i16 1149, i16 1149, i16 1372, i16 1372, i16 1372, i16 1149, i16 1288, i16 1288, i16 1425, i16 1180, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1371, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1297, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1373, i16 1374, i16 1149, i16 1149, i16 1149, i16 1424, i16 1426, i16 1389, i16 1307, i16 1306, i16 1305, i16 1304, i16 1407, i16 1275, i16 1302, i16 1295, i16 1299, i16 1367, i16 1368, i16 1366, i16 1370, i16 1374, i16 1373, i16 1149, i16 1298, i16 1338, i16 1352, i16 1337, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1346, i16 1351, i16 1357, i16 1350, i16 1347, i16 1340, i16 1339, i16 1341, i16 1342, i16 1149, i16 1222, i16 1149, i16 1149, i16 1149, i16 1149, i16 1436, i16 1435, i16 1170, i16 1149, i16 1149, i16 1180, i16 1332, i16 1331, i16 1343, i16 1344, i16 1354, i16 1353, i16 1432, i16 1483, i16 1482, i16 1390, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1180, i16 1448, i16 1448, i16 1176, i16 1176, i16 1282, i16 1149, i16 1258, i16 1249, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1429, i16 1427, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1254, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1477, i16 1149, i16 1402, i16 1236, i16 1254, i16 1254, i16 1254, i16 1254, i16 1256, i16 1237, i16 1235, i16 1248, i16 1181, i16 1156, i16 1521, i16 1301, i16 1277, i16 1277, i16 1518, i16 1301, i16 1301, i16 1518, i16 1197, i16 1499, i16 1192, i16 1288, i16 1288, i16 1288, i16 1277, i16 1282, i16 1282, i16 1369, i16 1255, i16 1248, i16 1149, i16 1521, i16 1263, i16 1263, i16 1520, i16 1520, i16 1263, i16 1390, i16 1310, i16 1316, i16 1225, i16 1301, i16 1231, i16 1231, i16 1231, i16 1231, i16 1301, i16 1301, i16 1310, i16 1316, i16 1225, i16 1225, i16 1301, i16 1263, i16 1167, i16 1406, i16 1515, i16 1263, i16 1167, i16 1380, i16 1263, i16 1167, i16 1263, i16 1167, i16 1380, i16 1223, i16 1223, i16 1223, i16 1212, i16 1149, i16 1149, i16 1380, i16 1223, i16 1197, i16 1223, i16 1212, i16 1223, i16 1223, i16 1466, i16 1380, i16 1384, i16 1384, i16 1380, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1263, i16 1458, i16 1458, i16 1291, i16 1291, i16 1296, i16 1282, i16 1375, i16 1263, i16 1149, i16 1296, i16 1294, i16 1292, i16 1301, i16 1173, i16 1215, i16 1480, i16 1480, i16 1476, i16 1476, i16 1476, i16 1492, i16 1180, i16 1180, i16 1180, i16 1180, i16 1492, i16 1199, i16 1199, i16 1181, i16 1181, i16 1180, i16 1492, i16 1149, i16 1149, i16 1149, i16 1149, i16 1487, i16 1391, i16 1267, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1321, i16 1149, i16 1152, i16 1149, i16 1149, i16 1433, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1268, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1517, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1405, i16 1404, i16 1149, i16 1149, i16 1265, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1195, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1293, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1463, i16 1283, i16 1149, i16 1149, i16 1508, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1503, i16 1239, i16 1323, i16 1149, i16 1322, i16 1326, i16 1149, i16 1161, i16 1149, i16 1149], align 16
@yyFallback = local_unnamed_addr constant <{ [100 x i16], [81 x i16] }> <{ [100 x i16] [i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 0, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59], [81 x i16] zeroinitializer }>, align 16
@.str.479 = private unnamed_addr constant [22 x i8] c"parser stack overflow\00", align 1
@yyRuleInfoLhs = local_unnamed_addr constant [372 x i16] [i16 185, i16 185, i16 184, i16 186, i16 187, i16 187, i16 187, i16 187, i16 186, i16 186, i16 186, i16 186, i16 186, i16 191, i16 193, i16 195, i16 195, i16 194, i16 194, i16 192, i16 192, i16 199, i16 199, i16 201, i16 203, i16 203, i16 203, i16 204, i16 208, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 219, i16 219, i16 215, i16 215, i16 217, i16 217, i16 220, i16 220, i16 220, i16 220, i16 221, i16 221, i16 221, i16 221, i16 221, i16 218, i16 218, i16 222, i16 222, i16 222, i16 198, i16 224, i16 225, i16 225, i16 225, i16 225, i16 225, i16 228, i16 213, i16 213, i16 229, i16 229, i16 230, i16 230, i16 186, i16 232, i16 232, i16 186, i16 186, i16 186, i16 200, i16 200, i16 200, i16 234, i16 237, i16 237, i16 237, i16 235, i16 235, i16 247, i16 247, i16 238, i16 238, i16 238, i16 249, i16 239, i16 239, i16 239, i16 250, i16 250, i16 240, i16 240, i16 252, i16 252, i16 251, i16 251, i16 251, i16 251, i16 196, i16 196, i16 233, i16 233, i16 258, i16 258, i16 258, i16 258, i16 253, i16 253, i16 253, i16 253, i16 255, i16 255, i16 254, i16 254, i16 254, i16 256, i16 256, i16 244, i16 244, i16 226, i16 226, i16 214, i16 214, i16 214, i16 260, i16 260, i16 260, i16 242, i16 242, i16 243, i16 243, i16 245, i16 245, i16 245, i16 245, i16 186, i16 241, i16 241, i16 186, i16 262, i16 262, i16 262, i16 262, i16 186, i16 186, i16 265, i16 265, i16 265, i16 265, i16 263, i16 263, i16 264, i16 264, i16 259, i16 259, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 267, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 268, i16 268, i16 212, i16 269, i16 269, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 272, i16 272, i16 273, i16 273, i16 271, i16 271, i16 257, i16 248, i16 248, i16 270, i16 270, i16 186, i16 274, i16 274, i16 216, i16 216, i16 227, i16 227, i16 275, i16 275, i16 186, i16 186, i16 186, i16 276, i16 276, i16 186, i16 186, i16 186, i16 186, i16 186, i16 206, i16 207, i16 186, i16 278, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 283, i16 283, i16 279, i16 279, i16 285, i16 286, i16 286, i16 284, i16 284, i16 284, i16 284, i16 212, i16 212, i16 231, i16 231, i16 231, i16 186, i16 186, i16 186, i16 288, i16 288, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 289, i16 186, i16 261, i16 261, i16 236, i16 236, i16 291, i16 291, i16 292, i16 293, i16 293, i16 293, i16 293, i16 293, i16 293, i16 294, i16 294, i16 294, i16 298, i16 300, i16 300, i16 301, i16 301, i16 299, i16 299, i16 302, i16 302, i16 303, i16 303, i16 303, i16 246, i16 266, i16 266, i16 266, i16 297, i16 297, i16 296, i16 181, i16 182, i16 182, i16 183, i16 183, i16 183, i16 188, i16 188, i16 188, i16 190, i16 190, i16 186, i16 197, i16 197, i16 189, i16 189, i16 189, i16 203, i16 204, i16 205, i16 205, i16 202, i16 202, i16 210, i16 210, i16 210, i16 198, i16 223, i16 223, i16 224, i16 228, i16 230, i16 234, i16 235, i16 249, i16 250, i16 212, i16 267, i16 257, i16 277, i16 277, i16 277, i16 277, i16 277, i16 206, i16 282, i16 282, i16 285, i16 286, i16 287, i16 287, i16 290, i16 290, i16 261], align 16
@yyRuleInfoNRhs = local_unnamed_addr constant [372 x i8] c"\FF\FD\FF\FD\00\FF\FF\FF\FE\FE\FE\FD\FB\FA\FF\00\FD\FF\00\FB\FE\00\FE\FE\00\FC\FA\FE\00\00\FE\FD\FC\FC\FC\FD\FD\FB\FE\FC\FC\FF\FE\FD\FC\00\FF\00\FE\FE\FD\FD\FD\FE\FE\FF\FF\FE\FD\FE\00\FE\FE\00\FF\FE\F9\FB\FB\F6\00\00\FD\00\FE\FF\FF\FC\FE\00\F7\FC\FF\FD\FC\FF\FD\FF\FE\FF\F7\F6\FC\FB\FF\FF\00\00\FB\FD\FB\FE\00\00\FE\FE\00\F9\F7\F9\F9\00\FE\FF\FD\FF\FD\FB\FD\FF\FE\FD\FC\FE\00\00\FD\FE\FC\00\00\FD\FB\FD\FF\FF\00\FE\FE\00\00\FD\00\FE\00\FE\FC\FC\FA\00\FE\F8\FB\F9\FD\FB\F9\F9\00\F5\F8\FC\FE\FF\00\FD\FD\FF\FD\FF\FF\FD\FB\FF\FF\FF\FF\FD\FA\FB\FC\FA\FB\FF\FB\FD\FD\FD\FD\FD\FD\FD\FD\FE\FD\FB\FE\FD\FD\FC\FE\FE\FE\FF\FE\FB\FF\FE\FB\FD\FB\FB\FC\FB\FB\FC\FE\00\FF\00\00\FD\FF\00\FD\F4\FF\00\00\FD\FB\FD\00\FE\FC\FE\FD\FE\00\FD\FB\FA\FB\FA\FE\FE\FB\F5\FF\FE\00\FF\FF\FD\00\FE\FD\FE\FD\FD\FE\F8\F8\FA\FD\FC\FA\FF\FF\FF\FC\FA\FD\00\FE\FF\FD\FF\FD\FA\F9\FF\F8\FE\FD\FA\F8\FF\FD\FB\FB\FA\FC\FB\FF\FE\00\FD\FA\FF\FF\FE\FF\FE\FE\FE\00\FE\FE\FE\FF\FE\FE\FF\FF\FC\FE\FB\FF\FE\FF\FF\FE\FD\00\FF\FE\FF\00\FE\FC\FE\FF\FF\FF\FF\FF\FF\FF\FE\00\FE\FC\FE\FE\FD\FF\00\FF\FF\FF\FF\FE\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FD\FF\00\FF\00\00\FF\00", align 16
@.str.480 = private unnamed_addr constant [27 x i8] c"unknown table option: %.*s\00", align 1
@__const.yy_reduce.dest = private unnamed_addr constant %struct.SelectDest { i8 9, i32 0, i32 0, i32 0, i8* null, %struct.ExprList* null }, align 8
@.str.481 = private unnamed_addr constant [9 x i8] c"set list\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"near \22%T\22: syntax error\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.484 = private unnamed_addr constant [95 x i8] c"qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\00", align 1
@.str.485 = private unnamed_addr constant [84 x i8] c"the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.486 = private unnamed_addr constant [85 x i8] c"the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@aiClass = local_unnamed_addr constant [256 x i8] calign 16
@zKWText = constant [647 x i8] c"REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEAFTERENAMEANDEFERREDISTINCTAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPARTITIONDROPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY", align 16
@aKWHash = local_unnamed_addr constant [127 x i8] c"Tf\84Rr\1D\00\00[\00UH\005#V\0F\00*^6~\85\13\00\00\8A\00(\80\00\16h\00\09\00\00zP\00N\06\00Ac\91\00\86p\00\000\00d\18\00\11\00\1BF\17\1A\05<\8Cky\00IeG\8F=wJ\001\00\0B)\00n\00\00\00j\0Alq|\0E2{\00Y\00\12x\8E8\81\89XS%\1E}\00\00i3\82\7F\00\22\00\00,\00_&'\00\14-tZ", align 16
@aKWNext = local_unnamed_addr constant [145 x i8] c"\00\00\00\00\04\00+\00\00go\00\00\00\02\00\00\8D\00\00\00\0D\00\00\00\00\8B\00\00v4\00\00\87\0C\00\00>\00\88\00\83\00\00$\00\00\1CM\00\00\00\00;\00/\00\00\00\00\00\00\00\00\00\00E\00\00\00\00\00\90\03\00:\00\01K\00\00\00\1F\00\00\00\00\00\00@B?\00\00\00\00.\00\10\00s\00\00\00\00\00\00\00\00\00\00Qa\00\08\00m\15\07C\00O]u\00\00D\00\00`\007\00L\00\\ !9\19\00b\00\00W", align 16
@aKWLen = local_unnamed_addr constant [145 x i8] c"\07\07\05\04\06\04\05\03\06\07\03\06\06\07\07\03\08\02\06\05\04\04\03\0A\04\07\06\09\04\02\06\05\09\09\04\07\03\02\04\04\06\0B\06\02\07\05\05\09\06\0A\04\06\02\03\07\05\09\06\06\04\05\05\0A\06\05\07\04\05\07\06\07\07\06\05\07\03\07\04\07\06\0C\09\04\06\05\04\07\06\05\06\06\07\06\04\05\09\05\06\03\08\08\02\0D\02\02\04\06\06\08\05\11\0C\07\09\04\09\04\04\06\07\05\09\04\04\05\02\05\08\06\04\05\08\04\03\09\05\05\06\04\06\02\02\09\03\07", align 16
@aKWOffset = local_unnamed_addr constant [145 x i16] [i16 0, i16 2, i16 2, i16 8, i16 9, i16 14, i16 16, i16 20, i16 23, i16 25, i16 25, i16 29, i16 33, i16 36, i16 41, i16 46, i16 48, i16 53, i16 54, i16 59, i16 62, i16 65, i16 67, i16 69, i16 78, i16 81, i16 86, i16 90, i16 90, i16 94, i16 99, i16 101, i16 105, i16 111, i16 119, i16 123, i16 123, i16 123, i16 126, i16 129, i16 132, i16 137, i16 142, i16 146, i16 147, i16 152, i16 156, i16 160, i16 168, i16 174, i16 181, i16 184, i16 184, i16 187, i16 189, i16 195, i16 198, i16 206, i16 211, i16 216, i16 219, i16 222, i16 226, i16 236, i16 239, i16 244, i16 244, i16 248, i16 252, i16 259, i16 265, i16 271, i16 277, i16 277, i16 283, i16 284, i16 288, i16 295, i16 299, i16 306, i16 312, i16 324, i16 333, i16 335, i16 341, i16 346, i16 348, i16 355, i16 360, i16 365, i16 371, i16 377, i16 382, i16 388, i16 392, i16 395, i16 404, i16 408, i16 414, i16 416, i16 423, i16 424, i16 431, i16 433, i16 435, i16 444, i16 448, i16 454, i16 460, i16 468, i16 473, i16 473, i16 473, i16 489, i16 498, i16 501, i16 510, i16 513, i16 517, i16 522, i16 529, i16 534, i16 543, i16 547, i16 550, i16 555, i16 557, i16 561, i16 569, i16 575, i16 578, i16 583, i16 591, i16 591, i16 595, i16 604, i16 609, i16 614, i16 620, i16 623, i16 626, i16 629, i16 631, i16 636, i16 640], align 16
@aKWCode = local_unnamed_addr constant [145 x i8] c"ar\9E':)zC!\82>?/\02A\A0&\18\88\10t\9C\0B\81\9D[~\15\15+2R\0D\87^3\13Bw/\86\06\1Cqt\9FG\09\14u\94ED\80MY_(\91/\05t{y\03\19Qt\0E 0\95\\\90#\1Fv\9Ao\11c\08\8D}.\04\1EF\1B\7F\89P`\9B\93H\1Db,\07\8A-|\0F1$<\0A%tccUW\83X*T\A3ISV\8Ct\92\12\8FJ]\A2t\0CLKZ\84\8ENO\A1=\22@\85x", align 16
@sqlite3_complete.trans = internal unnamed_addr constant [8 x [8 x i8]] [[8 x i8] c"\01\00\02\03\04\02\02\02", [8 x i8] c"\01\01\02\03\04\02\02\02", [8 x i8] c"\01\02\02\02\02\02\02\02", [8 x i8] c"\01\03\03\02\04\02\02\02", [8 x i8] c"\01\04\02\02\02\04\05\02", [8 x i8] c"\06\05\05\05\05\05\05\05", [8 x i8] c"\06\06\05\05\05\05\05\07", [8 x i8] c"\01\07\05\05\05\05\05\05"], align 16
@.str.488 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.489 = private unnamed_addr constant [8 x i8] c"trigger\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.491 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.493 = private unnamed_addr constant [8 x i8] c"explain\00", align 1
@sqlite3_data_directory = local_unnamed_addr global i8* null, align 8
@sqlite3BuiltinFunctions = internal unnamed_addr global %struct.FuncDefHash zeroinitializer, align 8
@sqlite3_db_config.aFlagOp = internal unnamed_addr constant [16 x %struct.anon.22] [%struct.anon.22 { i32 1002, i32 16384 }, %struct.anon.22 { i32 1003, i32 262144 }, %struct.anon.22 { i32 1015, i32 -2147483648 }, %struct.anon.22 { i32 1004, i32 4194304 }, %struct.anon.22 { i32 1005, i32 65536 }, %struct.anon.22 { i32 1006, i32 2048 }, %struct.anon.22 { i32 1007, i32 8388608 }, %struct.anon.22 { i32 1008, i32 16777216 }, %struct.anon.22 { i32 1009, i32 33554432 }, %struct.anon.22 { i32 1010, i32 268435456 }, %struct.anon.22 { i32 1011, i32 134217729 }, %struct.anon.22 { i32 1012, i32 67108864 }, %struct.anon.22 { i32 1014, i32 536870912 }, %struct.anon.22 { i32 1013, i32 1073741824 }, %struct.anon.22 { i32 1016, i32 2 }, %struct.anon.22 { i32 1017, i32 128 }], align 16
@.str.494 = private unnamed_addr constant [21 x i8] c"unknown database: %s\00", align 1
@sqlite3_errmsg16.outOfMem = internal constant [14 x i16] [i16 111, i16 117, i16 116, i16 32, i16 111, i16 102, i16 32, i16 109, i16 101, i16 109, i16 111, i16 114, i16 121, i16 0], align 16
@sqlite3_errmsg16.misuse = internal constant [34 x i16] [i16 98, i16 97, i16 100, i16 32, i16 112, i16 97, i16 114, i16 97, i16 109, i16 101, i16 116, i16 101, i16 114, i16 32, i16 111, i16 114, i16 32, i16 111, i16 116, i16 104, i16 101, i16 114, i16 32, i16 65, i16 80, i16 73, i16 32, i16 109, i16 105, i16 115, i16 117, i16 115, i16 101, i16 0], align 16
@.str.495 = private unnamed_addr constant [68 x i8] c"unable to delete/modify collation sequence due to active statements\00", align 1
@aHardLimit = constant [12 x i32] [i32 1000000000, i32 1000000000, i32 2000, i32 1000, i32 500, i32 250000000, i32 127, i32 10, i32 50000, i32 32766, i32 1000, i32 8], align 16
@.str.496 = private unnamed_addr constant [6 x i8] c"RTRIM\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.498 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.499 = private unnamed_addr constant [28 x i8] c"no such table column: %s.%s\00", align 1
@.str.500 = private unnamed_addr constant [8 x i8] c"SQLITE_\00", align 1
@.str.501 = private unnamed_addr constant [85 x i8] c"2020-03-11 19:56:26 c5f96a085db9688a09793f52ce1ecf033c2e6e2e5873a19fe0fb374b242balt1\00", align 1
@_sqliteZone_ = local_unnamed_addr global %struct._malloc_zone_t* null, align 8
@top_of_stack = local_unnamed_addr global i64 0, align 8
@sqlite3Utf8Trans1 = internal unnamed_addr constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\00\01\02\03\00\01\00\00", align 16
@sqlite3PagerFilename.zFake = internal constant [8 x i8] zeroinitializer, align 1
@sqlite3VdbeSerialGet.aFlag = internal unnamed_addr constant [2 x i16] [i16 4112, i16 4098], align 2
@.str.502 = private unnamed_addr constant [19 x i8] c"a CHECK constraint\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"a generated column\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"an index\00", align 1
@.str.505 = private unnamed_addr constant [36 x i8] c"non-deterministic use of %s() in %s\00", align 1
@.str.506 = private unnamed_addr constant [35 x i8] c"sqlite3VdbeRealValue: NO FLAG SET\0A\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@sqlite3OpcodeName.azName = internal unnamed_addr constant [176 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.683, i32 0, i32 0)], align 16
@.str.508 = private unnamed_addr constant [10 x i8] c"Savepoint\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"AutoCommit\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"Transaction\00", align 1
@.str.511 = private unnamed_addr constant [11 x i8] c"SorterNext\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"Next\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"Checkpoint\00", align 1
@.str.515 = private unnamed_addr constant [12 x i8] c"JournalMode\00", align 1
@.str.516 = private unnamed_addr constant [7 x i8] c"Vacuum\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"VFilter\00", align 1
@.str.518 = private unnamed_addr constant [8 x i8] c"VUpdate\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"Gosub\00", align 1
@.str.521 = private unnamed_addr constant [14 x i8] c"InitCoroutine\00", align 1
@.str.522 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"MustBeInt\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Once\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"IfNot\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"IfNullRow\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"SeekLT\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"SeekLE\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"SeekGE\00", align 1
@.str.533 = private unnamed_addr constant [7 x i8] c"SeekGT\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"IfNotOpen\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"IfNoHope\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"NoConflict\00", align 1
@.str.537 = private unnamed_addr constant [9 x i8] c"NotFound\00", align 1
@.str.538 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"SeekRowid\00", align 1
@.str.540 = private unnamed_addr constant [10 x i8] c"NotExists\00", align 1
@.str.541 = private unnamed_addr constant [5 x i8] c"Last\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"IfSmaller\00", align 1
@.str.543 = private unnamed_addr constant [11 x i8] c"SorterSort\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"Sort\00", align 1
@.str.545 = private unnamed_addr constant [7 x i8] c"Rewind\00", align 1
@.str.546 = private unnamed_addr constant [6 x i8] c"IdxLE\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"IdxGT\00", align 1
@.str.548 = private unnamed_addr constant [6 x i8] c"IdxLT\00", align 1
@.str.549 = private unnamed_addr constant [6 x i8] c"IdxGE\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"RowSetRead\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.553 = private unnamed_addr constant [11 x i8] c"RowSetTest\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"Program\00", align 1
@.str.555 = private unnamed_addr constant [9 x i8] c"FkIfZero\00", align 1
@.str.556 = private unnamed_addr constant [6 x i8] c"IfPos\00", align 1
@.str.557 = private unnamed_addr constant [10 x i8] c"IfNotZero\00", align 1
@.str.558 = private unnamed_addr constant [7 x i8] c"IsNull\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"NotNull\00", align 1
@.str.560 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@.str.561 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@.str.562 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Le\00", align 1
@.str.564 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@.str.565 = private unnamed_addr constant [3 x i8] c"Ge\00", align 1
@.str.566 = private unnamed_addr constant [10 x i8] c"ElseNotEq\00", align 1
@.str.567 = private unnamed_addr constant [13 x i8] c"DecrJumpZero\00", align 1
@.str.568 = private unnamed_addr constant [11 x i8] c"IncrVacuum\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"VNext\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"PureFunc\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.573 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"EndCoroutine\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"HaltIfNull\00", align 1
@.str.576 = private unnamed_addr constant [5 x i8] c"Halt\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"Int64\00", align 1
@.str.579 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.581 = private unnamed_addr constant [9 x i8] c"SoftNull\00", align 1
@.str.582 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"Variable\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.585 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"SCopy\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"IntCopy\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"ResultRow\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"CollSeq\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"AddImm\00", align 1
@.str.591 = private unnamed_addr constant [13 x i8] c"RealAffinity\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"Cast\00", align 1
@.str.593 = private unnamed_addr constant [12 x i8] c"Permutation\00", align 1
@.str.594 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.595 = private unnamed_addr constant [7 x i8] c"IsTrue\00", align 1
@.str.596 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"Column\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"Affinity\00", align 1
@.str.599 = private unnamed_addr constant [11 x i8] c"MakeRecord\00", align 1
@.str.600 = private unnamed_addr constant [6 x i8] c"Count\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"ReadCookie\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"SetCookie\00", align 1
@.str.603 = private unnamed_addr constant [10 x i8] c"ReopenIdx\00", align 1
@.str.604 = private unnamed_addr constant [9 x i8] c"OpenRead\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"OpenWrite\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"OpenDup\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"OpenAutoindex\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"OpenEphemeral\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@.str.610 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"ShiftLeft\00", align 1
@.str.612 = private unnamed_addr constant [11 x i8] c"ShiftRight\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"Remainder\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"Concat\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"SorterOpen\00", align 1
@.str.620 = private unnamed_addr constant [7 x i8] c"BitNot\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"SequenceTest\00", align 1
@.str.622 = private unnamed_addr constant [11 x i8] c"OpenPseudo\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"String8\00", align 1
@.str.624 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"ColumnsUsed\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"SeekHit\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.628 = private unnamed_addr constant [9 x i8] c"NewRowid\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"ResetCount\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"SorterCompare\00", align 1
@.str.633 = private unnamed_addr constant [11 x i8] c"SorterData\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"RowData\00", align 1
@.str.635 = private unnamed_addr constant [6 x i8] c"Rowid\00", align 1
@.str.636 = private unnamed_addr constant [8 x i8] c"NullRow\00", align 1
@.str.637 = private unnamed_addr constant [8 x i8] c"SeekEnd\00", align 1
@.str.638 = private unnamed_addr constant [10 x i8] c"IdxInsert\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"SorterInsert\00", align 1
@.str.640 = private unnamed_addr constant [10 x i8] c"IdxDelete\00", align 1
@.str.641 = private unnamed_addr constant [13 x i8] c"DeferredSeek\00", align 1
@.str.642 = private unnamed_addr constant [9 x i8] c"IdxRowid\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"FinishSeek\00", align 1
@.str.644 = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.645 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.646 = private unnamed_addr constant [12 x i8] c"ResetSorter\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"CreateBtree\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"SqlExec\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"ParseSchema\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"LoadAnalysis\00", align 1
@.str.651 = private unnamed_addr constant [10 x i8] c"DropTable\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"DropIndex\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"DropTrigger\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"IntegrityCk\00", align 1
@.str.655 = private unnamed_addr constant [10 x i8] c"RowSetAdd\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@.str.657 = private unnamed_addr constant [10 x i8] c"FkCounter\00", align 1
@.str.658 = private unnamed_addr constant [5 x i8] c"Real\00", align 1
@.str.659 = private unnamed_addr constant [7 x i8] c"MemMax\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"OffsetLimit\00", align 1
@.str.661 = private unnamed_addr constant [11 x i8] c"AggInverse\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"AggStep\00", align 1
@.str.663 = private unnamed_addr constant [9 x i8] c"AggStep1\00", align 1
@.str.664 = private unnamed_addr constant [9 x i8] c"AggValue\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"AggFinal\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"Expire\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"CursorLock\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"CursorUnlock\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"TableLock\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"VBegin\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"VCreate\00", align 1
@.str.672 = private unnamed_addr constant [9 x i8] c"VDestroy\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"VOpen\00", align 1
@.str.674 = private unnamed_addr constant [8 x i8] c"VColumn\00", align 1
@.str.675 = private unnamed_addr constant [8 x i8] c"VRename\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"Pagecount\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"MaxPgcnt\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"Trace\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"CursorHint\00", align 1
@.str.680 = private unnamed_addr constant [11 x i8] c"ReleaseReg\00", align 1
@.str.681 = private unnamed_addr constant [5 x i8] c"Noop\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"Explain\00", align 1
@.str.683 = private unnamed_addr constant [10 x i8] c"Abortable\00", align 1
@sqlite3VdbeExec.azType = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0)], align 16
@.str.684 = private unnamed_addr constant [9 x i8] c"NOT NULL\00", align 1
@.str.685 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@.str.686 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"FOREIGN KEY\00", align 1
@.str.688 = private unnamed_addr constant [21 x i8] c"%s constraint failed\00", align 1
@.str.689 = private unnamed_addr constant [7 x i8] c"%z: %s\00", align 1
@.str.690 = private unnamed_addr constant [24 x i8] c"abort at %d in [%s]: %s\00", align 1
@sqlite3VdbeExec.aLTb = internal unnamed_addr constant [6 x i8] c"\01\00\00\01\01\00", align 1
@sqlite3VdbeExec.aEQb = internal unnamed_addr constant [6 x i8] c"\00\01\00\01\00\01", align 1
@sqlite3VdbeExec.aGTb = internal unnamed_addr constant [6 x i8] c"\01\00\01\00\00\01", align 1
@sqlite3VdbeExec.and_logic = internal unnamed_addr constant [9 x i8] c"\00\00\00\00\01\02\00\02\02", align 1
@sqlite3VdbeExec.or_logic = internal unnamed_addr constant [9 x i8] c"\00\01\02\01\01\01\02\01\02", align 1
@sqlite3VdbeExec.aFlag = internal unnamed_addr constant [2 x i16] [i16 16, i16 514], align 2
@.str.691 = private unnamed_addr constant [51 x i8] c"cannot open savepoint - SQL statements in progress\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"no such savepoint: %s\00", align 1
@.str.693 = private unnamed_addr constant [54 x i8] c"cannot release savepoint - SQL statements in progress\00", align 1
@.str.694 = private unnamed_addr constant [55 x i8] c"cannot commit transaction - SQL statements in progress\00", align 1
@.str.695 = private unnamed_addr constant [48 x i8] c"cannot start a transaction within a transaction\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"cannot rollback - no transaction is active\00", align 1
@.str.697 = private unnamed_addr constant [41 x i8] c"cannot commit - no transaction is active\00", align 1
@.str.698 = private unnamed_addr constant [28 x i8] c"database schema has changed\00", align 1
@.str.699 = private unnamed_addr constant [43 x i8] c"SELECT*FROM\22%w\22.%s WHERE %s ORDER BY rowid\00", align 1
@.str.700 = private unnamed_addr constant [37 x i8] c"too many levels of trigger recursion\00", align 1
@.str.701 = private unnamed_addr constant [52 x i8] c"cannot change %s wal mode from within a transaction\00", align 1
@.str.702 = private unnamed_addr constant [5 x i8] c"into\00", align 1
@.str.703 = private unnamed_addr constant [7 x i8] c"out of\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"database table is locked: %s\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"statement aborts at %d: [%s] %s\00", align 1
@sqlite3BtreeFakeValidCursor.fakeCursor = internal global i8 0, align 1
@.str.706 = private unnamed_addr constant [19 x i8] c"sqlite_temp_master\00", align 1
@.str.707 = private unnamed_addr constant [72 x i8] c"CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\00", align 1
@.str.708 = private unnamed_addr constant [24 x i8] c"unsupported file format\00", align 1
@.str.709 = private unnamed_addr constant [34 x i8] c"SELECT*FROM\22%w\22.%s ORDER BY rowid\00", align 1
@.str.710 = private unnamed_addr constant [8 x i8] c"create \00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"invalid rootpage\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"orphan index\00", align 1
@.str.713 = private unnamed_addr constant [30 x i8] c"database schema is locked: %s\00", align 1
@.str.714 = private unnamed_addr constant [19 x i8] c"statement too long\00", align 1
@.str.715 = private unnamed_addr constant [41 x i8] c"SELECT tbl,idx,stat FROM %Q.sqlite_stat1\00", align 1
@__const.sqlite3DefaultRowEst.aVal = private unnamed_addr constant [5 x i16] [i16 33, i16 32, i16 30, i16 28, i16 26], align 2
@.str.716 = private unnamed_addr constant [16 x i8] c"Main freelist: \00", align 1
@.str.717 = private unnamed_addr constant [45 x i8] c"max rootpage (%d) disagrees with header (%d)\00", align 1
@.str.718 = private unnamed_addr constant [55 x i8] c"incremental_vacuum enabled with a max rootpage of zero\00", align 1
@.str.719 = private unnamed_addr constant [22 x i8] c"Page %d is never used\00", align 1
@.str.720 = private unnamed_addr constant [34 x i8] c"Pointer map page %d is referenced\00", align 1
@sqlite3JournalModename.azModeName = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.725, i32 0, i32 0)], align 16
@.str.721 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.723 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.724 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.725 = private unnamed_addr constant [4 x i8] c"wal\00", align 1
@.str.726 = private unnamed_addr constant [40 x i8] c"cannot VACUUM from within a transaction\00", align 1
@.str.727 = private unnamed_addr constant [43 x i8] c"cannot VACUUM - SQL statements in progress\00", align 1
@.str.728 = private unnamed_addr constant [18 x i8] c"non-text filename\00", align 1
@.str.729 = private unnamed_addr constant [23 x i8] c"ATTACH %Q AS vacuum_db\00", align 1
@.str.730 = private unnamed_addr constant [27 x i8] c"output file already exists\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.732 = private unnamed_addr constant [108 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\00", align 1
@.str.733 = private unnamed_addr constant [54 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='index'\00", align 1
@.str.734 = private unnamed_addr constant [151 x i8] c"SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\22%w\22.'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\00", align 1
@.str.735 = private unnamed_addr constant [130 x i8] c"INSERT INTO vacuum_db.sqlite_master SELECT*FROM \22%w\22.sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\00", align 1
@sqlite3RunVacuum.aCopy = internal unnamed_addr constant [10 x i8] c"\01\01\03\00\05\00\06\00\08\00", align 1
@sqlite3OpcodeProperty = internal unnamed_addr constant [176 x i8] calign 16
@sqlite3VdbeMakeReady.azColName = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0)], align 16
@.str.736 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.737 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.738 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.739 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.740 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.741 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@.str.742 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@.str.743 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.744 = private unnamed_addr constant [8 x i8] c"notused\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.746 = private unnamed_addr constant [31 x i8] c"too many terms in %s BY clause\00", align 1
@.str.747 = private unnamed_addr constant [48 x i8] c"Expression tree is too large (maximum depth %d)\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"unsafe use of %s()\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.750 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.751 = private unnamed_addr constant [8 x i8] c"_ROWID_\00", align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"ROWID\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"REUSE SUBQUERY %d\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"%sSCALAR SUBQUERY %d\00", align 1
@.str.756 = private unnamed_addr constant [12 x i8] c"CORRELATED \00", align 1
@sqlite3VdbeGetOp.dummy = internal global %struct.VdbeOp zeroinitializer, align 8
@sqlite3ExprCodeTarget.zAff = internal constant [8 x i8] c"B\00C\00D\00E\00", align 1
@.str.757 = private unnamed_addr constant [30 x i8] c"generated column loop on \22%s\22\00", align 1
@.str.758 = private unnamed_addr constant [26 x i8] c"misuse of aggregate: %s()\00", align 1
@.str.759 = private unnamed_addr constant [23 x i8] c"unknown function: %s()\00", align 1
@.str.760 = private unnamed_addr constant [30 x i8] c"%d columns assigned %d values\00", align 1
@.str.761 = private unnamed_addr constant [50 x i8] c"RAISE() may only be used within a trigger-program\00", align 1
@.str.762 = private unnamed_addr constant [44 x i8] c"sub-select returns %d columns - expected %d\00", align 1
@.str.763 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@sqlite3LogEst.a = internal unnamed_addr constant [8 x i16] [i16 0, i16 2, i16 3, i16 5, i16 6, i16 7, i16 8, i16 9], align 16
@.str.764 = private unnamed_addr constant [9 x i8] c":memory:\00", align 1
@.str.767 = private unnamed_addr constant [7 x i8] c"nolock\00", align 1
@.str.768 = private unnamed_addr constant [10 x i8] c"immutable\00", align 1
@.str.769 = private unnamed_addr constant [6 x i8] c"%s.%z\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"access to %z is prohibited\00", align 1
@.str.771 = private unnamed_addr constant [13 x i8] c"no such view\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"no such table\00", align 1
@.str.773 = private unnamed_addr constant [30 x i8] c"view %s is circularly defined\00", align 1
@.str.774 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.775 = private unnamed_addr constant [50 x i8] c"cannot create a TEMP index on non-TEMP table \22%s\22\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"table %s may not be indexed\00", align 1
@.str.777 = private unnamed_addr constant [25 x i8] c"views may not be indexed\00", align 1
@.str.778 = private unnamed_addr constant [34 x i8] c"there is already a table named %s\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"index %s already exists\00", align 1
@.str.780 = private unnamed_addr constant [23 x i8] c"sqlite_autoindex_%s_%d\00", align 1
@.str.781 = private unnamed_addr constant [61 x i8] c"expressions prohibited in PRIMARY KEY and UNIQUE constraints\00", align 1
@.str.782 = private unnamed_addr constant [42 x i8] c"conflicting ON CONFLICT clauses specified\00", align 1
@.str.783 = private unnamed_addr constant [20 x i8] c"CREATE%s INDEX %.*s\00", align 1
@.str.784 = private unnamed_addr constant [8 x i8] c" UNIQUE\00", align 1
@.str.785 = private unnamed_addr constant [48 x i8] c"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\00", align 1
@.str.786 = private unnamed_addr constant [27 x i8] c"name='%q' AND type='index'\00", align 1
@.str.787 = private unnamed_addr constant [28 x i8] c"unsupported use of NULLS %s\00", align 1
@.str.788 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.789 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"corrupt database\00", align 1
@.str.791 = private unnamed_addr constant [20 x i8] c"unknown database %T\00", align 1
@.str.792 = private unnamed_addr constant [46 x i8] c"%s %T cannot reference objects in database %s\00", align 1
@.str.793 = private unnamed_addr constant [24 x i8] c"%s cannot use variables\00", align 1
@.str.794 = private unnamed_addr constant [42 x i8] c"object name reserved for internal use: %s\00", align 1
@.str.795 = private unnamed_addr constant [70 x i8] c"unable to open a temporary database file for storing temporary tables\00", align 1
@.str.796 = private unnamed_addr constant [11 x i8] c"index '%q'\00", align 1
@.str.797 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.798 = private unnamed_addr constant [31 x i8] c"no such collation sequence: %s\00", align 1
@.str.799 = private unnamed_addr constant [45 x i8] c"foreign key mismatch - \22%w\22 referencing \22%w\22\00", align 1
@.str.800 = private unnamed_addr constant [9 x i8] c"%s.rowid\00", align 1
@.str.801 = private unnamed_addr constant [9 x i8] c"unopened\00", align 1
@.str.802 = private unnamed_addr constant [6 x i8] c"dylib\00", align 1
@.str.803 = private unnamed_addr constant [23 x i8] c"sqlite3_extension_init\00", align 1
@.str.804 = private unnamed_addr constant [35 x i8] c"unable to open shared library [%s]\00", align 1
@.str.806 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.807 = private unnamed_addr constant [6 x i8] c"_init\00", align 1
@.str.808 = private unnamed_addr constant [43 x i8] c"no entry point [%s] in shared library [%s]\00", align 1
@sqlite3Apis = external dso_local constant %struct.sqlite3_api_routines, align 8
@.str.809 = private unnamed_addr constant [32 x i8] c"error during initialization: %s\00", align 1
@sqlite3LogEstAdd.x = internal unnamed_addr constant [32 x i8] c"\0A\0A\09\09\08\08\07\07\07\06\06\06\05\05\05\04\04\04\04\03\03\03\03\03\03\02\02\02\02\02\02\02", align 16
@.str.810 = private unnamed_addr constant [46 x i8] c"all VALUES must have the same number of terms\00", align 1
@.str.811 = private unnamed_addr constant [82 x i8] c"SELECTs to the left and right of %s do not have the same number of result columns\00", align 1
@.str.812 = private unnamed_addr constant [36 x i8] c"too many FROM clause terms, max: %d\00", align 1
@.str.813 = private unnamed_addr constant [36 x i8] c"a JOIN clause is required before %s\00", align 1
@.str.814 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.815 = private unnamed_addr constant [6 x i8] c"USING\00", align 1
@.str.816 = private unnamed_addr constant [8 x i8] c"%.*z:%u\00", align 1
@.str.817 = private unnamed_addr constant [12 x i8] c"subquery_%u\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"no such index: %s\00", align 1
@.str.819 = private unnamed_addr constant [40 x i8] c"expected %d columns for '%s' but got %d\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"CO-ROUTINE %u\00", align 1
@.str.821 = private unnamed_addr constant [15 x i8] c"MATERIALIZE %u\00", align 1
@.str.822 = private unnamed_addr constant [9 x i8] c"DISTINCT\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"GROUP BY\00", align 1
@.str.824 = private unnamed_addr constant [23 x i8] c"RIGHT PART OF ORDER BY\00", align 1
@.str.825 = private unnamed_addr constant [41 x i8] c"cannot INSERT into generated column \22%s\22\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"table %S has no column named %s\00", align 1
@.str.827 = private unnamed_addr constant [52 x i8] c"table %S has %d columns but %d values were supplied\00", align 1
@.str.828 = private unnamed_addr constant [25 x i8] c"%d values for %d columns\00", align 1
@.str.829 = private unnamed_addr constant [21 x i8] c"cannot UPSERT a view\00", align 1
@.str.830 = private unnamed_addr constant [14 x i8] c"rows inserted\00", align 1
@.str.831 = private unnamed_addr constant [29 x i8] c"table %s may not be modified\00", align 1
@.str.832 = private unnamed_addr constant [38 x i8] c"cannot modify %s because it is a view\00", align 1
@.str.833 = private unnamed_addr constant [71 x i8] c"ON CONFLICT clause does not match any PRIMARY KEY or UNIQUE constraint\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"rows deleted\00", align 1
@.str.835 = private unnamed_addr constant [36 x i8] c"cannot UPDATE generated column \22%s\22\00", align 1
@.str.836 = private unnamed_addr constant [19 x i8] c"no such column: %s\00", align 1
@.str.837 = private unnamed_addr constant [13 x i8] c"rows updated\00", align 1
@.str.838 = private unnamed_addr constant [47 x i8] c"USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR\00", align 1
@.str.839 = private unnamed_addr constant [31 x i8] c"USING INDEX %s FOR IN-OPERATOR\00", align 1
@.str.840 = private unnamed_addr constant [23 x i8] c"REUSE LIST SUBQUERY %d\00", align 1
@.str.841 = private unnamed_addr constant [19 x i8] c"%sLIST SUBQUERY %d\00", align 1
@.str.842 = private unnamed_addr constant [28 x i8] c"at most %d tables in a join\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"SCAN CONSTANT ROW\00", align 1
@.str.844 = private unnamed_addr constant [36 x i8] c"too many arguments on %s() - max %d\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1
@.str.846 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c" SUBQUERY %u\00", align 1
@.str.848 = private unnamed_addr constant [10 x i8] c" TABLE %s\00", align 1
@.str.849 = private unnamed_addr constant [7 x i8] c" AS %s\00", align 1
@.str.850 = private unnamed_addr constant [12 x i8] c"PRIMARY KEY\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"AUTOMATIC PARTIAL COVERING INDEX\00", align 1
@.str.852 = private unnamed_addr constant [25 x i8] c"AUTOMATIC COVERING INDEX\00", align 1
@.str.853 = private unnamed_addr constant [18 x i8] c"COVERING INDEX %s\00", align 1
@.str.854 = private unnamed_addr constant [9 x i8] c"INDEX %s\00", align 1
@.str.855 = private unnamed_addr constant [8 x i8] c" USING \00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.857 = private unnamed_addr constant [14 x i8] c">? AND rowid<\00", align 1
@.str.858 = private unnamed_addr constant [38 x i8] c" USING INTEGER PRIMARY KEY (rowid%s?)\00", align 1
@__const.sqlite3WhereCodeOneLoopStart.aMoveOp = private unnamed_addr constant [4 x i8] c"\19\17\16\18", align 1
@sqlite3WhereCodeOneLoopStart.aStartOp = internal unnamed_addr constant [8 x i8] c"\00\00%!\19\16\18\17", align 1
@sqlite3WhereCodeOneLoopStart.aEndOp = internal unnamed_addr constant [4 x i8] c")'&(", align 1
@.str.859 = private unnamed_addr constant [15 x i8] c"MULTI-INDEX OR\00", align 1
@.str.860 = private unnamed_addr constant [9 x i8] c"INDEX %d\00", align 1
@sqlite3WhereCodeOneLoopStart.aStep = internal unnamed_addr constant [2 x i8] c"\05\04", align 1
@sqlite3WhereCodeOneLoopStart.aStart = internal unnamed_addr constant [2 x i8] c"%!", align 1
@.str.861 = private unnamed_addr constant [71 x i8] c"RANGE with offset PRECEDING/FOLLOWING requires one ORDER BY expression\00", align 1
@.str.862 = private unnamed_addr constant [63 x i8] c"FILTER clause may only be used with aggregate window functions\00", align 1
@__const.sqlite3WindowUpdate.aUp = private unnamed_addr constant [8 x %struct.WindowUpdate] [%struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @row_numberName, i32 0, i32 0), i32 76, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @dense_rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @percent_rankName, i32 0, i32 0), i32 92, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @cume_distName, i32 0, i32 0), i32 92, i32 86, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ntileName, i32 0, i32 0), i32 76, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @leadName, i32 0, i32 0), i32 76, i32 90, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @lagName, i32 0, i32 0), i32 76, i32 90, i32 85 }], align 16
@.str.863 = private unnamed_addr constant [9 x i8] c"ROLLBACK\00", align 1
@.str.864 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.865 = private unnamed_addr constant [8 x i8] c"RELEASE\00", align 1
@.str.866 = private unnamed_addr constant [41 x i8] c"temporary table name must be unqualified\00", align 1
@sqlite3StartTable.aCode = internal unnamed_addr constant [4 x i8] c"\02\04\08\06", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"table %T already exists\00", align 1
@.str.868 = private unnamed_addr constant [35 x i8] c"there is already an index named %s\00", align 1
@.str.869 = private unnamed_addr constant [16 x i8] c"sqlite_sequence\00", align 1
@sqlite3StartTable.nullRow = internal constant [6 x i8] c"\06\00\00\00\00\00", align 1
@.str.870 = private unnamed_addr constant [50 x i8] c"AUTOINCREMENT not allowed on WITHOUT ROWID tables\00", align 1
@.str.871 = private unnamed_addr constant [32 x i8] c"PRIMARY KEY missing on table %s\00", align 1
@.str.872 = private unnamed_addr constant [44 x i8] c"must have at least one non-generated column\00", align 1
@.str.873 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.874 = private unnamed_addr constant [5 x i8] c"VIEW\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"CREATE %s %.*s\00", align 1
@.str.876 = private unnamed_addr constant [87 x i8] c"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\00", align 1
@.str.877 = private unnamed_addr constant [42 x i8] c"CREATE TABLE %Q.sqlite_sequence(name,seq)\00", align 1
@.str.878 = private unnamed_addr constant [34 x i8] c"tbl_name='%q' AND type!='trigger'\00", align 1
@.str.879 = private unnamed_addr constant [23 x i8] c"too many columns on %s\00", align 1
@.str.880 = private unnamed_addr constant [26 x i8] c"duplicate column name: %s\00", align 1
@.str.881 = private unnamed_addr constant [45 x i8] c"default value of column [%s] is not constant\00", align 1
@.str.882 = private unnamed_addr constant [41 x i8] c"cannot use DEFAULT on a generated column\00", align 1
@.str.883 = private unnamed_addr constant [41 x i8] c"table \22%s\22 has more than one primary key\00", align 1
@.str.884 = private unnamed_addr constant [56 x i8] c"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\00", align 1
@.str.885 = private unnamed_addr constant [63 x i8] c"foreign key on %s should reference only one column of table %T\00", align 1
@.str.886 = private unnamed_addr constant [94 x i8] c"number of columns in foreign key does not match the number of columns in the referenced table\00", align 1
@.str.887 = private unnamed_addr constant [46 x i8] c"unknown column \22%s\22 in foreign key definition\00", align 1
@.str.890 = private unnamed_addr constant [31 x i8] c"error in generated column \22%s\22\00", align 1
@.str.891 = private unnamed_addr constant [28 x i8] c"table %s may not be dropped\00", align 1
@.str.892 = private unnamed_addr constant [34 x i8] c"use DROP TABLE to delete table %s\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"use DROP VIEW to delete view %s\00", align 1
@.str.894 = private unnamed_addr constant [14 x i8] c"sqlite_stat%d\00", align 1
@.str.895 = private unnamed_addr constant [45 x i8] c"DELETE FROM %Q.sqlite_sequence WHERE name=%Q\00", align 1
@.str.896 = private unnamed_addr constant [56 x i8] c"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\00", align 1
@.str.897 = private unnamed_addr constant [51 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"parameters are not allowed in views\00", align 1
@.str.899 = private unnamed_addr constant [34 x i8] c"too many terms in compound SELECT\00", align 1
@sqlite3JoinType.zKeyText = internal unnamed_addr constant [34 x i8] c"naturaleftouterightfullinnercross\00", align 16
@sqlite3JoinType.aKeyword = internal unnamed_addr constant [7 x %struct.anon.23] [%struct.anon.23 { i8 0, i8 7, i8 4 }, %struct.anon.23 { i8 6, i8 4, i8 40 }, %struct.anon.23 { i8 10, i8 5, i8 32 }, %struct.anon.23 { i8 14, i8 5, i8 48 }, %struct.anon.23 { i8 19, i8 4, i8 56 }, %struct.anon.23 { i8 23, i8 5, i8 1 }, %struct.anon.23 { i8 28, i8 5, i8 3 }], align 16
@.str.900 = private unnamed_addr constant [44 x i8] c"unknown or unsupported join type: %T %T%s%T\00", align 1
@.str.901 = private unnamed_addr constant [55 x i8] c"RIGHT and FULL OUTER JOINs are not currently supported\00", align 1
@.str.902 = private unnamed_addr constant [23 x i8] c"too many columns in %s\00", align 1
@.str.903 = private unnamed_addr constant [43 x i8] c"variable number must be between ?1 and ?%d\00", align 1
@.str.904 = private unnamed_addr constant [23 x i8] c"too many SQL variables\00", align 1
@.str.905 = private unnamed_addr constant [34 x i8] c"too many arguments on function %T\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"DISTINCT is not supported for window functions\00", align 1
@.str.907 = private unnamed_addr constant [38 x i8] c"syntax error after column name \22%.*s\22\00", align 1
@.str.908 = private unnamed_addr constant [18 x i8] c"no such index: %S\00", align 1
@.str.909 = private unnamed_addr constant [73 x i8] c"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\00", align 1
@.str.910 = private unnamed_addr constant [49 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='index'\00", align 1
@.str.911 = private unnamed_addr constant [4 x i8] c"-%T\00", align 1
@.str.912 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.914 = private unnamed_addr constant [25 x i8] c"not a writable directory\00", align 1
@.str.915 = private unnamed_addr constant [30 x i8] c"failed to set lock proxy file\00", align 1
@.str.916 = private unnamed_addr constant [53 x i8] c"Safety level may not be changed inside a transaction\00", align 1
@.str.917 = private unnamed_addr constant [8 x i8] c"issisii\00", align 1
@.str.918 = private unnamed_addr constant [7 x i8] c"issisi\00", align 1
@.str.919 = private unnamed_addr constant [5 x i8] c"iisX\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"isiX\00", align 1
@.str.921 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.922 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@__const.sqlite3Pragma.azOrigin = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.921, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0)], align 16
@.str.923 = private unnamed_addr constant [6 x i8] c"isisi\00", align 1
@.str.924 = private unnamed_addr constant [4 x i8] c"iss\00", align 1
@.str.925 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.926 = private unnamed_addr constant [9 x i8] c"iissssss\00", align 1
@.str.927 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"siX\00", align 1
@.str.929 = private unnamed_addr constant [24 x i8] c"*** in database %s ***\0A\00", align 1
@.str.930 = private unnamed_addr constant [20 x i8] c"NULL value in %s.%s\00", align 1
@.str.931 = private unnamed_addr constant [30 x i8] c"CHECK constraint failed in %s\00", align 1
@.str.932 = private unnamed_addr constant [5 x i8] c"row \00", align 1
@.str.933 = private unnamed_addr constant [21 x i8] c" missing from index \00", align 1
@.str.934 = private unnamed_addr constant [27 x i8] c"non-unique entry in index \00", align 1
@.str.935 = private unnamed_addr constant [29 x i8] c"wrong # of entries in index \00", align 1
@.str.937 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@sqlite3Pragma.encnames = internal unnamed_addr constant [9 x %struct.EncName] [%struct.EncName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.938, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.939, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.941, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.942, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.943, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.944, i32 0, i32 0), i8 0 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.945, i32 0, i32 0), i8 0 }, %struct.EncName zeroinitializer], align 16
@.str.938 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.939 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"UTF-16le\00", align 1
@.str.941 = private unnamed_addr constant [9 x i8] c"UTF-16be\00", align 1
@.str.942 = private unnamed_addr constant [8 x i8] c"UTF16le\00", align 1
@.str.943 = private unnamed_addr constant [8 x i8] c"UTF16be\00", align 1
@.str.944 = private unnamed_addr constant [7 x i8] c"UTF-16\00", align 1
@.str.945 = private unnamed_addr constant [6 x i8] c"UTF16\00", align 1
@.str.946 = private unnamed_addr constant [25 x i8] c"unsupported encoding: %s\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.948 = private unnamed_addr constant [18 x i8] c"ANALYZE \22%w\22.\22%w\22\00", align 1
@.str.949 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.950 = private unnamed_addr constant [64 x i8] c"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\00", align 1
@.str.951 = private unnamed_addr constant [29 x i8] c"type='trigger' AND name='%q'\00", align 1
@.str.952 = private unnamed_addr constant [46 x i8] c"temporary trigger may not have qualified name\00", align 1
@.str.953 = private unnamed_addr constant [26 x i8] c"trigger %T already exists\00", align 1
@.str.954 = private unnamed_addr constant [38 x i8] c"cannot create trigger on system table\00", align 1
@.str.955 = private unnamed_addr constant [37 x i8] c"cannot create %s trigger on view: %S\00", align 1
@.str.956 = private unnamed_addr constant [7 x i8] c"BEFORE\00", align 1
@.str.957 = private unnamed_addr constant [6 x i8] c"AFTER\00", align 1
@.str.958 = private unnamed_addr constant [46 x i8] c"cannot create INSTEAD OF trigger on table: %S\00", align 1
@.str.959 = private unnamed_addr constant [20 x i8] c"no such trigger: %S\00", align 1
@sqlite3Attach.attach_func = external dso_local constant %struct.FuncDef, align 8
@.str.960 = private unnamed_addr constant [14 x i8] c"sqlite_attach\00", align 1
@sqlite3Detach.detach_func = external dso_local constant %struct.FuncDef, align 8
@.str.961 = private unnamed_addr constant [14 x i8] c"sqlite_detach\00", align 1
@.str.962 = private unnamed_addr constant [46 x i8] c"unable to identify the object to be reindexed\00", align 1
@.str.963 = private unnamed_addr constant [59 x i8] c"there is already another table or index with this name: %s\00", align 1
@.str.964 = private unnamed_addr constant [27 x i8] c"view %s may not be altered\00", align 1
@.str.965 = private unnamed_addr constant [173 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\00", align 1
@.str.966 = private unnamed_addr constant [294 x i8] c"UPDATE %Q.%s SET tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\00", align 1
@.str.967 = private unnamed_addr constant [58 x i8] c"UPDATE \22%w\22.sqlite_sequence set name = %Q WHERE name = %Q\00", align 1
@.str.968 = private unnamed_addr constant [254 x i8] c"UPDATE sqlite_temp_master SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, 1), tbl_name = CASE WHEN tbl_name=%Q COLLATE nocase AND           sqlite_rename_test(%Q, sql, type, name, 1) THEN %Q ELSE tbl_name END WHERE type IN ('view', 'trigger')\00", align 1
@.str.969 = private unnamed_addr constant [32 x i8] c"Cannot add a PRIMARY KEY column\00", align 1
@.str.970 = private unnamed_addr constant [27 x i8] c"Cannot add a UNIQUE column\00", align 1
@.str.971 = private unnamed_addr constant [59 x i8] c"Cannot add a REFERENCES column with non-NULL default value\00", align 1
@.str.972 = private unnamed_addr constant [53 x i8] c"Cannot add a NOT NULL column with default value NULL\00", align 1
@.str.973 = private unnamed_addr constant [46 x i8] c"Cannot add a column with non-constant default\00", align 1
@.str.974 = private unnamed_addr constant [27 x i8] c"cannot add a STORED column\00", align 1
@.str.975 = private unnamed_addr constant [109 x i8] c"UPDATE \22%w\22.%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\00", align 1
@.str.976 = private unnamed_addr constant [30 x i8] c"Cannot add a column to a view\00", align 1
@.str.977 = private unnamed_addr constant [19 x i8] c"sqlite_altertab_%s\00", align 1
@.str.978 = private unnamed_addr constant [207 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'  AND (type != 'index' OR tbl_name = %Q) AND sql NOT LIKE 'create virtual%%'\00", align 1
@.str.979 = private unnamed_addr constant [120 x i8] c"UPDATE temp.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, 1) WHERE type IN ('trigger', 'view')\00", align 1
@.str.980 = private unnamed_addr constant [30 x i8] c"duplicate WITH table name: %s\00", align 1
@.str.981 = private unnamed_addr constant [17 x i8] c"PARTITION clause\00", align 1
@.str.982 = private unnamed_addr constant [16 x i8] c"ORDER BY clause\00", align 1
@.str.983 = private unnamed_addr constant [20 x i8] c"frame specification\00", align 1
@.str.984 = private unnamed_addr constant [33 x i8] c"cannot override %s of window: %s\00", align 1
@.str.985 = private unnamed_addr constant [32 x i8] c"unsupported frame specification\00", align 1
@.str.986 = private unnamed_addr constant [27 x i8] c"unrecognized token: \22%.*s\22\00", align 1
@.str.987 = private unnamed_addr constant [11 x i8] c"%s in \22%s\22\00", align 1
@sqlite3RegisterBuiltinFunctions.aBuiltinFunc = external dso_local global [62 x %struct.FuncDef], align 16
@.str.988 = private unnamed_addr constant [20 x i8] c"implies_nonnull_row\00", align 1
@.str.989 = private unnamed_addr constant [13 x i8] c"expr_compare\00", align 1
@.str.990 = private unnamed_addr constant [18 x i8] c"expr_implies_expr\00", align 1
@.str.991 = private unnamed_addr constant [15 x i8] c"load_extension\00", align 1
@.str.992 = private unnamed_addr constant [26 x i8] c"sqlite_compileoption_used\00", align 1
@.str.993 = private unnamed_addr constant [25 x i8] c"sqlite_compileoption_get\00", align 1
@.str.994 = private unnamed_addr constant [9 x i8] c"unlikely\00", align 1
@.str.995 = private unnamed_addr constant [11 x i8] c"likelihood\00", align 1
@.str.996 = private unnamed_addr constant [7 x i8] c"likely\00", align 1
@.str.997 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.998 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.1000 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.1001 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1002 = private unnamed_addr constant [6 x i8] c"instr\00", align 1
@.str.1003 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1004 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.1006 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.1007 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.1008 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.1009 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.1010 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.1011 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.1012 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.1013 = private unnamed_addr constant [11 x i8] c"randomblob\00", align 1
@.str.1014 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.1015 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.1016 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.1017 = private unnamed_addr constant [11 x i8] c"sqlite_log\00", align 1
@.str.1018 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.1019 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.1020 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.1021 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.1022 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.1023 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.1024 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.1025 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.1026 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.1027 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.1028 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.1029 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.1031 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@sqlite3AlterFunctions.aAlterTableFuncs = external dso_local global [3 x %struct.FuncDef], align 16
@.str.1032 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.1033 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.1034 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@sqlite3WindowFunctions.aWindowFuncs = external dso_local global [15 x %struct.FuncDef], align 16
@sqlite3RegisterDateTimeFunctions_aDateTimeFuncs = external dso_local global [8 x %struct.FuncDef], align 16
@.str.1035 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1038 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.1039 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1040 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.1041 = private unnamed_addr constant [18 x i8] c"current_timestamp\00", align 1
@.str.1042 = private unnamed_addr constant [13 x i8] c"current_date\00", align 1
@sqlite3MemSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_mem_methods, align 8
@.str.1043 = private unnamed_addr constant [38 x i8] c"failed to allocate %u bytes of memory\00", align 1
@.str.1044 = private unnamed_addr constant [36 x i8] c"failed memory resize %u to %u bytes\00", align 1
@.str.1045 = private unnamed_addr constant [8 x i8] c"hw.ncpu\00", align 1
@.str.1046 = private unnamed_addr constant [12 x i8] c"Sqlite_Heap\00", align 1
@sqlite3PCacheSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_pcache_methods2, align 8
@.str.1047 = private unnamed_addr constant [68 x i8] c"unable to close due to unfinalized statements or unfinished backups\00", align 1
@sqlite3ErrStr.aMsg = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1048, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1049, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1050, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1051, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1052, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1054, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1055, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1056, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1057, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1058, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1059, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1060, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1061, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1062, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1063, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1064, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1065, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1066, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1068, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1069, i32 0, i32 0)], align 16
@.str.1048 = private unnamed_addr constant [13 x i8] c"not an error\00", align 1
@.str.1049 = private unnamed_addr constant [16 x i8] c"SQL logic error\00", align 1
@.str.1050 = private unnamed_addr constant [25 x i8] c"access permission denied\00", align 1
@.str.1051 = private unnamed_addr constant [14 x i8] c"query aborted\00", align 1
@.str.1052 = private unnamed_addr constant [19 x i8] c"database is locked\00", align 1
@.str.1053 = private unnamed_addr constant [25 x i8] c"database table is locked\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"attempt to write a readonly database\00", align 1
@.str.1055 = private unnamed_addr constant [12 x i8] c"interrupted\00", align 1
@.str.1056 = private unnamed_addr constant [15 x i8] c"disk I/O error\00", align 1
@.str.1057 = private unnamed_addr constant [33 x i8] c"database disk image is malformed\00", align 1
@.str.1058 = private unnamed_addr constant [18 x i8] c"unknown operation\00", align 1
@.str.1059 = private unnamed_addr constant [25 x i8] c"database or disk is full\00", align 1
@.str.1060 = private unnamed_addr constant [29 x i8] c"unable to open database file\00", align 1
@.str.1061 = private unnamed_addr constant [17 x i8] c"locking protocol\00", align 1
@.str.1062 = private unnamed_addr constant [18 x i8] c"constraint failed\00", align 1
@.str.1063 = private unnamed_addr constant [18 x i8] c"datatype mismatch\00", align 1
@.str.1064 = private unnamed_addr constant [34 x i8] c"bad parameter or other API misuse\00", align 1
@.str.1065 = private unnamed_addr constant [21 x i8] c"authorization denied\00", align 1
@.str.1066 = private unnamed_addr constant [26 x i8] c"column index out of range\00", align 1
@.str.1067 = private unnamed_addr constant [23 x i8] c"file is not a database\00", align 1
@.str.1068 = private unnamed_addr constant [21 x i8] c"notification message\00", align 1
@.str.1069 = private unnamed_addr constant [16 x i8] c"warning message\00", align 1
@.str.1070 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1071 = private unnamed_addr constant [22 x i8] c"abort due to ROLLBACK\00", align 1
@.str.1072 = private unnamed_addr constant [22 x i8] c"another row available\00", align 1
@.str.1073 = private unnamed_addr constant [23 x i8] c"no more rows available\00", align 1
@.str.1074 = private unnamed_addr constant [63 x i8] c"unable to delete/modify user-function due to active statements\00", align 1
@.str.1075 = private unnamed_addr constant [51 x i8] c"unable to use function %s in the requested context\00", align 1
@.str.1076 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.1077 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.1078 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"invalid uri authority: %.*s\00", align 1
@.str.1080 = private unnamed_addr constant [4 x i8] c"vfs\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@sqlite3ParseUri.aCacheMode = internal unnamed_addr constant [3 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1082, i32 0, i32 0), i32 131072 }, %struct.OpenMode { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1083, i32 0, i32 0), i32 262144 }, %struct.OpenMode zeroinitializer], align 16
@.str.1082 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.1083 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.1084 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@sqlite3ParseUri.aOpenMode = internal unnamed_addr constant [5 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1085, i32 0, i32 0), i32 1 }, %struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1086, i32 0, i32 0), i32 2 }, %struct.OpenMode { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1087, i32 0, i32 0), i32 6 }, %struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 128 }, %struct.OpenMode zeroinitializer], align 16
@.str.1085 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.1086 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.1087 = private unnamed_addr constant [4 x i8] c"rwc\00", align 1
@.str.1088 = private unnamed_addr constant [20 x i8] c"no such %s mode: %s\00", align 1
@.str.1089 = private unnamed_addr constant [24 x i8] c"%s mode not allowed: %s\00", align 1
@.str.1090 = private unnamed_addr constant [16 x i8] c"no such vfs: %s\00", align 1
@.str.1091 = private unnamed_addr constant [6 x i8] c"MATCH\00", align 1
@.str.1092 = private unnamed_addr constant [39 x i8] c"automatic extension loading failed: %s\00", align 1
@.str.1093 = private unnamed_addr constant [20 x i8] c"database corruption\00", align 1
@.str.1094 = private unnamed_addr constant [25 x i8] c"%s at line %d of [%.10s]\00", align 1
@.str.1095 = private unnamed_addr constant [7 x i8] c"misuse\00", align 1
@.str.1096 = private unnamed_addr constant [17 x i8] c"cannot open file\00", align 1
@sqlite3SavedPrng = internal unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@sqlite3azCompileOpt = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1097, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1098, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1099, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1100, i32 0, i32 0)], align 16
@.str.1097 = private unnamed_addr constant [22 x i8] c"COMPILER=clang-11.0.0\00", align 1
@.str.1098 = private unnamed_addr constant [11 x i8] c"OMIT_TRACE\00", align 1
@.str.1099 = private unnamed_addr constant [18 x i8] c"OMIT_VIRTUALTABLE\00", align 1
@.str.1100 = private unnamed_addr constant [13 x i8] c"THREADSAFE=1\00", align 1
@switch.table.multiSelectOrderBy = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)], align 8
@switch.table.sqlite3Pragma.1201 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i64 0, i64 0)], align 8

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @my_assert(i1, i64, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @dbg() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRealify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @printTypeOf(i8*, i32, %struct.Vdbe*, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeIntegerAffinity(%struct.sqlite3_value*) #0

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3AtoF(i8* readonly %z, double* nocapture %pResult, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  store double 0.000000e+00, double* %pResult, align 8, !tbaa !6
  %cmp = icmp eq i32 %length, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i8 %enc to i32
  %cmp1 = icmp eq i8 %enc, 1
  br i1 %cmp1, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %and = and i32 %length, -2
  %sub = sub nsw i32 3, %conv
  %cmp5540 = icmp slt i32 %sub, %and
  br i1 %cmp5540, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %and to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %i.0541 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %z, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp8 = icmp eq i8 %2, 0
  br i1 %cmp8, label %for.inc, label %for.end.loopexit.split.loop.exit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add i64 %indvars.iv, 2
  %add = add nsw i32 %i.0541, 2
  %cmp5 = icmp slt i64 %indvars.iv.next, %1
  br i1 %cmp5, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit, %for.inc, %if.else
  %i.0.lcssa563 = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit ], [ %add, %for.inc ]
  %4 = phi i32 [ 1, %if.else ], [ -100, %for.end.loopexit.split.loop.exit ], [ 1, %for.inc ]
  %xor = xor i32 %i.0.lcssa563, 1
  %and17 = and i32 %conv, 1
  %idx.ext18 = zext i32 %and17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %z, i64 %idx.ext18
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.end
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %if.end ]
  %eType.1 = phi i32 [ %4, %for.end ], [ 1, %if.end ]
  %incr.0 = phi i64 [ 2, %for.end ], [ 1, %if.end ]
  %z.addr.0 = phi i8* [ %add.ptr19, %for.end ], [ %z, %if.end ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %z, i64 %idx.ext.pn
  %cmp21538 = icmp ult i8* %z.addr.0, %zEnd.0
  br i1 %cmp21538, label %land.rhs23, label %cleanup

land.rhs23:                                       ; preds = %while.body, %if.end20
  %z.addr.1539 = phi i8* [ %add.ptr30, %while.body ], [ %z.addr.0, %if.end20 ]
  %5 = load i8, i8* %z.addr.1539, align 1, !tbaa !10
  %idxprom24 = zext i8 %5 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom24
  %6 = load i8, i8* %arrayidx25, align 1, !tbaa !10
  %7 = and i8 %6, 1
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end34, label %while.body

while.body:                                       ; preds = %land.rhs23
  %add.ptr30 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  %cmp21 = icmp ult i8* %add.ptr30, %zEnd.0
  br i1 %cmp21, label %land.rhs23, label %cleanup

if.end34:                                         ; preds = %land.rhs23
  switch i8 %5, label %if.end49 [
    i8 45, label %if.then38
    i8 43, label %if.then45
  ]

if.then38:                                        ; preds = %if.end34
  %add.ptr40 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.then45:                                        ; preds = %if.end34
  %add.ptr47 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.end49:                                         ; preds = %if.then45, %if.then38, %if.end34
  %sign.0 = phi i32 [ -1, %if.then38 ], [ 1, %if.then45 ], [ 1, %if.end34 ]
  %z.addr.2 = phi i8* [ %add.ptr40, %if.then38 ], [ %add.ptr47, %if.then45 ], [ %z.addr.1539, %if.end34 ]
  %cmp51529 = icmp ult i8* %z.addr.2, %zEnd.0
  br i1 %cmp51529, label %land.rhs53, label %if.then201

land.rhs53:                                       ; preds = %if.end85, %if.end49
  %z.addr.3533 = phi i8* [ %z.addr.5, %if.end85 ], [ %z.addr.2, %if.end49 ]
  %nDigit.0532 = phi i32 [ %inc, %if.end85 ], [ 0, %if.end49 ]
  %d.0531 = phi i32 [ %d.2, %if.end85 ], [ 0, %if.end49 ]
  %s.0530 = phi i64 [ %add64, %if.end85 ], [ 0, %if.end49 ]
  %8 = load i8, i8* %z.addr.3533, align 1, !tbaa !10
  %idxprom54 = zext i8 %8 to i64
  %9 = add nsw i64 %idxprom54, -48
  %tobool58 = icmp ult i64 %9, 10
  br i1 %tobool58, label %while.body60, label %if.end90

while.body60:                                     ; preds = %land.rhs53
  %mul = mul nsw i64 %s.0530, 10
  %conv61 = sext i8 %8 to i64
  %sub62 = add i64 %mul, -48
  %add64 = add i64 %sub62, %conv61
  %add.ptr66 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %inc = add nuw nsw i32 %nDigit.0532, 1
  %cmp67 = icmp sgt i64 %add64, 922337203685477578
  %cmp71522 = icmp ult i8* %add.ptr66, %zEnd.0
  %or.cond547 = and i1 %cmp67, %cmp71522
  br i1 %or.cond547, label %land.rhs73, label %if.end85

land.rhs73:                                       ; preds = %while.body80, %while.body60
  %z.addr.4524 = phi i8* [ %add.ptr82, %while.body80 ], [ %add.ptr66, %while.body60 ]
  %d.1523 = phi i32 [ %inc83, %while.body80 ], [ %d.0531, %while.body60 ]
  %10 = load i8, i8* %z.addr.4524, align 1, !tbaa !10
  %idxprom74 = zext i8 %10 to i64
  %11 = add nsw i64 %idxprom74, -48
  %tobool78 = icmp ult i64 %11, 10
  br i1 %tobool78, label %while.body80, label %if.end85

while.body80:                                     ; preds = %land.rhs73
  %add.ptr82 = getelementptr inbounds i8, i8* %z.addr.4524, i64 %incr.0
  %inc83 = add nsw i32 %d.1523, 1
  %cmp71 = icmp ult i8* %add.ptr82, %zEnd.0
  br i1 %cmp71, label %land.rhs73, label %if.end85

if.end85:                                         ; preds = %while.body80, %land.rhs73, %while.body60
  %d.2 = phi i32 [ %d.0531, %while.body60 ], [ %inc83, %while.body80 ], [ %d.1523, %land.rhs73 ]
  %z.addr.5 = phi i8* [ %add.ptr66, %while.body60 ], [ %add.ptr82, %while.body80 ], [ %z.addr.4524, %land.rhs73 ]
  %cmp51 = icmp ult i8* %z.addr.5, %zEnd.0
  br i1 %cmp51, label %land.rhs53, label %do_atof_calc

if.end90:                                         ; preds = %land.rhs53
  %cmp92 = icmp eq i8 %8, 46
  br i1 %cmp92, label %if.then94, label %if.end122

if.then94:                                        ; preds = %if.end90
  %inc97 = add nuw nsw i32 %eType.1, 1
  %z.addr.6508 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %cmp99509 = icmp ult i8* %z.addr.6508, %zEnd.0
  br i1 %cmp99509, label %land.rhs101, label %if.end122

land.rhs101:                                      ; preds = %if.end118, %if.then94
  %z.addr.6513 = phi i8* [ %z.addr.6, %if.end118 ], [ %z.addr.6508, %if.then94 ]
  %nDigit.1512 = phi i32 [ %nDigit.2, %if.end118 ], [ %nDigit.0532, %if.then94 ]
  %d.3511 = phi i32 [ %d.4, %if.end118 ], [ %d.0531, %if.then94 ]
  %s.1510 = phi i64 [ %s.2, %if.end118 ], [ %s.0530, %if.then94 ]
  %12 = load i8, i8* %z.addr.6513, align 1, !tbaa !10
  %idxprom102 = zext i8 %12 to i64
  %13 = add nsw i64 %idxprom102, -48
  %tobool106 = icmp ult i64 %13, 10
  br i1 %tobool106, label %while.body108, label %if.end122

while.body108:                                    ; preds = %land.rhs101
  %cmp109 = icmp slt i64 %s.1510, 922337203685477579
  br i1 %cmp109, label %if.then111, label %if.end118

if.then111:                                       ; preds = %while.body108
  %mul112 = mul nsw i64 %s.1510, 10
  %conv113 = sext i8 %12 to i64
  %sub114 = add i64 %mul112, -48
  %add116 = add i64 %sub114, %conv113
  %dec = add nsw i32 %d.3511, -1
  %inc117 = add nsw i32 %nDigit.1512, 1
  br label %if.end118

if.end118:                                        ; preds = %if.then111, %while.body108
  %s.2 = phi i64 [ %add116, %if.then111 ], [ %s.1510, %while.body108 ]
  %d.4 = phi i32 [ %dec, %if.then111 ], [ %d.3511, %while.body108 ]
  %nDigit.2 = phi i32 [ %inc117, %if.then111 ], [ %nDigit.1512, %while.body108 ]
  %z.addr.6 = getelementptr inbounds i8, i8* %z.addr.6513, i64 %incr.0
  %cmp99 = icmp ult i8* %z.addr.6, %zEnd.0
  br i1 %cmp99, label %land.rhs101, label %if.end122

if.end122:                                        ; preds = %if.end118, %land.rhs101, %if.then94, %if.end90
  %s.3 = phi i64 [ %s.0530, %if.end90 ], [ %s.0530, %if.then94 ], [ %s.2, %if.end118 ], [ %s.1510, %land.rhs101 ]
  %d.5 = phi i32 [ %d.0531, %if.end90 ], [ %d.0531, %if.then94 ], [ %d.4, %if.end118 ], [ %d.3511, %land.rhs101 ]
  %nDigit.3 = phi i32 [ %nDigit.0532, %if.end90 ], [ %nDigit.0532, %if.then94 ], [ %nDigit.2, %if.end118 ], [ %nDigit.1512, %land.rhs101 ]
  %eType.2 = phi i32 [ %eType.1, %if.end90 ], [ %inc97, %if.then94 ], [ %inc97, %land.rhs101 ], [ %inc97, %if.end118 ]
  %z.addr.7 = phi i8* [ %z.addr.3533, %if.end90 ], [ %z.addr.6508, %if.then94 ], [ %z.addr.6, %if.end118 ], [ %z.addr.6513, %land.rhs101 ]
  %cmp123 = icmp ult i8* %z.addr.7, %zEnd.0
  br i1 %cmp123, label %if.end126, label %do_atof_calc

if.end126:                                        ; preds = %if.end122
  %14 = load i8, i8* %z.addr.7, align 1, !tbaa !10
  switch i8 %14, label %if.end176 [
    i8 101, label %if.then133
    i8 69, label %if.then133
  ]

if.then133:                                       ; preds = %if.end126, %if.end126
  %add.ptr135 = getelementptr inbounds i8, i8* %z.addr.7, i64 %incr.0
  %inc136 = add nsw i32 %eType.2, 1
  %cmp137 = icmp ult i8* %add.ptr135, %zEnd.0
  br i1 %cmp137, label %if.end140, label %do_atof_calc

if.end140:                                        ; preds = %if.then133
  %15 = load i8, i8* %add.ptr135, align 1, !tbaa !10
  switch i8 %15, label %if.end155 [
    i8 45, label %if.then144
    i8 43, label %if.then151
  ]

if.then144:                                       ; preds = %if.end140
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.then151:                                       ; preds = %if.end140
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.end155:                                        ; preds = %if.then151, %if.then144, %if.end140
  %esign.0 = phi i32 [ -1, %if.then144 ], [ 1, %if.then151 ], [ 1, %if.end140 ]
  %z.addr.8 = phi i8* [ %add.ptr146, %if.then144 ], [ %add.ptr153, %if.then151 ], [ %add.ptr135, %if.end140 ]
  %cmp157498 = icmp ult i8* %z.addr.8, %zEnd.0
  br i1 %cmp157498, label %land.rhs159.preheader, label %if.end176

land.rhs159.preheader:                            ; preds = %if.end155
  %16 = load i8, i8* %z.addr.8, align 1, !tbaa !10
  %idxprom160622 = zext i8 %16 to i64
  %17 = add nsw i64 %idxprom160622, -48
  %tobool164623 = icmp ult i64 %17, 10
  br i1 %tobool164623, label %while.body166, label %if.end176

land.rhs159:                                      ; preds = %while.body166
  %18 = load i8, i8* %add.ptr174, align 1, !tbaa !10
  %idxprom160 = zext i8 %18 to i64
  %19 = add nsw i64 %idxprom160, -48
  %tobool164 = icmp ult i64 %19, 10
  br i1 %tobool164, label %while.body166, label %if.end176

while.body166:                                    ; preds = %land.rhs159, %land.rhs159.preheader
  %20 = phi i8 [ %18, %land.rhs159 ], [ %16, %land.rhs159.preheader ]
  %e.0499625 = phi i32 [ %cond, %land.rhs159 ], [ 0, %land.rhs159.preheader ]
  %z.addr.9501624 = phi i8* [ %add.ptr174, %land.rhs159 ], [ %z.addr.8, %land.rhs159.preheader ]
  %cmp167 = icmp slt i32 %e.0499625, 10000
  %mul169 = mul nsw i32 %e.0499625, 10
  %conv170 = sext i8 %20 to i32
  %sub171 = add i32 %mul169, -48
  %add172 = add i32 %sub171, %conv170
  %cond = select i1 %cmp167, i32 %add172, i32 10000
  %add.ptr174 = getelementptr inbounds i8, i8* %z.addr.9501624, i64 %incr.0
  %cmp157 = icmp ult i8* %add.ptr174, %zEnd.0
  br i1 %cmp157, label %land.rhs159, label %if.end176

if.end176:                                        ; preds = %while.body166, %land.rhs159, %land.rhs159.preheader, %if.end155, %if.end126
  %esign.1 = phi i32 [ 1, %if.end126 ], [ %esign.0, %if.end155 ], [ %esign.0, %land.rhs159.preheader ], [ %esign.0, %while.body166 ], [ %esign.0, %land.rhs159 ]
  %e.1 = phi i32 [ 0, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ %cond, %while.body166 ], [ %cond, %land.rhs159 ]
  %eValid.1 = phi i32 [ 1, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ 1, %while.body166 ], [ 1, %land.rhs159 ]
  %eType.3 = phi i32 [ %eType.2, %if.end126 ], [ %inc136, %if.end155 ], [ %inc136, %land.rhs159.preheader ], [ %inc136, %while.body166 ], [ %inc136, %land.rhs159 ]
  %z.addr.10 = phi i8* [ %z.addr.7, %if.end126 ], [ %z.addr.8, %if.end155 ], [ %z.addr.8, %land.rhs159.preheader ], [ %add.ptr174, %while.body166 ], [ %add.ptr174, %land.rhs159 ]
  %cmp178494 = icmp ult i8* %z.addr.10, %zEnd.0
  br i1 %cmp178494, label %land.rhs180, label %do_atof_calc

land.rhs180:                                      ; preds = %while.body187, %if.end176
  %z.addr.11495 = phi i8* [ %add.ptr189, %while.body187 ], [ %z.addr.10, %if.end176 ]
  %21 = load i8, i8* %z.addr.11495, align 1, !tbaa !10
  %idxprom181 = zext i8 %21 to i64
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !10
  %23 = and i8 %22, 1
  %tobool185 = icmp eq i8 %23, 0
  br i1 %tobool185, label %do_atof_calc, label %while.body187

while.body187:                                    ; preds = %land.rhs180
  %add.ptr189 = getelementptr inbounds i8, i8* %z.addr.11495, i64 %incr.0
  %cmp178 = icmp ult i8* %add.ptr189, %zEnd.0
  br i1 %cmp178, label %land.rhs180, label %do_atof_calc

do_atof_calc:                                     ; preds = %while.body187, %land.rhs180, %if.end176, %if.then133, %if.end122, %if.end85
  %s.4 = phi i64 [ %s.3, %if.end122 ], [ %s.3, %if.then133 ], [ %s.3, %if.end176 ], [ %s.3, %land.rhs180 ], [ %s.3, %while.body187 ], [ %add64, %if.end85 ]
  %d.6 = phi i32 [ %d.5, %if.end122 ], [ %d.5, %if.then133 ], [ %d.5, %if.end176 ], [ %d.5, %land.rhs180 ], [ %d.5, %while.body187 ], [ %d.2, %if.end85 ]
  %esign.2 = phi i32 [ 1, %if.end122 ], [ 1, %if.then133 ], [ %esign.1, %if.end176 ], [ %esign.1, %land.rhs180 ], [ %esign.1, %while.body187 ], [ 1, %if.end85 ]
  %e.2 = phi i32 [ 0, %if.end122 ], [ 0, %if.then133 ], [ %e.1, %if.end176 ], [ %e.1, %land.rhs180 ], [ %e.1, %while.body187 ], [ 0, %if.end85 ]
  %eValid.2 = phi i32 [ 1, %if.end122 ], [ 0, %if.then133 ], [ %eValid.1, %if.end176 ], [ %eValid.1, %land.rhs180 ], [ %eValid.1, %while.body187 ], [ 1, %if.end85 ]
  %nDigit.4 = phi i32 [ %nDigit.3, %if.end122 ], [ %nDigit.3, %if.then133 ], [ %nDigit.3, %if.end176 ], [ %nDigit.3, %land.rhs180 ], [ %nDigit.3, %while.body187 ], [ %inc, %if.end85 ]
  %eType.4 = phi i32 [ %eType.2, %if.end122 ], [ %inc136, %if.then133 ], [ %eType.3, %if.end176 ], [ %eType.3, %land.rhs180 ], [ %eType.3, %while.body187 ], [ %eType.1, %if.end85 ]
  %z.addr.12 = phi i8* [ %z.addr.7, %if.end122 ], [ %add.ptr135, %if.then133 ], [ %z.addr.10, %if.end176 ], [ %add.ptr189, %while.body187 ], [ %z.addr.11495, %land.rhs180 ], [ %z.addr.5, %if.end85 ]
  %mul191 = mul nsw i32 %e.2, %esign.2
  %add192 = add nsw i32 %mul191, %d.6
  %cmp193 = icmp slt i32 %add192, 0
  %mul196 = sub nsw i32 0, %add192
  %e.3 = select i1 %cmp193, i32 %mul196, i32 %add192
  %cmp199 = icmp eq i64 %s.4, 0
  br i1 %cmp199, label %if.then201, label %while.cond206.preheader

while.cond206.preheader:                          ; preds = %do_atof_calc
  %cmp207489 = icmp sgt i32 %e.3, 0
  br i1 %cmp207489, label %while.body209.lr.ph, label %while.end225

while.body209.lr.ph:                              ; preds = %while.cond206.preheader
  br i1 %cmp193, label %while.body209.us, label %while.body209

while.body209.us:                                 ; preds = %if.end222.us, %while.body209.lr.ph
  %e.4491.us = phi i32 [ %dec224.us, %if.end222.us ], [ %mul196, %while.body209.lr.ph ]
  %s.5490.us = phi i64 [ %div.us, %if.end222.us ], [ %s.4, %while.body209.lr.ph ]
  %rem.us = srem i64 %s.5490.us, 10
  %div.us = sdiv i64 %s.5490.us, 10
  %cmp219.us = icmp eq i64 %rem.us, 0
  br i1 %cmp219.us, label %if.end222.us, label %if.else237

if.end222.us:                                     ; preds = %while.body209.us
  %dec224.us = add nsw i32 %e.4491.us, -1
  %cmp207.us = icmp sgt i32 %e.4491.us, 1
  br i1 %cmp207.us, label %while.body209.us, label %while.end225

if.then201:                                       ; preds = %do_atof_calc, %if.end49
  %z.addr.12585 = phi i8* [ %z.addr.12, %do_atof_calc ], [ %z.addr.2, %if.end49 ]
  %eType.4583 = phi i32 [ %eType.4, %do_atof_calc ], [ %eType.1, %if.end49 ]
  %nDigit.4581 = phi i32 [ %nDigit.4, %do_atof_calc ], [ 0, %if.end49 ]
  %eValid.2579 = phi i32 [ %eValid.2, %do_atof_calc ], [ 1, %if.end49 ]
  %cmp202 = icmp slt i32 %sign.0, 0
  %cond204 = select i1 %cmp202, double -0.000000e+00, double 0.000000e+00
  br label %if.end286

while.body209:                                    ; preds = %if.end216, %while.body209.lr.ph
  %e.4491 = phi i32 [ %dec224, %if.end216 ], [ %add192, %while.body209.lr.ph ]
  %s.5490 = phi i64 [ %mul217, %if.end216 ], [ %s.4, %while.body209.lr.ph ]
  %cmp213 = icmp sgt i64 %s.5490, 922337203685477579
  br i1 %cmp213, label %if.else237, label %if.end216

if.end216:                                        ; preds = %while.body209
  %mul217 = mul nsw i64 %s.5490, 10
  %dec224 = add nsw i32 %e.4491, -1
  %cmp207 = icmp sgt i32 %e.4491, 1
  br i1 %cmp207, label %while.body209, label %while.end225

while.end225:                                     ; preds = %if.end216, %if.end222.us, %while.cond206.preheader
  %s.5.lcssa = phi i64 [ %s.4, %while.cond206.preheader ], [ %div.us, %if.end222.us ], [ %mul217, %if.end216 ]
  %e.4.lcssa = phi i32 [ %e.3, %while.cond206.preheader ], [ 0, %if.end222.us ], [ 0, %if.end216 ]
  %cmp226 = icmp slt i32 %sign.0, 0
  %sub229 = sub nsw i64 0, %s.5.lcssa
  %cond232 = select i1 %cmp226, i64 %sub229, i64 %s.5.lcssa
  %cmp233 = icmp eq i32 %e.4.lcssa, 0
  br i1 %cmp233, label %if.then235, label %if.else270

if.then235:                                       ; preds = %while.end225
  %conv236 = sitofp i64 %cond232 to double
  br label %if.end286

if.else237:                                       ; preds = %while.body209, %while.body209.us
  %s.5.lcssa483 = phi i64 [ %s.5490.us, %while.body209.us ], [ %s.5490, %while.body209 ]
  %e.4.lcssa481 = phi i32 [ %e.4491.us, %while.body209.us ], [ %e.4491, %while.body209 ]
  %cmp226472 = icmp slt i32 %sign.0, 0
  %sub229473 = sub nsw i64 0, %s.5.lcssa483
  %cond232474 = select i1 %cmp226472, i64 %sub229473, i64 %s.5.lcssa483
  %cmp238 = icmp sgt i32 %e.4.lcssa481, 307
  br i1 %cmp238, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.else237
  %cmp241 = icmp slt i32 %e.4.lcssa481, 342
  br i1 %cmp241, label %if.then243, label %if.else258

if.then243:                                       ; preds = %if.then240
  %sub244 = add nsw i32 %e.4.lcssa481, -308
  %and13.i = and i32 %sub244, 1
  %tobool14.i = icmp eq i32 %and13.i, 0
  %spec.select15.i = select i1 %tobool14.i, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i = ashr i32 %sub244, 1
  %cmp17.i = icmp eq i32 %shr16.i, 0
  br i1 %cmp17.i, label %sqlite3Pow10.exit, label %if.end2.i

if.end2.i:                                        ; preds = %if.end2.i, %if.then243
  %shr20.i = phi i32 [ %shr.i, %if.end2.i ], [ %shr16.i, %if.then243 ]
  %spec.select19.i = phi x86_fp80 [ %spec.select.i, %if.end2.i ], [ %spec.select15.i, %if.then243 ]
  %x.018.i = phi x86_fp80 [ %mul3.i, %if.end2.i ], [ 0xK4002A000000000000000, %if.then243 ]
  %mul3.i = fmul x86_fp80 %x.018.i, %x.018.i
  %and.i = and i32 %shr20.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %mul.i = fmul x86_fp80 %spec.select19.i, %mul3.i
  %spec.select.i = select i1 %tobool.i, x86_fp80 %spec.select19.i, x86_fp80 %mul.i
  %shr.i = ashr i32 %shr20.i, 1
  %cmp.i = icmp eq i32 %shr.i, 0
  br i1 %cmp.i, label %sqlite3Pow10.exit, label %if.end2.i

sqlite3Pow10.exit:                                ; preds = %if.end2.i, %if.then243
  %spec.select.lcssa.i = phi x86_fp80 [ %spec.select15.i, %if.then243 ], [ %spec.select.i, %if.end2.i ]
  %conv248 = sitofp i64 %cond232474 to x86_fp80
  br i1 %cmp193, label %if.then247, label %if.else252

if.then247:                                       ; preds = %sqlite3Pow10.exit
  %div249 = fdiv x86_fp80 %conv248, %spec.select.lcssa.i
  %conv250 = fptrunc x86_fp80 %div249 to double
  %div251 = fdiv double %conv250, 1.000000e+308
  br label %if.end286

if.else252:                                       ; preds = %sqlite3Pow10.exit
  %mul254 = fmul x86_fp80 %spec.select.lcssa.i, %conv248
  %conv255 = fptrunc x86_fp80 %mul254 to double
  %mul256 = fmul double %conv255, 1.000000e+308
  br label %if.end286

if.else258:                                       ; preds = %if.then240
  br i1 %cmp193, label %if.then261, label %if.else264

if.then261:                                       ; preds = %if.else258
  %conv262 = sitofp i64 %cond232474 to double
  %mul263 = fmul double %conv262, 0.000000e+00
  br label %if.end286

if.else264:                                       ; preds = %if.else258
  %conv265 = sitofp i64 %cond232474 to float
  %mul266 = fmul float %conv265, 0x7FF0000000000000
  %conv267 = fpext float %mul266 to double
  br label %if.end286

if.else270:                                       ; preds = %if.else237, %while.end225
  %e.4482 = phi i32 [ %e.4.lcssa481, %if.else237 ], [ %e.4.lcssa, %while.end225 ]
  %cond232476479 = phi i64 [ %cond232474, %if.else237 ], [ %cond232, %while.end225 ]
  %and13.i454 = and i32 %e.4482, 1
  %tobool14.i455 = icmp eq i32 %and13.i454, 0
  %spec.select15.i456 = select i1 %tobool14.i455, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i457 = ashr i32 %e.4482, 1
  %cmp17.i458 = icmp eq i32 %shr16.i457, 0
  br i1 %cmp17.i458, label %sqlite3Pow10.exit471, label %if.end2.i469

if.end2.i469:                                     ; preds = %if.end2.i469, %if.else270
  %shr20.i459 = phi i32 [ %shr.i467, %if.end2.i469 ], [ %shr16.i457, %if.else270 ]
  %spec.select19.i460 = phi x86_fp80 [ %spec.select.i466, %if.end2.i469 ], [ %spec.select15.i456, %if.else270 ]
  %x.018.i461 = phi x86_fp80 [ %mul3.i462, %if.end2.i469 ], [ 0xK4002A000000000000000, %if.else270 ]
  %mul3.i462 = fmul x86_fp80 %x.018.i461, %x.018.i461
  %and.i463 = and i32 %shr20.i459, 1
  %tobool.i464 = icmp eq i32 %and.i463, 0
  %mul.i465 = fmul x86_fp80 %spec.select19.i460, %mul3.i462
  %spec.select.i466 = select i1 %tobool.i464, x86_fp80 %spec.select19.i460, x86_fp80 %mul.i465
  %shr.i467 = ashr i32 %shr20.i459, 1
  %cmp.i468 = icmp eq i32 %shr.i467, 0
  br i1 %cmp.i468, label %sqlite3Pow10.exit471, label %if.end2.i469

sqlite3Pow10.exit471:                             ; preds = %if.end2.i469, %if.else270
  %spec.select.lcssa.i470 = phi x86_fp80 [ %spec.select15.i456, %if.else270 ], [ %spec.select.i466, %if.end2.i469 ]
  %conv276 = sitofp i64 %cond232476479 to x86_fp80
  br i1 %cmp193, label %if.then275, label %if.else279

if.then275:                                       ; preds = %sqlite3Pow10.exit471
  %div277 = fdiv x86_fp80 %conv276, %spec.select.lcssa.i470
  br label %if.end283

if.else279:                                       ; preds = %sqlite3Pow10.exit471
  %mul281 = fmul x86_fp80 %spec.select.lcssa.i470, %conv276
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  %result.1.in = phi x86_fp80 [ %div277, %if.then275 ], [ %mul281, %if.else279 ]
  %result.1 = fptrunc x86_fp80 %result.1.in to double
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.else264, %if.then261, %if.else252, %if.then247, %if.then235, %if.then201
  %z.addr.12584 = phi i8* [ %z.addr.12585, %if.then201 ], [ %z.addr.12, %if.then235 ], [ %z.addr.12, %if.then261 ], [ %z.addr.12, %if.else264 ], [ %z.addr.12, %if.end283 ], [ %z.addr.12, %if.then247 ], [ %z.addr.12, %if.else252 ]
  %eType.4582 = phi i32 [ %eType.4583, %if.then201 ], [ %eType.4, %if.then235 ], [ %eType.4, %if.then261 ], [ %eType.4, %if.else264 ], [ %eType.4, %if.end283 ], [ %eType.4, %if.then247 ], [ %eType.4, %if.else252 ]
  %nDigit.4580 = phi i32 [ %nDigit.4581, %if.then201 ], [ %nDigit.4, %if.then235 ], [ %nDigit.4, %if.then261 ], [ %nDigit.4, %if.else264 ], [ %nDigit.4, %if.end283 ], [ %nDigit.4, %if.then247 ], [ %nDigit.4, %if.else252 ]
  %eValid.2578 = phi i32 [ %eValid.2579, %if.then201 ], [ %eValid.2, %if.then235 ], [ %eValid.2, %if.then261 ], [ %eValid.2, %if.else264 ], [ %eValid.2, %if.end283 ], [ %eValid.2, %if.then247 ], [ %eValid.2, %if.else252 ]
  %result.2 = phi double [ %cond204, %if.then201 ], [ %conv236, %if.then235 ], [ %mul263, %if.then261 ], [ %conv267, %if.else264 ], [ %result.1, %if.end283 ], [ %div251, %if.then247 ], [ %mul256, %if.else252 ]
  store double %result.2, double* %pResult, align 8, !tbaa !6
  %cmp287 = icmp eq i8* %z.addr.12584, %zEnd.0
  %cmp289 = icmp sgt i32 %nDigit.4580, 0
  %or.cond = and i1 %cmp289, %cmp287
  %tobool292 = icmp ne i32 %eValid.2578, 0
  %or.cond320 = and i1 %tobool292, %or.cond
  %cmp294 = icmp sgt i32 %eType.4582, 0
  %or.cond321 = and i1 %cmp294, %or.cond320
  br i1 %or.cond321, label %cleanup, label %if.else297

if.else297:                                       ; preds = %if.end286
  %cmp298 = icmp sgt i32 %eType.4582, 1
  br i1 %cmp298, label %land.lhs.true300, label %if.else309

land.lhs.true300:                                 ; preds = %if.else297
  %cmp301 = icmp eq i32 %eType.4582, 3
  %or.cond322 = or i1 %tobool292, %cmp301
  %or.cond323 = and i1 %cmp289, %or.cond322
  br i1 %or.cond323, label %cleanup, label %if.else309

if.else309:                                       ; preds = %land.lhs.true300, %if.else297
  br label %cleanup

cleanup:                                          ; preds = %if.else309, %land.lhs.true300, %if.end286, %while.body, %if.end20, %entry
  %retval.0 = phi i32 [ 0, %if.else309 ], [ 0, %entry ], [ %eType.4582, %if.end286 ], [ -1, %land.lhs.true300 ], [ 0, %if.end20 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_randomness(i32, i8*) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemIntegerify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3UnlinkAndDeleteTable(%struct.sqlite3*, i32, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3ExpirePreparedStatements(%struct.sqlite3*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeUpdateMeta(%struct.Btree*, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFreeCursor(%struct.Vdbe* nocapture readonly, %struct.VdbeCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemSetStr(%struct.sqlite3_value*, i8*, i32, i8 zeroext, void (i8*)*) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeGetMeta(%struct.Btree*, i32, i32*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemCast(%struct.sqlite3_value*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePrevious(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeEof(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorHasHint(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeClearCursor(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3VdbeIntValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3RowSetInsert(%struct.RowSet*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3RowSetTest(%struct.RowSet*, i32, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemSetRowSet(%struct.sqlite3_value*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFreeNN(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local void @sqlite3VdbeRecordUnpack(%struct.KeyInfo* nocapture readonly %pKeyInfo, i32 %nKey, i8* %pKey, %struct.UnpackedRecord* nocapture %p) unnamed_addr #4 {
entry:
  %v64.i71 = alloca i64, align 8
  %v64.i = alloca i64, align 8
  %aMem = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 1
  %0 = load %struct.sqlite3_value*, %struct.sqlite3_value** %aMem, align 8, !tbaa !11
  %default_rc = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 3
  store i8 0, i8* %default_rc, align 2, !tbaa !15
  %1 = load i8, i8* %pKey, align 1, !tbaa !10
  %cmp = icmp sgt i8 %1, -1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %incdec.ptr.i = getelementptr inbounds i8, i8* %pKey, i64 1
  %2 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv1.i = zext i8 %2 to i32
  %tobool.i = icmp slt i8 %2, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.false
  %and2.i = shl nuw nsw i32 %conv, 7
  %shl.i = and i32 %and2.i, 16256
  %or.i = or i32 %shl.i, %conv1.i
  br label %cond.end

if.end.i:                                         ; preds = %cond.false
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %pKey, i64 2
  %3 = load i8, i8* %incdec.ptr3.i, align 1, !tbaa !10
  %tobool8.i = icmp slt i8 %3, 0
  br i1 %tobool8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %conv5.i = zext i8 %3 to i32
  %shl4.i = shl nuw nsw i32 %conv, 14
  %or6.i = or i32 %shl4.i, %conv5.i
  %and10.i = and i32 %or6.i, 2080895
  %and11.i = shl nuw nsw i32 %conv1.i, 7
  %shl12.i = and i32 %and11.i, 16256
  %or13.i = or i32 %and10.i, %shl12.i
  br label %cond.end

if.end14.i:                                       ; preds = %if.end.i
  %4 = bitcast i64* %v64.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %call.i = call zeroext i8 @sqlite3GetVarint(i8* nonnull %pKey, i64* nonnull %v64.i) #5
  %5 = load i64, i64* %v64.i, align 8, !tbaa !16
  %6 = icmp ult i64 %5, 4294967295
  %storemerge43.i = select i1 %6, i64 %5, i64 4294967295
  %7 = trunc i64 %storemerge43.i to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %phitmp101 = zext i8 %call.i to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end14.i, %if.then9.i, %if.then.i, %entry
  %szHdr.1 = phi i32 [ %conv, %entry ], [ %7, %if.end14.i ], [ %or13.i, %if.then9.i ], [ %or.i, %if.then.i ]
  %cond = phi i32 [ 1, %entry ], [ %phitmp101, %if.end14.i ], [ 3, %if.then9.i ], [ 2, %if.then.i ]
  %8 = bitcast i64* %v64.i71 to i8*
  %enc = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 1
  %db = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 4
  %9 = bitcast %struct.sqlite3** %db to i64*
  %nField = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %cond.end22, %cond.end
  %d.0 = phi i32 [ %szHdr.1, %cond.end ], [ %add31, %cond.end22 ]
  %idx.0 = phi i32 [ %cond, %cond.end ], [ %add, %cond.end22 ]
  %u.0 = phi i16 [ 0, %cond.end ], [ %inc, %cond.end22 ]
  %pMem.0 = phi %struct.sqlite3_value* [ %0, %cond.end ], [ %incdec.ptr, %cond.end22 ]
  %cmp6 = icmp ult i32 %idx.0, %szHdr.1
  %cmp8 = icmp ule i32 %d.0, %nKey
  %10 = and i1 %cmp8, %cmp6
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom = zext i32 %idx.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %pKey, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp11 = icmp sgt i8 %11, -1
  %conv10 = zext i8 %11 to i32
  br i1 %cmp11, label %cond.end22, label %cond.false17

cond.false17:                                     ; preds = %while.body
  %incdec.ptr.i73 = getelementptr inbounds i8, i8* %arrayidx, i64 1
  %12 = load i8, i8* %incdec.ptr.i73, align 1, !tbaa !10
  %conv1.i74 = zext i8 %12 to i32
  %tobool.i75 = icmp slt i8 %12, 0
  br i1 %tobool.i75, label %if.end.i82, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false17
  %and2.i76 = shl nuw nsw i32 %conv10, 7
  %shl.i77 = and i32 %and2.i76, 16256
  %or.i78 = or i32 %shl.i77, %conv1.i74
  br label %cond.end22

if.end.i82:                                       ; preds = %cond.false17
  %incdec.ptr3.i80 = getelementptr inbounds i8, i8* %arrayidx, i64 2
  %13 = load i8, i8* %incdec.ptr3.i80, align 1, !tbaa !10
  %tobool8.i81 = icmp slt i8 %13, 0
  br i1 %tobool8.i81, label %if.end14.i93, label %if.then9.i90

if.then9.i90:                                     ; preds = %if.end.i82
  %conv5.i83 = zext i8 %13 to i32
  %shl4.i84 = shl nuw nsw i32 %conv10, 14
  %or6.i85 = or i32 %shl4.i84, %conv5.i83
  %and10.i86 = and i32 %or6.i85, 2080895
  %and11.i87 = shl nuw nsw i32 %conv1.i74, 7
  %shl12.i88 = and i32 %and11.i87, 16256
  %or13.i89 = or i32 %and10.i86, %shl12.i88
  br label %cond.end22

if.end14.i93:                                     ; preds = %if.end.i82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %call.i91 = call zeroext i8 @sqlite3GetVarint(i8* nonnull %arrayidx, i64* nonnull %v64.i71) #5
  %14 = load i64, i64* %v64.i71, align 8, !tbaa !16
  %15 = icmp ult i64 %14, 4294967295
  %storemerge43.i92 = select i1 %15, i64 %14, i64 4294967295
  %16 = trunc i64 %storemerge43.i92 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end14.i93, %if.then9.i90, %if.then.i79, %while.body
  %serial_type.1 = phi i32 [ %16, %if.end14.i93 ], [ %or13.i89, %if.then9.i90 ], [ %or.i78, %if.then.i79 ], [ %conv10, %while.body ]
  %cond23 = phi i8 [ %call.i91, %if.end14.i93 ], [ 3, %if.then9.i90 ], [ 2, %if.then.i79 ], [ 1, %while.body ]
  %conv25 = zext i8 %cond23 to i32
  %add = add i32 %idx.0, %conv25
  %17 = load i8, i8* %enc, align 4, !tbaa !18
  %enc26 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 2
  store i8 %17, i8* %enc26, align 2, !tbaa !21
  %18 = load i64, i64* %9, align 8, !tbaa !23
  %db27 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 9
  %19 = bitcast %struct.sqlite3** %db27 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !24
  %szMalloc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 7
  store i32 0, i32* %szMalloc, align 8, !tbaa !25
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 5
  store i8* null, i8** %z, align 8, !tbaa !26
  %idxprom28 = zext i32 %d.0 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %pKey, i64 %idxprom28
  %call30 = call i32 @sqlite3VdbeSerialGet(i8* nonnull %arrayidx29, i32 %serial_type.1, %struct.sqlite3_value* %pMem.0)
  %add31 = add i32 %call30, %d.0
  %incdec.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 1
  %inc = add nuw i16 %u.0, 1
  %20 = load i16, i16* %nField, align 8, !tbaa !27
  %cmp34 = icmp ult i16 %inc, %20
  br i1 %cmp34, label %while.cond, label %while.end

while.end:                                        ; preds = %cond.end22, %while.cond
  %d.1 = phi i32 [ %add31, %cond.end22 ], [ %d.0, %while.cond ]
  %u.1 = phi i16 [ %inc, %cond.end22 ], [ %u.0, %while.cond ]
  %pMem.1 = phi %struct.sqlite3_value* [ %incdec.ptr, %cond.end22 ], [ %pMem.0, %while.cond ]
  %cmp36 = icmp ule i32 %d.1, %nKey
  %tobool = icmp eq i16 %u.1, 0
  %or.cond = or i1 %cmp36, %tobool
  br i1 %or.cond, label %if.end40, label %if.then39

if.then39:                                        ; preds = %while.end
  %flags.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1, i32 1
  %21 = load i16, i16* %flags.i, align 8, !tbaa !28
  %22 = and i16 %21, 9216
  %cmp.i = icmp eq i16 %22, 0
  br i1 %cmp.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.then39
  %add.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* nonnull %add.ptr) #5
  br label %if.end40

if.else.i:                                        ; preds = %if.then39
  store i16 1, i16* %flags.i, align 8, !tbaa !28
  br label %if.end40

if.end40:                                         ; preds = %if.else.i, %if.then.i96, %while.end
  store i16 %u.1, i16* %nField, align 8, !tbaa !27
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.UnpackedRecord* @sqlite3VdbeAllocUnpackedRecord(%struct.KeyInfo*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCreateTable(%struct.Btree*, i32*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3*, %struct.Btree** nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor*, %struct.UnpackedRecord*, i64, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeLast(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValidNN(%struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeInsert(%struct.BtCursor*, %struct.BtreePayload* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3*, %struct.VdbeCursor*, %struct.UnpackedRecord*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxRowid(%struct.sqlite3*, %struct.BtCursor*, i64*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeDelete(%struct.BtCursor*, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3BtreeIntegerKey(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeClearTable(%struct.Btree*, i32, i32*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeNumericType(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeError(%struct.Vdbe* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value*, i8, i8) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyNumericAffinity(%struct.sqlite3_value* nocapture %pRec, i32 %bTryForInt) local_unnamed_addr #4 {
entry:
  %rValue = alloca double, align 8
  %0 = bitcast double* %rValue to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %enc1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %1 = load i8, i8* %enc1, align 2, !tbaa !21
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %2 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %3 = load i32, i32* %n, align 4, !tbaa !29
  %call = call i32 @sqlite3AtoF(i8* %2, double* nonnull %rValue, i32 %3, i8 zeroext %1)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call, 1
  %4 = load double, double* %rValue, align 8, !tbaa !6
  %i = bitcast %struct.sqlite3_value* %pRec to i64*
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %conv.i = fptosi double %4 to i64
  %cmp.i.i = fcmp oeq double %4, 0.000000e+00
  br i1 %cmp.i.i, label %alsoAnInt.exit.thread, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.lhs.true
  %5 = bitcast double %4 to i64
  %conv.i.i = sitofp i64 %conv.i to double
  %6 = bitcast double %conv.i.i to i64
  %7 = icmp ne i64 %5, %6
  %conv.off.i = add i64 %conv.i, 2251799813685248
  %8 = icmp ugt i64 %conv.off.i, 4503599627370495
  %9 = or i1 %8, %7
  br i1 %9, label %alsoAnInt.exit, label %alsoAnInt.exit.thread

alsoAnInt.exit.thread:                            ; preds = %lor.rhs.i.i, %land.lhs.true
  store i64 %conv.i, i64* %i, align 8, !tbaa !16
  br label %if.then4

alsoAnInt.exit:                                   ; preds = %lor.rhs.i.i
  %10 = load i8*, i8** %z, align 8, !tbaa !26
  %11 = load i32, i32* %n, align 4, !tbaa !29
  %12 = load i8, i8* %enc1, align 2, !tbaa !21
  %call1.i = call i32 @sqlite3Atoi64(i8* %10, i64* %i, i32 %11, i8 zeroext %12) #5
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.then4, label %if.else

if.then4:                                         ; preds = %alsoAnInt.exit, %alsoAnInt.exit.thread
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %13 = load i16, i16* %flags, align 8, !tbaa !28
  %14 = or i16 %13, 4
  store i16 %14, i16* %flags, align 8, !tbaa !28
  br label %if.end14

if.else:                                          ; preds = %alsoAnInt.exit, %if.end
  %15 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  store double %4, double* %15, align 8, !tbaa !10
  %flags7 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %16 = load i16, i16* %flags7, align 8, !tbaa !28
  %17 = or i16 %16, 8
  store i16 %17, i16* %flags7, align 8, !tbaa !28
  %tobool11 = icmp eq i32 %bTryForInt, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.else
  %call.i = call i64 @doubleToInt64(double %4) #5
  %conv.i31 = sitofp i64 %call.i to double
  %cmp.i32 = fcmp oeq double %4, %conv.i31
  %18 = add i64 %call.i, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %19, %cmp.i32
  br i1 %20, label %if.then.i33, label %if.end14

if.then.i33:                                      ; preds = %if.then12
  store i64 %call.i, i64* %i, align 8, !tbaa !10
  %21 = and i16 %16, 15936
  %22 = or i16 %21, 4
  store i16 %22, i16* %flags7, align 8, !tbaa !28
  br label %if.end14

if.end14:                                         ; preds = %if.then.i33, %if.then12, %if.else, %if.then4
  %23 = phi i16 [ %22, %if.then.i33 ], [ %17, %if.then12 ], [ %17, %if.else ], [ %14, %if.then4 ]
  %flags15 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %24 = and i16 %23, -3
  store i16 %24, i16* %flags15, align 8, !tbaa !28
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3IsNaN(double) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare double @sqlite3VdbeRealValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3MulInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3SubInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3AddInt64(i64*, i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define zeroext i16 @numericType(%struct.sqlite3_value* %pMem) local_unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 44
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv4 = trunc i32 %and to i16
  br label %return

if.end:                                           ; preds = %entry
  %and7 = and i32 %conv, 18
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %return, label %if.then9

if.then9:                                         ; preds = %if.end
  %call = call zeroext i16 @computeNumericType(%struct.sqlite3_value* nonnull %pMem)
  br label %return

return:                                           ; preds = %if.then9, %if.end, %if.then
  %retval.0 = phi i16 [ %conv4, %if.then ], [ %call, %if.then9 ], [ 0, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemMove(%struct.sqlite3_value*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @"#VDBE_EXEC_NAME"(%struct.Vdbe*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValid(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialPut(i8*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3PutVarint(i8*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VarintLen(i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyAffinity(%struct.sqlite3_value* %pRec, i8 signext %affinity, i8 zeroext %enc) local_unnamed_addr #4 {
entry:
  %acc.i = alloca %struct.sqlite3_str, align 8
  %cmp = icmp sgt i8 %affinity, 66
  br i1 %cmp, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv2 = zext i16 %0 to i32
  %and = and i32 %conv2, 4
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.then
  %and8 = and i32 %conv2, 8
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then5
  %and14 = and i32 %conv2, 2
  %tobool = icmp eq i32 %and14, 0
  br i1 %tobool, label %if.end41, label %if.then15

if.then15:                                        ; preds = %if.then11
  call void @applyNumericAffinity(%struct.sqlite3_value* nonnull %pRec, i32 1)
  br label %if.end41

if.else:                                          ; preds = %if.then5
  %r.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %1 = load double, double* %r.i, align 8, !tbaa !10
  %call.i = call i64 @doubleToInt64(double %1) #5
  %conv.i = sitofp i64 %call.i to double
  %cmp.i = fcmp oeq double %1, %conv.i
  %2 = add i64 %call.i, -9223372036854775807
  %3 = icmp ugt i64 %2, 1
  %4 = and i1 %3, %cmp.i
  br i1 %4, label %if.then.i, label %if.end41

if.then.i:                                        ; preds = %if.else
  %i.i = bitcast %struct.sqlite3_value* %pRec to i64*
  store i64 %call.i, i64* %i.i, align 8, !tbaa !10
  %5 = and i16 %0, 15936
  %6 = or i16 %5, 4
  store i16 %6, i16* %flags, align 8, !tbaa !28
  br label %if.end41

if.else18:                                        ; preds = %entry
  %cmp20 = icmp eq i8 %affinity, 66
  br i1 %cmp20, label %if.then22, label %if.end41

if.then22:                                        ; preds = %if.else18
  %flags23 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %7 = load i16, i16* %flags23, align 8, !tbaa !28
  %conv24 = zext i16 %7 to i32
  %and25 = and i32 %conv24, 2
  %cmp26 = icmp ne i32 %and25, 0
  %and31 = and i32 %conv24, 44
  %tobool32 = icmp eq i32 %and31, 0
  %or.cond = or i1 %cmp26, %tobool32
  br i1 %or.cond, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then22
  %szMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 7
  %8 = load i32, i32* %szMalloc.i, align 8, !tbaa !25
  %cmp.i54 = icmp slt i32 %8, 32
  br i1 %cmp.i54, label %sqlite3VdbeMemClearAndResize.exit, label %sqlite3VdbeMemClearAndResize.exit.thread

sqlite3VdbeMemClearAndResize.exit.thread:         ; preds = %if.then33
  %zMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 6
  %9 = bitcast i8** %zMalloc.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !30
  %z.i57 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %11 = bitcast i8** %z.i57 to i64*
  store i64 %10, i64* %11, align 8, !tbaa !26
  %12 = and i16 %7, 45
  store i16 %12, i16* %flags23, align 8, !tbaa !28
  %13 = inttoptr i64 %10 to i8*
  br label %lor.lhs.false.i.i

sqlite3VdbeMemClearAndResize.exit:                ; preds = %if.then33
  %call.i55 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* nonnull %pRec, i32 32, i32 0) #5
  %tobool.i = icmp eq i32 %call.i55, 0
  br i1 %tobool.i, label %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, label %if.then.i51

sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge: ; preds = %sqlite3VdbeMemClearAndResize.exit
  %z.i.phi.trans.insert = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %.pre = load i8*, i8** %z.i.phi.trans.insert, align 8, !tbaa !26
  %.pre68 = load i16, i16* %flags23, align 8, !tbaa !28
  br label %lor.lhs.false.i.i

if.then.i51:                                      ; preds = %sqlite3VdbeMemClearAndResize.exit
  %enc1.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 0, i8* %enc1.i, align 2, !tbaa !21
  br label %if.end35

lor.lhs.false.i.i:                                ; preds = %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, %sqlite3VdbeMemClearAndResize.exit.thread
  %14 = phi i16 [ %.pre68, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %12, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %15 = phi i8* [ %.pre, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %13, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %z.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %16 = bitcast %struct.sqlite3_str* %acc.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %zText.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 1
  store i8* %15, i8** %zText.i.i, align 8, !tbaa !31
  %db1.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 0
  store %struct.sqlite3* null, %struct.sqlite3** %db1.i.i, align 8, !tbaa !33
  %nAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 2
  store i32 32, i32* %nAlloc.i.i, align 8, !tbaa !34
  %mxAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 3
  %nChar.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 4
  %17 = bitcast i32* %mxAlloc.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(10) %17, i8 0, i64 10, i1 false) #5
  %conv.i61 = zext i16 %14 to i32
  %and.i = and i32 %conv.i61, 4
  %tobool.i62 = icmp eq i32 %and.i, 0
  br i1 %tobool.i62, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %lor.lhs.false.i.i
  %i.i63 = bitcast %struct.sqlite3_value* %pRec to i64*
  %18 = load i64, i64* %i.i63, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 %18) #5
  br label %vdbeMemRenderNum.exit

if.else.i:                                        ; preds = %lor.lhs.false.i.i
  %and3.i = and i32 %conv.i61, 32
  %tobool4.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.else.i
  %i7.i = bitcast %struct.sqlite3_value* %pRec to i64*
  %19 = load i64, i64* %i7.i, align 8, !tbaa !10
  %conv8.i = sitofp i64 %19 to double
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %conv8.i) #5
  br label %vdbeMemRenderNum.exit

if.else9.i:                                       ; preds = %if.else.i
  %r.i65 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %20 = load double, double* %r.i65, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %20) #5
  br label %vdbeMemRenderNum.exit

vdbeMemRenderNum.exit:                            ; preds = %if.else9.i, %if.then5.i, %if.then.i64
  %21 = load i32, i32* %nChar.i.i, align 8, !tbaa !35
  %idxprom.i = zext i32 %21 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %15, i64 %idxprom.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  %22 = load i8*, i8** %z.i, align 8, !tbaa !26
  %call3.i = call i64 @strlen(i8* nonnull dereferenceable(1) %22) #5
  %23 = trunc i64 %call3.i to i32
  %conv.i52 = and i32 %23, 1073741823
  %n.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  store i32 %conv.i52, i32* %n.i, align 4, !tbaa !29
  %enc4.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 1, i8* %enc4.i, align 2, !tbaa !21
  %24 = load i16, i16* %flags23, align 8, !tbaa !28
  %25 = and i16 %24, -559
  %26 = or i16 %25, 514
  store i16 %26, i16* %flags23, align 8, !tbaa !28
  %cmp.i.i = icmp eq i8 %enc, 1
  br i1 %cmp.i.i, label %if.end35, label %if.end.i.i

if.end.i.i:                                       ; preds = %vdbeMemRenderNum.exit
  %call.i.i = call i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value* nonnull %pRec, i8 zeroext %enc) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end.i.i, %vdbeMemRenderNum.exit, %if.then.i51, %if.then22
  %27 = load i16, i16* %flags23, align 8, !tbaa !28
  %28 = and i16 %27, -45
  store i16 %28, i16* %flags23, align 8, !tbaa !28
  br label %if.end41

if.end41:                                         ; preds = %if.end35, %if.else18, %if.then.i, %if.else, %if.then15, %if.then11, %if.then
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterInit(%struct.sqlite3*, i32, %struct.VdbeCursor*) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3MemCompare(%struct.sqlite3_value* %pMem1, %struct.sqlite3_value* %pMem2, %struct.CollSeq* readonly %pColl) unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %flags1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 1
  %1 = load i16, i16* %flags1, align 8, !tbaa !28
  %conv2 = zext i16 %1 to i32
  %or164 = or i16 %1, %0
  %or = zext i16 %or164 to i32
  %and = and i32 %or, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and3 = and i32 %conv2, 1
  %and4 = and i32 %conv, 1
  %sub = sub nsw i32 %and3, %and4
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i32 %or, 44
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.end98, label %if.then7

if.then7:                                         ; preds = %if.end
  %and8165 = and i16 %1, %0
  %and8 = zext i16 %and8165 to i32
  %and9 = and i32 %and8, 36
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.end26, label %if.then11

if.then11:                                        ; preds = %if.then7
  %i = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %2 = load i64, i64* %i, align 8, !tbaa !10
  %i13 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %3 = load i64, i64* %i13, align 8, !tbaa !10
  %cmp14 = icmp slt i64 %2, %3
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.then11
  %cmp22 = icmp sgt i64 %2, %3
  %. = zext i1 %cmp22 to i32
  br label %cleanup

if.end26:                                         ; preds = %if.then7
  %and28 = and i32 %and8, 8
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end47, label %if.then31

if.then31:                                        ; preds = %if.end26
  %r = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %4 = load double, double* %r, align 8, !tbaa !10
  %r34 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %5 = load double, double* %r34, align 8, !tbaa !10
  %cmp35 = fcmp olt double %4, %5
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.then31
  %cmp43 = fcmp ogt double %4, %5
  %.166 = zext i1 %cmp43 to i32
  br label %cleanup

if.end47:                                         ; preds = %if.end26
  %and48 = and i32 %conv, 36
  %cmp49 = icmp eq i32 %and48, 0
  br i1 %cmp49, label %if.end81, label %if.then51

if.then51:                                        ; preds = %if.end47
  %and52 = and i32 %conv2, 8
  %cmp53 = icmp eq i32 %and52, 0
  br i1 %cmp53, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then51
  %i57 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %6 = load i64, i64* %i57, align 8, !tbaa !10
  %r59 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %7 = load double, double* %r59, align 8, !tbaa !10
  %conv.i = sitofp i64 %6 to x86_fp80
  %conv1.i = fpext double %7 to x86_fp80
  %cmp.i = fcmp olt x86_fp80 %conv.i, %conv1.i
  %cmp4.i = fcmp ogt x86_fp80 %conv.i, %conv1.i
  %..i = zext i1 %cmp4.i to i32
  %retval.0.i = select i1 %cmp.i, i32 -1, i32 %..i
  br label %cleanup

if.else:                                          ; preds = %if.then51
  %and60 = and i32 %conv2, 36
  %cmp61 = icmp eq i32 %and60, 0
  br i1 %cmp61, label %cleanup, label %if.then63

if.then63:                                        ; preds = %if.else
  %i65 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %8 = load i64, i64* %i65, align 8, !tbaa !10
  %i67 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %9 = load i64, i64* %i67, align 8, !tbaa !10
  %cmp68 = icmp slt i64 %8, %9
  br i1 %cmp68, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.then63
  %cmp76 = icmp sgt i64 %8, %9
  %.167 = zext i1 %cmp76 to i32
  br label %cleanup

if.end81:                                         ; preds = %if.end47
  %and82 = and i32 %conv, 8
  %cmp83 = icmp eq i32 %and82, 0
  br i1 %cmp83, label %cleanup, label %if.then85

if.then85:                                        ; preds = %if.end81
  %and86 = and i32 %conv2, 36
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %cleanup, label %if.then89

if.then89:                                        ; preds = %if.then85
  %i91 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %10 = load i64, i64* %i91, align 8, !tbaa !10
  %r93 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %11 = load double, double* %r93, align 8, !tbaa !10
  %conv.i168 = sitofp i64 %10 to x86_fp80
  %conv1.i169 = fpext double %11 to x86_fp80
  %cmp.i170 = fcmp olt x86_fp80 %conv.i168, %conv1.i169
  %cmp4.i171 = fcmp ogt x86_fp80 %conv.i168, %conv1.i169
  %..i172.neg = sext i1 %cmp4.i171 to i32
  %sub95 = select i1 %cmp.i170, i32 1, i32 %..i172.neg
  br label %cleanup

if.end98:                                         ; preds = %if.end
  %and99 = and i32 %or, 2
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.end116, label %if.then101

if.then101:                                       ; preds = %if.end98
  %and102 = and i32 %conv, 2
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cleanup, label %if.end106

if.end106:                                        ; preds = %if.then101
  %and107 = and i32 %conv2, 2
  %cmp108 = icmp eq i32 %and107, 0
  br i1 %cmp108, label %cleanup, label %if.end111

if.end111:                                        ; preds = %if.end106
  %tobool112 = icmp eq %struct.CollSeq* %pColl, null
  br i1 %tobool112, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end111
  %call114 = call i32 @vdbeCompareMemString(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2, %struct.CollSeq* nonnull %pColl, i8* null)
  br label %cleanup

if.end116:                                        ; preds = %if.end111, %if.end98
  %call117 = call i32 @sqlite3BlobCompare(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then113, %if.end106, %if.then101, %if.then89, %if.then85, %if.end81, %if.end71, %if.then63, %if.else, %if.then55, %if.end38, %if.then31, %if.end17, %if.then11, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %retval.0.i, %if.then55 ], [ %sub95, %if.then89 ], [ %call114, %if.then113 ], [ %call117, %if.end116 ], [ -1, %if.then11 ], [ %., %if.end17 ], [ -1, %if.then31 ], [ %.166, %if.end38 ], [ -1, %if.then63 ], [ %.167, %if.end71 ], [ -1, %if.else ], [ -1, %if.then85 ], [ 1, %if.end81 ], [ 1, %if.then101 ], [ -1, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterNext(%struct.sqlite3*, %struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.BtCursor* @sqlite3BtreeFakeValidCursor() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXSFuncPtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXInversePtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value*, %struct.FuncDef*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value*, i64) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRawNN(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemInit(%struct.sqlite3_value*, %struct.sqlite3*, i16) #0

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* returned) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeBeginStmt(%struct.Btree*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeBeginTrans(%struct.Btree*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeHalt(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeNext(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCloseStatement(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCheckFk(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor*, i32, i32, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value*, i32, i32) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3VdbeSerialGet(i8* %buf, i32 %serial_type, %struct.sqlite3_value* %pMem) unnamed_addr #4 {
entry:
  switch i32 %serial_type, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb15
    i32 4, label %sw.bb29
    i32 5, label %sw.bb48
    i32 6, label %sw.bb78
    i32 7, label %sw.bb78
    i32 8, label %sw.bb79
    i32 9, label %sw.bb79
  ]

sw.bb:                                            ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 16385, i16* %flags, align 8, !tbaa !28
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 0, i32* %n, align 4, !tbaa !29
  %nZero = bitcast %struct.sqlite3_value* %pMem to i32*
  store i32 0, i32* %nZero, align 8, !tbaa !10
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  %flags2 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 1, i16* %flags2, align 8, !tbaa !28
  br label %return

sw.bb3:                                           ; preds = %entry
  %0 = load i8, i8* %buf, align 1, !tbaa !10
  %conv = sext i8 %0 to i64
  %i = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv, i64* %i, align 8, !tbaa !10
  %flags5 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags5, align 8, !tbaa !28
  br label %return

sw.bb6:                                           ; preds = %entry
  %1 = load i8, i8* %buf, align 1, !tbaa !10
  %conv8 = sext i8 %1 to i32
  %mul = shl nsw i32 %conv8, 8
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 1
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !10
  %conv10 = zext i8 %2 to i32
  %or = or i32 %mul, %conv10
  %conv11 = sext i32 %or to i64
  %i13 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv11, i64* %i13, align 8, !tbaa !10
  %flags14 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags14, align 8, !tbaa !28
  br label %return

sw.bb15:                                          ; preds = %entry
  %3 = load i8, i8* %buf, align 1, !tbaa !10
  %conv17 = sext i8 %3 to i32
  %mul18 = shl nsw i32 %conv17, 16
  %arrayidx19 = getelementptr inbounds i8, i8* %buf, i64 1
  %4 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv20, 8
  %or21 = or i32 %shl, %mul18
  %arrayidx22 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx22, align 1, !tbaa !10
  %conv23 = zext i8 %5 to i32
  %or24 = or i32 %or21, %conv23
  %conv25 = sext i32 %or24 to i64
  %i27 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv25, i64* %i27, align 8, !tbaa !10
  %flags28 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags28, align 8, !tbaa !28
  br label %return

sw.bb29:                                          ; preds = %entry
  %6 = load i8, i8* %buf, align 1, !tbaa !10
  %conv31 = sext i8 %6 to i32
  %mul32 = shl nsw i32 %conv31, 24
  %arrayidx33 = getelementptr inbounds i8, i8* %buf, i64 1
  %7 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %7 to i32
  %shl35 = shl nuw nsw i32 %conv34, 16
  %or36 = or i32 %shl35, %mul32
  %arrayidx37 = getelementptr inbounds i8, i8* %buf, i64 2
  %8 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %8 to i32
  %shl39 = shl nuw nsw i32 %conv38, 8
  %or40 = or i32 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %buf, i64 3
  %9 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %9 to i32
  %or43 = or i32 %or40, %conv42
  %conv44 = sext i32 %or43 to i64
  %i46 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv44, i64* %i46, align 8, !tbaa !10
  %flags47 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags47, align 8, !tbaa !28
  br label %return

sw.bb48:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 2
  %10 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv50 = zext i8 %10 to i64
  %shl51 = shl nuw nsw i64 %conv50, 24
  %arrayidx53 = getelementptr inbounds i8, i8* %buf, i64 3
  %11 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %11 to i64
  %shl55 = shl nuw nsw i64 %conv54, 16
  %or56 = or i64 %shl55, %shl51
  %arrayidx58 = getelementptr inbounds i8, i8* %buf, i64 4
  %12 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %12 to i64
  %shl60 = shl nuw nsw i64 %conv59, 8
  %or61 = or i64 %or56, %shl60
  %arrayidx63 = getelementptr inbounds i8, i8* %buf, i64 5
  %13 = load i8, i8* %arrayidx63, align 1, !tbaa !10
  %conv64 = zext i8 %13 to i64
  %or65 = or i64 %or61, %conv64
  %14 = load i8, i8* %buf, align 1, !tbaa !10
  %conv68 = sext i8 %14 to i32
  %mul69 = shl nsw i32 %conv68, 8
  %arrayidx70 = getelementptr inbounds i8, i8* %buf, i64 1
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %15 to i32
  %or72 = or i32 %mul69, %conv71
  %conv73 = sext i32 %or72 to i64
  %mul74 = shl nsw i64 %conv73, 32
  %add = or i64 %or65, %mul74
  %i76 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %add, i64* %i76, align 8, !tbaa !10
  %flags77 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags77, align 8, !tbaa !28
  br label %return

sw.bb78:                                          ; preds = %entry, %entry
  %16 = load i8, i8* %buf, align 1, !tbaa !10
  %conv.i = zext i8 %16 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 24
  %arrayidx1.i = getelementptr inbounds i8, i8* %buf, i64 1
  %17 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %17 to i64
  %shl3.i = shl nuw nsw i64 %conv2.i, 16
  %or.i = or i64 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr inbounds i8, i8* %buf, i64 2
  %18 = load i8, i8* %arrayidx4.i, align 1, !tbaa !10
  %conv5.i = zext i8 %18 to i64
  %shl6.i = shl nuw nsw i64 %conv5.i, 8
  %or7.i = or i64 %or.i, %shl6.i
  %arrayidx8.i = getelementptr inbounds i8, i8* %buf, i64 3
  %19 = load i8, i8* %arrayidx8.i, align 1, !tbaa !10
  %conv9.i = zext i8 %19 to i64
  %or10.i = or i64 %or7.i, %conv9.i
  %add.ptr.i = getelementptr inbounds i8, i8* %buf, i64 4
  %20 = load i8, i8* %add.ptr.i, align 1, !tbaa !10
  %conv13.i = zext i8 %20 to i64
  %shl14.i = shl nuw nsw i64 %conv13.i, 24
  %arrayidx16.i = getelementptr inbounds i8, i8* %buf, i64 5
  %21 = load i8, i8* %arrayidx16.i, align 1, !tbaa !10
  %conv17.i = zext i8 %21 to i64
  %shl18.i = shl nuw nsw i64 %conv17.i, 16
  %arrayidx21.i = getelementptr inbounds i8, i8* %buf, i64 6
  %22 = load i8, i8* %arrayidx21.i, align 1, !tbaa !10
  %conv22.i = zext i8 %22 to i64
  %shl23.i = shl nuw nsw i64 %conv22.i, 8
  %arrayidx26.i = getelementptr inbounds i8, i8* %buf, i64 7
  %23 = load i8, i8* %arrayidx26.i, align 1, !tbaa !10
  %conv27.i = zext i8 %23 to i64
  %shl29.i = shl nuw i64 %or10.i, 32
  %or19.i = or i64 %shl29.i, %shl14.i
  %or24.i = or i64 %or19.i, %shl18.i
  %or28.i = or i64 %or24.i, %shl23.i
  %add.i = or i64 %or28.i, %conv27.i
  %cmp.i = icmp eq i32 %serial_type, 6
  %i.i = bitcast %struct.sqlite3_value* %pMem to i64*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 8, !tbaa !10
  br label %serialGet.exit

if.else.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 1
  %and.i = and i64 %add.i, 9218868437227405312
  %cmp35.i = icmp eq i64 %and.i, 9218868437227405312
  %and37.i = and i64 %add.i, 4503599627370495
  %cmp38.i = icmp ne i64 %and37.i, 0
  %24 = and i1 %cmp35.i, %cmp38.i
  %conv40.i = select i1 %24, i16 1, i16 8
  br label %serialGet.exit

serialGet.exit:                                   ; preds = %if.else.i, %if.then.i
  %conv40.sink.i = phi i16 [ 4, %if.then.i ], [ %conv40.i, %if.else.i ]
  %25 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %conv40.sink.i, i16* %25, align 8
  br label %return

sw.bb79:                                          ; preds = %entry, %entry
  %sub = add nsw i32 %serial_type, -8
  %conv80 = zext i32 %sub to i64
  %i82 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv80, i64* %i82, align 8, !tbaa !10
  %flags83 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags83, align 8, !tbaa !28
  br label %return

sw.default:                                       ; preds = %entry
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 5
  store i8* %buf, i8** %z, align 8, !tbaa !26
  %sub84 = add i32 %serial_type, -12
  %div = lshr i32 %sub84, 1
  %n85 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 %div, i32* %n85, align 4, !tbaa !29
  %and = and i32 %serial_type, 1
  %idxprom = zext i32 %and to i64
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* @sqlite3VdbeSerialGet.aFlag, i64 0, i64 %idxprom
  %26 = load i16, i16* %arrayidx86, align 2, !tbaa !36
  %flags87 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %26, i16* %flags87, align 8, !tbaa !28
  br label %return

return:                                           ; preds = %sw.default, %sw.bb79, %serialGet.exit, %sw.bb48, %sw.bb29, %sw.bb15, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ 0, %sw.bb79 ], [ 8, %serialGet.exit ], [ 6, %sw.bb48 ], [ 4, %sw.bb29 ], [ 3, %sw.bb15 ], [ 2, %sw.bb6 ], [ 1, %sw.bb3 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRelease(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialTypeLen(i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3VdbeOneByteSerialTypeLen(i8) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3GetVarint32(i8*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8* @sqlite3BtreePayloadFetch(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreePayloadSize(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetNull(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor**, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeFirst(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeCursorHintFlags(%struct.BtCursor*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* nocapture readonly, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare void @printProgress(i64, i32, i64)

declare void @printInt(i64, i64, i32, i64)

declare void @printDouble(double, i64, i32, i64)

declare void @printPtrAndValue(i64, i64, i64, i32, i64, i1)

define i32 @jittedFunction(%struct.Vdbe* %0, i8* %1, i32* %2, i8* %3, i8* %4) !dbg !37 {
  %6 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 19, !dbg !41
  %7 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6, align 8, !dbg !43
  %8 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 21, !dbg !44
  %9 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !45
  %10 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 23, !dbg !46
  %11 = load %struct.VdbeOp*, %struct.VdbeOp** %10, align 8, !dbg !47
  %12 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 0, !dbg !48
  %13 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !49
  br label %14, !dbg !50

14:                                               ; preds = %8191, %8147, %.critedge4, %8183, %8268, %8261, %8328, %8451, %3690, %.critedge1, %4139, %4209, %4216, %5
  %15 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 10, !dbg !51
  %16 = load i32, i32* %15, align 4, !dbg !52
  switch i32 %16, label %17 [
    i32 0, label %20
    i32 1, label %30
    i32 2, label %48
    i32 3, label %64
    i32 4, label %130
    i32 5, label %139
    i32 6, label %157
    i32 7, label %175
  ], !dbg !53

17:                                               ; preds = %14
  switch i32 %16, label %18 [
    i32 8, label %180
    i32 9, label %197
    i32 10, label %221
    i32 11, label %478
    i32 12, label %495
    i32 13, label %518
    i32 14, label %560
    i32 15, label %612
    i32 16, label %869
    i32 17, label %886
    i32 18, label %909
    i32 19, label %932
    i32 20, label %976
    i32 21, label %1028
    i32 22, label %1285
    i32 23, label %1542
    i32 24, label %1549
    i32 25, label %1806
    i32 26, label %1813
    i32 27, label %2226
    i32 28, label %2242
    i32 29, label %2254
    i32 30, label %2262
    i32 31, label %2286
    i32 32, label %2295
    i32 33, label %2550
    i32 34, label %2588
    i32 35, label %2592
    i32 36, label %2595
    i32 37, label %2600
    i32 38, label %.critedge
    i32 39, label %2611
    i32 40, label %2868
    i32 41, label %2875
    i32 42, label %3132
    i32 43, label %3139
    i32 44, label %3218
    i32 45, label %3297
    i32 46, label %3381
    i32 47, label %3385
    i32 48, label %3640
    i32 49, label %3658
    i32 50, label %3667
    i32 51, label %4216
    i32 52, label %3672
    i32 53, label %3690
    i32 54, label %3697
    i32 55, label %.critedge1
    i32 56, label %3710
    i32 57, label %3721
    i32 58, label %3724
    i32 59, label %3727
    i32 60, label %4021
    i32 61, label %4084
    i32 62, label %4139
    i32 63, label %4146
    i32 64, label %4191
    i32 65, label %4209
    i32 66, label %4216
    i32 67, label %4223
    i32 68, label %4232
    i32 69, label %4249
    i32 70, label %4273
    i32 71, label %4530
  ], !dbg !53

18:                                               ; preds = %17
  switch i32 %16, label %19 [
    i32 72, label %4548
    i32 73, label %4564
    i32 74, label %4582
    i32 75, label %4587
    i32 76, label %4596
    i32 77, label %4614
    i32 78, label %4632
    i32 79, label %4637
    i32 80, label %4654
    i32 81, label %4678
    i32 82, label %4935
    i32 83, label %4952
    i32 84, label %4975
    i32 85, label %5017
    i32 86, label %5069
    i32 87, label %5326
    i32 88, label %5343
    i32 89, label %5366
    i32 90, label %5389
    i32 91, label %5433
    i32 92, label %5485
    i32 93, label %5742
    i32 94, label %5999
    i32 95, label %6006
    i32 96, label %6263
    i32 97, label %6270
    i32 98, label %6683
    i32 99, label %6699
    i32 100, label %6711
    i32 101, label %6719
    i32 102, label %6743
    i32 103, label %6752
    i32 104, label %7007
    i32 105, label %7045
    i32 106, label %7049
    i32 107, label %7052
    i32 108, label %7057
    i32 109, label %.critedge3
    i32 110, label %7068
    i32 111, label %7325
    i32 112, label %7332
    i32 113, label %7589
    i32 114, label %7596
    i32 115, label %7675
    i32 116, label %7754
    i32 117, label %7838
    i32 118, label %7842
    i32 119, label %8097
    i32 120, label %8115
    i32 121, label %8124
    i32 122, label %8268
    i32 123, label %8129
    i32 124, label %8147
    i32 125, label %8154
    i32 126, label %.critedge4
    i32 127, label %8167
    i32 128, label %8178
    i32 129, label %8183
    i32 130, label %8191
    i32 131, label %8198
    i32 132, label %8243
    i32 133, label %8261
    i32 134, label %8268
    i32 135, label %8278
  ], !dbg !53

19:                                               ; preds = %18
  switch i32 %16, label %20 [
    i32 136, label %8296
    i32 137, label %8323
    i32 138, label %8328
    i32 139, label %8336
    i32 140, label %8339
    i32 141, label %8346
    i32 142, label %8328
    i32 143, label %8429
    i32 144, label %8440
    i32 145, label %8443
    i32 146, label %8451
    i32 147, label %8458
    i32 148, label %8489
    i32 149, label %8744
    i32 150, label %8785
    i32 151, label %9041
    i32 152, label %9297
    i32 153, label %9553
    i32 154, label %9810
    i32 155, label %9860
    i32 156, label %10507
    i32 157, label %10523
    i32 158, label %10535
    i32 159, label %10543
    i32 160, label %10567
    i32 161, label %10576
    i32 162, label %10833
    i32 163, label %11090
    i32 164, label %11347
    i32 165, label %11604
    i32 166, label %11859
    i32 167, label %11904
    i32 168, label %11913
    i32 169, label %11915
    i32 170, label %11937
    i32 171, label %30
  ], !dbg !53

20:                                               ; preds = %19, %14
  %21 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, i32 3, !dbg !54
  store i32 0, i32* %21, align 4, !dbg !57
  %22 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 11, i32 3, !dbg !54
  store i32 0, i32* %22, align 4, !dbg !57
  %23 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !54
  store i32 0, i32* %23, align 4, !dbg !57
  %24 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, i32 3, !dbg !54
  store i32 0, i32* %24, align 4, !dbg !57
  %25 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 82, i32 3, !dbg !54
  store i32 0, i32* %25, align 4, !dbg !57
  %26 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 87, i32 3, !dbg !54
  store i32 0, i32* %26, align 4, !dbg !57
  %27 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !58
  %28 = load i32, i32* %27, align 4, !dbg !59
  %29 = add i32 %28, 1, !dbg !60
  store i32 %29, i32* %27, align 4, !dbg !61
  br label %11915, !dbg !62

30:                                               ; preds = %11951, %19, %14
  %31 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 1, !dbg !63
  %32 = call i8* @llvm.stacksave(), !dbg !66
  %33 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %31, i32 0, i32 4, !dbg !67
  %34 = load i32, i32* %33, align 4, !dbg !70
  %35 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %34, !dbg !71
  %36 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %35, i32 0, i32 1, !dbg !66
  %37 = load i16, i16* %36, align 2, !dbg !66
  %38 = and i16 %37, 9216, !dbg !66
  %39 = icmp ne i16 %38, 0, !dbg !66
  %40 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %39, label %41, label %43, !dbg !66

41:                                               ; preds = %30
  %42 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %35), !dbg !66
  store %struct.sqlite3_value* %42, %struct.sqlite3_value** %40, align 8, !dbg !66
  br label %44, !dbg !66

43:                                               ; preds = %30
  store i16 4, i16* %36, align 2, !dbg !66
  store %struct.sqlite3_value* %35, %struct.sqlite3_value** %40, align 8, !dbg !66
  br label %44, !dbg !66

44:                                               ; preds = %43, %41
  %45 = load %struct.sqlite3_value*, %struct.sqlite3_value** %40, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %32), !dbg !66
  %46 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %45, i32 0, i32 0, i32 0, !dbg !72
  %47 = bitcast double* %46 to i64*, !dbg !73
  store i64 66, i64* %47, align 4, !dbg !74
  br label %48, !dbg !75

48:                                               ; preds = %14, %44
  %49 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %50 = load %struct.VdbeFrame*, %struct.VdbeFrame** %49, align 8, !dbg !79
  %51 = ptrtoint %struct.VdbeFrame* %50 to i64, !dbg !80
  %52 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %53 = load i32, i32* %52, align 4, !dbg !82
  %54 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, i32 3, !dbg !83
  %55 = icmp ne i64 %51, 0, !dbg !84
  br i1 %55, label %56, label %60, !dbg !85

56:                                               ; preds = %48
  %57 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %50, i32 0, i32 6, !dbg !86
  %58 = load i8*, i8** %57, align 8, !dbg !87
  %59 = load i8, i8* %58, align 1, !dbg !88
  br label %63, !dbg !89

60:                                               ; preds = %48
  %61 = load i32, i32* %54, align 4, !dbg !90
  %62 = icmp eq i32 %61, %53, !dbg !91
  br i1 %62, label %4216, label %63, !dbg !92

63:                                               ; preds = %60, %56
  store i32 %53, i32* %54, align 4, !dbg !93
  br label %64, !dbg !94

64:                                               ; preds = %14, %63
  %65 = call i8* @llvm.stacksave(), !dbg !95
  %66 = alloca %struct.VdbeCursor*, align 8, !dbg !98
  %67 = alloca i32, align 8, !dbg !99
  %68 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !100
  %69 = load %struct.VdbeCursor*, %struct.VdbeCursor** %68, align 8, !dbg !101
  store %struct.VdbeCursor* %69, %struct.VdbeCursor** %66, align 8, !dbg !102
  %70 = icmp ne %struct.VdbeCursor* %69, null, !dbg !103
  br i1 %70, label %71, label %81, !dbg !104

71:                                               ; preds = %64
  %72 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %69, i32 0, i32 6, !dbg !105
  %73 = load %struct.Btree*, %struct.Btree** %72, align 8, !dbg !106
  %74 = icmp ne %struct.Btree* %73, null, !dbg !107
  br i1 %74, label %75, label %81, !dbg !108

75:                                               ; preds = %71
  %76 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %69, i32 0, i32 7, !dbg !109
  store i64 0, i64* %76, align 4, !dbg !110
  %77 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %69, i32 0, i32 9, !dbg !111
  store i32 0, i32* %77, align 4, !dbg !112
  %78 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %69, i32 0, i32 15, !dbg !113
  %79 = load i32, i32* %78, align 4, !dbg !114
  %80 = call i32 @sqlite3BtreeClearTable(%struct.Btree* %73, i32 %79, i32* null), !dbg !115
  store i32 %80, i32* %67, align 4, !dbg !116
  br label %126, !dbg !117

81:                                               ; preds = %71, %64
  %82 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 1, i32 2, i32 -1, i8 0), !dbg !118
  store %struct.VdbeCursor* %82, %struct.VdbeCursor** %66, align 8, !dbg !119
  %83 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 5, !dbg !120
  %84 = load i8, i8* %83, align 1, !dbg !121
  %85 = or i8 %84, 1, !dbg !122
  store i8 %85, i8* %83, align 1, !dbg !123
  %86 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 0, !dbg !124
  %87 = load %struct.sqlite3_vfs*, %struct.sqlite3_vfs** %86, align 8, !dbg !125
  %88 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 6, !dbg !126
  %89 = call i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs* %87, i8* null, %struct.sqlite3* %13, %struct.Btree** %88, i32 5, i32 1054), !dbg !127
  store i32 %89, i32* %67, align 4, !dbg !128
  %90 = icmp eq i32 %89, 0, !dbg !129
  br i1 %90, label %91, label %94, !dbg !130

91:                                               ; preds = %81
  %92 = load %struct.Btree*, %struct.Btree** %88, align 8, !dbg !131
  %93 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %92, i32 1, i32* null), !dbg !132
  store i32 %93, i32* %67, align 4, !dbg !133
  br label %94, !dbg !134

94:                                               ; preds = %91, %81
  %95 = load i32, i32* %67, align 4, !dbg !135
  %96 = icmp eq i32 %95, 0, !dbg !136
  br i1 %96, label %97, label %121, !dbg !137

97:                                               ; preds = %94
  %98 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 3, !dbg !138
  %99 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %98, i32 0, i32 6, !dbg !139
  %100 = bitcast %union.p4union* %99 to %struct.KeyInfo**, !dbg !140
  %101 = load %struct.KeyInfo*, %struct.KeyInfo** %100, align 8, !dbg !141
  %102 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 13, !dbg !142
  store %struct.KeyInfo* %101, %struct.KeyInfo** %102, align 8, !dbg !143
  %103 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 15, !dbg !144
  %104 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 12, i32 0, !dbg !145
  %105 = icmp ne %struct.KeyInfo* %101, null, !dbg !146
  br i1 %105, label %106, label %116, !dbg !147

106:                                              ; preds = %97
  %107 = load %struct.Btree*, %struct.Btree** %88, align 8, !dbg !148
  %108 = call i32 @sqlite3BtreeCreateTable(%struct.Btree* %107, i32* %103, i32 2), !dbg !149
  store i32 %108, i32* %67, align 4, !dbg !150
  %109 = icmp eq i32 %108, 0, !dbg !151
  br i1 %109, label %110, label %114, !dbg !152

110:                                              ; preds = %106
  %111 = load %struct.BtCursor*, %struct.BtCursor** %104, align 8, !dbg !153
  %112 = load i32, i32* %103, align 4, !dbg !154
  %113 = call i32 @sqlite3BtreeCursor(%struct.Btree* %107, i32 %112, i32 4, %struct.KeyInfo* %101, %struct.BtCursor* %111), !dbg !155
  store i32 %113, i32* %67, align 4, !dbg !156
  br label %114, !dbg !157

114:                                              ; preds = %110, %106
  %115 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 4, !dbg !158
  store i8 0, i8* %115, align 1, !dbg !159
  br label %121, !dbg !160

116:                                              ; preds = %97
  store i32 1, i32* %103, align 4, !dbg !161
  %117 = load %struct.BtCursor*, %struct.BtCursor** %104, align 8, !dbg !162
  %118 = load %struct.Btree*, %struct.Btree** %88, align 8, !dbg !163
  %119 = call i32 @sqlite3BtreeCursor(%struct.Btree* %118, i32 1, i32 4, %struct.KeyInfo* null, %struct.BtCursor* %117), !dbg !164
  store i32 %119, i32* %67, align 4, !dbg !165
  %120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %82, i32 0, i32 4, !dbg !166
  store i8 1, i8* %120, align 1, !dbg !167
  br label %121, !dbg !168

121:                                              ; preds = %114, %116, %94
  %122 = load %struct.VdbeCursor*, %struct.VdbeCursor** %66, align 8, !dbg !169
  %123 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 5, !dbg !170
  %124 = load i8, i8* %123, align 1, !dbg !171
  %125 = or i8 %124, 1, !dbg !172
  store i8 %125, i8* %123, align 1, !dbg !173
  br label %126, !dbg !174

126:                                              ; preds = %121, %75
  %127 = load i32, i32* %67, align 4, !dbg !175
  %128 = load %struct.VdbeCursor*, %struct.VdbeCursor** %66, align 8, !dbg !176
  %129 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %128, i32 0, i32 2, !dbg !177
  store i8 1, i8* %129, align 1, !dbg !178
  call void @llvm.stackrestore(i8* %65), !dbg !179
  br label %130, !dbg !75

130:                                              ; preds = %14, %126
  %131 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 5, i32 3, i32 -1, i8 1), !dbg !180
  %132 = ptrtoint %struct.VdbeCursor* %131 to i64, !dbg !183
  %133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %131, i32 0, i32 13, !dbg !184
  %134 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 4, !dbg !185
  %135 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %134, i32 0, i32 6, !dbg !186
  %136 = bitcast %union.p4union* %135 to %struct.KeyInfo**, !dbg !187
  %137 = load %struct.KeyInfo*, %struct.KeyInfo** %136, align 8, !dbg !188
  store %struct.KeyInfo* %137, %struct.KeyInfo** %133, align 8, !dbg !189
  %138 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %131), !dbg !190
  br label %139, !dbg !75

139:                                              ; preds = %14, %130
  %140 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 5, !dbg !63
  %141 = call i8* @llvm.stacksave(), !dbg !66
  %142 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %140, i32 0, i32 4, !dbg !67
  %143 = load i32, i32* %142, align 4, !dbg !70
  %144 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %143, !dbg !71
  %145 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %144, i32 0, i32 1, !dbg !66
  %146 = load i16, i16* %145, align 2, !dbg !66
  %147 = and i16 %146, 9216, !dbg !66
  %148 = icmp ne i16 %147, 0, !dbg !66
  %149 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %148, label %150, label %152, !dbg !66

150:                                              ; preds = %139
  %151 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %144), !dbg !66
  store %struct.sqlite3_value* %151, %struct.sqlite3_value** %149, align 8, !dbg !66
  br label %153, !dbg !66

152:                                              ; preds = %139
  store i16 4, i16* %145, align 2, !dbg !66
  store %struct.sqlite3_value* %144, %struct.sqlite3_value** %149, align 8, !dbg !66
  br label %153, !dbg !66

153:                                              ; preds = %152, %150
  %154 = load %struct.sqlite3_value*, %struct.sqlite3_value** %149, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %141), !dbg !66
  %155 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %154, i32 0, i32 0, i32 0, !dbg !72
  %156 = bitcast double* %155 to i64*, !dbg !73
  store i64 0, i64* %156, align 4, !dbg !74
  br label %157, !dbg !75

157:                                              ; preds = %14, %153
  %158 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 6, !dbg !191
  %159 = call i8* @llvm.stacksave(), !dbg !194
  %160 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %158, i32 0, i32 4, !dbg !67
  %161 = load i32, i32* %160, align 4, !dbg !70
  %162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %161, !dbg !71
  %163 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %162, i32 0, i32 1, !dbg !194
  %164 = load i16, i16* %163, align 2, !dbg !194
  %165 = and i16 %164, 9216, !dbg !194
  %166 = icmp ne i16 %165, 0, !dbg !194
  %167 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %166, label %168, label %170, !dbg !194

168:                                              ; preds = %157
  %169 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %162), !dbg !194
  store %struct.sqlite3_value* %169, %struct.sqlite3_value** %167, align 8, !dbg !194
  br label %171, !dbg !194

170:                                              ; preds = %157
  store i16 4, i16* %163, align 2, !dbg !194
  store %struct.sqlite3_value* %162, %struct.sqlite3_value** %167, align 8, !dbg !194
  br label %171, !dbg !194

171:                                              ; preds = %170, %168
  %172 = load %struct.sqlite3_value*, %struct.sqlite3_value** %167, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %159), !dbg !194
  %173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %172, i32 0, i32 1, !dbg !195
  store i16 1, i16* %173, align 2, !dbg !196
  %174 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %172, i32 0, i32 4, !dbg !197
  store i32 0, i32* %174, align 4, !dbg !198
  br label %175, !dbg !75

175:                                              ; preds = %14, %171
  %176 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !199
  %177 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %176, i32 0, i32 1, !dbg !202
  store i16 4, i16* %177, align 2, !dbg !203
  %178 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %176, i32 0, i32 0, i32 0, !dbg !204
  %179 = bitcast double* %178 to i64*, !dbg !205
  store i64 7, i64* %179, align 4, !dbg !206
  br label %4146, !dbg !207

180:                                              ; preds = %17
  %181 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !208
  %182 = getelementptr %struct.sqlite3, %struct.sqlite3* %181, i32 0, i32 4, !dbg !211
  %183 = load %struct.Db*, %struct.Db** %182, align 8, !dbg !212
  %184 = getelementptr %struct.Db, %struct.Db* %183, i32 0, i32 1, !dbg !213
  %185 = load %struct.Btree*, %struct.Btree** %184, align 8, !dbg !214
  %186 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 2, i32 11, i32 0, i8 0), !dbg !215
  %187 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 2, !dbg !216
  store i8 1, i8* %187, align 1, !dbg !217
  %188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 5, !dbg !218
  %189 = load i8, i8* %188, align 1, !dbg !219
  %190 = or i8 %189, 4, !dbg !220
  store i8 %190, i8* %188, align 1, !dbg !221
  %191 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 15, !dbg !222
  store i32 10, i32* %191, align 4, !dbg !223
  %192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 12, i32 0, !dbg !224
  %193 = load %struct.BtCursor*, %struct.BtCursor** %192, align 8, !dbg !225
  %194 = call i32 @sqlite3BtreeCursor(%struct.Btree* %185, i32 10, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %193), !dbg !226
  %195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 13, !dbg !227
  store %struct.KeyInfo* null, %struct.KeyInfo** %195, align 8, !dbg !228
  %196 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %186, i32 0, i32 4, !dbg !229
  store i8 1, i8* %196, align 1, !dbg !230
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %193, i32 0), !dbg !231
  br label %197, !dbg !75

197:                                              ; preds = %17, %180
  %198 = call i8* @llvm.stacksave(), !dbg !232
  %199 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %200 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %199, i32 2, !dbg !236
  %201 = load %struct.VdbeCursor*, %struct.VdbeCursor** %200, align 8, !dbg !237
  %202 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %202, align 4, !dbg !239
  %203 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 0, !dbg !240
  %204 = load i8, i8* %203, align 1, !dbg !241
  %205 = icmp eq i8 %204, 1, !dbg !242
  %206 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %206, align 4, !dbg !244
  br i1 %205, label %207, label %209, !dbg !245

207:                                              ; preds = %197
  %208 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %201, i32* %202), !dbg !246
  store i32 %208, i32* %206, align 4, !dbg !247
  br label %215, !dbg !248

209:                                              ; preds = %197
  %210 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 12, i32 0, !dbg !249
  %211 = load %struct.BtCursor*, %struct.BtCursor** %210, align 8, !dbg !250
  %212 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %211, i32* %202), !dbg !251
  store i32 %212, i32* %206, align 4, !dbg !252
  %213 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 3, !dbg !253
  store i8 0, i8* %213, align 1, !dbg !254
  %214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 9, !dbg !255
  store i32 0, i32* %214, align 4, !dbg !256
  br label %215, !dbg !257

215:                                              ; preds = %209, %207
  %216 = load i32, i32* %206, align 4, !dbg !258
  %217 = load i32, i32* %202, align 4, !dbg !259
  %218 = trunc i32 %217 to i8, !dbg !260
  %219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %201, i32 0, i32 2, !dbg !261
  store i8 %218, i8* %219, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %198), !dbg !263
  %220 = icmp ne i32 %217, 0, !dbg !264
  br i1 %220, label %2254, label %221, !dbg !265

221:                                              ; preds = %17, %2252, %215
  %222 = call i8* @llvm.stacksave(), !dbg !266
  %223 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %224 = load i8, i8* %223, align 1, !dbg !270
  %225 = alloca i32, align 4, !dbg !271
  store i32 2, i32* %225, align 4, !dbg !272
  %226 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !273
  %227 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %228 = load %struct.VdbeCursor*, %struct.VdbeCursor** %226, align 8, !dbg !275
  store %struct.VdbeCursor* %228, %struct.VdbeCursor** %227, align 8, !dbg !276
  %229 = alloca i8*, align 8, !dbg !277
  %230 = alloca i32, align 4, !dbg !278
  %231 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %227, i32* %225), !dbg !279
  %232 = load %struct.VdbeCursor*, %struct.VdbeCursor** %227, align 8, !dbg !280
  %233 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !281
  %234 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 16, !dbg !282
  %235 = load i16, i16* %234, align 2, !dbg !283
  %236 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 19, !dbg !284
  %237 = load i32*, i32** %236, align 8, !dbg !285
  %238 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 0, !dbg !286
  %239 = load i8, i8* %238, align 1, !dbg !287
  %240 = icmp ne i8 %239, 3, !dbg !288
  %241 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 2, !dbg !289
  %242 = load i8, i8* %241, align 1, !dbg !290
  %243 = icmp ne i8 %242, 0, !dbg !291
  %244 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 14, !dbg !292
  %245 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 21, !dbg !293
  %246 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 22, !dbg !294
  %247 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 20, !dbg !295
  %248 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 17, !dbg !296
  %249 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 9, !dbg !297
  %250 = load i32, i32* %249, align 4, !dbg !298
  %251 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %252 = load i32, i32* %251, align 4, !dbg !300
  %253 = icmp ne i32 %250, %252, !dbg !301
  br i1 %253, label %254, label %296, !dbg !302

254:                                              ; preds = %221
  br i1 %243, label %276, label %271, !dbg !303

255:                                              ; preds = %271, %278
  %256 = load i32, i32* %251, align 4, !dbg !304
  store i32 %256, i32* %249, align 4, !dbg !305
  %257 = load i8*, i8** %247, align 8, !dbg !306
  %258 = load i8, i8* %257, align 1, !dbg !307
  %259 = icmp sgt i8 %258, -1, !dbg !310
  br i1 %259, label %260, label %262, !dbg !311

260:                                              ; preds = %255
  %261 = zext i8 %258 to i32, !dbg !312
  store i32 %261, i32* %237, align 4, !dbg !313
  store i32 1, i32* %244, align 4, !dbg !314
  br label %265, !dbg !315

262:                                              ; preds = %255
  %263 = call i8 @sqlite3GetVarint32(i8* %257, i32* %237), !dbg !316
  %264 = zext i8 %263 to i32, !dbg !317
  store i32 %264, i32* %244, align 4, !dbg !318
  br label %265, !dbg !319

265:                                              ; preds = %262, %260
  store i16 0, i16* %248, align 2, !dbg !320
  %266 = load i32, i32* %246, align 4, !dbg !321
  %267 = load i32, i32* %237, align 4, !dbg !322
  %268 = icmp ult i32 %266, %267, !dbg !323
  br i1 %268, label %270, label %269, !dbg !324

269:                                              ; preds = %265
  store i8* %257, i8** %229, align 8, !dbg !325
  br label %389, !dbg !326

270:                                              ; preds = %265
  store i8* null, i8** %247, align 8, !dbg !327
  store i32 0, i32* %246, align 4, !dbg !328
  br label %296, !dbg !329

271:                                              ; preds = %254
  %272 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 12, i32 0, !dbg !330
  %273 = load %struct.BtCursor*, %struct.BtCursor** %272, align 8, !dbg !331
  %274 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %273), !dbg !332
  store i32 %274, i32* %245, align 4, !dbg !333
  %275 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %273, i32* %246), !dbg !334
  store i8* %275, i8** %247, align 8, !dbg !335
  br label %255, !dbg !336

276:                                              ; preds = %254
  %277 = icmp eq i8 %239, 3, !dbg !337
  br i1 %277, label %278, label %289, !dbg !338

278:                                              ; preds = %276
  %279 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 10, !dbg !339
  %280 = load i32, i32* %279, align 4, !dbg !340
  %281 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %280, !dbg !341
  %282 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %281, i32 0, i32 1, !dbg !342
  %283 = load i16, i16* %282, align 2, !dbg !343
  %284 = and i16 %283, 16, !dbg !344
  %285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %281, i32 0, i32 4, !dbg !345
  %286 = load i32, i32* %285, align 4, !dbg !346
  store i32 %286, i32* %245, align 4, !dbg !347
  store i32 %286, i32* %246, align 4, !dbg !348
  %287 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %281, i32 0, i32 5, !dbg !349
  %288 = load i8*, i8** %287, align 8, !dbg !350
  store i8* %288, i8** %247, align 8, !dbg !351
  br label %255, !dbg !352

289:                                              ; preds = %276
  %290 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 1, !dbg !353
  %291 = load i16, i16* %290, align 2, !dbg !353
  %292 = and i16 %291, 9216, !dbg !353
  %293 = icmp ne i16 %292, 0, !dbg !353
  br i1 %293, label %294, label %295, !dbg !353

294:                                              ; preds = %289
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %233), !dbg !353
  br label %477, !dbg !353

295:                                              ; preds = %289
  store i16 1, i16* %290, align 2, !dbg !353
  br label %477, !dbg !353

296:                                              ; preds = %270, %221
  %297 = load i16, i16* %248, align 2, !dbg !354
  %298 = icmp ule i16 %297, 10, !dbg !355
  br i1 %298, label %381, label %378, !dbg !356

299:                                              ; preds = %378, %467
  %300 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 1, !dbg !357
  %301 = load i16, i16* %300, align 2, !dbg !358
  %302 = and i16 9216, %301, !dbg !359
  %303 = icmp eq i16 0, %302, !dbg !360
  br i1 %303, label %304, label %308, !dbg !361

304:                                              ; preds = %299
  %305 = icmp ne i16 %302, 0, !dbg !362
  br i1 %305, label %306, label %307, !dbg !362

306:                                              ; preds = %304
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %233), !dbg !362
  br label %308, !dbg !362

307:                                              ; preds = %304
  store i16 1, i16* %300, align 2, !dbg !362
  br label %308, !dbg !362

308:                                              ; preds = %306, %307, %299
  %309 = load i32, i32* %230, align 4, !dbg !363
  %310 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 23, i32 10, !dbg !364
  %311 = load i32, i32* %310, align 4, !dbg !365
  %312 = load i32, i32* %246, align 4, !dbg !366
  %313 = getelementptr i32, i32* %237, i32 11, !dbg !367
  %314 = load i32, i32* %313, align 4, !dbg !368
  %315 = icmp sge i32 %312, %314, !dbg !369
  br i1 %315, label %316, label %356, !dbg !370

316:                                              ; preds = %308
  %317 = load i8*, i8** %247, align 8, !dbg !371
  %318 = ptrtoint i8* %317 to i64, !dbg !372
  %319 = getelementptr i32, i32* %237, i32 10, !dbg !373
  %320 = load i32, i32* %319, align 4, !dbg !374
  %321 = zext i32 %320 to i64, !dbg !375
  %322 = add i64 %318, %321, !dbg !376
  %323 = inttoptr i64 %322 to i8*, !dbg !377
  store i8* %323, i8** %229, align 8, !dbg !378
  %324 = load i32, i32* %230, align 4, !dbg !379
  %325 = icmp ult i32 %324, 12, !dbg !380
  br i1 %325, label %326, label %328, !dbg !381

326:                                              ; preds = %316
  %327 = call i32 @sqlite3VdbeSerialGet(i8* %323, i32 %324, %struct.sqlite3_value* %233), !dbg !382
  br label %477, !dbg !383

328:                                              ; preds = %316
  %329 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %329, align 2, !dbg !385
  %330 = getelementptr i16, i16* %329, i32 1, !dbg !386
  store i16 514, i16* %330, align 2, !dbg !387
  %331 = load i32, i32* %230, align 4, !dbg !388
  %332 = sub i32 %331, 12, !dbg !389
  %333 = lshr i32 %332, 1, !dbg !390
  %334 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 4, !dbg !391
  store i32 %333, i32* %334, align 4, !dbg !392
  %335 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 2, !dbg !393
  store i8 %224, i8* %335, align 1, !dbg !394
  %336 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 5, !dbg !395
  %337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 7, !dbg !396
  %338 = load i32, i32* %337, align 4, !dbg !397
  %339 = add i32 %333, 2, !dbg !398
  %340 = icmp slt i32 %338, %339, !dbg !399
  br i1 %340, label %341, label %343, !dbg !400

341:                                              ; preds = %328
  store i16 1, i16* %300, align 2, !dbg !401
  %342 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %233, i32 %339, i32 0), !dbg !402
  br label %346, !dbg !403

343:                                              ; preds = %328
  %344 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 6, !dbg !404
  %345 = load i8*, i8** %344, align 8, !dbg !405
  store i8* %345, i8** %336, align 8, !dbg !406
  br label %346, !dbg !407

346:                                              ; preds = %343, %341
  %347 = zext i32 %333 to i64, !dbg !408
  %348 = load i8*, i8** %336, align 8, !dbg !409
  %349 = load i8*, i8** %229, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %348, i8* %349, i64 %347, i1 false), !dbg !411
  %350 = getelementptr i8, i8* %348, i32 %333, !dbg !412
  store i8 0, i8* %350, align 1, !dbg !413
  %351 = add i32 %333, 1, !dbg !414
  %352 = getelementptr i8, i8* %348, i32 %351, !dbg !415
  store i8 0, i8* %352, align 1, !dbg !416
  %353 = and i32 %331, 1, !dbg !417
  %354 = getelementptr i16, i16* %329, i32 %353, !dbg !418
  %355 = load i16, i16* %354, align 2, !dbg !419
  store i16 %355, i16* %300, align 2, !dbg !420
  br label %477, !dbg !421

356:                                              ; preds = %308
  %357 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 2, !dbg !422
  store i8 %224, i8* %357, align 1, !dbg !423
  %358 = load i32, i32* %230, align 4, !dbg !424
  %359 = and i32 %358, 1, !dbg !425
  %360 = icmp eq i32 %359, 0, !dbg !426
  %361 = icmp sge i32 %358, 12, !dbg !427
  %362 = and i1 %361, %360, !dbg !428
  %363 = call i32 @sqlite3VdbeSerialTypeLen(i32 %358), !dbg !429
  %364 = icmp eq i32 %363, 0, !dbg !430
  br i1 %364, label %376, label %365, !dbg !431

365:                                              ; preds = %356
  %366 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 12, i32 0, !dbg !432
  %367 = load %struct.BtCursor*, %struct.BtCursor** %366, align 8, !dbg !433
  %368 = getelementptr i32, i32* %237, i32 10, !dbg !434
  %369 = load i32, i32* %368, align 4, !dbg !435
  %370 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %367, i32 %369, i32 %363, %struct.sqlite3_value* %233), !dbg !436
  %371 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 5, !dbg !437
  %372 = load i8*, i8** %371, align 8, !dbg !438
  %373 = call i32 @sqlite3VdbeSerialGet(i8* %372, i32 %358, %struct.sqlite3_value* %233), !dbg !439
  %374 = load i16, i16* %300, align 2, !dbg !440
  %375 = and i16 %374, -4097, !dbg !441
  store i16 %375, i16* %300, align 2, !dbg !442
  br label %477, !dbg !443

376:                                              ; preds = %356
  %377 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %358, %struct.sqlite3_value* %233), !dbg !444
  br label %477, !dbg !445

378:                                              ; preds = %296
  %379 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 23, i32 10, !dbg !446
  %380 = load i32, i32* %379, align 4, !dbg !447
  store i32 %380, i32* %230, align 4, !dbg !448
  br label %299, !dbg !449

381:                                              ; preds = %296
  %382 = load i32, i32* %244, align 4, !dbg !450
  %383 = load i32, i32* %237, align 4, !dbg !451
  %384 = icmp ult i32 %382, %383, !dbg !452
  br i1 %384, label %385, label %466, !dbg !453

385:                                              ; preds = %381
  %386 = load i8*, i8** %247, align 8, !dbg !454
  %387 = icmp eq i8* %386, null, !dbg !455
  br i1 %387, label %389, label %388, !dbg !456

388:                                              ; preds = %385
  store i8* %386, i8** %229, align 8, !dbg !457
  br label %389, !dbg !458

389:                                              ; preds = %388, %385, %269
  %390 = alloca i32, align 4, !dbg !459
  %391 = load i16, i16* %248, align 2, !dbg !460
  %392 = zext i16 %391 to i32, !dbg !461
  store i32 %392, i32* %390, align 4, !dbg !462
  %393 = alloca i64, align 8, !dbg !463
  %394 = getelementptr i32, i32* %237, i32 %392, !dbg !464
  %395 = load i32, i32* %394, align 4, !dbg !465
  %396 = zext i32 %395 to i64, !dbg !466
  store i64 %396, i64* %393, align 4, !dbg !467
  %397 = load i8*, i8** %229, align 8, !dbg !468
  %398 = load i32, i32* %244, align 4, !dbg !469
  %399 = alloca i8*, align 8, !dbg !470
  %400 = getelementptr i8, i8* %397, i32 %398, !dbg !471
  store i8* %400, i8** %399, align 8, !dbg !472
  %401 = load i32, i32* %237, align 4, !dbg !473
  %402 = getelementptr i8, i8* %397, i32 %401, !dbg !474
  br label %403, !dbg !475

403:                                              ; preds = %410, %389
  %404 = load i32, i32* %390, align 4, !dbg !476
  %405 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %232, i32 0, i32 23, i32 %404, !dbg !477
  %406 = load i8*, i8** %399, align 8, !dbg !478
  %407 = load i8, i8* %406, align 1, !dbg !479
  %408 = zext i8 %407 to i32, !dbg !480
  store i32 %408, i32* %230, align 4, !dbg !481
  store i32 %408, i32* %405, align 4, !dbg !482
  %409 = icmp sgt i8 %407, -1, !dbg !483
  br i1 %409, label %433, label %424, !dbg !484

410:                                              ; preds = %424, %433
  %411 = load i32, i32* %390, align 4, !dbg !485
  %412 = add i32 %411, 1, !dbg !486
  store i32 %412, i32* %390, align 4, !dbg !487
  %413 = load i64, i64* %393, align 4, !dbg !488
  %414 = and i64 4294967295, %413, !dbg !489
  %415 = trunc i64 %414 to i32, !dbg !490
  %416 = getelementptr i32, i32* %237, i32 %412, !dbg !491
  store i32 %415, i32* %416, align 4, !dbg !492
  %417 = load i32, i32* %390, align 4, !dbg !493
  %418 = icmp sle i32 %417, 10, !dbg !494
  %419 = load i8*, i8** %399, align 8, !dbg !495
  %420 = ptrtoint i8* %419 to i64, !dbg !496
  %421 = ptrtoint i8* %402 to i64, !dbg !497
  %422 = icmp ult i64 %420, %421, !dbg !498
  %423 = and i1 %418, %422, !dbg !499
  br i1 %423, label %403, label %442, !dbg !500

424:                                              ; preds = %403
  %425 = load i8*, i8** %399, align 8, !dbg !501
  %426 = call i8 @sqlite3GetVarint32(i8* %425, i32* %230), !dbg !502
  %427 = getelementptr i8, i8* %425, i8 %426, !dbg !503
  store i8* %427, i8** %399, align 8, !dbg !504
  %428 = load i32, i32* %230, align 4, !dbg !505
  store i32 %428, i32* %405, align 4, !dbg !506
  %429 = load i64, i64* %393, align 4, !dbg !507
  %430 = call i32 @sqlite3VdbeSerialTypeLen(i32 %428), !dbg !508
  %431 = zext i32 %430 to i64, !dbg !509
  %432 = add i64 %429, %431, !dbg !510
  store i64 %432, i64* %393, align 4, !dbg !511
  br label %410, !dbg !512

433:                                              ; preds = %403
  %434 = getelementptr i8, i8* %406, i32 1, !dbg !513
  store i8* %434, i8** %399, align 8, !dbg !514
  %435 = load i32, i32* %230, align 4, !dbg !515
  %436 = trunc i32 %435 to i8, !dbg !516
  %437 = getelementptr i8, i8* %4, i8 %436, !dbg !517
  %438 = load i8, i8* %437, align 1, !dbg !518
  %439 = zext i8 %438 to i64, !dbg !519
  %440 = load i64, i64* %393, align 4, !dbg !520
  %441 = add i64 %440, %439, !dbg !521
  store i64 %441, i64* %393, align 4, !dbg !522
  br label %410, !dbg !523

442:                                              ; preds = %410
  %443 = load i64, i64* %393, align 4, !dbg !524
  %444 = load i32, i32* %245, align 4, !dbg !525
  %445 = zext i32 %444 to i64, !dbg !526
  %446 = icmp uge i64 %420, %421, !dbg !527
  %447 = icmp ugt i64 %420, %421, !dbg !528
  %448 = icmp ne i64 %443, %445, !dbg !529
  %449 = icmp ugt i64 %443, %445, !dbg !530
  %450 = or i1 %447, %448, !dbg !531
  %451 = and i1 %446, %450, !dbg !532
  %452 = or i1 %451, %449, !dbg !533
  br i1 %452, label %453, label %457, !dbg !534

453:                                              ; preds = %442
  %454 = load i32, i32* %237, align 4, !dbg !535
  %455 = icmp eq i32 %454, 0, !dbg !536
  br i1 %455, label %456, label %457, !dbg !537

456:                                              ; preds = %453
  store i32 0, i32* %390, align 4, !dbg !538
  store i8* %402, i8** %399, align 8, !dbg !539
  br label %457, !dbg !540

457:                                              ; preds = %456, %453, %442
  %458 = load i32, i32* %390, align 4, !dbg !541
  %459 = trunc i32 %458 to i16, !dbg !542
  store i16 %459, i16* %248, align 2, !dbg !543
  %460 = load i8*, i8** %399, align 8, !dbg !544
  %461 = ptrtoint i8* %460 to i64, !dbg !545
  %462 = load i8*, i8** %229, align 8, !dbg !546
  %463 = ptrtoint i8* %462 to i64, !dbg !547
  %464 = sub i64 %461, %463, !dbg !548
  %465 = trunc i64 %464 to i32, !dbg !549
  store i32 %465, i32* %244, align 4, !dbg !550
  br label %467, !dbg !551

466:                                              ; preds = %381
  store i32 0, i32* %230, align 4, !dbg !552
  br label %467, !dbg !553

467:                                              ; preds = %457, %466
  %468 = load i16, i16* %248, align 2, !dbg !554
  %469 = icmp sle i16 %468, 10, !dbg !555
  br i1 %469, label %470, label %299, !dbg !556

470:                                              ; preds = %467
  %471 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %233, i32 0, i32 1, !dbg !557
  %472 = load i16, i16* %471, align 2, !dbg !557
  %473 = and i16 %472, 9216, !dbg !557
  %474 = icmp ne i16 %473, 0, !dbg !557
  br i1 %474, label %475, label %476, !dbg !557

475:                                              ; preds = %470
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %233), !dbg !557
  br label %477, !dbg !557

476:                                              ; preds = %470
  store i16 1, i16* %471, align 2, !dbg !557
  br label %477, !dbg !557

477:                                              ; preds = %475, %476, %346, %326, %365, %376, %294, %295
  call void @llvm.stackrestore(i8* %222), !dbg !558
  br label %478, !dbg !75

478:                                              ; preds = %17, %477
  %479 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %480 = load %struct.VdbeFrame*, %struct.VdbeFrame** %479, align 8, !dbg !79
  %481 = ptrtoint %struct.VdbeFrame* %480 to i64, !dbg !80
  %482 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %483 = load i32, i32* %482, align 4, !dbg !82
  %484 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 11, i32 3, !dbg !83
  %485 = icmp ne i64 %481, 0, !dbg !84
  br i1 %485, label %486, label %491, !dbg !85

486:                                              ; preds = %478
  %487 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %480, i32 0, i32 6, !dbg !86
  %488 = load i8*, i8** %487, align 8, !dbg !87
  %489 = getelementptr i8, i8* %488, i32 1, !dbg !559
  %490 = load i8, i8* %489, align 1, !dbg !88
  br label %494, !dbg !89

491:                                              ; preds = %478
  %492 = load i32, i32* %484, align 4, !dbg !90
  %493 = icmp eq i32 %492, %483, !dbg !91
  br i1 %493, label %560, label %494, !dbg !92

494:                                              ; preds = %491, %486
  store i32 %483, i32* %484, align 4, !dbg !93
  br label %495, !dbg !94

495:                                              ; preds = %17, %494
  %496 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 12, !dbg !560
  %497 = call i8* @llvm.stacksave(), !dbg !563
  %498 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %496, i32 0, i32 4, !dbg !67
  %499 = load i32, i32* %498, align 4, !dbg !70
  %500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %499, !dbg !71
  %501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %500, i32 0, i32 1, !dbg !563
  %502 = load i16, i16* %501, align 2, !dbg !563
  %503 = and i16 %502, 9216, !dbg !563
  %504 = icmp ne i16 %503, 0, !dbg !563
  %505 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %504, label %506, label %508, !dbg !563

506:                                              ; preds = %495
  %507 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %500), !dbg !563
  store %struct.sqlite3_value* %507, %struct.sqlite3_value** %505, align 8, !dbg !563
  br label %509, !dbg !563

508:                                              ; preds = %495
  store i16 4, i16* %501, align 2, !dbg !563
  store %struct.sqlite3_value* %500, %struct.sqlite3_value** %505, align 8, !dbg !563
  br label %509, !dbg !563

509:                                              ; preds = %508, %506
  %510 = load %struct.sqlite3_value*, %struct.sqlite3_value** %505, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %497), !dbg !563
  %511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %510, i32 0, i32 1, !dbg !564
  %512 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %510, i32 0, i32 2, !dbg !565
  %513 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %510, i32 0, i32 4, !dbg !566
  %514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %510, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %511, align 2, !dbg !568
  %515 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %496, i32 0, i32 6, !dbg !569
  %516 = bitcast %union.p4union* %515 to i8**, !dbg !570
  %517 = load i8*, i8** %516, align 8, !dbg !571
  store i8* %517, i8** %514, align 8, !dbg !572
  store i32 10, i32* %513, align 4, !dbg !573
  store i8 1, i8* %512, align 1, !dbg !574
  br label %518, !dbg !75

518:                                              ; preds = %17, %509
  %519 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !575
  %520 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !578
  %521 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 13, !dbg !579
  %522 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %521, i32 0, i32 6, !dbg !580
  %523 = bitcast %union.p4union* %522 to %struct.sqlite3_context**, !dbg !581
  %524 = load %struct.sqlite3_context*, %struct.sqlite3_context** %523, align 8, !dbg !582
  %525 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 0, !dbg !583
  %526 = load %struct.sqlite3_value*, %struct.sqlite3_value** %525, align 8, !dbg !584
  %527 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 1, !dbg !585
  %528 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 7, !dbg !586
  %529 = load i8, i8* %528, align 1, !dbg !587
  %530 = zext i8 %529 to i32, !dbg !588
  %531 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 8, !dbg !589
  %532 = bitcast [1 x %struct.sqlite3_value*]* %531 to %struct.sqlite3_value**, !dbg !590
  %533 = ptrtoint %struct.sqlite3_value* %526 to i64, !dbg !591
  %534 = ptrtoint %struct.sqlite3_value* %520 to i64, !dbg !592
  %535 = icmp ne i64 %533, %534, !dbg !593
  br i1 %535, label %536, label %539, !dbg !594

536:                                              ; preds = %518
  %537 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 3, !dbg !595
  store %struct.Vdbe* %0, %struct.Vdbe** %537, align 8, !dbg !596
  store %struct.sqlite3_value* %520, %struct.sqlite3_value** %525, align 8, !dbg !597
  %538 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !598
  store %struct.sqlite3_value* %538, %struct.sqlite3_value** %532, align 8, !dbg !599
  br label %539, !dbg !600

539:                                              ; preds = %518, %536
  %540 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %520, i32 0, i32 1, !dbg !601
  %541 = load i16, i16* %540, align 2, !dbg !602
  %542 = and i16 %541, 15936, !dbg !602
  %543 = or i16 %542, 1, !dbg !602
  store i16 %543, i16* %540, align 2, !dbg !602
  %544 = load %struct.FuncDef*, %struct.FuncDef** %527, align 8, !dbg !603
  %545 = getelementptr %struct.FuncDef, %struct.FuncDef* %544, i32 0, i32 4, !dbg !604
  %546 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %545, align 8, !dbg !605
  call void %546(%struct.sqlite3_context* %524, i32 %530, %struct.sqlite3_value** %532), !dbg !606
  %547 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %524, i32 0, i32 5, !dbg !607
  %548 = load i32, i32* %547, align 4, !dbg !608
  %549 = icmp ne i32 %548, 0, !dbg !609
  %550 = icmp sgt i32 %548, 0, !dbg !610
  br i1 %550, label %551, label %553, !dbg !611

551:                                              ; preds = %539
  %552 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %520), !dbg !612
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %552), !dbg !613
  br label %553, !dbg !614

553:                                              ; preds = %551, %539
  %554 = load i16, i16* %540, align 2, !dbg !615
  %555 = and i16 %554, 18, !dbg !616
  %556 = icmp ne i16 %555, 0, !dbg !617
  br i1 %556, label %557, label %560, !dbg !618

557:                                              ; preds = %553
  %558 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %520, i32 1), !dbg !619
  %559 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %520), !dbg !620
  br label %560, !dbg !621

560:                                              ; preds = %557, %553, %17, %491
  %561 = call i8* @llvm.stacksave(), !dbg !622
  %562 = alloca i32, align 8, !dbg !625
  %563 = alloca i32, align 8, !dbg !626
  %564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !627
  %565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !628
  %566 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %564, i32 0, i32 1, !dbg !629
  %567 = load i16, i16* %566, align 2, !dbg !630
  %568 = alloca i16, align 8, !dbg !631
  store i16 %567, i16* %568, align 2, !dbg !632
  %569 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %565, i32 0, i32 1, !dbg !633
  %570 = load i16, i16* %569, align 2, !dbg !634
  %571 = alloca i16, align 8, !dbg !635
  store i16 %570, i16* %571, align 2, !dbg !636
  %572 = or i16 %567, %570, !dbg !637
  %573 = and i16 %572, 1, !dbg !638
  %574 = icmp ne i16 %573, 0, !dbg !639
  br i1 %574, label %575, label %576, !dbg !640

575:                                              ; preds = %560
  call void @llvm.stackrestore(i8* %561), !dbg !641
  br label %2242, !dbg !642

576:                                              ; preds = %560
  %577 = and i16 %567, 2, !dbg !643
  %578 = and i16 %567, 44, !dbg !644
  %579 = icmp eq i16 %577, 0, !dbg !645
  %580 = icmp ne i16 %578, 0, !dbg !646
  %581 = and i16 %570, 2, !dbg !647
  %582 = and i16 %570, 44, !dbg !648
  %583 = icmp eq i16 %581, 0, !dbg !649
  %584 = icmp ne i16 %582, 0, !dbg !650
  %585 = and i1 %579, %580, !dbg !651
  br i1 %585, label %586, label %592, !dbg !652

586:                                              ; preds = %576
  %587 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %564, i8 1, i8 1), !dbg !653
  %588 = load i16, i16* %566, align 2, !dbg !654
  %589 = and i16 %588, 15936, !dbg !654
  %590 = and i16 %567, -15937, !dbg !655
  %591 = or i16 %589, %590, !dbg !656
  store i16 %591, i16* %568, align 2, !dbg !657
  br label %592, !dbg !658

592:                                              ; preds = %586, %576
  %593 = and i1 %583, %584, !dbg !659
  br i1 %593, label %594, label %600, !dbg !660

594:                                              ; preds = %592
  %595 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %565, i8 1, i8 1), !dbg !661
  %596 = load i16, i16* %569, align 2, !dbg !662
  %597 = and i16 %596, 15936, !dbg !662
  %598 = and i16 %570, -15937, !dbg !663
  %599 = or i16 %597, %598, !dbg !664
  store i16 %599, i16* %571, align 2, !dbg !665
  br label %600, !dbg !666

600:                                              ; preds = %594, %592
  %601 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 14, !dbg !667
  %602 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %601, i32 0, i32 6, !dbg !668
  %603 = bitcast %union.p4union* %602 to %struct.CollSeq**, !dbg !669
  %604 = load %struct.CollSeq*, %struct.CollSeq** %603, align 8, !dbg !670
  %605 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %565, %struct.sqlite3_value* %564, %struct.CollSeq* %604), !dbg !671
  store i32 %605, i32* %562, align 4, !dbg !672
  %606 = icmp slt i32 %605, 0, !dbg !673
  br i1 %606, label %607, label %608, !dbg !674

607:                                              ; preds = %600
  store i32 1, i32* %563, align 4, !dbg !675
  br label %609, !dbg !676

608:                                              ; preds = %600
  store i32 0, i32* %563, align 4, !dbg !677
  br label %609, !dbg !677

609:                                              ; preds = %608, %607
  store i16 %570, i16* %571, align 2, !dbg !678
  store i16 %567, i16* %568, align 2, !dbg !679
  %610 = load i32, i32* %563, align 4, !dbg !680
  %611 = icmp ne i32 %610, 0, !dbg !681
  call void @llvm.stackrestore(i8* %561), !dbg !682
  br i1 %611, label %2242, label %612, !dbg !683

612:                                              ; preds = %17, %609
  %613 = call i8* @llvm.stacksave(), !dbg !266
  %614 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %615 = load i8, i8* %614, align 1, !dbg !270
  %616 = alloca i32, align 4, !dbg !271
  store i32 2, i32* %616, align 4, !dbg !272
  %617 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !273
  %618 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %619 = load %struct.VdbeCursor*, %struct.VdbeCursor** %617, align 8, !dbg !275
  store %struct.VdbeCursor* %619, %struct.VdbeCursor** %618, align 8, !dbg !276
  %620 = alloca i8*, align 8, !dbg !277
  %621 = alloca i32, align 4, !dbg !278
  %622 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %618, i32* %616), !dbg !279
  %623 = load %struct.VdbeCursor*, %struct.VdbeCursor** %618, align 8, !dbg !280
  %624 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !281
  %625 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 16, !dbg !282
  %626 = load i16, i16* %625, align 2, !dbg !283
  %627 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 19, !dbg !284
  %628 = load i32*, i32** %627, align 8, !dbg !285
  %629 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 0, !dbg !286
  %630 = load i8, i8* %629, align 1, !dbg !287
  %631 = icmp ne i8 %630, 3, !dbg !288
  %632 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 2, !dbg !289
  %633 = load i8, i8* %632, align 1, !dbg !290
  %634 = icmp ne i8 %633, 0, !dbg !291
  %635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 14, !dbg !292
  %636 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 21, !dbg !293
  %637 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 22, !dbg !294
  %638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 20, !dbg !295
  %639 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 17, !dbg !296
  %640 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 9, !dbg !297
  %641 = load i32, i32* %640, align 4, !dbg !298
  %642 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %643 = load i32, i32* %642, align 4, !dbg !300
  %644 = icmp ne i32 %641, %643, !dbg !301
  br i1 %644, label %645, label %687, !dbg !302

645:                                              ; preds = %612
  br i1 %634, label %667, label %662, !dbg !303

646:                                              ; preds = %662, %669
  %647 = load i32, i32* %642, align 4, !dbg !304
  store i32 %647, i32* %640, align 4, !dbg !305
  %648 = load i8*, i8** %638, align 8, !dbg !306
  %649 = load i8, i8* %648, align 1, !dbg !307
  %650 = icmp sgt i8 %649, -1, !dbg !310
  br i1 %650, label %651, label %653, !dbg !311

651:                                              ; preds = %646
  %652 = zext i8 %649 to i32, !dbg !312
  store i32 %652, i32* %628, align 4, !dbg !313
  store i32 1, i32* %635, align 4, !dbg !314
  br label %656, !dbg !315

653:                                              ; preds = %646
  %654 = call i8 @sqlite3GetVarint32(i8* %648, i32* %628), !dbg !316
  %655 = zext i8 %654 to i32, !dbg !317
  store i32 %655, i32* %635, align 4, !dbg !318
  br label %656, !dbg !319

656:                                              ; preds = %653, %651
  store i16 0, i16* %639, align 2, !dbg !320
  %657 = load i32, i32* %637, align 4, !dbg !321
  %658 = load i32, i32* %628, align 4, !dbg !322
  %659 = icmp ult i32 %657, %658, !dbg !323
  br i1 %659, label %661, label %660, !dbg !324

660:                                              ; preds = %656
  store i8* %648, i8** %620, align 8, !dbg !325
  br label %780, !dbg !326

661:                                              ; preds = %656
  store i8* null, i8** %638, align 8, !dbg !327
  store i32 0, i32* %637, align 4, !dbg !328
  br label %687, !dbg !329

662:                                              ; preds = %645
  %663 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 12, i32 0, !dbg !330
  %664 = load %struct.BtCursor*, %struct.BtCursor** %663, align 8, !dbg !331
  %665 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %664), !dbg !332
  store i32 %665, i32* %636, align 4, !dbg !333
  %666 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %664, i32* %637), !dbg !334
  store i8* %666, i8** %638, align 8, !dbg !335
  br label %646, !dbg !336

667:                                              ; preds = %645
  %668 = icmp eq i8 %630, 3, !dbg !337
  br i1 %668, label %669, label %680, !dbg !338

669:                                              ; preds = %667
  %670 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 10, !dbg !339
  %671 = load i32, i32* %670, align 4, !dbg !340
  %672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %671, !dbg !341
  %673 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %672, i32 0, i32 1, !dbg !342
  %674 = load i16, i16* %673, align 2, !dbg !343
  %675 = and i16 %674, 16, !dbg !344
  %676 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %672, i32 0, i32 4, !dbg !345
  %677 = load i32, i32* %676, align 4, !dbg !346
  store i32 %677, i32* %636, align 4, !dbg !347
  store i32 %677, i32* %637, align 4, !dbg !348
  %678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %672, i32 0, i32 5, !dbg !349
  %679 = load i8*, i8** %678, align 8, !dbg !350
  store i8* %679, i8** %638, align 8, !dbg !351
  br label %646, !dbg !352

680:                                              ; preds = %667
  %681 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 1, !dbg !353
  %682 = load i16, i16* %681, align 2, !dbg !353
  %683 = and i16 %682, 9216, !dbg !353
  %684 = icmp ne i16 %683, 0, !dbg !353
  br i1 %684, label %685, label %686, !dbg !353

685:                                              ; preds = %680
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %624), !dbg !353
  br label %868, !dbg !353

686:                                              ; preds = %680
  store i16 1, i16* %681, align 2, !dbg !353
  br label %868, !dbg !353

687:                                              ; preds = %661, %612
  %688 = load i16, i16* %639, align 2, !dbg !354
  %689 = icmp ule i16 %688, 10, !dbg !355
  br i1 %689, label %772, label %769, !dbg !356

690:                                              ; preds = %769, %858
  %691 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 1, !dbg !357
  %692 = load i16, i16* %691, align 2, !dbg !358
  %693 = and i16 9216, %692, !dbg !359
  %694 = icmp eq i16 0, %693, !dbg !360
  br i1 %694, label %695, label %699, !dbg !361

695:                                              ; preds = %690
  %696 = icmp ne i16 %693, 0, !dbg !362
  br i1 %696, label %697, label %698, !dbg !362

697:                                              ; preds = %695
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %624), !dbg !362
  br label %699, !dbg !362

698:                                              ; preds = %695
  store i16 1, i16* %691, align 2, !dbg !362
  br label %699, !dbg !362

699:                                              ; preds = %697, %698, %690
  %700 = load i32, i32* %621, align 4, !dbg !363
  %701 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 23, i32 10, !dbg !364
  %702 = load i32, i32* %701, align 4, !dbg !365
  %703 = load i32, i32* %637, align 4, !dbg !366
  %704 = getelementptr i32, i32* %628, i32 11, !dbg !367
  %705 = load i32, i32* %704, align 4, !dbg !368
  %706 = icmp sge i32 %703, %705, !dbg !369
  br i1 %706, label %707, label %747, !dbg !370

707:                                              ; preds = %699
  %708 = load i8*, i8** %638, align 8, !dbg !371
  %709 = ptrtoint i8* %708 to i64, !dbg !372
  %710 = getelementptr i32, i32* %628, i32 10, !dbg !373
  %711 = load i32, i32* %710, align 4, !dbg !374
  %712 = zext i32 %711 to i64, !dbg !375
  %713 = add i64 %709, %712, !dbg !376
  %714 = inttoptr i64 %713 to i8*, !dbg !377
  store i8* %714, i8** %620, align 8, !dbg !378
  %715 = load i32, i32* %621, align 4, !dbg !379
  %716 = icmp ult i32 %715, 12, !dbg !380
  br i1 %716, label %717, label %719, !dbg !381

717:                                              ; preds = %707
  %718 = call i32 @sqlite3VdbeSerialGet(i8* %714, i32 %715, %struct.sqlite3_value* %624), !dbg !382
  br label %868, !dbg !383

719:                                              ; preds = %707
  %720 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %720, align 2, !dbg !385
  %721 = getelementptr i16, i16* %720, i32 1, !dbg !386
  store i16 514, i16* %721, align 2, !dbg !387
  %722 = load i32, i32* %621, align 4, !dbg !388
  %723 = sub i32 %722, 12, !dbg !389
  %724 = lshr i32 %723, 1, !dbg !390
  %725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 4, !dbg !391
  store i32 %724, i32* %725, align 4, !dbg !392
  %726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 2, !dbg !393
  store i8 %615, i8* %726, align 1, !dbg !394
  %727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 5, !dbg !395
  %728 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 7, !dbg !396
  %729 = load i32, i32* %728, align 4, !dbg !397
  %730 = add i32 %724, 2, !dbg !398
  %731 = icmp slt i32 %729, %730, !dbg !399
  br i1 %731, label %732, label %734, !dbg !400

732:                                              ; preds = %719
  store i16 1, i16* %691, align 2, !dbg !401
  %733 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %624, i32 %730, i32 0), !dbg !402
  br label %737, !dbg !403

734:                                              ; preds = %719
  %735 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 6, !dbg !404
  %736 = load i8*, i8** %735, align 8, !dbg !405
  store i8* %736, i8** %727, align 8, !dbg !406
  br label %737, !dbg !407

737:                                              ; preds = %734, %732
  %738 = zext i32 %724 to i64, !dbg !408
  %739 = load i8*, i8** %727, align 8, !dbg !409
  %740 = load i8*, i8** %620, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %739, i8* %740, i64 %738, i1 false), !dbg !411
  %741 = getelementptr i8, i8* %739, i32 %724, !dbg !412
  store i8 0, i8* %741, align 1, !dbg !413
  %742 = add i32 %724, 1, !dbg !414
  %743 = getelementptr i8, i8* %739, i32 %742, !dbg !415
  store i8 0, i8* %743, align 1, !dbg !416
  %744 = and i32 %722, 1, !dbg !417
  %745 = getelementptr i16, i16* %720, i32 %744, !dbg !418
  %746 = load i16, i16* %745, align 2, !dbg !419
  store i16 %746, i16* %691, align 2, !dbg !420
  br label %868, !dbg !421

747:                                              ; preds = %699
  %748 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 2, !dbg !422
  store i8 %615, i8* %748, align 1, !dbg !423
  %749 = load i32, i32* %621, align 4, !dbg !424
  %750 = and i32 %749, 1, !dbg !425
  %751 = icmp eq i32 %750, 0, !dbg !426
  %752 = icmp sge i32 %749, 12, !dbg !427
  %753 = and i1 %752, %751, !dbg !428
  %754 = call i32 @sqlite3VdbeSerialTypeLen(i32 %749), !dbg !429
  %755 = icmp eq i32 %754, 0, !dbg !430
  br i1 %755, label %767, label %756, !dbg !431

756:                                              ; preds = %747
  %757 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 12, i32 0, !dbg !432
  %758 = load %struct.BtCursor*, %struct.BtCursor** %757, align 8, !dbg !433
  %759 = getelementptr i32, i32* %628, i32 10, !dbg !434
  %760 = load i32, i32* %759, align 4, !dbg !435
  %761 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %758, i32 %760, i32 %754, %struct.sqlite3_value* %624), !dbg !436
  %762 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 5, !dbg !437
  %763 = load i8*, i8** %762, align 8, !dbg !438
  %764 = call i32 @sqlite3VdbeSerialGet(i8* %763, i32 %749, %struct.sqlite3_value* %624), !dbg !439
  %765 = load i16, i16* %691, align 2, !dbg !440
  %766 = and i16 %765, -4097, !dbg !441
  store i16 %766, i16* %691, align 2, !dbg !442
  br label %868, !dbg !443

767:                                              ; preds = %747
  %768 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %749, %struct.sqlite3_value* %624), !dbg !444
  br label %868, !dbg !445

769:                                              ; preds = %687
  %770 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 23, i32 10, !dbg !446
  %771 = load i32, i32* %770, align 4, !dbg !447
  store i32 %771, i32* %621, align 4, !dbg !448
  br label %690, !dbg !449

772:                                              ; preds = %687
  %773 = load i32, i32* %635, align 4, !dbg !450
  %774 = load i32, i32* %628, align 4, !dbg !451
  %775 = icmp ult i32 %773, %774, !dbg !452
  br i1 %775, label %776, label %857, !dbg !453

776:                                              ; preds = %772
  %777 = load i8*, i8** %638, align 8, !dbg !454
  %778 = icmp eq i8* %777, null, !dbg !455
  br i1 %778, label %780, label %779, !dbg !456

779:                                              ; preds = %776
  store i8* %777, i8** %620, align 8, !dbg !457
  br label %780, !dbg !458

780:                                              ; preds = %779, %776, %660
  %781 = alloca i32, align 4, !dbg !459
  %782 = load i16, i16* %639, align 2, !dbg !460
  %783 = zext i16 %782 to i32, !dbg !461
  store i32 %783, i32* %781, align 4, !dbg !462
  %784 = alloca i64, align 8, !dbg !463
  %785 = getelementptr i32, i32* %628, i32 %783, !dbg !464
  %786 = load i32, i32* %785, align 4, !dbg !465
  %787 = zext i32 %786 to i64, !dbg !466
  store i64 %787, i64* %784, align 4, !dbg !467
  %788 = load i8*, i8** %620, align 8, !dbg !468
  %789 = load i32, i32* %635, align 4, !dbg !469
  %790 = alloca i8*, align 8, !dbg !470
  %791 = getelementptr i8, i8* %788, i32 %789, !dbg !471
  store i8* %791, i8** %790, align 8, !dbg !472
  %792 = load i32, i32* %628, align 4, !dbg !473
  %793 = getelementptr i8, i8* %788, i32 %792, !dbg !474
  br label %794, !dbg !475

794:                                              ; preds = %801, %780
  %795 = load i32, i32* %781, align 4, !dbg !476
  %796 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %623, i32 0, i32 23, i32 %795, !dbg !477
  %797 = load i8*, i8** %790, align 8, !dbg !478
  %798 = load i8, i8* %797, align 1, !dbg !479
  %799 = zext i8 %798 to i32, !dbg !480
  store i32 %799, i32* %621, align 4, !dbg !481
  store i32 %799, i32* %796, align 4, !dbg !482
  %800 = icmp sgt i8 %798, -1, !dbg !483
  br i1 %800, label %824, label %815, !dbg !484

801:                                              ; preds = %815, %824
  %802 = load i32, i32* %781, align 4, !dbg !485
  %803 = add i32 %802, 1, !dbg !486
  store i32 %803, i32* %781, align 4, !dbg !487
  %804 = load i64, i64* %784, align 4, !dbg !488
  %805 = and i64 4294967295, %804, !dbg !489
  %806 = trunc i64 %805 to i32, !dbg !490
  %807 = getelementptr i32, i32* %628, i32 %803, !dbg !491
  store i32 %806, i32* %807, align 4, !dbg !492
  %808 = load i32, i32* %781, align 4, !dbg !493
  %809 = icmp sle i32 %808, 10, !dbg !494
  %810 = load i8*, i8** %790, align 8, !dbg !495
  %811 = ptrtoint i8* %810 to i64, !dbg !496
  %812 = ptrtoint i8* %793 to i64, !dbg !497
  %813 = icmp ult i64 %811, %812, !dbg !498
  %814 = and i1 %809, %813, !dbg !499
  br i1 %814, label %794, label %833, !dbg !500

815:                                              ; preds = %794
  %816 = load i8*, i8** %790, align 8, !dbg !501
  %817 = call i8 @sqlite3GetVarint32(i8* %816, i32* %621), !dbg !502
  %818 = getelementptr i8, i8* %816, i8 %817, !dbg !503
  store i8* %818, i8** %790, align 8, !dbg !504
  %819 = load i32, i32* %621, align 4, !dbg !505
  store i32 %819, i32* %796, align 4, !dbg !506
  %820 = load i64, i64* %784, align 4, !dbg !507
  %821 = call i32 @sqlite3VdbeSerialTypeLen(i32 %819), !dbg !508
  %822 = zext i32 %821 to i64, !dbg !509
  %823 = add i64 %820, %822, !dbg !510
  store i64 %823, i64* %784, align 4, !dbg !511
  br label %801, !dbg !512

824:                                              ; preds = %794
  %825 = getelementptr i8, i8* %797, i32 1, !dbg !513
  store i8* %825, i8** %790, align 8, !dbg !514
  %826 = load i32, i32* %621, align 4, !dbg !515
  %827 = trunc i32 %826 to i8, !dbg !516
  %828 = getelementptr i8, i8* %4, i8 %827, !dbg !517
  %829 = load i8, i8* %828, align 1, !dbg !518
  %830 = zext i8 %829 to i64, !dbg !519
  %831 = load i64, i64* %784, align 4, !dbg !520
  %832 = add i64 %831, %830, !dbg !521
  store i64 %832, i64* %784, align 4, !dbg !522
  br label %801, !dbg !523

833:                                              ; preds = %801
  %834 = load i64, i64* %784, align 4, !dbg !524
  %835 = load i32, i32* %636, align 4, !dbg !525
  %836 = zext i32 %835 to i64, !dbg !526
  %837 = icmp uge i64 %811, %812, !dbg !527
  %838 = icmp ugt i64 %811, %812, !dbg !528
  %839 = icmp ne i64 %834, %836, !dbg !529
  %840 = icmp ugt i64 %834, %836, !dbg !530
  %841 = or i1 %838, %839, !dbg !531
  %842 = and i1 %837, %841, !dbg !532
  %843 = or i1 %842, %840, !dbg !533
  br i1 %843, label %844, label %848, !dbg !534

844:                                              ; preds = %833
  %845 = load i32, i32* %628, align 4, !dbg !535
  %846 = icmp eq i32 %845, 0, !dbg !536
  br i1 %846, label %847, label %848, !dbg !537

847:                                              ; preds = %844
  store i32 0, i32* %781, align 4, !dbg !538
  store i8* %793, i8** %790, align 8, !dbg !539
  br label %848, !dbg !540

848:                                              ; preds = %847, %844, %833
  %849 = load i32, i32* %781, align 4, !dbg !541
  %850 = trunc i32 %849 to i16, !dbg !542
  store i16 %850, i16* %639, align 2, !dbg !543
  %851 = load i8*, i8** %790, align 8, !dbg !544
  %852 = ptrtoint i8* %851 to i64, !dbg !545
  %853 = load i8*, i8** %620, align 8, !dbg !546
  %854 = ptrtoint i8* %853 to i64, !dbg !547
  %855 = sub i64 %852, %854, !dbg !548
  %856 = trunc i64 %855 to i32, !dbg !549
  store i32 %856, i32* %635, align 4, !dbg !550
  br label %858, !dbg !551

857:                                              ; preds = %772
  store i32 0, i32* %621, align 4, !dbg !552
  br label %858, !dbg !553

858:                                              ; preds = %848, %857
  %859 = load i16, i16* %639, align 2, !dbg !554
  %860 = icmp sle i16 %859, 10, !dbg !555
  br i1 %860, label %861, label %690, !dbg !556

861:                                              ; preds = %858
  %862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %624, i32 0, i32 1, !dbg !557
  %863 = load i16, i16* %862, align 2, !dbg !557
  %864 = and i16 %863, 9216, !dbg !557
  %865 = icmp ne i16 %864, 0, !dbg !557
  br i1 %865, label %866, label %867, !dbg !557

866:                                              ; preds = %861
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %624), !dbg !557
  br label %868, !dbg !557

867:                                              ; preds = %861
  store i16 1, i16* %862, align 2, !dbg !557
  br label %868, !dbg !557

868:                                              ; preds = %866, %867, %737, %717, %756, %767, %685, %686
  call void @llvm.stackrestore(i8* %613), !dbg !558
  br label %869, !dbg !75

869:                                              ; preds = %17, %868
  %870 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %871 = load %struct.VdbeFrame*, %struct.VdbeFrame** %870, align 8, !dbg !79
  %872 = ptrtoint %struct.VdbeFrame* %871 to i64, !dbg !80
  %873 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %874 = load i32, i32* %873, align 4, !dbg !82
  %875 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, i32 3, !dbg !83
  %876 = icmp ne i64 %872, 0, !dbg !84
  br i1 %876, label %877, label %882, !dbg !85

877:                                              ; preds = %869
  %878 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %871, i32 0, i32 6, !dbg !86
  %879 = load i8*, i8** %878, align 8, !dbg !87
  %880 = getelementptr i8, i8* %879, i32 2, !dbg !559
  %881 = load i8, i8* %880, align 1, !dbg !88
  br label %885, !dbg !89

882:                                              ; preds = %869
  %883 = load i32, i32* %875, align 4, !dbg !90
  %884 = icmp eq i32 %883, %874, !dbg !91
  br i1 %884, label %976, label %885, !dbg !92

885:                                              ; preds = %882, %877
  store i32 %874, i32* %875, align 4, !dbg !93
  br label %886, !dbg !94

886:                                              ; preds = %17, %885
  %887 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, !dbg !560
  %888 = call i8* @llvm.stacksave(), !dbg !563
  %889 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %887, i32 0, i32 4, !dbg !67
  %890 = load i32, i32* %889, align 4, !dbg !70
  %891 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %890, !dbg !71
  %892 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %891, i32 0, i32 1, !dbg !563
  %893 = load i16, i16* %892, align 2, !dbg !563
  %894 = and i16 %893, 9216, !dbg !563
  %895 = icmp ne i16 %894, 0, !dbg !563
  %896 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %895, label %897, label %899, !dbg !563

897:                                              ; preds = %886
  %898 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %891), !dbg !563
  store %struct.sqlite3_value* %898, %struct.sqlite3_value** %896, align 8, !dbg !563
  br label %900, !dbg !563

899:                                              ; preds = %886
  store i16 4, i16* %892, align 2, !dbg !563
  store %struct.sqlite3_value* %891, %struct.sqlite3_value** %896, align 8, !dbg !563
  br label %900, !dbg !563

900:                                              ; preds = %899, %897
  %901 = load %struct.sqlite3_value*, %struct.sqlite3_value** %896, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %888), !dbg !563
  %902 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %901, i32 0, i32 1, !dbg !564
  %903 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %901, i32 0, i32 2, !dbg !565
  %904 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %901, i32 0, i32 4, !dbg !566
  %905 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %901, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %902, align 2, !dbg !568
  %906 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %887, i32 0, i32 6, !dbg !569
  %907 = bitcast %union.p4union* %906 to i8**, !dbg !570
  %908 = load i8*, i8** %907, align 8, !dbg !571
  store i8* %908, i8** %905, align 8, !dbg !572
  store i32 10, i32* %904, align 4, !dbg !573
  store i8 1, i8* %903, align 1, !dbg !574
  br label %909, !dbg !75

909:                                              ; preds = %17, %900
  %910 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 18, !dbg !560
  %911 = call i8* @llvm.stacksave(), !dbg !563
  %912 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %910, i32 0, i32 4, !dbg !67
  %913 = load i32, i32* %912, align 4, !dbg !70
  %914 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %913, !dbg !71
  %915 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %914, i32 0, i32 1, !dbg !563
  %916 = load i16, i16* %915, align 2, !dbg !563
  %917 = and i16 %916, 9216, !dbg !563
  %918 = icmp ne i16 %917, 0, !dbg !563
  %919 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %918, label %920, label %922, !dbg !563

920:                                              ; preds = %909
  %921 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %914), !dbg !563
  store %struct.sqlite3_value* %921, %struct.sqlite3_value** %919, align 8, !dbg !563
  br label %923, !dbg !563

922:                                              ; preds = %909
  store i16 4, i16* %915, align 2, !dbg !563
  store %struct.sqlite3_value* %914, %struct.sqlite3_value** %919, align 8, !dbg !563
  br label %923, !dbg !563

923:                                              ; preds = %922, %920
  %924 = load %struct.sqlite3_value*, %struct.sqlite3_value** %919, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %911), !dbg !563
  %925 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %924, i32 0, i32 1, !dbg !564
  %926 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %924, i32 0, i32 2, !dbg !565
  %927 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %924, i32 0, i32 4, !dbg !566
  %928 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %924, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %925, align 2, !dbg !568
  %929 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %910, i32 0, i32 6, !dbg !569
  %930 = bitcast %union.p4union* %929 to i8**, !dbg !570
  %931 = load i8*, i8** %930, align 8, !dbg !571
  store i8* %931, i8** %928, align 8, !dbg !572
  store i32 8, i32* %927, align 4, !dbg !573
  store i8 1, i8* %926, align 1, !dbg !574
  br label %932, !dbg !75

932:                                              ; preds = %17, %923
  %933 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !575
  %934 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !578
  %935 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 19, !dbg !579
  %936 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %935, i32 0, i32 6, !dbg !580
  %937 = bitcast %union.p4union* %936 to %struct.sqlite3_context**, !dbg !581
  %938 = load %struct.sqlite3_context*, %struct.sqlite3_context** %937, align 8, !dbg !582
  %939 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 0, !dbg !583
  %940 = load %struct.sqlite3_value*, %struct.sqlite3_value** %939, align 8, !dbg !584
  %941 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 1, !dbg !585
  %942 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 7, !dbg !586
  %943 = load i8, i8* %942, align 1, !dbg !587
  %944 = zext i8 %943 to i32, !dbg !588
  %945 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 8, !dbg !589
  %946 = bitcast [1 x %struct.sqlite3_value*]* %945 to %struct.sqlite3_value**, !dbg !590
  %947 = ptrtoint %struct.sqlite3_value* %940 to i64, !dbg !591
  %948 = ptrtoint %struct.sqlite3_value* %934 to i64, !dbg !592
  %949 = icmp ne i64 %947, %948, !dbg !593
  br i1 %949, label %950, label %955, !dbg !594

950:                                              ; preds = %932
  %951 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 3, !dbg !595
  store %struct.Vdbe* %0, %struct.Vdbe** %951, align 8, !dbg !596
  store %struct.sqlite3_value* %934, %struct.sqlite3_value** %939, align 8, !dbg !597
  %952 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !598
  %953 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %946, i32 1, !dbg !684
  store %struct.sqlite3_value* %952, %struct.sqlite3_value** %953, align 8, !dbg !599
  %954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !598
  store %struct.sqlite3_value* %954, %struct.sqlite3_value** %946, align 8, !dbg !599
  br label %955, !dbg !600

955:                                              ; preds = %932, %950
  %956 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %934, i32 0, i32 1, !dbg !601
  %957 = load i16, i16* %956, align 2, !dbg !602
  %958 = and i16 %957, 15936, !dbg !602
  %959 = or i16 %958, 1, !dbg !602
  store i16 %959, i16* %956, align 2, !dbg !602
  %960 = load %struct.FuncDef*, %struct.FuncDef** %941, align 8, !dbg !603
  %961 = getelementptr %struct.FuncDef, %struct.FuncDef* %960, i32 0, i32 4, !dbg !604
  %962 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %961, align 8, !dbg !605
  call void %962(%struct.sqlite3_context* %938, i32 %944, %struct.sqlite3_value** %946), !dbg !606
  %963 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %938, i32 0, i32 5, !dbg !607
  %964 = load i32, i32* %963, align 4, !dbg !608
  %965 = icmp ne i32 %964, 0, !dbg !609
  %966 = icmp sgt i32 %964, 0, !dbg !610
  br i1 %966, label %967, label %969, !dbg !611

967:                                              ; preds = %955
  %968 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %934), !dbg !612
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %968), !dbg !613
  br label %969, !dbg !614

969:                                              ; preds = %967, %955
  %970 = load i16, i16* %956, align 2, !dbg !615
  %971 = and i16 %970, 18, !dbg !616
  %972 = icmp ne i16 %971, 0, !dbg !617
  br i1 %972, label %973, label %976, !dbg !618

973:                                              ; preds = %969
  %974 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %934, i32 1), !dbg !619
  %975 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %934), !dbg !620
  br label %976, !dbg !621

976:                                              ; preds = %973, %969, %17, %882
  %977 = call i8* @llvm.stacksave(), !dbg !622
  %978 = alloca i32, align 8, !dbg !625
  %979 = alloca i32, align 8, !dbg !626
  %980 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !627
  %981 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !628
  %982 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %980, i32 0, i32 1, !dbg !629
  %983 = load i16, i16* %982, align 2, !dbg !630
  %984 = alloca i16, align 8, !dbg !631
  store i16 %983, i16* %984, align 2, !dbg !632
  %985 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %981, i32 0, i32 1, !dbg !633
  %986 = load i16, i16* %985, align 2, !dbg !634
  %987 = alloca i16, align 8, !dbg !635
  store i16 %986, i16* %987, align 2, !dbg !636
  %988 = or i16 %983, %986, !dbg !637
  %989 = and i16 %988, 1, !dbg !638
  %990 = icmp ne i16 %989, 0, !dbg !639
  br i1 %990, label %991, label %992, !dbg !640

991:                                              ; preds = %976
  call void @llvm.stackrestore(i8* %977), !dbg !641
  br label %2242, !dbg !642

992:                                              ; preds = %976
  %993 = and i16 %983, 2, !dbg !643
  %994 = and i16 %983, 44, !dbg !644
  %995 = icmp eq i16 %993, 0, !dbg !645
  %996 = icmp ne i16 %994, 0, !dbg !646
  %997 = and i16 %986, 2, !dbg !647
  %998 = and i16 %986, 44, !dbg !648
  %999 = icmp eq i16 %997, 0, !dbg !649
  %1000 = icmp ne i16 %998, 0, !dbg !650
  %1001 = and i1 %995, %996, !dbg !651
  br i1 %1001, label %1002, label %1008, !dbg !652

1002:                                             ; preds = %992
  %1003 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %980, i8 1, i8 1), !dbg !653
  %1004 = load i16, i16* %982, align 2, !dbg !654
  %1005 = and i16 %1004, 15936, !dbg !654
  %1006 = and i16 %983, -15937, !dbg !655
  %1007 = or i16 %1005, %1006, !dbg !656
  store i16 %1007, i16* %984, align 2, !dbg !657
  br label %1008, !dbg !658

1008:                                             ; preds = %1002, %992
  %1009 = and i1 %999, %1000, !dbg !659
  br i1 %1009, label %1010, label %1016, !dbg !660

1010:                                             ; preds = %1008
  %1011 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %981, i8 1, i8 1), !dbg !661
  %1012 = load i16, i16* %985, align 2, !dbg !662
  %1013 = and i16 %1012, 15936, !dbg !662
  %1014 = and i16 %986, -15937, !dbg !663
  %1015 = or i16 %1013, %1014, !dbg !664
  store i16 %1015, i16* %987, align 2, !dbg !665
  br label %1016, !dbg !666

1016:                                             ; preds = %1010, %1008
  %1017 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 20, !dbg !667
  %1018 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1017, i32 0, i32 6, !dbg !668
  %1019 = bitcast %union.p4union* %1018 to %struct.CollSeq**, !dbg !669
  %1020 = load %struct.CollSeq*, %struct.CollSeq** %1019, align 8, !dbg !670
  %1021 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %981, %struct.sqlite3_value* %980, %struct.CollSeq* %1020), !dbg !671
  store i32 %1021, i32* %978, align 4, !dbg !672
  %1022 = icmp slt i32 %1021, 0, !dbg !673
  br i1 %1022, label %1023, label %1024, !dbg !674

1023:                                             ; preds = %1016
  store i32 0, i32* %979, align 4, !dbg !675
  br label %1025, !dbg !676

1024:                                             ; preds = %1016
  store i32 1, i32* %979, align 4, !dbg !677
  br label %1025, !dbg !677

1025:                                             ; preds = %1024, %1023
  store i16 %986, i16* %987, align 2, !dbg !678
  store i16 %983, i16* %984, align 2, !dbg !679
  %1026 = load i32, i32* %979, align 4, !dbg !680
  %1027 = icmp ne i32 %1026, 0, !dbg !681
  call void @llvm.stackrestore(i8* %977), !dbg !682
  br i1 %1027, label %2242, label %1028, !dbg !683

1028:                                             ; preds = %17, %1025
  %1029 = call i8* @llvm.stacksave(), !dbg !266
  %1030 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %1031 = load i8, i8* %1030, align 1, !dbg !270
  %1032 = alloca i32, align 4, !dbg !271
  store i32 2, i32* %1032, align 4, !dbg !272
  %1033 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !273
  %1034 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %1035 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1033, align 8, !dbg !275
  store %struct.VdbeCursor* %1035, %struct.VdbeCursor** %1034, align 8, !dbg !276
  %1036 = alloca i8*, align 8, !dbg !277
  %1037 = alloca i32, align 4, !dbg !278
  %1038 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1034, i32* %1032), !dbg !279
  %1039 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1034, align 8, !dbg !280
  %1040 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !281
  %1041 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 16, !dbg !282
  %1042 = load i16, i16* %1041, align 2, !dbg !283
  %1043 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 19, !dbg !284
  %1044 = load i32*, i32** %1043, align 8, !dbg !285
  %1045 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 0, !dbg !286
  %1046 = load i8, i8* %1045, align 1, !dbg !287
  %1047 = icmp ne i8 %1046, 3, !dbg !288
  %1048 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 2, !dbg !289
  %1049 = load i8, i8* %1048, align 1, !dbg !290
  %1050 = icmp ne i8 %1049, 0, !dbg !291
  %1051 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 14, !dbg !292
  %1052 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 21, !dbg !293
  %1053 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 22, !dbg !294
  %1054 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 20, !dbg !295
  %1055 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 17, !dbg !296
  %1056 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 9, !dbg !297
  %1057 = load i32, i32* %1056, align 4, !dbg !298
  %1058 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %1059 = load i32, i32* %1058, align 4, !dbg !300
  %1060 = icmp ne i32 %1057, %1059, !dbg !301
  br i1 %1060, label %1061, label %1103, !dbg !302

1061:                                             ; preds = %1028
  br i1 %1050, label %1083, label %1078, !dbg !303

1062:                                             ; preds = %1078, %1085
  %1063 = load i32, i32* %1058, align 4, !dbg !304
  store i32 %1063, i32* %1056, align 4, !dbg !305
  %1064 = load i8*, i8** %1054, align 8, !dbg !306
  %1065 = load i8, i8* %1064, align 1, !dbg !307
  %1066 = icmp sgt i8 %1065, -1, !dbg !310
  br i1 %1066, label %1067, label %1069, !dbg !311

1067:                                             ; preds = %1062
  %1068 = zext i8 %1065 to i32, !dbg !312
  store i32 %1068, i32* %1044, align 4, !dbg !313
  store i32 1, i32* %1051, align 4, !dbg !314
  br label %1072, !dbg !315

1069:                                             ; preds = %1062
  %1070 = call i8 @sqlite3GetVarint32(i8* %1064, i32* %1044), !dbg !316
  %1071 = zext i8 %1070 to i32, !dbg !317
  store i32 %1071, i32* %1051, align 4, !dbg !318
  br label %1072, !dbg !319

1072:                                             ; preds = %1069, %1067
  store i16 0, i16* %1055, align 2, !dbg !320
  %1073 = load i32, i32* %1053, align 4, !dbg !321
  %1074 = load i32, i32* %1044, align 4, !dbg !322
  %1075 = icmp ult i32 %1073, %1074, !dbg !323
  br i1 %1075, label %1077, label %1076, !dbg !324

1076:                                             ; preds = %1072
  store i8* %1064, i8** %1036, align 8, !dbg !325
  br label %1196, !dbg !326

1077:                                             ; preds = %1072
  store i8* null, i8** %1054, align 8, !dbg !327
  store i32 0, i32* %1053, align 4, !dbg !328
  br label %1103, !dbg !329

1078:                                             ; preds = %1061
  %1079 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 12, i32 0, !dbg !330
  %1080 = load %struct.BtCursor*, %struct.BtCursor** %1079, align 8, !dbg !331
  %1081 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1080), !dbg !332
  store i32 %1081, i32* %1052, align 4, !dbg !333
  %1082 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1080, i32* %1053), !dbg !334
  store i8* %1082, i8** %1054, align 8, !dbg !335
  br label %1062, !dbg !336

1083:                                             ; preds = %1061
  %1084 = icmp eq i8 %1046, 3, !dbg !337
  br i1 %1084, label %1085, label %1096, !dbg !338

1085:                                             ; preds = %1083
  %1086 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 10, !dbg !339
  %1087 = load i32, i32* %1086, align 4, !dbg !340
  %1088 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1087, !dbg !341
  %1089 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1088, i32 0, i32 1, !dbg !342
  %1090 = load i16, i16* %1089, align 2, !dbg !343
  %1091 = and i16 %1090, 16, !dbg !344
  %1092 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1088, i32 0, i32 4, !dbg !345
  %1093 = load i32, i32* %1092, align 4, !dbg !346
  store i32 %1093, i32* %1052, align 4, !dbg !347
  store i32 %1093, i32* %1053, align 4, !dbg !348
  %1094 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1088, i32 0, i32 5, !dbg !349
  %1095 = load i8*, i8** %1094, align 8, !dbg !350
  store i8* %1095, i8** %1054, align 8, !dbg !351
  br label %1062, !dbg !352

1096:                                             ; preds = %1083
  %1097 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 1, !dbg !353
  %1098 = load i16, i16* %1097, align 2, !dbg !353
  %1099 = and i16 %1098, 9216, !dbg !353
  %1100 = icmp ne i16 %1099, 0, !dbg !353
  br i1 %1100, label %1101, label %1102, !dbg !353

1101:                                             ; preds = %1096
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1040), !dbg !353
  br label %1284, !dbg !353

1102:                                             ; preds = %1096
  store i16 1, i16* %1097, align 2, !dbg !353
  br label %1284, !dbg !353

1103:                                             ; preds = %1077, %1028
  %1104 = load i16, i16* %1055, align 2, !dbg !354
  %1105 = icmp ule i16 %1104, 2, !dbg !355
  br i1 %1105, label %1188, label %1185, !dbg !356

1106:                                             ; preds = %1185, %1274
  %1107 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 1, !dbg !357
  %1108 = load i16, i16* %1107, align 2, !dbg !358
  %1109 = and i16 9216, %1108, !dbg !359
  %1110 = icmp eq i16 0, %1109, !dbg !360
  br i1 %1110, label %1111, label %1115, !dbg !361

1111:                                             ; preds = %1106
  %1112 = icmp ne i16 %1109, 0, !dbg !362
  br i1 %1112, label %1113, label %1114, !dbg !362

1113:                                             ; preds = %1111
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1040), !dbg !362
  br label %1115, !dbg !362

1114:                                             ; preds = %1111
  store i16 1, i16* %1107, align 2, !dbg !362
  br label %1115, !dbg !362

1115:                                             ; preds = %1113, %1114, %1106
  %1116 = load i32, i32* %1037, align 4, !dbg !363
  %1117 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 23, i32 2, !dbg !364
  %1118 = load i32, i32* %1117, align 4, !dbg !365
  %1119 = load i32, i32* %1053, align 4, !dbg !366
  %1120 = getelementptr i32, i32* %1044, i32 3, !dbg !367
  %1121 = load i32, i32* %1120, align 4, !dbg !368
  %1122 = icmp sge i32 %1119, %1121, !dbg !369
  br i1 %1122, label %1123, label %1163, !dbg !370

1123:                                             ; preds = %1115
  %1124 = load i8*, i8** %1054, align 8, !dbg !371
  %1125 = ptrtoint i8* %1124 to i64, !dbg !372
  %1126 = getelementptr i32, i32* %1044, i32 2, !dbg !373
  %1127 = load i32, i32* %1126, align 4, !dbg !374
  %1128 = zext i32 %1127 to i64, !dbg !375
  %1129 = add i64 %1125, %1128, !dbg !376
  %1130 = inttoptr i64 %1129 to i8*, !dbg !377
  store i8* %1130, i8** %1036, align 8, !dbg !378
  %1131 = load i32, i32* %1037, align 4, !dbg !379
  %1132 = icmp ult i32 %1131, 12, !dbg !380
  br i1 %1132, label %1133, label %1135, !dbg !381

1133:                                             ; preds = %1123
  %1134 = call i32 @sqlite3VdbeSerialGet(i8* %1130, i32 %1131, %struct.sqlite3_value* %1040), !dbg !382
  br label %1284, !dbg !383

1135:                                             ; preds = %1123
  %1136 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %1136, align 2, !dbg !385
  %1137 = getelementptr i16, i16* %1136, i32 1, !dbg !386
  store i16 514, i16* %1137, align 2, !dbg !387
  %1138 = load i32, i32* %1037, align 4, !dbg !388
  %1139 = sub i32 %1138, 12, !dbg !389
  %1140 = lshr i32 %1139, 1, !dbg !390
  %1141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 4, !dbg !391
  store i32 %1140, i32* %1141, align 4, !dbg !392
  %1142 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 2, !dbg !393
  store i8 %1031, i8* %1142, align 1, !dbg !394
  %1143 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 5, !dbg !395
  %1144 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 7, !dbg !396
  %1145 = load i32, i32* %1144, align 4, !dbg !397
  %1146 = add i32 %1140, 2, !dbg !398
  %1147 = icmp slt i32 %1145, %1146, !dbg !399
  br i1 %1147, label %1148, label %1150, !dbg !400

1148:                                             ; preds = %1135
  store i16 1, i16* %1107, align 2, !dbg !401
  %1149 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1040, i32 %1146, i32 0), !dbg !402
  br label %1153, !dbg !403

1150:                                             ; preds = %1135
  %1151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 6, !dbg !404
  %1152 = load i8*, i8** %1151, align 8, !dbg !405
  store i8* %1152, i8** %1143, align 8, !dbg !406
  br label %1153, !dbg !407

1153:                                             ; preds = %1150, %1148
  %1154 = zext i32 %1140 to i64, !dbg !408
  %1155 = load i8*, i8** %1143, align 8, !dbg !409
  %1156 = load i8*, i8** %1036, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1155, i8* %1156, i64 %1154, i1 false), !dbg !411
  %1157 = getelementptr i8, i8* %1155, i32 %1140, !dbg !412
  store i8 0, i8* %1157, align 1, !dbg !413
  %1158 = add i32 %1140, 1, !dbg !414
  %1159 = getelementptr i8, i8* %1155, i32 %1158, !dbg !415
  store i8 0, i8* %1159, align 1, !dbg !416
  %1160 = and i32 %1138, 1, !dbg !417
  %1161 = getelementptr i16, i16* %1136, i32 %1160, !dbg !418
  %1162 = load i16, i16* %1161, align 2, !dbg !419
  store i16 %1162, i16* %1107, align 2, !dbg !420
  br label %1284, !dbg !421

1163:                                             ; preds = %1115
  %1164 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 2, !dbg !422
  store i8 %1031, i8* %1164, align 1, !dbg !423
  %1165 = load i32, i32* %1037, align 4, !dbg !424
  %1166 = and i32 %1165, 1, !dbg !425
  %1167 = icmp eq i32 %1166, 0, !dbg !426
  %1168 = icmp sge i32 %1165, 12, !dbg !427
  %1169 = and i1 %1168, %1167, !dbg !428
  %1170 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1165), !dbg !429
  %1171 = icmp eq i32 %1170, 0, !dbg !430
  br i1 %1171, label %1183, label %1172, !dbg !431

1172:                                             ; preds = %1163
  %1173 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 12, i32 0, !dbg !432
  %1174 = load %struct.BtCursor*, %struct.BtCursor** %1173, align 8, !dbg !433
  %1175 = getelementptr i32, i32* %1044, i32 2, !dbg !434
  %1176 = load i32, i32* %1175, align 4, !dbg !435
  %1177 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1174, i32 %1176, i32 %1170, %struct.sqlite3_value* %1040), !dbg !436
  %1178 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 5, !dbg !437
  %1179 = load i8*, i8** %1178, align 8, !dbg !438
  %1180 = call i32 @sqlite3VdbeSerialGet(i8* %1179, i32 %1165, %struct.sqlite3_value* %1040), !dbg !439
  %1181 = load i16, i16* %1107, align 2, !dbg !440
  %1182 = and i16 %1181, -4097, !dbg !441
  store i16 %1182, i16* %1107, align 2, !dbg !442
  br label %1284, !dbg !443

1183:                                             ; preds = %1163
  %1184 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1165, %struct.sqlite3_value* %1040), !dbg !444
  br label %1284, !dbg !445

1185:                                             ; preds = %1103
  %1186 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 23, i32 2, !dbg !446
  %1187 = load i32, i32* %1186, align 4, !dbg !447
  store i32 %1187, i32* %1037, align 4, !dbg !448
  br label %1106, !dbg !449

1188:                                             ; preds = %1103
  %1189 = load i32, i32* %1051, align 4, !dbg !450
  %1190 = load i32, i32* %1044, align 4, !dbg !451
  %1191 = icmp ult i32 %1189, %1190, !dbg !452
  br i1 %1191, label %1192, label %1273, !dbg !453

1192:                                             ; preds = %1188
  %1193 = load i8*, i8** %1054, align 8, !dbg !454
  %1194 = icmp eq i8* %1193, null, !dbg !455
  br i1 %1194, label %1196, label %1195, !dbg !456

1195:                                             ; preds = %1192
  store i8* %1193, i8** %1036, align 8, !dbg !457
  br label %1196, !dbg !458

1196:                                             ; preds = %1195, %1192, %1076
  %1197 = alloca i32, align 4, !dbg !459
  %1198 = load i16, i16* %1055, align 2, !dbg !460
  %1199 = zext i16 %1198 to i32, !dbg !461
  store i32 %1199, i32* %1197, align 4, !dbg !462
  %1200 = alloca i64, align 8, !dbg !463
  %1201 = getelementptr i32, i32* %1044, i32 %1199, !dbg !464
  %1202 = load i32, i32* %1201, align 4, !dbg !465
  %1203 = zext i32 %1202 to i64, !dbg !466
  store i64 %1203, i64* %1200, align 4, !dbg !467
  %1204 = load i8*, i8** %1036, align 8, !dbg !468
  %1205 = load i32, i32* %1051, align 4, !dbg !469
  %1206 = alloca i8*, align 8, !dbg !470
  %1207 = getelementptr i8, i8* %1204, i32 %1205, !dbg !471
  store i8* %1207, i8** %1206, align 8, !dbg !472
  %1208 = load i32, i32* %1044, align 4, !dbg !473
  %1209 = getelementptr i8, i8* %1204, i32 %1208, !dbg !474
  br label %1210, !dbg !475

1210:                                             ; preds = %1217, %1196
  %1211 = load i32, i32* %1197, align 4, !dbg !476
  %1212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1039, i32 0, i32 23, i32 %1211, !dbg !477
  %1213 = load i8*, i8** %1206, align 8, !dbg !478
  %1214 = load i8, i8* %1213, align 1, !dbg !479
  %1215 = zext i8 %1214 to i32, !dbg !480
  store i32 %1215, i32* %1037, align 4, !dbg !481
  store i32 %1215, i32* %1212, align 4, !dbg !482
  %1216 = icmp sgt i8 %1214, -1, !dbg !483
  br i1 %1216, label %1240, label %1231, !dbg !484

1217:                                             ; preds = %1231, %1240
  %1218 = load i32, i32* %1197, align 4, !dbg !485
  %1219 = add i32 %1218, 1, !dbg !486
  store i32 %1219, i32* %1197, align 4, !dbg !487
  %1220 = load i64, i64* %1200, align 4, !dbg !488
  %1221 = and i64 4294967295, %1220, !dbg !489
  %1222 = trunc i64 %1221 to i32, !dbg !490
  %1223 = getelementptr i32, i32* %1044, i32 %1219, !dbg !491
  store i32 %1222, i32* %1223, align 4, !dbg !492
  %1224 = load i32, i32* %1197, align 4, !dbg !493
  %1225 = icmp sle i32 %1224, 2, !dbg !494
  %1226 = load i8*, i8** %1206, align 8, !dbg !495
  %1227 = ptrtoint i8* %1226 to i64, !dbg !496
  %1228 = ptrtoint i8* %1209 to i64, !dbg !497
  %1229 = icmp ult i64 %1227, %1228, !dbg !498
  %1230 = and i1 %1225, %1229, !dbg !499
  br i1 %1230, label %1210, label %1249, !dbg !500

1231:                                             ; preds = %1210
  %1232 = load i8*, i8** %1206, align 8, !dbg !501
  %1233 = call i8 @sqlite3GetVarint32(i8* %1232, i32* %1037), !dbg !502
  %1234 = getelementptr i8, i8* %1232, i8 %1233, !dbg !503
  store i8* %1234, i8** %1206, align 8, !dbg !504
  %1235 = load i32, i32* %1037, align 4, !dbg !505
  store i32 %1235, i32* %1212, align 4, !dbg !506
  %1236 = load i64, i64* %1200, align 4, !dbg !507
  %1237 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1235), !dbg !508
  %1238 = zext i32 %1237 to i64, !dbg !509
  %1239 = add i64 %1236, %1238, !dbg !510
  store i64 %1239, i64* %1200, align 4, !dbg !511
  br label %1217, !dbg !512

1240:                                             ; preds = %1210
  %1241 = getelementptr i8, i8* %1213, i32 1, !dbg !513
  store i8* %1241, i8** %1206, align 8, !dbg !514
  %1242 = load i32, i32* %1037, align 4, !dbg !515
  %1243 = trunc i32 %1242 to i8, !dbg !516
  %1244 = getelementptr i8, i8* %4, i8 %1243, !dbg !517
  %1245 = load i8, i8* %1244, align 1, !dbg !518
  %1246 = zext i8 %1245 to i64, !dbg !519
  %1247 = load i64, i64* %1200, align 4, !dbg !520
  %1248 = add i64 %1247, %1246, !dbg !521
  store i64 %1248, i64* %1200, align 4, !dbg !522
  br label %1217, !dbg !523

1249:                                             ; preds = %1217
  %1250 = load i64, i64* %1200, align 4, !dbg !524
  %1251 = load i32, i32* %1052, align 4, !dbg !525
  %1252 = zext i32 %1251 to i64, !dbg !526
  %1253 = icmp uge i64 %1227, %1228, !dbg !527
  %1254 = icmp ugt i64 %1227, %1228, !dbg !528
  %1255 = icmp ne i64 %1250, %1252, !dbg !529
  %1256 = icmp ugt i64 %1250, %1252, !dbg !530
  %1257 = or i1 %1254, %1255, !dbg !531
  %1258 = and i1 %1253, %1257, !dbg !532
  %1259 = or i1 %1258, %1256, !dbg !533
  br i1 %1259, label %1260, label %1264, !dbg !534

1260:                                             ; preds = %1249
  %1261 = load i32, i32* %1044, align 4, !dbg !535
  %1262 = icmp eq i32 %1261, 0, !dbg !536
  br i1 %1262, label %1263, label %1264, !dbg !537

1263:                                             ; preds = %1260
  store i32 0, i32* %1197, align 4, !dbg !538
  store i8* %1209, i8** %1206, align 8, !dbg !539
  br label %1264, !dbg !540

1264:                                             ; preds = %1263, %1260, %1249
  %1265 = load i32, i32* %1197, align 4, !dbg !541
  %1266 = trunc i32 %1265 to i16, !dbg !542
  store i16 %1266, i16* %1055, align 2, !dbg !543
  %1267 = load i8*, i8** %1206, align 8, !dbg !544
  %1268 = ptrtoint i8* %1267 to i64, !dbg !545
  %1269 = load i8*, i8** %1036, align 8, !dbg !546
  %1270 = ptrtoint i8* %1269 to i64, !dbg !547
  %1271 = sub i64 %1268, %1270, !dbg !548
  %1272 = trunc i64 %1271 to i32, !dbg !549
  store i32 %1272, i32* %1051, align 4, !dbg !550
  br label %1274, !dbg !551

1273:                                             ; preds = %1188
  store i32 0, i32* %1037, align 4, !dbg !552
  br label %1274, !dbg !553

1274:                                             ; preds = %1264, %1273
  %1275 = load i16, i16* %1055, align 2, !dbg !554
  %1276 = icmp sle i16 %1275, 2, !dbg !555
  br i1 %1276, label %1277, label %1106, !dbg !556

1277:                                             ; preds = %1274
  %1278 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1040, i32 0, i32 1, !dbg !557
  %1279 = load i16, i16* %1278, align 2, !dbg !557
  %1280 = and i16 %1279, 9216, !dbg !557
  %1281 = icmp ne i16 %1280, 0, !dbg !557
  br i1 %1281, label %1282, label %1283, !dbg !557

1282:                                             ; preds = %1277
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1040), !dbg !557
  br label %1284, !dbg !557

1283:                                             ; preds = %1277
  store i16 1, i16* %1278, align 2, !dbg !557
  br label %1284, !dbg !557

1284:                                             ; preds = %1282, %1283, %1153, %1133, %1172, %1183, %1101, %1102
  call void @llvm.stackrestore(i8* %1029), !dbg !558
  br label %1285, !dbg !75

1285:                                             ; preds = %17, %1284
  %1286 = call i8* @llvm.stacksave(), !dbg !266
  %1287 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %1288 = load i8, i8* %1287, align 1, !dbg !270
  %1289 = alloca i32, align 4, !dbg !271
  store i32 2, i32* %1289, align 4, !dbg !272
  %1290 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !273
  %1291 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %1292 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1290, align 8, !dbg !275
  store %struct.VdbeCursor* %1292, %struct.VdbeCursor** %1291, align 8, !dbg !276
  %1293 = alloca i8*, align 8, !dbg !277
  %1294 = alloca i32, align 4, !dbg !278
  %1295 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1291, i32* %1289), !dbg !279
  %1296 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1291, align 8, !dbg !280
  %1297 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !281
  %1298 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 16, !dbg !282
  %1299 = load i16, i16* %1298, align 2, !dbg !283
  %1300 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 19, !dbg !284
  %1301 = load i32*, i32** %1300, align 8, !dbg !285
  %1302 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 0, !dbg !286
  %1303 = load i8, i8* %1302, align 1, !dbg !287
  %1304 = icmp ne i8 %1303, 3, !dbg !288
  %1305 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 2, !dbg !289
  %1306 = load i8, i8* %1305, align 1, !dbg !290
  %1307 = icmp ne i8 %1306, 0, !dbg !291
  %1308 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 14, !dbg !292
  %1309 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 21, !dbg !293
  %1310 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 22, !dbg !294
  %1311 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 20, !dbg !295
  %1312 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 17, !dbg !296
  %1313 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 9, !dbg !297
  %1314 = load i32, i32* %1313, align 4, !dbg !298
  %1315 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %1316 = load i32, i32* %1315, align 4, !dbg !300
  %1317 = icmp ne i32 %1314, %1316, !dbg !301
  br i1 %1317, label %1318, label %1360, !dbg !302

1318:                                             ; preds = %1285
  br i1 %1307, label %1340, label %1335, !dbg !303

1319:                                             ; preds = %1335, %1342
  %1320 = load i32, i32* %1315, align 4, !dbg !304
  store i32 %1320, i32* %1313, align 4, !dbg !305
  %1321 = load i8*, i8** %1311, align 8, !dbg !306
  %1322 = load i8, i8* %1321, align 1, !dbg !307
  %1323 = icmp sgt i8 %1322, -1, !dbg !310
  br i1 %1323, label %1324, label %1326, !dbg !311

1324:                                             ; preds = %1319
  %1325 = zext i8 %1322 to i32, !dbg !312
  store i32 %1325, i32* %1301, align 4, !dbg !313
  store i32 1, i32* %1308, align 4, !dbg !314
  br label %1329, !dbg !315

1326:                                             ; preds = %1319
  %1327 = call i8 @sqlite3GetVarint32(i8* %1321, i32* %1301), !dbg !316
  %1328 = zext i8 %1327 to i32, !dbg !317
  store i32 %1328, i32* %1308, align 4, !dbg !318
  br label %1329, !dbg !319

1329:                                             ; preds = %1326, %1324
  store i16 0, i16* %1312, align 2, !dbg !320
  %1330 = load i32, i32* %1310, align 4, !dbg !321
  %1331 = load i32, i32* %1301, align 4, !dbg !322
  %1332 = icmp ult i32 %1330, %1331, !dbg !323
  br i1 %1332, label %1334, label %1333, !dbg !324

1333:                                             ; preds = %1329
  store i8* %1321, i8** %1293, align 8, !dbg !325
  br label %1453, !dbg !326

1334:                                             ; preds = %1329
  store i8* null, i8** %1311, align 8, !dbg !327
  store i32 0, i32* %1310, align 4, !dbg !328
  br label %1360, !dbg !329

1335:                                             ; preds = %1318
  %1336 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 12, i32 0, !dbg !330
  %1337 = load %struct.BtCursor*, %struct.BtCursor** %1336, align 8, !dbg !331
  %1338 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1337), !dbg !332
  store i32 %1338, i32* %1309, align 4, !dbg !333
  %1339 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1337, i32* %1310), !dbg !334
  store i8* %1339, i8** %1311, align 8, !dbg !335
  br label %1319, !dbg !336

1340:                                             ; preds = %1318
  %1341 = icmp eq i8 %1303, 3, !dbg !337
  br i1 %1341, label %1342, label %1353, !dbg !338

1342:                                             ; preds = %1340
  %1343 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 10, !dbg !339
  %1344 = load i32, i32* %1343, align 4, !dbg !340
  %1345 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1344, !dbg !341
  %1346 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1345, i32 0, i32 1, !dbg !342
  %1347 = load i16, i16* %1346, align 2, !dbg !343
  %1348 = and i16 %1347, 16, !dbg !344
  %1349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1345, i32 0, i32 4, !dbg !345
  %1350 = load i32, i32* %1349, align 4, !dbg !346
  store i32 %1350, i32* %1309, align 4, !dbg !347
  store i32 %1350, i32* %1310, align 4, !dbg !348
  %1351 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1345, i32 0, i32 5, !dbg !349
  %1352 = load i8*, i8** %1351, align 8, !dbg !350
  store i8* %1352, i8** %1311, align 8, !dbg !351
  br label %1319, !dbg !352

1353:                                             ; preds = %1340
  %1354 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 1, !dbg !353
  %1355 = load i16, i16* %1354, align 2, !dbg !353
  %1356 = and i16 %1355, 9216, !dbg !353
  %1357 = icmp ne i16 %1356, 0, !dbg !353
  br i1 %1357, label %1358, label %1359, !dbg !353

1358:                                             ; preds = %1353
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1297), !dbg !353
  br label %1541, !dbg !353

1359:                                             ; preds = %1353
  store i16 1, i16* %1354, align 2, !dbg !353
  br label %1541, !dbg !353

1360:                                             ; preds = %1334, %1285
  %1361 = load i16, i16* %1312, align 2, !dbg !354
  %1362 = icmp ule i16 %1361, 5, !dbg !355
  br i1 %1362, label %1445, label %1442, !dbg !356

1363:                                             ; preds = %1442, %1531
  %1364 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 1, !dbg !357
  %1365 = load i16, i16* %1364, align 2, !dbg !358
  %1366 = and i16 9216, %1365, !dbg !359
  %1367 = icmp eq i16 0, %1366, !dbg !360
  br i1 %1367, label %1368, label %1372, !dbg !361

1368:                                             ; preds = %1363
  %1369 = icmp ne i16 %1366, 0, !dbg !362
  br i1 %1369, label %1370, label %1371, !dbg !362

1370:                                             ; preds = %1368
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1297), !dbg !362
  br label %1372, !dbg !362

1371:                                             ; preds = %1368
  store i16 1, i16* %1364, align 2, !dbg !362
  br label %1372, !dbg !362

1372:                                             ; preds = %1370, %1371, %1363
  %1373 = load i32, i32* %1294, align 4, !dbg !363
  %1374 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 23, i32 5, !dbg !364
  %1375 = load i32, i32* %1374, align 4, !dbg !365
  %1376 = load i32, i32* %1310, align 4, !dbg !366
  %1377 = getelementptr i32, i32* %1301, i32 6, !dbg !367
  %1378 = load i32, i32* %1377, align 4, !dbg !368
  %1379 = icmp sge i32 %1376, %1378, !dbg !369
  br i1 %1379, label %1380, label %1420, !dbg !370

1380:                                             ; preds = %1372
  %1381 = load i8*, i8** %1311, align 8, !dbg !371
  %1382 = ptrtoint i8* %1381 to i64, !dbg !372
  %1383 = getelementptr i32, i32* %1301, i32 5, !dbg !373
  %1384 = load i32, i32* %1383, align 4, !dbg !374
  %1385 = zext i32 %1384 to i64, !dbg !375
  %1386 = add i64 %1382, %1385, !dbg !376
  %1387 = inttoptr i64 %1386 to i8*, !dbg !377
  store i8* %1387, i8** %1293, align 8, !dbg !378
  %1388 = load i32, i32* %1294, align 4, !dbg !379
  %1389 = icmp ult i32 %1388, 12, !dbg !380
  br i1 %1389, label %1390, label %1392, !dbg !381

1390:                                             ; preds = %1380
  %1391 = call i32 @sqlite3VdbeSerialGet(i8* %1387, i32 %1388, %struct.sqlite3_value* %1297), !dbg !382
  br label %1541, !dbg !383

1392:                                             ; preds = %1380
  %1393 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %1393, align 2, !dbg !385
  %1394 = getelementptr i16, i16* %1393, i32 1, !dbg !386
  store i16 514, i16* %1394, align 2, !dbg !387
  %1395 = load i32, i32* %1294, align 4, !dbg !388
  %1396 = sub i32 %1395, 12, !dbg !389
  %1397 = lshr i32 %1396, 1, !dbg !390
  %1398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 4, !dbg !391
  store i32 %1397, i32* %1398, align 4, !dbg !392
  %1399 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 2, !dbg !393
  store i8 %1288, i8* %1399, align 1, !dbg !394
  %1400 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 5, !dbg !395
  %1401 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 7, !dbg !396
  %1402 = load i32, i32* %1401, align 4, !dbg !397
  %1403 = add i32 %1397, 2, !dbg !398
  %1404 = icmp slt i32 %1402, %1403, !dbg !399
  br i1 %1404, label %1405, label %1407, !dbg !400

1405:                                             ; preds = %1392
  store i16 1, i16* %1364, align 2, !dbg !401
  %1406 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1297, i32 %1403, i32 0), !dbg !402
  br label %1410, !dbg !403

1407:                                             ; preds = %1392
  %1408 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 6, !dbg !404
  %1409 = load i8*, i8** %1408, align 8, !dbg !405
  store i8* %1409, i8** %1400, align 8, !dbg !406
  br label %1410, !dbg !407

1410:                                             ; preds = %1407, %1405
  %1411 = zext i32 %1397 to i64, !dbg !408
  %1412 = load i8*, i8** %1400, align 8, !dbg !409
  %1413 = load i8*, i8** %1293, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1412, i8* %1413, i64 %1411, i1 false), !dbg !411
  %1414 = getelementptr i8, i8* %1412, i32 %1397, !dbg !412
  store i8 0, i8* %1414, align 1, !dbg !413
  %1415 = add i32 %1397, 1, !dbg !414
  %1416 = getelementptr i8, i8* %1412, i32 %1415, !dbg !415
  store i8 0, i8* %1416, align 1, !dbg !416
  %1417 = and i32 %1395, 1, !dbg !417
  %1418 = getelementptr i16, i16* %1393, i32 %1417, !dbg !418
  %1419 = load i16, i16* %1418, align 2, !dbg !419
  store i16 %1419, i16* %1364, align 2, !dbg !420
  br label %1541, !dbg !421

1420:                                             ; preds = %1372
  %1421 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 2, !dbg !422
  store i8 %1288, i8* %1421, align 1, !dbg !423
  %1422 = load i32, i32* %1294, align 4, !dbg !424
  %1423 = and i32 %1422, 1, !dbg !425
  %1424 = icmp eq i32 %1423, 0, !dbg !426
  %1425 = icmp sge i32 %1422, 12, !dbg !427
  %1426 = and i1 %1425, %1424, !dbg !428
  %1427 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1422), !dbg !429
  %1428 = icmp eq i32 %1427, 0, !dbg !430
  br i1 %1428, label %1440, label %1429, !dbg !431

1429:                                             ; preds = %1420
  %1430 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 12, i32 0, !dbg !432
  %1431 = load %struct.BtCursor*, %struct.BtCursor** %1430, align 8, !dbg !433
  %1432 = getelementptr i32, i32* %1301, i32 5, !dbg !434
  %1433 = load i32, i32* %1432, align 4, !dbg !435
  %1434 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1431, i32 %1433, i32 %1427, %struct.sqlite3_value* %1297), !dbg !436
  %1435 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 5, !dbg !437
  %1436 = load i8*, i8** %1435, align 8, !dbg !438
  %1437 = call i32 @sqlite3VdbeSerialGet(i8* %1436, i32 %1422, %struct.sqlite3_value* %1297), !dbg !439
  %1438 = load i16, i16* %1364, align 2, !dbg !440
  %1439 = and i16 %1438, -4097, !dbg !441
  store i16 %1439, i16* %1364, align 2, !dbg !442
  br label %1541, !dbg !443

1440:                                             ; preds = %1420
  %1441 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1422, %struct.sqlite3_value* %1297), !dbg !444
  br label %1541, !dbg !445

1442:                                             ; preds = %1360
  %1443 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 23, i32 5, !dbg !446
  %1444 = load i32, i32* %1443, align 4, !dbg !447
  store i32 %1444, i32* %1294, align 4, !dbg !448
  br label %1363, !dbg !449

1445:                                             ; preds = %1360
  %1446 = load i32, i32* %1308, align 4, !dbg !450
  %1447 = load i32, i32* %1301, align 4, !dbg !451
  %1448 = icmp ult i32 %1446, %1447, !dbg !452
  br i1 %1448, label %1449, label %1530, !dbg !453

1449:                                             ; preds = %1445
  %1450 = load i8*, i8** %1311, align 8, !dbg !454
  %1451 = icmp eq i8* %1450, null, !dbg !455
  br i1 %1451, label %1453, label %1452, !dbg !456

1452:                                             ; preds = %1449
  store i8* %1450, i8** %1293, align 8, !dbg !457
  br label %1453, !dbg !458

1453:                                             ; preds = %1452, %1449, %1333
  %1454 = alloca i32, align 4, !dbg !459
  %1455 = load i16, i16* %1312, align 2, !dbg !460
  %1456 = zext i16 %1455 to i32, !dbg !461
  store i32 %1456, i32* %1454, align 4, !dbg !462
  %1457 = alloca i64, align 8, !dbg !463
  %1458 = getelementptr i32, i32* %1301, i32 %1456, !dbg !464
  %1459 = load i32, i32* %1458, align 4, !dbg !465
  %1460 = zext i32 %1459 to i64, !dbg !466
  store i64 %1460, i64* %1457, align 4, !dbg !467
  %1461 = load i8*, i8** %1293, align 8, !dbg !468
  %1462 = load i32, i32* %1308, align 4, !dbg !469
  %1463 = alloca i8*, align 8, !dbg !470
  %1464 = getelementptr i8, i8* %1461, i32 %1462, !dbg !471
  store i8* %1464, i8** %1463, align 8, !dbg !472
  %1465 = load i32, i32* %1301, align 4, !dbg !473
  %1466 = getelementptr i8, i8* %1461, i32 %1465, !dbg !474
  br label %1467, !dbg !475

1467:                                             ; preds = %1474, %1453
  %1468 = load i32, i32* %1454, align 4, !dbg !476
  %1469 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1296, i32 0, i32 23, i32 %1468, !dbg !477
  %1470 = load i8*, i8** %1463, align 8, !dbg !478
  %1471 = load i8, i8* %1470, align 1, !dbg !479
  %1472 = zext i8 %1471 to i32, !dbg !480
  store i32 %1472, i32* %1294, align 4, !dbg !481
  store i32 %1472, i32* %1469, align 4, !dbg !482
  %1473 = icmp sgt i8 %1471, -1, !dbg !483
  br i1 %1473, label %1497, label %1488, !dbg !484

1474:                                             ; preds = %1488, %1497
  %1475 = load i32, i32* %1454, align 4, !dbg !485
  %1476 = add i32 %1475, 1, !dbg !486
  store i32 %1476, i32* %1454, align 4, !dbg !487
  %1477 = load i64, i64* %1457, align 4, !dbg !488
  %1478 = and i64 4294967295, %1477, !dbg !489
  %1479 = trunc i64 %1478 to i32, !dbg !490
  %1480 = getelementptr i32, i32* %1301, i32 %1476, !dbg !491
  store i32 %1479, i32* %1480, align 4, !dbg !492
  %1481 = load i32, i32* %1454, align 4, !dbg !493
  %1482 = icmp sle i32 %1481, 5, !dbg !494
  %1483 = load i8*, i8** %1463, align 8, !dbg !495
  %1484 = ptrtoint i8* %1483 to i64, !dbg !496
  %1485 = ptrtoint i8* %1466 to i64, !dbg !497
  %1486 = icmp ult i64 %1484, %1485, !dbg !498
  %1487 = and i1 %1482, %1486, !dbg !499
  br i1 %1487, label %1467, label %1506, !dbg !500

1488:                                             ; preds = %1467
  %1489 = load i8*, i8** %1463, align 8, !dbg !501
  %1490 = call i8 @sqlite3GetVarint32(i8* %1489, i32* %1294), !dbg !502
  %1491 = getelementptr i8, i8* %1489, i8 %1490, !dbg !503
  store i8* %1491, i8** %1463, align 8, !dbg !504
  %1492 = load i32, i32* %1294, align 4, !dbg !505
  store i32 %1492, i32* %1469, align 4, !dbg !506
  %1493 = load i64, i64* %1457, align 4, !dbg !507
  %1494 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1492), !dbg !508
  %1495 = zext i32 %1494 to i64, !dbg !509
  %1496 = add i64 %1493, %1495, !dbg !510
  store i64 %1496, i64* %1457, align 4, !dbg !511
  br label %1474, !dbg !512

1497:                                             ; preds = %1467
  %1498 = getelementptr i8, i8* %1470, i32 1, !dbg !513
  store i8* %1498, i8** %1463, align 8, !dbg !514
  %1499 = load i32, i32* %1294, align 4, !dbg !515
  %1500 = trunc i32 %1499 to i8, !dbg !516
  %1501 = getelementptr i8, i8* %4, i8 %1500, !dbg !517
  %1502 = load i8, i8* %1501, align 1, !dbg !518
  %1503 = zext i8 %1502 to i64, !dbg !519
  %1504 = load i64, i64* %1457, align 4, !dbg !520
  %1505 = add i64 %1504, %1503, !dbg !521
  store i64 %1505, i64* %1457, align 4, !dbg !522
  br label %1474, !dbg !523

1506:                                             ; preds = %1474
  %1507 = load i64, i64* %1457, align 4, !dbg !524
  %1508 = load i32, i32* %1309, align 4, !dbg !525
  %1509 = zext i32 %1508 to i64, !dbg !526
  %1510 = icmp uge i64 %1484, %1485, !dbg !527
  %1511 = icmp ugt i64 %1484, %1485, !dbg !528
  %1512 = icmp ne i64 %1507, %1509, !dbg !529
  %1513 = icmp ugt i64 %1507, %1509, !dbg !530
  %1514 = or i1 %1511, %1512, !dbg !531
  %1515 = and i1 %1510, %1514, !dbg !532
  %1516 = or i1 %1515, %1513, !dbg !533
  br i1 %1516, label %1517, label %1521, !dbg !534

1517:                                             ; preds = %1506
  %1518 = load i32, i32* %1301, align 4, !dbg !535
  %1519 = icmp eq i32 %1518, 0, !dbg !536
  br i1 %1519, label %1520, label %1521, !dbg !537

1520:                                             ; preds = %1517
  store i32 0, i32* %1454, align 4, !dbg !538
  store i8* %1466, i8** %1463, align 8, !dbg !539
  br label %1521, !dbg !540

1521:                                             ; preds = %1520, %1517, %1506
  %1522 = load i32, i32* %1454, align 4, !dbg !541
  %1523 = trunc i32 %1522 to i16, !dbg !542
  store i16 %1523, i16* %1312, align 2, !dbg !543
  %1524 = load i8*, i8** %1463, align 8, !dbg !544
  %1525 = ptrtoint i8* %1524 to i64, !dbg !545
  %1526 = load i8*, i8** %1293, align 8, !dbg !546
  %1527 = ptrtoint i8* %1526 to i64, !dbg !547
  %1528 = sub i64 %1525, %1527, !dbg !548
  %1529 = trunc i64 %1528 to i32, !dbg !549
  store i32 %1529, i32* %1308, align 4, !dbg !550
  br label %1531, !dbg !551

1530:                                             ; preds = %1445
  store i32 0, i32* %1294, align 4, !dbg !552
  br label %1531, !dbg !553

1531:                                             ; preds = %1521, %1530
  %1532 = load i16, i16* %1312, align 2, !dbg !554
  %1533 = icmp sle i16 %1532, 5, !dbg !555
  br i1 %1533, label %1534, label %1363, !dbg !556

1534:                                             ; preds = %1531
  %1535 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1297, i32 0, i32 1, !dbg !557
  %1536 = load i16, i16* %1535, align 2, !dbg !557
  %1537 = and i16 %1536, 9216, !dbg !557
  %1538 = icmp ne i16 %1537, 0, !dbg !557
  br i1 %1538, label %1539, label %1540, !dbg !557

1539:                                             ; preds = %1534
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1297), !dbg !557
  br label %1541, !dbg !557

1540:                                             ; preds = %1534
  store i16 1, i16* %1535, align 2, !dbg !557
  br label %1541, !dbg !557

1541:                                             ; preds = %1539, %1540, %1410, %1390, %1429, %1440, %1358, %1359
  call void @llvm.stackrestore(i8* %1286), !dbg !558
  br label %1542, !dbg !75

1542:                                             ; preds = %17, %1541
  %1543 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !685
  %1544 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1543, i32 0, i32 1, !dbg !688
  %1545 = load i16, i16* %1544, align 2, !dbg !689
  %1546 = and i16 %1545, 36, !dbg !690
  %1547 = icmp ne i16 %1546, 0, !dbg !691
  br i1 %1547, label %1548, label %1549, !dbg !692

1548:                                             ; preds = %1542
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %1543), !dbg !693
  br label %1549, !dbg !694

1549:                                             ; preds = %1548, %1542, %17
  %1550 = call i8* @llvm.stacksave(), !dbg !266
  %1551 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %1552 = load i8, i8* %1551, align 1, !dbg !270
  %1553 = alloca i32, align 4, !dbg !271
  store i32 2, i32* %1553, align 4, !dbg !272
  %1554 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !273
  %1555 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %1556 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1554, align 8, !dbg !275
  store %struct.VdbeCursor* %1556, %struct.VdbeCursor** %1555, align 8, !dbg !276
  %1557 = alloca i8*, align 8, !dbg !277
  %1558 = alloca i32, align 4, !dbg !278
  %1559 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1555, i32* %1553), !dbg !279
  %1560 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1555, align 8, !dbg !280
  %1561 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !281
  %1562 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 16, !dbg !282
  %1563 = load i16, i16* %1562, align 2, !dbg !283
  %1564 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 19, !dbg !284
  %1565 = load i32*, i32** %1564, align 8, !dbg !285
  %1566 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 0, !dbg !286
  %1567 = load i8, i8* %1566, align 1, !dbg !287
  %1568 = icmp ne i8 %1567, 3, !dbg !288
  %1569 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 2, !dbg !289
  %1570 = load i8, i8* %1569, align 1, !dbg !290
  %1571 = icmp ne i8 %1570, 0, !dbg !291
  %1572 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 14, !dbg !292
  %1573 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 21, !dbg !293
  %1574 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 22, !dbg !294
  %1575 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 20, !dbg !295
  %1576 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 17, !dbg !296
  %1577 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 9, !dbg !297
  %1578 = load i32, i32* %1577, align 4, !dbg !298
  %1579 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %1580 = load i32, i32* %1579, align 4, !dbg !300
  %1581 = icmp ne i32 %1578, %1580, !dbg !301
  br i1 %1581, label %1582, label %1624, !dbg !302

1582:                                             ; preds = %1549
  br i1 %1571, label %1604, label %1599, !dbg !303

1583:                                             ; preds = %1599, %1606
  %1584 = load i32, i32* %1579, align 4, !dbg !304
  store i32 %1584, i32* %1577, align 4, !dbg !305
  %1585 = load i8*, i8** %1575, align 8, !dbg !306
  %1586 = load i8, i8* %1585, align 1, !dbg !307
  %1587 = icmp sgt i8 %1586, -1, !dbg !310
  br i1 %1587, label %1588, label %1590, !dbg !311

1588:                                             ; preds = %1583
  %1589 = zext i8 %1586 to i32, !dbg !312
  store i32 %1589, i32* %1565, align 4, !dbg !313
  store i32 1, i32* %1572, align 4, !dbg !314
  br label %1593, !dbg !315

1590:                                             ; preds = %1583
  %1591 = call i8 @sqlite3GetVarint32(i8* %1585, i32* %1565), !dbg !316
  %1592 = zext i8 %1591 to i32, !dbg !317
  store i32 %1592, i32* %1572, align 4, !dbg !318
  br label %1593, !dbg !319

1593:                                             ; preds = %1590, %1588
  store i16 0, i16* %1576, align 2, !dbg !320
  %1594 = load i32, i32* %1574, align 4, !dbg !321
  %1595 = load i32, i32* %1565, align 4, !dbg !322
  %1596 = icmp ult i32 %1594, %1595, !dbg !323
  br i1 %1596, label %1598, label %1597, !dbg !324

1597:                                             ; preds = %1593
  store i8* %1585, i8** %1557, align 8, !dbg !325
  br label %1717, !dbg !326

1598:                                             ; preds = %1593
  store i8* null, i8** %1575, align 8, !dbg !327
  store i32 0, i32* %1574, align 4, !dbg !328
  br label %1624, !dbg !329

1599:                                             ; preds = %1582
  %1600 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 12, i32 0, !dbg !330
  %1601 = load %struct.BtCursor*, %struct.BtCursor** %1600, align 8, !dbg !331
  %1602 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1601), !dbg !332
  store i32 %1602, i32* %1573, align 4, !dbg !333
  %1603 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1601, i32* %1574), !dbg !334
  store i8* %1603, i8** %1575, align 8, !dbg !335
  br label %1583, !dbg !336

1604:                                             ; preds = %1582
  %1605 = icmp eq i8 %1567, 3, !dbg !337
  br i1 %1605, label %1606, label %1617, !dbg !338

1606:                                             ; preds = %1604
  %1607 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 10, !dbg !339
  %1608 = load i32, i32* %1607, align 4, !dbg !340
  %1609 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1608, !dbg !341
  %1610 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1609, i32 0, i32 1, !dbg !342
  %1611 = load i16, i16* %1610, align 2, !dbg !343
  %1612 = and i16 %1611, 16, !dbg !344
  %1613 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1609, i32 0, i32 4, !dbg !345
  %1614 = load i32, i32* %1613, align 4, !dbg !346
  store i32 %1614, i32* %1573, align 4, !dbg !347
  store i32 %1614, i32* %1574, align 4, !dbg !348
  %1615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1609, i32 0, i32 5, !dbg !349
  %1616 = load i8*, i8** %1615, align 8, !dbg !350
  store i8* %1616, i8** %1575, align 8, !dbg !351
  br label %1583, !dbg !352

1617:                                             ; preds = %1604
  %1618 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 1, !dbg !353
  %1619 = load i16, i16* %1618, align 2, !dbg !353
  %1620 = and i16 %1619, 9216, !dbg !353
  %1621 = icmp ne i16 %1620, 0, !dbg !353
  br i1 %1621, label %1622, label %1623, !dbg !353

1622:                                             ; preds = %1617
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1561), !dbg !353
  br label %1805, !dbg !353

1623:                                             ; preds = %1617
  store i16 1, i16* %1618, align 2, !dbg !353
  br label %1805, !dbg !353

1624:                                             ; preds = %1598, %1549
  %1625 = load i16, i16* %1576, align 2, !dbg !354
  %1626 = icmp ule i16 %1625, 6, !dbg !355
  br i1 %1626, label %1709, label %1706, !dbg !356

1627:                                             ; preds = %1706, %1795
  %1628 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 1, !dbg !357
  %1629 = load i16, i16* %1628, align 2, !dbg !358
  %1630 = and i16 9216, %1629, !dbg !359
  %1631 = icmp eq i16 0, %1630, !dbg !360
  br i1 %1631, label %1632, label %1636, !dbg !361

1632:                                             ; preds = %1627
  %1633 = icmp ne i16 %1630, 0, !dbg !362
  br i1 %1633, label %1634, label %1635, !dbg !362

1634:                                             ; preds = %1632
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1561), !dbg !362
  br label %1636, !dbg !362

1635:                                             ; preds = %1632
  store i16 1, i16* %1628, align 2, !dbg !362
  br label %1636, !dbg !362

1636:                                             ; preds = %1634, %1635, %1627
  %1637 = load i32, i32* %1558, align 4, !dbg !363
  %1638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 23, i32 6, !dbg !364
  %1639 = load i32, i32* %1638, align 4, !dbg !365
  %1640 = load i32, i32* %1574, align 4, !dbg !366
  %1641 = getelementptr i32, i32* %1565, i32 7, !dbg !367
  %1642 = load i32, i32* %1641, align 4, !dbg !368
  %1643 = icmp sge i32 %1640, %1642, !dbg !369
  br i1 %1643, label %1644, label %1684, !dbg !370

1644:                                             ; preds = %1636
  %1645 = load i8*, i8** %1575, align 8, !dbg !371
  %1646 = ptrtoint i8* %1645 to i64, !dbg !372
  %1647 = getelementptr i32, i32* %1565, i32 6, !dbg !373
  %1648 = load i32, i32* %1647, align 4, !dbg !374
  %1649 = zext i32 %1648 to i64, !dbg !375
  %1650 = add i64 %1646, %1649, !dbg !376
  %1651 = inttoptr i64 %1650 to i8*, !dbg !377
  store i8* %1651, i8** %1557, align 8, !dbg !378
  %1652 = load i32, i32* %1558, align 4, !dbg !379
  %1653 = icmp ult i32 %1652, 12, !dbg !380
  br i1 %1653, label %1654, label %1656, !dbg !381

1654:                                             ; preds = %1644
  %1655 = call i32 @sqlite3VdbeSerialGet(i8* %1651, i32 %1652, %struct.sqlite3_value* %1561), !dbg !382
  br label %1805, !dbg !383

1656:                                             ; preds = %1644
  %1657 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %1657, align 2, !dbg !385
  %1658 = getelementptr i16, i16* %1657, i32 1, !dbg !386
  store i16 514, i16* %1658, align 2, !dbg !387
  %1659 = load i32, i32* %1558, align 4, !dbg !388
  %1660 = sub i32 %1659, 12, !dbg !389
  %1661 = lshr i32 %1660, 1, !dbg !390
  %1662 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 4, !dbg !391
  store i32 %1661, i32* %1662, align 4, !dbg !392
  %1663 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 2, !dbg !393
  store i8 %1552, i8* %1663, align 1, !dbg !394
  %1664 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 5, !dbg !395
  %1665 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 7, !dbg !396
  %1666 = load i32, i32* %1665, align 4, !dbg !397
  %1667 = add i32 %1661, 2, !dbg !398
  %1668 = icmp slt i32 %1666, %1667, !dbg !399
  br i1 %1668, label %1669, label %1671, !dbg !400

1669:                                             ; preds = %1656
  store i16 1, i16* %1628, align 2, !dbg !401
  %1670 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1561, i32 %1667, i32 0), !dbg !402
  br label %1674, !dbg !403

1671:                                             ; preds = %1656
  %1672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 6, !dbg !404
  %1673 = load i8*, i8** %1672, align 8, !dbg !405
  store i8* %1673, i8** %1664, align 8, !dbg !406
  br label %1674, !dbg !407

1674:                                             ; preds = %1671, %1669
  %1675 = zext i32 %1661 to i64, !dbg !408
  %1676 = load i8*, i8** %1664, align 8, !dbg !409
  %1677 = load i8*, i8** %1557, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1676, i8* %1677, i64 %1675, i1 false), !dbg !411
  %1678 = getelementptr i8, i8* %1676, i32 %1661, !dbg !412
  store i8 0, i8* %1678, align 1, !dbg !413
  %1679 = add i32 %1661, 1, !dbg !414
  %1680 = getelementptr i8, i8* %1676, i32 %1679, !dbg !415
  store i8 0, i8* %1680, align 1, !dbg !416
  %1681 = and i32 %1659, 1, !dbg !417
  %1682 = getelementptr i16, i16* %1657, i32 %1681, !dbg !418
  %1683 = load i16, i16* %1682, align 2, !dbg !419
  store i16 %1683, i16* %1628, align 2, !dbg !420
  br label %1805, !dbg !421

1684:                                             ; preds = %1636
  %1685 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 2, !dbg !422
  store i8 %1552, i8* %1685, align 1, !dbg !423
  %1686 = load i32, i32* %1558, align 4, !dbg !424
  %1687 = and i32 %1686, 1, !dbg !425
  %1688 = icmp eq i32 %1687, 0, !dbg !426
  %1689 = icmp sge i32 %1686, 12, !dbg !427
  %1690 = and i1 %1689, %1688, !dbg !428
  %1691 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1686), !dbg !429
  %1692 = icmp eq i32 %1691, 0, !dbg !430
  br i1 %1692, label %1704, label %1693, !dbg !431

1693:                                             ; preds = %1684
  %1694 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 12, i32 0, !dbg !432
  %1695 = load %struct.BtCursor*, %struct.BtCursor** %1694, align 8, !dbg !433
  %1696 = getelementptr i32, i32* %1565, i32 6, !dbg !434
  %1697 = load i32, i32* %1696, align 4, !dbg !435
  %1698 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1695, i32 %1697, i32 %1691, %struct.sqlite3_value* %1561), !dbg !436
  %1699 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 5, !dbg !437
  %1700 = load i8*, i8** %1699, align 8, !dbg !438
  %1701 = call i32 @sqlite3VdbeSerialGet(i8* %1700, i32 %1686, %struct.sqlite3_value* %1561), !dbg !439
  %1702 = load i16, i16* %1628, align 2, !dbg !440
  %1703 = and i16 %1702, -4097, !dbg !441
  store i16 %1703, i16* %1628, align 2, !dbg !442
  br label %1805, !dbg !443

1704:                                             ; preds = %1684
  %1705 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1686, %struct.sqlite3_value* %1561), !dbg !444
  br label %1805, !dbg !445

1706:                                             ; preds = %1624
  %1707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 23, i32 6, !dbg !446
  %1708 = load i32, i32* %1707, align 4, !dbg !447
  store i32 %1708, i32* %1558, align 4, !dbg !448
  br label %1627, !dbg !449

1709:                                             ; preds = %1624
  %1710 = load i32, i32* %1572, align 4, !dbg !450
  %1711 = load i32, i32* %1565, align 4, !dbg !451
  %1712 = icmp ult i32 %1710, %1711, !dbg !452
  br i1 %1712, label %1713, label %1794, !dbg !453

1713:                                             ; preds = %1709
  %1714 = load i8*, i8** %1575, align 8, !dbg !454
  %1715 = icmp eq i8* %1714, null, !dbg !455
  br i1 %1715, label %1717, label %1716, !dbg !456

1716:                                             ; preds = %1713
  store i8* %1714, i8** %1557, align 8, !dbg !457
  br label %1717, !dbg !458

1717:                                             ; preds = %1716, %1713, %1597
  %1718 = alloca i32, align 4, !dbg !459
  %1719 = load i16, i16* %1576, align 2, !dbg !460
  %1720 = zext i16 %1719 to i32, !dbg !461
  store i32 %1720, i32* %1718, align 4, !dbg !462
  %1721 = alloca i64, align 8, !dbg !463
  %1722 = getelementptr i32, i32* %1565, i32 %1720, !dbg !464
  %1723 = load i32, i32* %1722, align 4, !dbg !465
  %1724 = zext i32 %1723 to i64, !dbg !466
  store i64 %1724, i64* %1721, align 4, !dbg !467
  %1725 = load i8*, i8** %1557, align 8, !dbg !468
  %1726 = load i32, i32* %1572, align 4, !dbg !469
  %1727 = alloca i8*, align 8, !dbg !470
  %1728 = getelementptr i8, i8* %1725, i32 %1726, !dbg !471
  store i8* %1728, i8** %1727, align 8, !dbg !472
  %1729 = load i32, i32* %1565, align 4, !dbg !473
  %1730 = getelementptr i8, i8* %1725, i32 %1729, !dbg !474
  br label %1731, !dbg !475

1731:                                             ; preds = %1738, %1717
  %1732 = load i32, i32* %1718, align 4, !dbg !476
  %1733 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1560, i32 0, i32 23, i32 %1732, !dbg !477
  %1734 = load i8*, i8** %1727, align 8, !dbg !478
  %1735 = load i8, i8* %1734, align 1, !dbg !479
  %1736 = zext i8 %1735 to i32, !dbg !480
  store i32 %1736, i32* %1558, align 4, !dbg !481
  store i32 %1736, i32* %1733, align 4, !dbg !482
  %1737 = icmp sgt i8 %1735, -1, !dbg !483
  br i1 %1737, label %1761, label %1752, !dbg !484

1738:                                             ; preds = %1752, %1761
  %1739 = load i32, i32* %1718, align 4, !dbg !485
  %1740 = add i32 %1739, 1, !dbg !486
  store i32 %1740, i32* %1718, align 4, !dbg !487
  %1741 = load i64, i64* %1721, align 4, !dbg !488
  %1742 = and i64 4294967295, %1741, !dbg !489
  %1743 = trunc i64 %1742 to i32, !dbg !490
  %1744 = getelementptr i32, i32* %1565, i32 %1740, !dbg !491
  store i32 %1743, i32* %1744, align 4, !dbg !492
  %1745 = load i32, i32* %1718, align 4, !dbg !493
  %1746 = icmp sle i32 %1745, 6, !dbg !494
  %1747 = load i8*, i8** %1727, align 8, !dbg !495
  %1748 = ptrtoint i8* %1747 to i64, !dbg !496
  %1749 = ptrtoint i8* %1730 to i64, !dbg !497
  %1750 = icmp ult i64 %1748, %1749, !dbg !498
  %1751 = and i1 %1746, %1750, !dbg !499
  br i1 %1751, label %1731, label %1770, !dbg !500

1752:                                             ; preds = %1731
  %1753 = load i8*, i8** %1727, align 8, !dbg !501
  %1754 = call i8 @sqlite3GetVarint32(i8* %1753, i32* %1558), !dbg !502
  %1755 = getelementptr i8, i8* %1753, i8 %1754, !dbg !503
  store i8* %1755, i8** %1727, align 8, !dbg !504
  %1756 = load i32, i32* %1558, align 4, !dbg !505
  store i32 %1756, i32* %1733, align 4, !dbg !506
  %1757 = load i64, i64* %1721, align 4, !dbg !507
  %1758 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1756), !dbg !508
  %1759 = zext i32 %1758 to i64, !dbg !509
  %1760 = add i64 %1757, %1759, !dbg !510
  store i64 %1760, i64* %1721, align 4, !dbg !511
  br label %1738, !dbg !512

1761:                                             ; preds = %1731
  %1762 = getelementptr i8, i8* %1734, i32 1, !dbg !513
  store i8* %1762, i8** %1727, align 8, !dbg !514
  %1763 = load i32, i32* %1558, align 4, !dbg !515
  %1764 = trunc i32 %1763 to i8, !dbg !516
  %1765 = getelementptr i8, i8* %4, i8 %1764, !dbg !517
  %1766 = load i8, i8* %1765, align 1, !dbg !518
  %1767 = zext i8 %1766 to i64, !dbg !519
  %1768 = load i64, i64* %1721, align 4, !dbg !520
  %1769 = add i64 %1768, %1767, !dbg !521
  store i64 %1769, i64* %1721, align 4, !dbg !522
  br label %1738, !dbg !523

1770:                                             ; preds = %1738
  %1771 = load i64, i64* %1721, align 4, !dbg !524
  %1772 = load i32, i32* %1573, align 4, !dbg !525
  %1773 = zext i32 %1772 to i64, !dbg !526
  %1774 = icmp uge i64 %1748, %1749, !dbg !527
  %1775 = icmp ugt i64 %1748, %1749, !dbg !528
  %1776 = icmp ne i64 %1771, %1773, !dbg !529
  %1777 = icmp ugt i64 %1771, %1773, !dbg !530
  %1778 = or i1 %1775, %1776, !dbg !531
  %1779 = and i1 %1774, %1778, !dbg !532
  %1780 = or i1 %1779, %1777, !dbg !533
  br i1 %1780, label %1781, label %1785, !dbg !534

1781:                                             ; preds = %1770
  %1782 = load i32, i32* %1565, align 4, !dbg !535
  %1783 = icmp eq i32 %1782, 0, !dbg !536
  br i1 %1783, label %1784, label %1785, !dbg !537

1784:                                             ; preds = %1781
  store i32 0, i32* %1718, align 4, !dbg !538
  store i8* %1730, i8** %1727, align 8, !dbg !539
  br label %1785, !dbg !540

1785:                                             ; preds = %1784, %1781, %1770
  %1786 = load i32, i32* %1718, align 4, !dbg !541
  %1787 = trunc i32 %1786 to i16, !dbg !542
  store i16 %1787, i16* %1576, align 2, !dbg !543
  %1788 = load i8*, i8** %1727, align 8, !dbg !544
  %1789 = ptrtoint i8* %1788 to i64, !dbg !545
  %1790 = load i8*, i8** %1557, align 8, !dbg !546
  %1791 = ptrtoint i8* %1790 to i64, !dbg !547
  %1792 = sub i64 %1789, %1791, !dbg !548
  %1793 = trunc i64 %1792 to i32, !dbg !549
  store i32 %1793, i32* %1572, align 4, !dbg !550
  br label %1795, !dbg !551

1794:                                             ; preds = %1709
  store i32 0, i32* %1558, align 4, !dbg !552
  br label %1795, !dbg !553

1795:                                             ; preds = %1785, %1794
  %1796 = load i16, i16* %1576, align 2, !dbg !554
  %1797 = icmp sle i16 %1796, 6, !dbg !555
  br i1 %1797, label %1798, label %1627, !dbg !556

1798:                                             ; preds = %1795
  %1799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1561, i32 0, i32 1, !dbg !557
  %1800 = load i16, i16* %1799, align 2, !dbg !557
  %1801 = and i16 %1800, 9216, !dbg !557
  %1802 = icmp ne i16 %1801, 0, !dbg !557
  br i1 %1802, label %1803, label %1804, !dbg !557

1803:                                             ; preds = %1798
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1561), !dbg !557
  br label %1805, !dbg !557

1804:                                             ; preds = %1798
  store i16 1, i16* %1799, align 2, !dbg !557
  br label %1805, !dbg !557

1805:                                             ; preds = %1803, %1804, %1674, %1654, %1693, %1704, %1622, %1623
  call void @llvm.stackrestore(i8* %1550), !dbg !558
  br label %1806, !dbg !75

1806:                                             ; preds = %17, %1805
  %1807 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !685
  %1808 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1807, i32 0, i32 1, !dbg !688
  %1809 = load i16, i16* %1808, align 2, !dbg !689
  %1810 = and i16 %1809, 36, !dbg !690
  %1811 = icmp ne i16 %1810, 0, !dbg !691
  br i1 %1811, label %1812, label %1813, !dbg !692

1812:                                             ; preds = %1806
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %1807), !dbg !693
  br label %1813, !dbg !694

1813:                                             ; preds = %1812, %1806, %17
  %1814 = call i8* @llvm.stacksave(), !dbg !695
  %1815 = alloca i64, align 8, !dbg !698
  store i64 0, i64* %1815, align 4, !dbg !699
  %1816 = alloca i32, align 8, !dbg !700
  store i32 0, i32* %1816, align 4, !dbg !701
  %1817 = alloca i64, align 8, !dbg !702
  store i64 0, i64* %1817, align 4, !dbg !703
  %1818 = alloca i8*, align 8, !dbg !704
  %1819 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 26, !dbg !705
  %1820 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1819, i32 0, i32 6, !dbg !706
  %1821 = bitcast %union.p4union* %1820 to i8**, !dbg !707
  %1822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !708
  %1823 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1822, i32 2, !dbg !709
  %1824 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !710
  %1825 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 0, i32 1, !dbg !711
  %1826 = load i16, i16* %1825, align 2, !dbg !712
  %1827 = and i16 %1826, 1, !dbg !713
  %1828 = icmp ne i16 %1827, 0, !dbg !713
  %1829 = and i16 %1826, 36, !dbg !714
  %1830 = icmp ne i16 %1829, 0, !dbg !714
  %1831 = and i16 %1826, 8, !dbg !715
  %1832 = icmp ne i16 %1831, 0, !dbg !715
  %1833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 0, i32 8, !dbg !716
  br i1 %1828, label %1834, label %1842, !dbg !717

1834:                                             ; preds = %1813
  %1835 = and i16 %1826, 16384, !dbg !718
  %1836 = icmp ne i16 %1835, 0, !dbg !718
  br i1 %1836, label %1837, label %1838, !dbg !719

1837:                                             ; preds = %1834
  store i32 10, i32* %1833, align 4, !dbg !720
  br label %1839, !dbg !721

1838:                                             ; preds = %1834
  store i32 0, i32* %1833, align 4, !dbg !722
  br label %1839, !dbg !723

1839:                                             ; preds = %1838, %1837
  %1840 = load i32, i32* %1816, align 4, !dbg !724
  %1841 = add i32 %1840, 1, !dbg !724
  store i32 %1841, i32* %1816, align 4, !dbg !724
  br label %1932, !dbg !725

1842:                                             ; preds = %1813
  br i1 %1830, label %1843, label %1887, !dbg !726

1843:                                             ; preds = %1842
  %1844 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 0, i32 0, !dbg !727
  %1845 = bitcast %union.MemValue* %1844 to i64*, !dbg !728
  %1846 = load i64, i64* %1845, align 4, !dbg !729
  %1847 = alloca i64, align 8, !dbg !730
  %1848 = icmp slt i64 %1846, 0, !dbg !731
  br i1 %1848, label %1849, label %1851, !dbg !732

1849:                                             ; preds = %1843
  %1850 = xor i64 %1846, -1, !dbg !733
  store i64 %1850, i64* %1847, align 4, !dbg !734
  br label %1852, !dbg !735

1851:                                             ; preds = %1843
  store i64 %1846, i64* %1847, align 4, !dbg !736
  br label %1852, !dbg !737

1852:                                             ; preds = %1851, %1849
  %1853 = load i32, i32* %1816, align 4, !dbg !738
  %1854 = add i32 %1853, 1, !dbg !738
  store i32 %1854, i32* %1816, align 4, !dbg !738
  %1855 = load i64, i64* %1847, align 4, !dbg !739
  %1856 = icmp slt i64 %1855, 127, !dbg !740
  %1857 = icmp slt i64 %1855, 32767, !dbg !741
  %1858 = icmp slt i64 %1855, 8388607, !dbg !742
  %1859 = icmp slt i64 %1855, 2147483647, !dbg !743
  br i1 %1856, label %1860, label %1869, !dbg !744

1860:                                             ; preds = %1852
  %1861 = and i64 %1846, 1, !dbg !745
  %1862 = icmp eq i64 %1861, %1846, !dbg !746
  br i1 %1862, label %1863, label %1866, !dbg !747

1863:                                             ; preds = %1860
  %1864 = trunc i64 %1855 to i32, !dbg !748
  %1865 = add i32 %1864, 8, !dbg !749
  store i32 %1865, i32* %1833, align 4, !dbg !750
  br label %1932, !dbg !751

1866:                                             ; preds = %1860
  %1867 = load i64, i64* %1815, align 4, !dbg !752
  %1868 = add i64 %1867, 1, !dbg !752
  store i64 %1868, i64* %1815, align 4, !dbg !752
  store i32 1, i32* %1833, align 4, !dbg !753
  br label %1932, !dbg !754

1869:                                             ; preds = %1852
  %1870 = load i64, i64* %1815, align 4, !dbg !755
  br i1 %1857, label %1871, label %1873, !dbg !756

1871:                                             ; preds = %1869
  %1872 = add i64 %1870, 2, !dbg !757
  store i64 %1872, i64* %1815, align 4, !dbg !757
  store i32 2, i32* %1833, align 4, !dbg !758
  br label %1932, !dbg !759

1873:                                             ; preds = %1869
  br i1 %1858, label %1874, label %1876, !dbg !760

1874:                                             ; preds = %1873
  %1875 = add i64 %1870, 3, !dbg !761
  store i64 %1875, i64* %1815, align 4, !dbg !761
  store i32 3, i32* %1833, align 4, !dbg !762
  br label %1932, !dbg !763

1876:                                             ; preds = %1873
  br i1 %1859, label %1877, label %1879, !dbg !764

1877:                                             ; preds = %1876
  %1878 = add i64 %1870, 4, !dbg !765
  store i64 %1878, i64* %1815, align 4, !dbg !765
  store i32 4, i32* %1833, align 4, !dbg !766
  br label %1932, !dbg !767

1879:                                             ; preds = %1876
  %1880 = add i64 %1870, 8, !dbg !768
  store i64 %1880, i64* %1815, align 4, !dbg !768
  %1881 = and i16 %1826, 32, !dbg !769
  %1882 = icmp ne i16 %1881, 0, !dbg !769
  br i1 %1882, label %1883, label %1886, !dbg !770

1883:                                             ; preds = %1879
  %1884 = and i16 %1826, -33, !dbg !771
  %1885 = or i16 %1884, 8, !dbg !772
  store i16 %1885, i16* %1825, align 2, !dbg !773
  store i32 7, i32* %1833, align 4, !dbg !774
  br label %1932, !dbg !775

1886:                                             ; preds = %1879
  store i32 6, i32* %1833, align 4, !dbg !776
  br label %1932, !dbg !777

1887:                                             ; preds = %1842
  br i1 %1832, label %1888, label %1893, !dbg !778

1888:                                             ; preds = %1887
  %1889 = load i32, i32* %1816, align 4, !dbg !779
  %1890 = add i32 %1889, 1, !dbg !779
  store i32 %1890, i32* %1816, align 4, !dbg !779
  %1891 = load i64, i64* %1815, align 4, !dbg !780
  %1892 = add i64 %1891, 8, !dbg !780
  store i64 %1892, i64* %1815, align 4, !dbg !780
  store i32 7, i32* %1833, align 4, !dbg !781
  br label %1932, !dbg !782

1893:                                             ; preds = %1887
  %1894 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 0, i32 4, !dbg !783
  %1895 = load i32, i32* %1894, align 4, !dbg !784
  %1896 = alloca i32, align 8, !dbg !785
  store i32 %1895, i32* %1896, align 4, !dbg !786
  %1897 = alloca i32, align 8, !dbg !787
  %1898 = add i32 %1895, %1895, !dbg !788
  %1899 = add i32 %1898, 12, !dbg !789
  %1900 = and i16 %1826, 2, !dbg !790
  %1901 = icmp ne i16 %1900, 0, !dbg !791
  %1902 = zext i1 %1901 to i32, !dbg !792
  %1903 = add i32 %1899, %1902, !dbg !793
  store i32 %1903, i32* %1897, align 4, !dbg !794
  %1904 = and i16 %1826, 16384, !dbg !795
  %1905 = icmp ne i16 %1904, 0, !dbg !796
  br i1 %1905, label %1906, label %1922, !dbg !797

1906:                                             ; preds = %1893
  %1907 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 0, i32 0, !dbg !798
  %1908 = bitcast %union.MemValue* %1907 to i32*, !dbg !799
  %1909 = load i32, i32* %1908, align 4, !dbg !800
  %1910 = add i32 %1909, %1909, !dbg !801
  %1911 = add i32 %1903, %1910, !dbg !802
  store i32 %1911, i32* %1897, align 4, !dbg !802
  %1912 = load i64, i64* %1815, align 4, !dbg !803
  %1913 = icmp ne i64 %1912, 0, !dbg !803
  br i1 %1913, label %1918, label %1914, !dbg !804

1914:                                             ; preds = %1906
  %1915 = zext i32 %1909 to i64, !dbg !805
  %1916 = load i64, i64* %1817, align 4, !dbg !806
  %1917 = add i64 %1916, %1915, !dbg !806
  store i64 %1917, i64* %1817, align 4, !dbg !806
  br label %1922, !dbg !807

1918:                                             ; preds = %1906
  %1919 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %1823), !dbg !808
  %1920 = load i32, i32* %1896, align 4, !dbg !809
  %1921 = add i32 %1920, %1909, !dbg !809
  store i32 %1921, i32* %1896, align 4, !dbg !809
  br label %1922, !dbg !810

1922:                                             ; preds = %1914, %1918, %1893
  %1923 = load i32, i32* %1896, align 4, !dbg !811
  %1924 = zext i32 %1923 to i64, !dbg !812
  %1925 = load i64, i64* %1815, align 4, !dbg !813
  %1926 = add i64 %1925, %1924, !dbg !813
  store i64 %1926, i64* %1815, align 4, !dbg !813
  %1927 = load i32, i32* %1897, align 4, !dbg !814
  %1928 = zext i32 %1927 to i64, !dbg !815
  %1929 = call i32 @sqlite3VarintLen(i64 %1928), !dbg !816
  %1930 = load i32, i32* %1816, align 4, !dbg !817
  %1931 = add i32 %1930, %1929, !dbg !817
  store i32 %1931, i32* %1816, align 4, !dbg !817
  store i32 %1927, i32* %1833, align 4, !dbg !818
  br label %1932, !dbg !819

1932:                                             ; preds = %1871, %1874, %1877, %1883, %1886, %1866, %1863, %1922, %1888, %1839
  %1933 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1823, i32 -1, !dbg !820
  %1934 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 0, i32 1, !dbg !711
  %1935 = load i16, i16* %1934, align 2, !dbg !712
  %1936 = and i16 %1935, 1, !dbg !713
  %1937 = icmp ne i16 %1936, 0, !dbg !713
  %1938 = and i16 %1935, 36, !dbg !714
  %1939 = icmp ne i16 %1938, 0, !dbg !714
  %1940 = and i16 %1935, 8, !dbg !715
  %1941 = icmp ne i16 %1940, 0, !dbg !715
  %1942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 0, i32 8, !dbg !716
  br i1 %1937, label %1943, label %1951, !dbg !717

1943:                                             ; preds = %1932
  %1944 = and i16 %1935, 16384, !dbg !718
  %1945 = icmp ne i16 %1944, 0, !dbg !718
  br i1 %1945, label %1946, label %1947, !dbg !719

1946:                                             ; preds = %1943
  store i32 10, i32* %1942, align 4, !dbg !720
  br label %1948, !dbg !721

1947:                                             ; preds = %1943
  store i32 0, i32* %1942, align 4, !dbg !722
  br label %1948, !dbg !723

1948:                                             ; preds = %1947, %1946
  %1949 = load i32, i32* %1816, align 4, !dbg !724
  %1950 = add i32 %1949, 1, !dbg !724
  store i32 %1950, i32* %1816, align 4, !dbg !724
  br label %2041, !dbg !725

1951:                                             ; preds = %1932
  br i1 %1939, label %1952, label %1996, !dbg !726

1952:                                             ; preds = %1951
  %1953 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 0, i32 0, !dbg !727
  %1954 = bitcast %union.MemValue* %1953 to i64*, !dbg !728
  %1955 = load i64, i64* %1954, align 4, !dbg !729
  %1956 = alloca i64, align 8, !dbg !730
  %1957 = icmp slt i64 %1955, 0, !dbg !731
  br i1 %1957, label %1958, label %1960, !dbg !732

1958:                                             ; preds = %1952
  %1959 = xor i64 %1955, -1, !dbg !733
  store i64 %1959, i64* %1956, align 4, !dbg !734
  br label %1961, !dbg !735

1960:                                             ; preds = %1952
  store i64 %1955, i64* %1956, align 4, !dbg !736
  br label %1961, !dbg !737

1961:                                             ; preds = %1960, %1958
  %1962 = load i32, i32* %1816, align 4, !dbg !738
  %1963 = add i32 %1962, 1, !dbg !738
  store i32 %1963, i32* %1816, align 4, !dbg !738
  %1964 = load i64, i64* %1956, align 4, !dbg !739
  %1965 = icmp slt i64 %1964, 127, !dbg !740
  %1966 = icmp slt i64 %1964, 32767, !dbg !741
  %1967 = icmp slt i64 %1964, 8388607, !dbg !742
  %1968 = icmp slt i64 %1964, 2147483647, !dbg !743
  br i1 %1965, label %1969, label %1978, !dbg !744

1969:                                             ; preds = %1961
  %1970 = and i64 %1955, 1, !dbg !745
  %1971 = icmp eq i64 %1970, %1955, !dbg !746
  br i1 %1971, label %1972, label %1975, !dbg !747

1972:                                             ; preds = %1969
  %1973 = trunc i64 %1964 to i32, !dbg !748
  %1974 = add i32 %1973, 8, !dbg !749
  store i32 %1974, i32* %1942, align 4, !dbg !750
  br label %2041, !dbg !751

1975:                                             ; preds = %1969
  %1976 = load i64, i64* %1815, align 4, !dbg !752
  %1977 = add i64 %1976, 1, !dbg !752
  store i64 %1977, i64* %1815, align 4, !dbg !752
  store i32 1, i32* %1942, align 4, !dbg !753
  br label %2041, !dbg !754

1978:                                             ; preds = %1961
  %1979 = load i64, i64* %1815, align 4, !dbg !755
  br i1 %1966, label %1980, label %1982, !dbg !756

1980:                                             ; preds = %1978
  %1981 = add i64 %1979, 2, !dbg !757
  store i64 %1981, i64* %1815, align 4, !dbg !757
  store i32 2, i32* %1942, align 4, !dbg !758
  br label %2041, !dbg !759

1982:                                             ; preds = %1978
  br i1 %1967, label %1983, label %1985, !dbg !760

1983:                                             ; preds = %1982
  %1984 = add i64 %1979, 3, !dbg !761
  store i64 %1984, i64* %1815, align 4, !dbg !761
  store i32 3, i32* %1942, align 4, !dbg !762
  br label %2041, !dbg !763

1985:                                             ; preds = %1982
  br i1 %1968, label %1986, label %1988, !dbg !764

1986:                                             ; preds = %1985
  %1987 = add i64 %1979, 4, !dbg !765
  store i64 %1987, i64* %1815, align 4, !dbg !765
  store i32 4, i32* %1942, align 4, !dbg !766
  br label %2041, !dbg !767

1988:                                             ; preds = %1985
  %1989 = add i64 %1979, 8, !dbg !768
  store i64 %1989, i64* %1815, align 4, !dbg !768
  %1990 = and i16 %1935, 32, !dbg !769
  %1991 = icmp ne i16 %1990, 0, !dbg !769
  br i1 %1991, label %1992, label %1995, !dbg !770

1992:                                             ; preds = %1988
  %1993 = and i16 %1935, -33, !dbg !771
  %1994 = or i16 %1993, 8, !dbg !772
  store i16 %1994, i16* %1934, align 2, !dbg !773
  store i32 7, i32* %1942, align 4, !dbg !774
  br label %2041, !dbg !775

1995:                                             ; preds = %1988
  store i32 6, i32* %1942, align 4, !dbg !776
  br label %2041, !dbg !777

1996:                                             ; preds = %1951
  br i1 %1941, label %1997, label %2002, !dbg !778

1997:                                             ; preds = %1996
  %1998 = load i32, i32* %1816, align 4, !dbg !779
  %1999 = add i32 %1998, 1, !dbg !779
  store i32 %1999, i32* %1816, align 4, !dbg !779
  %2000 = load i64, i64* %1815, align 4, !dbg !780
  %2001 = add i64 %2000, 8, !dbg !780
  store i64 %2001, i64* %1815, align 4, !dbg !780
  store i32 7, i32* %1942, align 4, !dbg !781
  br label %2041, !dbg !782

2002:                                             ; preds = %1996
  %2003 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 0, i32 4, !dbg !783
  %2004 = load i32, i32* %2003, align 4, !dbg !784
  %2005 = alloca i32, align 8, !dbg !785
  store i32 %2004, i32* %2005, align 4, !dbg !786
  %2006 = alloca i32, align 8, !dbg !787
  %2007 = add i32 %2004, %2004, !dbg !788
  %2008 = add i32 %2007, 12, !dbg !789
  %2009 = and i16 %1935, 2, !dbg !790
  %2010 = icmp ne i16 %2009, 0, !dbg !791
  %2011 = zext i1 %2010 to i32, !dbg !792
  %2012 = add i32 %2008, %2011, !dbg !793
  store i32 %2012, i32* %2006, align 4, !dbg !794
  %2013 = and i16 %1935, 16384, !dbg !795
  %2014 = icmp ne i16 %2013, 0, !dbg !796
  br i1 %2014, label %2015, label %2031, !dbg !797

2015:                                             ; preds = %2002
  %2016 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 0, i32 0, !dbg !798
  %2017 = bitcast %union.MemValue* %2016 to i32*, !dbg !799
  %2018 = load i32, i32* %2017, align 4, !dbg !800
  %2019 = add i32 %2018, %2018, !dbg !801
  %2020 = add i32 %2012, %2019, !dbg !802
  store i32 %2020, i32* %2006, align 4, !dbg !802
  %2021 = load i64, i64* %1815, align 4, !dbg !803
  %2022 = icmp ne i64 %2021, 0, !dbg !803
  br i1 %2022, label %2027, label %2023, !dbg !804

2023:                                             ; preds = %2015
  %2024 = zext i32 %2018 to i64, !dbg !805
  %2025 = load i64, i64* %1817, align 4, !dbg !806
  %2026 = add i64 %2025, %2024, !dbg !806
  store i64 %2026, i64* %1817, align 4, !dbg !806
  br label %2031, !dbg !807

2027:                                             ; preds = %2015
  %2028 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %1933), !dbg !808
  %2029 = load i32, i32* %2005, align 4, !dbg !809
  %2030 = add i32 %2029, %2018, !dbg !809
  store i32 %2030, i32* %2005, align 4, !dbg !809
  br label %2031, !dbg !810

2031:                                             ; preds = %2023, %2027, %2002
  %2032 = load i32, i32* %2005, align 4, !dbg !811
  %2033 = zext i32 %2032 to i64, !dbg !812
  %2034 = load i64, i64* %1815, align 4, !dbg !813
  %2035 = add i64 %2034, %2033, !dbg !813
  store i64 %2035, i64* %1815, align 4, !dbg !813
  %2036 = load i32, i32* %2006, align 4, !dbg !814
  %2037 = zext i32 %2036 to i64, !dbg !815
  %2038 = call i32 @sqlite3VarintLen(i64 %2037), !dbg !816
  %2039 = load i32, i32* %1816, align 4, !dbg !817
  %2040 = add i32 %2039, %2038, !dbg !817
  store i32 %2040, i32* %1816, align 4, !dbg !817
  store i32 %2036, i32* %1942, align 4, !dbg !818
  br label %2041, !dbg !819

2041:                                             ; preds = %1980, %1983, %1986, %1992, %1995, %1975, %1972, %2031, %1997, %1948
  %2042 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1933, i32 -1, !dbg !820
  %2043 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2042, i32 0, i32 1, !dbg !711
  %2044 = load i16, i16* %2043, align 2, !dbg !712
  %2045 = and i16 %2044, 1, !dbg !713
  %2046 = icmp ne i16 %2045, 0, !dbg !713
  %2047 = and i16 %2044, 36, !dbg !714
  %2048 = icmp ne i16 %2047, 0, !dbg !714
  %2049 = and i16 %2044, 8, !dbg !715
  %2050 = icmp ne i16 %2049, 0, !dbg !715
  %2051 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2042, i32 0, i32 8, !dbg !716
  br i1 %2046, label %2052, label %2060, !dbg !717

2052:                                             ; preds = %2041
  %2053 = and i16 %2044, 16384, !dbg !718
  %2054 = icmp ne i16 %2053, 0, !dbg !718
  br i1 %2054, label %2055, label %2056, !dbg !719

2055:                                             ; preds = %2052
  store i32 10, i32* %2051, align 4, !dbg !720
  br label %2057, !dbg !721

2056:                                             ; preds = %2052
  store i32 0, i32* %2051, align 4, !dbg !722
  br label %2057, !dbg !723

2057:                                             ; preds = %2056, %2055
  %2058 = load i32, i32* %1816, align 4, !dbg !724
  %2059 = add i32 %2058, 1, !dbg !724
  store i32 %2059, i32* %1816, align 4, !dbg !724
  br label %2150, !dbg !725

2060:                                             ; preds = %2041
  br i1 %2048, label %2061, label %2105, !dbg !726

2061:                                             ; preds = %2060
  %2062 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2042, i32 0, i32 0, !dbg !727
  %2063 = bitcast %union.MemValue* %2062 to i64*, !dbg !728
  %2064 = load i64, i64* %2063, align 4, !dbg !729
  %2065 = alloca i64, align 8, !dbg !730
  %2066 = icmp slt i64 %2064, 0, !dbg !731
  br i1 %2066, label %2067, label %2069, !dbg !732

2067:                                             ; preds = %2061
  %2068 = xor i64 %2064, -1, !dbg !733
  store i64 %2068, i64* %2065, align 4, !dbg !734
  br label %2070, !dbg !735

2069:                                             ; preds = %2061
  store i64 %2064, i64* %2065, align 4, !dbg !736
  br label %2070, !dbg !737

2070:                                             ; preds = %2069, %2067
  %2071 = load i32, i32* %1816, align 4, !dbg !738
  %2072 = add i32 %2071, 1, !dbg !738
  store i32 %2072, i32* %1816, align 4, !dbg !738
  %2073 = load i64, i64* %2065, align 4, !dbg !739
  %2074 = icmp slt i64 %2073, 127, !dbg !740
  %2075 = icmp slt i64 %2073, 32767, !dbg !741
  %2076 = icmp slt i64 %2073, 8388607, !dbg !742
  %2077 = icmp slt i64 %2073, 2147483647, !dbg !743
  br i1 %2074, label %2078, label %2087, !dbg !744

2078:                                             ; preds = %2070
  %2079 = and i64 %2064, 1, !dbg !745
  %2080 = icmp eq i64 %2079, %2064, !dbg !746
  br i1 %2080, label %2081, label %2084, !dbg !747

2081:                                             ; preds = %2078
  %2082 = trunc i64 %2073 to i32, !dbg !748
  %2083 = add i32 %2082, 8, !dbg !749
  store i32 %2083, i32* %2051, align 4, !dbg !750
  br label %2150, !dbg !751

2084:                                             ; preds = %2078
  %2085 = load i64, i64* %1815, align 4, !dbg !752
  %2086 = add i64 %2085, 1, !dbg !752
  store i64 %2086, i64* %1815, align 4, !dbg !752
  store i32 1, i32* %2051, align 4, !dbg !753
  br label %2150, !dbg !754

2087:                                             ; preds = %2070
  %2088 = load i64, i64* %1815, align 4, !dbg !755
  br i1 %2075, label %2089, label %2091, !dbg !756

2089:                                             ; preds = %2087
  %2090 = add i64 %2088, 2, !dbg !757
  store i64 %2090, i64* %1815, align 4, !dbg !757
  store i32 2, i32* %2051, align 4, !dbg !758
  br label %2150, !dbg !759

2091:                                             ; preds = %2087
  br i1 %2076, label %2092, label %2094, !dbg !760

2092:                                             ; preds = %2091
  %2093 = add i64 %2088, 3, !dbg !761
  store i64 %2093, i64* %1815, align 4, !dbg !761
  store i32 3, i32* %2051, align 4, !dbg !762
  br label %2150, !dbg !763

2094:                                             ; preds = %2091
  br i1 %2077, label %2095, label %2097, !dbg !764

2095:                                             ; preds = %2094
  %2096 = add i64 %2088, 4, !dbg !765
  store i64 %2096, i64* %1815, align 4, !dbg !765
  store i32 4, i32* %2051, align 4, !dbg !766
  br label %2150, !dbg !767

2097:                                             ; preds = %2094
  %2098 = add i64 %2088, 8, !dbg !768
  store i64 %2098, i64* %1815, align 4, !dbg !768
  %2099 = and i16 %2044, 32, !dbg !769
  %2100 = icmp ne i16 %2099, 0, !dbg !769
  br i1 %2100, label %2101, label %2104, !dbg !770

2101:                                             ; preds = %2097
  %2102 = and i16 %2044, -33, !dbg !771
  %2103 = or i16 %2102, 8, !dbg !772
  store i16 %2103, i16* %2043, align 2, !dbg !773
  store i32 7, i32* %2051, align 4, !dbg !774
  br label %2150, !dbg !775

2104:                                             ; preds = %2097
  store i32 6, i32* %2051, align 4, !dbg !776
  br label %2150, !dbg !777

2105:                                             ; preds = %2060
  br i1 %2050, label %2106, label %2111, !dbg !778

2106:                                             ; preds = %2105
  %2107 = load i32, i32* %1816, align 4, !dbg !779
  %2108 = add i32 %2107, 1, !dbg !779
  store i32 %2108, i32* %1816, align 4, !dbg !779
  %2109 = load i64, i64* %1815, align 4, !dbg !780
  %2110 = add i64 %2109, 8, !dbg !780
  store i64 %2110, i64* %1815, align 4, !dbg !780
  store i32 7, i32* %2051, align 4, !dbg !781
  br label %2150, !dbg !782

2111:                                             ; preds = %2105
  %2112 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2042, i32 0, i32 4, !dbg !783
  %2113 = load i32, i32* %2112, align 4, !dbg !784
  %2114 = alloca i32, align 8, !dbg !785
  store i32 %2113, i32* %2114, align 4, !dbg !786
  %2115 = alloca i32, align 8, !dbg !787
  %2116 = add i32 %2113, %2113, !dbg !788
  %2117 = add i32 %2116, 12, !dbg !789
  %2118 = and i16 %2044, 2, !dbg !790
  %2119 = icmp ne i16 %2118, 0, !dbg !791
  %2120 = zext i1 %2119 to i32, !dbg !792
  %2121 = add i32 %2117, %2120, !dbg !793
  store i32 %2121, i32* %2115, align 4, !dbg !794
  %2122 = and i16 %2044, 16384, !dbg !795
  %2123 = icmp ne i16 %2122, 0, !dbg !796
  br i1 %2123, label %2124, label %2140, !dbg !797

2124:                                             ; preds = %2111
  %2125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2042, i32 0, i32 0, !dbg !798
  %2126 = bitcast %union.MemValue* %2125 to i32*, !dbg !799
  %2127 = load i32, i32* %2126, align 4, !dbg !800
  %2128 = add i32 %2127, %2127, !dbg !801
  %2129 = add i32 %2121, %2128, !dbg !802
  store i32 %2129, i32* %2115, align 4, !dbg !802
  %2130 = load i64, i64* %1815, align 4, !dbg !803
  %2131 = icmp ne i64 %2130, 0, !dbg !803
  br i1 %2131, label %2136, label %2132, !dbg !804

2132:                                             ; preds = %2124
  %2133 = zext i32 %2127 to i64, !dbg !805
  %2134 = load i64, i64* %1817, align 4, !dbg !806
  %2135 = add i64 %2134, %2133, !dbg !806
  store i64 %2135, i64* %1817, align 4, !dbg !806
  br label %2140, !dbg !807

2136:                                             ; preds = %2124
  %2137 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2042), !dbg !808
  %2138 = load i32, i32* %2114, align 4, !dbg !809
  %2139 = add i32 %2138, %2127, !dbg !809
  store i32 %2139, i32* %2114, align 4, !dbg !809
  br label %2140, !dbg !810

2140:                                             ; preds = %2132, %2136, %2111
  %2141 = load i32, i32* %2114, align 4, !dbg !811
  %2142 = zext i32 %2141 to i64, !dbg !812
  %2143 = load i64, i64* %1815, align 4, !dbg !813
  %2144 = add i64 %2143, %2142, !dbg !813
  store i64 %2144, i64* %1815, align 4, !dbg !813
  %2145 = load i32, i32* %2115, align 4, !dbg !814
  %2146 = zext i32 %2145 to i64, !dbg !815
  %2147 = call i32 @sqlite3VarintLen(i64 %2146), !dbg !816
  %2148 = load i32, i32* %1816, align 4, !dbg !817
  %2149 = add i32 %2148, %2147, !dbg !817
  store i32 %2149, i32* %1816, align 4, !dbg !817
  store i32 %2145, i32* %2051, align 4, !dbg !818
  br label %2150, !dbg !819

2150:                                             ; preds = %2089, %2092, %2095, %2101, %2104, %2084, %2081, %2140, %2106, %2057
  %2151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 5, !dbg !821
  %2152 = load i32, i32* %1816, align 4, !dbg !822
  %2153 = zext i32 %2152 to i64, !dbg !823
  %2154 = icmp slt i32 %2152, 126, !dbg !824
  br i1 %2154, label %2155, label %2157, !dbg !825

2155:                                             ; preds = %2150
  %2156 = add i32 %2152, 1, !dbg !826
  store i32 %2156, i32* %1816, align 4, !dbg !826
  br label %2166, !dbg !827

2157:                                             ; preds = %2150
  %2158 = call i32 @sqlite3VarintLen(i64 %2153), !dbg !828
  %2159 = load i32, i32* %1816, align 4, !dbg !829
  %2160 = add i32 %2159, %2158, !dbg !829
  store i32 %2160, i32* %1816, align 4, !dbg !829
  %2161 = call i32 @sqlite3VarintLen(i64 %2153), !dbg !830
  %2162 = icmp slt i32 %2158, %2161, !dbg !831
  br i1 %2162, label %2163, label %2166, !dbg !832

2163:                                             ; preds = %2157
  %2164 = load i32, i32* %1816, align 4, !dbg !833
  %2165 = add i32 %2164, 1, !dbg !833
  store i32 %2165, i32* %1816, align 4, !dbg !833
  br label %2166, !dbg !834

2166:                                             ; preds = %2163, %2157, %2155
  %2167 = load i32, i32* %1816, align 4, !dbg !835
  %2168 = zext i32 %2167 to i64, !dbg !835
  %2169 = load i64, i64* %1815, align 4, !dbg !836
  %2170 = add i64 %2168, %2169, !dbg !836
  %2171 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 7, !dbg !837
  %2172 = load i32, i32* %2171, align 4, !dbg !838
  %2173 = zext i32 %2172 to i64, !dbg !839
  %2174 = load i64, i64* %1817, align 4, !dbg !840
  %2175 = add i64 %2170, %2174, !dbg !841
  %2176 = icmp sle i64 %2175, %2173, !dbg !842
  br i1 %2176, label %2177, label %2180, !dbg !843

2177:                                             ; preds = %2166
  %2178 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 6, !dbg !844
  %2179 = load i8*, i8** %2178, align 8, !dbg !845
  store i8* %2179, i8** %2151, align 8, !dbg !846
  br label %2183, !dbg !847

2180:                                             ; preds = %2166
  %2181 = trunc i64 %2170 to i32, !dbg !848
  %2182 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %1824, i32 %2181), !dbg !849
  br label %2183, !dbg !850

2183:                                             ; preds = %2180, %2177
  %2184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 4, !dbg !851
  %2185 = trunc i64 %2170 to i32, !dbg !852
  store i32 %2185, i32* %2184, align 4, !dbg !853
  %2186 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 1, !dbg !854
  store i16 16, i16* %2186, align 2, !dbg !855
  %2187 = load i64, i64* %1817, align 4, !dbg !856
  %2188 = icmp ne i64 %2187, 0, !dbg !857
  br i1 %2188, label %2189, label %2195, !dbg !858

2189:                                             ; preds = %2183
  %2190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1824, i32 0, i32 0, i32 0, !dbg !859
  %2191 = bitcast double* %2190 to i32*, !dbg !860
  %2192 = trunc i64 %2187 to i32, !dbg !861
  store i32 %2192, i32* %2191, align 4, !dbg !862
  %2193 = load i16, i16* %2186, align 2, !dbg !863
  %2194 = or i16 %2193, 16384, !dbg !864
  store i16 %2194, i16* %2186, align 2, !dbg !865
  br label %2195, !dbg !866

2195:                                             ; preds = %2189, %2183
  %2196 = alloca i8*, align 8, !dbg !867
  %2197 = load i8*, i8** %2151, align 8, !dbg !868
  store i8* %2197, i8** %2196, align 8, !dbg !869
  %2198 = load i32, i32* %1816, align 4, !dbg !870
  %2199 = zext i32 %2198 to i64, !dbg !871
  %2200 = getelementptr i8, i8* %2197, i32 %2198, !dbg !872
  store i8* %2200, i8** %1818, align 8, !dbg !873
  %2201 = call i32 @sqlite3PutVarint(i8* %2197, i64 %2199), !dbg !874
  %2202 = getelementptr i8, i8* %2197, i32 %2201, !dbg !875
  store i8* %2202, i8** %2196, align 8, !dbg !876
  %2203 = load i8*, i8** %1818, align 8, !dbg !877
  %2204 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1822, i32 0, i32 8, !dbg !878
  %2205 = load i32, i32* %2204, align 4, !dbg !879
  %2206 = zext i32 %2205 to i64, !dbg !880
  %2207 = call i32 @sqlite3PutVarint(i8* %2202, i64 %2206), !dbg !881
  %2208 = getelementptr i8, i8* %2202, i32 %2207, !dbg !882
  store i8* %2208, i8** %2196, align 8, !dbg !883
  %2209 = call i32 @sqlite3VdbeSerialPut(i8* %2203, %struct.sqlite3_value* %1822, i32 %2205), !dbg !884
  %2210 = getelementptr i8, i8* %2203, i32 %2209, !dbg !885
  %2211 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1822, i32 1, !dbg !886
  %2212 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2211, i32 0, i32 8, !dbg !878
  %2213 = load i32, i32* %2212, align 4, !dbg !879
  %2214 = zext i32 %2213 to i64, !dbg !880
  %2215 = call i32 @sqlite3PutVarint(i8* %2208, i64 %2214), !dbg !881
  %2216 = getelementptr i8, i8* %2208, i32 %2215, !dbg !882
  store i8* %2216, i8** %2196, align 8, !dbg !883
  %2217 = call i32 @sqlite3VdbeSerialPut(i8* %2210, %struct.sqlite3_value* %2211, i32 %2213), !dbg !884
  %2218 = getelementptr i8, i8* %2210, i32 %2217, !dbg !885
  %2219 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2211, i32 1, !dbg !886
  %2220 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2219, i32 0, i32 8, !dbg !878
  %2221 = load i32, i32* %2220, align 4, !dbg !879
  %2222 = zext i32 %2221 to i64, !dbg !880
  %2223 = call i32 @sqlite3PutVarint(i8* %2216, i64 %2222), !dbg !881
  %2224 = getelementptr i8, i8* %2216, i32 %2223, !dbg !882
  store i8* %2224, i8** %2196, align 8, !dbg !883
  %2225 = call i32 @sqlite3VdbeSerialPut(i8* %2218, %struct.sqlite3_value* %2219, i32 %2221), !dbg !884
  call void @llvm.stackrestore(i8* %1814), !dbg !887
  br label %2226, !dbg !75

2226:                                             ; preds = %17, %2195
  %2227 = call i8* @llvm.stacksave(), !dbg !888
  %2228 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !891
  %2229 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2228, align 8, !dbg !892
  %2230 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !893
  %2231 = call i8* @llvm.stacksave(), !dbg !894
  %2232 = alloca i32, align 8, !dbg !895
  store i32 0, i32* %2232, align 4, !dbg !894
  %2233 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2230, i32 0, i32 1, !dbg !894
  %2234 = load i16, i16* %2233, align 2, !dbg !894
  %2235 = and i16 %2234, 16384, !dbg !894
  %2236 = icmp ne i16 %2235, 0, !dbg !894
  br i1 %2236, label %2237, label %2239, !dbg !894

2237:                                             ; preds = %2226
  %2238 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2230), !dbg !894
  store i32 %2238, i32* %2232, align 4, !dbg !894
  br label %2239, !dbg !895

2239:                                             ; preds = %2237, %2226
  call void @llvm.stackrestore(i8* %2231), !dbg !894
  %2240 = load i32, i32* %2232, align 4, !dbg !894
  %2241 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %2229, %struct.sqlite3_value* %2230), !dbg !896
  call void @llvm.stackrestore(i8* %2227), !dbg !897
  br label %2242, !dbg !75

2242:                                             ; preds = %17, %2239, %1025, %991, %609, %575
  %2243 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !898
  %2244 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2243, align 8, !dbg !901
  %2245 = ptrtoint %struct.VdbeCursor* %2244 to i64, !dbg !902
  %2246 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2244, i32 0, i32 12, i32 0, !dbg !903
  %2247 = load %struct.BtCursor*, %struct.BtCursor** %2246, align 8, !dbg !904
  %2248 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %2247, i32 0), !dbg !905
  %2249 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2244, i32 0, i32 2, !dbg !906
  %2250 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2244, i32 0, i32 9, !dbg !907
  store i32 0, i32* %2250, align 4, !dbg !908
  %2251 = icmp eq i32 %2248, 0, !dbg !909
  br i1 %2251, label %2252, label %2253, !dbg !910

2252:                                             ; preds = %2242
  store i8 0, i8* %2249, align 1, !dbg !911
  br label %221, !dbg !912

2253:                                             ; preds = %2242
  store i8 1, i8* %2249, align 1, !dbg !913
  br label %2254, !dbg !914

2254:                                             ; preds = %17, %2253, %215
  %2255 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 6, i32 3, i32 -1, i8 3), !dbg !915
  %2256 = ptrtoint %struct.VdbeCursor* %2255 to i64, !dbg !918
  %2257 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2255, i32 0, i32 2, !dbg !919
  store i8 1, i8* %2257, align 1, !dbg !920
  %2258 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2255, i32 0, i32 10, !dbg !921
  store i32 12, i32* %2258, align 4, !dbg !922
  %2259 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2255, i32 0, i32 4, !dbg !923
  store i8 1, i8* %2259, align 1, !dbg !924
  %2260 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !925
  %2261 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2255, i32 0, i32 12, i32 0, !dbg !926
  store %struct.BtCursor* %2260, %struct.BtCursor** %2261, align 8, !dbg !927
  br label %2262, !dbg !75

2262:                                             ; preds = %17, %2254
  %2263 = call i8* @llvm.stacksave(), !dbg !232
  %2264 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %2265 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %2264, i32 5, !dbg !236
  %2266 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2265, align 8, !dbg !237
  %2267 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %2267, align 4, !dbg !239
  %2268 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2266, i32 0, i32 0, !dbg !240
  %2269 = load i8, i8* %2268, align 1, !dbg !241
  %2270 = icmp eq i8 %2269, 1, !dbg !242
  %2271 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %2271, align 4, !dbg !244
  br i1 %2270, label %2272, label %2274, !dbg !245

2272:                                             ; preds = %2262
  %2273 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %2266, i32* %2267), !dbg !246
  store i32 %2273, i32* %2271, align 4, !dbg !247
  br label %2280, !dbg !248

2274:                                             ; preds = %2262
  %2275 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2266, i32 0, i32 12, i32 0, !dbg !249
  %2276 = load %struct.BtCursor*, %struct.BtCursor** %2275, align 8, !dbg !250
  %2277 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %2276, i32* %2267), !dbg !251
  store i32 %2277, i32* %2271, align 4, !dbg !252
  %2278 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2266, i32 0, i32 3, !dbg !253
  store i8 0, i8* %2278, align 1, !dbg !254
  %2279 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2266, i32 0, i32 9, !dbg !255
  store i32 0, i32* %2279, align 4, !dbg !256
  br label %2280, !dbg !257

2280:                                             ; preds = %2274, %2272
  %2281 = load i32, i32* %2271, align 4, !dbg !258
  %2282 = load i32, i32* %2267, align 4, !dbg !259
  %2283 = trunc i32 %2282 to i8, !dbg !260
  %2284 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2266, i32 0, i32 2, !dbg !261
  store i8 %2283, i8* %2284, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %2263), !dbg !263
  %2285 = icmp ne i32 %2282, 0, !dbg !264
  br i1 %2285, label %4216, label %2286, !dbg !265

2286:                                             ; preds = %17, %3665, %2280
  %2287 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !928
  %2288 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !931
  %2289 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %2288, i32 5, !dbg !932
  %2290 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2289, align 8, !dbg !933
  %2291 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %2290, %struct.sqlite3_value* %2287), !dbg !934
  %2292 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %2288, i32 6, !dbg !935
  %2293 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2292, align 8, !dbg !936
  %2294 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2293, i32 0, i32 9, !dbg !937
  store i32 0, i32* %2294, align 4, !dbg !938
  br label %2295, !dbg !75

2295:                                             ; preds = %17, %2286
  %2296 = call i8* @llvm.stacksave(), !dbg !266
  %2297 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %2298 = load i8, i8* %2297, align 1, !dbg !270
  %2299 = alloca i32, align 4, !dbg !271
  store i32 6, i32* %2299, align 4, !dbg !272
  %2300 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !273
  %2301 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %2302 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2300, align 8, !dbg !275
  store %struct.VdbeCursor* %2302, %struct.VdbeCursor** %2301, align 8, !dbg !276
  %2303 = alloca i8*, align 8, !dbg !277
  %2304 = alloca i32, align 4, !dbg !278
  %2305 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2301, i32* %2299), !dbg !279
  %2306 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2301, align 8, !dbg !280
  %2307 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !281
  %2308 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 16, !dbg !282
  %2309 = load i16, i16* %2308, align 2, !dbg !283
  %2310 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 19, !dbg !284
  %2311 = load i32*, i32** %2310, align 8, !dbg !285
  %2312 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 0, !dbg !286
  %2313 = load i8, i8* %2312, align 1, !dbg !287
  %2314 = icmp ne i8 %2313, 3, !dbg !288
  %2315 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 2, !dbg !289
  %2316 = load i8, i8* %2315, align 1, !dbg !290
  %2317 = icmp ne i8 %2316, 0, !dbg !291
  %2318 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 14, !dbg !292
  %2319 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 21, !dbg !293
  %2320 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 22, !dbg !294
  %2321 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 20, !dbg !295
  %2322 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 17, !dbg !296
  %2323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 9, !dbg !297
  %2324 = load i32, i32* %2323, align 4, !dbg !298
  %2325 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %2326 = load i32, i32* %2325, align 4, !dbg !300
  %2327 = icmp ne i32 %2324, %2326, !dbg !301
  br i1 %2327, label %2328, label %2370, !dbg !302

2328:                                             ; preds = %2295
  br i1 %2317, label %2350, label %2345, !dbg !303

2329:                                             ; preds = %2345, %2352
  %2330 = load i32, i32* %2325, align 4, !dbg !304
  store i32 %2330, i32* %2323, align 4, !dbg !305
  %2331 = load i8*, i8** %2321, align 8, !dbg !306
  %2332 = load i8, i8* %2331, align 1, !dbg !307
  %2333 = icmp sgt i8 %2332, -1, !dbg !310
  br i1 %2333, label %2334, label %2336, !dbg !311

2334:                                             ; preds = %2329
  %2335 = zext i8 %2332 to i32, !dbg !312
  store i32 %2335, i32* %2311, align 4, !dbg !313
  store i32 1, i32* %2318, align 4, !dbg !314
  br label %2339, !dbg !315

2336:                                             ; preds = %2329
  %2337 = call i8 @sqlite3GetVarint32(i8* %2331, i32* %2311), !dbg !316
  %2338 = zext i8 %2337 to i32, !dbg !317
  store i32 %2338, i32* %2318, align 4, !dbg !318
  br label %2339, !dbg !319

2339:                                             ; preds = %2336, %2334
  store i16 0, i16* %2322, align 2, !dbg !320
  %2340 = load i32, i32* %2320, align 4, !dbg !321
  %2341 = load i32, i32* %2311, align 4, !dbg !322
  %2342 = icmp ult i32 %2340, %2341, !dbg !323
  br i1 %2342, label %2344, label %2343, !dbg !324

2343:                                             ; preds = %2339
  store i8* %2331, i8** %2303, align 8, !dbg !325
  br label %2461, !dbg !326

2344:                                             ; preds = %2339
  store i8* null, i8** %2321, align 8, !dbg !327
  store i32 0, i32* %2320, align 4, !dbg !328
  br label %2370, !dbg !329

2345:                                             ; preds = %2328
  %2346 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 12, i32 0, !dbg !330
  %2347 = load %struct.BtCursor*, %struct.BtCursor** %2346, align 8, !dbg !331
  %2348 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2347), !dbg !332
  store i32 %2348, i32* %2319, align 4, !dbg !333
  %2349 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2347, i32* %2320), !dbg !334
  store i8* %2349, i8** %2321, align 8, !dbg !335
  br label %2329, !dbg !336

2350:                                             ; preds = %2328
  %2351 = icmp eq i8 %2313, 3, !dbg !337
  br i1 %2351, label %2352, label %2363, !dbg !338

2352:                                             ; preds = %2350
  %2353 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 10, !dbg !339
  %2354 = load i32, i32* %2353, align 4, !dbg !340
  %2355 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2354, !dbg !341
  %2356 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2355, i32 0, i32 1, !dbg !342
  %2357 = load i16, i16* %2356, align 2, !dbg !343
  %2358 = and i16 %2357, 16, !dbg !344
  %2359 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2355, i32 0, i32 4, !dbg !345
  %2360 = load i32, i32* %2359, align 4, !dbg !346
  store i32 %2360, i32* %2319, align 4, !dbg !347
  store i32 %2360, i32* %2320, align 4, !dbg !348
  %2361 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2355, i32 0, i32 5, !dbg !349
  %2362 = load i8*, i8** %2361, align 8, !dbg !350
  store i8* %2362, i8** %2321, align 8, !dbg !351
  br label %2329, !dbg !352

2363:                                             ; preds = %2350
  %2364 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 1, !dbg !353
  %2365 = load i16, i16* %2364, align 2, !dbg !353
  %2366 = and i16 %2365, 9216, !dbg !353
  %2367 = icmp ne i16 %2366, 0, !dbg !353
  br i1 %2367, label %2368, label %2369, !dbg !353

2368:                                             ; preds = %2363
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2307), !dbg !353
  br label %2549, !dbg !353

2369:                                             ; preds = %2363
  store i16 1, i16* %2364, align 2, !dbg !353
  br label %2549, !dbg !353

2370:                                             ; preds = %2344, %2295
  %2371 = load i16, i16* %2322, align 2, !dbg !354
  %2372 = icmp ule i16 %2371, 0, !dbg !355
  br i1 %2372, label %2453, label %2450, !dbg !356

2373:                                             ; preds = %2450, %2539
  %2374 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 1, !dbg !357
  %2375 = load i16, i16* %2374, align 2, !dbg !358
  %2376 = and i16 9216, %2375, !dbg !359
  %2377 = icmp eq i16 0, %2376, !dbg !360
  br i1 %2377, label %2378, label %2382, !dbg !361

2378:                                             ; preds = %2373
  %2379 = icmp ne i16 %2376, 0, !dbg !362
  br i1 %2379, label %2380, label %2381, !dbg !362

2380:                                             ; preds = %2378
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2307), !dbg !362
  br label %2382, !dbg !362

2381:                                             ; preds = %2378
  store i16 1, i16* %2374, align 2, !dbg !362
  br label %2382, !dbg !362

2382:                                             ; preds = %2380, %2381, %2373
  %2383 = load i32, i32* %2304, align 4, !dbg !363
  %2384 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 23, i32 0, !dbg !364
  %2385 = load i32, i32* %2384, align 4, !dbg !365
  %2386 = load i32, i32* %2320, align 4, !dbg !366
  %2387 = getelementptr i32, i32* %2311, i32 1, !dbg !367
  %2388 = load i32, i32* %2387, align 4, !dbg !368
  %2389 = icmp sge i32 %2386, %2388, !dbg !369
  br i1 %2389, label %2390, label %2429, !dbg !370

2390:                                             ; preds = %2382
  %2391 = load i8*, i8** %2321, align 8, !dbg !371
  %2392 = ptrtoint i8* %2391 to i64, !dbg !372
  %2393 = load i32, i32* %2311, align 4, !dbg !374
  %2394 = zext i32 %2393 to i64, !dbg !375
  %2395 = add i64 %2392, %2394, !dbg !376
  %2396 = inttoptr i64 %2395 to i8*, !dbg !377
  store i8* %2396, i8** %2303, align 8, !dbg !378
  %2397 = load i32, i32* %2304, align 4, !dbg !379
  %2398 = icmp ult i32 %2397, 12, !dbg !380
  br i1 %2398, label %2399, label %2401, !dbg !381

2399:                                             ; preds = %2390
  %2400 = call i32 @sqlite3VdbeSerialGet(i8* %2396, i32 %2397, %struct.sqlite3_value* %2307), !dbg !382
  br label %2549, !dbg !383

2401:                                             ; preds = %2390
  %2402 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %2402, align 2, !dbg !385
  %2403 = getelementptr i16, i16* %2402, i32 1, !dbg !386
  store i16 514, i16* %2403, align 2, !dbg !387
  %2404 = load i32, i32* %2304, align 4, !dbg !388
  %2405 = sub i32 %2404, 12, !dbg !389
  %2406 = lshr i32 %2405, 1, !dbg !390
  %2407 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 4, !dbg !391
  store i32 %2406, i32* %2407, align 4, !dbg !392
  %2408 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 2, !dbg !393
  store i8 %2298, i8* %2408, align 1, !dbg !394
  %2409 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 5, !dbg !395
  %2410 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 7, !dbg !396
  %2411 = load i32, i32* %2410, align 4, !dbg !397
  %2412 = add i32 %2406, 2, !dbg !398
  %2413 = icmp slt i32 %2411, %2412, !dbg !399
  br i1 %2413, label %2414, label %2416, !dbg !400

2414:                                             ; preds = %2401
  store i16 1, i16* %2374, align 2, !dbg !401
  %2415 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2307, i32 %2412, i32 0), !dbg !402
  br label %2419, !dbg !403

2416:                                             ; preds = %2401
  %2417 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 6, !dbg !404
  %2418 = load i8*, i8** %2417, align 8, !dbg !405
  store i8* %2418, i8** %2409, align 8, !dbg !406
  br label %2419, !dbg !407

2419:                                             ; preds = %2416, %2414
  %2420 = zext i32 %2406 to i64, !dbg !408
  %2421 = load i8*, i8** %2409, align 8, !dbg !409
  %2422 = load i8*, i8** %2303, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2421, i8* %2422, i64 %2420, i1 false), !dbg !411
  %2423 = getelementptr i8, i8* %2421, i32 %2406, !dbg !412
  store i8 0, i8* %2423, align 1, !dbg !413
  %2424 = add i32 %2406, 1, !dbg !414
  %2425 = getelementptr i8, i8* %2421, i32 %2424, !dbg !415
  store i8 0, i8* %2425, align 1, !dbg !416
  %2426 = and i32 %2404, 1, !dbg !417
  %2427 = getelementptr i16, i16* %2402, i32 %2426, !dbg !418
  %2428 = load i16, i16* %2427, align 2, !dbg !419
  store i16 %2428, i16* %2374, align 2, !dbg !420
  br label %2549, !dbg !421

2429:                                             ; preds = %2382
  %2430 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 2, !dbg !422
  store i8 %2298, i8* %2430, align 1, !dbg !423
  %2431 = load i32, i32* %2304, align 4, !dbg !424
  %2432 = and i32 %2431, 1, !dbg !425
  %2433 = icmp eq i32 %2432, 0, !dbg !426
  %2434 = icmp sge i32 %2431, 12, !dbg !427
  %2435 = and i1 %2434, %2433, !dbg !428
  %2436 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2431), !dbg !429
  %2437 = icmp eq i32 %2436, 0, !dbg !430
  br i1 %2437, label %2448, label %2438, !dbg !431

2438:                                             ; preds = %2429
  %2439 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 12, i32 0, !dbg !432
  %2440 = load %struct.BtCursor*, %struct.BtCursor** %2439, align 8, !dbg !433
  %2441 = load i32, i32* %2311, align 4, !dbg !435
  %2442 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2440, i32 %2441, i32 %2436, %struct.sqlite3_value* %2307), !dbg !436
  %2443 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 5, !dbg !437
  %2444 = load i8*, i8** %2443, align 8, !dbg !438
  %2445 = call i32 @sqlite3VdbeSerialGet(i8* %2444, i32 %2431, %struct.sqlite3_value* %2307), !dbg !439
  %2446 = load i16, i16* %2374, align 2, !dbg !440
  %2447 = and i16 %2446, -4097, !dbg !441
  store i16 %2447, i16* %2374, align 2, !dbg !442
  br label %2549, !dbg !443

2448:                                             ; preds = %2429
  %2449 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2431, %struct.sqlite3_value* %2307), !dbg !444
  br label %2549, !dbg !445

2450:                                             ; preds = %2370
  %2451 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 23, i32 0, !dbg !446
  %2452 = load i32, i32* %2451, align 4, !dbg !447
  store i32 %2452, i32* %2304, align 4, !dbg !448
  br label %2373, !dbg !449

2453:                                             ; preds = %2370
  %2454 = load i32, i32* %2318, align 4, !dbg !450
  %2455 = load i32, i32* %2311, align 4, !dbg !451
  %2456 = icmp ult i32 %2454, %2455, !dbg !452
  br i1 %2456, label %2457, label %2538, !dbg !453

2457:                                             ; preds = %2453
  %2458 = load i8*, i8** %2321, align 8, !dbg !454
  %2459 = icmp eq i8* %2458, null, !dbg !455
  br i1 %2459, label %2461, label %2460, !dbg !456

2460:                                             ; preds = %2457
  store i8* %2458, i8** %2303, align 8, !dbg !457
  br label %2461, !dbg !458

2461:                                             ; preds = %2460, %2457, %2343
  %2462 = alloca i32, align 4, !dbg !459
  %2463 = load i16, i16* %2322, align 2, !dbg !460
  %2464 = zext i16 %2463 to i32, !dbg !461
  store i32 %2464, i32* %2462, align 4, !dbg !462
  %2465 = alloca i64, align 8, !dbg !463
  %2466 = getelementptr i32, i32* %2311, i32 %2464, !dbg !464
  %2467 = load i32, i32* %2466, align 4, !dbg !465
  %2468 = zext i32 %2467 to i64, !dbg !466
  store i64 %2468, i64* %2465, align 4, !dbg !467
  %2469 = load i8*, i8** %2303, align 8, !dbg !468
  %2470 = load i32, i32* %2318, align 4, !dbg !469
  %2471 = alloca i8*, align 8, !dbg !470
  %2472 = getelementptr i8, i8* %2469, i32 %2470, !dbg !471
  store i8* %2472, i8** %2471, align 8, !dbg !472
  %2473 = load i32, i32* %2311, align 4, !dbg !473
  %2474 = getelementptr i8, i8* %2469, i32 %2473, !dbg !474
  br label %2475, !dbg !475

2475:                                             ; preds = %2482, %2461
  %2476 = load i32, i32* %2462, align 4, !dbg !476
  %2477 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2306, i32 0, i32 23, i32 %2476, !dbg !477
  %2478 = load i8*, i8** %2471, align 8, !dbg !478
  %2479 = load i8, i8* %2478, align 1, !dbg !479
  %2480 = zext i8 %2479 to i32, !dbg !480
  store i32 %2480, i32* %2304, align 4, !dbg !481
  store i32 %2480, i32* %2477, align 4, !dbg !482
  %2481 = icmp sgt i8 %2479, -1, !dbg !483
  br i1 %2481, label %2505, label %2496, !dbg !484

2482:                                             ; preds = %2496, %2505
  %2483 = load i32, i32* %2462, align 4, !dbg !485
  %2484 = add i32 %2483, 1, !dbg !486
  store i32 %2484, i32* %2462, align 4, !dbg !487
  %2485 = load i64, i64* %2465, align 4, !dbg !488
  %2486 = and i64 4294967295, %2485, !dbg !489
  %2487 = trunc i64 %2486 to i32, !dbg !490
  %2488 = getelementptr i32, i32* %2311, i32 %2484, !dbg !491
  store i32 %2487, i32* %2488, align 4, !dbg !492
  %2489 = load i32, i32* %2462, align 4, !dbg !493
  %2490 = icmp sle i32 %2489, 0, !dbg !494
  %2491 = load i8*, i8** %2471, align 8, !dbg !495
  %2492 = ptrtoint i8* %2491 to i64, !dbg !496
  %2493 = ptrtoint i8* %2474 to i64, !dbg !497
  %2494 = icmp ult i64 %2492, %2493, !dbg !498
  %2495 = and i1 %2490, %2494, !dbg !499
  br i1 %2495, label %2475, label %2514, !dbg !500

2496:                                             ; preds = %2475
  %2497 = load i8*, i8** %2471, align 8, !dbg !501
  %2498 = call i8 @sqlite3GetVarint32(i8* %2497, i32* %2304), !dbg !502
  %2499 = getelementptr i8, i8* %2497, i8 %2498, !dbg !503
  store i8* %2499, i8** %2471, align 8, !dbg !504
  %2500 = load i32, i32* %2304, align 4, !dbg !505
  store i32 %2500, i32* %2477, align 4, !dbg !506
  %2501 = load i64, i64* %2465, align 4, !dbg !507
  %2502 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2500), !dbg !508
  %2503 = zext i32 %2502 to i64, !dbg !509
  %2504 = add i64 %2501, %2503, !dbg !510
  store i64 %2504, i64* %2465, align 4, !dbg !511
  br label %2482, !dbg !512

2505:                                             ; preds = %2475
  %2506 = getelementptr i8, i8* %2478, i32 1, !dbg !513
  store i8* %2506, i8** %2471, align 8, !dbg !514
  %2507 = load i32, i32* %2304, align 4, !dbg !515
  %2508 = trunc i32 %2507 to i8, !dbg !516
  %2509 = getelementptr i8, i8* %4, i8 %2508, !dbg !517
  %2510 = load i8, i8* %2509, align 1, !dbg !518
  %2511 = zext i8 %2510 to i64, !dbg !519
  %2512 = load i64, i64* %2465, align 4, !dbg !520
  %2513 = add i64 %2512, %2511, !dbg !521
  store i64 %2513, i64* %2465, align 4, !dbg !522
  br label %2482, !dbg !523

2514:                                             ; preds = %2482
  %2515 = load i64, i64* %2465, align 4, !dbg !524
  %2516 = load i32, i32* %2319, align 4, !dbg !525
  %2517 = zext i32 %2516 to i64, !dbg !526
  %2518 = icmp uge i64 %2492, %2493, !dbg !527
  %2519 = icmp ugt i64 %2492, %2493, !dbg !528
  %2520 = icmp ne i64 %2515, %2517, !dbg !529
  %2521 = icmp ugt i64 %2515, %2517, !dbg !530
  %2522 = or i1 %2519, %2520, !dbg !531
  %2523 = and i1 %2518, %2522, !dbg !532
  %2524 = or i1 %2523, %2521, !dbg !533
  br i1 %2524, label %2525, label %2529, !dbg !534

2525:                                             ; preds = %2514
  %2526 = load i32, i32* %2311, align 4, !dbg !535
  %2527 = icmp eq i32 %2526, 0, !dbg !536
  br i1 %2527, label %2528, label %2529, !dbg !537

2528:                                             ; preds = %2525
  store i32 0, i32* %2462, align 4, !dbg !538
  store i8* %2474, i8** %2471, align 8, !dbg !539
  br label %2529, !dbg !540

2529:                                             ; preds = %2528, %2525, %2514
  %2530 = load i32, i32* %2462, align 4, !dbg !541
  %2531 = trunc i32 %2530 to i16, !dbg !542
  store i16 %2531, i16* %2322, align 2, !dbg !543
  %2532 = load i8*, i8** %2471, align 8, !dbg !544
  %2533 = ptrtoint i8* %2532 to i64, !dbg !545
  %2534 = load i8*, i8** %2303, align 8, !dbg !546
  %2535 = ptrtoint i8* %2534 to i64, !dbg !547
  %2536 = sub i64 %2533, %2535, !dbg !548
  %2537 = trunc i64 %2536 to i32, !dbg !549
  store i32 %2537, i32* %2318, align 4, !dbg !550
  br label %2539, !dbg !551

2538:                                             ; preds = %2453
  store i32 0, i32* %2304, align 4, !dbg !552
  br label %2539, !dbg !553

2539:                                             ; preds = %2529, %2538
  %2540 = load i16, i16* %2322, align 2, !dbg !554
  %2541 = icmp sle i16 %2540, 0, !dbg !555
  br i1 %2541, label %2542, label %2373, !dbg !556

2542:                                             ; preds = %2539
  %2543 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2307, i32 0, i32 1, !dbg !557
  %2544 = load i16, i16* %2543, align 2, !dbg !557
  %2545 = and i16 %2544, 9216, !dbg !557
  %2546 = icmp ne i16 %2545, 0, !dbg !557
  br i1 %2546, label %2547, label %2548, !dbg !557

2547:                                             ; preds = %2542
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2307), !dbg !557
  br label %2549, !dbg !557

2548:                                             ; preds = %2542
  store i16 1, i16* %2543, align 2, !dbg !557
  br label %2549, !dbg !557

2549:                                             ; preds = %2547, %2548, %2419, %2399, %2438, %2448, %2368, %2369
  call void @llvm.stackrestore(i8* %2296), !dbg !558
  br label %2550, !dbg !75

2550:                                             ; preds = %17, %2549
  %2551 = call i8* @llvm.stacksave(), !dbg !939
  %2552 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 33, !dbg !942
  %2553 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2552, i32 0, i32 6, !dbg !943
  %2554 = bitcast %union.p4union* %2553 to %struct.KeyInfo**, !dbg !944
  %2555 = load %struct.KeyInfo*, %struct.KeyInfo** %2554, align 8, !dbg !945
  %2556 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %2555, i32 0, i32 6, i32 0, !dbg !946
  %2557 = alloca i32*, align 8, !dbg !947
  store i32* null, i32** %2557, align 8, !dbg !948
  %2558 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %2555, i32 0, i32 5, !dbg !949
  %2559 = load i8*, i8** %2558, align 8, !dbg !950
  %2560 = load %struct.CollSeq*, %struct.CollSeq** %2556, align 8, !dbg !951
  %2561 = load i8, i8* %2559, align 1, !dbg !952
  %2562 = and i8 %2561, 1, !dbg !953
  %2563 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !954
  %2564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !955
  %2565 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %2563, %struct.sqlite3_value* %2564, %struct.CollSeq* %2560), !dbg !956
  store i32 %2565, i32* %2, align 4, !dbg !957
  %2566 = icmp ne i32 %2565, 0, !dbg !958
  br i1 %2566, label %2567, label %2587, !dbg !959

2567:                                             ; preds = %2550
  %2568 = and i8 %2561, 2, !dbg !960
  %2569 = icmp ne i8 %2568, 0, !dbg !961
  br i1 %2569, label %2570, label %2582, !dbg !962

2570:                                             ; preds = %2567
  %2571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, i32 1, !dbg !963
  %2572 = load i16, i16* %2571, align 2, !dbg !964
  %2573 = and i16 %2572, 1, !dbg !965
  %2574 = icmp ne i16 %2573, 0, !dbg !966
  %2575 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, i32 1, !dbg !967
  %2576 = load i16, i16* %2575, align 2, !dbg !968
  %2577 = and i16 %2576, 1, !dbg !969
  %2578 = icmp ne i16 %2577, 0, !dbg !970
  %2579 = or i1 %2574, %2578, !dbg !971
  br i1 %2579, label %2580, label %2582, !dbg !972

2580:                                             ; preds = %2570
  %2581 = sub i32 0, %2565, !dbg !973
  store i32 %2581, i32* %2, align 4, !dbg !974
  br label %2582, !dbg !975

2582:                                             ; preds = %2570, %2580, %2567
  %2583 = icmp ne i8 %2562, 0, !dbg !976
  br i1 %2583, label %2584, label %2587, !dbg !977

2584:                                             ; preds = %2582
  %2585 = load i32, i32* %2, align 4, !dbg !978
  %2586 = sub i32 0, %2585, !dbg !979
  store i32 %2586, i32* %2, align 4, !dbg !980
  br label %2587, !dbg !981

2587:                                             ; preds = %2584, %2582, %2550
  call void @llvm.stackrestore(i8* %2551), !dbg !982
  br label %2588, !dbg !75

2588:                                             ; preds = %17, %2587
  %2589 = load i32, i32* %2, align 4, !dbg !983
  %2590 = icmp slt i32 %2589, 0, !dbg !986
  %2591 = icmp sgt i32 %2589, 0, !dbg !987
  %or.cond = or i1 %2590, %2591, !dbg !988
  br i1 %or.cond, label %2592, label %2611, !dbg !988

2592:                                             ; preds = %17, %2588
  %2593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !989
  %2594 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !992
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %2594, %struct.sqlite3_value* %2593), !dbg !993
  br label %2595, !dbg !75

2595:                                             ; preds = %17, %2592
  %2596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !199
  %2597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2596, i32 0, i32 1, !dbg !202
  store i16 4, i16* %2597, align 2, !dbg !203
  %2598 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2596, i32 0, i32 0, i32 0, !dbg !204
  %2599 = bitcast double* %2598 to i64*, !dbg !205
  store i64 36, i64* %2599, align 4, !dbg !206
  br label %3697, !dbg !207

2600:                                             ; preds = %17
  %2601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !994
  %2602 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2601, i32 0, i32 0, i32 0, !dbg !997
  %2603 = bitcast double* %2602 to i64*, !dbg !998
  %2604 = load i64, i64* %2603, align 4, !dbg !999
  %2605 = icmp sgt i64 %2604, 0, !dbg !1000
  br i1 %2605, label %2606, label %.critedge, !dbg !1001

2606:                                             ; preds = %2600
  br label %4216, !dbg !1002

.critedge:                                        ; preds = %2600, %17
  %2607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !199
  %2608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2607, i32 0, i32 1, !dbg !202
  store i16 4, i16* %2608, align 2, !dbg !203
  %2609 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2607, i32 0, i32 0, i32 0, !dbg !204
  %2610 = bitcast double* %2609 to i64*, !dbg !205
  store i64 38, i64* %2610, align 4, !dbg !206
  br label %4146, !dbg !207

2611:                                             ; preds = %2588, %17
  %2612 = call i8* @llvm.stacksave(), !dbg !266
  %2613 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %2614 = load i8, i8* %2613, align 1, !dbg !270
  %2615 = alloca i32, align 4, !dbg !271
  store i32 6, i32* %2615, align 4, !dbg !272
  %2616 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !273
  %2617 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %2618 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2616, align 8, !dbg !275
  store %struct.VdbeCursor* %2618, %struct.VdbeCursor** %2617, align 8, !dbg !276
  %2619 = alloca i8*, align 8, !dbg !277
  %2620 = alloca i32, align 4, !dbg !278
  %2621 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2617, i32* %2615), !dbg !279
  %2622 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2617, align 8, !dbg !280
  %2623 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !281
  %2624 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 16, !dbg !282
  %2625 = load i16, i16* %2624, align 2, !dbg !283
  %2626 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 19, !dbg !284
  %2627 = load i32*, i32** %2626, align 8, !dbg !285
  %2628 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 0, !dbg !286
  %2629 = load i8, i8* %2628, align 1, !dbg !287
  %2630 = icmp ne i8 %2629, 3, !dbg !288
  %2631 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 2, !dbg !289
  %2632 = load i8, i8* %2631, align 1, !dbg !290
  %2633 = icmp ne i8 %2632, 0, !dbg !291
  %2634 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 14, !dbg !292
  %2635 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 21, !dbg !293
  %2636 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 22, !dbg !294
  %2637 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 20, !dbg !295
  %2638 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 17, !dbg !296
  %2639 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 9, !dbg !297
  %2640 = load i32, i32* %2639, align 4, !dbg !298
  %2641 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %2642 = load i32, i32* %2641, align 4, !dbg !300
  %2643 = icmp ne i32 %2640, %2642, !dbg !301
  br i1 %2643, label %2644, label %2686, !dbg !302

2644:                                             ; preds = %2611
  br i1 %2633, label %2666, label %2661, !dbg !303

2645:                                             ; preds = %2661, %2668
  %2646 = load i32, i32* %2641, align 4, !dbg !304
  store i32 %2646, i32* %2639, align 4, !dbg !305
  %2647 = load i8*, i8** %2637, align 8, !dbg !306
  %2648 = load i8, i8* %2647, align 1, !dbg !307
  %2649 = icmp sgt i8 %2648, -1, !dbg !310
  br i1 %2649, label %2650, label %2652, !dbg !311

2650:                                             ; preds = %2645
  %2651 = zext i8 %2648 to i32, !dbg !312
  store i32 %2651, i32* %2627, align 4, !dbg !313
  store i32 1, i32* %2634, align 4, !dbg !314
  br label %2655, !dbg !315

2652:                                             ; preds = %2645
  %2653 = call i8 @sqlite3GetVarint32(i8* %2647, i32* %2627), !dbg !316
  %2654 = zext i8 %2653 to i32, !dbg !317
  store i32 %2654, i32* %2634, align 4, !dbg !318
  br label %2655, !dbg !319

2655:                                             ; preds = %2652, %2650
  store i16 0, i16* %2638, align 2, !dbg !320
  %2656 = load i32, i32* %2636, align 4, !dbg !321
  %2657 = load i32, i32* %2627, align 4, !dbg !322
  %2658 = icmp ult i32 %2656, %2657, !dbg !323
  br i1 %2658, label %2660, label %2659, !dbg !324

2659:                                             ; preds = %2655
  store i8* %2647, i8** %2619, align 8, !dbg !325
  br label %2779, !dbg !326

2660:                                             ; preds = %2655
  store i8* null, i8** %2637, align 8, !dbg !327
  store i32 0, i32* %2636, align 4, !dbg !328
  br label %2686, !dbg !329

2661:                                             ; preds = %2644
  %2662 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 12, i32 0, !dbg !330
  %2663 = load %struct.BtCursor*, %struct.BtCursor** %2662, align 8, !dbg !331
  %2664 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2663), !dbg !332
  store i32 %2664, i32* %2635, align 4, !dbg !333
  %2665 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2663, i32* %2636), !dbg !334
  store i8* %2665, i8** %2637, align 8, !dbg !335
  br label %2645, !dbg !336

2666:                                             ; preds = %2644
  %2667 = icmp eq i8 %2629, 3, !dbg !337
  br i1 %2667, label %2668, label %2679, !dbg !338

2668:                                             ; preds = %2666
  %2669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 10, !dbg !339
  %2670 = load i32, i32* %2669, align 4, !dbg !340
  %2671 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2670, !dbg !341
  %2672 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2671, i32 0, i32 1, !dbg !342
  %2673 = load i16, i16* %2672, align 2, !dbg !343
  %2674 = and i16 %2673, 16, !dbg !344
  %2675 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2671, i32 0, i32 4, !dbg !345
  %2676 = load i32, i32* %2675, align 4, !dbg !346
  store i32 %2676, i32* %2635, align 4, !dbg !347
  store i32 %2676, i32* %2636, align 4, !dbg !348
  %2677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2671, i32 0, i32 5, !dbg !349
  %2678 = load i8*, i8** %2677, align 8, !dbg !350
  store i8* %2678, i8** %2637, align 8, !dbg !351
  br label %2645, !dbg !352

2679:                                             ; preds = %2666
  %2680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 1, !dbg !353
  %2681 = load i16, i16* %2680, align 2, !dbg !353
  %2682 = and i16 %2681, 9216, !dbg !353
  %2683 = icmp ne i16 %2682, 0, !dbg !353
  br i1 %2683, label %2684, label %2685, !dbg !353

2684:                                             ; preds = %2679
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2623), !dbg !353
  br label %2867, !dbg !353

2685:                                             ; preds = %2679
  store i16 1, i16* %2680, align 2, !dbg !353
  br label %2867, !dbg !353

2686:                                             ; preds = %2660, %2611
  %2687 = load i16, i16* %2638, align 2, !dbg !354
  %2688 = icmp ule i16 %2687, 1, !dbg !355
  br i1 %2688, label %2771, label %2768, !dbg !356

2689:                                             ; preds = %2768, %2857
  %2690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 1, !dbg !357
  %2691 = load i16, i16* %2690, align 2, !dbg !358
  %2692 = and i16 9216, %2691, !dbg !359
  %2693 = icmp eq i16 0, %2692, !dbg !360
  br i1 %2693, label %2694, label %2698, !dbg !361

2694:                                             ; preds = %2689
  %2695 = icmp ne i16 %2692, 0, !dbg !362
  br i1 %2695, label %2696, label %2697, !dbg !362

2696:                                             ; preds = %2694
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2623), !dbg !362
  br label %2698, !dbg !362

2697:                                             ; preds = %2694
  store i16 1, i16* %2690, align 2, !dbg !362
  br label %2698, !dbg !362

2698:                                             ; preds = %2696, %2697, %2689
  %2699 = load i32, i32* %2620, align 4, !dbg !363
  %2700 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 23, i32 1, !dbg !364
  %2701 = load i32, i32* %2700, align 4, !dbg !365
  %2702 = load i32, i32* %2636, align 4, !dbg !366
  %2703 = getelementptr i32, i32* %2627, i32 2, !dbg !367
  %2704 = load i32, i32* %2703, align 4, !dbg !368
  %2705 = icmp sge i32 %2702, %2704, !dbg !369
  br i1 %2705, label %2706, label %2746, !dbg !370

2706:                                             ; preds = %2698
  %2707 = load i8*, i8** %2637, align 8, !dbg !371
  %2708 = ptrtoint i8* %2707 to i64, !dbg !372
  %2709 = getelementptr i32, i32* %2627, i32 1, !dbg !373
  %2710 = load i32, i32* %2709, align 4, !dbg !374
  %2711 = zext i32 %2710 to i64, !dbg !375
  %2712 = add i64 %2708, %2711, !dbg !376
  %2713 = inttoptr i64 %2712 to i8*, !dbg !377
  store i8* %2713, i8** %2619, align 8, !dbg !378
  %2714 = load i32, i32* %2620, align 4, !dbg !379
  %2715 = icmp ult i32 %2714, 12, !dbg !380
  br i1 %2715, label %2716, label %2718, !dbg !381

2716:                                             ; preds = %2706
  %2717 = call i32 @sqlite3VdbeSerialGet(i8* %2713, i32 %2714, %struct.sqlite3_value* %2623), !dbg !382
  br label %2867, !dbg !383

2718:                                             ; preds = %2706
  %2719 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %2719, align 2, !dbg !385
  %2720 = getelementptr i16, i16* %2719, i32 1, !dbg !386
  store i16 514, i16* %2720, align 2, !dbg !387
  %2721 = load i32, i32* %2620, align 4, !dbg !388
  %2722 = sub i32 %2721, 12, !dbg !389
  %2723 = lshr i32 %2722, 1, !dbg !390
  %2724 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 4, !dbg !391
  store i32 %2723, i32* %2724, align 4, !dbg !392
  %2725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 2, !dbg !393
  store i8 %2614, i8* %2725, align 1, !dbg !394
  %2726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 5, !dbg !395
  %2727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 7, !dbg !396
  %2728 = load i32, i32* %2727, align 4, !dbg !397
  %2729 = add i32 %2723, 2, !dbg !398
  %2730 = icmp slt i32 %2728, %2729, !dbg !399
  br i1 %2730, label %2731, label %2733, !dbg !400

2731:                                             ; preds = %2718
  store i16 1, i16* %2690, align 2, !dbg !401
  %2732 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2623, i32 %2729, i32 0), !dbg !402
  br label %2736, !dbg !403

2733:                                             ; preds = %2718
  %2734 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 6, !dbg !404
  %2735 = load i8*, i8** %2734, align 8, !dbg !405
  store i8* %2735, i8** %2726, align 8, !dbg !406
  br label %2736, !dbg !407

2736:                                             ; preds = %2733, %2731
  %2737 = zext i32 %2723 to i64, !dbg !408
  %2738 = load i8*, i8** %2726, align 8, !dbg !409
  %2739 = load i8*, i8** %2619, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2738, i8* %2739, i64 %2737, i1 false), !dbg !411
  %2740 = getelementptr i8, i8* %2738, i32 %2723, !dbg !412
  store i8 0, i8* %2740, align 1, !dbg !413
  %2741 = add i32 %2723, 1, !dbg !414
  %2742 = getelementptr i8, i8* %2738, i32 %2741, !dbg !415
  store i8 0, i8* %2742, align 1, !dbg !416
  %2743 = and i32 %2721, 1, !dbg !417
  %2744 = getelementptr i16, i16* %2719, i32 %2743, !dbg !418
  %2745 = load i16, i16* %2744, align 2, !dbg !419
  store i16 %2745, i16* %2690, align 2, !dbg !420
  br label %2867, !dbg !421

2746:                                             ; preds = %2698
  %2747 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 2, !dbg !422
  store i8 %2614, i8* %2747, align 1, !dbg !423
  %2748 = load i32, i32* %2620, align 4, !dbg !424
  %2749 = and i32 %2748, 1, !dbg !425
  %2750 = icmp eq i32 %2749, 0, !dbg !426
  %2751 = icmp sge i32 %2748, 12, !dbg !427
  %2752 = and i1 %2751, %2750, !dbg !428
  %2753 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2748), !dbg !429
  %2754 = icmp eq i32 %2753, 0, !dbg !430
  br i1 %2754, label %2766, label %2755, !dbg !431

2755:                                             ; preds = %2746
  %2756 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 12, i32 0, !dbg !432
  %2757 = load %struct.BtCursor*, %struct.BtCursor** %2756, align 8, !dbg !433
  %2758 = getelementptr i32, i32* %2627, i32 1, !dbg !434
  %2759 = load i32, i32* %2758, align 4, !dbg !435
  %2760 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2757, i32 %2759, i32 %2753, %struct.sqlite3_value* %2623), !dbg !436
  %2761 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 5, !dbg !437
  %2762 = load i8*, i8** %2761, align 8, !dbg !438
  %2763 = call i32 @sqlite3VdbeSerialGet(i8* %2762, i32 %2748, %struct.sqlite3_value* %2623), !dbg !439
  %2764 = load i16, i16* %2690, align 2, !dbg !440
  %2765 = and i16 %2764, -4097, !dbg !441
  store i16 %2765, i16* %2690, align 2, !dbg !442
  br label %2867, !dbg !443

2766:                                             ; preds = %2746
  %2767 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2748, %struct.sqlite3_value* %2623), !dbg !444
  br label %2867, !dbg !445

2768:                                             ; preds = %2686
  %2769 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 23, i32 1, !dbg !446
  %2770 = load i32, i32* %2769, align 4, !dbg !447
  store i32 %2770, i32* %2620, align 4, !dbg !448
  br label %2689, !dbg !449

2771:                                             ; preds = %2686
  %2772 = load i32, i32* %2634, align 4, !dbg !450
  %2773 = load i32, i32* %2627, align 4, !dbg !451
  %2774 = icmp ult i32 %2772, %2773, !dbg !452
  br i1 %2774, label %2775, label %2856, !dbg !453

2775:                                             ; preds = %2771
  %2776 = load i8*, i8** %2637, align 8, !dbg !454
  %2777 = icmp eq i8* %2776, null, !dbg !455
  br i1 %2777, label %2779, label %2778, !dbg !456

2778:                                             ; preds = %2775
  store i8* %2776, i8** %2619, align 8, !dbg !457
  br label %2779, !dbg !458

2779:                                             ; preds = %2778, %2775, %2659
  %2780 = alloca i32, align 4, !dbg !459
  %2781 = load i16, i16* %2638, align 2, !dbg !460
  %2782 = zext i16 %2781 to i32, !dbg !461
  store i32 %2782, i32* %2780, align 4, !dbg !462
  %2783 = alloca i64, align 8, !dbg !463
  %2784 = getelementptr i32, i32* %2627, i32 %2782, !dbg !464
  %2785 = load i32, i32* %2784, align 4, !dbg !465
  %2786 = zext i32 %2785 to i64, !dbg !466
  store i64 %2786, i64* %2783, align 4, !dbg !467
  %2787 = load i8*, i8** %2619, align 8, !dbg !468
  %2788 = load i32, i32* %2634, align 4, !dbg !469
  %2789 = alloca i8*, align 8, !dbg !470
  %2790 = getelementptr i8, i8* %2787, i32 %2788, !dbg !471
  store i8* %2790, i8** %2789, align 8, !dbg !472
  %2791 = load i32, i32* %2627, align 4, !dbg !473
  %2792 = getelementptr i8, i8* %2787, i32 %2791, !dbg !474
  br label %2793, !dbg !475

2793:                                             ; preds = %2800, %2779
  %2794 = load i32, i32* %2780, align 4, !dbg !476
  %2795 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2622, i32 0, i32 23, i32 %2794, !dbg !477
  %2796 = load i8*, i8** %2789, align 8, !dbg !478
  %2797 = load i8, i8* %2796, align 1, !dbg !479
  %2798 = zext i8 %2797 to i32, !dbg !480
  store i32 %2798, i32* %2620, align 4, !dbg !481
  store i32 %2798, i32* %2795, align 4, !dbg !482
  %2799 = icmp sgt i8 %2797, -1, !dbg !483
  br i1 %2799, label %2823, label %2814, !dbg !484

2800:                                             ; preds = %2814, %2823
  %2801 = load i32, i32* %2780, align 4, !dbg !485
  %2802 = add i32 %2801, 1, !dbg !486
  store i32 %2802, i32* %2780, align 4, !dbg !487
  %2803 = load i64, i64* %2783, align 4, !dbg !488
  %2804 = and i64 4294967295, %2803, !dbg !489
  %2805 = trunc i64 %2804 to i32, !dbg !490
  %2806 = getelementptr i32, i32* %2627, i32 %2802, !dbg !491
  store i32 %2805, i32* %2806, align 4, !dbg !492
  %2807 = load i32, i32* %2780, align 4, !dbg !493
  %2808 = icmp sle i32 %2807, 1, !dbg !494
  %2809 = load i8*, i8** %2789, align 8, !dbg !495
  %2810 = ptrtoint i8* %2809 to i64, !dbg !496
  %2811 = ptrtoint i8* %2792 to i64, !dbg !497
  %2812 = icmp ult i64 %2810, %2811, !dbg !498
  %2813 = and i1 %2808, %2812, !dbg !499
  br i1 %2813, label %2793, label %2832, !dbg !500

2814:                                             ; preds = %2793
  %2815 = load i8*, i8** %2789, align 8, !dbg !501
  %2816 = call i8 @sqlite3GetVarint32(i8* %2815, i32* %2620), !dbg !502
  %2817 = getelementptr i8, i8* %2815, i8 %2816, !dbg !503
  store i8* %2817, i8** %2789, align 8, !dbg !504
  %2818 = load i32, i32* %2620, align 4, !dbg !505
  store i32 %2818, i32* %2795, align 4, !dbg !506
  %2819 = load i64, i64* %2783, align 4, !dbg !507
  %2820 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2818), !dbg !508
  %2821 = zext i32 %2820 to i64, !dbg !509
  %2822 = add i64 %2819, %2821, !dbg !510
  store i64 %2822, i64* %2783, align 4, !dbg !511
  br label %2800, !dbg !512

2823:                                             ; preds = %2793
  %2824 = getelementptr i8, i8* %2796, i32 1, !dbg !513
  store i8* %2824, i8** %2789, align 8, !dbg !514
  %2825 = load i32, i32* %2620, align 4, !dbg !515
  %2826 = trunc i32 %2825 to i8, !dbg !516
  %2827 = getelementptr i8, i8* %4, i8 %2826, !dbg !517
  %2828 = load i8, i8* %2827, align 1, !dbg !518
  %2829 = zext i8 %2828 to i64, !dbg !519
  %2830 = load i64, i64* %2783, align 4, !dbg !520
  %2831 = add i64 %2830, %2829, !dbg !521
  store i64 %2831, i64* %2783, align 4, !dbg !522
  br label %2800, !dbg !523

2832:                                             ; preds = %2800
  %2833 = load i64, i64* %2783, align 4, !dbg !524
  %2834 = load i32, i32* %2635, align 4, !dbg !525
  %2835 = zext i32 %2834 to i64, !dbg !526
  %2836 = icmp uge i64 %2810, %2811, !dbg !527
  %2837 = icmp ugt i64 %2810, %2811, !dbg !528
  %2838 = icmp ne i64 %2833, %2835, !dbg !529
  %2839 = icmp ugt i64 %2833, %2835, !dbg !530
  %2840 = or i1 %2837, %2838, !dbg !531
  %2841 = and i1 %2836, %2840, !dbg !532
  %2842 = or i1 %2841, %2839, !dbg !533
  br i1 %2842, label %2843, label %2847, !dbg !534

2843:                                             ; preds = %2832
  %2844 = load i32, i32* %2627, align 4, !dbg !535
  %2845 = icmp eq i32 %2844, 0, !dbg !536
  br i1 %2845, label %2846, label %2847, !dbg !537

2846:                                             ; preds = %2843
  store i32 0, i32* %2780, align 4, !dbg !538
  store i8* %2792, i8** %2789, align 8, !dbg !539
  br label %2847, !dbg !540

2847:                                             ; preds = %2846, %2843, %2832
  %2848 = load i32, i32* %2780, align 4, !dbg !541
  %2849 = trunc i32 %2848 to i16, !dbg !542
  store i16 %2849, i16* %2638, align 2, !dbg !543
  %2850 = load i8*, i8** %2789, align 8, !dbg !544
  %2851 = ptrtoint i8* %2850 to i64, !dbg !545
  %2852 = load i8*, i8** %2619, align 8, !dbg !546
  %2853 = ptrtoint i8* %2852 to i64, !dbg !547
  %2854 = sub i64 %2851, %2853, !dbg !548
  %2855 = trunc i64 %2854 to i32, !dbg !549
  store i32 %2855, i32* %2634, align 4, !dbg !550
  br label %2857, !dbg !551

2856:                                             ; preds = %2771
  store i32 0, i32* %2620, align 4, !dbg !552
  br label %2857, !dbg !553

2857:                                             ; preds = %2847, %2856
  %2858 = load i16, i16* %2638, align 2, !dbg !554
  %2859 = icmp sle i16 %2858, 1, !dbg !555
  br i1 %2859, label %2860, label %2689, !dbg !556

2860:                                             ; preds = %2857
  %2861 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2623, i32 0, i32 1, !dbg !557
  %2862 = load i16, i16* %2861, align 2, !dbg !557
  %2863 = and i16 %2862, 9216, !dbg !557
  %2864 = icmp ne i16 %2863, 0, !dbg !557
  br i1 %2864, label %2865, label %2866, !dbg !557

2865:                                             ; preds = %2860
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2623), !dbg !557
  br label %2867, !dbg !557

2866:                                             ; preds = %2860
  store i16 1, i16* %2861, align 2, !dbg !557
  br label %2867, !dbg !557

2867:                                             ; preds = %2865, %2866, %2736, %2716, %2755, %2766, %2684, %2685
  call void @llvm.stackrestore(i8* %2612), !dbg !558
  br label %2868, !dbg !75

2868:                                             ; preds = %17, %2867
  %2869 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !685
  %2870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2869, i32 0, i32 1, !dbg !688
  %2871 = load i16, i16* %2870, align 2, !dbg !689
  %2872 = and i16 %2871, 36, !dbg !690
  %2873 = icmp ne i16 %2872, 0, !dbg !691
  br i1 %2873, label %2874, label %2875, !dbg !692

2874:                                             ; preds = %2868
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %2869), !dbg !693
  br label %2875, !dbg !694

2875:                                             ; preds = %2874, %2868, %17
  %2876 = call i8* @llvm.stacksave(), !dbg !266
  %2877 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %2878 = load i8, i8* %2877, align 1, !dbg !270
  %2879 = alloca i32, align 4, !dbg !271
  store i32 6, i32* %2879, align 4, !dbg !272
  %2880 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !273
  %2881 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %2882 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2880, align 8, !dbg !275
  store %struct.VdbeCursor* %2882, %struct.VdbeCursor** %2881, align 8, !dbg !276
  %2883 = alloca i8*, align 8, !dbg !277
  %2884 = alloca i32, align 4, !dbg !278
  %2885 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2881, i32* %2879), !dbg !279
  %2886 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2881, align 8, !dbg !280
  %2887 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !281
  %2888 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 16, !dbg !282
  %2889 = load i16, i16* %2888, align 2, !dbg !283
  %2890 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 19, !dbg !284
  %2891 = load i32*, i32** %2890, align 8, !dbg !285
  %2892 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 0, !dbg !286
  %2893 = load i8, i8* %2892, align 1, !dbg !287
  %2894 = icmp ne i8 %2893, 3, !dbg !288
  %2895 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 2, !dbg !289
  %2896 = load i8, i8* %2895, align 1, !dbg !290
  %2897 = icmp ne i8 %2896, 0, !dbg !291
  %2898 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 14, !dbg !292
  %2899 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 21, !dbg !293
  %2900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 22, !dbg !294
  %2901 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 20, !dbg !295
  %2902 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 17, !dbg !296
  %2903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 9, !dbg !297
  %2904 = load i32, i32* %2903, align 4, !dbg !298
  %2905 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %2906 = load i32, i32* %2905, align 4, !dbg !300
  %2907 = icmp ne i32 %2904, %2906, !dbg !301
  br i1 %2907, label %2908, label %2950, !dbg !302

2908:                                             ; preds = %2875
  br i1 %2897, label %2930, label %2925, !dbg !303

2909:                                             ; preds = %2925, %2932
  %2910 = load i32, i32* %2905, align 4, !dbg !304
  store i32 %2910, i32* %2903, align 4, !dbg !305
  %2911 = load i8*, i8** %2901, align 8, !dbg !306
  %2912 = load i8, i8* %2911, align 1, !dbg !307
  %2913 = icmp sgt i8 %2912, -1, !dbg !310
  br i1 %2913, label %2914, label %2916, !dbg !311

2914:                                             ; preds = %2909
  %2915 = zext i8 %2912 to i32, !dbg !312
  store i32 %2915, i32* %2891, align 4, !dbg !313
  store i32 1, i32* %2898, align 4, !dbg !314
  br label %2919, !dbg !315

2916:                                             ; preds = %2909
  %2917 = call i8 @sqlite3GetVarint32(i8* %2911, i32* %2891), !dbg !316
  %2918 = zext i8 %2917 to i32, !dbg !317
  store i32 %2918, i32* %2898, align 4, !dbg !318
  br label %2919, !dbg !319

2919:                                             ; preds = %2916, %2914
  store i16 0, i16* %2902, align 2, !dbg !320
  %2920 = load i32, i32* %2900, align 4, !dbg !321
  %2921 = load i32, i32* %2891, align 4, !dbg !322
  %2922 = icmp ult i32 %2920, %2921, !dbg !323
  br i1 %2922, label %2924, label %2923, !dbg !324

2923:                                             ; preds = %2919
  store i8* %2911, i8** %2883, align 8, !dbg !325
  br label %3043, !dbg !326

2924:                                             ; preds = %2919
  store i8* null, i8** %2901, align 8, !dbg !327
  store i32 0, i32* %2900, align 4, !dbg !328
  br label %2950, !dbg !329

2925:                                             ; preds = %2908
  %2926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 12, i32 0, !dbg !330
  %2927 = load %struct.BtCursor*, %struct.BtCursor** %2926, align 8, !dbg !331
  %2928 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2927), !dbg !332
  store i32 %2928, i32* %2899, align 4, !dbg !333
  %2929 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2927, i32* %2900), !dbg !334
  store i8* %2929, i8** %2901, align 8, !dbg !335
  br label %2909, !dbg !336

2930:                                             ; preds = %2908
  %2931 = icmp eq i8 %2893, 3, !dbg !337
  br i1 %2931, label %2932, label %2943, !dbg !338

2932:                                             ; preds = %2930
  %2933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 10, !dbg !339
  %2934 = load i32, i32* %2933, align 4, !dbg !340
  %2935 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2934, !dbg !341
  %2936 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2935, i32 0, i32 1, !dbg !342
  %2937 = load i16, i16* %2936, align 2, !dbg !343
  %2938 = and i16 %2937, 16, !dbg !344
  %2939 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2935, i32 0, i32 4, !dbg !345
  %2940 = load i32, i32* %2939, align 4, !dbg !346
  store i32 %2940, i32* %2899, align 4, !dbg !347
  store i32 %2940, i32* %2900, align 4, !dbg !348
  %2941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2935, i32 0, i32 5, !dbg !349
  %2942 = load i8*, i8** %2941, align 8, !dbg !350
  store i8* %2942, i8** %2901, align 8, !dbg !351
  br label %2909, !dbg !352

2943:                                             ; preds = %2930
  %2944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 1, !dbg !353
  %2945 = load i16, i16* %2944, align 2, !dbg !353
  %2946 = and i16 %2945, 9216, !dbg !353
  %2947 = icmp ne i16 %2946, 0, !dbg !353
  br i1 %2947, label %2948, label %2949, !dbg !353

2948:                                             ; preds = %2943
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2887), !dbg !353
  br label %3131, !dbg !353

2949:                                             ; preds = %2943
  store i16 1, i16* %2944, align 2, !dbg !353
  br label %3131, !dbg !353

2950:                                             ; preds = %2924, %2875
  %2951 = load i16, i16* %2902, align 2, !dbg !354
  %2952 = icmp ule i16 %2951, 2, !dbg !355
  br i1 %2952, label %3035, label %3032, !dbg !356

2953:                                             ; preds = %3032, %3121
  %2954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 1, !dbg !357
  %2955 = load i16, i16* %2954, align 2, !dbg !358
  %2956 = and i16 9216, %2955, !dbg !359
  %2957 = icmp eq i16 0, %2956, !dbg !360
  br i1 %2957, label %2958, label %2962, !dbg !361

2958:                                             ; preds = %2953
  %2959 = icmp ne i16 %2956, 0, !dbg !362
  br i1 %2959, label %2960, label %2961, !dbg !362

2960:                                             ; preds = %2958
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2887), !dbg !362
  br label %2962, !dbg !362

2961:                                             ; preds = %2958
  store i16 1, i16* %2954, align 2, !dbg !362
  br label %2962, !dbg !362

2962:                                             ; preds = %2960, %2961, %2953
  %2963 = load i32, i32* %2884, align 4, !dbg !363
  %2964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 23, i32 2, !dbg !364
  %2965 = load i32, i32* %2964, align 4, !dbg !365
  %2966 = load i32, i32* %2900, align 4, !dbg !366
  %2967 = getelementptr i32, i32* %2891, i32 3, !dbg !367
  %2968 = load i32, i32* %2967, align 4, !dbg !368
  %2969 = icmp sge i32 %2966, %2968, !dbg !369
  br i1 %2969, label %2970, label %3010, !dbg !370

2970:                                             ; preds = %2962
  %2971 = load i8*, i8** %2901, align 8, !dbg !371
  %2972 = ptrtoint i8* %2971 to i64, !dbg !372
  %2973 = getelementptr i32, i32* %2891, i32 2, !dbg !373
  %2974 = load i32, i32* %2973, align 4, !dbg !374
  %2975 = zext i32 %2974 to i64, !dbg !375
  %2976 = add i64 %2972, %2975, !dbg !376
  %2977 = inttoptr i64 %2976 to i8*, !dbg !377
  store i8* %2977, i8** %2883, align 8, !dbg !378
  %2978 = load i32, i32* %2884, align 4, !dbg !379
  %2979 = icmp ult i32 %2978, 12, !dbg !380
  br i1 %2979, label %2980, label %2982, !dbg !381

2980:                                             ; preds = %2970
  %2981 = call i32 @sqlite3VdbeSerialGet(i8* %2977, i32 %2978, %struct.sqlite3_value* %2887), !dbg !382
  br label %3131, !dbg !383

2982:                                             ; preds = %2970
  %2983 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %2983, align 2, !dbg !385
  %2984 = getelementptr i16, i16* %2983, i32 1, !dbg !386
  store i16 514, i16* %2984, align 2, !dbg !387
  %2985 = load i32, i32* %2884, align 4, !dbg !388
  %2986 = sub i32 %2985, 12, !dbg !389
  %2987 = lshr i32 %2986, 1, !dbg !390
  %2988 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 4, !dbg !391
  store i32 %2987, i32* %2988, align 4, !dbg !392
  %2989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 2, !dbg !393
  store i8 %2878, i8* %2989, align 1, !dbg !394
  %2990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 5, !dbg !395
  %2991 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 7, !dbg !396
  %2992 = load i32, i32* %2991, align 4, !dbg !397
  %2993 = add i32 %2987, 2, !dbg !398
  %2994 = icmp slt i32 %2992, %2993, !dbg !399
  br i1 %2994, label %2995, label %2997, !dbg !400

2995:                                             ; preds = %2982
  store i16 1, i16* %2954, align 2, !dbg !401
  %2996 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2887, i32 %2993, i32 0), !dbg !402
  br label %3000, !dbg !403

2997:                                             ; preds = %2982
  %2998 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 6, !dbg !404
  %2999 = load i8*, i8** %2998, align 8, !dbg !405
  store i8* %2999, i8** %2990, align 8, !dbg !406
  br label %3000, !dbg !407

3000:                                             ; preds = %2997, %2995
  %3001 = zext i32 %2987 to i64, !dbg !408
  %3002 = load i8*, i8** %2990, align 8, !dbg !409
  %3003 = load i8*, i8** %2883, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3002, i8* %3003, i64 %3001, i1 false), !dbg !411
  %3004 = getelementptr i8, i8* %3002, i32 %2987, !dbg !412
  store i8 0, i8* %3004, align 1, !dbg !413
  %3005 = add i32 %2987, 1, !dbg !414
  %3006 = getelementptr i8, i8* %3002, i32 %3005, !dbg !415
  store i8 0, i8* %3006, align 1, !dbg !416
  %3007 = and i32 %2985, 1, !dbg !417
  %3008 = getelementptr i16, i16* %2983, i32 %3007, !dbg !418
  %3009 = load i16, i16* %3008, align 2, !dbg !419
  store i16 %3009, i16* %2954, align 2, !dbg !420
  br label %3131, !dbg !421

3010:                                             ; preds = %2962
  %3011 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 2, !dbg !422
  store i8 %2878, i8* %3011, align 1, !dbg !423
  %3012 = load i32, i32* %2884, align 4, !dbg !424
  %3013 = and i32 %3012, 1, !dbg !425
  %3014 = icmp eq i32 %3013, 0, !dbg !426
  %3015 = icmp sge i32 %3012, 12, !dbg !427
  %3016 = and i1 %3015, %3014, !dbg !428
  %3017 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3012), !dbg !429
  %3018 = icmp eq i32 %3017, 0, !dbg !430
  br i1 %3018, label %3030, label %3019, !dbg !431

3019:                                             ; preds = %3010
  %3020 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 12, i32 0, !dbg !432
  %3021 = load %struct.BtCursor*, %struct.BtCursor** %3020, align 8, !dbg !433
  %3022 = getelementptr i32, i32* %2891, i32 2, !dbg !434
  %3023 = load i32, i32* %3022, align 4, !dbg !435
  %3024 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3021, i32 %3023, i32 %3017, %struct.sqlite3_value* %2887), !dbg !436
  %3025 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 5, !dbg !437
  %3026 = load i8*, i8** %3025, align 8, !dbg !438
  %3027 = call i32 @sqlite3VdbeSerialGet(i8* %3026, i32 %3012, %struct.sqlite3_value* %2887), !dbg !439
  %3028 = load i16, i16* %2954, align 2, !dbg !440
  %3029 = and i16 %3028, -4097, !dbg !441
  store i16 %3029, i16* %2954, align 2, !dbg !442
  br label %3131, !dbg !443

3030:                                             ; preds = %3010
  %3031 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3012, %struct.sqlite3_value* %2887), !dbg !444
  br label %3131, !dbg !445

3032:                                             ; preds = %2950
  %3033 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 23, i32 2, !dbg !446
  %3034 = load i32, i32* %3033, align 4, !dbg !447
  store i32 %3034, i32* %2884, align 4, !dbg !448
  br label %2953, !dbg !449

3035:                                             ; preds = %2950
  %3036 = load i32, i32* %2898, align 4, !dbg !450
  %3037 = load i32, i32* %2891, align 4, !dbg !451
  %3038 = icmp ult i32 %3036, %3037, !dbg !452
  br i1 %3038, label %3039, label %3120, !dbg !453

3039:                                             ; preds = %3035
  %3040 = load i8*, i8** %2901, align 8, !dbg !454
  %3041 = icmp eq i8* %3040, null, !dbg !455
  br i1 %3041, label %3043, label %3042, !dbg !456

3042:                                             ; preds = %3039
  store i8* %3040, i8** %2883, align 8, !dbg !457
  br label %3043, !dbg !458

3043:                                             ; preds = %3042, %3039, %2923
  %3044 = alloca i32, align 4, !dbg !459
  %3045 = load i16, i16* %2902, align 2, !dbg !460
  %3046 = zext i16 %3045 to i32, !dbg !461
  store i32 %3046, i32* %3044, align 4, !dbg !462
  %3047 = alloca i64, align 8, !dbg !463
  %3048 = getelementptr i32, i32* %2891, i32 %3046, !dbg !464
  %3049 = load i32, i32* %3048, align 4, !dbg !465
  %3050 = zext i32 %3049 to i64, !dbg !466
  store i64 %3050, i64* %3047, align 4, !dbg !467
  %3051 = load i8*, i8** %2883, align 8, !dbg !468
  %3052 = load i32, i32* %2898, align 4, !dbg !469
  %3053 = alloca i8*, align 8, !dbg !470
  %3054 = getelementptr i8, i8* %3051, i32 %3052, !dbg !471
  store i8* %3054, i8** %3053, align 8, !dbg !472
  %3055 = load i32, i32* %2891, align 4, !dbg !473
  %3056 = getelementptr i8, i8* %3051, i32 %3055, !dbg !474
  br label %3057, !dbg !475

3057:                                             ; preds = %3064, %3043
  %3058 = load i32, i32* %3044, align 4, !dbg !476
  %3059 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2886, i32 0, i32 23, i32 %3058, !dbg !477
  %3060 = load i8*, i8** %3053, align 8, !dbg !478
  %3061 = load i8, i8* %3060, align 1, !dbg !479
  %3062 = zext i8 %3061 to i32, !dbg !480
  store i32 %3062, i32* %2884, align 4, !dbg !481
  store i32 %3062, i32* %3059, align 4, !dbg !482
  %3063 = icmp sgt i8 %3061, -1, !dbg !483
  br i1 %3063, label %3087, label %3078, !dbg !484

3064:                                             ; preds = %3078, %3087
  %3065 = load i32, i32* %3044, align 4, !dbg !485
  %3066 = add i32 %3065, 1, !dbg !486
  store i32 %3066, i32* %3044, align 4, !dbg !487
  %3067 = load i64, i64* %3047, align 4, !dbg !488
  %3068 = and i64 4294967295, %3067, !dbg !489
  %3069 = trunc i64 %3068 to i32, !dbg !490
  %3070 = getelementptr i32, i32* %2891, i32 %3066, !dbg !491
  store i32 %3069, i32* %3070, align 4, !dbg !492
  %3071 = load i32, i32* %3044, align 4, !dbg !493
  %3072 = icmp sle i32 %3071, 2, !dbg !494
  %3073 = load i8*, i8** %3053, align 8, !dbg !495
  %3074 = ptrtoint i8* %3073 to i64, !dbg !496
  %3075 = ptrtoint i8* %3056 to i64, !dbg !497
  %3076 = icmp ult i64 %3074, %3075, !dbg !498
  %3077 = and i1 %3072, %3076, !dbg !499
  br i1 %3077, label %3057, label %3096, !dbg !500

3078:                                             ; preds = %3057
  %3079 = load i8*, i8** %3053, align 8, !dbg !501
  %3080 = call i8 @sqlite3GetVarint32(i8* %3079, i32* %2884), !dbg !502
  %3081 = getelementptr i8, i8* %3079, i8 %3080, !dbg !503
  store i8* %3081, i8** %3053, align 8, !dbg !504
  %3082 = load i32, i32* %2884, align 4, !dbg !505
  store i32 %3082, i32* %3059, align 4, !dbg !506
  %3083 = load i64, i64* %3047, align 4, !dbg !507
  %3084 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3082), !dbg !508
  %3085 = zext i32 %3084 to i64, !dbg !509
  %3086 = add i64 %3083, %3085, !dbg !510
  store i64 %3086, i64* %3047, align 4, !dbg !511
  br label %3064, !dbg !512

3087:                                             ; preds = %3057
  %3088 = getelementptr i8, i8* %3060, i32 1, !dbg !513
  store i8* %3088, i8** %3053, align 8, !dbg !514
  %3089 = load i32, i32* %2884, align 4, !dbg !515
  %3090 = trunc i32 %3089 to i8, !dbg !516
  %3091 = getelementptr i8, i8* %4, i8 %3090, !dbg !517
  %3092 = load i8, i8* %3091, align 1, !dbg !518
  %3093 = zext i8 %3092 to i64, !dbg !519
  %3094 = load i64, i64* %3047, align 4, !dbg !520
  %3095 = add i64 %3094, %3093, !dbg !521
  store i64 %3095, i64* %3047, align 4, !dbg !522
  br label %3064, !dbg !523

3096:                                             ; preds = %3064
  %3097 = load i64, i64* %3047, align 4, !dbg !524
  %3098 = load i32, i32* %2899, align 4, !dbg !525
  %3099 = zext i32 %3098 to i64, !dbg !526
  %3100 = icmp uge i64 %3074, %3075, !dbg !527
  %3101 = icmp ugt i64 %3074, %3075, !dbg !528
  %3102 = icmp ne i64 %3097, %3099, !dbg !529
  %3103 = icmp ugt i64 %3097, %3099, !dbg !530
  %3104 = or i1 %3101, %3102, !dbg !531
  %3105 = and i1 %3100, %3104, !dbg !532
  %3106 = or i1 %3105, %3103, !dbg !533
  br i1 %3106, label %3107, label %3111, !dbg !534

3107:                                             ; preds = %3096
  %3108 = load i32, i32* %2891, align 4, !dbg !535
  %3109 = icmp eq i32 %3108, 0, !dbg !536
  br i1 %3109, label %3110, label %3111, !dbg !537

3110:                                             ; preds = %3107
  store i32 0, i32* %3044, align 4, !dbg !538
  store i8* %3056, i8** %3053, align 8, !dbg !539
  br label %3111, !dbg !540

3111:                                             ; preds = %3110, %3107, %3096
  %3112 = load i32, i32* %3044, align 4, !dbg !541
  %3113 = trunc i32 %3112 to i16, !dbg !542
  store i16 %3113, i16* %2902, align 2, !dbg !543
  %3114 = load i8*, i8** %3053, align 8, !dbg !544
  %3115 = ptrtoint i8* %3114 to i64, !dbg !545
  %3116 = load i8*, i8** %2883, align 8, !dbg !546
  %3117 = ptrtoint i8* %3116 to i64, !dbg !547
  %3118 = sub i64 %3115, %3117, !dbg !548
  %3119 = trunc i64 %3118 to i32, !dbg !549
  store i32 %3119, i32* %2898, align 4, !dbg !550
  br label %3121, !dbg !551

3120:                                             ; preds = %3035
  store i32 0, i32* %2884, align 4, !dbg !552
  br label %3121, !dbg !553

3121:                                             ; preds = %3111, %3120
  %3122 = load i16, i16* %2902, align 2, !dbg !554
  %3123 = icmp sle i16 %3122, 2, !dbg !555
  br i1 %3123, label %3124, label %2953, !dbg !556

3124:                                             ; preds = %3121
  %3125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2887, i32 0, i32 1, !dbg !557
  %3126 = load i16, i16* %3125, align 2, !dbg !557
  %3127 = and i16 %3126, 9216, !dbg !557
  %3128 = icmp ne i16 %3127, 0, !dbg !557
  br i1 %3128, label %3129, label %3130, !dbg !557

3129:                                             ; preds = %3124
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2887), !dbg !557
  br label %3131, !dbg !557

3130:                                             ; preds = %3124
  store i16 1, i16* %3125, align 2, !dbg !557
  br label %3131, !dbg !557

3131:                                             ; preds = %3129, %3130, %3000, %2980, %3019, %3030, %2948, %2949
  call void @llvm.stackrestore(i8* %2876), !dbg !558
  br label %3132, !dbg !75

3132:                                             ; preds = %17, %3131
  %3133 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !685
  %3134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3133, i32 0, i32 1, !dbg !688
  %3135 = load i16, i16* %3134, align 2, !dbg !689
  %3136 = and i16 %3135, 36, !dbg !690
  %3137 = icmp ne i16 %3136, 0, !dbg !691
  br i1 %3137, label %3138, label %3139, !dbg !692

3138:                                             ; preds = %3132
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %3133), !dbg !693
  br label %3139, !dbg !694

3139:                                             ; preds = %3138, %3132, %17
  %3140 = call i8* @llvm.stacksave(), !dbg !1003
  %3141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !1006
  %3142 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1007
  %3143 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1008
  %3144 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3143, i32 0, i32 1, !dbg !1009
  %3145 = alloca i16, align 2, !dbg !1010
  %3146 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3141, i32 0, i32 1, !dbg !1011
  %3147 = load i16, i16* %3146, align 2, !dbg !1014
  %3148 = and i16 %3147, 44, !dbg !1015
  %3149 = icmp ne i16 %3148, 0, !dbg !1016
  br i1 %3149, label %3150, label %3151, !dbg !1017

3150:                                             ; preds = %3139
  store i16 %3148, i16* %3145, align 2, !dbg !1010
  br label %3157, !dbg !1018

3151:                                             ; preds = %3139
  %3152 = and i16 %3147, 18, !dbg !1010
  %3153 = icmp ne i16 %3152, 0, !dbg !1019
  br i1 %3153, label %3154, label %3156, !dbg !1020

3154:                                             ; preds = %3151
  %3155 = call i16 @computeNumericType(%struct.sqlite3_value* %3141), !dbg !1021
  br label %3157, !dbg !1022

3156:                                             ; preds = %3151
  store i16 0, i16* %3145, align 2, !dbg !1010
  br label %3157, !dbg !1023

3157:                                             ; preds = %3154, %3156, %3150
  %3158 = load i16, i16* %3145, align 2, !dbg !1010
  %3159 = alloca i16, align 2, !dbg !1024
  %3160 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3142, i32 0, i32 1, !dbg !1011
  %3161 = load i16, i16* %3160, align 2, !dbg !1014
  %3162 = and i16 %3161, 44, !dbg !1015
  %3163 = icmp ne i16 %3162, 0, !dbg !1016
  br i1 %3163, label %3164, label %3165, !dbg !1017

3164:                                             ; preds = %3157
  store i16 %3162, i16* %3159, align 2, !dbg !1024
  br label %3171, !dbg !1018

3165:                                             ; preds = %3157
  %3166 = and i16 %3161, 18, !dbg !1024
  %3167 = icmp ne i16 %3166, 0, !dbg !1019
  br i1 %3167, label %3168, label %3170, !dbg !1020

3168:                                             ; preds = %3165
  %3169 = call i16 @computeNumericType(%struct.sqlite3_value* %3142), !dbg !1021
  br label %3171, !dbg !1022

3170:                                             ; preds = %3165
  store i16 0, i16* %3159, align 2, !dbg !1024
  br label %3171, !dbg !1023

3171:                                             ; preds = %3168, %3170, %3164
  %3172 = load i16, i16* %3159, align 2, !dbg !1024
  %3173 = load i16, i16* %3146, align 2, !dbg !1025
  %3174 = load i16, i16* %3160, align 2, !dbg !1026
  %3175 = or i16 %3173, %3174, !dbg !1027
  %3176 = and i16 %3158, %3172, !dbg !1028
  %3177 = and i16 %3176, 4, !dbg !1029
  %3178 = icmp ne i16 %3177, 0, !dbg !1030
  br i1 %3178, label %3179, label %3196, !dbg !1031

3179:                                             ; preds = %3171
  %3180 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3141, i32 0, i32 0, !dbg !1032
  %3181 = bitcast %union.MemValue* %3180 to i64*, !dbg !1033
  %3182 = load i64, i64* %3181, align 4, !dbg !1034
  %3183 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3142, i32 0, i32 0, !dbg !1035
  %3184 = bitcast %union.MemValue* %3183 to i64*, !dbg !1036
  %3185 = load i64, i64* %3184, align 4, !dbg !1037
  %3186 = alloca i64, align 8, !dbg !1038
  store i64 %3185, i64* %3186, align 4, !dbg !1039
  %3187 = call i32 @sqlite3SubInt64(i64* %3186, i64 %3182), !dbg !1040
  %3188 = icmp eq i32 %3187, 0, !dbg !1041
  br i1 %3188, label %3189, label %3199, !dbg !1042

3189:                                             ; preds = %3179
  %3190 = load i64, i64* %3186, align 4, !dbg !1043
  %3191 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3143, i32 0, i32 0, !dbg !1044
  %3192 = bitcast %union.MemValue* %3191 to i64*, !dbg !1045
  store i64 %3190, i64* %3192, align 4, !dbg !1046
  %3193 = load i16, i16* %3144, align 2, !dbg !1047
  %3194 = and i16 %3193, 15936, !dbg !1047
  %3195 = or i16 %3194, 4, !dbg !1047
  store i16 %3195, i16* %3144, align 2, !dbg !1047
  br label %3217, !dbg !1048

3196:                                             ; preds = %3171
  %3197 = and i16 %3175, 1, !dbg !1049
  %3198 = icmp ne i16 %3197, 0, !dbg !1050
  br i1 %3198, label %3211, label %3199, !dbg !1051

3199:                                             ; preds = %3196, %3179
  %3200 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %3141), !dbg !1052
  %3201 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %3142), !dbg !1053
  %3202 = fsub double %3201, %3200, !dbg !1054
  %3203 = call i32 @sqlite3IsNaN(double %3202), !dbg !1055
  %3204 = icmp ne i32 %3203, 0, !dbg !1056
  br i1 %3204, label %3211, label %3205, !dbg !1057

3205:                                             ; preds = %3199
  %3206 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3143, i32 0, i32 0, !dbg !1058
  %3207 = bitcast %union.MemValue* %3206 to double*, !dbg !1059
  store double %3202, double* %3207, align 8, !dbg !1060
  %3208 = load i16, i16* %3144, align 2, !dbg !1047
  %3209 = and i16 %3208, 15936, !dbg !1047
  %3210 = or i16 %3209, 8, !dbg !1047
  store i16 %3210, i16* %3144, align 2, !dbg !1047
  br label %3217, !dbg !1061

3211:                                             ; preds = %3196, %3199
  %3212 = load i16, i16* %3144, align 2, !dbg !1062
  %3213 = and i16 %3212, 9216, !dbg !1062
  %3214 = icmp ne i16 %3213, 0, !dbg !1062
  br i1 %3214, label %3215, label %3216, !dbg !1062

3215:                                             ; preds = %3211
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3143), !dbg !1062
  br label %3217, !dbg !1062

3216:                                             ; preds = %3211
  store i16 1, i16* %3144, align 2, !dbg !1062
  br label %3217, !dbg !1062

3217:                                             ; preds = %3215, %3216, %3189, %3205
  call void @llvm.stackrestore(i8* %3140), !dbg !1063
  br label %3218, !dbg !75

3218:                                             ; preds = %17, %3217
  %3219 = call i8* @llvm.stacksave(), !dbg !1003
  %3220 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1006
  %3221 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !1007
  %3222 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !1008
  %3223 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3222, i32 0, i32 1, !dbg !1009
  %3224 = alloca i16, align 2, !dbg !1010
  %3225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3220, i32 0, i32 1, !dbg !1011
  %3226 = load i16, i16* %3225, align 2, !dbg !1014
  %3227 = and i16 %3226, 44, !dbg !1015
  %3228 = icmp ne i16 %3227, 0, !dbg !1016
  br i1 %3228, label %3229, label %3230, !dbg !1017

3229:                                             ; preds = %3218
  store i16 %3227, i16* %3224, align 2, !dbg !1010
  br label %3236, !dbg !1018

3230:                                             ; preds = %3218
  %3231 = and i16 %3226, 18, !dbg !1010
  %3232 = icmp ne i16 %3231, 0, !dbg !1019
  br i1 %3232, label %3233, label %3235, !dbg !1020

3233:                                             ; preds = %3230
  %3234 = call i16 @computeNumericType(%struct.sqlite3_value* %3220), !dbg !1021
  br label %3236, !dbg !1022

3235:                                             ; preds = %3230
  store i16 0, i16* %3224, align 2, !dbg !1010
  br label %3236, !dbg !1023

3236:                                             ; preds = %3233, %3235, %3229
  %3237 = load i16, i16* %3224, align 2, !dbg !1010
  %3238 = alloca i16, align 2, !dbg !1024
  %3239 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3221, i32 0, i32 1, !dbg !1011
  %3240 = load i16, i16* %3239, align 2, !dbg !1014
  %3241 = and i16 %3240, 44, !dbg !1015
  %3242 = icmp ne i16 %3241, 0, !dbg !1016
  br i1 %3242, label %3243, label %3244, !dbg !1017

3243:                                             ; preds = %3236
  store i16 %3241, i16* %3238, align 2, !dbg !1024
  br label %3250, !dbg !1018

3244:                                             ; preds = %3236
  %3245 = and i16 %3240, 18, !dbg !1024
  %3246 = icmp ne i16 %3245, 0, !dbg !1019
  br i1 %3246, label %3247, label %3249, !dbg !1020

3247:                                             ; preds = %3244
  %3248 = call i16 @computeNumericType(%struct.sqlite3_value* %3221), !dbg !1021
  br label %3250, !dbg !1022

3249:                                             ; preds = %3244
  store i16 0, i16* %3238, align 2, !dbg !1024
  br label %3250, !dbg !1023

3250:                                             ; preds = %3247, %3249, %3243
  %3251 = load i16, i16* %3238, align 2, !dbg !1024
  %3252 = load i16, i16* %3225, align 2, !dbg !1025
  %3253 = load i16, i16* %3239, align 2, !dbg !1026
  %3254 = or i16 %3252, %3253, !dbg !1027
  %3255 = and i16 %3237, %3251, !dbg !1028
  %3256 = and i16 %3255, 4, !dbg !1029
  %3257 = icmp ne i16 %3256, 0, !dbg !1030
  br i1 %3257, label %3258, label %3275, !dbg !1031

3258:                                             ; preds = %3250
  %3259 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3220, i32 0, i32 0, !dbg !1032
  %3260 = bitcast %union.MemValue* %3259 to i64*, !dbg !1033
  %3261 = load i64, i64* %3260, align 4, !dbg !1034
  %3262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3221, i32 0, i32 0, !dbg !1035
  %3263 = bitcast %union.MemValue* %3262 to i64*, !dbg !1036
  %3264 = load i64, i64* %3263, align 4, !dbg !1037
  %3265 = alloca i64, align 8, !dbg !1038
  store i64 %3264, i64* %3265, align 4, !dbg !1039
  %3266 = call i32 @sqlite3MulInt64(i64* %3265, i64 %3261), !dbg !1064
  %3267 = icmp eq i32 %3266, 0, !dbg !1065
  br i1 %3267, label %3268, label %3278, !dbg !1066

3268:                                             ; preds = %3258
  %3269 = load i64, i64* %3265, align 4, !dbg !1043
  %3270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3222, i32 0, i32 0, !dbg !1044
  %3271 = bitcast %union.MemValue* %3270 to i64*, !dbg !1045
  store i64 %3269, i64* %3271, align 4, !dbg !1046
  %3272 = load i16, i16* %3223, align 2, !dbg !1047
  %3273 = and i16 %3272, 15936, !dbg !1047
  %3274 = or i16 %3273, 4, !dbg !1047
  store i16 %3274, i16* %3223, align 2, !dbg !1047
  br label %3296, !dbg !1048

3275:                                             ; preds = %3250
  %3276 = and i16 %3254, 1, !dbg !1049
  %3277 = icmp ne i16 %3276, 0, !dbg !1050
  br i1 %3277, label %3290, label %3278, !dbg !1051

3278:                                             ; preds = %3275, %3258
  %3279 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %3220), !dbg !1052
  %3280 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %3221), !dbg !1053
  %3281 = fmul double %3280, %3279, !dbg !1067
  %3282 = call i32 @sqlite3IsNaN(double %3281), !dbg !1055
  %3283 = icmp ne i32 %3282, 0, !dbg !1056
  br i1 %3283, label %3290, label %3284, !dbg !1057

3284:                                             ; preds = %3278
  %3285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3222, i32 0, i32 0, !dbg !1058
  %3286 = bitcast %union.MemValue* %3285 to double*, !dbg !1059
  store double %3281, double* %3286, align 8, !dbg !1060
  %3287 = load i16, i16* %3223, align 2, !dbg !1047
  %3288 = and i16 %3287, 15936, !dbg !1047
  %3289 = or i16 %3288, 8, !dbg !1047
  store i16 %3289, i16* %3223, align 2, !dbg !1047
  br label %3296, !dbg !1061

3290:                                             ; preds = %3275, %3278
  %3291 = load i16, i16* %3223, align 2, !dbg !1062
  %3292 = and i16 %3291, 9216, !dbg !1062
  %3293 = icmp ne i16 %3292, 0, !dbg !1062
  br i1 %3293, label %3294, label %3295, !dbg !1062

3294:                                             ; preds = %3290
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3222), !dbg !1062
  br label %3296, !dbg !1062

3295:                                             ; preds = %3290
  store i16 1, i16* %3223, align 2, !dbg !1062
  br label %3296, !dbg !1062

3296:                                             ; preds = %3294, %3295, %3268, %3284
  call void @llvm.stackrestore(i8* %3219), !dbg !1063
  br label %3297, !dbg !75

3297:                                             ; preds = %17, %3296
  %3298 = call i8* @llvm.stacksave(), !dbg !1068
  %3299 = alloca i32, align 8, !dbg !1071
  store i32 0, i32* %3299, align 4, !dbg !1072
  %3300 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, i32 1, !dbg !1073
  %3301 = load i8, i8* %3300, align 1, !dbg !1074
  %3302 = icmp eq i8 %3301, -8, !dbg !1075
  br i1 %3302, label %3303, label %3325, !dbg !1076

3303:                                             ; preds = %3297
  %3304 = alloca %struct.sqlite3_context*, align 8, !dbg !1077
  %3305 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1078
  %3306 = bitcast i8* %3305 to %struct.sqlite3_context*, !dbg !1079
  store %struct.sqlite3_context* %3306, %struct.sqlite3_context** %3304, align 8, !dbg !1080
  %3307 = ptrtoint %struct.sqlite3_context* %3306 to i64, !dbg !1081
  %3308 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 0, !dbg !1082
  %3309 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 1, !dbg !1083
  %3310 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 2, !dbg !1084
  %3311 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 3, !dbg !1085
  %3312 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 4, !dbg !1086
  %3313 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 5, !dbg !1087
  %3314 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 6, !dbg !1088
  %3315 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 7, !dbg !1089
  %3316 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3306, i32 0, i32 8, !dbg !1090
  %3317 = bitcast [1 x %struct.sqlite3_value*]* %3316 to %struct.sqlite3_value**, !dbg !1091
  %3318 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, i32 6, i32 0, !dbg !1092
  %3319 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %3317, i32 1, !dbg !1093
  %3320 = bitcast %struct.sqlite3_value** %3319 to %struct.sqlite3_value*, !dbg !1094
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %3320, %struct.sqlite3* %13, i16 1), !dbg !1095
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %3310, align 8, !dbg !1096
  store %struct.sqlite3_value* %3320, %struct.sqlite3_value** %3308, align 8, !dbg !1097
  %3321 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, !dbg !1098
  %3322 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3321, i32 0, i32 6, !dbg !1099
  %3323 = bitcast %union.p4union* %3322 to %struct.FuncDef**, !dbg !1100
  %3324 = load %struct.FuncDef*, %struct.FuncDef** %3323, align 8, !dbg !1101
  store %struct.FuncDef* %3324, %struct.FuncDef** %3309, align 8, !dbg !1102
  store i32 45, i32* %3312, align 4, !dbg !1103
  store %struct.Vdbe* %0, %struct.Vdbe** %3311, align 8, !dbg !1104
  store i8 0, i8* %3314, align 1, !dbg !1105
  store i32 0, i32* %3313, align 4, !dbg !1106
  store i8 1, i8* %3315, align 1, !dbg !1107
  store i8 -16, i8* %3300, align 1, !dbg !1108
  store i8* %3305, i8** %3318, align 8, !dbg !1109
  br label %3325, !dbg !1110

3325:                                             ; preds = %3303, %3297
  %3326 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 45, i32 6, i32 0, !dbg !1111
  %3327 = bitcast i8** %3326 to %struct.sqlite3_context**, !dbg !1112
  %3328 = load %struct.sqlite3_context*, %struct.sqlite3_context** %3327, align 8, !dbg !1113
  %3329 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 0, !dbg !1114
  %3330 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 1, !dbg !1115
  %3331 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 5, !dbg !1116
  %3332 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 6, !dbg !1117
  %3333 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 7, !dbg !1118
  %3334 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 8, !dbg !1119
  %3335 = bitcast [1 x %struct.sqlite3_value*]* %3334 to %struct.sqlite3_value**, !dbg !1120
  %3336 = alloca i32, align 8, !dbg !1121
  %3337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1122
  %3338 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %3328, i32 0, i32 2, !dbg !1123
  %3339 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3338, align 8, !dbg !1124
  %3340 = icmp ne %struct.sqlite3_value* %3339, %3337, !dbg !1125
  br i1 %3340, label %3341, label %3354, !dbg !1126

3341:                                             ; preds = %3325
  store %struct.sqlite3_value* %3337, %struct.sqlite3_value** %3338, align 8, !dbg !1127
  %3342 = load i8, i8* %3333, align 1, !dbg !1128
  %3343 = zext i8 %3342 to i32, !dbg !1129
  %3344 = add i32 %3343, -1, !dbg !1130
  %3345 = alloca i32, align 8, !dbg !1131
  store i32 %3344, i32* %3345, align 4, !dbg !1132
  br label %3351, !dbg !1133

3346:                                             ; preds = %3351
  %3347 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %3335, i32 %3352, !dbg !1134
  %3348 = add i32 %3352, 21, !dbg !1135
  %3349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3348, !dbg !1136
  store %struct.sqlite3_value* %3349, %struct.sqlite3_value** %3347, align 8, !dbg !1137
  %3350 = add i32 %3352, -1, !dbg !1138
  store i32 %3350, i32* %3345, align 4, !dbg !1139
  br label %3351, !dbg !1140

3351:                                             ; preds = %3346, %3341
  %3352 = load i32, i32* %3345, align 4, !dbg !1141
  %3353 = icmp sge i32 %3352, 0, !dbg !1142
  br i1 %3353, label %3346, label %3354, !dbg !1143

3354:                                             ; preds = %3351, %3325
  %3355 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3337, i32 0, i32 4, !dbg !1144
  %3356 = load i32, i32* %3355, align 4, !dbg !1145
  %3357 = add i32 %3356, 1, !dbg !1146
  store i32 %3357, i32* %3355, align 4, !dbg !1147
  %3358 = load %struct.FuncDef*, %struct.FuncDef** %3330, align 8, !dbg !1148
  %3359 = load i8, i8* %3333, align 1, !dbg !1149
  %3360 = zext i8 %3359 to i32, !dbg !1150
  %3361 = getelementptr %struct.FuncDef, %struct.FuncDef* %3358, i32 0, i32 4, !dbg !1151
  %3362 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %3361, align 8, !dbg !1152
  call void %3362(%struct.sqlite3_context* %3328, i32 %3360, %struct.sqlite3_value** %3335), !dbg !1153
  %3363 = load i32, i32* %3331, align 4, !dbg !1154
  %3364 = icmp ne i32 %3363, 0, !dbg !1155
  br i1 %3364, label %3365, label %3380, !dbg !1156

3365:                                             ; preds = %3354
  %3366 = icmp sgt i32 %3363, 0, !dbg !1157
  br i1 %3366, label %3367, label %3371, !dbg !1158

3367:                                             ; preds = %3365
  %3368 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3329, align 8, !dbg !1159
  %3369 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %3368), !dbg !1160
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %3369), !dbg !1161
  %3370 = load i32, i32* %3331, align 4, !dbg !1162
  store i32 %3370, i32* %3299, align 4, !dbg !1163
  br label %3371, !dbg !1164

3371:                                             ; preds = %3367, %3365
  %3372 = load i8, i8* %3332, align 1, !dbg !1165
  %3373 = icmp ne i8 %3372, 0, !dbg !1166
  br i1 %3373, label %3374, label %3376, !dbg !1167

3374:                                             ; preds = %3371
  store i32 23, i32* %3336, align 4, !dbg !1168
  %3375 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1169
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %3375, i64 1), !dbg !1170
  store i8 0, i8* %3332, align 1, !dbg !1171
  br label %3376, !dbg !1172

3376:                                             ; preds = %3374, %3371
  %3377 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3329, align 8, !dbg !1173
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %3377), !dbg !1174
  %3378 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3377, i32 0, i32 1, !dbg !1175
  store i16 1, i16* %3378, align 2, !dbg !1176
  store i32 0, i32* %3331, align 4, !dbg !1177
  %3379 = load i32, i32* %3299, align 4, !dbg !1178
  br label %3380, !dbg !1179

3380:                                             ; preds = %3354, %3376
  call void @llvm.stackrestore(i8* %3298), !dbg !1180
  br label %3381, !dbg !75

3381:                                             ; preds = %17, %3380
  %3382 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !1181
  %3383 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %3382, i32 0), !dbg !1184
  %3384 = icmp ne i32 %3383, 0, !dbg !1185
  br i1 %3384, label %3640, label %3385, !dbg !1186

3385:                                             ; preds = %17, %3381
  %3386 = call i8* @llvm.stacksave(), !dbg !266
  %3387 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %3388 = load i8, i8* %3387, align 1, !dbg !270
  %3389 = alloca i32, align 4, !dbg !271
  store i32 6, i32* %3389, align 4, !dbg !272
  %3390 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !273
  %3391 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %3392 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3390, align 8, !dbg !275
  store %struct.VdbeCursor* %3392, %struct.VdbeCursor** %3391, align 8, !dbg !276
  %3393 = alloca i8*, align 8, !dbg !277
  %3394 = alloca i32, align 4, !dbg !278
  %3395 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3391, i32* %3389), !dbg !279
  %3396 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3391, align 8, !dbg !280
  %3397 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !281
  %3398 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 16, !dbg !282
  %3399 = load i16, i16* %3398, align 2, !dbg !283
  %3400 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 19, !dbg !284
  %3401 = load i32*, i32** %3400, align 8, !dbg !285
  %3402 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 0, !dbg !286
  %3403 = load i8, i8* %3402, align 1, !dbg !287
  %3404 = icmp ne i8 %3403, 3, !dbg !288
  %3405 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 2, !dbg !289
  %3406 = load i8, i8* %3405, align 1, !dbg !290
  %3407 = icmp ne i8 %3406, 0, !dbg !291
  %3408 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 14, !dbg !292
  %3409 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 21, !dbg !293
  %3410 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 22, !dbg !294
  %3411 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 20, !dbg !295
  %3412 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 17, !dbg !296
  %3413 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 9, !dbg !297
  %3414 = load i32, i32* %3413, align 4, !dbg !298
  %3415 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %3416 = load i32, i32* %3415, align 4, !dbg !300
  %3417 = icmp ne i32 %3414, %3416, !dbg !301
  br i1 %3417, label %3418, label %3460, !dbg !302

3418:                                             ; preds = %3385
  br i1 %3407, label %3440, label %3435, !dbg !303

3419:                                             ; preds = %3435, %3442
  %3420 = load i32, i32* %3415, align 4, !dbg !304
  store i32 %3420, i32* %3413, align 4, !dbg !305
  %3421 = load i8*, i8** %3411, align 8, !dbg !306
  %3422 = load i8, i8* %3421, align 1, !dbg !307
  %3423 = icmp sgt i8 %3422, -1, !dbg !310
  br i1 %3423, label %3424, label %3426, !dbg !311

3424:                                             ; preds = %3419
  %3425 = zext i8 %3422 to i32, !dbg !312
  store i32 %3425, i32* %3401, align 4, !dbg !313
  store i32 1, i32* %3408, align 4, !dbg !314
  br label %3429, !dbg !315

3426:                                             ; preds = %3419
  %3427 = call i8 @sqlite3GetVarint32(i8* %3421, i32* %3401), !dbg !316
  %3428 = zext i8 %3427 to i32, !dbg !317
  store i32 %3428, i32* %3408, align 4, !dbg !318
  br label %3429, !dbg !319

3429:                                             ; preds = %3426, %3424
  store i16 0, i16* %3412, align 2, !dbg !320
  %3430 = load i32, i32* %3410, align 4, !dbg !321
  %3431 = load i32, i32* %3401, align 4, !dbg !322
  %3432 = icmp ult i32 %3430, %3431, !dbg !323
  br i1 %3432, label %3434, label %3433, !dbg !324

3433:                                             ; preds = %3429
  store i8* %3421, i8** %3393, align 8, !dbg !325
  br label %3551, !dbg !326

3434:                                             ; preds = %3429
  store i8* null, i8** %3411, align 8, !dbg !327
  store i32 0, i32* %3410, align 4, !dbg !328
  br label %3460, !dbg !329

3435:                                             ; preds = %3418
  %3436 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 12, i32 0, !dbg !330
  %3437 = load %struct.BtCursor*, %struct.BtCursor** %3436, align 8, !dbg !331
  %3438 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3437), !dbg !332
  store i32 %3438, i32* %3409, align 4, !dbg !333
  %3439 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3437, i32* %3410), !dbg !334
  store i8* %3439, i8** %3411, align 8, !dbg !335
  br label %3419, !dbg !336

3440:                                             ; preds = %3418
  %3441 = icmp eq i8 %3403, 3, !dbg !337
  br i1 %3441, label %3442, label %3453, !dbg !338

3442:                                             ; preds = %3440
  %3443 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 10, !dbg !339
  %3444 = load i32, i32* %3443, align 4, !dbg !340
  %3445 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3444, !dbg !341
  %3446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3445, i32 0, i32 1, !dbg !342
  %3447 = load i16, i16* %3446, align 2, !dbg !343
  %3448 = and i16 %3447, 16, !dbg !344
  %3449 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3445, i32 0, i32 4, !dbg !345
  %3450 = load i32, i32* %3449, align 4, !dbg !346
  store i32 %3450, i32* %3409, align 4, !dbg !347
  store i32 %3450, i32* %3410, align 4, !dbg !348
  %3451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3445, i32 0, i32 5, !dbg !349
  %3452 = load i8*, i8** %3451, align 8, !dbg !350
  store i8* %3452, i8** %3411, align 8, !dbg !351
  br label %3419, !dbg !352

3453:                                             ; preds = %3440
  %3454 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 1, !dbg !353
  %3455 = load i16, i16* %3454, align 2, !dbg !353
  %3456 = and i16 %3455, 9216, !dbg !353
  %3457 = icmp ne i16 %3456, 0, !dbg !353
  br i1 %3457, label %3458, label %3459, !dbg !353

3458:                                             ; preds = %3453
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3397), !dbg !353
  br label %3639, !dbg !353

3459:                                             ; preds = %3453
  store i16 1, i16* %3454, align 2, !dbg !353
  br label %3639, !dbg !353

3460:                                             ; preds = %3434, %3385
  %3461 = load i16, i16* %3412, align 2, !dbg !354
  %3462 = icmp ule i16 %3461, 0, !dbg !355
  br i1 %3462, label %3543, label %3540, !dbg !356

3463:                                             ; preds = %3540, %3629
  %3464 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 1, !dbg !357
  %3465 = load i16, i16* %3464, align 2, !dbg !358
  %3466 = and i16 9216, %3465, !dbg !359
  %3467 = icmp eq i16 0, %3466, !dbg !360
  br i1 %3467, label %3468, label %3472, !dbg !361

3468:                                             ; preds = %3463
  %3469 = icmp ne i16 %3466, 0, !dbg !362
  br i1 %3469, label %3470, label %3471, !dbg !362

3470:                                             ; preds = %3468
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3397), !dbg !362
  br label %3472, !dbg !362

3471:                                             ; preds = %3468
  store i16 1, i16* %3464, align 2, !dbg !362
  br label %3472, !dbg !362

3472:                                             ; preds = %3470, %3471, %3463
  %3473 = load i32, i32* %3394, align 4, !dbg !363
  %3474 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 23, i32 0, !dbg !364
  %3475 = load i32, i32* %3474, align 4, !dbg !365
  %3476 = load i32, i32* %3410, align 4, !dbg !366
  %3477 = getelementptr i32, i32* %3401, i32 1, !dbg !367
  %3478 = load i32, i32* %3477, align 4, !dbg !368
  %3479 = icmp sge i32 %3476, %3478, !dbg !369
  br i1 %3479, label %3480, label %3519, !dbg !370

3480:                                             ; preds = %3472
  %3481 = load i8*, i8** %3411, align 8, !dbg !371
  %3482 = ptrtoint i8* %3481 to i64, !dbg !372
  %3483 = load i32, i32* %3401, align 4, !dbg !374
  %3484 = zext i32 %3483 to i64, !dbg !375
  %3485 = add i64 %3482, %3484, !dbg !376
  %3486 = inttoptr i64 %3485 to i8*, !dbg !377
  store i8* %3486, i8** %3393, align 8, !dbg !378
  %3487 = load i32, i32* %3394, align 4, !dbg !379
  %3488 = icmp ult i32 %3487, 12, !dbg !380
  br i1 %3488, label %3489, label %3491, !dbg !381

3489:                                             ; preds = %3480
  %3490 = call i32 @sqlite3VdbeSerialGet(i8* %3486, i32 %3487, %struct.sqlite3_value* %3397), !dbg !382
  br label %3639, !dbg !383

3491:                                             ; preds = %3480
  %3492 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %3492, align 2, !dbg !385
  %3493 = getelementptr i16, i16* %3492, i32 1, !dbg !386
  store i16 514, i16* %3493, align 2, !dbg !387
  %3494 = load i32, i32* %3394, align 4, !dbg !388
  %3495 = sub i32 %3494, 12, !dbg !389
  %3496 = lshr i32 %3495, 1, !dbg !390
  %3497 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 4, !dbg !391
  store i32 %3496, i32* %3497, align 4, !dbg !392
  %3498 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 2, !dbg !393
  store i8 %3388, i8* %3498, align 1, !dbg !394
  %3499 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 5, !dbg !395
  %3500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 7, !dbg !396
  %3501 = load i32, i32* %3500, align 4, !dbg !397
  %3502 = add i32 %3496, 2, !dbg !398
  %3503 = icmp slt i32 %3501, %3502, !dbg !399
  br i1 %3503, label %3504, label %3506, !dbg !400

3504:                                             ; preds = %3491
  store i16 1, i16* %3464, align 2, !dbg !401
  %3505 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3397, i32 %3502, i32 0), !dbg !402
  br label %3509, !dbg !403

3506:                                             ; preds = %3491
  %3507 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 6, !dbg !404
  %3508 = load i8*, i8** %3507, align 8, !dbg !405
  store i8* %3508, i8** %3499, align 8, !dbg !406
  br label %3509, !dbg !407

3509:                                             ; preds = %3506, %3504
  %3510 = zext i32 %3496 to i64, !dbg !408
  %3511 = load i8*, i8** %3499, align 8, !dbg !409
  %3512 = load i8*, i8** %3393, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3511, i8* %3512, i64 %3510, i1 false), !dbg !411
  %3513 = getelementptr i8, i8* %3511, i32 %3496, !dbg !412
  store i8 0, i8* %3513, align 1, !dbg !413
  %3514 = add i32 %3496, 1, !dbg !414
  %3515 = getelementptr i8, i8* %3511, i32 %3514, !dbg !415
  store i8 0, i8* %3515, align 1, !dbg !416
  %3516 = and i32 %3494, 1, !dbg !417
  %3517 = getelementptr i16, i16* %3492, i32 %3516, !dbg !418
  %3518 = load i16, i16* %3517, align 2, !dbg !419
  store i16 %3518, i16* %3464, align 2, !dbg !420
  br label %3639, !dbg !421

3519:                                             ; preds = %3472
  %3520 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 2, !dbg !422
  store i8 %3388, i8* %3520, align 1, !dbg !423
  %3521 = load i32, i32* %3394, align 4, !dbg !424
  %3522 = and i32 %3521, 1, !dbg !425
  %3523 = icmp eq i32 %3522, 0, !dbg !426
  %3524 = icmp sge i32 %3521, 12, !dbg !427
  %3525 = and i1 %3524, %3523, !dbg !428
  %3526 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3521), !dbg !429
  %3527 = icmp eq i32 %3526, 0, !dbg !430
  br i1 %3527, label %3538, label %3528, !dbg !431

3528:                                             ; preds = %3519
  %3529 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 12, i32 0, !dbg !432
  %3530 = load %struct.BtCursor*, %struct.BtCursor** %3529, align 8, !dbg !433
  %3531 = load i32, i32* %3401, align 4, !dbg !435
  %3532 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3530, i32 %3531, i32 %3526, %struct.sqlite3_value* %3397), !dbg !436
  %3533 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 5, !dbg !437
  %3534 = load i8*, i8** %3533, align 8, !dbg !438
  %3535 = call i32 @sqlite3VdbeSerialGet(i8* %3534, i32 %3521, %struct.sqlite3_value* %3397), !dbg !439
  %3536 = load i16, i16* %3464, align 2, !dbg !440
  %3537 = and i16 %3536, -4097, !dbg !441
  store i16 %3537, i16* %3464, align 2, !dbg !442
  br label %3639, !dbg !443

3538:                                             ; preds = %3519
  %3539 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3521, %struct.sqlite3_value* %3397), !dbg !444
  br label %3639, !dbg !445

3540:                                             ; preds = %3460
  %3541 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 23, i32 0, !dbg !446
  %3542 = load i32, i32* %3541, align 4, !dbg !447
  store i32 %3542, i32* %3394, align 4, !dbg !448
  br label %3463, !dbg !449

3543:                                             ; preds = %3460
  %3544 = load i32, i32* %3408, align 4, !dbg !450
  %3545 = load i32, i32* %3401, align 4, !dbg !451
  %3546 = icmp ult i32 %3544, %3545, !dbg !452
  br i1 %3546, label %3547, label %3628, !dbg !453

3547:                                             ; preds = %3543
  %3548 = load i8*, i8** %3411, align 8, !dbg !454
  %3549 = icmp eq i8* %3548, null, !dbg !455
  br i1 %3549, label %3551, label %3550, !dbg !456

3550:                                             ; preds = %3547
  store i8* %3548, i8** %3393, align 8, !dbg !457
  br label %3551, !dbg !458

3551:                                             ; preds = %3550, %3547, %3433
  %3552 = alloca i32, align 4, !dbg !459
  %3553 = load i16, i16* %3412, align 2, !dbg !460
  %3554 = zext i16 %3553 to i32, !dbg !461
  store i32 %3554, i32* %3552, align 4, !dbg !462
  %3555 = alloca i64, align 8, !dbg !463
  %3556 = getelementptr i32, i32* %3401, i32 %3554, !dbg !464
  %3557 = load i32, i32* %3556, align 4, !dbg !465
  %3558 = zext i32 %3557 to i64, !dbg !466
  store i64 %3558, i64* %3555, align 4, !dbg !467
  %3559 = load i8*, i8** %3393, align 8, !dbg !468
  %3560 = load i32, i32* %3408, align 4, !dbg !469
  %3561 = alloca i8*, align 8, !dbg !470
  %3562 = getelementptr i8, i8* %3559, i32 %3560, !dbg !471
  store i8* %3562, i8** %3561, align 8, !dbg !472
  %3563 = load i32, i32* %3401, align 4, !dbg !473
  %3564 = getelementptr i8, i8* %3559, i32 %3563, !dbg !474
  br label %3565, !dbg !475

3565:                                             ; preds = %3572, %3551
  %3566 = load i32, i32* %3552, align 4, !dbg !476
  %3567 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3396, i32 0, i32 23, i32 %3566, !dbg !477
  %3568 = load i8*, i8** %3561, align 8, !dbg !478
  %3569 = load i8, i8* %3568, align 1, !dbg !479
  %3570 = zext i8 %3569 to i32, !dbg !480
  store i32 %3570, i32* %3394, align 4, !dbg !481
  store i32 %3570, i32* %3567, align 4, !dbg !482
  %3571 = icmp sgt i8 %3569, -1, !dbg !483
  br i1 %3571, label %3595, label %3586, !dbg !484

3572:                                             ; preds = %3586, %3595
  %3573 = load i32, i32* %3552, align 4, !dbg !485
  %3574 = add i32 %3573, 1, !dbg !486
  store i32 %3574, i32* %3552, align 4, !dbg !487
  %3575 = load i64, i64* %3555, align 4, !dbg !488
  %3576 = and i64 4294967295, %3575, !dbg !489
  %3577 = trunc i64 %3576 to i32, !dbg !490
  %3578 = getelementptr i32, i32* %3401, i32 %3574, !dbg !491
  store i32 %3577, i32* %3578, align 4, !dbg !492
  %3579 = load i32, i32* %3552, align 4, !dbg !493
  %3580 = icmp sle i32 %3579, 0, !dbg !494
  %3581 = load i8*, i8** %3561, align 8, !dbg !495
  %3582 = ptrtoint i8* %3581 to i64, !dbg !496
  %3583 = ptrtoint i8* %3564 to i64, !dbg !497
  %3584 = icmp ult i64 %3582, %3583, !dbg !498
  %3585 = and i1 %3580, %3584, !dbg !499
  br i1 %3585, label %3565, label %3604, !dbg !500

3586:                                             ; preds = %3565
  %3587 = load i8*, i8** %3561, align 8, !dbg !501
  %3588 = call i8 @sqlite3GetVarint32(i8* %3587, i32* %3394), !dbg !502
  %3589 = getelementptr i8, i8* %3587, i8 %3588, !dbg !503
  store i8* %3589, i8** %3561, align 8, !dbg !504
  %3590 = load i32, i32* %3394, align 4, !dbg !505
  store i32 %3590, i32* %3567, align 4, !dbg !506
  %3591 = load i64, i64* %3555, align 4, !dbg !507
  %3592 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3590), !dbg !508
  %3593 = zext i32 %3592 to i64, !dbg !509
  %3594 = add i64 %3591, %3593, !dbg !510
  store i64 %3594, i64* %3555, align 4, !dbg !511
  br label %3572, !dbg !512

3595:                                             ; preds = %3565
  %3596 = getelementptr i8, i8* %3568, i32 1, !dbg !513
  store i8* %3596, i8** %3561, align 8, !dbg !514
  %3597 = load i32, i32* %3394, align 4, !dbg !515
  %3598 = trunc i32 %3597 to i8, !dbg !516
  %3599 = getelementptr i8, i8* %4, i8 %3598, !dbg !517
  %3600 = load i8, i8* %3599, align 1, !dbg !518
  %3601 = zext i8 %3600 to i64, !dbg !519
  %3602 = load i64, i64* %3555, align 4, !dbg !520
  %3603 = add i64 %3602, %3601, !dbg !521
  store i64 %3603, i64* %3555, align 4, !dbg !522
  br label %3572, !dbg !523

3604:                                             ; preds = %3572
  %3605 = load i64, i64* %3555, align 4, !dbg !524
  %3606 = load i32, i32* %3409, align 4, !dbg !525
  %3607 = zext i32 %3606 to i64, !dbg !526
  %3608 = icmp uge i64 %3582, %3583, !dbg !527
  %3609 = icmp ugt i64 %3582, %3583, !dbg !528
  %3610 = icmp ne i64 %3605, %3607, !dbg !529
  %3611 = icmp ugt i64 %3605, %3607, !dbg !530
  %3612 = or i1 %3609, %3610, !dbg !531
  %3613 = and i1 %3608, %3612, !dbg !532
  %3614 = or i1 %3613, %3611, !dbg !533
  br i1 %3614, label %3615, label %3619, !dbg !534

3615:                                             ; preds = %3604
  %3616 = load i32, i32* %3401, align 4, !dbg !535
  %3617 = icmp eq i32 %3616, 0, !dbg !536
  br i1 %3617, label %3618, label %3619, !dbg !537

3618:                                             ; preds = %3615
  store i32 0, i32* %3552, align 4, !dbg !538
  store i8* %3564, i8** %3561, align 8, !dbg !539
  br label %3619, !dbg !540

3619:                                             ; preds = %3618, %3615, %3604
  %3620 = load i32, i32* %3552, align 4, !dbg !541
  %3621 = trunc i32 %3620 to i16, !dbg !542
  store i16 %3621, i16* %3412, align 2, !dbg !543
  %3622 = load i8*, i8** %3561, align 8, !dbg !544
  %3623 = ptrtoint i8* %3622 to i64, !dbg !545
  %3624 = load i8*, i8** %3393, align 8, !dbg !546
  %3625 = ptrtoint i8* %3624 to i64, !dbg !547
  %3626 = sub i64 %3623, %3625, !dbg !548
  %3627 = trunc i64 %3626 to i32, !dbg !549
  store i32 %3627, i32* %3408, align 4, !dbg !550
  br label %3629, !dbg !551

3628:                                             ; preds = %3543
  store i32 0, i32* %3394, align 4, !dbg !552
  br label %3629, !dbg !553

3629:                                             ; preds = %3619, %3628
  %3630 = load i16, i16* %3412, align 2, !dbg !554
  %3631 = icmp sle i16 %3630, 0, !dbg !555
  br i1 %3631, label %3632, label %3463, !dbg !556

3632:                                             ; preds = %3629
  %3633 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3397, i32 0, i32 1, !dbg !557
  %3634 = load i16, i16* %3633, align 2, !dbg !557
  %3635 = and i16 %3634, 9216, !dbg !557
  %3636 = icmp ne i16 %3635, 0, !dbg !557
  br i1 %3636, label %3637, label %3638, !dbg !557

3637:                                             ; preds = %3632
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3397), !dbg !557
  br label %3639, !dbg !557

3638:                                             ; preds = %3632
  store i16 1, i16* %3633, align 2, !dbg !557
  br label %3639, !dbg !557

3639:                                             ; preds = %3637, %3638, %3509, %3489, %3528, %3538, %3458, %3459
  call void @llvm.stackrestore(i8* %3386), !dbg !558
  br label %3640, !dbg !75

3640:                                             ; preds = %17, %3639, %3381
  %3641 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 48, !dbg !63
  %3642 = call i8* @llvm.stacksave(), !dbg !66
  %3643 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3641, i32 0, i32 4, !dbg !67
  %3644 = load i32, i32* %3643, align 4, !dbg !70
  %3645 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3644, !dbg !71
  %3646 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3645, i32 0, i32 1, !dbg !66
  %3647 = load i16, i16* %3646, align 2, !dbg !66
  %3648 = and i16 %3647, 9216, !dbg !66
  %3649 = icmp ne i16 %3648, 0, !dbg !66
  %3650 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %3649, label %3651, label %3653, !dbg !66

3651:                                             ; preds = %3640
  %3652 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %3645), !dbg !66
  store %struct.sqlite3_value* %3652, %struct.sqlite3_value** %3650, align 8, !dbg !66
  br label %3654, !dbg !66

3653:                                             ; preds = %3640
  store i16 4, i16* %3646, align 2, !dbg !66
  store %struct.sqlite3_value* %3645, %struct.sqlite3_value** %3650, align 8, !dbg !66
  br label %3654, !dbg !66

3654:                                             ; preds = %3653, %3651
  %3655 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3650, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %3642), !dbg !66
  %3656 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3655, i32 0, i32 0, i32 0, !dbg !72
  %3657 = bitcast double* %3656 to i64*, !dbg !73
  store i64 1, i64* %3657, align 4, !dbg !74
  br label %3658, !dbg !75

3658:                                             ; preds = %17, %3654
  %3659 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !1187
  %3660 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3659, align 8, !dbg !1190
  %3661 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %3660), !dbg !1191
  %3662 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3660, i32 0, i32 9, !dbg !1192
  store i32 0, i32* %3662, align 4, !dbg !1193
  %3663 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3660, i32 0, i32 2, !dbg !1194
  %3664 = icmp eq i32 %3661, 0, !dbg !1195
  br i1 %3664, label %3665, label %3666, !dbg !1196

3665:                                             ; preds = %3658
  store i8 0, i8* %3663, align 1, !dbg !1197
  br label %2286, !dbg !1198

3666:                                             ; preds = %3658
  store i8 1, i8* %3663, align 1, !dbg !1199
  br label %3667, !dbg !1200

3667:                                             ; preds = %17, %3666
  %3668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !199
  %3669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3668, i32 0, i32 1, !dbg !202
  store i16 4, i16* %3669, align 2, !dbg !203
  %3670 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3668, i32 0, i32 0, i32 0, !dbg !204
  %3671 = bitcast double* %3670 to i64*, !dbg !205
  store i64 50, i64* %3671, align 4, !dbg !206
  br label %3697, !dbg !207

3672:                                             ; preds = %17
  %3673 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 52, !dbg !63
  %3674 = call i8* @llvm.stacksave(), !dbg !66
  %3675 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3673, i32 0, i32 4, !dbg !67
  %3676 = load i32, i32* %3675, align 4, !dbg !70
  %3677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3676, !dbg !71
  %3678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3677, i32 0, i32 1, !dbg !66
  %3679 = load i16, i16* %3678, align 2, !dbg !66
  %3680 = and i16 %3679, 9216, !dbg !66
  %3681 = icmp ne i16 %3680, 0, !dbg !66
  %3682 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %3681, label %3683, label %3685, !dbg !66

3683:                                             ; preds = %3672
  %3684 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %3677), !dbg !66
  store %struct.sqlite3_value* %3684, %struct.sqlite3_value** %3682, align 8, !dbg !66
  br label %3686, !dbg !66

3685:                                             ; preds = %3672
  store i16 4, i16* %3678, align 2, !dbg !66
  store %struct.sqlite3_value* %3677, %struct.sqlite3_value** %3682, align 8, !dbg !66
  br label %3686, !dbg !66

3686:                                             ; preds = %3685, %3683
  %3687 = load %struct.sqlite3_value*, %struct.sqlite3_value** %3682, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %3674), !dbg !66
  %3688 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3687, i32 0, i32 0, i32 0, !dbg !72
  %3689 = bitcast double* %3688 to i64*, !dbg !73
  store i64 1, i64* %3689, align 4, !dbg !74
  br label %3690, !dbg !75

3690:                                             ; preds = %17, %3686
  %3691 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1201
  %3692 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 0, i32 0, !dbg !1204
  %3693 = bitcast double* %3692 to i64*, !dbg !1205
  %3694 = load i64, i64* %3693, align 4, !dbg !1206
  %3695 = add i64 %3694, 1, !dbg !1207
  %3696 = trunc i64 %3695 to i32, !dbg !1208
  store i32 %3696, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

3697:                                             ; preds = %17, %3667, %2595
  %3698 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !994
  %3699 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3698, i32 0, i32 0, i32 0, !dbg !997
  %3700 = bitcast double* %3699 to i64*, !dbg !998
  %3701 = load i64, i64* %3700, align 4, !dbg !999
  %3702 = icmp sgt i64 %3701, 0, !dbg !1000
  br i1 %3702, label %3703, label %.critedge1, !dbg !1001

3703:                                             ; preds = %3697
  br label %3710, !dbg !1002

.critedge1:                                       ; preds = %3697, %17
  %3704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1201
  %3705 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3704, i32 0, i32 0, i32 0, !dbg !1204
  %3706 = bitcast double* %3705 to i64*, !dbg !1205
  %3707 = load i64, i64* %3706, align 4, !dbg !1206
  %3708 = add i64 %3707, 1, !dbg !1207
  %3709 = trunc i64 %3708 to i32, !dbg !1208
  store i32 %3709, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

3710:                                             ; preds = %3703, %17
  %3711 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 56, !dbg !1211
  %3712 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3711, i32 0, i32 6, !dbg !1214
  %3713 = bitcast %union.p4union* %3712 to %struct.FuncDef**, !dbg !1215
  %3714 = load %struct.FuncDef*, %struct.FuncDef** %3713, align 8, !dbg !1216
  %3715 = call i8* @llvm.stacksave(), !dbg !1217
  %3716 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1218
  %3717 = alloca i32, align 8, !dbg !1219
  %3718 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %3716, %struct.FuncDef* %3714), !dbg !1220
  store i32 %3718, i32* %3717, align 4, !dbg !1221
  %3719 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %3716, i32 1), !dbg !1222
  %3720 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %3716), !dbg !1223
  call void @llvm.stackrestore(i8* %3715), !dbg !1224
  br label %3721, !dbg !75

3721:                                             ; preds = %17, %3710
  %3722 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1225
  %3723 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !1228
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %3723, %struct.sqlite3_value* %3722, i32 4096), !dbg !1229
  br label %3724, !dbg !75

3724:                                             ; preds = %17, %3721
  %3725 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1225
  %3726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 27, !dbg !1228
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %3726, %struct.sqlite3_value* %3725, i32 4096), !dbg !1229
  br label %3727, !dbg !75

3727:                                             ; preds = %17, %3724
  %3728 = call i8* @llvm.stacksave(), !dbg !695
  %3729 = alloca i64, align 8, !dbg !698
  store i64 0, i64* %3729, align 4, !dbg !699
  %3730 = alloca i32, align 8, !dbg !700
  store i32 0, i32* %3730, align 4, !dbg !701
  %3731 = alloca i64, align 8, !dbg !702
  store i64 0, i64* %3731, align 4, !dbg !703
  %3732 = alloca i8*, align 8, !dbg !704
  %3733 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 59, !dbg !705
  %3734 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3733, i32 0, i32 6, !dbg !706
  %3735 = bitcast %union.p4union* %3734 to i8**, !dbg !707
  %3736 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !708
  %3737 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3736, i32 1, !dbg !709
  %3738 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !710
  %3739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 0, i32 1, !dbg !711
  %3740 = load i16, i16* %3739, align 2, !dbg !712
  %3741 = and i16 %3740, 1, !dbg !713
  %3742 = icmp ne i16 %3741, 0, !dbg !713
  %3743 = and i16 %3740, 36, !dbg !714
  %3744 = icmp ne i16 %3743, 0, !dbg !714
  %3745 = and i16 %3740, 8, !dbg !715
  %3746 = icmp ne i16 %3745, 0, !dbg !715
  %3747 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 0, i32 8, !dbg !716
  br i1 %3742, label %3748, label %3756, !dbg !717

3748:                                             ; preds = %3727
  %3749 = and i16 %3740, 16384, !dbg !718
  %3750 = icmp ne i16 %3749, 0, !dbg !718
  br i1 %3750, label %3751, label %3752, !dbg !719

3751:                                             ; preds = %3748
  store i32 10, i32* %3747, align 4, !dbg !720
  br label %3753, !dbg !721

3752:                                             ; preds = %3748
  store i32 0, i32* %3747, align 4, !dbg !722
  br label %3753, !dbg !723

3753:                                             ; preds = %3752, %3751
  %3754 = load i32, i32* %3730, align 4, !dbg !724
  %3755 = add i32 %3754, 1, !dbg !724
  store i32 %3755, i32* %3730, align 4, !dbg !724
  br label %3846, !dbg !725

3756:                                             ; preds = %3727
  br i1 %3744, label %3757, label %3801, !dbg !726

3757:                                             ; preds = %3756
  %3758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 0, i32 0, !dbg !727
  %3759 = bitcast %union.MemValue* %3758 to i64*, !dbg !728
  %3760 = load i64, i64* %3759, align 4, !dbg !729
  %3761 = alloca i64, align 8, !dbg !730
  %3762 = icmp slt i64 %3760, 0, !dbg !731
  br i1 %3762, label %3763, label %3765, !dbg !732

3763:                                             ; preds = %3757
  %3764 = xor i64 %3760, -1, !dbg !733
  store i64 %3764, i64* %3761, align 4, !dbg !734
  br label %3766, !dbg !735

3765:                                             ; preds = %3757
  store i64 %3760, i64* %3761, align 4, !dbg !736
  br label %3766, !dbg !737

3766:                                             ; preds = %3765, %3763
  %3767 = load i32, i32* %3730, align 4, !dbg !738
  %3768 = add i32 %3767, 1, !dbg !738
  store i32 %3768, i32* %3730, align 4, !dbg !738
  %3769 = load i64, i64* %3761, align 4, !dbg !739
  %3770 = icmp slt i64 %3769, 127, !dbg !740
  %3771 = icmp slt i64 %3769, 32767, !dbg !741
  %3772 = icmp slt i64 %3769, 8388607, !dbg !742
  %3773 = icmp slt i64 %3769, 2147483647, !dbg !743
  br i1 %3770, label %3774, label %3783, !dbg !744

3774:                                             ; preds = %3766
  %3775 = and i64 %3760, 1, !dbg !745
  %3776 = icmp eq i64 %3775, %3760, !dbg !746
  br i1 %3776, label %3777, label %3780, !dbg !747

3777:                                             ; preds = %3774
  %3778 = trunc i64 %3769 to i32, !dbg !748
  %3779 = add i32 %3778, 8, !dbg !749
  store i32 %3779, i32* %3747, align 4, !dbg !750
  br label %3846, !dbg !751

3780:                                             ; preds = %3774
  %3781 = load i64, i64* %3729, align 4, !dbg !752
  %3782 = add i64 %3781, 1, !dbg !752
  store i64 %3782, i64* %3729, align 4, !dbg !752
  store i32 1, i32* %3747, align 4, !dbg !753
  br label %3846, !dbg !754

3783:                                             ; preds = %3766
  %3784 = load i64, i64* %3729, align 4, !dbg !755
  br i1 %3771, label %3785, label %3787, !dbg !756

3785:                                             ; preds = %3783
  %3786 = add i64 %3784, 2, !dbg !757
  store i64 %3786, i64* %3729, align 4, !dbg !757
  store i32 2, i32* %3747, align 4, !dbg !758
  br label %3846, !dbg !759

3787:                                             ; preds = %3783
  br i1 %3772, label %3788, label %3790, !dbg !760

3788:                                             ; preds = %3787
  %3789 = add i64 %3784, 3, !dbg !761
  store i64 %3789, i64* %3729, align 4, !dbg !761
  store i32 3, i32* %3747, align 4, !dbg !762
  br label %3846, !dbg !763

3790:                                             ; preds = %3787
  br i1 %3773, label %3791, label %3793, !dbg !764

3791:                                             ; preds = %3790
  %3792 = add i64 %3784, 4, !dbg !765
  store i64 %3792, i64* %3729, align 4, !dbg !765
  store i32 4, i32* %3747, align 4, !dbg !766
  br label %3846, !dbg !767

3793:                                             ; preds = %3790
  %3794 = add i64 %3784, 8, !dbg !768
  store i64 %3794, i64* %3729, align 4, !dbg !768
  %3795 = and i16 %3740, 32, !dbg !769
  %3796 = icmp ne i16 %3795, 0, !dbg !769
  br i1 %3796, label %3797, label %3800, !dbg !770

3797:                                             ; preds = %3793
  %3798 = and i16 %3740, -33, !dbg !771
  %3799 = or i16 %3798, 8, !dbg !772
  store i16 %3799, i16* %3739, align 2, !dbg !773
  store i32 7, i32* %3747, align 4, !dbg !774
  br label %3846, !dbg !775

3800:                                             ; preds = %3793
  store i32 6, i32* %3747, align 4, !dbg !776
  br label %3846, !dbg !777

3801:                                             ; preds = %3756
  br i1 %3746, label %3802, label %3807, !dbg !778

3802:                                             ; preds = %3801
  %3803 = load i32, i32* %3730, align 4, !dbg !779
  %3804 = add i32 %3803, 1, !dbg !779
  store i32 %3804, i32* %3730, align 4, !dbg !779
  %3805 = load i64, i64* %3729, align 4, !dbg !780
  %3806 = add i64 %3805, 8, !dbg !780
  store i64 %3806, i64* %3729, align 4, !dbg !780
  store i32 7, i32* %3747, align 4, !dbg !781
  br label %3846, !dbg !782

3807:                                             ; preds = %3801
  %3808 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 0, i32 4, !dbg !783
  %3809 = load i32, i32* %3808, align 4, !dbg !784
  %3810 = alloca i32, align 8, !dbg !785
  store i32 %3809, i32* %3810, align 4, !dbg !786
  %3811 = alloca i32, align 8, !dbg !787
  %3812 = add i32 %3809, %3809, !dbg !788
  %3813 = add i32 %3812, 12, !dbg !789
  %3814 = and i16 %3740, 2, !dbg !790
  %3815 = icmp ne i16 %3814, 0, !dbg !791
  %3816 = zext i1 %3815 to i32, !dbg !792
  %3817 = add i32 %3813, %3816, !dbg !793
  store i32 %3817, i32* %3811, align 4, !dbg !794
  %3818 = and i16 %3740, 16384, !dbg !795
  %3819 = icmp ne i16 %3818, 0, !dbg !796
  br i1 %3819, label %3820, label %3836, !dbg !797

3820:                                             ; preds = %3807
  %3821 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 0, i32 0, !dbg !798
  %3822 = bitcast %union.MemValue* %3821 to i32*, !dbg !799
  %3823 = load i32, i32* %3822, align 4, !dbg !800
  %3824 = add i32 %3823, %3823, !dbg !801
  %3825 = add i32 %3817, %3824, !dbg !802
  store i32 %3825, i32* %3811, align 4, !dbg !802
  %3826 = load i64, i64* %3729, align 4, !dbg !803
  %3827 = icmp ne i64 %3826, 0, !dbg !803
  br i1 %3827, label %3832, label %3828, !dbg !804

3828:                                             ; preds = %3820
  %3829 = zext i32 %3823 to i64, !dbg !805
  %3830 = load i64, i64* %3731, align 4, !dbg !806
  %3831 = add i64 %3830, %3829, !dbg !806
  store i64 %3831, i64* %3731, align 4, !dbg !806
  br label %3836, !dbg !807

3832:                                             ; preds = %3820
  %3833 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3737), !dbg !808
  %3834 = load i32, i32* %3810, align 4, !dbg !809
  %3835 = add i32 %3834, %3823, !dbg !809
  store i32 %3835, i32* %3810, align 4, !dbg !809
  br label %3836, !dbg !810

3836:                                             ; preds = %3828, %3832, %3807
  %3837 = load i32, i32* %3810, align 4, !dbg !811
  %3838 = zext i32 %3837 to i64, !dbg !812
  %3839 = load i64, i64* %3729, align 4, !dbg !813
  %3840 = add i64 %3839, %3838, !dbg !813
  store i64 %3840, i64* %3729, align 4, !dbg !813
  %3841 = load i32, i32* %3811, align 4, !dbg !814
  %3842 = zext i32 %3841 to i64, !dbg !815
  %3843 = call i32 @sqlite3VarintLen(i64 %3842), !dbg !816
  %3844 = load i32, i32* %3730, align 4, !dbg !817
  %3845 = add i32 %3844, %3843, !dbg !817
  store i32 %3845, i32* %3730, align 4, !dbg !817
  store i32 %3841, i32* %3747, align 4, !dbg !818
  br label %3846, !dbg !819

3846:                                             ; preds = %3785, %3788, %3791, %3797, %3800, %3780, %3777, %3836, %3802, %3753
  %3847 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3737, i32 -1, !dbg !820
  %3848 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3847, i32 0, i32 1, !dbg !711
  %3849 = load i16, i16* %3848, align 2, !dbg !712
  %3850 = and i16 %3849, 1, !dbg !713
  %3851 = icmp ne i16 %3850, 0, !dbg !713
  %3852 = and i16 %3849, 36, !dbg !714
  %3853 = icmp ne i16 %3852, 0, !dbg !714
  %3854 = and i16 %3849, 8, !dbg !715
  %3855 = icmp ne i16 %3854, 0, !dbg !715
  %3856 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3847, i32 0, i32 8, !dbg !716
  br i1 %3851, label %3857, label %3865, !dbg !717

3857:                                             ; preds = %3846
  %3858 = and i16 %3849, 16384, !dbg !718
  %3859 = icmp ne i16 %3858, 0, !dbg !718
  br i1 %3859, label %3860, label %3861, !dbg !719

3860:                                             ; preds = %3857
  store i32 10, i32* %3856, align 4, !dbg !720
  br label %3862, !dbg !721

3861:                                             ; preds = %3857
  store i32 0, i32* %3856, align 4, !dbg !722
  br label %3862, !dbg !723

3862:                                             ; preds = %3861, %3860
  %3863 = load i32, i32* %3730, align 4, !dbg !724
  %3864 = add i32 %3863, 1, !dbg !724
  store i32 %3864, i32* %3730, align 4, !dbg !724
  br label %3955, !dbg !725

3865:                                             ; preds = %3846
  br i1 %3853, label %3866, label %3910, !dbg !726

3866:                                             ; preds = %3865
  %3867 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3847, i32 0, i32 0, !dbg !727
  %3868 = bitcast %union.MemValue* %3867 to i64*, !dbg !728
  %3869 = load i64, i64* %3868, align 4, !dbg !729
  %3870 = alloca i64, align 8, !dbg !730
  %3871 = icmp slt i64 %3869, 0, !dbg !731
  br i1 %3871, label %3872, label %3874, !dbg !732

3872:                                             ; preds = %3866
  %3873 = xor i64 %3869, -1, !dbg !733
  store i64 %3873, i64* %3870, align 4, !dbg !734
  br label %3875, !dbg !735

3874:                                             ; preds = %3866
  store i64 %3869, i64* %3870, align 4, !dbg !736
  br label %3875, !dbg !737

3875:                                             ; preds = %3874, %3872
  %3876 = load i32, i32* %3730, align 4, !dbg !738
  %3877 = add i32 %3876, 1, !dbg !738
  store i32 %3877, i32* %3730, align 4, !dbg !738
  %3878 = load i64, i64* %3870, align 4, !dbg !739
  %3879 = icmp slt i64 %3878, 127, !dbg !740
  %3880 = icmp slt i64 %3878, 32767, !dbg !741
  %3881 = icmp slt i64 %3878, 8388607, !dbg !742
  %3882 = icmp slt i64 %3878, 2147483647, !dbg !743
  br i1 %3879, label %3883, label %3892, !dbg !744

3883:                                             ; preds = %3875
  %3884 = and i64 %3869, 1, !dbg !745
  %3885 = icmp eq i64 %3884, %3869, !dbg !746
  br i1 %3885, label %3886, label %3889, !dbg !747

3886:                                             ; preds = %3883
  %3887 = trunc i64 %3878 to i32, !dbg !748
  %3888 = add i32 %3887, 8, !dbg !749
  store i32 %3888, i32* %3856, align 4, !dbg !750
  br label %3955, !dbg !751

3889:                                             ; preds = %3883
  %3890 = load i64, i64* %3729, align 4, !dbg !752
  %3891 = add i64 %3890, 1, !dbg !752
  store i64 %3891, i64* %3729, align 4, !dbg !752
  store i32 1, i32* %3856, align 4, !dbg !753
  br label %3955, !dbg !754

3892:                                             ; preds = %3875
  %3893 = load i64, i64* %3729, align 4, !dbg !755
  br i1 %3880, label %3894, label %3896, !dbg !756

3894:                                             ; preds = %3892
  %3895 = add i64 %3893, 2, !dbg !757
  store i64 %3895, i64* %3729, align 4, !dbg !757
  store i32 2, i32* %3856, align 4, !dbg !758
  br label %3955, !dbg !759

3896:                                             ; preds = %3892
  br i1 %3881, label %3897, label %3899, !dbg !760

3897:                                             ; preds = %3896
  %3898 = add i64 %3893, 3, !dbg !761
  store i64 %3898, i64* %3729, align 4, !dbg !761
  store i32 3, i32* %3856, align 4, !dbg !762
  br label %3955, !dbg !763

3899:                                             ; preds = %3896
  br i1 %3882, label %3900, label %3902, !dbg !764

3900:                                             ; preds = %3899
  %3901 = add i64 %3893, 4, !dbg !765
  store i64 %3901, i64* %3729, align 4, !dbg !765
  store i32 4, i32* %3856, align 4, !dbg !766
  br label %3955, !dbg !767

3902:                                             ; preds = %3899
  %3903 = add i64 %3893, 8, !dbg !768
  store i64 %3903, i64* %3729, align 4, !dbg !768
  %3904 = and i16 %3849, 32, !dbg !769
  %3905 = icmp ne i16 %3904, 0, !dbg !769
  br i1 %3905, label %3906, label %3909, !dbg !770

3906:                                             ; preds = %3902
  %3907 = and i16 %3849, -33, !dbg !771
  %3908 = or i16 %3907, 8, !dbg !772
  store i16 %3908, i16* %3848, align 2, !dbg !773
  store i32 7, i32* %3856, align 4, !dbg !774
  br label %3955, !dbg !775

3909:                                             ; preds = %3902
  store i32 6, i32* %3856, align 4, !dbg !776
  br label %3955, !dbg !777

3910:                                             ; preds = %3865
  br i1 %3855, label %3911, label %3916, !dbg !778

3911:                                             ; preds = %3910
  %3912 = load i32, i32* %3730, align 4, !dbg !779
  %3913 = add i32 %3912, 1, !dbg !779
  store i32 %3913, i32* %3730, align 4, !dbg !779
  %3914 = load i64, i64* %3729, align 4, !dbg !780
  %3915 = add i64 %3914, 8, !dbg !780
  store i64 %3915, i64* %3729, align 4, !dbg !780
  store i32 7, i32* %3856, align 4, !dbg !781
  br label %3955, !dbg !782

3916:                                             ; preds = %3910
  %3917 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3847, i32 0, i32 4, !dbg !783
  %3918 = load i32, i32* %3917, align 4, !dbg !784
  %3919 = alloca i32, align 8, !dbg !785
  store i32 %3918, i32* %3919, align 4, !dbg !786
  %3920 = alloca i32, align 8, !dbg !787
  %3921 = add i32 %3918, %3918, !dbg !788
  %3922 = add i32 %3921, 12, !dbg !789
  %3923 = and i16 %3849, 2, !dbg !790
  %3924 = icmp ne i16 %3923, 0, !dbg !791
  %3925 = zext i1 %3924 to i32, !dbg !792
  %3926 = add i32 %3922, %3925, !dbg !793
  store i32 %3926, i32* %3920, align 4, !dbg !794
  %3927 = and i16 %3849, 16384, !dbg !795
  %3928 = icmp ne i16 %3927, 0, !dbg !796
  br i1 %3928, label %3929, label %3945, !dbg !797

3929:                                             ; preds = %3916
  %3930 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3847, i32 0, i32 0, !dbg !798
  %3931 = bitcast %union.MemValue* %3930 to i32*, !dbg !799
  %3932 = load i32, i32* %3931, align 4, !dbg !800
  %3933 = add i32 %3932, %3932, !dbg !801
  %3934 = add i32 %3926, %3933, !dbg !802
  store i32 %3934, i32* %3920, align 4, !dbg !802
  %3935 = load i64, i64* %3729, align 4, !dbg !803
  %3936 = icmp ne i64 %3935, 0, !dbg !803
  br i1 %3936, label %3941, label %3937, !dbg !804

3937:                                             ; preds = %3929
  %3938 = zext i32 %3932 to i64, !dbg !805
  %3939 = load i64, i64* %3731, align 4, !dbg !806
  %3940 = add i64 %3939, %3938, !dbg !806
  store i64 %3940, i64* %3731, align 4, !dbg !806
  br label %3945, !dbg !807

3941:                                             ; preds = %3929
  %3942 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %3847), !dbg !808
  %3943 = load i32, i32* %3919, align 4, !dbg !809
  %3944 = add i32 %3943, %3932, !dbg !809
  store i32 %3944, i32* %3919, align 4, !dbg !809
  br label %3945, !dbg !810

3945:                                             ; preds = %3937, %3941, %3916
  %3946 = load i32, i32* %3919, align 4, !dbg !811
  %3947 = zext i32 %3946 to i64, !dbg !812
  %3948 = load i64, i64* %3729, align 4, !dbg !813
  %3949 = add i64 %3948, %3947, !dbg !813
  store i64 %3949, i64* %3729, align 4, !dbg !813
  %3950 = load i32, i32* %3920, align 4, !dbg !814
  %3951 = zext i32 %3950 to i64, !dbg !815
  %3952 = call i32 @sqlite3VarintLen(i64 %3951), !dbg !816
  %3953 = load i32, i32* %3730, align 4, !dbg !817
  %3954 = add i32 %3953, %3952, !dbg !817
  store i32 %3954, i32* %3730, align 4, !dbg !817
  store i32 %3950, i32* %3856, align 4, !dbg !818
  br label %3955, !dbg !819

3955:                                             ; preds = %3894, %3897, %3900, %3906, %3909, %3889, %3886, %3945, %3911, %3862
  %3956 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 5, !dbg !821
  %3957 = load i32, i32* %3730, align 4, !dbg !822
  %3958 = zext i32 %3957 to i64, !dbg !823
  %3959 = icmp slt i32 %3957, 126, !dbg !824
  br i1 %3959, label %3960, label %3962, !dbg !825

3960:                                             ; preds = %3955
  %3961 = add i32 %3957, 1, !dbg !826
  store i32 %3961, i32* %3730, align 4, !dbg !826
  br label %3971, !dbg !827

3962:                                             ; preds = %3955
  %3963 = call i32 @sqlite3VarintLen(i64 %3958), !dbg !828
  %3964 = load i32, i32* %3730, align 4, !dbg !829
  %3965 = add i32 %3964, %3963, !dbg !829
  store i32 %3965, i32* %3730, align 4, !dbg !829
  %3966 = call i32 @sqlite3VarintLen(i64 %3958), !dbg !830
  %3967 = icmp slt i32 %3963, %3966, !dbg !831
  br i1 %3967, label %3968, label %3971, !dbg !832

3968:                                             ; preds = %3962
  %3969 = load i32, i32* %3730, align 4, !dbg !833
  %3970 = add i32 %3969, 1, !dbg !833
  store i32 %3970, i32* %3730, align 4, !dbg !833
  br label %3971, !dbg !834

3971:                                             ; preds = %3968, %3962, %3960
  %3972 = load i32, i32* %3730, align 4, !dbg !835
  %3973 = zext i32 %3972 to i64, !dbg !835
  %3974 = load i64, i64* %3729, align 4, !dbg !836
  %3975 = add i64 %3973, %3974, !dbg !836
  %3976 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 7, !dbg !837
  %3977 = load i32, i32* %3976, align 4, !dbg !838
  %3978 = zext i32 %3977 to i64, !dbg !839
  %3979 = load i64, i64* %3731, align 4, !dbg !840
  %3980 = add i64 %3975, %3979, !dbg !841
  %3981 = icmp sle i64 %3980, %3978, !dbg !842
  br i1 %3981, label %3982, label %3985, !dbg !843

3982:                                             ; preds = %3971
  %3983 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 6, !dbg !844
  %3984 = load i8*, i8** %3983, align 8, !dbg !845
  store i8* %3984, i8** %3956, align 8, !dbg !846
  br label %3988, !dbg !847

3985:                                             ; preds = %3971
  %3986 = trunc i64 %3975 to i32, !dbg !848
  %3987 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %3738, i32 %3986), !dbg !849
  br label %3988, !dbg !850

3988:                                             ; preds = %3985, %3982
  %3989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 4, !dbg !851
  %3990 = trunc i64 %3975 to i32, !dbg !852
  store i32 %3990, i32* %3989, align 4, !dbg !853
  %3991 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 1, !dbg !854
  store i16 16, i16* %3991, align 2, !dbg !855
  %3992 = load i64, i64* %3731, align 4, !dbg !856
  %3993 = icmp ne i64 %3992, 0, !dbg !857
  br i1 %3993, label %3994, label %4000, !dbg !858

3994:                                             ; preds = %3988
  %3995 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3738, i32 0, i32 0, i32 0, !dbg !859
  %3996 = bitcast double* %3995 to i32*, !dbg !860
  %3997 = trunc i64 %3992 to i32, !dbg !861
  store i32 %3997, i32* %3996, align 4, !dbg !862
  %3998 = load i16, i16* %3991, align 2, !dbg !863
  %3999 = or i16 %3998, 16384, !dbg !864
  store i16 %3999, i16* %3991, align 2, !dbg !865
  br label %4000, !dbg !866

4000:                                             ; preds = %3994, %3988
  %4001 = alloca i8*, align 8, !dbg !867
  %4002 = load i8*, i8** %3956, align 8, !dbg !868
  store i8* %4002, i8** %4001, align 8, !dbg !869
  %4003 = load i32, i32* %3730, align 4, !dbg !870
  %4004 = zext i32 %4003 to i64, !dbg !871
  %4005 = getelementptr i8, i8* %4002, i32 %4003, !dbg !872
  store i8* %4005, i8** %3732, align 8, !dbg !873
  %4006 = call i32 @sqlite3PutVarint(i8* %4002, i64 %4004), !dbg !874
  %4007 = getelementptr i8, i8* %4002, i32 %4006, !dbg !875
  store i8* %4007, i8** %4001, align 8, !dbg !876
  %4008 = load i8*, i8** %3732, align 8, !dbg !877
  %4009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3736, i32 0, i32 8, !dbg !878
  %4010 = load i32, i32* %4009, align 4, !dbg !879
  %4011 = zext i32 %4010 to i64, !dbg !880
  %4012 = call i32 @sqlite3PutVarint(i8* %4007, i64 %4011), !dbg !881
  %4013 = getelementptr i8, i8* %4007, i32 %4012, !dbg !882
  store i8* %4013, i8** %4001, align 8, !dbg !883
  %4014 = call i32 @sqlite3VdbeSerialPut(i8* %4008, %struct.sqlite3_value* %3736, i32 %4010), !dbg !884
  %4015 = getelementptr i8, i8* %4008, i32 %4014, !dbg !885
  %4016 = load i32, i32* %3747, align 4, !dbg !879
  %4017 = zext i32 %4016 to i64, !dbg !880
  %4018 = call i32 @sqlite3PutVarint(i8* %4013, i64 %4017), !dbg !881
  %4019 = getelementptr i8, i8* %4013, i32 %4018, !dbg !882
  store i8* %4019, i8** %4001, align 8, !dbg !883
  %4020 = call i32 @sqlite3VdbeSerialPut(i8* %4015, %struct.sqlite3_value* %3737, i32 %4016), !dbg !884
  call void @llvm.stackrestore(i8* %3728), !dbg !887
  br label %4021, !dbg !75

4021:                                             ; preds = %17, %4000
  %4022 = call i8* @llvm.stacksave(), !dbg !1230
  %4023 = alloca i64, align 8, !dbg !1233
  store i64 0, i64* %4023, align 4, !dbg !1234
  %4024 = alloca i32, align 8, !dbg !1235
  store i32 0, i32* %4024, align 4, !dbg !1236
  %4025 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 60, !dbg !1237
  %4026 = call i8* @llvm.stacksave(), !dbg !1238
  %4027 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4025, i32 0, i32 4, !dbg !67
  %4028 = load i32, i32* %4027, align 4, !dbg !70
  %4029 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4028, !dbg !71
  %4030 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4029, i32 0, i32 1, !dbg !1238
  %4031 = load i16, i16* %4030, align 2, !dbg !1238
  %4032 = and i16 %4031, 9216, !dbg !1238
  %4033 = icmp ne i16 %4032, 0, !dbg !1238
  %4034 = alloca %struct.sqlite3_value*, align 8, !dbg !1238
  br i1 %4033, label %4035, label %4037, !dbg !1238

4035:                                             ; preds = %4021
  %4036 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4029), !dbg !1238
  store %struct.sqlite3_value* %4036, %struct.sqlite3_value** %4034, align 8, !dbg !1238
  br label %4038, !dbg !1238

4037:                                             ; preds = %4021
  store i16 4, i16* %4030, align 2, !dbg !1238
  store %struct.sqlite3_value* %4029, %struct.sqlite3_value** %4034, align 8, !dbg !1238
  br label %4038, !dbg !1238

4038:                                             ; preds = %4037, %4035
  %4039 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4034, align 8, !dbg !1238
  call void @llvm.stackrestore(i8* %4026), !dbg !1238
  %4040 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !1239
  %4041 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4040, align 8, !dbg !1240
  %4042 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4041, i32 0, i32 12, i32 0, !dbg !1241
  %4043 = load %struct.BtCursor*, %struct.BtCursor** %4042, align 8, !dbg !1242
  %4044 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4041, i32 0, i32 5, !dbg !1243
  %4045 = load i8, i8* %4044, align 1, !dbg !1244
  %4046 = and i8 %4045, 2, !dbg !1245
  %4047 = icmp ne i8 %4046, 0, !dbg !1246
  br i1 %4047, label %4048, label %4059, !dbg !1247

4048:                                             ; preds = %4038
  %4049 = call i32 @sqlite3BtreeLast(%struct.BtCursor* %4043, i32* %4024), !dbg !1248
  %4050 = load i32, i32* %4024, align 4, !dbg !1249
  %4051 = icmp ne i32 %4050, 0, !dbg !1250
  br i1 %4051, label %4052, label %4053, !dbg !1251

4052:                                             ; preds = %4048
  store i64 1, i64* %4023, align 4, !dbg !1252
  br label %4059, !dbg !1253

4053:                                             ; preds = %4048
  %4054 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %4043), !dbg !1254
  store i64 %4054, i64* %4023, align 4, !dbg !1255
  %4055 = icmp sge i64 %4054, -1, !dbg !1256
  br i1 %4055, label %4056, label %4057, !dbg !1257

4056:                                             ; preds = %4053
  store i8 1, i8* %4044, align 1, !dbg !1258
  br label %4059, !dbg !1259

4057:                                             ; preds = %4053
  %4058 = add i64 %4054, 1, !dbg !1260
  store i64 %4058, i64* %4023, align 4, !dbg !1261
  br label %4059, !dbg !1262

4059:                                             ; preds = %4052, %4057, %4056, %4038
  %4060 = load i8, i8* %4044, align 1, !dbg !1263
  %4061 = and i8 %4060, 2, !dbg !1264
  %4062 = icmp ne i8 %4061, 0, !dbg !1265
  br i1 %4062, label %4063, label %4078, !dbg !1266

4063:                                             ; preds = %4059
  %4064 = alloca i32, align 8, !dbg !1267
  br label %4065, !dbg !1268

4065:                                             ; preds = %4065, %4063
  %4066 = bitcast i64* %4023 to i8*, !dbg !1269
  call void @sqlite3_randomness(i32 8, i8* %4066), !dbg !1270
  %4067 = load i64, i64* %4023, align 4, !dbg !1271
  %4068 = add i64 %4067, 1, !dbg !1272
  store i64 %4068, i64* %4023, align 4, !dbg !1273
  %4069 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %4043, %struct.UnpackedRecord* null, i64 %4068, i32 0, i32* %4024), !dbg !1274
  %4070 = icmp eq i32 %4069, 0, !dbg !1275
  %4071 = load i32, i32* %4024, align 4, !dbg !1276
  %4072 = icmp eq i32 %4071, 0, !dbg !1277
  %4073 = load i32, i32* %4064, align 4, !dbg !1278
  %4074 = add i32 %4073, 1, !dbg !1279
  store i32 %4074, i32* %4064, align 4, !dbg !1280
  %4075 = icmp slt i32 %4074, 100, !dbg !1281
  %4076 = and i1 %4070, %4072, !dbg !1282
  %4077 = and i1 %4076, %4075, !dbg !1283
  br i1 %4077, label %4065, label %4078, !dbg !1284

4078:                                             ; preds = %4065, %4059
  %4079 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4041, i32 0, i32 3, !dbg !1285
  store i8 0, i8* %4079, align 1, !dbg !1286
  %4080 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4041, i32 0, i32 9, !dbg !1287
  store i32 0, i32* %4080, align 4, !dbg !1288
  %4081 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4039, i32 0, i32 0, !dbg !1289
  %4082 = bitcast %union.MemValue* %4081 to i64*, !dbg !1290
  %4083 = load i64, i64* %4023, align 4, !dbg !1291
  store i64 %4083, i64* %4082, align 4, !dbg !1292
  call void @llvm.stackrestore(i8* %4022), !dbg !1293
  br label %4084, !dbg !75

4084:                                             ; preds = %17, %4078
  %4085 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 21, !dbg !1294
  %4086 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !1297
  %4087 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4086, align 8, !dbg !1298
  %4088 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1299
  %4089 = call i8* @llvm.stacksave(), !dbg !1300
  %4090 = alloca %struct.Table*, align 8, !dbg !1301
  %4091 = alloca i8*, align 8, !dbg !1302
  %4092 = alloca %struct.BtreePayload, align 8, !dbg !1303
  %4093 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %4092, i32 0, i32 1, !dbg !1304
  %4094 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4088, i32 0, i32 0, i32 0, !dbg !1305
  %4095 = bitcast double* %4094 to i64*, !dbg !1306
  %4096 = load i64, i64* %4095, align 4, !dbg !1307
  store i64 %4096, i64* %4093, align 4, !dbg !1308
  %4097 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 52, !dbg !1309
  %4098 = load void (i8*, i32, i8*, i8*, i64)*, void (i8*, i32, i8*, i8*, i64)** %4097, align 8, !dbg !1310
  %4099 = ptrtoint void (i8*, i32, i8*, i8*, i64)* %4098 to i64, !dbg !1311
  %4100 = icmp ne i64 %4099, 0, !dbg !1312
  br i1 false, label %4101, label %4113, !dbg !1313

4101:                                             ; preds = %4084
  %4102 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4087, i32 0, i32 1, !dbg !1314
  %4103 = load i8, i8* %4102, align 1, !dbg !1315
  %4104 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1316
  %4105 = load %struct.Db*, %struct.Db** %4104, align 8, !dbg !1317
  %4106 = getelementptr %struct.Db, %struct.Db* %4105, i8 %4103, !dbg !1318
  %4107 = getelementptr %struct.Db, %struct.Db* %4106, i32 0, i32 0, !dbg !1319
  %4108 = load i8*, i8** %4107, align 8, !dbg !1320
  store i8* %4108, i8** %4091, align 8, !dbg !1321
  %4109 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 61, !dbg !1322
  %4110 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4109, i32 0, i32 6, !dbg !1323
  %4111 = bitcast %union.p4union* %4110 to %struct.Table**, !dbg !1324
  %4112 = load %struct.Table*, %struct.Table** %4111, align 8, !dbg !1325
  store %struct.Table* %4112, %struct.Table** %4090, align 8, !dbg !1326
  br label %4114, !dbg !1327

4113:                                             ; preds = %4084
  store %struct.Table* null, %struct.Table** %4090, align 8, !dbg !1328
  store i8* null, i8** %4091, align 8, !dbg !1329
  br label %4114, !dbg !1330

4114:                                             ; preds = %4113, %4101
  %4115 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4085, i32 0, i32 5, !dbg !1331
  %4116 = load i8*, i8** %4115, align 8, !dbg !1332
  %4117 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %4092, i32 0, i32 2, !dbg !1333
  store i8* %4116, i8** %4117, align 8, !dbg !1334
  %4118 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4085, i32 0, i32 4, !dbg !1335
  %4119 = load i32, i32* %4118, align 4, !dbg !1336
  %4120 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %4092, i32 0, i32 5, !dbg !1337
  store i32 %4119, i32* %4120, align 4, !dbg !1338
  %4121 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4085, i32 0, i32 1, !dbg !1339
  %4122 = load i16, i16* %4121, align 2, !dbg !1340
  %4123 = and i16 %4122, 16384, !dbg !1341
  %4124 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %4092, i32 0, i32 6, !dbg !1342
  %4125 = icmp ne i16 %4123, 0, !dbg !1343
  br i1 %4125, label %4126, label %4130, !dbg !1344

4126:                                             ; preds = %4114
  %4127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4085, i32 0, i32 0, !dbg !1345
  %4128 = bitcast %union.MemValue* %4127 to i32*, !dbg !1346
  %4129 = load i32, i32* %4128, align 4, !dbg !1347
  store i32 %4129, i32* %4124, align 4, !dbg !1348
  br label %4131, !dbg !1349

4130:                                             ; preds = %4114
  store i32 0, i32* %4124, align 4, !dbg !1350
  br label %4131, !dbg !1351

4131:                                             ; preds = %4130, %4126
  %4132 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %4092, i32 0, i32 0, !dbg !1352
  store i8* null, i8** %4132, align 8, !dbg !1353
  %4133 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4087, i32 0, i32 12, i32 0, !dbg !1354
  %4134 = load %struct.BtCursor*, %struct.BtCursor** %4133, align 8, !dbg !1355
  %4135 = call i32 @sqlite3BtreeInsert(%struct.BtCursor* %4134, %struct.BtreePayload* %4092, i32 8, i32 0), !dbg !1356
  %4136 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4087, i32 0, i32 3, !dbg !1357
  store i8 0, i8* %4136, align 1, !dbg !1358
  %4137 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4087, i32 0, i32 9, !dbg !1359
  store i32 0, i32* %4137, align 4, !dbg !1360
  %4138 = load %struct.Table*, %struct.Table** %4090, align 8, !dbg !1361
  call void @llvm.stackrestore(i8* %4089), !dbg !1362
  br label %4139, !dbg !75

4139:                                             ; preds = %17, %4131
  %4140 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1201
  %4141 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4140, i32 0, i32 0, i32 0, !dbg !1204
  %4142 = bitcast double* %4141 to i64*, !dbg !1205
  %4143 = load i64, i64* %4142, align 4, !dbg !1206
  %4144 = add i64 %4143, 1, !dbg !1207
  %4145 = trunc i64 %4144 to i32, !dbg !1208
  store i32 %4145, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

4146:                                             ; preds = %17, %.critedge, %175
  %4147 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 63, !dbg !191
  %4148 = call i8* @llvm.stacksave(), !dbg !194
  %4149 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4147, i32 0, i32 4, !dbg !67
  %4150 = load i32, i32* %4149, align 4, !dbg !70
  %4151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4150, !dbg !71
  %4152 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4151, i32 0, i32 1, !dbg !194
  %4153 = load i16, i16* %4152, align 2, !dbg !194
  %4154 = and i16 %4153, 9216, !dbg !194
  %4155 = icmp ne i16 %4154, 0, !dbg !194
  %4156 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %4155, label %4157, label %4159, !dbg !194

4157:                                             ; preds = %4146
  %4158 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4151), !dbg !194
  store %struct.sqlite3_value* %4158, %struct.sqlite3_value** %4156, align 8, !dbg !194
  br label %4160, !dbg !194

4159:                                             ; preds = %4146
  store i16 4, i16* %4152, align 2, !dbg !194
  store %struct.sqlite3_value* %4151, %struct.sqlite3_value** %4156, align 8, !dbg !194
  br label %4160, !dbg !194

4160:                                             ; preds = %4159, %4157
  %4161 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4156, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %4148), !dbg !194
  %4162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4161, i32 0, i32 1, !dbg !195
  store i16 1, i16* %4162, align 2, !dbg !196
  %4163 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4161, i32 0, i32 4, !dbg !197
  store i32 0, i32* %4163, align 4, !dbg !198
  %4164 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4161, i32 1, !dbg !1363
  %4165 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4164, i32 0, i32 1, !dbg !1364
  %4166 = load i16, i16* %4165, align 2, !dbg !1364
  %4167 = and i16 %4166, 9216, !dbg !1364
  %4168 = icmp ne i16 %4167, 0, !dbg !1364
  br i1 %4168, label %4169, label %4170, !dbg !1364

4169:                                             ; preds = %4160
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4164), !dbg !1364
  br label %4171, !dbg !1364

4170:                                             ; preds = %4160
  store i16 1, i16* %4165, align 2, !dbg !1364
  br label %4171, !dbg !1364

4171:                                             ; preds = %4170, %4169
  store i16 1, i16* %4165, align 2, !dbg !1365
  %4172 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4164, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %4172, align 4, !dbg !1367
  %4173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4164, i32 1, !dbg !1363
  %4174 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4173, i32 0, i32 1, !dbg !1364
  %4175 = load i16, i16* %4174, align 2, !dbg !1364
  %4176 = and i16 %4175, 9216, !dbg !1364
  %4177 = icmp ne i16 %4176, 0, !dbg !1364
  br i1 %4177, label %4178, label %4179, !dbg !1364

4178:                                             ; preds = %4171
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4173), !dbg !1364
  br label %4180, !dbg !1364

4179:                                             ; preds = %4171
  store i16 1, i16* %4174, align 2, !dbg !1364
  br label %4180, !dbg !1364

4180:                                             ; preds = %4179, %4178
  store i16 1, i16* %4174, align 2, !dbg !1365
  %4181 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4173, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %4181, align 4, !dbg !1367
  %4182 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4173, i32 1, !dbg !1363
  %4183 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4182, i32 0, i32 1, !dbg !1364
  %4184 = load i16, i16* %4183, align 2, !dbg !1364
  %4185 = and i16 %4184, 9216, !dbg !1364
  %4186 = icmp ne i16 %4185, 0, !dbg !1364
  br i1 %4186, label %4187, label %4188, !dbg !1364

4187:                                             ; preds = %4180
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4182), !dbg !1364
  br label %4189, !dbg !1364

4188:                                             ; preds = %4180
  store i16 1, i16* %4183, align 2, !dbg !1364
  br label %4189, !dbg !1364

4189:                                             ; preds = %4188, %4187
  store i16 1, i16* %4183, align 2, !dbg !1365
  %4190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4182, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %4190, align 4, !dbg !1367
  br label %4191, !dbg !75

4191:                                             ; preds = %17, %4189
  %4192 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 64, !dbg !63
  %4193 = call i8* @llvm.stacksave(), !dbg !66
  %4194 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4192, i32 0, i32 4, !dbg !67
  %4195 = load i32, i32* %4194, align 4, !dbg !70
  %4196 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4195, !dbg !71
  %4197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4196, i32 0, i32 1, !dbg !66
  %4198 = load i16, i16* %4197, align 2, !dbg !66
  %4199 = and i16 %4198, 9216, !dbg !66
  %4200 = icmp ne i16 %4199, 0, !dbg !66
  %4201 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %4200, label %4202, label %4204, !dbg !66

4202:                                             ; preds = %4191
  %4203 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4196), !dbg !66
  store %struct.sqlite3_value* %4203, %struct.sqlite3_value** %4201, align 8, !dbg !66
  br label %4205, !dbg !66

4204:                                             ; preds = %4191
  store i16 4, i16* %4197, align 2, !dbg !66
  store %struct.sqlite3_value* %4196, %struct.sqlite3_value** %4201, align 8, !dbg !66
  br label %4205, !dbg !66

4205:                                             ; preds = %4204, %4202
  %4206 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4201, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %4193), !dbg !66
  %4207 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4206, i32 0, i32 0, i32 0, !dbg !72
  %4208 = bitcast double* %4207 to i64*, !dbg !73
  store i64 0, i64* %4208, align 4, !dbg !74
  br label %4209, !dbg !75

4209:                                             ; preds = %17, %4205
  %4210 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1201
  %4211 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4210, i32 0, i32 0, i32 0, !dbg !1204
  %4212 = bitcast double* %4211 to i64*, !dbg !1205
  %4213 = load i64, i64* %4212, align 4, !dbg !1206
  %4214 = add i64 %4213, 1, !dbg !1207
  %4215 = trunc i64 %4214 to i32, !dbg !1208
  store i32 %4215, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

4216:                                             ; preds = %2606, %17, %17, %2280, %60
  %4217 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1201
  %4218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4217, i32 0, i32 0, i32 0, !dbg !1204
  %4219 = bitcast double* %4218 to i64*, !dbg !1205
  %4220 = load i64, i64* %4219, align 4, !dbg !1206
  %4221 = add i64 %4220, 1, !dbg !1207
  %4222 = trunc i64 %4221 to i32, !dbg !1208
  store i32 %4222, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

4223:                                             ; preds = %17
  %4224 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 7, i32 7, i32 -1, i8 1), !dbg !180
  %4225 = ptrtoint %struct.VdbeCursor* %4224 to i64, !dbg !183
  %4226 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4224, i32 0, i32 13, !dbg !184
  %4227 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 67, !dbg !185
  %4228 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4227, i32 0, i32 6, !dbg !186
  %4229 = bitcast %union.p4union* %4228 to %struct.KeyInfo**, !dbg !187
  %4230 = load %struct.KeyInfo*, %struct.KeyInfo** %4229, align 8, !dbg !188
  store %struct.KeyInfo* %4230, %struct.KeyInfo** %4226, align 8, !dbg !189
  %4231 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %4224), !dbg !190
  br label %4232, !dbg !75

4232:                                             ; preds = %17, %4223
  %4233 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !208
  %4234 = getelementptr %struct.sqlite3, %struct.sqlite3* %4233, i32 0, i32 4, !dbg !211
  %4235 = load %struct.Db*, %struct.Db** %4234, align 8, !dbg !212
  %4236 = getelementptr %struct.Db, %struct.Db* %4235, i32 0, i32 1, !dbg !213
  %4237 = load %struct.Btree*, %struct.Btree** %4236, align 8, !dbg !214
  %4238 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 0, i32 5, i32 0, i8 0), !dbg !215
  %4239 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 2, !dbg !216
  store i8 1, i8* %4239, align 1, !dbg !217
  %4240 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 5, !dbg !218
  %4241 = load i8, i8* %4240, align 1, !dbg !219
  %4242 = or i8 %4241, 4, !dbg !220
  store i8 %4242, i8* %4240, align 1, !dbg !221
  %4243 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 15, !dbg !222
  store i32 5, i32* %4243, align 4, !dbg !223
  %4244 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 12, i32 0, !dbg !224
  %4245 = load %struct.BtCursor*, %struct.BtCursor** %4244, align 8, !dbg !225
  %4246 = call i32 @sqlite3BtreeCursor(%struct.Btree* %4237, i32 5, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %4245), !dbg !226
  %4247 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 13, !dbg !227
  store %struct.KeyInfo* null, %struct.KeyInfo** %4247, align 8, !dbg !228
  %4248 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4238, i32 0, i32 4, !dbg !229
  store i8 1, i8* %4248, align 1, !dbg !230
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %4245, i32 0), !dbg !231
  br label %4249, !dbg !75

4249:                                             ; preds = %17, %4232
  %4250 = call i8* @llvm.stacksave(), !dbg !232
  %4251 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %4252 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %4251, i32 1, !dbg !236
  %4253 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4252, align 8, !dbg !237
  %4254 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %4254, align 4, !dbg !239
  %4255 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4253, i32 0, i32 0, !dbg !240
  %4256 = load i8, i8* %4255, align 1, !dbg !241
  %4257 = icmp eq i8 %4256, 1, !dbg !242
  %4258 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %4258, align 4, !dbg !244
  br i1 %4257, label %4259, label %4261, !dbg !245

4259:                                             ; preds = %4249
  %4260 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %4253, i32* %4254), !dbg !246
  store i32 %4260, i32* %4258, align 4, !dbg !247
  br label %4267, !dbg !248

4261:                                             ; preds = %4249
  %4262 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4253, i32 0, i32 12, i32 0, !dbg !249
  %4263 = load %struct.BtCursor*, %struct.BtCursor** %4262, align 8, !dbg !250
  %4264 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %4263, i32* %4254), !dbg !251
  store i32 %4264, i32* %4258, align 4, !dbg !252
  %4265 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4253, i32 0, i32 3, !dbg !253
  store i8 0, i8* %4265, align 1, !dbg !254
  %4266 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4253, i32 0, i32 9, !dbg !255
  store i32 0, i32* %4266, align 4, !dbg !256
  br label %4267, !dbg !257

4267:                                             ; preds = %4261, %4259
  %4268 = load i32, i32* %4258, align 4, !dbg !258
  %4269 = load i32, i32* %4254, align 4, !dbg !259
  %4270 = trunc i32 %4269 to i8, !dbg !260
  %4271 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4253, i32 0, i32 2, !dbg !261
  store i8 %4270, i8* %4271, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %4250), !dbg !263
  %4272 = icmp ne i32 %4269, 0, !dbg !264
  br i1 %4272, label %10535, label %4273, !dbg !265

4273:                                             ; preds = %17, %10533, %4267
  %4274 = call i8* @llvm.stacksave(), !dbg !266
  %4275 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %4276 = load i8, i8* %4275, align 1, !dbg !270
  %4277 = alloca i32, align 4, !dbg !271
  store i32 1, i32* %4277, align 4, !dbg !272
  %4278 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !273
  %4279 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %4280 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4278, align 8, !dbg !275
  store %struct.VdbeCursor* %4280, %struct.VdbeCursor** %4279, align 8, !dbg !276
  %4281 = alloca i8*, align 8, !dbg !277
  %4282 = alloca i32, align 4, !dbg !278
  %4283 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4279, i32* %4277), !dbg !279
  %4284 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4279, align 8, !dbg !280
  %4285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !281
  %4286 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 16, !dbg !282
  %4287 = load i16, i16* %4286, align 2, !dbg !283
  %4288 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 19, !dbg !284
  %4289 = load i32*, i32** %4288, align 8, !dbg !285
  %4290 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 0, !dbg !286
  %4291 = load i8, i8* %4290, align 1, !dbg !287
  %4292 = icmp ne i8 %4291, 3, !dbg !288
  %4293 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 2, !dbg !289
  %4294 = load i8, i8* %4293, align 1, !dbg !290
  %4295 = icmp ne i8 %4294, 0, !dbg !291
  %4296 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 14, !dbg !292
  %4297 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 21, !dbg !293
  %4298 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 22, !dbg !294
  %4299 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 20, !dbg !295
  %4300 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 17, !dbg !296
  %4301 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 9, !dbg !297
  %4302 = load i32, i32* %4301, align 4, !dbg !298
  %4303 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %4304 = load i32, i32* %4303, align 4, !dbg !300
  %4305 = icmp ne i32 %4302, %4304, !dbg !301
  br i1 %4305, label %4306, label %4348, !dbg !302

4306:                                             ; preds = %4273
  br i1 %4295, label %4328, label %4323, !dbg !303

4307:                                             ; preds = %4323, %4330
  %4308 = load i32, i32* %4303, align 4, !dbg !304
  store i32 %4308, i32* %4301, align 4, !dbg !305
  %4309 = load i8*, i8** %4299, align 8, !dbg !306
  %4310 = load i8, i8* %4309, align 1, !dbg !307
  %4311 = icmp sgt i8 %4310, -1, !dbg !310
  br i1 %4311, label %4312, label %4314, !dbg !311

4312:                                             ; preds = %4307
  %4313 = zext i8 %4310 to i32, !dbg !312
  store i32 %4313, i32* %4289, align 4, !dbg !313
  store i32 1, i32* %4296, align 4, !dbg !314
  br label %4317, !dbg !315

4314:                                             ; preds = %4307
  %4315 = call i8 @sqlite3GetVarint32(i8* %4309, i32* %4289), !dbg !316
  %4316 = zext i8 %4315 to i32, !dbg !317
  store i32 %4316, i32* %4296, align 4, !dbg !318
  br label %4317, !dbg !319

4317:                                             ; preds = %4314, %4312
  store i16 0, i16* %4300, align 2, !dbg !320
  %4318 = load i32, i32* %4298, align 4, !dbg !321
  %4319 = load i32, i32* %4289, align 4, !dbg !322
  %4320 = icmp ult i32 %4318, %4319, !dbg !323
  br i1 %4320, label %4322, label %4321, !dbg !324

4321:                                             ; preds = %4317
  store i8* %4309, i8** %4281, align 8, !dbg !325
  br label %4441, !dbg !326

4322:                                             ; preds = %4317
  store i8* null, i8** %4299, align 8, !dbg !327
  store i32 0, i32* %4298, align 4, !dbg !328
  br label %4348, !dbg !329

4323:                                             ; preds = %4306
  %4324 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 12, i32 0, !dbg !330
  %4325 = load %struct.BtCursor*, %struct.BtCursor** %4324, align 8, !dbg !331
  %4326 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4325), !dbg !332
  store i32 %4326, i32* %4297, align 4, !dbg !333
  %4327 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4325, i32* %4298), !dbg !334
  store i8* %4327, i8** %4299, align 8, !dbg !335
  br label %4307, !dbg !336

4328:                                             ; preds = %4306
  %4329 = icmp eq i8 %4291, 3, !dbg !337
  br i1 %4329, label %4330, label %4341, !dbg !338

4330:                                             ; preds = %4328
  %4331 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 10, !dbg !339
  %4332 = load i32, i32* %4331, align 4, !dbg !340
  %4333 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4332, !dbg !341
  %4334 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4333, i32 0, i32 1, !dbg !342
  %4335 = load i16, i16* %4334, align 2, !dbg !343
  %4336 = and i16 %4335, 16, !dbg !344
  %4337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4333, i32 0, i32 4, !dbg !345
  %4338 = load i32, i32* %4337, align 4, !dbg !346
  store i32 %4338, i32* %4297, align 4, !dbg !347
  store i32 %4338, i32* %4298, align 4, !dbg !348
  %4339 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4333, i32 0, i32 5, !dbg !349
  %4340 = load i8*, i8** %4339, align 8, !dbg !350
  store i8* %4340, i8** %4299, align 8, !dbg !351
  br label %4307, !dbg !352

4341:                                             ; preds = %4328
  %4342 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 1, !dbg !353
  %4343 = load i16, i16* %4342, align 2, !dbg !353
  %4344 = and i16 %4343, 9216, !dbg !353
  %4345 = icmp ne i16 %4344, 0, !dbg !353
  br i1 %4345, label %4346, label %4347, !dbg !353

4346:                                             ; preds = %4341
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4285), !dbg !353
  br label %4529, !dbg !353

4347:                                             ; preds = %4341
  store i16 1, i16* %4342, align 2, !dbg !353
  br label %4529, !dbg !353

4348:                                             ; preds = %4322, %4273
  %4349 = load i16, i16* %4300, align 2, !dbg !354
  %4350 = icmp ule i16 %4349, 1, !dbg !355
  br i1 %4350, label %4433, label %4430, !dbg !356

4351:                                             ; preds = %4430, %4519
  %4352 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 1, !dbg !357
  %4353 = load i16, i16* %4352, align 2, !dbg !358
  %4354 = and i16 9216, %4353, !dbg !359
  %4355 = icmp eq i16 0, %4354, !dbg !360
  br i1 %4355, label %4356, label %4360, !dbg !361

4356:                                             ; preds = %4351
  %4357 = icmp ne i16 %4354, 0, !dbg !362
  br i1 %4357, label %4358, label %4359, !dbg !362

4358:                                             ; preds = %4356
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4285), !dbg !362
  br label %4360, !dbg !362

4359:                                             ; preds = %4356
  store i16 1, i16* %4352, align 2, !dbg !362
  br label %4360, !dbg !362

4360:                                             ; preds = %4358, %4359, %4351
  %4361 = load i32, i32* %4282, align 4, !dbg !363
  %4362 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 23, i32 1, !dbg !364
  %4363 = load i32, i32* %4362, align 4, !dbg !365
  %4364 = load i32, i32* %4298, align 4, !dbg !366
  %4365 = getelementptr i32, i32* %4289, i32 2, !dbg !367
  %4366 = load i32, i32* %4365, align 4, !dbg !368
  %4367 = icmp sge i32 %4364, %4366, !dbg !369
  br i1 %4367, label %4368, label %4408, !dbg !370

4368:                                             ; preds = %4360
  %4369 = load i8*, i8** %4299, align 8, !dbg !371
  %4370 = ptrtoint i8* %4369 to i64, !dbg !372
  %4371 = getelementptr i32, i32* %4289, i32 1, !dbg !373
  %4372 = load i32, i32* %4371, align 4, !dbg !374
  %4373 = zext i32 %4372 to i64, !dbg !375
  %4374 = add i64 %4370, %4373, !dbg !376
  %4375 = inttoptr i64 %4374 to i8*, !dbg !377
  store i8* %4375, i8** %4281, align 8, !dbg !378
  %4376 = load i32, i32* %4282, align 4, !dbg !379
  %4377 = icmp ult i32 %4376, 12, !dbg !380
  br i1 %4377, label %4378, label %4380, !dbg !381

4378:                                             ; preds = %4368
  %4379 = call i32 @sqlite3VdbeSerialGet(i8* %4375, i32 %4376, %struct.sqlite3_value* %4285), !dbg !382
  br label %4529, !dbg !383

4380:                                             ; preds = %4368
  %4381 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %4381, align 2, !dbg !385
  %4382 = getelementptr i16, i16* %4381, i32 1, !dbg !386
  store i16 514, i16* %4382, align 2, !dbg !387
  %4383 = load i32, i32* %4282, align 4, !dbg !388
  %4384 = sub i32 %4383, 12, !dbg !389
  %4385 = lshr i32 %4384, 1, !dbg !390
  %4386 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 4, !dbg !391
  store i32 %4385, i32* %4386, align 4, !dbg !392
  %4387 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 2, !dbg !393
  store i8 %4276, i8* %4387, align 1, !dbg !394
  %4388 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 5, !dbg !395
  %4389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 7, !dbg !396
  %4390 = load i32, i32* %4389, align 4, !dbg !397
  %4391 = add i32 %4385, 2, !dbg !398
  %4392 = icmp slt i32 %4390, %4391, !dbg !399
  br i1 %4392, label %4393, label %4395, !dbg !400

4393:                                             ; preds = %4380
  store i16 1, i16* %4352, align 2, !dbg !401
  %4394 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4285, i32 %4391, i32 0), !dbg !402
  br label %4398, !dbg !403

4395:                                             ; preds = %4380
  %4396 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 6, !dbg !404
  %4397 = load i8*, i8** %4396, align 8, !dbg !405
  store i8* %4397, i8** %4388, align 8, !dbg !406
  br label %4398, !dbg !407

4398:                                             ; preds = %4395, %4393
  %4399 = zext i32 %4385 to i64, !dbg !408
  %4400 = load i8*, i8** %4388, align 8, !dbg !409
  %4401 = load i8*, i8** %4281, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4400, i8* %4401, i64 %4399, i1 false), !dbg !411
  %4402 = getelementptr i8, i8* %4400, i32 %4385, !dbg !412
  store i8 0, i8* %4402, align 1, !dbg !413
  %4403 = add i32 %4385, 1, !dbg !414
  %4404 = getelementptr i8, i8* %4400, i32 %4403, !dbg !415
  store i8 0, i8* %4404, align 1, !dbg !416
  %4405 = and i32 %4383, 1, !dbg !417
  %4406 = getelementptr i16, i16* %4381, i32 %4405, !dbg !418
  %4407 = load i16, i16* %4406, align 2, !dbg !419
  store i16 %4407, i16* %4352, align 2, !dbg !420
  br label %4529, !dbg !421

4408:                                             ; preds = %4360
  %4409 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 2, !dbg !422
  store i8 %4276, i8* %4409, align 1, !dbg !423
  %4410 = load i32, i32* %4282, align 4, !dbg !424
  %4411 = and i32 %4410, 1, !dbg !425
  %4412 = icmp eq i32 %4411, 0, !dbg !426
  %4413 = icmp sge i32 %4410, 12, !dbg !427
  %4414 = and i1 %4413, %4412, !dbg !428
  %4415 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4410), !dbg !429
  %4416 = icmp eq i32 %4415, 0, !dbg !430
  br i1 %4416, label %4428, label %4417, !dbg !431

4417:                                             ; preds = %4408
  %4418 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 12, i32 0, !dbg !432
  %4419 = load %struct.BtCursor*, %struct.BtCursor** %4418, align 8, !dbg !433
  %4420 = getelementptr i32, i32* %4289, i32 1, !dbg !434
  %4421 = load i32, i32* %4420, align 4, !dbg !435
  %4422 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4419, i32 %4421, i32 %4415, %struct.sqlite3_value* %4285), !dbg !436
  %4423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 5, !dbg !437
  %4424 = load i8*, i8** %4423, align 8, !dbg !438
  %4425 = call i32 @sqlite3VdbeSerialGet(i8* %4424, i32 %4410, %struct.sqlite3_value* %4285), !dbg !439
  %4426 = load i16, i16* %4352, align 2, !dbg !440
  %4427 = and i16 %4426, -4097, !dbg !441
  store i16 %4427, i16* %4352, align 2, !dbg !442
  br label %4529, !dbg !443

4428:                                             ; preds = %4408
  %4429 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4410, %struct.sqlite3_value* %4285), !dbg !444
  br label %4529, !dbg !445

4430:                                             ; preds = %4348
  %4431 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 23, i32 1, !dbg !446
  %4432 = load i32, i32* %4431, align 4, !dbg !447
  store i32 %4432, i32* %4282, align 4, !dbg !448
  br label %4351, !dbg !449

4433:                                             ; preds = %4348
  %4434 = load i32, i32* %4296, align 4, !dbg !450
  %4435 = load i32, i32* %4289, align 4, !dbg !451
  %4436 = icmp ult i32 %4434, %4435, !dbg !452
  br i1 %4436, label %4437, label %4518, !dbg !453

4437:                                             ; preds = %4433
  %4438 = load i8*, i8** %4299, align 8, !dbg !454
  %4439 = icmp eq i8* %4438, null, !dbg !455
  br i1 %4439, label %4441, label %4440, !dbg !456

4440:                                             ; preds = %4437
  store i8* %4438, i8** %4281, align 8, !dbg !457
  br label %4441, !dbg !458

4441:                                             ; preds = %4440, %4437, %4321
  %4442 = alloca i32, align 4, !dbg !459
  %4443 = load i16, i16* %4300, align 2, !dbg !460
  %4444 = zext i16 %4443 to i32, !dbg !461
  store i32 %4444, i32* %4442, align 4, !dbg !462
  %4445 = alloca i64, align 8, !dbg !463
  %4446 = getelementptr i32, i32* %4289, i32 %4444, !dbg !464
  %4447 = load i32, i32* %4446, align 4, !dbg !465
  %4448 = zext i32 %4447 to i64, !dbg !466
  store i64 %4448, i64* %4445, align 4, !dbg !467
  %4449 = load i8*, i8** %4281, align 8, !dbg !468
  %4450 = load i32, i32* %4296, align 4, !dbg !469
  %4451 = alloca i8*, align 8, !dbg !470
  %4452 = getelementptr i8, i8* %4449, i32 %4450, !dbg !471
  store i8* %4452, i8** %4451, align 8, !dbg !472
  %4453 = load i32, i32* %4289, align 4, !dbg !473
  %4454 = getelementptr i8, i8* %4449, i32 %4453, !dbg !474
  br label %4455, !dbg !475

4455:                                             ; preds = %4462, %4441
  %4456 = load i32, i32* %4442, align 4, !dbg !476
  %4457 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4284, i32 0, i32 23, i32 %4456, !dbg !477
  %4458 = load i8*, i8** %4451, align 8, !dbg !478
  %4459 = load i8, i8* %4458, align 1, !dbg !479
  %4460 = zext i8 %4459 to i32, !dbg !480
  store i32 %4460, i32* %4282, align 4, !dbg !481
  store i32 %4460, i32* %4457, align 4, !dbg !482
  %4461 = icmp sgt i8 %4459, -1, !dbg !483
  br i1 %4461, label %4485, label %4476, !dbg !484

4462:                                             ; preds = %4476, %4485
  %4463 = load i32, i32* %4442, align 4, !dbg !485
  %4464 = add i32 %4463, 1, !dbg !486
  store i32 %4464, i32* %4442, align 4, !dbg !487
  %4465 = load i64, i64* %4445, align 4, !dbg !488
  %4466 = and i64 4294967295, %4465, !dbg !489
  %4467 = trunc i64 %4466 to i32, !dbg !490
  %4468 = getelementptr i32, i32* %4289, i32 %4464, !dbg !491
  store i32 %4467, i32* %4468, align 4, !dbg !492
  %4469 = load i32, i32* %4442, align 4, !dbg !493
  %4470 = icmp sle i32 %4469, 1, !dbg !494
  %4471 = load i8*, i8** %4451, align 8, !dbg !495
  %4472 = ptrtoint i8* %4471 to i64, !dbg !496
  %4473 = ptrtoint i8* %4454 to i64, !dbg !497
  %4474 = icmp ult i64 %4472, %4473, !dbg !498
  %4475 = and i1 %4470, %4474, !dbg !499
  br i1 %4475, label %4455, label %4494, !dbg !500

4476:                                             ; preds = %4455
  %4477 = load i8*, i8** %4451, align 8, !dbg !501
  %4478 = call i8 @sqlite3GetVarint32(i8* %4477, i32* %4282), !dbg !502
  %4479 = getelementptr i8, i8* %4477, i8 %4478, !dbg !503
  store i8* %4479, i8** %4451, align 8, !dbg !504
  %4480 = load i32, i32* %4282, align 4, !dbg !505
  store i32 %4480, i32* %4457, align 4, !dbg !506
  %4481 = load i64, i64* %4445, align 4, !dbg !507
  %4482 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4480), !dbg !508
  %4483 = zext i32 %4482 to i64, !dbg !509
  %4484 = add i64 %4481, %4483, !dbg !510
  store i64 %4484, i64* %4445, align 4, !dbg !511
  br label %4462, !dbg !512

4485:                                             ; preds = %4455
  %4486 = getelementptr i8, i8* %4458, i32 1, !dbg !513
  store i8* %4486, i8** %4451, align 8, !dbg !514
  %4487 = load i32, i32* %4282, align 4, !dbg !515
  %4488 = trunc i32 %4487 to i8, !dbg !516
  %4489 = getelementptr i8, i8* %4, i8 %4488, !dbg !517
  %4490 = load i8, i8* %4489, align 1, !dbg !518
  %4491 = zext i8 %4490 to i64, !dbg !519
  %4492 = load i64, i64* %4445, align 4, !dbg !520
  %4493 = add i64 %4492, %4491, !dbg !521
  store i64 %4493, i64* %4445, align 4, !dbg !522
  br label %4462, !dbg !523

4494:                                             ; preds = %4462
  %4495 = load i64, i64* %4445, align 4, !dbg !524
  %4496 = load i32, i32* %4297, align 4, !dbg !525
  %4497 = zext i32 %4496 to i64, !dbg !526
  %4498 = icmp uge i64 %4472, %4473, !dbg !527
  %4499 = icmp ugt i64 %4472, %4473, !dbg !528
  %4500 = icmp ne i64 %4495, %4497, !dbg !529
  %4501 = icmp ugt i64 %4495, %4497, !dbg !530
  %4502 = or i1 %4499, %4500, !dbg !531
  %4503 = and i1 %4498, %4502, !dbg !532
  %4504 = or i1 %4503, %4501, !dbg !533
  br i1 %4504, label %4505, label %4509, !dbg !534

4505:                                             ; preds = %4494
  %4506 = load i32, i32* %4289, align 4, !dbg !535
  %4507 = icmp eq i32 %4506, 0, !dbg !536
  br i1 %4507, label %4508, label %4509, !dbg !537

4508:                                             ; preds = %4505
  store i32 0, i32* %4442, align 4, !dbg !538
  store i8* %4454, i8** %4451, align 8, !dbg !539
  br label %4509, !dbg !540

4509:                                             ; preds = %4508, %4505, %4494
  %4510 = load i32, i32* %4442, align 4, !dbg !541
  %4511 = trunc i32 %4510 to i16, !dbg !542
  store i16 %4511, i16* %4300, align 2, !dbg !543
  %4512 = load i8*, i8** %4451, align 8, !dbg !544
  %4513 = ptrtoint i8* %4512 to i64, !dbg !545
  %4514 = load i8*, i8** %4281, align 8, !dbg !546
  %4515 = ptrtoint i8* %4514 to i64, !dbg !547
  %4516 = sub i64 %4513, %4515, !dbg !548
  %4517 = trunc i64 %4516 to i32, !dbg !549
  store i32 %4517, i32* %4296, align 4, !dbg !550
  br label %4519, !dbg !551

4518:                                             ; preds = %4433
  store i32 0, i32* %4282, align 4, !dbg !552
  br label %4519, !dbg !553

4519:                                             ; preds = %4509, %4518
  %4520 = load i16, i16* %4300, align 2, !dbg !554
  %4521 = icmp sle i16 %4520, 1, !dbg !555
  br i1 %4521, label %4522, label %4351, !dbg !556

4522:                                             ; preds = %4519
  %4523 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4285, i32 0, i32 1, !dbg !557
  %4524 = load i16, i16* %4523, align 2, !dbg !557
  %4525 = and i16 %4524, 9216, !dbg !557
  %4526 = icmp ne i16 %4525, 0, !dbg !557
  br i1 %4526, label %4527, label %4528, !dbg !557

4527:                                             ; preds = %4522
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4285), !dbg !557
  br label %4529, !dbg !557

4528:                                             ; preds = %4522
  store i16 1, i16* %4523, align 2, !dbg !557
  br label %4529, !dbg !557

4529:                                             ; preds = %4527, %4528, %4398, %4378, %4417, %4428, %4346, %4347
  call void @llvm.stackrestore(i8* %4274), !dbg !558
  br label %4530, !dbg !75

4530:                                             ; preds = %17, %4529
  %4531 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 71, !dbg !63
  %4532 = call i8* @llvm.stacksave(), !dbg !66
  %4533 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4531, i32 0, i32 4, !dbg !67
  %4534 = load i32, i32* %4533, align 4, !dbg !70
  %4535 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4534, !dbg !71
  %4536 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4535, i32 0, i32 1, !dbg !66
  %4537 = load i16, i16* %4536, align 2, !dbg !66
  %4538 = and i16 %4537, 9216, !dbg !66
  %4539 = icmp ne i16 %4538, 0, !dbg !66
  %4540 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %4539, label %4541, label %4543, !dbg !66

4541:                                             ; preds = %4530
  %4542 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4535), !dbg !66
  store %struct.sqlite3_value* %4542, %struct.sqlite3_value** %4540, align 8, !dbg !66
  br label %4544, !dbg !66

4543:                                             ; preds = %4530
  store i16 4, i16* %4536, align 2, !dbg !66
  store %struct.sqlite3_value* %4535, %struct.sqlite3_value** %4540, align 8, !dbg !66
  br label %4544, !dbg !66

4544:                                             ; preds = %4543, %4541
  %4545 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4540, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %4532), !dbg !66
  %4546 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4545, i32 0, i32 0, i32 0, !dbg !72
  %4547 = bitcast double* %4546 to i64*, !dbg !73
  store i64 146, i64* %4547, align 4, !dbg !74
  br label %4548, !dbg !75

4548:                                             ; preds = %18, %4544
  %4549 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %4550 = load %struct.VdbeFrame*, %struct.VdbeFrame** %4549, align 8, !dbg !79
  %4551 = ptrtoint %struct.VdbeFrame* %4550 to i64, !dbg !80
  %4552 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %4553 = load i32, i32* %4552, align 4, !dbg !82
  %4554 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, i32 3, !dbg !83
  %4555 = icmp ne i64 %4551, 0, !dbg !84
  br i1 %4555, label %4556, label %4560, !dbg !85

4556:                                             ; preds = %4548
  %4557 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %4550, i32 0, i32 6, !dbg !86
  %4558 = load i8*, i8** %4557, align 8, !dbg !87
  %4559 = getelementptr i8, i8* %4558, i32 9, !dbg !559
  br label %8451, !dbg !1368

4560:                                             ; preds = %4548
  %4561 = load i32, i32* %4554, align 4, !dbg !90
  %4562 = icmp eq i32 %4561, %4553, !dbg !91
  br i1 %4562, label %8451, label %4563, !dbg !92

4563:                                             ; preds = %4560
  store i32 %4553, i32* %4554, align 4, !dbg !93
  br label %4564, !dbg !94

4564:                                             ; preds = %18, %4563
  %4565 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 73, !dbg !191
  %4566 = call i8* @llvm.stacksave(), !dbg !194
  %4567 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4565, i32 0, i32 4, !dbg !67
  %4568 = load i32, i32* %4567, align 4, !dbg !70
  %4569 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4568, !dbg !71
  %4570 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4569, i32 0, i32 1, !dbg !194
  %4571 = load i16, i16* %4570, align 2, !dbg !194
  %4572 = and i16 %4571, 9216, !dbg !194
  %4573 = icmp ne i16 %4572, 0, !dbg !194
  %4574 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %4573, label %4575, label %4577, !dbg !194

4575:                                             ; preds = %4564
  %4576 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4569), !dbg !194
  store %struct.sqlite3_value* %4576, %struct.sqlite3_value** %4574, align 8, !dbg !194
  br label %4578, !dbg !194

4577:                                             ; preds = %4564
  store i16 4, i16* %4570, align 2, !dbg !194
  store %struct.sqlite3_value* %4569, %struct.sqlite3_value** %4574, align 8, !dbg !194
  br label %4578, !dbg !194

4578:                                             ; preds = %4577, %4575
  %4579 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4574, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %4566), !dbg !194
  %4580 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4579, i32 0, i32 1, !dbg !195
  store i16 1, i16* %4580, align 2, !dbg !196
  %4581 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4579, i32 0, i32 4, !dbg !197
  store i32 0, i32* %4581, align 4, !dbg !198
  br label %4582, !dbg !75

4582:                                             ; preds = %18, %4578
  %4583 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1369
  %4584 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4583, i32 0, i32 0, !dbg !1372
  %4585 = bitcast %union.MemValue* %4584 to i64*, !dbg !1373
  store i64 74, i64* %4585, align 4, !dbg !1374
  %4586 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4583, i32 0, i32 1, !dbg !1375
  store i16 4, i16* %4586, align 2, !dbg !1376
  br label %8278, !dbg !1377

4587:                                             ; preds = %18
  %4588 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 8, i32 3, i32 -1, i8 1), !dbg !180
  %4589 = ptrtoint %struct.VdbeCursor* %4588 to i64, !dbg !183
  %4590 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4588, i32 0, i32 13, !dbg !184
  %4591 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 75, !dbg !185
  %4592 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4591, i32 0, i32 6, !dbg !186
  %4593 = bitcast %union.p4union* %4592 to %struct.KeyInfo**, !dbg !187
  %4594 = load %struct.KeyInfo*, %struct.KeyInfo** %4593, align 8, !dbg !188
  store %struct.KeyInfo* %4594, %struct.KeyInfo** %4590, align 8, !dbg !189
  %4595 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %4588), !dbg !190
  br label %4596, !dbg !75

4596:                                             ; preds = %18, %4587
  %4597 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 76, !dbg !63
  %4598 = call i8* @llvm.stacksave(), !dbg !66
  %4599 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4597, i32 0, i32 4, !dbg !67
  %4600 = load i32, i32* %4599, align 4, !dbg !70
  %4601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4600, !dbg !71
  %4602 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4601, i32 0, i32 1, !dbg !66
  %4603 = load i16, i16* %4602, align 2, !dbg !66
  %4604 = and i16 %4603, 9216, !dbg !66
  %4605 = icmp ne i16 %4604, 0, !dbg !66
  %4606 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %4605, label %4607, label %4609, !dbg !66

4607:                                             ; preds = %4596
  %4608 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4601), !dbg !66
  store %struct.sqlite3_value* %4608, %struct.sqlite3_value** %4606, align 8, !dbg !66
  br label %4610, !dbg !66

4609:                                             ; preds = %4596
  store i16 4, i16* %4602, align 2, !dbg !66
  store %struct.sqlite3_value* %4601, %struct.sqlite3_value** %4606, align 8, !dbg !66
  br label %4610, !dbg !66

4610:                                             ; preds = %4609, %4607
  %4611 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4606, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %4598), !dbg !66
  %4612 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4611, i32 0, i32 0, i32 0, !dbg !72
  %4613 = bitcast double* %4612 to i64*, !dbg !73
  store i64 0, i64* %4613, align 4, !dbg !74
  br label %4614, !dbg !75

4614:                                             ; preds = %18, %4610
  %4615 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 77, !dbg !191
  %4616 = call i8* @llvm.stacksave(), !dbg !194
  %4617 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4615, i32 0, i32 4, !dbg !67
  %4618 = load i32, i32* %4617, align 4, !dbg !70
  %4619 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4618, !dbg !71
  %4620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4619, i32 0, i32 1, !dbg !194
  %4621 = load i16, i16* %4620, align 2, !dbg !194
  %4622 = and i16 %4621, 9216, !dbg !194
  %4623 = icmp ne i16 %4622, 0, !dbg !194
  %4624 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %4623, label %4625, label %4627, !dbg !194

4625:                                             ; preds = %4614
  %4626 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4619), !dbg !194
  store %struct.sqlite3_value* %4626, %struct.sqlite3_value** %4624, align 8, !dbg !194
  br label %4628, !dbg !194

4627:                                             ; preds = %4614
  store i16 4, i16* %4620, align 2, !dbg !194
  store %struct.sqlite3_value* %4619, %struct.sqlite3_value** %4624, align 8, !dbg !194
  br label %4628, !dbg !194

4628:                                             ; preds = %4627, %4625
  %4629 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4624, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %4616), !dbg !194
  %4630 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4629, i32 0, i32 1, !dbg !195
  store i16 1, i16* %4630, align 2, !dbg !196
  %4631 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4629, i32 0, i32 4, !dbg !197
  store i32 0, i32* %4631, align 4, !dbg !198
  br label %4632, !dbg !75

4632:                                             ; preds = %18, %4628
  %4633 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 40, !dbg !199
  %4634 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4633, i32 0, i32 1, !dbg !202
  store i16 4, i16* %4634, align 2, !dbg !203
  %4635 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4633, i32 0, i32 0, i32 0, !dbg !204
  %4636 = bitcast double* %4635 to i64*, !dbg !205
  store i64 78, i64* %4636, align 4, !dbg !206
  br label %8198, !dbg !207

4637:                                             ; preds = %18
  %4638 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !208
  %4639 = getelementptr %struct.sqlite3, %struct.sqlite3* %4638, i32 0, i32 4, !dbg !211
  %4640 = load %struct.Db*, %struct.Db** %4639, align 8, !dbg !212
  %4641 = getelementptr %struct.Db, %struct.Db* %4640, i32 0, i32 1, !dbg !213
  %4642 = load %struct.Btree*, %struct.Btree** %4641, align 8, !dbg !214
  %4643 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 4, i32 11, i32 0, i8 0), !dbg !215
  %4644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 2, !dbg !216
  store i8 1, i8* %4644, align 1, !dbg !217
  %4645 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 5, !dbg !218
  %4646 = load i8, i8* %4645, align 1, !dbg !219
  %4647 = or i8 %4646, 4, !dbg !220
  store i8 %4647, i8* %4645, align 1, !dbg !221
  %4648 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 15, !dbg !222
  store i32 10, i32* %4648, align 4, !dbg !223
  %4649 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 12, i32 0, !dbg !224
  %4650 = load %struct.BtCursor*, %struct.BtCursor** %4649, align 8, !dbg !225
  %4651 = call i32 @sqlite3BtreeCursor(%struct.Btree* %4642, i32 10, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %4650), !dbg !226
  %4652 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 13, !dbg !227
  store %struct.KeyInfo* null, %struct.KeyInfo** %4652, align 8, !dbg !228
  %4653 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4643, i32 0, i32 4, !dbg !229
  store i8 1, i8* %4653, align 1, !dbg !230
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %4650, i32 0), !dbg !231
  br label %4654, !dbg !75

4654:                                             ; preds = %18, %4637
  %4655 = call i8* @llvm.stacksave(), !dbg !232
  %4656 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %4657 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %4656, i32 4, !dbg !236
  %4658 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4657, align 8, !dbg !237
  %4659 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %4659, align 4, !dbg !239
  %4660 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4658, i32 0, i32 0, !dbg !240
  %4661 = load i8, i8* %4660, align 1, !dbg !241
  %4662 = icmp eq i8 %4661, 1, !dbg !242
  %4663 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %4663, align 4, !dbg !244
  br i1 %4662, label %4664, label %4666, !dbg !245

4664:                                             ; preds = %4654
  %4665 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %4658, i32* %4659), !dbg !246
  store i32 %4665, i32* %4663, align 4, !dbg !247
  br label %4672, !dbg !248

4666:                                             ; preds = %4654
  %4667 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4658, i32 0, i32 12, i32 0, !dbg !249
  %4668 = load %struct.BtCursor*, %struct.BtCursor** %4667, align 8, !dbg !250
  %4669 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %4668, i32* %4659), !dbg !251
  store i32 %4669, i32* %4663, align 4, !dbg !252
  %4670 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4658, i32 0, i32 3, !dbg !253
  store i8 0, i8* %4670, align 1, !dbg !254
  %4671 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4658, i32 0, i32 9, !dbg !255
  store i32 0, i32* %4671, align 4, !dbg !256
  br label %4672, !dbg !257

4672:                                             ; preds = %4666, %4664
  %4673 = load i32, i32* %4663, align 4, !dbg !258
  %4674 = load i32, i32* %4659, align 4, !dbg !259
  %4675 = trunc i32 %4674 to i8, !dbg !260
  %4676 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4658, i32 0, i32 2, !dbg !261
  store i8 %4675, i8* %4676, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %4655), !dbg !263
  %4677 = icmp ne i32 %4674, 0, !dbg !264
  br i1 %4677, label %6711, label %4678, !dbg !265

4678:                                             ; preds = %18, %6709, %4672
  %4679 = call i8* @llvm.stacksave(), !dbg !266
  %4680 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %4681 = load i8, i8* %4680, align 1, !dbg !270
  %4682 = alloca i32, align 4, !dbg !271
  store i32 4, i32* %4682, align 4, !dbg !272
  %4683 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !273
  %4684 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %4685 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4683, align 8, !dbg !275
  store %struct.VdbeCursor* %4685, %struct.VdbeCursor** %4684, align 8, !dbg !276
  %4686 = alloca i8*, align 8, !dbg !277
  %4687 = alloca i32, align 4, !dbg !278
  %4688 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4684, i32* %4682), !dbg !279
  %4689 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4684, align 8, !dbg !280
  %4690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !281
  %4691 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 16, !dbg !282
  %4692 = load i16, i16* %4691, align 2, !dbg !283
  %4693 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 19, !dbg !284
  %4694 = load i32*, i32** %4693, align 8, !dbg !285
  %4695 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 0, !dbg !286
  %4696 = load i8, i8* %4695, align 1, !dbg !287
  %4697 = icmp ne i8 %4696, 3, !dbg !288
  %4698 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 2, !dbg !289
  %4699 = load i8, i8* %4698, align 1, !dbg !290
  %4700 = icmp ne i8 %4699, 0, !dbg !291
  %4701 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 14, !dbg !292
  %4702 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 21, !dbg !293
  %4703 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 22, !dbg !294
  %4704 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 20, !dbg !295
  %4705 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 17, !dbg !296
  %4706 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 9, !dbg !297
  %4707 = load i32, i32* %4706, align 4, !dbg !298
  %4708 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %4709 = load i32, i32* %4708, align 4, !dbg !300
  %4710 = icmp ne i32 %4707, %4709, !dbg !301
  br i1 %4710, label %4711, label %4753, !dbg !302

4711:                                             ; preds = %4678
  br i1 %4700, label %4733, label %4728, !dbg !303

4712:                                             ; preds = %4728, %4735
  %4713 = load i32, i32* %4708, align 4, !dbg !304
  store i32 %4713, i32* %4706, align 4, !dbg !305
  %4714 = load i8*, i8** %4704, align 8, !dbg !306
  %4715 = load i8, i8* %4714, align 1, !dbg !307
  %4716 = icmp sgt i8 %4715, -1, !dbg !310
  br i1 %4716, label %4717, label %4719, !dbg !311

4717:                                             ; preds = %4712
  %4718 = zext i8 %4715 to i32, !dbg !312
  store i32 %4718, i32* %4694, align 4, !dbg !313
  store i32 1, i32* %4701, align 4, !dbg !314
  br label %4722, !dbg !315

4719:                                             ; preds = %4712
  %4720 = call i8 @sqlite3GetVarint32(i8* %4714, i32* %4694), !dbg !316
  %4721 = zext i8 %4720 to i32, !dbg !317
  store i32 %4721, i32* %4701, align 4, !dbg !318
  br label %4722, !dbg !319

4722:                                             ; preds = %4719, %4717
  store i16 0, i16* %4705, align 2, !dbg !320
  %4723 = load i32, i32* %4703, align 4, !dbg !321
  %4724 = load i32, i32* %4694, align 4, !dbg !322
  %4725 = icmp ult i32 %4723, %4724, !dbg !323
  br i1 %4725, label %4727, label %4726, !dbg !324

4726:                                             ; preds = %4722
  store i8* %4714, i8** %4686, align 8, !dbg !325
  br label %4846, !dbg !326

4727:                                             ; preds = %4722
  store i8* null, i8** %4704, align 8, !dbg !327
  store i32 0, i32* %4703, align 4, !dbg !328
  br label %4753, !dbg !329

4728:                                             ; preds = %4711
  %4729 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 12, i32 0, !dbg !330
  %4730 = load %struct.BtCursor*, %struct.BtCursor** %4729, align 8, !dbg !331
  %4731 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4730), !dbg !332
  store i32 %4731, i32* %4702, align 4, !dbg !333
  %4732 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4730, i32* %4703), !dbg !334
  store i8* %4732, i8** %4704, align 8, !dbg !335
  br label %4712, !dbg !336

4733:                                             ; preds = %4711
  %4734 = icmp eq i8 %4696, 3, !dbg !337
  br i1 %4734, label %4735, label %4746, !dbg !338

4735:                                             ; preds = %4733
  %4736 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 10, !dbg !339
  %4737 = load i32, i32* %4736, align 4, !dbg !340
  %4738 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4737, !dbg !341
  %4739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4738, i32 0, i32 1, !dbg !342
  %4740 = load i16, i16* %4739, align 2, !dbg !343
  %4741 = and i16 %4740, 16, !dbg !344
  %4742 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4738, i32 0, i32 4, !dbg !345
  %4743 = load i32, i32* %4742, align 4, !dbg !346
  store i32 %4743, i32* %4702, align 4, !dbg !347
  store i32 %4743, i32* %4703, align 4, !dbg !348
  %4744 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4738, i32 0, i32 5, !dbg !349
  %4745 = load i8*, i8** %4744, align 8, !dbg !350
  store i8* %4745, i8** %4704, align 8, !dbg !351
  br label %4712, !dbg !352

4746:                                             ; preds = %4733
  %4747 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 1, !dbg !353
  %4748 = load i16, i16* %4747, align 2, !dbg !353
  %4749 = and i16 %4748, 9216, !dbg !353
  %4750 = icmp ne i16 %4749, 0, !dbg !353
  br i1 %4750, label %4751, label %4752, !dbg !353

4751:                                             ; preds = %4746
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4690), !dbg !353
  br label %4934, !dbg !353

4752:                                             ; preds = %4746
  store i16 1, i16* %4747, align 2, !dbg !353
  br label %4934, !dbg !353

4753:                                             ; preds = %4727, %4678
  %4754 = load i16, i16* %4705, align 2, !dbg !354
  %4755 = icmp ule i16 %4754, 10, !dbg !355
  br i1 %4755, label %4838, label %4835, !dbg !356

4756:                                             ; preds = %4835, %4924
  %4757 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 1, !dbg !357
  %4758 = load i16, i16* %4757, align 2, !dbg !358
  %4759 = and i16 9216, %4758, !dbg !359
  %4760 = icmp eq i16 0, %4759, !dbg !360
  br i1 %4760, label %4761, label %4765, !dbg !361

4761:                                             ; preds = %4756
  %4762 = icmp ne i16 %4759, 0, !dbg !362
  br i1 %4762, label %4763, label %4764, !dbg !362

4763:                                             ; preds = %4761
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4690), !dbg !362
  br label %4765, !dbg !362

4764:                                             ; preds = %4761
  store i16 1, i16* %4757, align 2, !dbg !362
  br label %4765, !dbg !362

4765:                                             ; preds = %4763, %4764, %4756
  %4766 = load i32, i32* %4687, align 4, !dbg !363
  %4767 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 23, i32 10, !dbg !364
  %4768 = load i32, i32* %4767, align 4, !dbg !365
  %4769 = load i32, i32* %4703, align 4, !dbg !366
  %4770 = getelementptr i32, i32* %4694, i32 11, !dbg !367
  %4771 = load i32, i32* %4770, align 4, !dbg !368
  %4772 = icmp sge i32 %4769, %4771, !dbg !369
  br i1 %4772, label %4773, label %4813, !dbg !370

4773:                                             ; preds = %4765
  %4774 = load i8*, i8** %4704, align 8, !dbg !371
  %4775 = ptrtoint i8* %4774 to i64, !dbg !372
  %4776 = getelementptr i32, i32* %4694, i32 10, !dbg !373
  %4777 = load i32, i32* %4776, align 4, !dbg !374
  %4778 = zext i32 %4777 to i64, !dbg !375
  %4779 = add i64 %4775, %4778, !dbg !376
  %4780 = inttoptr i64 %4779 to i8*, !dbg !377
  store i8* %4780, i8** %4686, align 8, !dbg !378
  %4781 = load i32, i32* %4687, align 4, !dbg !379
  %4782 = icmp ult i32 %4781, 12, !dbg !380
  br i1 %4782, label %4783, label %4785, !dbg !381

4783:                                             ; preds = %4773
  %4784 = call i32 @sqlite3VdbeSerialGet(i8* %4780, i32 %4781, %struct.sqlite3_value* %4690), !dbg !382
  br label %4934, !dbg !383

4785:                                             ; preds = %4773
  %4786 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %4786, align 2, !dbg !385
  %4787 = getelementptr i16, i16* %4786, i32 1, !dbg !386
  store i16 514, i16* %4787, align 2, !dbg !387
  %4788 = load i32, i32* %4687, align 4, !dbg !388
  %4789 = sub i32 %4788, 12, !dbg !389
  %4790 = lshr i32 %4789, 1, !dbg !390
  %4791 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 4, !dbg !391
  store i32 %4790, i32* %4791, align 4, !dbg !392
  %4792 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 2, !dbg !393
  store i8 %4681, i8* %4792, align 1, !dbg !394
  %4793 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 5, !dbg !395
  %4794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 7, !dbg !396
  %4795 = load i32, i32* %4794, align 4, !dbg !397
  %4796 = add i32 %4790, 2, !dbg !398
  %4797 = icmp slt i32 %4795, %4796, !dbg !399
  br i1 %4797, label %4798, label %4800, !dbg !400

4798:                                             ; preds = %4785
  store i16 1, i16* %4757, align 2, !dbg !401
  %4799 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4690, i32 %4796, i32 0), !dbg !402
  br label %4803, !dbg !403

4800:                                             ; preds = %4785
  %4801 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 6, !dbg !404
  %4802 = load i8*, i8** %4801, align 8, !dbg !405
  store i8* %4802, i8** %4793, align 8, !dbg !406
  br label %4803, !dbg !407

4803:                                             ; preds = %4800, %4798
  %4804 = zext i32 %4790 to i64, !dbg !408
  %4805 = load i8*, i8** %4793, align 8, !dbg !409
  %4806 = load i8*, i8** %4686, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4805, i8* %4806, i64 %4804, i1 false), !dbg !411
  %4807 = getelementptr i8, i8* %4805, i32 %4790, !dbg !412
  store i8 0, i8* %4807, align 1, !dbg !413
  %4808 = add i32 %4790, 1, !dbg !414
  %4809 = getelementptr i8, i8* %4805, i32 %4808, !dbg !415
  store i8 0, i8* %4809, align 1, !dbg !416
  %4810 = and i32 %4788, 1, !dbg !417
  %4811 = getelementptr i16, i16* %4786, i32 %4810, !dbg !418
  %4812 = load i16, i16* %4811, align 2, !dbg !419
  store i16 %4812, i16* %4757, align 2, !dbg !420
  br label %4934, !dbg !421

4813:                                             ; preds = %4765
  %4814 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 2, !dbg !422
  store i8 %4681, i8* %4814, align 1, !dbg !423
  %4815 = load i32, i32* %4687, align 4, !dbg !424
  %4816 = and i32 %4815, 1, !dbg !425
  %4817 = icmp eq i32 %4816, 0, !dbg !426
  %4818 = icmp sge i32 %4815, 12, !dbg !427
  %4819 = and i1 %4818, %4817, !dbg !428
  %4820 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4815), !dbg !429
  %4821 = icmp eq i32 %4820, 0, !dbg !430
  br i1 %4821, label %4833, label %4822, !dbg !431

4822:                                             ; preds = %4813
  %4823 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 12, i32 0, !dbg !432
  %4824 = load %struct.BtCursor*, %struct.BtCursor** %4823, align 8, !dbg !433
  %4825 = getelementptr i32, i32* %4694, i32 10, !dbg !434
  %4826 = load i32, i32* %4825, align 4, !dbg !435
  %4827 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4824, i32 %4826, i32 %4820, %struct.sqlite3_value* %4690), !dbg !436
  %4828 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 5, !dbg !437
  %4829 = load i8*, i8** %4828, align 8, !dbg !438
  %4830 = call i32 @sqlite3VdbeSerialGet(i8* %4829, i32 %4815, %struct.sqlite3_value* %4690), !dbg !439
  %4831 = load i16, i16* %4757, align 2, !dbg !440
  %4832 = and i16 %4831, -4097, !dbg !441
  store i16 %4832, i16* %4757, align 2, !dbg !442
  br label %4934, !dbg !443

4833:                                             ; preds = %4813
  %4834 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4815, %struct.sqlite3_value* %4690), !dbg !444
  br label %4934, !dbg !445

4835:                                             ; preds = %4753
  %4836 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 23, i32 10, !dbg !446
  %4837 = load i32, i32* %4836, align 4, !dbg !447
  store i32 %4837, i32* %4687, align 4, !dbg !448
  br label %4756, !dbg !449

4838:                                             ; preds = %4753
  %4839 = load i32, i32* %4701, align 4, !dbg !450
  %4840 = load i32, i32* %4694, align 4, !dbg !451
  %4841 = icmp ult i32 %4839, %4840, !dbg !452
  br i1 %4841, label %4842, label %4923, !dbg !453

4842:                                             ; preds = %4838
  %4843 = load i8*, i8** %4704, align 8, !dbg !454
  %4844 = icmp eq i8* %4843, null, !dbg !455
  br i1 %4844, label %4846, label %4845, !dbg !456

4845:                                             ; preds = %4842
  store i8* %4843, i8** %4686, align 8, !dbg !457
  br label %4846, !dbg !458

4846:                                             ; preds = %4845, %4842, %4726
  %4847 = alloca i32, align 4, !dbg !459
  %4848 = load i16, i16* %4705, align 2, !dbg !460
  %4849 = zext i16 %4848 to i32, !dbg !461
  store i32 %4849, i32* %4847, align 4, !dbg !462
  %4850 = alloca i64, align 8, !dbg !463
  %4851 = getelementptr i32, i32* %4694, i32 %4849, !dbg !464
  %4852 = load i32, i32* %4851, align 4, !dbg !465
  %4853 = zext i32 %4852 to i64, !dbg !466
  store i64 %4853, i64* %4850, align 4, !dbg !467
  %4854 = load i8*, i8** %4686, align 8, !dbg !468
  %4855 = load i32, i32* %4701, align 4, !dbg !469
  %4856 = alloca i8*, align 8, !dbg !470
  %4857 = getelementptr i8, i8* %4854, i32 %4855, !dbg !471
  store i8* %4857, i8** %4856, align 8, !dbg !472
  %4858 = load i32, i32* %4694, align 4, !dbg !473
  %4859 = getelementptr i8, i8* %4854, i32 %4858, !dbg !474
  br label %4860, !dbg !475

4860:                                             ; preds = %4867, %4846
  %4861 = load i32, i32* %4847, align 4, !dbg !476
  %4862 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4689, i32 0, i32 23, i32 %4861, !dbg !477
  %4863 = load i8*, i8** %4856, align 8, !dbg !478
  %4864 = load i8, i8* %4863, align 1, !dbg !479
  %4865 = zext i8 %4864 to i32, !dbg !480
  store i32 %4865, i32* %4687, align 4, !dbg !481
  store i32 %4865, i32* %4862, align 4, !dbg !482
  %4866 = icmp sgt i8 %4864, -1, !dbg !483
  br i1 %4866, label %4890, label %4881, !dbg !484

4867:                                             ; preds = %4881, %4890
  %4868 = load i32, i32* %4847, align 4, !dbg !485
  %4869 = add i32 %4868, 1, !dbg !486
  store i32 %4869, i32* %4847, align 4, !dbg !487
  %4870 = load i64, i64* %4850, align 4, !dbg !488
  %4871 = and i64 4294967295, %4870, !dbg !489
  %4872 = trunc i64 %4871 to i32, !dbg !490
  %4873 = getelementptr i32, i32* %4694, i32 %4869, !dbg !491
  store i32 %4872, i32* %4873, align 4, !dbg !492
  %4874 = load i32, i32* %4847, align 4, !dbg !493
  %4875 = icmp sle i32 %4874, 10, !dbg !494
  %4876 = load i8*, i8** %4856, align 8, !dbg !495
  %4877 = ptrtoint i8* %4876 to i64, !dbg !496
  %4878 = ptrtoint i8* %4859 to i64, !dbg !497
  %4879 = icmp ult i64 %4877, %4878, !dbg !498
  %4880 = and i1 %4875, %4879, !dbg !499
  br i1 %4880, label %4860, label %4899, !dbg !500

4881:                                             ; preds = %4860
  %4882 = load i8*, i8** %4856, align 8, !dbg !501
  %4883 = call i8 @sqlite3GetVarint32(i8* %4882, i32* %4687), !dbg !502
  %4884 = getelementptr i8, i8* %4882, i8 %4883, !dbg !503
  store i8* %4884, i8** %4856, align 8, !dbg !504
  %4885 = load i32, i32* %4687, align 4, !dbg !505
  store i32 %4885, i32* %4862, align 4, !dbg !506
  %4886 = load i64, i64* %4850, align 4, !dbg !507
  %4887 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4885), !dbg !508
  %4888 = zext i32 %4887 to i64, !dbg !509
  %4889 = add i64 %4886, %4888, !dbg !510
  store i64 %4889, i64* %4850, align 4, !dbg !511
  br label %4867, !dbg !512

4890:                                             ; preds = %4860
  %4891 = getelementptr i8, i8* %4863, i32 1, !dbg !513
  store i8* %4891, i8** %4856, align 8, !dbg !514
  %4892 = load i32, i32* %4687, align 4, !dbg !515
  %4893 = trunc i32 %4892 to i8, !dbg !516
  %4894 = getelementptr i8, i8* %4, i8 %4893, !dbg !517
  %4895 = load i8, i8* %4894, align 1, !dbg !518
  %4896 = zext i8 %4895 to i64, !dbg !519
  %4897 = load i64, i64* %4850, align 4, !dbg !520
  %4898 = add i64 %4897, %4896, !dbg !521
  store i64 %4898, i64* %4850, align 4, !dbg !522
  br label %4867, !dbg !523

4899:                                             ; preds = %4867
  %4900 = load i64, i64* %4850, align 4, !dbg !524
  %4901 = load i32, i32* %4702, align 4, !dbg !525
  %4902 = zext i32 %4901 to i64, !dbg !526
  %4903 = icmp uge i64 %4877, %4878, !dbg !527
  %4904 = icmp ugt i64 %4877, %4878, !dbg !528
  %4905 = icmp ne i64 %4900, %4902, !dbg !529
  %4906 = icmp ugt i64 %4900, %4902, !dbg !530
  %4907 = or i1 %4904, %4905, !dbg !531
  %4908 = and i1 %4903, %4907, !dbg !532
  %4909 = or i1 %4908, %4906, !dbg !533
  br i1 %4909, label %4910, label %4914, !dbg !534

4910:                                             ; preds = %4899
  %4911 = load i32, i32* %4694, align 4, !dbg !535
  %4912 = icmp eq i32 %4911, 0, !dbg !536
  br i1 %4912, label %4913, label %4914, !dbg !537

4913:                                             ; preds = %4910
  store i32 0, i32* %4847, align 4, !dbg !538
  store i8* %4859, i8** %4856, align 8, !dbg !539
  br label %4914, !dbg !540

4914:                                             ; preds = %4913, %4910, %4899
  %4915 = load i32, i32* %4847, align 4, !dbg !541
  %4916 = trunc i32 %4915 to i16, !dbg !542
  store i16 %4916, i16* %4705, align 2, !dbg !543
  %4917 = load i8*, i8** %4856, align 8, !dbg !544
  %4918 = ptrtoint i8* %4917 to i64, !dbg !545
  %4919 = load i8*, i8** %4686, align 8, !dbg !546
  %4920 = ptrtoint i8* %4919 to i64, !dbg !547
  %4921 = sub i64 %4918, %4920, !dbg !548
  %4922 = trunc i64 %4921 to i32, !dbg !549
  store i32 %4922, i32* %4701, align 4, !dbg !550
  br label %4924, !dbg !551

4923:                                             ; preds = %4838
  store i32 0, i32* %4687, align 4, !dbg !552
  br label %4924, !dbg !553

4924:                                             ; preds = %4914, %4923
  %4925 = load i16, i16* %4705, align 2, !dbg !554
  %4926 = icmp sle i16 %4925, 10, !dbg !555
  br i1 %4926, label %4927, label %4756, !dbg !556

4927:                                             ; preds = %4924
  %4928 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4690, i32 0, i32 1, !dbg !557
  %4929 = load i16, i16* %4928, align 2, !dbg !557
  %4930 = and i16 %4929, 9216, !dbg !557
  %4931 = icmp ne i16 %4930, 0, !dbg !557
  br i1 %4931, label %4932, label %4933, !dbg !557

4932:                                             ; preds = %4927
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4690), !dbg !557
  br label %4934, !dbg !557

4933:                                             ; preds = %4927
  store i16 1, i16* %4928, align 2, !dbg !557
  br label %4934, !dbg !557

4934:                                             ; preds = %4932, %4933, %4803, %4783, %4822, %4833, %4751, %4752
  call void @llvm.stackrestore(i8* %4679), !dbg !558
  br label %4935, !dbg !75

4935:                                             ; preds = %18, %4934
  %4936 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %4937 = load %struct.VdbeFrame*, %struct.VdbeFrame** %4936, align 8, !dbg !79
  %4938 = ptrtoint %struct.VdbeFrame* %4937 to i64, !dbg !80
  %4939 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %4940 = load i32, i32* %4939, align 4, !dbg !82
  %4941 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 82, i32 3, !dbg !83
  %4942 = icmp ne i64 %4938, 0, !dbg !84
  br i1 %4942, label %4943, label %4948, !dbg !85

4943:                                             ; preds = %4935
  %4944 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %4937, i32 0, i32 6, !dbg !86
  %4945 = load i8*, i8** %4944, align 8, !dbg !87
  %4946 = getelementptr i8, i8* %4945, i32 10, !dbg !559
  %4947 = load i8, i8* %4946, align 1, !dbg !88
  br label %4951, !dbg !89

4948:                                             ; preds = %4935
  %4949 = load i32, i32* %4941, align 4, !dbg !90
  %4950 = icmp eq i32 %4949, %4940, !dbg !91
  br i1 %4950, label %5017, label %4951, !dbg !92

4951:                                             ; preds = %4948, %4943
  store i32 %4940, i32* %4941, align 4, !dbg !93
  br label %4952, !dbg !94

4952:                                             ; preds = %18, %4951
  %4953 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 83, !dbg !560
  %4954 = call i8* @llvm.stacksave(), !dbg !563
  %4955 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4953, i32 0, i32 4, !dbg !67
  %4956 = load i32, i32* %4955, align 4, !dbg !70
  %4957 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4956, !dbg !71
  %4958 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4957, i32 0, i32 1, !dbg !563
  %4959 = load i16, i16* %4958, align 2, !dbg !563
  %4960 = and i16 %4959, 9216, !dbg !563
  %4961 = icmp ne i16 %4960, 0, !dbg !563
  %4962 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %4961, label %4963, label %4965, !dbg !563

4963:                                             ; preds = %4952
  %4964 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %4957), !dbg !563
  store %struct.sqlite3_value* %4964, %struct.sqlite3_value** %4962, align 8, !dbg !563
  br label %4966, !dbg !563

4965:                                             ; preds = %4952
  store i16 4, i16* %4958, align 2, !dbg !563
  store %struct.sqlite3_value* %4957, %struct.sqlite3_value** %4962, align 8, !dbg !563
  br label %4966, !dbg !563

4966:                                             ; preds = %4965, %4963
  %4967 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4962, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %4954), !dbg !563
  %4968 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4967, i32 0, i32 1, !dbg !564
  %4969 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4967, i32 0, i32 2, !dbg !565
  %4970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4967, i32 0, i32 4, !dbg !566
  %4971 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4967, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %4968, align 2, !dbg !568
  %4972 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4953, i32 0, i32 6, !dbg !569
  %4973 = bitcast %union.p4union* %4972 to i8**, !dbg !570
  %4974 = load i8*, i8** %4973, align 8, !dbg !571
  store i8* %4974, i8** %4971, align 8, !dbg !572
  store i32 10, i32* %4970, align 4, !dbg !573
  store i8 1, i8* %4969, align 1, !dbg !574
  br label %4975, !dbg !75

4975:                                             ; preds = %18, %4966
  %4976 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !575
  %4977 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 44, !dbg !578
  %4978 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 84, !dbg !579
  %4979 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4978, i32 0, i32 6, !dbg !580
  %4980 = bitcast %union.p4union* %4979 to %struct.sqlite3_context**, !dbg !581
  %4981 = load %struct.sqlite3_context*, %struct.sqlite3_context** %4980, align 8, !dbg !582
  %4982 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 0, !dbg !583
  %4983 = load %struct.sqlite3_value*, %struct.sqlite3_value** %4982, align 8, !dbg !584
  %4984 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 1, !dbg !585
  %4985 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 7, !dbg !586
  %4986 = load i8, i8* %4985, align 1, !dbg !587
  %4987 = zext i8 %4986 to i32, !dbg !588
  %4988 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 8, !dbg !589
  %4989 = bitcast [1 x %struct.sqlite3_value*]* %4988 to %struct.sqlite3_value**, !dbg !590
  %4990 = ptrtoint %struct.sqlite3_value* %4983 to i64, !dbg !591
  %4991 = ptrtoint %struct.sqlite3_value* %4977 to i64, !dbg !592
  %4992 = icmp ne i64 %4990, %4991, !dbg !593
  br i1 %4992, label %4993, label %4996, !dbg !594

4993:                                             ; preds = %4975
  %4994 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 3, !dbg !595
  store %struct.Vdbe* %0, %struct.Vdbe** %4994, align 8, !dbg !596
  store %struct.sqlite3_value* %4977, %struct.sqlite3_value** %4982, align 8, !dbg !597
  %4995 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 45, !dbg !598
  store %struct.sqlite3_value* %4995, %struct.sqlite3_value** %4989, align 8, !dbg !599
  br label %4996, !dbg !600

4996:                                             ; preds = %4975, %4993
  %4997 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4977, i32 0, i32 1, !dbg !601
  %4998 = load i16, i16* %4997, align 2, !dbg !602
  %4999 = and i16 %4998, 15936, !dbg !602
  %5000 = or i16 %4999, 1, !dbg !602
  store i16 %5000, i16* %4997, align 2, !dbg !602
  %5001 = load %struct.FuncDef*, %struct.FuncDef** %4984, align 8, !dbg !603
  %5002 = getelementptr %struct.FuncDef, %struct.FuncDef* %5001, i32 0, i32 4, !dbg !604
  %5003 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %5002, align 8, !dbg !605
  call void %5003(%struct.sqlite3_context* %4981, i32 %4987, %struct.sqlite3_value** %4989), !dbg !606
  %5004 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %4981, i32 0, i32 5, !dbg !607
  %5005 = load i32, i32* %5004, align 4, !dbg !608
  %5006 = icmp ne i32 %5005, 0, !dbg !609
  %5007 = icmp sgt i32 %5005, 0, !dbg !610
  br i1 %5007, label %5008, label %5010, !dbg !611

5008:                                             ; preds = %4996
  %5009 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %4977), !dbg !612
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %5009), !dbg !613
  br label %5010, !dbg !614

5010:                                             ; preds = %5008, %4996
  %5011 = load i16, i16* %4997, align 2, !dbg !615
  %5012 = and i16 %5011, 18, !dbg !616
  %5013 = icmp ne i16 %5012, 0, !dbg !617
  br i1 %5013, label %5014, label %5017, !dbg !618

5014:                                             ; preds = %5010
  %5015 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %4977, i32 1), !dbg !619
  %5016 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %4977), !dbg !620
  br label %5017, !dbg !621

5017:                                             ; preds = %5014, %5010, %18, %4948
  %5018 = call i8* @llvm.stacksave(), !dbg !622
  %5019 = alloca i32, align 8, !dbg !625
  %5020 = alloca i32, align 8, !dbg !626
  %5021 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 44, !dbg !627
  %5022 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !628
  %5023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5021, i32 0, i32 1, !dbg !629
  %5024 = load i16, i16* %5023, align 2, !dbg !630
  %5025 = alloca i16, align 8, !dbg !631
  store i16 %5024, i16* %5025, align 2, !dbg !632
  %5026 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5022, i32 0, i32 1, !dbg !633
  %5027 = load i16, i16* %5026, align 2, !dbg !634
  %5028 = alloca i16, align 8, !dbg !635
  store i16 %5027, i16* %5028, align 2, !dbg !636
  %5029 = or i16 %5024, %5027, !dbg !637
  %5030 = and i16 %5029, 1, !dbg !638
  %5031 = icmp ne i16 %5030, 0, !dbg !639
  br i1 %5031, label %5032, label %5033, !dbg !640

5032:                                             ; preds = %5017
  call void @llvm.stackrestore(i8* %5018), !dbg !641
  br label %6699, !dbg !642

5033:                                             ; preds = %5017
  %5034 = and i16 %5024, 2, !dbg !643
  %5035 = and i16 %5024, 44, !dbg !644
  %5036 = icmp eq i16 %5034, 0, !dbg !645
  %5037 = icmp ne i16 %5035, 0, !dbg !646
  %5038 = and i16 %5027, 2, !dbg !647
  %5039 = and i16 %5027, 44, !dbg !648
  %5040 = icmp eq i16 %5038, 0, !dbg !649
  %5041 = icmp ne i16 %5039, 0, !dbg !650
  %5042 = and i1 %5036, %5037, !dbg !651
  br i1 %5042, label %5043, label %5049, !dbg !652

5043:                                             ; preds = %5033
  %5044 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5021, i8 1, i8 1), !dbg !653
  %5045 = load i16, i16* %5023, align 2, !dbg !654
  %5046 = and i16 %5045, 15936, !dbg !654
  %5047 = and i16 %5024, -15937, !dbg !655
  %5048 = or i16 %5046, %5047, !dbg !656
  store i16 %5048, i16* %5025, align 2, !dbg !657
  br label %5049, !dbg !658

5049:                                             ; preds = %5043, %5033
  %5050 = and i1 %5040, %5041, !dbg !659
  br i1 %5050, label %5051, label %5057, !dbg !660

5051:                                             ; preds = %5049
  %5052 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5022, i8 1, i8 1), !dbg !661
  %5053 = load i16, i16* %5026, align 2, !dbg !662
  %5054 = and i16 %5053, 15936, !dbg !662
  %5055 = and i16 %5027, -15937, !dbg !663
  %5056 = or i16 %5054, %5055, !dbg !664
  store i16 %5056, i16* %5028, align 2, !dbg !665
  br label %5057, !dbg !666

5057:                                             ; preds = %5051, %5049
  %5058 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 85, !dbg !667
  %5059 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5058, i32 0, i32 6, !dbg !668
  %5060 = bitcast %union.p4union* %5059 to %struct.CollSeq**, !dbg !669
  %5061 = load %struct.CollSeq*, %struct.CollSeq** %5060, align 8, !dbg !670
  %5062 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5022, %struct.sqlite3_value* %5021, %struct.CollSeq* %5061), !dbg !671
  store i32 %5062, i32* %5019, align 4, !dbg !672
  %5063 = icmp slt i32 %5062, 0, !dbg !673
  br i1 %5063, label %5064, label %5065, !dbg !674

5064:                                             ; preds = %5057
  store i32 1, i32* %5020, align 4, !dbg !675
  br label %5066, !dbg !676

5065:                                             ; preds = %5057
  store i32 0, i32* %5020, align 4, !dbg !677
  br label %5066, !dbg !677

5066:                                             ; preds = %5065, %5064
  store i16 %5027, i16* %5028, align 2, !dbg !678
  store i16 %5024, i16* %5025, align 2, !dbg !679
  %5067 = load i32, i32* %5020, align 4, !dbg !680
  %5068 = icmp ne i32 %5067, 0, !dbg !681
  call void @llvm.stackrestore(i8* %5018), !dbg !682
  br i1 %5068, label %6699, label %5069, !dbg !683

5069:                                             ; preds = %18, %5066
  %5070 = call i8* @llvm.stacksave(), !dbg !266
  %5071 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %5072 = load i8, i8* %5071, align 1, !dbg !270
  %5073 = alloca i32, align 4, !dbg !271
  store i32 4, i32* %5073, align 4, !dbg !272
  %5074 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !273
  %5075 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %5076 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5074, align 8, !dbg !275
  store %struct.VdbeCursor* %5076, %struct.VdbeCursor** %5075, align 8, !dbg !276
  %5077 = alloca i8*, align 8, !dbg !277
  %5078 = alloca i32, align 4, !dbg !278
  %5079 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5075, i32* %5073), !dbg !279
  %5080 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5075, align 8, !dbg !280
  %5081 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !281
  %5082 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 16, !dbg !282
  %5083 = load i16, i16* %5082, align 2, !dbg !283
  %5084 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 19, !dbg !284
  %5085 = load i32*, i32** %5084, align 8, !dbg !285
  %5086 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 0, !dbg !286
  %5087 = load i8, i8* %5086, align 1, !dbg !287
  %5088 = icmp ne i8 %5087, 3, !dbg !288
  %5089 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 2, !dbg !289
  %5090 = load i8, i8* %5089, align 1, !dbg !290
  %5091 = icmp ne i8 %5090, 0, !dbg !291
  %5092 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 14, !dbg !292
  %5093 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 21, !dbg !293
  %5094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 22, !dbg !294
  %5095 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 20, !dbg !295
  %5096 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 17, !dbg !296
  %5097 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 9, !dbg !297
  %5098 = load i32, i32* %5097, align 4, !dbg !298
  %5099 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %5100 = load i32, i32* %5099, align 4, !dbg !300
  %5101 = icmp ne i32 %5098, %5100, !dbg !301
  br i1 %5101, label %5102, label %5144, !dbg !302

5102:                                             ; preds = %5069
  br i1 %5091, label %5124, label %5119, !dbg !303

5103:                                             ; preds = %5119, %5126
  %5104 = load i32, i32* %5099, align 4, !dbg !304
  store i32 %5104, i32* %5097, align 4, !dbg !305
  %5105 = load i8*, i8** %5095, align 8, !dbg !306
  %5106 = load i8, i8* %5105, align 1, !dbg !307
  %5107 = icmp sgt i8 %5106, -1, !dbg !310
  br i1 %5107, label %5108, label %5110, !dbg !311

5108:                                             ; preds = %5103
  %5109 = zext i8 %5106 to i32, !dbg !312
  store i32 %5109, i32* %5085, align 4, !dbg !313
  store i32 1, i32* %5092, align 4, !dbg !314
  br label %5113, !dbg !315

5110:                                             ; preds = %5103
  %5111 = call i8 @sqlite3GetVarint32(i8* %5105, i32* %5085), !dbg !316
  %5112 = zext i8 %5111 to i32, !dbg !317
  store i32 %5112, i32* %5092, align 4, !dbg !318
  br label %5113, !dbg !319

5113:                                             ; preds = %5110, %5108
  store i16 0, i16* %5096, align 2, !dbg !320
  %5114 = load i32, i32* %5094, align 4, !dbg !321
  %5115 = load i32, i32* %5085, align 4, !dbg !322
  %5116 = icmp ult i32 %5114, %5115, !dbg !323
  br i1 %5116, label %5118, label %5117, !dbg !324

5117:                                             ; preds = %5113
  store i8* %5105, i8** %5077, align 8, !dbg !325
  br label %5237, !dbg !326

5118:                                             ; preds = %5113
  store i8* null, i8** %5095, align 8, !dbg !327
  store i32 0, i32* %5094, align 4, !dbg !328
  br label %5144, !dbg !329

5119:                                             ; preds = %5102
  %5120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 12, i32 0, !dbg !330
  %5121 = load %struct.BtCursor*, %struct.BtCursor** %5120, align 8, !dbg !331
  %5122 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5121), !dbg !332
  store i32 %5122, i32* %5093, align 4, !dbg !333
  %5123 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5121, i32* %5094), !dbg !334
  store i8* %5123, i8** %5095, align 8, !dbg !335
  br label %5103, !dbg !336

5124:                                             ; preds = %5102
  %5125 = icmp eq i8 %5087, 3, !dbg !337
  br i1 %5125, label %5126, label %5137, !dbg !338

5126:                                             ; preds = %5124
  %5127 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 10, !dbg !339
  %5128 = load i32, i32* %5127, align 4, !dbg !340
  %5129 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5128, !dbg !341
  %5130 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5129, i32 0, i32 1, !dbg !342
  %5131 = load i16, i16* %5130, align 2, !dbg !343
  %5132 = and i16 %5131, 16, !dbg !344
  %5133 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5129, i32 0, i32 4, !dbg !345
  %5134 = load i32, i32* %5133, align 4, !dbg !346
  store i32 %5134, i32* %5093, align 4, !dbg !347
  store i32 %5134, i32* %5094, align 4, !dbg !348
  %5135 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5129, i32 0, i32 5, !dbg !349
  %5136 = load i8*, i8** %5135, align 8, !dbg !350
  store i8* %5136, i8** %5095, align 8, !dbg !351
  br label %5103, !dbg !352

5137:                                             ; preds = %5124
  %5138 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 1, !dbg !353
  %5139 = load i16, i16* %5138, align 2, !dbg !353
  %5140 = and i16 %5139, 9216, !dbg !353
  %5141 = icmp ne i16 %5140, 0, !dbg !353
  br i1 %5141, label %5142, label %5143, !dbg !353

5142:                                             ; preds = %5137
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5081), !dbg !353
  br label %5325, !dbg !353

5143:                                             ; preds = %5137
  store i16 1, i16* %5138, align 2, !dbg !353
  br label %5325, !dbg !353

5144:                                             ; preds = %5118, %5069
  %5145 = load i16, i16* %5096, align 2, !dbg !354
  %5146 = icmp ule i16 %5145, 10, !dbg !355
  br i1 %5146, label %5229, label %5226, !dbg !356

5147:                                             ; preds = %5226, %5315
  %5148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 1, !dbg !357
  %5149 = load i16, i16* %5148, align 2, !dbg !358
  %5150 = and i16 9216, %5149, !dbg !359
  %5151 = icmp eq i16 0, %5150, !dbg !360
  br i1 %5151, label %5152, label %5156, !dbg !361

5152:                                             ; preds = %5147
  %5153 = icmp ne i16 %5150, 0, !dbg !362
  br i1 %5153, label %5154, label %5155, !dbg !362

5154:                                             ; preds = %5152
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5081), !dbg !362
  br label %5156, !dbg !362

5155:                                             ; preds = %5152
  store i16 1, i16* %5148, align 2, !dbg !362
  br label %5156, !dbg !362

5156:                                             ; preds = %5154, %5155, %5147
  %5157 = load i32, i32* %5078, align 4, !dbg !363
  %5158 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 23, i32 10, !dbg !364
  %5159 = load i32, i32* %5158, align 4, !dbg !365
  %5160 = load i32, i32* %5094, align 4, !dbg !366
  %5161 = getelementptr i32, i32* %5085, i32 11, !dbg !367
  %5162 = load i32, i32* %5161, align 4, !dbg !368
  %5163 = icmp sge i32 %5160, %5162, !dbg !369
  br i1 %5163, label %5164, label %5204, !dbg !370

5164:                                             ; preds = %5156
  %5165 = load i8*, i8** %5095, align 8, !dbg !371
  %5166 = ptrtoint i8* %5165 to i64, !dbg !372
  %5167 = getelementptr i32, i32* %5085, i32 10, !dbg !373
  %5168 = load i32, i32* %5167, align 4, !dbg !374
  %5169 = zext i32 %5168 to i64, !dbg !375
  %5170 = add i64 %5166, %5169, !dbg !376
  %5171 = inttoptr i64 %5170 to i8*, !dbg !377
  store i8* %5171, i8** %5077, align 8, !dbg !378
  %5172 = load i32, i32* %5078, align 4, !dbg !379
  %5173 = icmp ult i32 %5172, 12, !dbg !380
  br i1 %5173, label %5174, label %5176, !dbg !381

5174:                                             ; preds = %5164
  %5175 = call i32 @sqlite3VdbeSerialGet(i8* %5171, i32 %5172, %struct.sqlite3_value* %5081), !dbg !382
  br label %5325, !dbg !383

5176:                                             ; preds = %5164
  %5177 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %5177, align 2, !dbg !385
  %5178 = getelementptr i16, i16* %5177, i32 1, !dbg !386
  store i16 514, i16* %5178, align 2, !dbg !387
  %5179 = load i32, i32* %5078, align 4, !dbg !388
  %5180 = sub i32 %5179, 12, !dbg !389
  %5181 = lshr i32 %5180, 1, !dbg !390
  %5182 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 4, !dbg !391
  store i32 %5181, i32* %5182, align 4, !dbg !392
  %5183 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 2, !dbg !393
  store i8 %5072, i8* %5183, align 1, !dbg !394
  %5184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 5, !dbg !395
  %5185 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 7, !dbg !396
  %5186 = load i32, i32* %5185, align 4, !dbg !397
  %5187 = add i32 %5181, 2, !dbg !398
  %5188 = icmp slt i32 %5186, %5187, !dbg !399
  br i1 %5188, label %5189, label %5191, !dbg !400

5189:                                             ; preds = %5176
  store i16 1, i16* %5148, align 2, !dbg !401
  %5190 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5081, i32 %5187, i32 0), !dbg !402
  br label %5194, !dbg !403

5191:                                             ; preds = %5176
  %5192 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 6, !dbg !404
  %5193 = load i8*, i8** %5192, align 8, !dbg !405
  store i8* %5193, i8** %5184, align 8, !dbg !406
  br label %5194, !dbg !407

5194:                                             ; preds = %5191, %5189
  %5195 = zext i32 %5181 to i64, !dbg !408
  %5196 = load i8*, i8** %5184, align 8, !dbg !409
  %5197 = load i8*, i8** %5077, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5196, i8* %5197, i64 %5195, i1 false), !dbg !411
  %5198 = getelementptr i8, i8* %5196, i32 %5181, !dbg !412
  store i8 0, i8* %5198, align 1, !dbg !413
  %5199 = add i32 %5181, 1, !dbg !414
  %5200 = getelementptr i8, i8* %5196, i32 %5199, !dbg !415
  store i8 0, i8* %5200, align 1, !dbg !416
  %5201 = and i32 %5179, 1, !dbg !417
  %5202 = getelementptr i16, i16* %5177, i32 %5201, !dbg !418
  %5203 = load i16, i16* %5202, align 2, !dbg !419
  store i16 %5203, i16* %5148, align 2, !dbg !420
  br label %5325, !dbg !421

5204:                                             ; preds = %5156
  %5205 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 2, !dbg !422
  store i8 %5072, i8* %5205, align 1, !dbg !423
  %5206 = load i32, i32* %5078, align 4, !dbg !424
  %5207 = and i32 %5206, 1, !dbg !425
  %5208 = icmp eq i32 %5207, 0, !dbg !426
  %5209 = icmp sge i32 %5206, 12, !dbg !427
  %5210 = and i1 %5209, %5208, !dbg !428
  %5211 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5206), !dbg !429
  %5212 = icmp eq i32 %5211, 0, !dbg !430
  br i1 %5212, label %5224, label %5213, !dbg !431

5213:                                             ; preds = %5204
  %5214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 12, i32 0, !dbg !432
  %5215 = load %struct.BtCursor*, %struct.BtCursor** %5214, align 8, !dbg !433
  %5216 = getelementptr i32, i32* %5085, i32 10, !dbg !434
  %5217 = load i32, i32* %5216, align 4, !dbg !435
  %5218 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5215, i32 %5217, i32 %5211, %struct.sqlite3_value* %5081), !dbg !436
  %5219 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 5, !dbg !437
  %5220 = load i8*, i8** %5219, align 8, !dbg !438
  %5221 = call i32 @sqlite3VdbeSerialGet(i8* %5220, i32 %5206, %struct.sqlite3_value* %5081), !dbg !439
  %5222 = load i16, i16* %5148, align 2, !dbg !440
  %5223 = and i16 %5222, -4097, !dbg !441
  store i16 %5223, i16* %5148, align 2, !dbg !442
  br label %5325, !dbg !443

5224:                                             ; preds = %5204
  %5225 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5206, %struct.sqlite3_value* %5081), !dbg !444
  br label %5325, !dbg !445

5226:                                             ; preds = %5144
  %5227 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 23, i32 10, !dbg !446
  %5228 = load i32, i32* %5227, align 4, !dbg !447
  store i32 %5228, i32* %5078, align 4, !dbg !448
  br label %5147, !dbg !449

5229:                                             ; preds = %5144
  %5230 = load i32, i32* %5092, align 4, !dbg !450
  %5231 = load i32, i32* %5085, align 4, !dbg !451
  %5232 = icmp ult i32 %5230, %5231, !dbg !452
  br i1 %5232, label %5233, label %5314, !dbg !453

5233:                                             ; preds = %5229
  %5234 = load i8*, i8** %5095, align 8, !dbg !454
  %5235 = icmp eq i8* %5234, null, !dbg !455
  br i1 %5235, label %5237, label %5236, !dbg !456

5236:                                             ; preds = %5233
  store i8* %5234, i8** %5077, align 8, !dbg !457
  br label %5237, !dbg !458

5237:                                             ; preds = %5236, %5233, %5117
  %5238 = alloca i32, align 4, !dbg !459
  %5239 = load i16, i16* %5096, align 2, !dbg !460
  %5240 = zext i16 %5239 to i32, !dbg !461
  store i32 %5240, i32* %5238, align 4, !dbg !462
  %5241 = alloca i64, align 8, !dbg !463
  %5242 = getelementptr i32, i32* %5085, i32 %5240, !dbg !464
  %5243 = load i32, i32* %5242, align 4, !dbg !465
  %5244 = zext i32 %5243 to i64, !dbg !466
  store i64 %5244, i64* %5241, align 4, !dbg !467
  %5245 = load i8*, i8** %5077, align 8, !dbg !468
  %5246 = load i32, i32* %5092, align 4, !dbg !469
  %5247 = alloca i8*, align 8, !dbg !470
  %5248 = getelementptr i8, i8* %5245, i32 %5246, !dbg !471
  store i8* %5248, i8** %5247, align 8, !dbg !472
  %5249 = load i32, i32* %5085, align 4, !dbg !473
  %5250 = getelementptr i8, i8* %5245, i32 %5249, !dbg !474
  br label %5251, !dbg !475

5251:                                             ; preds = %5258, %5237
  %5252 = load i32, i32* %5238, align 4, !dbg !476
  %5253 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5080, i32 0, i32 23, i32 %5252, !dbg !477
  %5254 = load i8*, i8** %5247, align 8, !dbg !478
  %5255 = load i8, i8* %5254, align 1, !dbg !479
  %5256 = zext i8 %5255 to i32, !dbg !480
  store i32 %5256, i32* %5078, align 4, !dbg !481
  store i32 %5256, i32* %5253, align 4, !dbg !482
  %5257 = icmp sgt i8 %5255, -1, !dbg !483
  br i1 %5257, label %5281, label %5272, !dbg !484

5258:                                             ; preds = %5272, %5281
  %5259 = load i32, i32* %5238, align 4, !dbg !485
  %5260 = add i32 %5259, 1, !dbg !486
  store i32 %5260, i32* %5238, align 4, !dbg !487
  %5261 = load i64, i64* %5241, align 4, !dbg !488
  %5262 = and i64 4294967295, %5261, !dbg !489
  %5263 = trunc i64 %5262 to i32, !dbg !490
  %5264 = getelementptr i32, i32* %5085, i32 %5260, !dbg !491
  store i32 %5263, i32* %5264, align 4, !dbg !492
  %5265 = load i32, i32* %5238, align 4, !dbg !493
  %5266 = icmp sle i32 %5265, 10, !dbg !494
  %5267 = load i8*, i8** %5247, align 8, !dbg !495
  %5268 = ptrtoint i8* %5267 to i64, !dbg !496
  %5269 = ptrtoint i8* %5250 to i64, !dbg !497
  %5270 = icmp ult i64 %5268, %5269, !dbg !498
  %5271 = and i1 %5266, %5270, !dbg !499
  br i1 %5271, label %5251, label %5290, !dbg !500

5272:                                             ; preds = %5251
  %5273 = load i8*, i8** %5247, align 8, !dbg !501
  %5274 = call i8 @sqlite3GetVarint32(i8* %5273, i32* %5078), !dbg !502
  %5275 = getelementptr i8, i8* %5273, i8 %5274, !dbg !503
  store i8* %5275, i8** %5247, align 8, !dbg !504
  %5276 = load i32, i32* %5078, align 4, !dbg !505
  store i32 %5276, i32* %5253, align 4, !dbg !506
  %5277 = load i64, i64* %5241, align 4, !dbg !507
  %5278 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5276), !dbg !508
  %5279 = zext i32 %5278 to i64, !dbg !509
  %5280 = add i64 %5277, %5279, !dbg !510
  store i64 %5280, i64* %5241, align 4, !dbg !511
  br label %5258, !dbg !512

5281:                                             ; preds = %5251
  %5282 = getelementptr i8, i8* %5254, i32 1, !dbg !513
  store i8* %5282, i8** %5247, align 8, !dbg !514
  %5283 = load i32, i32* %5078, align 4, !dbg !515
  %5284 = trunc i32 %5283 to i8, !dbg !516
  %5285 = getelementptr i8, i8* %4, i8 %5284, !dbg !517
  %5286 = load i8, i8* %5285, align 1, !dbg !518
  %5287 = zext i8 %5286 to i64, !dbg !519
  %5288 = load i64, i64* %5241, align 4, !dbg !520
  %5289 = add i64 %5288, %5287, !dbg !521
  store i64 %5289, i64* %5241, align 4, !dbg !522
  br label %5258, !dbg !523

5290:                                             ; preds = %5258
  %5291 = load i64, i64* %5241, align 4, !dbg !524
  %5292 = load i32, i32* %5093, align 4, !dbg !525
  %5293 = zext i32 %5292 to i64, !dbg !526
  %5294 = icmp uge i64 %5268, %5269, !dbg !527
  %5295 = icmp ugt i64 %5268, %5269, !dbg !528
  %5296 = icmp ne i64 %5291, %5293, !dbg !529
  %5297 = icmp ugt i64 %5291, %5293, !dbg !530
  %5298 = or i1 %5295, %5296, !dbg !531
  %5299 = and i1 %5294, %5298, !dbg !532
  %5300 = or i1 %5299, %5297, !dbg !533
  br i1 %5300, label %5301, label %5305, !dbg !534

5301:                                             ; preds = %5290
  %5302 = load i32, i32* %5085, align 4, !dbg !535
  %5303 = icmp eq i32 %5302, 0, !dbg !536
  br i1 %5303, label %5304, label %5305, !dbg !537

5304:                                             ; preds = %5301
  store i32 0, i32* %5238, align 4, !dbg !538
  store i8* %5250, i8** %5247, align 8, !dbg !539
  br label %5305, !dbg !540

5305:                                             ; preds = %5304, %5301, %5290
  %5306 = load i32, i32* %5238, align 4, !dbg !541
  %5307 = trunc i32 %5306 to i16, !dbg !542
  store i16 %5307, i16* %5096, align 2, !dbg !543
  %5308 = load i8*, i8** %5247, align 8, !dbg !544
  %5309 = ptrtoint i8* %5308 to i64, !dbg !545
  %5310 = load i8*, i8** %5077, align 8, !dbg !546
  %5311 = ptrtoint i8* %5310 to i64, !dbg !547
  %5312 = sub i64 %5309, %5311, !dbg !548
  %5313 = trunc i64 %5312 to i32, !dbg !549
  store i32 %5313, i32* %5092, align 4, !dbg !550
  br label %5315, !dbg !551

5314:                                             ; preds = %5229
  store i32 0, i32* %5078, align 4, !dbg !552
  br label %5315, !dbg !553

5315:                                             ; preds = %5305, %5314
  %5316 = load i16, i16* %5096, align 2, !dbg !554
  %5317 = icmp sle i16 %5316, 10, !dbg !555
  br i1 %5317, label %5318, label %5147, !dbg !556

5318:                                             ; preds = %5315
  %5319 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5081, i32 0, i32 1, !dbg !557
  %5320 = load i16, i16* %5319, align 2, !dbg !557
  %5321 = and i16 %5320, 9216, !dbg !557
  %5322 = icmp ne i16 %5321, 0, !dbg !557
  br i1 %5322, label %5323, label %5324, !dbg !557

5323:                                             ; preds = %5318
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5081), !dbg !557
  br label %5325, !dbg !557

5324:                                             ; preds = %5318
  store i16 1, i16* %5319, align 2, !dbg !557
  br label %5325, !dbg !557

5325:                                             ; preds = %5323, %5324, %5194, %5174, %5213, %5224, %5142, %5143
  call void @llvm.stackrestore(i8* %5070), !dbg !558
  br label %5326, !dbg !75

5326:                                             ; preds = %18, %5325
  %5327 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !76
  %5328 = load %struct.VdbeFrame*, %struct.VdbeFrame** %5327, align 8, !dbg !79
  %5329 = ptrtoint %struct.VdbeFrame* %5328 to i64, !dbg !80
  %5330 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !81
  %5331 = load i32, i32* %5330, align 4, !dbg !82
  %5332 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 87, i32 3, !dbg !83
  %5333 = icmp ne i64 %5329, 0, !dbg !84
  br i1 %5333, label %5334, label %5339, !dbg !85

5334:                                             ; preds = %5326
  %5335 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %5328, i32 0, i32 6, !dbg !86
  %5336 = load i8*, i8** %5335, align 8, !dbg !87
  %5337 = getelementptr i8, i8* %5336, i32 10, !dbg !559
  %5338 = load i8, i8* %5337, align 1, !dbg !88
  br label %5342, !dbg !89

5339:                                             ; preds = %5326
  %5340 = load i32, i32* %5332, align 4, !dbg !90
  %5341 = icmp eq i32 %5340, %5331, !dbg !91
  br i1 %5341, label %5433, label %5342, !dbg !92

5342:                                             ; preds = %5339, %5334
  store i32 %5331, i32* %5332, align 4, !dbg !93
  br label %5343, !dbg !94

5343:                                             ; preds = %18, %5342
  %5344 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 88, !dbg !560
  %5345 = call i8* @llvm.stacksave(), !dbg !563
  %5346 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5344, i32 0, i32 4, !dbg !67
  %5347 = load i32, i32* %5346, align 4, !dbg !70
  %5348 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5347, !dbg !71
  %5349 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5348, i32 0, i32 1, !dbg !563
  %5350 = load i16, i16* %5349, align 2, !dbg !563
  %5351 = and i16 %5350, 9216, !dbg !563
  %5352 = icmp ne i16 %5351, 0, !dbg !563
  %5353 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %5352, label %5354, label %5356, !dbg !563

5354:                                             ; preds = %5343
  %5355 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %5348), !dbg !563
  store %struct.sqlite3_value* %5355, %struct.sqlite3_value** %5353, align 8, !dbg !563
  br label %5357, !dbg !563

5356:                                             ; preds = %5343
  store i16 4, i16* %5349, align 2, !dbg !563
  store %struct.sqlite3_value* %5348, %struct.sqlite3_value** %5353, align 8, !dbg !563
  br label %5357, !dbg !563

5357:                                             ; preds = %5356, %5354
  %5358 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5353, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %5345), !dbg !563
  %5359 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5358, i32 0, i32 1, !dbg !564
  %5360 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5358, i32 0, i32 2, !dbg !565
  %5361 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5358, i32 0, i32 4, !dbg !566
  %5362 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5358, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %5359, align 2, !dbg !568
  %5363 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5344, i32 0, i32 6, !dbg !569
  %5364 = bitcast %union.p4union* %5363 to i8**, !dbg !570
  %5365 = load i8*, i8** %5364, align 8, !dbg !571
  store i8* %5365, i8** %5362, align 8, !dbg !572
  store i32 10, i32* %5361, align 4, !dbg !573
  store i8 1, i8* %5360, align 1, !dbg !574
  br label %5366, !dbg !75

5366:                                             ; preds = %18, %5357
  %5367 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 89, !dbg !560
  %5368 = call i8* @llvm.stacksave(), !dbg !563
  %5369 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5367, i32 0, i32 4, !dbg !67
  %5370 = load i32, i32* %5369, align 4, !dbg !70
  %5371 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5370, !dbg !71
  %5372 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5371, i32 0, i32 1, !dbg !563
  %5373 = load i16, i16* %5372, align 2, !dbg !563
  %5374 = and i16 %5373, 9216, !dbg !563
  %5375 = icmp ne i16 %5374, 0, !dbg !563
  %5376 = alloca %struct.sqlite3_value*, align 8, !dbg !563
  br i1 %5375, label %5377, label %5379, !dbg !563

5377:                                             ; preds = %5366
  %5378 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %5371), !dbg !563
  store %struct.sqlite3_value* %5378, %struct.sqlite3_value** %5376, align 8, !dbg !563
  br label %5380, !dbg !563

5379:                                             ; preds = %5366
  store i16 4, i16* %5372, align 2, !dbg !563
  store %struct.sqlite3_value* %5371, %struct.sqlite3_value** %5376, align 8, !dbg !563
  br label %5380, !dbg !563

5380:                                             ; preds = %5379, %5377
  %5381 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5376, align 8, !dbg !563
  call void @llvm.stackrestore(i8* %5368), !dbg !563
  %5382 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5381, i32 0, i32 1, !dbg !564
  %5383 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5381, i32 0, i32 2, !dbg !565
  %5384 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5381, i32 0, i32 4, !dbg !566
  %5385 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5381, i32 0, i32 5, !dbg !567
  store i16 2562, i16* %5382, align 2, !dbg !568
  %5386 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5367, i32 0, i32 6, !dbg !569
  %5387 = bitcast %union.p4union* %5386 to i8**, !dbg !570
  %5388 = load i8*, i8** %5387, align 8, !dbg !571
  store i8* %5388, i8** %5385, align 8, !dbg !572
  store i32 8, i32* %5384, align 4, !dbg !573
  store i8 1, i8* %5383, align 1, !dbg !574
  br label %5389, !dbg !75

5389:                                             ; preds = %18, %5380
  %5390 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 17, !dbg !575
  %5391 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 46, !dbg !578
  %5392 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 90, !dbg !579
  %5393 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5392, i32 0, i32 6, !dbg !580
  %5394 = bitcast %union.p4union* %5393 to %struct.sqlite3_context**, !dbg !581
  %5395 = load %struct.sqlite3_context*, %struct.sqlite3_context** %5394, align 8, !dbg !582
  %5396 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 0, !dbg !583
  %5397 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5396, align 8, !dbg !584
  %5398 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 1, !dbg !585
  %5399 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 7, !dbg !586
  %5400 = load i8, i8* %5399, align 1, !dbg !587
  %5401 = zext i8 %5400 to i32, !dbg !588
  %5402 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 8, !dbg !589
  %5403 = bitcast [1 x %struct.sqlite3_value*]* %5402 to %struct.sqlite3_value**, !dbg !590
  %5404 = ptrtoint %struct.sqlite3_value* %5397 to i64, !dbg !591
  %5405 = ptrtoint %struct.sqlite3_value* %5391 to i64, !dbg !592
  %5406 = icmp ne i64 %5404, %5405, !dbg !593
  br i1 %5406, label %5407, label %5412, !dbg !594

5407:                                             ; preds = %5389
  %5408 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 3, !dbg !595
  store %struct.Vdbe* %0, %struct.Vdbe** %5408, align 8, !dbg !596
  store %struct.sqlite3_value* %5391, %struct.sqlite3_value** %5396, align 8, !dbg !597
  %5409 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 48, !dbg !598
  %5410 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %5403, i32 1, !dbg !684
  store %struct.sqlite3_value* %5409, %struct.sqlite3_value** %5410, align 8, !dbg !599
  %5411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 47, !dbg !598
  store %struct.sqlite3_value* %5411, %struct.sqlite3_value** %5403, align 8, !dbg !599
  br label %5412, !dbg !600

5412:                                             ; preds = %5389, %5407
  %5413 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5391, i32 0, i32 1, !dbg !601
  %5414 = load i16, i16* %5413, align 2, !dbg !602
  %5415 = and i16 %5414, 15936, !dbg !602
  %5416 = or i16 %5415, 1, !dbg !602
  store i16 %5416, i16* %5413, align 2, !dbg !602
  %5417 = load %struct.FuncDef*, %struct.FuncDef** %5398, align 8, !dbg !603
  %5418 = getelementptr %struct.FuncDef, %struct.FuncDef* %5417, i32 0, i32 4, !dbg !604
  %5419 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %5418, align 8, !dbg !605
  call void %5419(%struct.sqlite3_context* %5395, i32 %5401, %struct.sqlite3_value** %5403), !dbg !606
  %5420 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5395, i32 0, i32 5, !dbg !607
  %5421 = load i32, i32* %5420, align 4, !dbg !608
  %5422 = icmp ne i32 %5421, 0, !dbg !609
  %5423 = icmp sgt i32 %5421, 0, !dbg !610
  br i1 %5423, label %5424, label %5426, !dbg !611

5424:                                             ; preds = %5412
  %5425 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %5391), !dbg !612
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %5425), !dbg !613
  br label %5426, !dbg !614

5426:                                             ; preds = %5424, %5412
  %5427 = load i16, i16* %5413, align 2, !dbg !615
  %5428 = and i16 %5427, 18, !dbg !616
  %5429 = icmp ne i16 %5428, 0, !dbg !617
  br i1 %5429, label %5430, label %5433, !dbg !618

5430:                                             ; preds = %5426
  %5431 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %5391, i32 1), !dbg !619
  %5432 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %5391), !dbg !620
  br label %5433, !dbg !621

5433:                                             ; preds = %5430, %5426, %18, %5339
  %5434 = call i8* @llvm.stacksave(), !dbg !622
  %5435 = alloca i32, align 8, !dbg !625
  %5436 = alloca i32, align 8, !dbg !626
  %5437 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 46, !dbg !627
  %5438 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !628
  %5439 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5437, i32 0, i32 1, !dbg !629
  %5440 = load i16, i16* %5439, align 2, !dbg !630
  %5441 = alloca i16, align 8, !dbg !631
  store i16 %5440, i16* %5441, align 2, !dbg !632
  %5442 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5438, i32 0, i32 1, !dbg !633
  %5443 = load i16, i16* %5442, align 2, !dbg !634
  %5444 = alloca i16, align 8, !dbg !635
  store i16 %5443, i16* %5444, align 2, !dbg !636
  %5445 = or i16 %5440, %5443, !dbg !637
  %5446 = and i16 %5445, 1, !dbg !638
  %5447 = icmp ne i16 %5446, 0, !dbg !639
  br i1 %5447, label %5448, label %5449, !dbg !640

5448:                                             ; preds = %5433
  call void @llvm.stackrestore(i8* %5434), !dbg !641
  br label %6699, !dbg !642

5449:                                             ; preds = %5433
  %5450 = and i16 %5440, 2, !dbg !643
  %5451 = and i16 %5440, 44, !dbg !644
  %5452 = icmp eq i16 %5450, 0, !dbg !645
  %5453 = icmp ne i16 %5451, 0, !dbg !646
  %5454 = and i16 %5443, 2, !dbg !647
  %5455 = and i16 %5443, 44, !dbg !648
  %5456 = icmp eq i16 %5454, 0, !dbg !649
  %5457 = icmp ne i16 %5455, 0, !dbg !650
  %5458 = and i1 %5452, %5453, !dbg !651
  br i1 %5458, label %5459, label %5465, !dbg !652

5459:                                             ; preds = %5449
  %5460 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5437, i8 1, i8 1), !dbg !653
  %5461 = load i16, i16* %5439, align 2, !dbg !654
  %5462 = and i16 %5461, 15936, !dbg !654
  %5463 = and i16 %5440, -15937, !dbg !655
  %5464 = or i16 %5462, %5463, !dbg !656
  store i16 %5464, i16* %5441, align 2, !dbg !657
  br label %5465, !dbg !658

5465:                                             ; preds = %5459, %5449
  %5466 = and i1 %5456, %5457, !dbg !659
  br i1 %5466, label %5467, label %5473, !dbg !660

5467:                                             ; preds = %5465
  %5468 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %5438, i8 1, i8 1), !dbg !661
  %5469 = load i16, i16* %5442, align 2, !dbg !662
  %5470 = and i16 %5469, 15936, !dbg !662
  %5471 = and i16 %5443, -15937, !dbg !663
  %5472 = or i16 %5470, %5471, !dbg !664
  store i16 %5472, i16* %5444, align 2, !dbg !665
  br label %5473, !dbg !666

5473:                                             ; preds = %5467, %5465
  %5474 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 91, !dbg !667
  %5475 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5474, i32 0, i32 6, !dbg !668
  %5476 = bitcast %union.p4union* %5475 to %struct.CollSeq**, !dbg !669
  %5477 = load %struct.CollSeq*, %struct.CollSeq** %5476, align 8, !dbg !670
  %5478 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5438, %struct.sqlite3_value* %5437, %struct.CollSeq* %5477), !dbg !671
  store i32 %5478, i32* %5435, align 4, !dbg !672
  %5479 = icmp slt i32 %5478, 0, !dbg !673
  br i1 %5479, label %5480, label %5481, !dbg !674

5480:                                             ; preds = %5473
  store i32 0, i32* %5436, align 4, !dbg !675
  br label %5482, !dbg !676

5481:                                             ; preds = %5473
  store i32 1, i32* %5436, align 4, !dbg !677
  br label %5482, !dbg !677

5482:                                             ; preds = %5481, %5480
  store i16 %5443, i16* %5444, align 2, !dbg !678
  store i16 %5440, i16* %5441, align 2, !dbg !679
  %5483 = load i32, i32* %5436, align 4, !dbg !680
  %5484 = icmp ne i32 %5483, 0, !dbg !681
  call void @llvm.stackrestore(i8* %5434), !dbg !682
  br i1 %5484, label %6699, label %5485, !dbg !683

5485:                                             ; preds = %18, %5482
  %5486 = call i8* @llvm.stacksave(), !dbg !266
  %5487 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %5488 = load i8, i8* %5487, align 1, !dbg !270
  %5489 = alloca i32, align 4, !dbg !271
  store i32 4, i32* %5489, align 4, !dbg !272
  %5490 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !273
  %5491 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %5492 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5490, align 8, !dbg !275
  store %struct.VdbeCursor* %5492, %struct.VdbeCursor** %5491, align 8, !dbg !276
  %5493 = alloca i8*, align 8, !dbg !277
  %5494 = alloca i32, align 4, !dbg !278
  %5495 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5491, i32* %5489), !dbg !279
  %5496 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5491, align 8, !dbg !280
  %5497 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 49, !dbg !281
  %5498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 16, !dbg !282
  %5499 = load i16, i16* %5498, align 2, !dbg !283
  %5500 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 19, !dbg !284
  %5501 = load i32*, i32** %5500, align 8, !dbg !285
  %5502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 0, !dbg !286
  %5503 = load i8, i8* %5502, align 1, !dbg !287
  %5504 = icmp ne i8 %5503, 3, !dbg !288
  %5505 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 2, !dbg !289
  %5506 = load i8, i8* %5505, align 1, !dbg !290
  %5507 = icmp ne i8 %5506, 0, !dbg !291
  %5508 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 14, !dbg !292
  %5509 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 21, !dbg !293
  %5510 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 22, !dbg !294
  %5511 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 20, !dbg !295
  %5512 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 17, !dbg !296
  %5513 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 9, !dbg !297
  %5514 = load i32, i32* %5513, align 4, !dbg !298
  %5515 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %5516 = load i32, i32* %5515, align 4, !dbg !300
  %5517 = icmp ne i32 %5514, %5516, !dbg !301
  br i1 %5517, label %5518, label %5560, !dbg !302

5518:                                             ; preds = %5485
  br i1 %5507, label %5540, label %5535, !dbg !303

5519:                                             ; preds = %5535, %5542
  %5520 = load i32, i32* %5515, align 4, !dbg !304
  store i32 %5520, i32* %5513, align 4, !dbg !305
  %5521 = load i8*, i8** %5511, align 8, !dbg !306
  %5522 = load i8, i8* %5521, align 1, !dbg !307
  %5523 = icmp sgt i8 %5522, -1, !dbg !310
  br i1 %5523, label %5524, label %5526, !dbg !311

5524:                                             ; preds = %5519
  %5525 = zext i8 %5522 to i32, !dbg !312
  store i32 %5525, i32* %5501, align 4, !dbg !313
  store i32 1, i32* %5508, align 4, !dbg !314
  br label %5529, !dbg !315

5526:                                             ; preds = %5519
  %5527 = call i8 @sqlite3GetVarint32(i8* %5521, i32* %5501), !dbg !316
  %5528 = zext i8 %5527 to i32, !dbg !317
  store i32 %5528, i32* %5508, align 4, !dbg !318
  br label %5529, !dbg !319

5529:                                             ; preds = %5526, %5524
  store i16 0, i16* %5512, align 2, !dbg !320
  %5530 = load i32, i32* %5510, align 4, !dbg !321
  %5531 = load i32, i32* %5501, align 4, !dbg !322
  %5532 = icmp ult i32 %5530, %5531, !dbg !323
  br i1 %5532, label %5534, label %5533, !dbg !324

5533:                                             ; preds = %5529
  store i8* %5521, i8** %5493, align 8, !dbg !325
  br label %5653, !dbg !326

5534:                                             ; preds = %5529
  store i8* null, i8** %5511, align 8, !dbg !327
  store i32 0, i32* %5510, align 4, !dbg !328
  br label %5560, !dbg !329

5535:                                             ; preds = %5518
  %5536 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 12, i32 0, !dbg !330
  %5537 = load %struct.BtCursor*, %struct.BtCursor** %5536, align 8, !dbg !331
  %5538 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5537), !dbg !332
  store i32 %5538, i32* %5509, align 4, !dbg !333
  %5539 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5537, i32* %5510), !dbg !334
  store i8* %5539, i8** %5511, align 8, !dbg !335
  br label %5519, !dbg !336

5540:                                             ; preds = %5518
  %5541 = icmp eq i8 %5503, 3, !dbg !337
  br i1 %5541, label %5542, label %5553, !dbg !338

5542:                                             ; preds = %5540
  %5543 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 10, !dbg !339
  %5544 = load i32, i32* %5543, align 4, !dbg !340
  %5545 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5544, !dbg !341
  %5546 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5545, i32 0, i32 1, !dbg !342
  %5547 = load i16, i16* %5546, align 2, !dbg !343
  %5548 = and i16 %5547, 16, !dbg !344
  %5549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5545, i32 0, i32 4, !dbg !345
  %5550 = load i32, i32* %5549, align 4, !dbg !346
  store i32 %5550, i32* %5509, align 4, !dbg !347
  store i32 %5550, i32* %5510, align 4, !dbg !348
  %5551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5545, i32 0, i32 5, !dbg !349
  %5552 = load i8*, i8** %5551, align 8, !dbg !350
  store i8* %5552, i8** %5511, align 8, !dbg !351
  br label %5519, !dbg !352

5553:                                             ; preds = %5540
  %5554 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 1, !dbg !353
  %5555 = load i16, i16* %5554, align 2, !dbg !353
  %5556 = and i16 %5555, 9216, !dbg !353
  %5557 = icmp ne i16 %5556, 0, !dbg !353
  br i1 %5557, label %5558, label %5559, !dbg !353

5558:                                             ; preds = %5553
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5497), !dbg !353
  br label %5741, !dbg !353

5559:                                             ; preds = %5553
  store i16 1, i16* %5554, align 2, !dbg !353
  br label %5741, !dbg !353

5560:                                             ; preds = %5534, %5485
  %5561 = load i16, i16* %5512, align 2, !dbg !354
  %5562 = icmp ule i16 %5561, 2, !dbg !355
  br i1 %5562, label %5645, label %5642, !dbg !356

5563:                                             ; preds = %5642, %5731
  %5564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 1, !dbg !357
  %5565 = load i16, i16* %5564, align 2, !dbg !358
  %5566 = and i16 9216, %5565, !dbg !359
  %5567 = icmp eq i16 0, %5566, !dbg !360
  br i1 %5567, label %5568, label %5572, !dbg !361

5568:                                             ; preds = %5563
  %5569 = icmp ne i16 %5566, 0, !dbg !362
  br i1 %5569, label %5570, label %5571, !dbg !362

5570:                                             ; preds = %5568
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5497), !dbg !362
  br label %5572, !dbg !362

5571:                                             ; preds = %5568
  store i16 1, i16* %5564, align 2, !dbg !362
  br label %5572, !dbg !362

5572:                                             ; preds = %5570, %5571, %5563
  %5573 = load i32, i32* %5494, align 4, !dbg !363
  %5574 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 23, i32 2, !dbg !364
  %5575 = load i32, i32* %5574, align 4, !dbg !365
  %5576 = load i32, i32* %5510, align 4, !dbg !366
  %5577 = getelementptr i32, i32* %5501, i32 3, !dbg !367
  %5578 = load i32, i32* %5577, align 4, !dbg !368
  %5579 = icmp sge i32 %5576, %5578, !dbg !369
  br i1 %5579, label %5580, label %5620, !dbg !370

5580:                                             ; preds = %5572
  %5581 = load i8*, i8** %5511, align 8, !dbg !371
  %5582 = ptrtoint i8* %5581 to i64, !dbg !372
  %5583 = getelementptr i32, i32* %5501, i32 2, !dbg !373
  %5584 = load i32, i32* %5583, align 4, !dbg !374
  %5585 = zext i32 %5584 to i64, !dbg !375
  %5586 = add i64 %5582, %5585, !dbg !376
  %5587 = inttoptr i64 %5586 to i8*, !dbg !377
  store i8* %5587, i8** %5493, align 8, !dbg !378
  %5588 = load i32, i32* %5494, align 4, !dbg !379
  %5589 = icmp ult i32 %5588, 12, !dbg !380
  br i1 %5589, label %5590, label %5592, !dbg !381

5590:                                             ; preds = %5580
  %5591 = call i32 @sqlite3VdbeSerialGet(i8* %5587, i32 %5588, %struct.sqlite3_value* %5497), !dbg !382
  br label %5741, !dbg !383

5592:                                             ; preds = %5580
  %5593 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %5593, align 2, !dbg !385
  %5594 = getelementptr i16, i16* %5593, i32 1, !dbg !386
  store i16 514, i16* %5594, align 2, !dbg !387
  %5595 = load i32, i32* %5494, align 4, !dbg !388
  %5596 = sub i32 %5595, 12, !dbg !389
  %5597 = lshr i32 %5596, 1, !dbg !390
  %5598 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 4, !dbg !391
  store i32 %5597, i32* %5598, align 4, !dbg !392
  %5599 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 2, !dbg !393
  store i8 %5488, i8* %5599, align 1, !dbg !394
  %5600 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 5, !dbg !395
  %5601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 7, !dbg !396
  %5602 = load i32, i32* %5601, align 4, !dbg !397
  %5603 = add i32 %5597, 2, !dbg !398
  %5604 = icmp slt i32 %5602, %5603, !dbg !399
  br i1 %5604, label %5605, label %5607, !dbg !400

5605:                                             ; preds = %5592
  store i16 1, i16* %5564, align 2, !dbg !401
  %5606 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5497, i32 %5603, i32 0), !dbg !402
  br label %5610, !dbg !403

5607:                                             ; preds = %5592
  %5608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 6, !dbg !404
  %5609 = load i8*, i8** %5608, align 8, !dbg !405
  store i8* %5609, i8** %5600, align 8, !dbg !406
  br label %5610, !dbg !407

5610:                                             ; preds = %5607, %5605
  %5611 = zext i32 %5597 to i64, !dbg !408
  %5612 = load i8*, i8** %5600, align 8, !dbg !409
  %5613 = load i8*, i8** %5493, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5612, i8* %5613, i64 %5611, i1 false), !dbg !411
  %5614 = getelementptr i8, i8* %5612, i32 %5597, !dbg !412
  store i8 0, i8* %5614, align 1, !dbg !413
  %5615 = add i32 %5597, 1, !dbg !414
  %5616 = getelementptr i8, i8* %5612, i32 %5615, !dbg !415
  store i8 0, i8* %5616, align 1, !dbg !416
  %5617 = and i32 %5595, 1, !dbg !417
  %5618 = getelementptr i16, i16* %5593, i32 %5617, !dbg !418
  %5619 = load i16, i16* %5618, align 2, !dbg !419
  store i16 %5619, i16* %5564, align 2, !dbg !420
  br label %5741, !dbg !421

5620:                                             ; preds = %5572
  %5621 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 2, !dbg !422
  store i8 %5488, i8* %5621, align 1, !dbg !423
  %5622 = load i32, i32* %5494, align 4, !dbg !424
  %5623 = and i32 %5622, 1, !dbg !425
  %5624 = icmp eq i32 %5623, 0, !dbg !426
  %5625 = icmp sge i32 %5622, 12, !dbg !427
  %5626 = and i1 %5625, %5624, !dbg !428
  %5627 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5622), !dbg !429
  %5628 = icmp eq i32 %5627, 0, !dbg !430
  br i1 %5628, label %5640, label %5629, !dbg !431

5629:                                             ; preds = %5620
  %5630 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 12, i32 0, !dbg !432
  %5631 = load %struct.BtCursor*, %struct.BtCursor** %5630, align 8, !dbg !433
  %5632 = getelementptr i32, i32* %5501, i32 2, !dbg !434
  %5633 = load i32, i32* %5632, align 4, !dbg !435
  %5634 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5631, i32 %5633, i32 %5627, %struct.sqlite3_value* %5497), !dbg !436
  %5635 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 5, !dbg !437
  %5636 = load i8*, i8** %5635, align 8, !dbg !438
  %5637 = call i32 @sqlite3VdbeSerialGet(i8* %5636, i32 %5622, %struct.sqlite3_value* %5497), !dbg !439
  %5638 = load i16, i16* %5564, align 2, !dbg !440
  %5639 = and i16 %5638, -4097, !dbg !441
  store i16 %5639, i16* %5564, align 2, !dbg !442
  br label %5741, !dbg !443

5640:                                             ; preds = %5620
  %5641 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5622, %struct.sqlite3_value* %5497), !dbg !444
  br label %5741, !dbg !445

5642:                                             ; preds = %5560
  %5643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 23, i32 2, !dbg !446
  %5644 = load i32, i32* %5643, align 4, !dbg !447
  store i32 %5644, i32* %5494, align 4, !dbg !448
  br label %5563, !dbg !449

5645:                                             ; preds = %5560
  %5646 = load i32, i32* %5508, align 4, !dbg !450
  %5647 = load i32, i32* %5501, align 4, !dbg !451
  %5648 = icmp ult i32 %5646, %5647, !dbg !452
  br i1 %5648, label %5649, label %5730, !dbg !453

5649:                                             ; preds = %5645
  %5650 = load i8*, i8** %5511, align 8, !dbg !454
  %5651 = icmp eq i8* %5650, null, !dbg !455
  br i1 %5651, label %5653, label %5652, !dbg !456

5652:                                             ; preds = %5649
  store i8* %5650, i8** %5493, align 8, !dbg !457
  br label %5653, !dbg !458

5653:                                             ; preds = %5652, %5649, %5533
  %5654 = alloca i32, align 4, !dbg !459
  %5655 = load i16, i16* %5512, align 2, !dbg !460
  %5656 = zext i16 %5655 to i32, !dbg !461
  store i32 %5656, i32* %5654, align 4, !dbg !462
  %5657 = alloca i64, align 8, !dbg !463
  %5658 = getelementptr i32, i32* %5501, i32 %5656, !dbg !464
  %5659 = load i32, i32* %5658, align 4, !dbg !465
  %5660 = zext i32 %5659 to i64, !dbg !466
  store i64 %5660, i64* %5657, align 4, !dbg !467
  %5661 = load i8*, i8** %5493, align 8, !dbg !468
  %5662 = load i32, i32* %5508, align 4, !dbg !469
  %5663 = alloca i8*, align 8, !dbg !470
  %5664 = getelementptr i8, i8* %5661, i32 %5662, !dbg !471
  store i8* %5664, i8** %5663, align 8, !dbg !472
  %5665 = load i32, i32* %5501, align 4, !dbg !473
  %5666 = getelementptr i8, i8* %5661, i32 %5665, !dbg !474
  br label %5667, !dbg !475

5667:                                             ; preds = %5674, %5653
  %5668 = load i32, i32* %5654, align 4, !dbg !476
  %5669 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5496, i32 0, i32 23, i32 %5668, !dbg !477
  %5670 = load i8*, i8** %5663, align 8, !dbg !478
  %5671 = load i8, i8* %5670, align 1, !dbg !479
  %5672 = zext i8 %5671 to i32, !dbg !480
  store i32 %5672, i32* %5494, align 4, !dbg !481
  store i32 %5672, i32* %5669, align 4, !dbg !482
  %5673 = icmp sgt i8 %5671, -1, !dbg !483
  br i1 %5673, label %5697, label %5688, !dbg !484

5674:                                             ; preds = %5688, %5697
  %5675 = load i32, i32* %5654, align 4, !dbg !485
  %5676 = add i32 %5675, 1, !dbg !486
  store i32 %5676, i32* %5654, align 4, !dbg !487
  %5677 = load i64, i64* %5657, align 4, !dbg !488
  %5678 = and i64 4294967295, %5677, !dbg !489
  %5679 = trunc i64 %5678 to i32, !dbg !490
  %5680 = getelementptr i32, i32* %5501, i32 %5676, !dbg !491
  store i32 %5679, i32* %5680, align 4, !dbg !492
  %5681 = load i32, i32* %5654, align 4, !dbg !493
  %5682 = icmp sle i32 %5681, 2, !dbg !494
  %5683 = load i8*, i8** %5663, align 8, !dbg !495
  %5684 = ptrtoint i8* %5683 to i64, !dbg !496
  %5685 = ptrtoint i8* %5666 to i64, !dbg !497
  %5686 = icmp ult i64 %5684, %5685, !dbg !498
  %5687 = and i1 %5682, %5686, !dbg !499
  br i1 %5687, label %5667, label %5706, !dbg !500

5688:                                             ; preds = %5667
  %5689 = load i8*, i8** %5663, align 8, !dbg !501
  %5690 = call i8 @sqlite3GetVarint32(i8* %5689, i32* %5494), !dbg !502
  %5691 = getelementptr i8, i8* %5689, i8 %5690, !dbg !503
  store i8* %5691, i8** %5663, align 8, !dbg !504
  %5692 = load i32, i32* %5494, align 4, !dbg !505
  store i32 %5692, i32* %5669, align 4, !dbg !506
  %5693 = load i64, i64* %5657, align 4, !dbg !507
  %5694 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5692), !dbg !508
  %5695 = zext i32 %5694 to i64, !dbg !509
  %5696 = add i64 %5693, %5695, !dbg !510
  store i64 %5696, i64* %5657, align 4, !dbg !511
  br label %5674, !dbg !512

5697:                                             ; preds = %5667
  %5698 = getelementptr i8, i8* %5670, i32 1, !dbg !513
  store i8* %5698, i8** %5663, align 8, !dbg !514
  %5699 = load i32, i32* %5494, align 4, !dbg !515
  %5700 = trunc i32 %5699 to i8, !dbg !516
  %5701 = getelementptr i8, i8* %4, i8 %5700, !dbg !517
  %5702 = load i8, i8* %5701, align 1, !dbg !518
  %5703 = zext i8 %5702 to i64, !dbg !519
  %5704 = load i64, i64* %5657, align 4, !dbg !520
  %5705 = add i64 %5704, %5703, !dbg !521
  store i64 %5705, i64* %5657, align 4, !dbg !522
  br label %5674, !dbg !523

5706:                                             ; preds = %5674
  %5707 = load i64, i64* %5657, align 4, !dbg !524
  %5708 = load i32, i32* %5509, align 4, !dbg !525
  %5709 = zext i32 %5708 to i64, !dbg !526
  %5710 = icmp uge i64 %5684, %5685, !dbg !527
  %5711 = icmp ugt i64 %5684, %5685, !dbg !528
  %5712 = icmp ne i64 %5707, %5709, !dbg !529
  %5713 = icmp ugt i64 %5707, %5709, !dbg !530
  %5714 = or i1 %5711, %5712, !dbg !531
  %5715 = and i1 %5710, %5714, !dbg !532
  %5716 = or i1 %5715, %5713, !dbg !533
  br i1 %5716, label %5717, label %5721, !dbg !534

5717:                                             ; preds = %5706
  %5718 = load i32, i32* %5501, align 4, !dbg !535
  %5719 = icmp eq i32 %5718, 0, !dbg !536
  br i1 %5719, label %5720, label %5721, !dbg !537

5720:                                             ; preds = %5717
  store i32 0, i32* %5654, align 4, !dbg !538
  store i8* %5666, i8** %5663, align 8, !dbg !539
  br label %5721, !dbg !540

5721:                                             ; preds = %5720, %5717, %5706
  %5722 = load i32, i32* %5654, align 4, !dbg !541
  %5723 = trunc i32 %5722 to i16, !dbg !542
  store i16 %5723, i16* %5512, align 2, !dbg !543
  %5724 = load i8*, i8** %5663, align 8, !dbg !544
  %5725 = ptrtoint i8* %5724 to i64, !dbg !545
  %5726 = load i8*, i8** %5493, align 8, !dbg !546
  %5727 = ptrtoint i8* %5726 to i64, !dbg !547
  %5728 = sub i64 %5725, %5727, !dbg !548
  %5729 = trunc i64 %5728 to i32, !dbg !549
  store i32 %5729, i32* %5508, align 4, !dbg !550
  br label %5731, !dbg !551

5730:                                             ; preds = %5645
  store i32 0, i32* %5494, align 4, !dbg !552
  br label %5731, !dbg !553

5731:                                             ; preds = %5721, %5730
  %5732 = load i16, i16* %5512, align 2, !dbg !554
  %5733 = icmp sle i16 %5732, 2, !dbg !555
  br i1 %5733, label %5734, label %5563, !dbg !556

5734:                                             ; preds = %5731
  %5735 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5497, i32 0, i32 1, !dbg !557
  %5736 = load i16, i16* %5735, align 2, !dbg !557
  %5737 = and i16 %5736, 9216, !dbg !557
  %5738 = icmp ne i16 %5737, 0, !dbg !557
  br i1 %5738, label %5739, label %5740, !dbg !557

5739:                                             ; preds = %5734
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5497), !dbg !557
  br label %5741, !dbg !557

5740:                                             ; preds = %5734
  store i16 1, i16* %5735, align 2, !dbg !557
  br label %5741, !dbg !557

5741:                                             ; preds = %5739, %5740, %5610, %5590, %5629, %5640, %5558, %5559
  call void @llvm.stackrestore(i8* %5486), !dbg !558
  br label %5742, !dbg !75

5742:                                             ; preds = %18, %5741
  %5743 = call i8* @llvm.stacksave(), !dbg !266
  %5744 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %5745 = load i8, i8* %5744, align 1, !dbg !270
  %5746 = alloca i32, align 4, !dbg !271
  store i32 4, i32* %5746, align 4, !dbg !272
  %5747 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !273
  %5748 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %5749 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5747, align 8, !dbg !275
  store %struct.VdbeCursor* %5749, %struct.VdbeCursor** %5748, align 8, !dbg !276
  %5750 = alloca i8*, align 8, !dbg !277
  %5751 = alloca i32, align 4, !dbg !278
  %5752 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5748, i32* %5746), !dbg !279
  %5753 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5748, align 8, !dbg !280
  %5754 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 50, !dbg !281
  %5755 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 16, !dbg !282
  %5756 = load i16, i16* %5755, align 2, !dbg !283
  %5757 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 19, !dbg !284
  %5758 = load i32*, i32** %5757, align 8, !dbg !285
  %5759 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 0, !dbg !286
  %5760 = load i8, i8* %5759, align 1, !dbg !287
  %5761 = icmp ne i8 %5760, 3, !dbg !288
  %5762 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 2, !dbg !289
  %5763 = load i8, i8* %5762, align 1, !dbg !290
  %5764 = icmp ne i8 %5763, 0, !dbg !291
  %5765 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 14, !dbg !292
  %5766 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 21, !dbg !293
  %5767 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 22, !dbg !294
  %5768 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 20, !dbg !295
  %5769 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 17, !dbg !296
  %5770 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 9, !dbg !297
  %5771 = load i32, i32* %5770, align 4, !dbg !298
  %5772 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %5773 = load i32, i32* %5772, align 4, !dbg !300
  %5774 = icmp ne i32 %5771, %5773, !dbg !301
  br i1 %5774, label %5775, label %5817, !dbg !302

5775:                                             ; preds = %5742
  br i1 %5764, label %5797, label %5792, !dbg !303

5776:                                             ; preds = %5792, %5799
  %5777 = load i32, i32* %5772, align 4, !dbg !304
  store i32 %5777, i32* %5770, align 4, !dbg !305
  %5778 = load i8*, i8** %5768, align 8, !dbg !306
  %5779 = load i8, i8* %5778, align 1, !dbg !307
  %5780 = icmp sgt i8 %5779, -1, !dbg !310
  br i1 %5780, label %5781, label %5783, !dbg !311

5781:                                             ; preds = %5776
  %5782 = zext i8 %5779 to i32, !dbg !312
  store i32 %5782, i32* %5758, align 4, !dbg !313
  store i32 1, i32* %5765, align 4, !dbg !314
  br label %5786, !dbg !315

5783:                                             ; preds = %5776
  %5784 = call i8 @sqlite3GetVarint32(i8* %5778, i32* %5758), !dbg !316
  %5785 = zext i8 %5784 to i32, !dbg !317
  store i32 %5785, i32* %5765, align 4, !dbg !318
  br label %5786, !dbg !319

5786:                                             ; preds = %5783, %5781
  store i16 0, i16* %5769, align 2, !dbg !320
  %5787 = load i32, i32* %5767, align 4, !dbg !321
  %5788 = load i32, i32* %5758, align 4, !dbg !322
  %5789 = icmp ult i32 %5787, %5788, !dbg !323
  br i1 %5789, label %5791, label %5790, !dbg !324

5790:                                             ; preds = %5786
  store i8* %5778, i8** %5750, align 8, !dbg !325
  br label %5910, !dbg !326

5791:                                             ; preds = %5786
  store i8* null, i8** %5768, align 8, !dbg !327
  store i32 0, i32* %5767, align 4, !dbg !328
  br label %5817, !dbg !329

5792:                                             ; preds = %5775
  %5793 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 12, i32 0, !dbg !330
  %5794 = load %struct.BtCursor*, %struct.BtCursor** %5793, align 8, !dbg !331
  %5795 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5794), !dbg !332
  store i32 %5795, i32* %5766, align 4, !dbg !333
  %5796 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5794, i32* %5767), !dbg !334
  store i8* %5796, i8** %5768, align 8, !dbg !335
  br label %5776, !dbg !336

5797:                                             ; preds = %5775
  %5798 = icmp eq i8 %5760, 3, !dbg !337
  br i1 %5798, label %5799, label %5810, !dbg !338

5799:                                             ; preds = %5797
  %5800 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 10, !dbg !339
  %5801 = load i32, i32* %5800, align 4, !dbg !340
  %5802 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5801, !dbg !341
  %5803 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5802, i32 0, i32 1, !dbg !342
  %5804 = load i16, i16* %5803, align 2, !dbg !343
  %5805 = and i16 %5804, 16, !dbg !344
  %5806 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5802, i32 0, i32 4, !dbg !345
  %5807 = load i32, i32* %5806, align 4, !dbg !346
  store i32 %5807, i32* %5766, align 4, !dbg !347
  store i32 %5807, i32* %5767, align 4, !dbg !348
  %5808 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5802, i32 0, i32 5, !dbg !349
  %5809 = load i8*, i8** %5808, align 8, !dbg !350
  store i8* %5809, i8** %5768, align 8, !dbg !351
  br label %5776, !dbg !352

5810:                                             ; preds = %5797
  %5811 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 1, !dbg !353
  %5812 = load i16, i16* %5811, align 2, !dbg !353
  %5813 = and i16 %5812, 9216, !dbg !353
  %5814 = icmp ne i16 %5813, 0, !dbg !353
  br i1 %5814, label %5815, label %5816, !dbg !353

5815:                                             ; preds = %5810
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5754), !dbg !353
  br label %5998, !dbg !353

5816:                                             ; preds = %5810
  store i16 1, i16* %5811, align 2, !dbg !353
  br label %5998, !dbg !353

5817:                                             ; preds = %5791, %5742
  %5818 = load i16, i16* %5769, align 2, !dbg !354
  %5819 = icmp ule i16 %5818, 5, !dbg !355
  br i1 %5819, label %5902, label %5899, !dbg !356

5820:                                             ; preds = %5899, %5988
  %5821 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 1, !dbg !357
  %5822 = load i16, i16* %5821, align 2, !dbg !358
  %5823 = and i16 9216, %5822, !dbg !359
  %5824 = icmp eq i16 0, %5823, !dbg !360
  br i1 %5824, label %5825, label %5829, !dbg !361

5825:                                             ; preds = %5820
  %5826 = icmp ne i16 %5823, 0, !dbg !362
  br i1 %5826, label %5827, label %5828, !dbg !362

5827:                                             ; preds = %5825
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5754), !dbg !362
  br label %5829, !dbg !362

5828:                                             ; preds = %5825
  store i16 1, i16* %5821, align 2, !dbg !362
  br label %5829, !dbg !362

5829:                                             ; preds = %5827, %5828, %5820
  %5830 = load i32, i32* %5751, align 4, !dbg !363
  %5831 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 23, i32 5, !dbg !364
  %5832 = load i32, i32* %5831, align 4, !dbg !365
  %5833 = load i32, i32* %5767, align 4, !dbg !366
  %5834 = getelementptr i32, i32* %5758, i32 6, !dbg !367
  %5835 = load i32, i32* %5834, align 4, !dbg !368
  %5836 = icmp sge i32 %5833, %5835, !dbg !369
  br i1 %5836, label %5837, label %5877, !dbg !370

5837:                                             ; preds = %5829
  %5838 = load i8*, i8** %5768, align 8, !dbg !371
  %5839 = ptrtoint i8* %5838 to i64, !dbg !372
  %5840 = getelementptr i32, i32* %5758, i32 5, !dbg !373
  %5841 = load i32, i32* %5840, align 4, !dbg !374
  %5842 = zext i32 %5841 to i64, !dbg !375
  %5843 = add i64 %5839, %5842, !dbg !376
  %5844 = inttoptr i64 %5843 to i8*, !dbg !377
  store i8* %5844, i8** %5750, align 8, !dbg !378
  %5845 = load i32, i32* %5751, align 4, !dbg !379
  %5846 = icmp ult i32 %5845, 12, !dbg !380
  br i1 %5846, label %5847, label %5849, !dbg !381

5847:                                             ; preds = %5837
  %5848 = call i32 @sqlite3VdbeSerialGet(i8* %5844, i32 %5845, %struct.sqlite3_value* %5754), !dbg !382
  br label %5998, !dbg !383

5849:                                             ; preds = %5837
  %5850 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %5850, align 2, !dbg !385
  %5851 = getelementptr i16, i16* %5850, i32 1, !dbg !386
  store i16 514, i16* %5851, align 2, !dbg !387
  %5852 = load i32, i32* %5751, align 4, !dbg !388
  %5853 = sub i32 %5852, 12, !dbg !389
  %5854 = lshr i32 %5853, 1, !dbg !390
  %5855 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 4, !dbg !391
  store i32 %5854, i32* %5855, align 4, !dbg !392
  %5856 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 2, !dbg !393
  store i8 %5745, i8* %5856, align 1, !dbg !394
  %5857 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 5, !dbg !395
  %5858 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 7, !dbg !396
  %5859 = load i32, i32* %5858, align 4, !dbg !397
  %5860 = add i32 %5854, 2, !dbg !398
  %5861 = icmp slt i32 %5859, %5860, !dbg !399
  br i1 %5861, label %5862, label %5864, !dbg !400

5862:                                             ; preds = %5849
  store i16 1, i16* %5821, align 2, !dbg !401
  %5863 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5754, i32 %5860, i32 0), !dbg !402
  br label %5867, !dbg !403

5864:                                             ; preds = %5849
  %5865 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 6, !dbg !404
  %5866 = load i8*, i8** %5865, align 8, !dbg !405
  store i8* %5866, i8** %5857, align 8, !dbg !406
  br label %5867, !dbg !407

5867:                                             ; preds = %5864, %5862
  %5868 = zext i32 %5854 to i64, !dbg !408
  %5869 = load i8*, i8** %5857, align 8, !dbg !409
  %5870 = load i8*, i8** %5750, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5869, i8* %5870, i64 %5868, i1 false), !dbg !411
  %5871 = getelementptr i8, i8* %5869, i32 %5854, !dbg !412
  store i8 0, i8* %5871, align 1, !dbg !413
  %5872 = add i32 %5854, 1, !dbg !414
  %5873 = getelementptr i8, i8* %5869, i32 %5872, !dbg !415
  store i8 0, i8* %5873, align 1, !dbg !416
  %5874 = and i32 %5852, 1, !dbg !417
  %5875 = getelementptr i16, i16* %5850, i32 %5874, !dbg !418
  %5876 = load i16, i16* %5875, align 2, !dbg !419
  store i16 %5876, i16* %5821, align 2, !dbg !420
  br label %5998, !dbg !421

5877:                                             ; preds = %5829
  %5878 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 2, !dbg !422
  store i8 %5745, i8* %5878, align 1, !dbg !423
  %5879 = load i32, i32* %5751, align 4, !dbg !424
  %5880 = and i32 %5879, 1, !dbg !425
  %5881 = icmp eq i32 %5880, 0, !dbg !426
  %5882 = icmp sge i32 %5879, 12, !dbg !427
  %5883 = and i1 %5882, %5881, !dbg !428
  %5884 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5879), !dbg !429
  %5885 = icmp eq i32 %5884, 0, !dbg !430
  br i1 %5885, label %5897, label %5886, !dbg !431

5886:                                             ; preds = %5877
  %5887 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 12, i32 0, !dbg !432
  %5888 = load %struct.BtCursor*, %struct.BtCursor** %5887, align 8, !dbg !433
  %5889 = getelementptr i32, i32* %5758, i32 5, !dbg !434
  %5890 = load i32, i32* %5889, align 4, !dbg !435
  %5891 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5888, i32 %5890, i32 %5884, %struct.sqlite3_value* %5754), !dbg !436
  %5892 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 5, !dbg !437
  %5893 = load i8*, i8** %5892, align 8, !dbg !438
  %5894 = call i32 @sqlite3VdbeSerialGet(i8* %5893, i32 %5879, %struct.sqlite3_value* %5754), !dbg !439
  %5895 = load i16, i16* %5821, align 2, !dbg !440
  %5896 = and i16 %5895, -4097, !dbg !441
  store i16 %5896, i16* %5821, align 2, !dbg !442
  br label %5998, !dbg !443

5897:                                             ; preds = %5877
  %5898 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5879, %struct.sqlite3_value* %5754), !dbg !444
  br label %5998, !dbg !445

5899:                                             ; preds = %5817
  %5900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 23, i32 5, !dbg !446
  %5901 = load i32, i32* %5900, align 4, !dbg !447
  store i32 %5901, i32* %5751, align 4, !dbg !448
  br label %5820, !dbg !449

5902:                                             ; preds = %5817
  %5903 = load i32, i32* %5765, align 4, !dbg !450
  %5904 = load i32, i32* %5758, align 4, !dbg !451
  %5905 = icmp ult i32 %5903, %5904, !dbg !452
  br i1 %5905, label %5906, label %5987, !dbg !453

5906:                                             ; preds = %5902
  %5907 = load i8*, i8** %5768, align 8, !dbg !454
  %5908 = icmp eq i8* %5907, null, !dbg !455
  br i1 %5908, label %5910, label %5909, !dbg !456

5909:                                             ; preds = %5906
  store i8* %5907, i8** %5750, align 8, !dbg !457
  br label %5910, !dbg !458

5910:                                             ; preds = %5909, %5906, %5790
  %5911 = alloca i32, align 4, !dbg !459
  %5912 = load i16, i16* %5769, align 2, !dbg !460
  %5913 = zext i16 %5912 to i32, !dbg !461
  store i32 %5913, i32* %5911, align 4, !dbg !462
  %5914 = alloca i64, align 8, !dbg !463
  %5915 = getelementptr i32, i32* %5758, i32 %5913, !dbg !464
  %5916 = load i32, i32* %5915, align 4, !dbg !465
  %5917 = zext i32 %5916 to i64, !dbg !466
  store i64 %5917, i64* %5914, align 4, !dbg !467
  %5918 = load i8*, i8** %5750, align 8, !dbg !468
  %5919 = load i32, i32* %5765, align 4, !dbg !469
  %5920 = alloca i8*, align 8, !dbg !470
  %5921 = getelementptr i8, i8* %5918, i32 %5919, !dbg !471
  store i8* %5921, i8** %5920, align 8, !dbg !472
  %5922 = load i32, i32* %5758, align 4, !dbg !473
  %5923 = getelementptr i8, i8* %5918, i32 %5922, !dbg !474
  br label %5924, !dbg !475

5924:                                             ; preds = %5931, %5910
  %5925 = load i32, i32* %5911, align 4, !dbg !476
  %5926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5753, i32 0, i32 23, i32 %5925, !dbg !477
  %5927 = load i8*, i8** %5920, align 8, !dbg !478
  %5928 = load i8, i8* %5927, align 1, !dbg !479
  %5929 = zext i8 %5928 to i32, !dbg !480
  store i32 %5929, i32* %5751, align 4, !dbg !481
  store i32 %5929, i32* %5926, align 4, !dbg !482
  %5930 = icmp sgt i8 %5928, -1, !dbg !483
  br i1 %5930, label %5954, label %5945, !dbg !484

5931:                                             ; preds = %5945, %5954
  %5932 = load i32, i32* %5911, align 4, !dbg !485
  %5933 = add i32 %5932, 1, !dbg !486
  store i32 %5933, i32* %5911, align 4, !dbg !487
  %5934 = load i64, i64* %5914, align 4, !dbg !488
  %5935 = and i64 4294967295, %5934, !dbg !489
  %5936 = trunc i64 %5935 to i32, !dbg !490
  %5937 = getelementptr i32, i32* %5758, i32 %5933, !dbg !491
  store i32 %5936, i32* %5937, align 4, !dbg !492
  %5938 = load i32, i32* %5911, align 4, !dbg !493
  %5939 = icmp sle i32 %5938, 5, !dbg !494
  %5940 = load i8*, i8** %5920, align 8, !dbg !495
  %5941 = ptrtoint i8* %5940 to i64, !dbg !496
  %5942 = ptrtoint i8* %5923 to i64, !dbg !497
  %5943 = icmp ult i64 %5941, %5942, !dbg !498
  %5944 = and i1 %5939, %5943, !dbg !499
  br i1 %5944, label %5924, label %5963, !dbg !500

5945:                                             ; preds = %5924
  %5946 = load i8*, i8** %5920, align 8, !dbg !501
  %5947 = call i8 @sqlite3GetVarint32(i8* %5946, i32* %5751), !dbg !502
  %5948 = getelementptr i8, i8* %5946, i8 %5947, !dbg !503
  store i8* %5948, i8** %5920, align 8, !dbg !504
  %5949 = load i32, i32* %5751, align 4, !dbg !505
  store i32 %5949, i32* %5926, align 4, !dbg !506
  %5950 = load i64, i64* %5914, align 4, !dbg !507
  %5951 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5949), !dbg !508
  %5952 = zext i32 %5951 to i64, !dbg !509
  %5953 = add i64 %5950, %5952, !dbg !510
  store i64 %5953, i64* %5914, align 4, !dbg !511
  br label %5931, !dbg !512

5954:                                             ; preds = %5924
  %5955 = getelementptr i8, i8* %5927, i32 1, !dbg !513
  store i8* %5955, i8** %5920, align 8, !dbg !514
  %5956 = load i32, i32* %5751, align 4, !dbg !515
  %5957 = trunc i32 %5956 to i8, !dbg !516
  %5958 = getelementptr i8, i8* %4, i8 %5957, !dbg !517
  %5959 = load i8, i8* %5958, align 1, !dbg !518
  %5960 = zext i8 %5959 to i64, !dbg !519
  %5961 = load i64, i64* %5914, align 4, !dbg !520
  %5962 = add i64 %5961, %5960, !dbg !521
  store i64 %5962, i64* %5914, align 4, !dbg !522
  br label %5931, !dbg !523

5963:                                             ; preds = %5931
  %5964 = load i64, i64* %5914, align 4, !dbg !524
  %5965 = load i32, i32* %5766, align 4, !dbg !525
  %5966 = zext i32 %5965 to i64, !dbg !526
  %5967 = icmp uge i64 %5941, %5942, !dbg !527
  %5968 = icmp ugt i64 %5941, %5942, !dbg !528
  %5969 = icmp ne i64 %5964, %5966, !dbg !529
  %5970 = icmp ugt i64 %5964, %5966, !dbg !530
  %5971 = or i1 %5968, %5969, !dbg !531
  %5972 = and i1 %5967, %5971, !dbg !532
  %5973 = or i1 %5972, %5970, !dbg !533
  br i1 %5973, label %5974, label %5978, !dbg !534

5974:                                             ; preds = %5963
  %5975 = load i32, i32* %5758, align 4, !dbg !535
  %5976 = icmp eq i32 %5975, 0, !dbg !536
  br i1 %5976, label %5977, label %5978, !dbg !537

5977:                                             ; preds = %5974
  store i32 0, i32* %5911, align 4, !dbg !538
  store i8* %5923, i8** %5920, align 8, !dbg !539
  br label %5978, !dbg !540

5978:                                             ; preds = %5977, %5974, %5963
  %5979 = load i32, i32* %5911, align 4, !dbg !541
  %5980 = trunc i32 %5979 to i16, !dbg !542
  store i16 %5980, i16* %5769, align 2, !dbg !543
  %5981 = load i8*, i8** %5920, align 8, !dbg !544
  %5982 = ptrtoint i8* %5981 to i64, !dbg !545
  %5983 = load i8*, i8** %5750, align 8, !dbg !546
  %5984 = ptrtoint i8* %5983 to i64, !dbg !547
  %5985 = sub i64 %5982, %5984, !dbg !548
  %5986 = trunc i64 %5985 to i32, !dbg !549
  store i32 %5986, i32* %5765, align 4, !dbg !550
  br label %5988, !dbg !551

5987:                                             ; preds = %5902
  store i32 0, i32* %5751, align 4, !dbg !552
  br label %5988, !dbg !553

5988:                                             ; preds = %5978, %5987
  %5989 = load i16, i16* %5769, align 2, !dbg !554
  %5990 = icmp sle i16 %5989, 5, !dbg !555
  br i1 %5990, label %5991, label %5820, !dbg !556

5991:                                             ; preds = %5988
  %5992 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5754, i32 0, i32 1, !dbg !557
  %5993 = load i16, i16* %5992, align 2, !dbg !557
  %5994 = and i16 %5993, 9216, !dbg !557
  %5995 = icmp ne i16 %5994, 0, !dbg !557
  br i1 %5995, label %5996, label %5997, !dbg !557

5996:                                             ; preds = %5991
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5754), !dbg !557
  br label %5998, !dbg !557

5997:                                             ; preds = %5991
  store i16 1, i16* %5992, align 2, !dbg !557
  br label %5998, !dbg !557

5998:                                             ; preds = %5996, %5997, %5867, %5847, %5886, %5897, %5815, %5816
  call void @llvm.stackrestore(i8* %5743), !dbg !558
  br label %5999, !dbg !75

5999:                                             ; preds = %18, %5998
  %6000 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 50, !dbg !685
  %6001 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6000, i32 0, i32 1, !dbg !688
  %6002 = load i16, i16* %6001, align 2, !dbg !689
  %6003 = and i16 %6002, 36, !dbg !690
  %6004 = icmp ne i16 %6003, 0, !dbg !691
  br i1 %6004, label %6005, label %6006, !dbg !692

6005:                                             ; preds = %5999
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6000), !dbg !693
  br label %6006, !dbg !694

6006:                                             ; preds = %6005, %5999, %18
  %6007 = call i8* @llvm.stacksave(), !dbg !266
  %6008 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %6009 = load i8, i8* %6008, align 1, !dbg !270
  %6010 = alloca i32, align 4, !dbg !271
  store i32 4, i32* %6010, align 4, !dbg !272
  %6011 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !273
  %6012 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %6013 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6011, align 8, !dbg !275
  store %struct.VdbeCursor* %6013, %struct.VdbeCursor** %6012, align 8, !dbg !276
  %6014 = alloca i8*, align 8, !dbg !277
  %6015 = alloca i32, align 4, !dbg !278
  %6016 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6012, i32* %6010), !dbg !279
  %6017 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6012, align 8, !dbg !280
  %6018 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 51, !dbg !281
  %6019 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 16, !dbg !282
  %6020 = load i16, i16* %6019, align 2, !dbg !283
  %6021 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 19, !dbg !284
  %6022 = load i32*, i32** %6021, align 8, !dbg !285
  %6023 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 0, !dbg !286
  %6024 = load i8, i8* %6023, align 1, !dbg !287
  %6025 = icmp ne i8 %6024, 3, !dbg !288
  %6026 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 2, !dbg !289
  %6027 = load i8, i8* %6026, align 1, !dbg !290
  %6028 = icmp ne i8 %6027, 0, !dbg !291
  %6029 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 14, !dbg !292
  %6030 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 21, !dbg !293
  %6031 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 22, !dbg !294
  %6032 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 20, !dbg !295
  %6033 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 17, !dbg !296
  %6034 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 9, !dbg !297
  %6035 = load i32, i32* %6034, align 4, !dbg !298
  %6036 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %6037 = load i32, i32* %6036, align 4, !dbg !300
  %6038 = icmp ne i32 %6035, %6037, !dbg !301
  br i1 %6038, label %6039, label %6081, !dbg !302

6039:                                             ; preds = %6006
  br i1 %6028, label %6061, label %6056, !dbg !303

6040:                                             ; preds = %6056, %6063
  %6041 = load i32, i32* %6036, align 4, !dbg !304
  store i32 %6041, i32* %6034, align 4, !dbg !305
  %6042 = load i8*, i8** %6032, align 8, !dbg !306
  %6043 = load i8, i8* %6042, align 1, !dbg !307
  %6044 = icmp sgt i8 %6043, -1, !dbg !310
  br i1 %6044, label %6045, label %6047, !dbg !311

6045:                                             ; preds = %6040
  %6046 = zext i8 %6043 to i32, !dbg !312
  store i32 %6046, i32* %6022, align 4, !dbg !313
  store i32 1, i32* %6029, align 4, !dbg !314
  br label %6050, !dbg !315

6047:                                             ; preds = %6040
  %6048 = call i8 @sqlite3GetVarint32(i8* %6042, i32* %6022), !dbg !316
  %6049 = zext i8 %6048 to i32, !dbg !317
  store i32 %6049, i32* %6029, align 4, !dbg !318
  br label %6050, !dbg !319

6050:                                             ; preds = %6047, %6045
  store i16 0, i16* %6033, align 2, !dbg !320
  %6051 = load i32, i32* %6031, align 4, !dbg !321
  %6052 = load i32, i32* %6022, align 4, !dbg !322
  %6053 = icmp ult i32 %6051, %6052, !dbg !323
  br i1 %6053, label %6055, label %6054, !dbg !324

6054:                                             ; preds = %6050
  store i8* %6042, i8** %6014, align 8, !dbg !325
  br label %6174, !dbg !326

6055:                                             ; preds = %6050
  store i8* null, i8** %6032, align 8, !dbg !327
  store i32 0, i32* %6031, align 4, !dbg !328
  br label %6081, !dbg !329

6056:                                             ; preds = %6039
  %6057 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 12, i32 0, !dbg !330
  %6058 = load %struct.BtCursor*, %struct.BtCursor** %6057, align 8, !dbg !331
  %6059 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6058), !dbg !332
  store i32 %6059, i32* %6030, align 4, !dbg !333
  %6060 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6058, i32* %6031), !dbg !334
  store i8* %6060, i8** %6032, align 8, !dbg !335
  br label %6040, !dbg !336

6061:                                             ; preds = %6039
  %6062 = icmp eq i8 %6024, 3, !dbg !337
  br i1 %6062, label %6063, label %6074, !dbg !338

6063:                                             ; preds = %6061
  %6064 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 10, !dbg !339
  %6065 = load i32, i32* %6064, align 4, !dbg !340
  %6066 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6065, !dbg !341
  %6067 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6066, i32 0, i32 1, !dbg !342
  %6068 = load i16, i16* %6067, align 2, !dbg !343
  %6069 = and i16 %6068, 16, !dbg !344
  %6070 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6066, i32 0, i32 4, !dbg !345
  %6071 = load i32, i32* %6070, align 4, !dbg !346
  store i32 %6071, i32* %6030, align 4, !dbg !347
  store i32 %6071, i32* %6031, align 4, !dbg !348
  %6072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6066, i32 0, i32 5, !dbg !349
  %6073 = load i8*, i8** %6072, align 8, !dbg !350
  store i8* %6073, i8** %6032, align 8, !dbg !351
  br label %6040, !dbg !352

6074:                                             ; preds = %6061
  %6075 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 1, !dbg !353
  %6076 = load i16, i16* %6075, align 2, !dbg !353
  %6077 = and i16 %6076, 9216, !dbg !353
  %6078 = icmp ne i16 %6077, 0, !dbg !353
  br i1 %6078, label %6079, label %6080, !dbg !353

6079:                                             ; preds = %6074
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6018), !dbg !353
  br label %6262, !dbg !353

6080:                                             ; preds = %6074
  store i16 1, i16* %6075, align 2, !dbg !353
  br label %6262, !dbg !353

6081:                                             ; preds = %6055, %6006
  %6082 = load i16, i16* %6033, align 2, !dbg !354
  %6083 = icmp ule i16 %6082, 6, !dbg !355
  br i1 %6083, label %6166, label %6163, !dbg !356

6084:                                             ; preds = %6163, %6252
  %6085 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 1, !dbg !357
  %6086 = load i16, i16* %6085, align 2, !dbg !358
  %6087 = and i16 9216, %6086, !dbg !359
  %6088 = icmp eq i16 0, %6087, !dbg !360
  br i1 %6088, label %6089, label %6093, !dbg !361

6089:                                             ; preds = %6084
  %6090 = icmp ne i16 %6087, 0, !dbg !362
  br i1 %6090, label %6091, label %6092, !dbg !362

6091:                                             ; preds = %6089
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6018), !dbg !362
  br label %6093, !dbg !362

6092:                                             ; preds = %6089
  store i16 1, i16* %6085, align 2, !dbg !362
  br label %6093, !dbg !362

6093:                                             ; preds = %6091, %6092, %6084
  %6094 = load i32, i32* %6015, align 4, !dbg !363
  %6095 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 23, i32 6, !dbg !364
  %6096 = load i32, i32* %6095, align 4, !dbg !365
  %6097 = load i32, i32* %6031, align 4, !dbg !366
  %6098 = getelementptr i32, i32* %6022, i32 7, !dbg !367
  %6099 = load i32, i32* %6098, align 4, !dbg !368
  %6100 = icmp sge i32 %6097, %6099, !dbg !369
  br i1 %6100, label %6101, label %6141, !dbg !370

6101:                                             ; preds = %6093
  %6102 = load i8*, i8** %6032, align 8, !dbg !371
  %6103 = ptrtoint i8* %6102 to i64, !dbg !372
  %6104 = getelementptr i32, i32* %6022, i32 6, !dbg !373
  %6105 = load i32, i32* %6104, align 4, !dbg !374
  %6106 = zext i32 %6105 to i64, !dbg !375
  %6107 = add i64 %6103, %6106, !dbg !376
  %6108 = inttoptr i64 %6107 to i8*, !dbg !377
  store i8* %6108, i8** %6014, align 8, !dbg !378
  %6109 = load i32, i32* %6015, align 4, !dbg !379
  %6110 = icmp ult i32 %6109, 12, !dbg !380
  br i1 %6110, label %6111, label %6113, !dbg !381

6111:                                             ; preds = %6101
  %6112 = call i32 @sqlite3VdbeSerialGet(i8* %6108, i32 %6109, %struct.sqlite3_value* %6018), !dbg !382
  br label %6262, !dbg !383

6113:                                             ; preds = %6101
  %6114 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %6114, align 2, !dbg !385
  %6115 = getelementptr i16, i16* %6114, i32 1, !dbg !386
  store i16 514, i16* %6115, align 2, !dbg !387
  %6116 = load i32, i32* %6015, align 4, !dbg !388
  %6117 = sub i32 %6116, 12, !dbg !389
  %6118 = lshr i32 %6117, 1, !dbg !390
  %6119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 4, !dbg !391
  store i32 %6118, i32* %6119, align 4, !dbg !392
  %6120 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 2, !dbg !393
  store i8 %6009, i8* %6120, align 1, !dbg !394
  %6121 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 5, !dbg !395
  %6122 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 7, !dbg !396
  %6123 = load i32, i32* %6122, align 4, !dbg !397
  %6124 = add i32 %6118, 2, !dbg !398
  %6125 = icmp slt i32 %6123, %6124, !dbg !399
  br i1 %6125, label %6126, label %6128, !dbg !400

6126:                                             ; preds = %6113
  store i16 1, i16* %6085, align 2, !dbg !401
  %6127 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6018, i32 %6124, i32 0), !dbg !402
  br label %6131, !dbg !403

6128:                                             ; preds = %6113
  %6129 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 6, !dbg !404
  %6130 = load i8*, i8** %6129, align 8, !dbg !405
  store i8* %6130, i8** %6121, align 8, !dbg !406
  br label %6131, !dbg !407

6131:                                             ; preds = %6128, %6126
  %6132 = zext i32 %6118 to i64, !dbg !408
  %6133 = load i8*, i8** %6121, align 8, !dbg !409
  %6134 = load i8*, i8** %6014, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6133, i8* %6134, i64 %6132, i1 false), !dbg !411
  %6135 = getelementptr i8, i8* %6133, i32 %6118, !dbg !412
  store i8 0, i8* %6135, align 1, !dbg !413
  %6136 = add i32 %6118, 1, !dbg !414
  %6137 = getelementptr i8, i8* %6133, i32 %6136, !dbg !415
  store i8 0, i8* %6137, align 1, !dbg !416
  %6138 = and i32 %6116, 1, !dbg !417
  %6139 = getelementptr i16, i16* %6114, i32 %6138, !dbg !418
  %6140 = load i16, i16* %6139, align 2, !dbg !419
  store i16 %6140, i16* %6085, align 2, !dbg !420
  br label %6262, !dbg !421

6141:                                             ; preds = %6093
  %6142 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 2, !dbg !422
  store i8 %6009, i8* %6142, align 1, !dbg !423
  %6143 = load i32, i32* %6015, align 4, !dbg !424
  %6144 = and i32 %6143, 1, !dbg !425
  %6145 = icmp eq i32 %6144, 0, !dbg !426
  %6146 = icmp sge i32 %6143, 12, !dbg !427
  %6147 = and i1 %6146, %6145, !dbg !428
  %6148 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6143), !dbg !429
  %6149 = icmp eq i32 %6148, 0, !dbg !430
  br i1 %6149, label %6161, label %6150, !dbg !431

6150:                                             ; preds = %6141
  %6151 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 12, i32 0, !dbg !432
  %6152 = load %struct.BtCursor*, %struct.BtCursor** %6151, align 8, !dbg !433
  %6153 = getelementptr i32, i32* %6022, i32 6, !dbg !434
  %6154 = load i32, i32* %6153, align 4, !dbg !435
  %6155 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6152, i32 %6154, i32 %6148, %struct.sqlite3_value* %6018), !dbg !436
  %6156 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 5, !dbg !437
  %6157 = load i8*, i8** %6156, align 8, !dbg !438
  %6158 = call i32 @sqlite3VdbeSerialGet(i8* %6157, i32 %6143, %struct.sqlite3_value* %6018), !dbg !439
  %6159 = load i16, i16* %6085, align 2, !dbg !440
  %6160 = and i16 %6159, -4097, !dbg !441
  store i16 %6160, i16* %6085, align 2, !dbg !442
  br label %6262, !dbg !443

6161:                                             ; preds = %6141
  %6162 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6143, %struct.sqlite3_value* %6018), !dbg !444
  br label %6262, !dbg !445

6163:                                             ; preds = %6081
  %6164 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 23, i32 6, !dbg !446
  %6165 = load i32, i32* %6164, align 4, !dbg !447
  store i32 %6165, i32* %6015, align 4, !dbg !448
  br label %6084, !dbg !449

6166:                                             ; preds = %6081
  %6167 = load i32, i32* %6029, align 4, !dbg !450
  %6168 = load i32, i32* %6022, align 4, !dbg !451
  %6169 = icmp ult i32 %6167, %6168, !dbg !452
  br i1 %6169, label %6170, label %6251, !dbg !453

6170:                                             ; preds = %6166
  %6171 = load i8*, i8** %6032, align 8, !dbg !454
  %6172 = icmp eq i8* %6171, null, !dbg !455
  br i1 %6172, label %6174, label %6173, !dbg !456

6173:                                             ; preds = %6170
  store i8* %6171, i8** %6014, align 8, !dbg !457
  br label %6174, !dbg !458

6174:                                             ; preds = %6173, %6170, %6054
  %6175 = alloca i32, align 4, !dbg !459
  %6176 = load i16, i16* %6033, align 2, !dbg !460
  %6177 = zext i16 %6176 to i32, !dbg !461
  store i32 %6177, i32* %6175, align 4, !dbg !462
  %6178 = alloca i64, align 8, !dbg !463
  %6179 = getelementptr i32, i32* %6022, i32 %6177, !dbg !464
  %6180 = load i32, i32* %6179, align 4, !dbg !465
  %6181 = zext i32 %6180 to i64, !dbg !466
  store i64 %6181, i64* %6178, align 4, !dbg !467
  %6182 = load i8*, i8** %6014, align 8, !dbg !468
  %6183 = load i32, i32* %6029, align 4, !dbg !469
  %6184 = alloca i8*, align 8, !dbg !470
  %6185 = getelementptr i8, i8* %6182, i32 %6183, !dbg !471
  store i8* %6185, i8** %6184, align 8, !dbg !472
  %6186 = load i32, i32* %6022, align 4, !dbg !473
  %6187 = getelementptr i8, i8* %6182, i32 %6186, !dbg !474
  br label %6188, !dbg !475

6188:                                             ; preds = %6195, %6174
  %6189 = load i32, i32* %6175, align 4, !dbg !476
  %6190 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6017, i32 0, i32 23, i32 %6189, !dbg !477
  %6191 = load i8*, i8** %6184, align 8, !dbg !478
  %6192 = load i8, i8* %6191, align 1, !dbg !479
  %6193 = zext i8 %6192 to i32, !dbg !480
  store i32 %6193, i32* %6015, align 4, !dbg !481
  store i32 %6193, i32* %6190, align 4, !dbg !482
  %6194 = icmp sgt i8 %6192, -1, !dbg !483
  br i1 %6194, label %6218, label %6209, !dbg !484

6195:                                             ; preds = %6209, %6218
  %6196 = load i32, i32* %6175, align 4, !dbg !485
  %6197 = add i32 %6196, 1, !dbg !486
  store i32 %6197, i32* %6175, align 4, !dbg !487
  %6198 = load i64, i64* %6178, align 4, !dbg !488
  %6199 = and i64 4294967295, %6198, !dbg !489
  %6200 = trunc i64 %6199 to i32, !dbg !490
  %6201 = getelementptr i32, i32* %6022, i32 %6197, !dbg !491
  store i32 %6200, i32* %6201, align 4, !dbg !492
  %6202 = load i32, i32* %6175, align 4, !dbg !493
  %6203 = icmp sle i32 %6202, 6, !dbg !494
  %6204 = load i8*, i8** %6184, align 8, !dbg !495
  %6205 = ptrtoint i8* %6204 to i64, !dbg !496
  %6206 = ptrtoint i8* %6187 to i64, !dbg !497
  %6207 = icmp ult i64 %6205, %6206, !dbg !498
  %6208 = and i1 %6203, %6207, !dbg !499
  br i1 %6208, label %6188, label %6227, !dbg !500

6209:                                             ; preds = %6188
  %6210 = load i8*, i8** %6184, align 8, !dbg !501
  %6211 = call i8 @sqlite3GetVarint32(i8* %6210, i32* %6015), !dbg !502
  %6212 = getelementptr i8, i8* %6210, i8 %6211, !dbg !503
  store i8* %6212, i8** %6184, align 8, !dbg !504
  %6213 = load i32, i32* %6015, align 4, !dbg !505
  store i32 %6213, i32* %6190, align 4, !dbg !506
  %6214 = load i64, i64* %6178, align 4, !dbg !507
  %6215 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6213), !dbg !508
  %6216 = zext i32 %6215 to i64, !dbg !509
  %6217 = add i64 %6214, %6216, !dbg !510
  store i64 %6217, i64* %6178, align 4, !dbg !511
  br label %6195, !dbg !512

6218:                                             ; preds = %6188
  %6219 = getelementptr i8, i8* %6191, i32 1, !dbg !513
  store i8* %6219, i8** %6184, align 8, !dbg !514
  %6220 = load i32, i32* %6015, align 4, !dbg !515
  %6221 = trunc i32 %6220 to i8, !dbg !516
  %6222 = getelementptr i8, i8* %4, i8 %6221, !dbg !517
  %6223 = load i8, i8* %6222, align 1, !dbg !518
  %6224 = zext i8 %6223 to i64, !dbg !519
  %6225 = load i64, i64* %6178, align 4, !dbg !520
  %6226 = add i64 %6225, %6224, !dbg !521
  store i64 %6226, i64* %6178, align 4, !dbg !522
  br label %6195, !dbg !523

6227:                                             ; preds = %6195
  %6228 = load i64, i64* %6178, align 4, !dbg !524
  %6229 = load i32, i32* %6030, align 4, !dbg !525
  %6230 = zext i32 %6229 to i64, !dbg !526
  %6231 = icmp uge i64 %6205, %6206, !dbg !527
  %6232 = icmp ugt i64 %6205, %6206, !dbg !528
  %6233 = icmp ne i64 %6228, %6230, !dbg !529
  %6234 = icmp ugt i64 %6228, %6230, !dbg !530
  %6235 = or i1 %6232, %6233, !dbg !531
  %6236 = and i1 %6231, %6235, !dbg !532
  %6237 = or i1 %6236, %6234, !dbg !533
  br i1 %6237, label %6238, label %6242, !dbg !534

6238:                                             ; preds = %6227
  %6239 = load i32, i32* %6022, align 4, !dbg !535
  %6240 = icmp eq i32 %6239, 0, !dbg !536
  br i1 %6240, label %6241, label %6242, !dbg !537

6241:                                             ; preds = %6238
  store i32 0, i32* %6175, align 4, !dbg !538
  store i8* %6187, i8** %6184, align 8, !dbg !539
  br label %6242, !dbg !540

6242:                                             ; preds = %6241, %6238, %6227
  %6243 = load i32, i32* %6175, align 4, !dbg !541
  %6244 = trunc i32 %6243 to i16, !dbg !542
  store i16 %6244, i16* %6033, align 2, !dbg !543
  %6245 = load i8*, i8** %6184, align 8, !dbg !544
  %6246 = ptrtoint i8* %6245 to i64, !dbg !545
  %6247 = load i8*, i8** %6014, align 8, !dbg !546
  %6248 = ptrtoint i8* %6247 to i64, !dbg !547
  %6249 = sub i64 %6246, %6248, !dbg !548
  %6250 = trunc i64 %6249 to i32, !dbg !549
  store i32 %6250, i32* %6029, align 4, !dbg !550
  br label %6252, !dbg !551

6251:                                             ; preds = %6166
  store i32 0, i32* %6015, align 4, !dbg !552
  br label %6252, !dbg !553

6252:                                             ; preds = %6242, %6251
  %6253 = load i16, i16* %6033, align 2, !dbg !554
  %6254 = icmp sle i16 %6253, 6, !dbg !555
  br i1 %6254, label %6255, label %6084, !dbg !556

6255:                                             ; preds = %6252
  %6256 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6018, i32 0, i32 1, !dbg !557
  %6257 = load i16, i16* %6256, align 2, !dbg !557
  %6258 = and i16 %6257, 9216, !dbg !557
  %6259 = icmp ne i16 %6258, 0, !dbg !557
  br i1 %6259, label %6260, label %6261, !dbg !557

6260:                                             ; preds = %6255
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6018), !dbg !557
  br label %6262, !dbg !557

6261:                                             ; preds = %6255
  store i16 1, i16* %6256, align 2, !dbg !557
  br label %6262, !dbg !557

6262:                                             ; preds = %6260, %6261, %6131, %6111, %6150, %6161, %6079, %6080
  call void @llvm.stackrestore(i8* %6007), !dbg !558
  br label %6263, !dbg !75

6263:                                             ; preds = %18, %6262
  %6264 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 51, !dbg !685
  %6265 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6264, i32 0, i32 1, !dbg !688
  %6266 = load i16, i16* %6265, align 2, !dbg !689
  %6267 = and i16 %6266, 36, !dbg !690
  %6268 = icmp ne i16 %6267, 0, !dbg !691
  br i1 %6268, label %6269, label %6270, !dbg !692

6269:                                             ; preds = %6263
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %6264), !dbg !693
  br label %6270, !dbg !694

6270:                                             ; preds = %6269, %6263, %18
  %6271 = call i8* @llvm.stacksave(), !dbg !695
  %6272 = alloca i64, align 8, !dbg !698
  store i64 0, i64* %6272, align 4, !dbg !699
  %6273 = alloca i32, align 8, !dbg !700
  store i32 0, i32* %6273, align 4, !dbg !701
  %6274 = alloca i64, align 8, !dbg !702
  store i64 0, i64* %6274, align 4, !dbg !703
  %6275 = alloca i8*, align 8, !dbg !704
  %6276 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 97, !dbg !705
  %6277 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6276, i32 0, i32 6, !dbg !706
  %6278 = bitcast %union.p4union* %6277 to i8**, !dbg !707
  %6279 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 49, !dbg !708
  %6280 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6279, i32 2, !dbg !709
  %6281 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !710
  %6282 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 0, i32 1, !dbg !711
  %6283 = load i16, i16* %6282, align 2, !dbg !712
  %6284 = and i16 %6283, 1, !dbg !713
  %6285 = icmp ne i16 %6284, 0, !dbg !713
  %6286 = and i16 %6283, 36, !dbg !714
  %6287 = icmp ne i16 %6286, 0, !dbg !714
  %6288 = and i16 %6283, 8, !dbg !715
  %6289 = icmp ne i16 %6288, 0, !dbg !715
  %6290 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 0, i32 8, !dbg !716
  br i1 %6285, label %6291, label %6299, !dbg !717

6291:                                             ; preds = %6270
  %6292 = and i16 %6283, 16384, !dbg !718
  %6293 = icmp ne i16 %6292, 0, !dbg !718
  br i1 %6293, label %6294, label %6295, !dbg !719

6294:                                             ; preds = %6291
  store i32 10, i32* %6290, align 4, !dbg !720
  br label %6296, !dbg !721

6295:                                             ; preds = %6291
  store i32 0, i32* %6290, align 4, !dbg !722
  br label %6296, !dbg !723

6296:                                             ; preds = %6295, %6294
  %6297 = load i32, i32* %6273, align 4, !dbg !724
  %6298 = add i32 %6297, 1, !dbg !724
  store i32 %6298, i32* %6273, align 4, !dbg !724
  br label %6389, !dbg !725

6299:                                             ; preds = %6270
  br i1 %6287, label %6300, label %6344, !dbg !726

6300:                                             ; preds = %6299
  %6301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 0, i32 0, !dbg !727
  %6302 = bitcast %union.MemValue* %6301 to i64*, !dbg !728
  %6303 = load i64, i64* %6302, align 4, !dbg !729
  %6304 = alloca i64, align 8, !dbg !730
  %6305 = icmp slt i64 %6303, 0, !dbg !731
  br i1 %6305, label %6306, label %6308, !dbg !732

6306:                                             ; preds = %6300
  %6307 = xor i64 %6303, -1, !dbg !733
  store i64 %6307, i64* %6304, align 4, !dbg !734
  br label %6309, !dbg !735

6308:                                             ; preds = %6300
  store i64 %6303, i64* %6304, align 4, !dbg !736
  br label %6309, !dbg !737

6309:                                             ; preds = %6308, %6306
  %6310 = load i32, i32* %6273, align 4, !dbg !738
  %6311 = add i32 %6310, 1, !dbg !738
  store i32 %6311, i32* %6273, align 4, !dbg !738
  %6312 = load i64, i64* %6304, align 4, !dbg !739
  %6313 = icmp slt i64 %6312, 127, !dbg !740
  %6314 = icmp slt i64 %6312, 32767, !dbg !741
  %6315 = icmp slt i64 %6312, 8388607, !dbg !742
  %6316 = icmp slt i64 %6312, 2147483647, !dbg !743
  br i1 %6313, label %6317, label %6326, !dbg !744

6317:                                             ; preds = %6309
  %6318 = and i64 %6303, 1, !dbg !745
  %6319 = icmp eq i64 %6318, %6303, !dbg !746
  br i1 %6319, label %6320, label %6323, !dbg !747

6320:                                             ; preds = %6317
  %6321 = trunc i64 %6312 to i32, !dbg !748
  %6322 = add i32 %6321, 8, !dbg !749
  store i32 %6322, i32* %6290, align 4, !dbg !750
  br label %6389, !dbg !751

6323:                                             ; preds = %6317
  %6324 = load i64, i64* %6272, align 4, !dbg !752
  %6325 = add i64 %6324, 1, !dbg !752
  store i64 %6325, i64* %6272, align 4, !dbg !752
  store i32 1, i32* %6290, align 4, !dbg !753
  br label %6389, !dbg !754

6326:                                             ; preds = %6309
  %6327 = load i64, i64* %6272, align 4, !dbg !755
  br i1 %6314, label %6328, label %6330, !dbg !756

6328:                                             ; preds = %6326
  %6329 = add i64 %6327, 2, !dbg !757
  store i64 %6329, i64* %6272, align 4, !dbg !757
  store i32 2, i32* %6290, align 4, !dbg !758
  br label %6389, !dbg !759

6330:                                             ; preds = %6326
  br i1 %6315, label %6331, label %6333, !dbg !760

6331:                                             ; preds = %6330
  %6332 = add i64 %6327, 3, !dbg !761
  store i64 %6332, i64* %6272, align 4, !dbg !761
  store i32 3, i32* %6290, align 4, !dbg !762
  br label %6389, !dbg !763

6333:                                             ; preds = %6330
  br i1 %6316, label %6334, label %6336, !dbg !764

6334:                                             ; preds = %6333
  %6335 = add i64 %6327, 4, !dbg !765
  store i64 %6335, i64* %6272, align 4, !dbg !765
  store i32 4, i32* %6290, align 4, !dbg !766
  br label %6389, !dbg !767

6336:                                             ; preds = %6333
  %6337 = add i64 %6327, 8, !dbg !768
  store i64 %6337, i64* %6272, align 4, !dbg !768
  %6338 = and i16 %6283, 32, !dbg !769
  %6339 = icmp ne i16 %6338, 0, !dbg !769
  br i1 %6339, label %6340, label %6343, !dbg !770

6340:                                             ; preds = %6336
  %6341 = and i16 %6283, -33, !dbg !771
  %6342 = or i16 %6341, 8, !dbg !772
  store i16 %6342, i16* %6282, align 2, !dbg !773
  store i32 7, i32* %6290, align 4, !dbg !774
  br label %6389, !dbg !775

6343:                                             ; preds = %6336
  store i32 6, i32* %6290, align 4, !dbg !776
  br label %6389, !dbg !777

6344:                                             ; preds = %6299
  br i1 %6289, label %6345, label %6350, !dbg !778

6345:                                             ; preds = %6344
  %6346 = load i32, i32* %6273, align 4, !dbg !779
  %6347 = add i32 %6346, 1, !dbg !779
  store i32 %6347, i32* %6273, align 4, !dbg !779
  %6348 = load i64, i64* %6272, align 4, !dbg !780
  %6349 = add i64 %6348, 8, !dbg !780
  store i64 %6349, i64* %6272, align 4, !dbg !780
  store i32 7, i32* %6290, align 4, !dbg !781
  br label %6389, !dbg !782

6350:                                             ; preds = %6344
  %6351 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 0, i32 4, !dbg !783
  %6352 = load i32, i32* %6351, align 4, !dbg !784
  %6353 = alloca i32, align 8, !dbg !785
  store i32 %6352, i32* %6353, align 4, !dbg !786
  %6354 = alloca i32, align 8, !dbg !787
  %6355 = add i32 %6352, %6352, !dbg !788
  %6356 = add i32 %6355, 12, !dbg !789
  %6357 = and i16 %6283, 2, !dbg !790
  %6358 = icmp ne i16 %6357, 0, !dbg !791
  %6359 = zext i1 %6358 to i32, !dbg !792
  %6360 = add i32 %6356, %6359, !dbg !793
  store i32 %6360, i32* %6354, align 4, !dbg !794
  %6361 = and i16 %6283, 16384, !dbg !795
  %6362 = icmp ne i16 %6361, 0, !dbg !796
  br i1 %6362, label %6363, label %6379, !dbg !797

6363:                                             ; preds = %6350
  %6364 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 0, i32 0, !dbg !798
  %6365 = bitcast %union.MemValue* %6364 to i32*, !dbg !799
  %6366 = load i32, i32* %6365, align 4, !dbg !800
  %6367 = add i32 %6366, %6366, !dbg !801
  %6368 = add i32 %6360, %6367, !dbg !802
  store i32 %6368, i32* %6354, align 4, !dbg !802
  %6369 = load i64, i64* %6272, align 4, !dbg !803
  %6370 = icmp ne i64 %6369, 0, !dbg !803
  br i1 %6370, label %6375, label %6371, !dbg !804

6371:                                             ; preds = %6363
  %6372 = zext i32 %6366 to i64, !dbg !805
  %6373 = load i64, i64* %6274, align 4, !dbg !806
  %6374 = add i64 %6373, %6372, !dbg !806
  store i64 %6374, i64* %6274, align 4, !dbg !806
  br label %6379, !dbg !807

6375:                                             ; preds = %6363
  %6376 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6280), !dbg !808
  %6377 = load i32, i32* %6353, align 4, !dbg !809
  %6378 = add i32 %6377, %6366, !dbg !809
  store i32 %6378, i32* %6353, align 4, !dbg !809
  br label %6379, !dbg !810

6379:                                             ; preds = %6371, %6375, %6350
  %6380 = load i32, i32* %6353, align 4, !dbg !811
  %6381 = zext i32 %6380 to i64, !dbg !812
  %6382 = load i64, i64* %6272, align 4, !dbg !813
  %6383 = add i64 %6382, %6381, !dbg !813
  store i64 %6383, i64* %6272, align 4, !dbg !813
  %6384 = load i32, i32* %6354, align 4, !dbg !814
  %6385 = zext i32 %6384 to i64, !dbg !815
  %6386 = call i32 @sqlite3VarintLen(i64 %6385), !dbg !816
  %6387 = load i32, i32* %6273, align 4, !dbg !817
  %6388 = add i32 %6387, %6386, !dbg !817
  store i32 %6388, i32* %6273, align 4, !dbg !817
  store i32 %6384, i32* %6290, align 4, !dbg !818
  br label %6389, !dbg !819

6389:                                             ; preds = %6328, %6331, %6334, %6340, %6343, %6323, %6320, %6379, %6345, %6296
  %6390 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6280, i32 -1, !dbg !820
  %6391 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 0, i32 1, !dbg !711
  %6392 = load i16, i16* %6391, align 2, !dbg !712
  %6393 = and i16 %6392, 1, !dbg !713
  %6394 = icmp ne i16 %6393, 0, !dbg !713
  %6395 = and i16 %6392, 36, !dbg !714
  %6396 = icmp ne i16 %6395, 0, !dbg !714
  %6397 = and i16 %6392, 8, !dbg !715
  %6398 = icmp ne i16 %6397, 0, !dbg !715
  %6399 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 0, i32 8, !dbg !716
  br i1 %6394, label %6400, label %6408, !dbg !717

6400:                                             ; preds = %6389
  %6401 = and i16 %6392, 16384, !dbg !718
  %6402 = icmp ne i16 %6401, 0, !dbg !718
  br i1 %6402, label %6403, label %6404, !dbg !719

6403:                                             ; preds = %6400
  store i32 10, i32* %6399, align 4, !dbg !720
  br label %6405, !dbg !721

6404:                                             ; preds = %6400
  store i32 0, i32* %6399, align 4, !dbg !722
  br label %6405, !dbg !723

6405:                                             ; preds = %6404, %6403
  %6406 = load i32, i32* %6273, align 4, !dbg !724
  %6407 = add i32 %6406, 1, !dbg !724
  store i32 %6407, i32* %6273, align 4, !dbg !724
  br label %6498, !dbg !725

6408:                                             ; preds = %6389
  br i1 %6396, label %6409, label %6453, !dbg !726

6409:                                             ; preds = %6408
  %6410 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 0, i32 0, !dbg !727
  %6411 = bitcast %union.MemValue* %6410 to i64*, !dbg !728
  %6412 = load i64, i64* %6411, align 4, !dbg !729
  %6413 = alloca i64, align 8, !dbg !730
  %6414 = icmp slt i64 %6412, 0, !dbg !731
  br i1 %6414, label %6415, label %6417, !dbg !732

6415:                                             ; preds = %6409
  %6416 = xor i64 %6412, -1, !dbg !733
  store i64 %6416, i64* %6413, align 4, !dbg !734
  br label %6418, !dbg !735

6417:                                             ; preds = %6409
  store i64 %6412, i64* %6413, align 4, !dbg !736
  br label %6418, !dbg !737

6418:                                             ; preds = %6417, %6415
  %6419 = load i32, i32* %6273, align 4, !dbg !738
  %6420 = add i32 %6419, 1, !dbg !738
  store i32 %6420, i32* %6273, align 4, !dbg !738
  %6421 = load i64, i64* %6413, align 4, !dbg !739
  %6422 = icmp slt i64 %6421, 127, !dbg !740
  %6423 = icmp slt i64 %6421, 32767, !dbg !741
  %6424 = icmp slt i64 %6421, 8388607, !dbg !742
  %6425 = icmp slt i64 %6421, 2147483647, !dbg !743
  br i1 %6422, label %6426, label %6435, !dbg !744

6426:                                             ; preds = %6418
  %6427 = and i64 %6412, 1, !dbg !745
  %6428 = icmp eq i64 %6427, %6412, !dbg !746
  br i1 %6428, label %6429, label %6432, !dbg !747

6429:                                             ; preds = %6426
  %6430 = trunc i64 %6421 to i32, !dbg !748
  %6431 = add i32 %6430, 8, !dbg !749
  store i32 %6431, i32* %6399, align 4, !dbg !750
  br label %6498, !dbg !751

6432:                                             ; preds = %6426
  %6433 = load i64, i64* %6272, align 4, !dbg !752
  %6434 = add i64 %6433, 1, !dbg !752
  store i64 %6434, i64* %6272, align 4, !dbg !752
  store i32 1, i32* %6399, align 4, !dbg !753
  br label %6498, !dbg !754

6435:                                             ; preds = %6418
  %6436 = load i64, i64* %6272, align 4, !dbg !755
  br i1 %6423, label %6437, label %6439, !dbg !756

6437:                                             ; preds = %6435
  %6438 = add i64 %6436, 2, !dbg !757
  store i64 %6438, i64* %6272, align 4, !dbg !757
  store i32 2, i32* %6399, align 4, !dbg !758
  br label %6498, !dbg !759

6439:                                             ; preds = %6435
  br i1 %6424, label %6440, label %6442, !dbg !760

6440:                                             ; preds = %6439
  %6441 = add i64 %6436, 3, !dbg !761
  store i64 %6441, i64* %6272, align 4, !dbg !761
  store i32 3, i32* %6399, align 4, !dbg !762
  br label %6498, !dbg !763

6442:                                             ; preds = %6439
  br i1 %6425, label %6443, label %6445, !dbg !764

6443:                                             ; preds = %6442
  %6444 = add i64 %6436, 4, !dbg !765
  store i64 %6444, i64* %6272, align 4, !dbg !765
  store i32 4, i32* %6399, align 4, !dbg !766
  br label %6498, !dbg !767

6445:                                             ; preds = %6442
  %6446 = add i64 %6436, 8, !dbg !768
  store i64 %6446, i64* %6272, align 4, !dbg !768
  %6447 = and i16 %6392, 32, !dbg !769
  %6448 = icmp ne i16 %6447, 0, !dbg !769
  br i1 %6448, label %6449, label %6452, !dbg !770

6449:                                             ; preds = %6445
  %6450 = and i16 %6392, -33, !dbg !771
  %6451 = or i16 %6450, 8, !dbg !772
  store i16 %6451, i16* %6391, align 2, !dbg !773
  store i32 7, i32* %6399, align 4, !dbg !774
  br label %6498, !dbg !775

6452:                                             ; preds = %6445
  store i32 6, i32* %6399, align 4, !dbg !776
  br label %6498, !dbg !777

6453:                                             ; preds = %6408
  br i1 %6398, label %6454, label %6459, !dbg !778

6454:                                             ; preds = %6453
  %6455 = load i32, i32* %6273, align 4, !dbg !779
  %6456 = add i32 %6455, 1, !dbg !779
  store i32 %6456, i32* %6273, align 4, !dbg !779
  %6457 = load i64, i64* %6272, align 4, !dbg !780
  %6458 = add i64 %6457, 8, !dbg !780
  store i64 %6458, i64* %6272, align 4, !dbg !780
  store i32 7, i32* %6399, align 4, !dbg !781
  br label %6498, !dbg !782

6459:                                             ; preds = %6453
  %6460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 0, i32 4, !dbg !783
  %6461 = load i32, i32* %6460, align 4, !dbg !784
  %6462 = alloca i32, align 8, !dbg !785
  store i32 %6461, i32* %6462, align 4, !dbg !786
  %6463 = alloca i32, align 8, !dbg !787
  %6464 = add i32 %6461, %6461, !dbg !788
  %6465 = add i32 %6464, 12, !dbg !789
  %6466 = and i16 %6392, 2, !dbg !790
  %6467 = icmp ne i16 %6466, 0, !dbg !791
  %6468 = zext i1 %6467 to i32, !dbg !792
  %6469 = add i32 %6465, %6468, !dbg !793
  store i32 %6469, i32* %6463, align 4, !dbg !794
  %6470 = and i16 %6392, 16384, !dbg !795
  %6471 = icmp ne i16 %6470, 0, !dbg !796
  br i1 %6471, label %6472, label %6488, !dbg !797

6472:                                             ; preds = %6459
  %6473 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 0, i32 0, !dbg !798
  %6474 = bitcast %union.MemValue* %6473 to i32*, !dbg !799
  %6475 = load i32, i32* %6474, align 4, !dbg !800
  %6476 = add i32 %6475, %6475, !dbg !801
  %6477 = add i32 %6469, %6476, !dbg !802
  store i32 %6477, i32* %6463, align 4, !dbg !802
  %6478 = load i64, i64* %6272, align 4, !dbg !803
  %6479 = icmp ne i64 %6478, 0, !dbg !803
  br i1 %6479, label %6484, label %6480, !dbg !804

6480:                                             ; preds = %6472
  %6481 = zext i32 %6475 to i64, !dbg !805
  %6482 = load i64, i64* %6274, align 4, !dbg !806
  %6483 = add i64 %6482, %6481, !dbg !806
  store i64 %6483, i64* %6274, align 4, !dbg !806
  br label %6488, !dbg !807

6484:                                             ; preds = %6472
  %6485 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6390), !dbg !808
  %6486 = load i32, i32* %6462, align 4, !dbg !809
  %6487 = add i32 %6486, %6475, !dbg !809
  store i32 %6487, i32* %6462, align 4, !dbg !809
  br label %6488, !dbg !810

6488:                                             ; preds = %6480, %6484, %6459
  %6489 = load i32, i32* %6462, align 4, !dbg !811
  %6490 = zext i32 %6489 to i64, !dbg !812
  %6491 = load i64, i64* %6272, align 4, !dbg !813
  %6492 = add i64 %6491, %6490, !dbg !813
  store i64 %6492, i64* %6272, align 4, !dbg !813
  %6493 = load i32, i32* %6463, align 4, !dbg !814
  %6494 = zext i32 %6493 to i64, !dbg !815
  %6495 = call i32 @sqlite3VarintLen(i64 %6494), !dbg !816
  %6496 = load i32, i32* %6273, align 4, !dbg !817
  %6497 = add i32 %6496, %6495, !dbg !817
  store i32 %6497, i32* %6273, align 4, !dbg !817
  store i32 %6493, i32* %6399, align 4, !dbg !818
  br label %6498, !dbg !819

6498:                                             ; preds = %6437, %6440, %6443, %6449, %6452, %6432, %6429, %6488, %6454, %6405
  %6499 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6390, i32 -1, !dbg !820
  %6500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6499, i32 0, i32 1, !dbg !711
  %6501 = load i16, i16* %6500, align 2, !dbg !712
  %6502 = and i16 %6501, 1, !dbg !713
  %6503 = icmp ne i16 %6502, 0, !dbg !713
  %6504 = and i16 %6501, 36, !dbg !714
  %6505 = icmp ne i16 %6504, 0, !dbg !714
  %6506 = and i16 %6501, 8, !dbg !715
  %6507 = icmp ne i16 %6506, 0, !dbg !715
  %6508 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6499, i32 0, i32 8, !dbg !716
  br i1 %6503, label %6509, label %6517, !dbg !717

6509:                                             ; preds = %6498
  %6510 = and i16 %6501, 16384, !dbg !718
  %6511 = icmp ne i16 %6510, 0, !dbg !718
  br i1 %6511, label %6512, label %6513, !dbg !719

6512:                                             ; preds = %6509
  store i32 10, i32* %6508, align 4, !dbg !720
  br label %6514, !dbg !721

6513:                                             ; preds = %6509
  store i32 0, i32* %6508, align 4, !dbg !722
  br label %6514, !dbg !723

6514:                                             ; preds = %6513, %6512
  %6515 = load i32, i32* %6273, align 4, !dbg !724
  %6516 = add i32 %6515, 1, !dbg !724
  store i32 %6516, i32* %6273, align 4, !dbg !724
  br label %6607, !dbg !725

6517:                                             ; preds = %6498
  br i1 %6505, label %6518, label %6562, !dbg !726

6518:                                             ; preds = %6517
  %6519 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6499, i32 0, i32 0, !dbg !727
  %6520 = bitcast %union.MemValue* %6519 to i64*, !dbg !728
  %6521 = load i64, i64* %6520, align 4, !dbg !729
  %6522 = alloca i64, align 8, !dbg !730
  %6523 = icmp slt i64 %6521, 0, !dbg !731
  br i1 %6523, label %6524, label %6526, !dbg !732

6524:                                             ; preds = %6518
  %6525 = xor i64 %6521, -1, !dbg !733
  store i64 %6525, i64* %6522, align 4, !dbg !734
  br label %6527, !dbg !735

6526:                                             ; preds = %6518
  store i64 %6521, i64* %6522, align 4, !dbg !736
  br label %6527, !dbg !737

6527:                                             ; preds = %6526, %6524
  %6528 = load i32, i32* %6273, align 4, !dbg !738
  %6529 = add i32 %6528, 1, !dbg !738
  store i32 %6529, i32* %6273, align 4, !dbg !738
  %6530 = load i64, i64* %6522, align 4, !dbg !739
  %6531 = icmp slt i64 %6530, 127, !dbg !740
  %6532 = icmp slt i64 %6530, 32767, !dbg !741
  %6533 = icmp slt i64 %6530, 8388607, !dbg !742
  %6534 = icmp slt i64 %6530, 2147483647, !dbg !743
  br i1 %6531, label %6535, label %6544, !dbg !744

6535:                                             ; preds = %6527
  %6536 = and i64 %6521, 1, !dbg !745
  %6537 = icmp eq i64 %6536, %6521, !dbg !746
  br i1 %6537, label %6538, label %6541, !dbg !747

6538:                                             ; preds = %6535
  %6539 = trunc i64 %6530 to i32, !dbg !748
  %6540 = add i32 %6539, 8, !dbg !749
  store i32 %6540, i32* %6508, align 4, !dbg !750
  br label %6607, !dbg !751

6541:                                             ; preds = %6535
  %6542 = load i64, i64* %6272, align 4, !dbg !752
  %6543 = add i64 %6542, 1, !dbg !752
  store i64 %6543, i64* %6272, align 4, !dbg !752
  store i32 1, i32* %6508, align 4, !dbg !753
  br label %6607, !dbg !754

6544:                                             ; preds = %6527
  %6545 = load i64, i64* %6272, align 4, !dbg !755
  br i1 %6532, label %6546, label %6548, !dbg !756

6546:                                             ; preds = %6544
  %6547 = add i64 %6545, 2, !dbg !757
  store i64 %6547, i64* %6272, align 4, !dbg !757
  store i32 2, i32* %6508, align 4, !dbg !758
  br label %6607, !dbg !759

6548:                                             ; preds = %6544
  br i1 %6533, label %6549, label %6551, !dbg !760

6549:                                             ; preds = %6548
  %6550 = add i64 %6545, 3, !dbg !761
  store i64 %6550, i64* %6272, align 4, !dbg !761
  store i32 3, i32* %6508, align 4, !dbg !762
  br label %6607, !dbg !763

6551:                                             ; preds = %6548
  br i1 %6534, label %6552, label %6554, !dbg !764

6552:                                             ; preds = %6551
  %6553 = add i64 %6545, 4, !dbg !765
  store i64 %6553, i64* %6272, align 4, !dbg !765
  store i32 4, i32* %6508, align 4, !dbg !766
  br label %6607, !dbg !767

6554:                                             ; preds = %6551
  %6555 = add i64 %6545, 8, !dbg !768
  store i64 %6555, i64* %6272, align 4, !dbg !768
  %6556 = and i16 %6501, 32, !dbg !769
  %6557 = icmp ne i16 %6556, 0, !dbg !769
  br i1 %6557, label %6558, label %6561, !dbg !770

6558:                                             ; preds = %6554
  %6559 = and i16 %6501, -33, !dbg !771
  %6560 = or i16 %6559, 8, !dbg !772
  store i16 %6560, i16* %6500, align 2, !dbg !773
  store i32 7, i32* %6508, align 4, !dbg !774
  br label %6607, !dbg !775

6561:                                             ; preds = %6554
  store i32 6, i32* %6508, align 4, !dbg !776
  br label %6607, !dbg !777

6562:                                             ; preds = %6517
  br i1 %6507, label %6563, label %6568, !dbg !778

6563:                                             ; preds = %6562
  %6564 = load i32, i32* %6273, align 4, !dbg !779
  %6565 = add i32 %6564, 1, !dbg !779
  store i32 %6565, i32* %6273, align 4, !dbg !779
  %6566 = load i64, i64* %6272, align 4, !dbg !780
  %6567 = add i64 %6566, 8, !dbg !780
  store i64 %6567, i64* %6272, align 4, !dbg !780
  store i32 7, i32* %6508, align 4, !dbg !781
  br label %6607, !dbg !782

6568:                                             ; preds = %6562
  %6569 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6499, i32 0, i32 4, !dbg !783
  %6570 = load i32, i32* %6569, align 4, !dbg !784
  %6571 = alloca i32, align 8, !dbg !785
  store i32 %6570, i32* %6571, align 4, !dbg !786
  %6572 = alloca i32, align 8, !dbg !787
  %6573 = add i32 %6570, %6570, !dbg !788
  %6574 = add i32 %6573, 12, !dbg !789
  %6575 = and i16 %6501, 2, !dbg !790
  %6576 = icmp ne i16 %6575, 0, !dbg !791
  %6577 = zext i1 %6576 to i32, !dbg !792
  %6578 = add i32 %6574, %6577, !dbg !793
  store i32 %6578, i32* %6572, align 4, !dbg !794
  %6579 = and i16 %6501, 16384, !dbg !795
  %6580 = icmp ne i16 %6579, 0, !dbg !796
  br i1 %6580, label %6581, label %6597, !dbg !797

6581:                                             ; preds = %6568
  %6582 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6499, i32 0, i32 0, !dbg !798
  %6583 = bitcast %union.MemValue* %6582 to i32*, !dbg !799
  %6584 = load i32, i32* %6583, align 4, !dbg !800
  %6585 = add i32 %6584, %6584, !dbg !801
  %6586 = add i32 %6578, %6585, !dbg !802
  store i32 %6586, i32* %6572, align 4, !dbg !802
  %6587 = load i64, i64* %6272, align 4, !dbg !803
  %6588 = icmp ne i64 %6587, 0, !dbg !803
  br i1 %6588, label %6593, label %6589, !dbg !804

6589:                                             ; preds = %6581
  %6590 = zext i32 %6584 to i64, !dbg !805
  %6591 = load i64, i64* %6274, align 4, !dbg !806
  %6592 = add i64 %6591, %6590, !dbg !806
  store i64 %6592, i64* %6274, align 4, !dbg !806
  br label %6597, !dbg !807

6593:                                             ; preds = %6581
  %6594 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6499), !dbg !808
  %6595 = load i32, i32* %6571, align 4, !dbg !809
  %6596 = add i32 %6595, %6584, !dbg !809
  store i32 %6596, i32* %6571, align 4, !dbg !809
  br label %6597, !dbg !810

6597:                                             ; preds = %6589, %6593, %6568
  %6598 = load i32, i32* %6571, align 4, !dbg !811
  %6599 = zext i32 %6598 to i64, !dbg !812
  %6600 = load i64, i64* %6272, align 4, !dbg !813
  %6601 = add i64 %6600, %6599, !dbg !813
  store i64 %6601, i64* %6272, align 4, !dbg !813
  %6602 = load i32, i32* %6572, align 4, !dbg !814
  %6603 = zext i32 %6602 to i64, !dbg !815
  %6604 = call i32 @sqlite3VarintLen(i64 %6603), !dbg !816
  %6605 = load i32, i32* %6273, align 4, !dbg !817
  %6606 = add i32 %6605, %6604, !dbg !817
  store i32 %6606, i32* %6273, align 4, !dbg !817
  store i32 %6602, i32* %6508, align 4, !dbg !818
  br label %6607, !dbg !819

6607:                                             ; preds = %6546, %6549, %6552, %6558, %6561, %6541, %6538, %6597, %6563, %6514
  %6608 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 5, !dbg !821
  %6609 = load i32, i32* %6273, align 4, !dbg !822
  %6610 = zext i32 %6609 to i64, !dbg !823
  %6611 = icmp slt i32 %6609, 126, !dbg !824
  br i1 %6611, label %6612, label %6614, !dbg !825

6612:                                             ; preds = %6607
  %6613 = add i32 %6609, 1, !dbg !826
  store i32 %6613, i32* %6273, align 4, !dbg !826
  br label %6623, !dbg !827

6614:                                             ; preds = %6607
  %6615 = call i32 @sqlite3VarintLen(i64 %6610), !dbg !828
  %6616 = load i32, i32* %6273, align 4, !dbg !829
  %6617 = add i32 %6616, %6615, !dbg !829
  store i32 %6617, i32* %6273, align 4, !dbg !829
  %6618 = call i32 @sqlite3VarintLen(i64 %6610), !dbg !830
  %6619 = icmp slt i32 %6615, %6618, !dbg !831
  br i1 %6619, label %6620, label %6623, !dbg !832

6620:                                             ; preds = %6614
  %6621 = load i32, i32* %6273, align 4, !dbg !833
  %6622 = add i32 %6621, 1, !dbg !833
  store i32 %6622, i32* %6273, align 4, !dbg !833
  br label %6623, !dbg !834

6623:                                             ; preds = %6620, %6614, %6612
  %6624 = load i32, i32* %6273, align 4, !dbg !835
  %6625 = zext i32 %6624 to i64, !dbg !835
  %6626 = load i64, i64* %6272, align 4, !dbg !836
  %6627 = add i64 %6625, %6626, !dbg !836
  %6628 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 7, !dbg !837
  %6629 = load i32, i32* %6628, align 4, !dbg !838
  %6630 = zext i32 %6629 to i64, !dbg !839
  %6631 = load i64, i64* %6274, align 4, !dbg !840
  %6632 = add i64 %6627, %6631, !dbg !841
  %6633 = icmp sle i64 %6632, %6630, !dbg !842
  br i1 %6633, label %6634, label %6637, !dbg !843

6634:                                             ; preds = %6623
  %6635 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 6, !dbg !844
  %6636 = load i8*, i8** %6635, align 8, !dbg !845
  store i8* %6636, i8** %6608, align 8, !dbg !846
  br label %6640, !dbg !847

6637:                                             ; preds = %6623
  %6638 = trunc i64 %6627 to i32, !dbg !848
  %6639 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %6281, i32 %6638), !dbg !849
  br label %6640, !dbg !850

6640:                                             ; preds = %6637, %6634
  %6641 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 4, !dbg !851
  %6642 = trunc i64 %6627 to i32, !dbg !852
  store i32 %6642, i32* %6641, align 4, !dbg !853
  %6643 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 1, !dbg !854
  store i16 16, i16* %6643, align 2, !dbg !855
  %6644 = load i64, i64* %6274, align 4, !dbg !856
  %6645 = icmp ne i64 %6644, 0, !dbg !857
  br i1 %6645, label %6646, label %6652, !dbg !858

6646:                                             ; preds = %6640
  %6647 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6281, i32 0, i32 0, i32 0, !dbg !859
  %6648 = bitcast double* %6647 to i32*, !dbg !860
  %6649 = trunc i64 %6644 to i32, !dbg !861
  store i32 %6649, i32* %6648, align 4, !dbg !862
  %6650 = load i16, i16* %6643, align 2, !dbg !863
  %6651 = or i16 %6650, 16384, !dbg !864
  store i16 %6651, i16* %6643, align 2, !dbg !865
  br label %6652, !dbg !866

6652:                                             ; preds = %6646, %6640
  %6653 = alloca i8*, align 8, !dbg !867
  %6654 = load i8*, i8** %6608, align 8, !dbg !868
  store i8* %6654, i8** %6653, align 8, !dbg !869
  %6655 = load i32, i32* %6273, align 4, !dbg !870
  %6656 = zext i32 %6655 to i64, !dbg !871
  %6657 = getelementptr i8, i8* %6654, i32 %6655, !dbg !872
  store i8* %6657, i8** %6275, align 8, !dbg !873
  %6658 = call i32 @sqlite3PutVarint(i8* %6654, i64 %6656), !dbg !874
  %6659 = getelementptr i8, i8* %6654, i32 %6658, !dbg !875
  store i8* %6659, i8** %6653, align 8, !dbg !876
  %6660 = load i8*, i8** %6275, align 8, !dbg !877
  %6661 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6279, i32 0, i32 8, !dbg !878
  %6662 = load i32, i32* %6661, align 4, !dbg !879
  %6663 = zext i32 %6662 to i64, !dbg !880
  %6664 = call i32 @sqlite3PutVarint(i8* %6659, i64 %6663), !dbg !881
  %6665 = getelementptr i8, i8* %6659, i32 %6664, !dbg !882
  store i8* %6665, i8** %6653, align 8, !dbg !883
  %6666 = call i32 @sqlite3VdbeSerialPut(i8* %6660, %struct.sqlite3_value* %6279, i32 %6662), !dbg !884
  %6667 = getelementptr i8, i8* %6660, i32 %6666, !dbg !885
  %6668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6279, i32 1, !dbg !886
  %6669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6668, i32 0, i32 8, !dbg !878
  %6670 = load i32, i32* %6669, align 4, !dbg !879
  %6671 = zext i32 %6670 to i64, !dbg !880
  %6672 = call i32 @sqlite3PutVarint(i8* %6665, i64 %6671), !dbg !881
  %6673 = getelementptr i8, i8* %6665, i32 %6672, !dbg !882
  store i8* %6673, i8** %6653, align 8, !dbg !883
  %6674 = call i32 @sqlite3VdbeSerialPut(i8* %6667, %struct.sqlite3_value* %6668, i32 %6670), !dbg !884
  %6675 = getelementptr i8, i8* %6667, i32 %6674, !dbg !885
  %6676 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6668, i32 1, !dbg !886
  %6677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6676, i32 0, i32 8, !dbg !878
  %6678 = load i32, i32* %6677, align 4, !dbg !879
  %6679 = zext i32 %6678 to i64, !dbg !880
  %6680 = call i32 @sqlite3PutVarint(i8* %6673, i64 %6679), !dbg !881
  %6681 = getelementptr i8, i8* %6673, i32 %6680, !dbg !882
  store i8* %6681, i8** %6653, align 8, !dbg !883
  %6682 = call i32 @sqlite3VdbeSerialPut(i8* %6675, %struct.sqlite3_value* %6676, i32 %6678), !dbg !884
  call void @llvm.stackrestore(i8* %6271), !dbg !887
  br label %6683, !dbg !75

6683:                                             ; preds = %18, %6652
  %6684 = call i8* @llvm.stacksave(), !dbg !888
  %6685 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !891
  %6686 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6685, align 8, !dbg !892
  %6687 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !893
  %6688 = call i8* @llvm.stacksave(), !dbg !894
  %6689 = alloca i32, align 8, !dbg !895
  store i32 0, i32* %6689, align 4, !dbg !894
  %6690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6687, i32 0, i32 1, !dbg !894
  %6691 = load i16, i16* %6690, align 2, !dbg !894
  %6692 = and i16 %6691, 16384, !dbg !894
  %6693 = icmp ne i16 %6692, 0, !dbg !894
  br i1 %6693, label %6694, label %6696, !dbg !894

6694:                                             ; preds = %6683
  %6695 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %6687), !dbg !894
  store i32 %6695, i32* %6689, align 4, !dbg !894
  br label %6696, !dbg !895

6696:                                             ; preds = %6694, %6683
  call void @llvm.stackrestore(i8* %6688), !dbg !894
  %6697 = load i32, i32* %6689, align 4, !dbg !894
  %6698 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %6686, %struct.sqlite3_value* %6687), !dbg !896
  call void @llvm.stackrestore(i8* %6684), !dbg !897
  br label %6699, !dbg !75

6699:                                             ; preds = %18, %6696, %5482, %5448, %5066, %5032
  %6700 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 4, !dbg !898
  %6701 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6700, align 8, !dbg !901
  %6702 = ptrtoint %struct.VdbeCursor* %6701 to i64, !dbg !902
  %6703 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6701, i32 0, i32 12, i32 0, !dbg !903
  %6704 = load %struct.BtCursor*, %struct.BtCursor** %6703, align 8, !dbg !904
  %6705 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %6704, i32 0), !dbg !905
  %6706 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6701, i32 0, i32 2, !dbg !906
  %6707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6701, i32 0, i32 9, !dbg !907
  store i32 0, i32* %6707, align 4, !dbg !908
  %6708 = icmp eq i32 %6705, 0, !dbg !909
  br i1 %6708, label %6709, label %6710, !dbg !910

6709:                                             ; preds = %6699
  store i8 0, i8* %6706, align 1, !dbg !911
  br label %4678, !dbg !912

6710:                                             ; preds = %6699
  store i8 1, i8* %6706, align 1, !dbg !913
  br label %6711, !dbg !914

6711:                                             ; preds = %18, %6710, %4672
  %6712 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 9, i32 3, i32 -1, i8 3), !dbg !915
  %6713 = ptrtoint %struct.VdbeCursor* %6712 to i64, !dbg !918
  %6714 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6712, i32 0, i32 2, !dbg !919
  store i8 1, i8* %6714, align 1, !dbg !920
  %6715 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6712, i32 0, i32 10, !dbg !921
  store i32 43, i32* %6715, align 4, !dbg !922
  %6716 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6712, i32 0, i32 4, !dbg !923
  store i8 1, i8* %6716, align 1, !dbg !924
  %6717 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !925
  %6718 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6712, i32 0, i32 12, i32 0, !dbg !926
  store %struct.BtCursor* %6717, %struct.BtCursor** %6718, align 8, !dbg !927
  br label %6719, !dbg !75

6719:                                             ; preds = %18, %6711
  %6720 = call i8* @llvm.stacksave(), !dbg !232
  %6721 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %6722 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %6721, i32 8, !dbg !236
  %6723 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6722, align 8, !dbg !237
  %6724 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %6724, align 4, !dbg !239
  %6725 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6723, i32 0, i32 0, !dbg !240
  %6726 = load i8, i8* %6725, align 1, !dbg !241
  %6727 = icmp eq i8 %6726, 1, !dbg !242
  %6728 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %6728, align 4, !dbg !244
  br i1 %6727, label %6729, label %6731, !dbg !245

6729:                                             ; preds = %6719
  %6730 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %6723, i32* %6724), !dbg !246
  store i32 %6730, i32* %6728, align 4, !dbg !247
  br label %6737, !dbg !248

6731:                                             ; preds = %6719
  %6732 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6723, i32 0, i32 12, i32 0, !dbg !249
  %6733 = load %struct.BtCursor*, %struct.BtCursor** %6732, align 8, !dbg !250
  %6734 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %6733, i32* %6724), !dbg !251
  store i32 %6734, i32* %6728, align 4, !dbg !252
  %6735 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6723, i32 0, i32 3, !dbg !253
  store i8 0, i8* %6735, align 1, !dbg !254
  %6736 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6723, i32 0, i32 9, !dbg !255
  store i32 0, i32* %6736, align 4, !dbg !256
  br label %6737, !dbg !257

6737:                                             ; preds = %6731, %6729
  %6738 = load i32, i32* %6728, align 4, !dbg !258
  %6739 = load i32, i32* %6724, align 4, !dbg !259
  %6740 = trunc i32 %6739 to i8, !dbg !260
  %6741 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6723, i32 0, i32 2, !dbg !261
  store i8 %6740, i8* %6741, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %6720), !dbg !263
  %6742 = icmp ne i32 %6739, 0, !dbg !264
  br i1 %6742, label %8268, label %6743, !dbg !265

6743:                                             ; preds = %18, %8122, %6737
  %6744 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 43, !dbg !928
  %6745 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !931
  %6746 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %6745, i32 8, !dbg !932
  %6747 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6746, align 8, !dbg !933
  %6748 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %6747, %struct.sqlite3_value* %6744), !dbg !934
  %6749 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %6745, i32 9, !dbg !935
  %6750 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6749, align 8, !dbg !936
  %6751 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6750, i32 0, i32 9, !dbg !937
  store i32 0, i32* %6751, align 4, !dbg !938
  br label %6752, !dbg !75

6752:                                             ; preds = %18, %6743
  %6753 = call i8* @llvm.stacksave(), !dbg !266
  %6754 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %6755 = load i8, i8* %6754, align 1, !dbg !270
  %6756 = alloca i32, align 4, !dbg !271
  store i32 9, i32* %6756, align 4, !dbg !272
  %6757 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !273
  %6758 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %6759 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6757, align 8, !dbg !275
  store %struct.VdbeCursor* %6759, %struct.VdbeCursor** %6758, align 8, !dbg !276
  %6760 = alloca i8*, align 8, !dbg !277
  %6761 = alloca i32, align 4, !dbg !278
  %6762 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6758, i32* %6756), !dbg !279
  %6763 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6758, align 8, !dbg !280
  %6764 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 42, !dbg !281
  %6765 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 16, !dbg !282
  %6766 = load i16, i16* %6765, align 2, !dbg !283
  %6767 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 19, !dbg !284
  %6768 = load i32*, i32** %6767, align 8, !dbg !285
  %6769 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 0, !dbg !286
  %6770 = load i8, i8* %6769, align 1, !dbg !287
  %6771 = icmp ne i8 %6770, 3, !dbg !288
  %6772 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 2, !dbg !289
  %6773 = load i8, i8* %6772, align 1, !dbg !290
  %6774 = icmp ne i8 %6773, 0, !dbg !291
  %6775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 14, !dbg !292
  %6776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 21, !dbg !293
  %6777 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 22, !dbg !294
  %6778 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 20, !dbg !295
  %6779 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 17, !dbg !296
  %6780 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 9, !dbg !297
  %6781 = load i32, i32* %6780, align 4, !dbg !298
  %6782 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %6783 = load i32, i32* %6782, align 4, !dbg !300
  %6784 = icmp ne i32 %6781, %6783, !dbg !301
  br i1 %6784, label %6785, label %6827, !dbg !302

6785:                                             ; preds = %6752
  br i1 %6774, label %6807, label %6802, !dbg !303

6786:                                             ; preds = %6802, %6809
  %6787 = load i32, i32* %6782, align 4, !dbg !304
  store i32 %6787, i32* %6780, align 4, !dbg !305
  %6788 = load i8*, i8** %6778, align 8, !dbg !306
  %6789 = load i8, i8* %6788, align 1, !dbg !307
  %6790 = icmp sgt i8 %6789, -1, !dbg !310
  br i1 %6790, label %6791, label %6793, !dbg !311

6791:                                             ; preds = %6786
  %6792 = zext i8 %6789 to i32, !dbg !312
  store i32 %6792, i32* %6768, align 4, !dbg !313
  store i32 1, i32* %6775, align 4, !dbg !314
  br label %6796, !dbg !315

6793:                                             ; preds = %6786
  %6794 = call i8 @sqlite3GetVarint32(i8* %6788, i32* %6768), !dbg !316
  %6795 = zext i8 %6794 to i32, !dbg !317
  store i32 %6795, i32* %6775, align 4, !dbg !318
  br label %6796, !dbg !319

6796:                                             ; preds = %6793, %6791
  store i16 0, i16* %6779, align 2, !dbg !320
  %6797 = load i32, i32* %6777, align 4, !dbg !321
  %6798 = load i32, i32* %6768, align 4, !dbg !322
  %6799 = icmp ult i32 %6797, %6798, !dbg !323
  br i1 %6799, label %6801, label %6800, !dbg !324

6800:                                             ; preds = %6796
  store i8* %6788, i8** %6760, align 8, !dbg !325
  br label %6918, !dbg !326

6801:                                             ; preds = %6796
  store i8* null, i8** %6778, align 8, !dbg !327
  store i32 0, i32* %6777, align 4, !dbg !328
  br label %6827, !dbg !329

6802:                                             ; preds = %6785
  %6803 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 12, i32 0, !dbg !330
  %6804 = load %struct.BtCursor*, %struct.BtCursor** %6803, align 8, !dbg !331
  %6805 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6804), !dbg !332
  store i32 %6805, i32* %6776, align 4, !dbg !333
  %6806 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6804, i32* %6777), !dbg !334
  store i8* %6806, i8** %6778, align 8, !dbg !335
  br label %6786, !dbg !336

6807:                                             ; preds = %6785
  %6808 = icmp eq i8 %6770, 3, !dbg !337
  br i1 %6808, label %6809, label %6820, !dbg !338

6809:                                             ; preds = %6807
  %6810 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 10, !dbg !339
  %6811 = load i32, i32* %6810, align 4, !dbg !340
  %6812 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6811, !dbg !341
  %6813 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6812, i32 0, i32 1, !dbg !342
  %6814 = load i16, i16* %6813, align 2, !dbg !343
  %6815 = and i16 %6814, 16, !dbg !344
  %6816 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6812, i32 0, i32 4, !dbg !345
  %6817 = load i32, i32* %6816, align 4, !dbg !346
  store i32 %6817, i32* %6776, align 4, !dbg !347
  store i32 %6817, i32* %6777, align 4, !dbg !348
  %6818 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6812, i32 0, i32 5, !dbg !349
  %6819 = load i8*, i8** %6818, align 8, !dbg !350
  store i8* %6819, i8** %6778, align 8, !dbg !351
  br label %6786, !dbg !352

6820:                                             ; preds = %6807
  %6821 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 1, !dbg !353
  %6822 = load i16, i16* %6821, align 2, !dbg !353
  %6823 = and i16 %6822, 9216, !dbg !353
  %6824 = icmp ne i16 %6823, 0, !dbg !353
  br i1 %6824, label %6825, label %6826, !dbg !353

6825:                                             ; preds = %6820
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6764), !dbg !353
  br label %7006, !dbg !353

6826:                                             ; preds = %6820
  store i16 1, i16* %6821, align 2, !dbg !353
  br label %7006, !dbg !353

6827:                                             ; preds = %6801, %6752
  %6828 = load i16, i16* %6779, align 2, !dbg !354
  %6829 = icmp ule i16 %6828, 0, !dbg !355
  br i1 %6829, label %6910, label %6907, !dbg !356

6830:                                             ; preds = %6907, %6996
  %6831 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 1, !dbg !357
  %6832 = load i16, i16* %6831, align 2, !dbg !358
  %6833 = and i16 9216, %6832, !dbg !359
  %6834 = icmp eq i16 0, %6833, !dbg !360
  br i1 %6834, label %6835, label %6839, !dbg !361

6835:                                             ; preds = %6830
  %6836 = icmp ne i16 %6833, 0, !dbg !362
  br i1 %6836, label %6837, label %6838, !dbg !362

6837:                                             ; preds = %6835
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6764), !dbg !362
  br label %6839, !dbg !362

6838:                                             ; preds = %6835
  store i16 1, i16* %6831, align 2, !dbg !362
  br label %6839, !dbg !362

6839:                                             ; preds = %6837, %6838, %6830
  %6840 = load i32, i32* %6761, align 4, !dbg !363
  %6841 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 23, i32 0, !dbg !364
  %6842 = load i32, i32* %6841, align 4, !dbg !365
  %6843 = load i32, i32* %6777, align 4, !dbg !366
  %6844 = getelementptr i32, i32* %6768, i32 1, !dbg !367
  %6845 = load i32, i32* %6844, align 4, !dbg !368
  %6846 = icmp sge i32 %6843, %6845, !dbg !369
  br i1 %6846, label %6847, label %6886, !dbg !370

6847:                                             ; preds = %6839
  %6848 = load i8*, i8** %6778, align 8, !dbg !371
  %6849 = ptrtoint i8* %6848 to i64, !dbg !372
  %6850 = load i32, i32* %6768, align 4, !dbg !374
  %6851 = zext i32 %6850 to i64, !dbg !375
  %6852 = add i64 %6849, %6851, !dbg !376
  %6853 = inttoptr i64 %6852 to i8*, !dbg !377
  store i8* %6853, i8** %6760, align 8, !dbg !378
  %6854 = load i32, i32* %6761, align 4, !dbg !379
  %6855 = icmp ult i32 %6854, 12, !dbg !380
  br i1 %6855, label %6856, label %6858, !dbg !381

6856:                                             ; preds = %6847
  %6857 = call i32 @sqlite3VdbeSerialGet(i8* %6853, i32 %6854, %struct.sqlite3_value* %6764), !dbg !382
  br label %7006, !dbg !383

6858:                                             ; preds = %6847
  %6859 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %6859, align 2, !dbg !385
  %6860 = getelementptr i16, i16* %6859, i32 1, !dbg !386
  store i16 514, i16* %6860, align 2, !dbg !387
  %6861 = load i32, i32* %6761, align 4, !dbg !388
  %6862 = sub i32 %6861, 12, !dbg !389
  %6863 = lshr i32 %6862, 1, !dbg !390
  %6864 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 4, !dbg !391
  store i32 %6863, i32* %6864, align 4, !dbg !392
  %6865 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 2, !dbg !393
  store i8 %6755, i8* %6865, align 1, !dbg !394
  %6866 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 5, !dbg !395
  %6867 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 7, !dbg !396
  %6868 = load i32, i32* %6867, align 4, !dbg !397
  %6869 = add i32 %6863, 2, !dbg !398
  %6870 = icmp slt i32 %6868, %6869, !dbg !399
  br i1 %6870, label %6871, label %6873, !dbg !400

6871:                                             ; preds = %6858
  store i16 1, i16* %6831, align 2, !dbg !401
  %6872 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6764, i32 %6869, i32 0), !dbg !402
  br label %6876, !dbg !403

6873:                                             ; preds = %6858
  %6874 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 6, !dbg !404
  %6875 = load i8*, i8** %6874, align 8, !dbg !405
  store i8* %6875, i8** %6866, align 8, !dbg !406
  br label %6876, !dbg !407

6876:                                             ; preds = %6873, %6871
  %6877 = zext i32 %6863 to i64, !dbg !408
  %6878 = load i8*, i8** %6866, align 8, !dbg !409
  %6879 = load i8*, i8** %6760, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6878, i8* %6879, i64 %6877, i1 false), !dbg !411
  %6880 = getelementptr i8, i8* %6878, i32 %6863, !dbg !412
  store i8 0, i8* %6880, align 1, !dbg !413
  %6881 = add i32 %6863, 1, !dbg !414
  %6882 = getelementptr i8, i8* %6878, i32 %6881, !dbg !415
  store i8 0, i8* %6882, align 1, !dbg !416
  %6883 = and i32 %6861, 1, !dbg !417
  %6884 = getelementptr i16, i16* %6859, i32 %6883, !dbg !418
  %6885 = load i16, i16* %6884, align 2, !dbg !419
  store i16 %6885, i16* %6831, align 2, !dbg !420
  br label %7006, !dbg !421

6886:                                             ; preds = %6839
  %6887 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 2, !dbg !422
  store i8 %6755, i8* %6887, align 1, !dbg !423
  %6888 = load i32, i32* %6761, align 4, !dbg !424
  %6889 = and i32 %6888, 1, !dbg !425
  %6890 = icmp eq i32 %6889, 0, !dbg !426
  %6891 = icmp sge i32 %6888, 12, !dbg !427
  %6892 = and i1 %6891, %6890, !dbg !428
  %6893 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6888), !dbg !429
  %6894 = icmp eq i32 %6893, 0, !dbg !430
  br i1 %6894, label %6905, label %6895, !dbg !431

6895:                                             ; preds = %6886
  %6896 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 12, i32 0, !dbg !432
  %6897 = load %struct.BtCursor*, %struct.BtCursor** %6896, align 8, !dbg !433
  %6898 = load i32, i32* %6768, align 4, !dbg !435
  %6899 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6897, i32 %6898, i32 %6893, %struct.sqlite3_value* %6764), !dbg !436
  %6900 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 5, !dbg !437
  %6901 = load i8*, i8** %6900, align 8, !dbg !438
  %6902 = call i32 @sqlite3VdbeSerialGet(i8* %6901, i32 %6888, %struct.sqlite3_value* %6764), !dbg !439
  %6903 = load i16, i16* %6831, align 2, !dbg !440
  %6904 = and i16 %6903, -4097, !dbg !441
  store i16 %6904, i16* %6831, align 2, !dbg !442
  br label %7006, !dbg !443

6905:                                             ; preds = %6886
  %6906 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6888, %struct.sqlite3_value* %6764), !dbg !444
  br label %7006, !dbg !445

6907:                                             ; preds = %6827
  %6908 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 23, i32 0, !dbg !446
  %6909 = load i32, i32* %6908, align 4, !dbg !447
  store i32 %6909, i32* %6761, align 4, !dbg !448
  br label %6830, !dbg !449

6910:                                             ; preds = %6827
  %6911 = load i32, i32* %6775, align 4, !dbg !450
  %6912 = load i32, i32* %6768, align 4, !dbg !451
  %6913 = icmp ult i32 %6911, %6912, !dbg !452
  br i1 %6913, label %6914, label %6995, !dbg !453

6914:                                             ; preds = %6910
  %6915 = load i8*, i8** %6778, align 8, !dbg !454
  %6916 = icmp eq i8* %6915, null, !dbg !455
  br i1 %6916, label %6918, label %6917, !dbg !456

6917:                                             ; preds = %6914
  store i8* %6915, i8** %6760, align 8, !dbg !457
  br label %6918, !dbg !458

6918:                                             ; preds = %6917, %6914, %6800
  %6919 = alloca i32, align 4, !dbg !459
  %6920 = load i16, i16* %6779, align 2, !dbg !460
  %6921 = zext i16 %6920 to i32, !dbg !461
  store i32 %6921, i32* %6919, align 4, !dbg !462
  %6922 = alloca i64, align 8, !dbg !463
  %6923 = getelementptr i32, i32* %6768, i32 %6921, !dbg !464
  %6924 = load i32, i32* %6923, align 4, !dbg !465
  %6925 = zext i32 %6924 to i64, !dbg !466
  store i64 %6925, i64* %6922, align 4, !dbg !467
  %6926 = load i8*, i8** %6760, align 8, !dbg !468
  %6927 = load i32, i32* %6775, align 4, !dbg !469
  %6928 = alloca i8*, align 8, !dbg !470
  %6929 = getelementptr i8, i8* %6926, i32 %6927, !dbg !471
  store i8* %6929, i8** %6928, align 8, !dbg !472
  %6930 = load i32, i32* %6768, align 4, !dbg !473
  %6931 = getelementptr i8, i8* %6926, i32 %6930, !dbg !474
  br label %6932, !dbg !475

6932:                                             ; preds = %6939, %6918
  %6933 = load i32, i32* %6919, align 4, !dbg !476
  %6934 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6763, i32 0, i32 23, i32 %6933, !dbg !477
  %6935 = load i8*, i8** %6928, align 8, !dbg !478
  %6936 = load i8, i8* %6935, align 1, !dbg !479
  %6937 = zext i8 %6936 to i32, !dbg !480
  store i32 %6937, i32* %6761, align 4, !dbg !481
  store i32 %6937, i32* %6934, align 4, !dbg !482
  %6938 = icmp sgt i8 %6936, -1, !dbg !483
  br i1 %6938, label %6962, label %6953, !dbg !484

6939:                                             ; preds = %6953, %6962
  %6940 = load i32, i32* %6919, align 4, !dbg !485
  %6941 = add i32 %6940, 1, !dbg !486
  store i32 %6941, i32* %6919, align 4, !dbg !487
  %6942 = load i64, i64* %6922, align 4, !dbg !488
  %6943 = and i64 4294967295, %6942, !dbg !489
  %6944 = trunc i64 %6943 to i32, !dbg !490
  %6945 = getelementptr i32, i32* %6768, i32 %6941, !dbg !491
  store i32 %6944, i32* %6945, align 4, !dbg !492
  %6946 = load i32, i32* %6919, align 4, !dbg !493
  %6947 = icmp sle i32 %6946, 0, !dbg !494
  %6948 = load i8*, i8** %6928, align 8, !dbg !495
  %6949 = ptrtoint i8* %6948 to i64, !dbg !496
  %6950 = ptrtoint i8* %6931 to i64, !dbg !497
  %6951 = icmp ult i64 %6949, %6950, !dbg !498
  %6952 = and i1 %6947, %6951, !dbg !499
  br i1 %6952, label %6932, label %6971, !dbg !500

6953:                                             ; preds = %6932
  %6954 = load i8*, i8** %6928, align 8, !dbg !501
  %6955 = call i8 @sqlite3GetVarint32(i8* %6954, i32* %6761), !dbg !502
  %6956 = getelementptr i8, i8* %6954, i8 %6955, !dbg !503
  store i8* %6956, i8** %6928, align 8, !dbg !504
  %6957 = load i32, i32* %6761, align 4, !dbg !505
  store i32 %6957, i32* %6934, align 4, !dbg !506
  %6958 = load i64, i64* %6922, align 4, !dbg !507
  %6959 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6957), !dbg !508
  %6960 = zext i32 %6959 to i64, !dbg !509
  %6961 = add i64 %6958, %6960, !dbg !510
  store i64 %6961, i64* %6922, align 4, !dbg !511
  br label %6939, !dbg !512

6962:                                             ; preds = %6932
  %6963 = getelementptr i8, i8* %6935, i32 1, !dbg !513
  store i8* %6963, i8** %6928, align 8, !dbg !514
  %6964 = load i32, i32* %6761, align 4, !dbg !515
  %6965 = trunc i32 %6964 to i8, !dbg !516
  %6966 = getelementptr i8, i8* %4, i8 %6965, !dbg !517
  %6967 = load i8, i8* %6966, align 1, !dbg !518
  %6968 = zext i8 %6967 to i64, !dbg !519
  %6969 = load i64, i64* %6922, align 4, !dbg !520
  %6970 = add i64 %6969, %6968, !dbg !521
  store i64 %6970, i64* %6922, align 4, !dbg !522
  br label %6939, !dbg !523

6971:                                             ; preds = %6939
  %6972 = load i64, i64* %6922, align 4, !dbg !524
  %6973 = load i32, i32* %6776, align 4, !dbg !525
  %6974 = zext i32 %6973 to i64, !dbg !526
  %6975 = icmp uge i64 %6949, %6950, !dbg !527
  %6976 = icmp ugt i64 %6949, %6950, !dbg !528
  %6977 = icmp ne i64 %6972, %6974, !dbg !529
  %6978 = icmp ugt i64 %6972, %6974, !dbg !530
  %6979 = or i1 %6976, %6977, !dbg !531
  %6980 = and i1 %6975, %6979, !dbg !532
  %6981 = or i1 %6980, %6978, !dbg !533
  br i1 %6981, label %6982, label %6986, !dbg !534

6982:                                             ; preds = %6971
  %6983 = load i32, i32* %6768, align 4, !dbg !535
  %6984 = icmp eq i32 %6983, 0, !dbg !536
  br i1 %6984, label %6985, label %6986, !dbg !537

6985:                                             ; preds = %6982
  store i32 0, i32* %6919, align 4, !dbg !538
  store i8* %6931, i8** %6928, align 8, !dbg !539
  br label %6986, !dbg !540

6986:                                             ; preds = %6985, %6982, %6971
  %6987 = load i32, i32* %6919, align 4, !dbg !541
  %6988 = trunc i32 %6987 to i16, !dbg !542
  store i16 %6988, i16* %6779, align 2, !dbg !543
  %6989 = load i8*, i8** %6928, align 8, !dbg !544
  %6990 = ptrtoint i8* %6989 to i64, !dbg !545
  %6991 = load i8*, i8** %6760, align 8, !dbg !546
  %6992 = ptrtoint i8* %6991 to i64, !dbg !547
  %6993 = sub i64 %6990, %6992, !dbg !548
  %6994 = trunc i64 %6993 to i32, !dbg !549
  store i32 %6994, i32* %6775, align 4, !dbg !550
  br label %6996, !dbg !551

6995:                                             ; preds = %6910
  store i32 0, i32* %6761, align 4, !dbg !552
  br label %6996, !dbg !553

6996:                                             ; preds = %6986, %6995
  %6997 = load i16, i16* %6779, align 2, !dbg !554
  %6998 = icmp sle i16 %6997, 0, !dbg !555
  br i1 %6998, label %6999, label %6830, !dbg !556

6999:                                             ; preds = %6996
  %7000 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6764, i32 0, i32 1, !dbg !557
  %7001 = load i16, i16* %7000, align 2, !dbg !557
  %7002 = and i16 %7001, 9216, !dbg !557
  %7003 = icmp ne i16 %7002, 0, !dbg !557
  br i1 %7003, label %7004, label %7005, !dbg !557

7004:                                             ; preds = %6999
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6764), !dbg !557
  br label %7006, !dbg !557

7005:                                             ; preds = %6999
  store i16 1, i16* %7000, align 2, !dbg !557
  br label %7006, !dbg !557

7006:                                             ; preds = %7004, %7005, %6876, %6856, %6895, %6905, %6825, %6826
  call void @llvm.stackrestore(i8* %6753), !dbg !558
  br label %7007, !dbg !75

7007:                                             ; preds = %18, %7006
  %7008 = call i8* @llvm.stacksave(), !dbg !939
  %7009 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 104, !dbg !942
  %7010 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7009, i32 0, i32 6, !dbg !943
  %7011 = bitcast %union.p4union* %7010 to %struct.KeyInfo**, !dbg !944
  %7012 = load %struct.KeyInfo*, %struct.KeyInfo** %7011, align 8, !dbg !945
  %7013 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %7012, i32 0, i32 6, i32 0, !dbg !946
  %7014 = alloca i32*, align 8, !dbg !947
  store i32* null, i32** %7014, align 8, !dbg !948
  %7015 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %7012, i32 0, i32 5, !dbg !949
  %7016 = load i8*, i8** %7015, align 8, !dbg !950
  %7017 = load %struct.CollSeq*, %struct.CollSeq** %7013, align 8, !dbg !951
  %7018 = load i8, i8* %7016, align 1, !dbg !952
  %7019 = and i8 %7018, 1, !dbg !953
  %7020 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 41, !dbg !954
  %7021 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 42, !dbg !955
  %7022 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %7020, %struct.sqlite3_value* %7021, %struct.CollSeq* %7017), !dbg !956
  store i32 %7022, i32* %2, align 4, !dbg !957
  %7023 = icmp ne i32 %7022, 0, !dbg !958
  br i1 %7023, label %7024, label %7044, !dbg !959

7024:                                             ; preds = %7007
  %7025 = and i8 %7018, 2, !dbg !960
  %7026 = icmp ne i8 %7025, 0, !dbg !961
  br i1 %7026, label %7027, label %7039, !dbg !962

7027:                                             ; preds = %7024
  %7028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 41, i32 1, !dbg !963
  %7029 = load i16, i16* %7028, align 2, !dbg !964
  %7030 = and i16 %7029, 1, !dbg !965
  %7031 = icmp ne i16 %7030, 0, !dbg !966
  %7032 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 42, i32 1, !dbg !967
  %7033 = load i16, i16* %7032, align 2, !dbg !968
  %7034 = and i16 %7033, 1, !dbg !969
  %7035 = icmp ne i16 %7034, 0, !dbg !970
  %7036 = or i1 %7031, %7035, !dbg !971
  br i1 %7036, label %7037, label %7039, !dbg !972

7037:                                             ; preds = %7027
  %7038 = sub i32 0, %7022, !dbg !973
  store i32 %7038, i32* %2, align 4, !dbg !974
  br label %7039, !dbg !975

7039:                                             ; preds = %7027, %7037, %7024
  %7040 = icmp ne i8 %7019, 0, !dbg !976
  br i1 %7040, label %7041, label %7044, !dbg !977

7041:                                             ; preds = %7039
  %7042 = load i32, i32* %2, align 4, !dbg !978
  %7043 = sub i32 0, %7042, !dbg !979
  store i32 %7043, i32* %2, align 4, !dbg !980
  br label %7044, !dbg !981

7044:                                             ; preds = %7041, %7039, %7007
  call void @llvm.stackrestore(i8* %7008), !dbg !982
  br label %7045, !dbg !75

7045:                                             ; preds = %18, %7044
  %7046 = load i32, i32* %2, align 4, !dbg !983
  %7047 = icmp slt i32 %7046, 0, !dbg !986
  %7048 = icmp sgt i32 %7046, 0, !dbg !987
  %or.cond2 = or i1 %7047, %7048, !dbg !988
  br i1 %or.cond2, label %7049, label %7068, !dbg !988

7049:                                             ; preds = %18, %7045
  %7050 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 42, !dbg !989
  %7051 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 41, !dbg !992
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %7051, %struct.sqlite3_value* %7050), !dbg !993
  br label %7052, !dbg !75

7052:                                             ; preds = %18, %7049
  %7053 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !199
  %7054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7053, i32 0, i32 1, !dbg !202
  store i16 4, i16* %7054, align 2, !dbg !203
  %7055 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7053, i32 0, i32 0, i32 0, !dbg !204
  %7056 = bitcast double* %7055 to i64*, !dbg !205
  store i64 107, i64* %7056, align 4, !dbg !206
  br label %8154, !dbg !207

7057:                                             ; preds = %18
  %7058 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 38, !dbg !994
  %7059 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7058, i32 0, i32 0, i32 0, !dbg !997
  %7060 = bitcast double* %7059 to i64*, !dbg !998
  %7061 = load i64, i64* %7060, align 4, !dbg !999
  %7062 = icmp sgt i64 %7061, 0, !dbg !1000
  br i1 %7062, label %7063, label %.critedge3, !dbg !1001

7063:                                             ; preds = %7057
  br label %8268, !dbg !1002

.critedge3:                                       ; preds = %7057, %18
  %7064 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 40, !dbg !199
  %7065 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7064, i32 0, i32 1, !dbg !202
  store i16 4, i16* %7065, align 2, !dbg !203
  %7066 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7064, i32 0, i32 0, i32 0, !dbg !204
  %7067 = bitcast double* %7066 to i64*, !dbg !205
  store i64 109, i64* %7067, align 4, !dbg !206
  br label %8198, !dbg !207

7068:                                             ; preds = %7045, %18
  %7069 = call i8* @llvm.stacksave(), !dbg !266
  %7070 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %7071 = load i8, i8* %7070, align 1, !dbg !270
  %7072 = alloca i32, align 4, !dbg !271
  store i32 9, i32* %7072, align 4, !dbg !272
  %7073 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !273
  %7074 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %7075 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7073, align 8, !dbg !275
  store %struct.VdbeCursor* %7075, %struct.VdbeCursor** %7074, align 8, !dbg !276
  %7076 = alloca i8*, align 8, !dbg !277
  %7077 = alloca i32, align 4, !dbg !278
  %7078 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7074, i32* %7072), !dbg !279
  %7079 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7074, align 8, !dbg !280
  %7080 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 53, !dbg !281
  %7081 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 16, !dbg !282
  %7082 = load i16, i16* %7081, align 2, !dbg !283
  %7083 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 19, !dbg !284
  %7084 = load i32*, i32** %7083, align 8, !dbg !285
  %7085 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 0, !dbg !286
  %7086 = load i8, i8* %7085, align 1, !dbg !287
  %7087 = icmp ne i8 %7086, 3, !dbg !288
  %7088 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 2, !dbg !289
  %7089 = load i8, i8* %7088, align 1, !dbg !290
  %7090 = icmp ne i8 %7089, 0, !dbg !291
  %7091 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 14, !dbg !292
  %7092 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 21, !dbg !293
  %7093 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 22, !dbg !294
  %7094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 20, !dbg !295
  %7095 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 17, !dbg !296
  %7096 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 9, !dbg !297
  %7097 = load i32, i32* %7096, align 4, !dbg !298
  %7098 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %7099 = load i32, i32* %7098, align 4, !dbg !300
  %7100 = icmp ne i32 %7097, %7099, !dbg !301
  br i1 %7100, label %7101, label %7143, !dbg !302

7101:                                             ; preds = %7068
  br i1 %7090, label %7123, label %7118, !dbg !303

7102:                                             ; preds = %7118, %7125
  %7103 = load i32, i32* %7098, align 4, !dbg !304
  store i32 %7103, i32* %7096, align 4, !dbg !305
  %7104 = load i8*, i8** %7094, align 8, !dbg !306
  %7105 = load i8, i8* %7104, align 1, !dbg !307
  %7106 = icmp sgt i8 %7105, -1, !dbg !310
  br i1 %7106, label %7107, label %7109, !dbg !311

7107:                                             ; preds = %7102
  %7108 = zext i8 %7105 to i32, !dbg !312
  store i32 %7108, i32* %7084, align 4, !dbg !313
  store i32 1, i32* %7091, align 4, !dbg !314
  br label %7112, !dbg !315

7109:                                             ; preds = %7102
  %7110 = call i8 @sqlite3GetVarint32(i8* %7104, i32* %7084), !dbg !316
  %7111 = zext i8 %7110 to i32, !dbg !317
  store i32 %7111, i32* %7091, align 4, !dbg !318
  br label %7112, !dbg !319

7112:                                             ; preds = %7109, %7107
  store i16 0, i16* %7095, align 2, !dbg !320
  %7113 = load i32, i32* %7093, align 4, !dbg !321
  %7114 = load i32, i32* %7084, align 4, !dbg !322
  %7115 = icmp ult i32 %7113, %7114, !dbg !323
  br i1 %7115, label %7117, label %7116, !dbg !324

7116:                                             ; preds = %7112
  store i8* %7104, i8** %7076, align 8, !dbg !325
  br label %7236, !dbg !326

7117:                                             ; preds = %7112
  store i8* null, i8** %7094, align 8, !dbg !327
  store i32 0, i32* %7093, align 4, !dbg !328
  br label %7143, !dbg !329

7118:                                             ; preds = %7101
  %7119 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 12, i32 0, !dbg !330
  %7120 = load %struct.BtCursor*, %struct.BtCursor** %7119, align 8, !dbg !331
  %7121 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7120), !dbg !332
  store i32 %7121, i32* %7092, align 4, !dbg !333
  %7122 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7120, i32* %7093), !dbg !334
  store i8* %7122, i8** %7094, align 8, !dbg !335
  br label %7102, !dbg !336

7123:                                             ; preds = %7101
  %7124 = icmp eq i8 %7086, 3, !dbg !337
  br i1 %7124, label %7125, label %7136, !dbg !338

7125:                                             ; preds = %7123
  %7126 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 10, !dbg !339
  %7127 = load i32, i32* %7126, align 4, !dbg !340
  %7128 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7127, !dbg !341
  %7129 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7128, i32 0, i32 1, !dbg !342
  %7130 = load i16, i16* %7129, align 2, !dbg !343
  %7131 = and i16 %7130, 16, !dbg !344
  %7132 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7128, i32 0, i32 4, !dbg !345
  %7133 = load i32, i32* %7132, align 4, !dbg !346
  store i32 %7133, i32* %7092, align 4, !dbg !347
  store i32 %7133, i32* %7093, align 4, !dbg !348
  %7134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7128, i32 0, i32 5, !dbg !349
  %7135 = load i8*, i8** %7134, align 8, !dbg !350
  store i8* %7135, i8** %7094, align 8, !dbg !351
  br label %7102, !dbg !352

7136:                                             ; preds = %7123
  %7137 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 1, !dbg !353
  %7138 = load i16, i16* %7137, align 2, !dbg !353
  %7139 = and i16 %7138, 9216, !dbg !353
  %7140 = icmp ne i16 %7139, 0, !dbg !353
  br i1 %7140, label %7141, label %7142, !dbg !353

7141:                                             ; preds = %7136
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7080), !dbg !353
  br label %7324, !dbg !353

7142:                                             ; preds = %7136
  store i16 1, i16* %7137, align 2, !dbg !353
  br label %7324, !dbg !353

7143:                                             ; preds = %7117, %7068
  %7144 = load i16, i16* %7095, align 2, !dbg !354
  %7145 = icmp ule i16 %7144, 1, !dbg !355
  br i1 %7145, label %7228, label %7225, !dbg !356

7146:                                             ; preds = %7225, %7314
  %7147 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 1, !dbg !357
  %7148 = load i16, i16* %7147, align 2, !dbg !358
  %7149 = and i16 9216, %7148, !dbg !359
  %7150 = icmp eq i16 0, %7149, !dbg !360
  br i1 %7150, label %7151, label %7155, !dbg !361

7151:                                             ; preds = %7146
  %7152 = icmp ne i16 %7149, 0, !dbg !362
  br i1 %7152, label %7153, label %7154, !dbg !362

7153:                                             ; preds = %7151
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7080), !dbg !362
  br label %7155, !dbg !362

7154:                                             ; preds = %7151
  store i16 1, i16* %7147, align 2, !dbg !362
  br label %7155, !dbg !362

7155:                                             ; preds = %7153, %7154, %7146
  %7156 = load i32, i32* %7077, align 4, !dbg !363
  %7157 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 23, i32 1, !dbg !364
  %7158 = load i32, i32* %7157, align 4, !dbg !365
  %7159 = load i32, i32* %7093, align 4, !dbg !366
  %7160 = getelementptr i32, i32* %7084, i32 2, !dbg !367
  %7161 = load i32, i32* %7160, align 4, !dbg !368
  %7162 = icmp sge i32 %7159, %7161, !dbg !369
  br i1 %7162, label %7163, label %7203, !dbg !370

7163:                                             ; preds = %7155
  %7164 = load i8*, i8** %7094, align 8, !dbg !371
  %7165 = ptrtoint i8* %7164 to i64, !dbg !372
  %7166 = getelementptr i32, i32* %7084, i32 1, !dbg !373
  %7167 = load i32, i32* %7166, align 4, !dbg !374
  %7168 = zext i32 %7167 to i64, !dbg !375
  %7169 = add i64 %7165, %7168, !dbg !376
  %7170 = inttoptr i64 %7169 to i8*, !dbg !377
  store i8* %7170, i8** %7076, align 8, !dbg !378
  %7171 = load i32, i32* %7077, align 4, !dbg !379
  %7172 = icmp ult i32 %7171, 12, !dbg !380
  br i1 %7172, label %7173, label %7175, !dbg !381

7173:                                             ; preds = %7163
  %7174 = call i32 @sqlite3VdbeSerialGet(i8* %7170, i32 %7171, %struct.sqlite3_value* %7080), !dbg !382
  br label %7324, !dbg !383

7175:                                             ; preds = %7163
  %7176 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %7176, align 2, !dbg !385
  %7177 = getelementptr i16, i16* %7176, i32 1, !dbg !386
  store i16 514, i16* %7177, align 2, !dbg !387
  %7178 = load i32, i32* %7077, align 4, !dbg !388
  %7179 = sub i32 %7178, 12, !dbg !389
  %7180 = lshr i32 %7179, 1, !dbg !390
  %7181 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 4, !dbg !391
  store i32 %7180, i32* %7181, align 4, !dbg !392
  %7182 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 2, !dbg !393
  store i8 %7071, i8* %7182, align 1, !dbg !394
  %7183 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 5, !dbg !395
  %7184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 7, !dbg !396
  %7185 = load i32, i32* %7184, align 4, !dbg !397
  %7186 = add i32 %7180, 2, !dbg !398
  %7187 = icmp slt i32 %7185, %7186, !dbg !399
  br i1 %7187, label %7188, label %7190, !dbg !400

7188:                                             ; preds = %7175
  store i16 1, i16* %7147, align 2, !dbg !401
  %7189 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7080, i32 %7186, i32 0), !dbg !402
  br label %7193, !dbg !403

7190:                                             ; preds = %7175
  %7191 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 6, !dbg !404
  %7192 = load i8*, i8** %7191, align 8, !dbg !405
  store i8* %7192, i8** %7183, align 8, !dbg !406
  br label %7193, !dbg !407

7193:                                             ; preds = %7190, %7188
  %7194 = zext i32 %7180 to i64, !dbg !408
  %7195 = load i8*, i8** %7183, align 8, !dbg !409
  %7196 = load i8*, i8** %7076, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7195, i8* %7196, i64 %7194, i1 false), !dbg !411
  %7197 = getelementptr i8, i8* %7195, i32 %7180, !dbg !412
  store i8 0, i8* %7197, align 1, !dbg !413
  %7198 = add i32 %7180, 1, !dbg !414
  %7199 = getelementptr i8, i8* %7195, i32 %7198, !dbg !415
  store i8 0, i8* %7199, align 1, !dbg !416
  %7200 = and i32 %7178, 1, !dbg !417
  %7201 = getelementptr i16, i16* %7176, i32 %7200, !dbg !418
  %7202 = load i16, i16* %7201, align 2, !dbg !419
  store i16 %7202, i16* %7147, align 2, !dbg !420
  br label %7324, !dbg !421

7203:                                             ; preds = %7155
  %7204 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 2, !dbg !422
  store i8 %7071, i8* %7204, align 1, !dbg !423
  %7205 = load i32, i32* %7077, align 4, !dbg !424
  %7206 = and i32 %7205, 1, !dbg !425
  %7207 = icmp eq i32 %7206, 0, !dbg !426
  %7208 = icmp sge i32 %7205, 12, !dbg !427
  %7209 = and i1 %7208, %7207, !dbg !428
  %7210 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7205), !dbg !429
  %7211 = icmp eq i32 %7210, 0, !dbg !430
  br i1 %7211, label %7223, label %7212, !dbg !431

7212:                                             ; preds = %7203
  %7213 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 12, i32 0, !dbg !432
  %7214 = load %struct.BtCursor*, %struct.BtCursor** %7213, align 8, !dbg !433
  %7215 = getelementptr i32, i32* %7084, i32 1, !dbg !434
  %7216 = load i32, i32* %7215, align 4, !dbg !435
  %7217 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7214, i32 %7216, i32 %7210, %struct.sqlite3_value* %7080), !dbg !436
  %7218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 5, !dbg !437
  %7219 = load i8*, i8** %7218, align 8, !dbg !438
  %7220 = call i32 @sqlite3VdbeSerialGet(i8* %7219, i32 %7205, %struct.sqlite3_value* %7080), !dbg !439
  %7221 = load i16, i16* %7147, align 2, !dbg !440
  %7222 = and i16 %7221, -4097, !dbg !441
  store i16 %7222, i16* %7147, align 2, !dbg !442
  br label %7324, !dbg !443

7223:                                             ; preds = %7203
  %7224 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7205, %struct.sqlite3_value* %7080), !dbg !444
  br label %7324, !dbg !445

7225:                                             ; preds = %7143
  %7226 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 23, i32 1, !dbg !446
  %7227 = load i32, i32* %7226, align 4, !dbg !447
  store i32 %7227, i32* %7077, align 4, !dbg !448
  br label %7146, !dbg !449

7228:                                             ; preds = %7143
  %7229 = load i32, i32* %7091, align 4, !dbg !450
  %7230 = load i32, i32* %7084, align 4, !dbg !451
  %7231 = icmp ult i32 %7229, %7230, !dbg !452
  br i1 %7231, label %7232, label %7313, !dbg !453

7232:                                             ; preds = %7228
  %7233 = load i8*, i8** %7094, align 8, !dbg !454
  %7234 = icmp eq i8* %7233, null, !dbg !455
  br i1 %7234, label %7236, label %7235, !dbg !456

7235:                                             ; preds = %7232
  store i8* %7233, i8** %7076, align 8, !dbg !457
  br label %7236, !dbg !458

7236:                                             ; preds = %7235, %7232, %7116
  %7237 = alloca i32, align 4, !dbg !459
  %7238 = load i16, i16* %7095, align 2, !dbg !460
  %7239 = zext i16 %7238 to i32, !dbg !461
  store i32 %7239, i32* %7237, align 4, !dbg !462
  %7240 = alloca i64, align 8, !dbg !463
  %7241 = getelementptr i32, i32* %7084, i32 %7239, !dbg !464
  %7242 = load i32, i32* %7241, align 4, !dbg !465
  %7243 = zext i32 %7242 to i64, !dbg !466
  store i64 %7243, i64* %7240, align 4, !dbg !467
  %7244 = load i8*, i8** %7076, align 8, !dbg !468
  %7245 = load i32, i32* %7091, align 4, !dbg !469
  %7246 = alloca i8*, align 8, !dbg !470
  %7247 = getelementptr i8, i8* %7244, i32 %7245, !dbg !471
  store i8* %7247, i8** %7246, align 8, !dbg !472
  %7248 = load i32, i32* %7084, align 4, !dbg !473
  %7249 = getelementptr i8, i8* %7244, i32 %7248, !dbg !474
  br label %7250, !dbg !475

7250:                                             ; preds = %7257, %7236
  %7251 = load i32, i32* %7237, align 4, !dbg !476
  %7252 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7079, i32 0, i32 23, i32 %7251, !dbg !477
  %7253 = load i8*, i8** %7246, align 8, !dbg !478
  %7254 = load i8, i8* %7253, align 1, !dbg !479
  %7255 = zext i8 %7254 to i32, !dbg !480
  store i32 %7255, i32* %7077, align 4, !dbg !481
  store i32 %7255, i32* %7252, align 4, !dbg !482
  %7256 = icmp sgt i8 %7254, -1, !dbg !483
  br i1 %7256, label %7280, label %7271, !dbg !484

7257:                                             ; preds = %7271, %7280
  %7258 = load i32, i32* %7237, align 4, !dbg !485
  %7259 = add i32 %7258, 1, !dbg !486
  store i32 %7259, i32* %7237, align 4, !dbg !487
  %7260 = load i64, i64* %7240, align 4, !dbg !488
  %7261 = and i64 4294967295, %7260, !dbg !489
  %7262 = trunc i64 %7261 to i32, !dbg !490
  %7263 = getelementptr i32, i32* %7084, i32 %7259, !dbg !491
  store i32 %7262, i32* %7263, align 4, !dbg !492
  %7264 = load i32, i32* %7237, align 4, !dbg !493
  %7265 = icmp sle i32 %7264, 1, !dbg !494
  %7266 = load i8*, i8** %7246, align 8, !dbg !495
  %7267 = ptrtoint i8* %7266 to i64, !dbg !496
  %7268 = ptrtoint i8* %7249 to i64, !dbg !497
  %7269 = icmp ult i64 %7267, %7268, !dbg !498
  %7270 = and i1 %7265, %7269, !dbg !499
  br i1 %7270, label %7250, label %7289, !dbg !500

7271:                                             ; preds = %7250
  %7272 = load i8*, i8** %7246, align 8, !dbg !501
  %7273 = call i8 @sqlite3GetVarint32(i8* %7272, i32* %7077), !dbg !502
  %7274 = getelementptr i8, i8* %7272, i8 %7273, !dbg !503
  store i8* %7274, i8** %7246, align 8, !dbg !504
  %7275 = load i32, i32* %7077, align 4, !dbg !505
  store i32 %7275, i32* %7252, align 4, !dbg !506
  %7276 = load i64, i64* %7240, align 4, !dbg !507
  %7277 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7275), !dbg !508
  %7278 = zext i32 %7277 to i64, !dbg !509
  %7279 = add i64 %7276, %7278, !dbg !510
  store i64 %7279, i64* %7240, align 4, !dbg !511
  br label %7257, !dbg !512

7280:                                             ; preds = %7250
  %7281 = getelementptr i8, i8* %7253, i32 1, !dbg !513
  store i8* %7281, i8** %7246, align 8, !dbg !514
  %7282 = load i32, i32* %7077, align 4, !dbg !515
  %7283 = trunc i32 %7282 to i8, !dbg !516
  %7284 = getelementptr i8, i8* %4, i8 %7283, !dbg !517
  %7285 = load i8, i8* %7284, align 1, !dbg !518
  %7286 = zext i8 %7285 to i64, !dbg !519
  %7287 = load i64, i64* %7240, align 4, !dbg !520
  %7288 = add i64 %7287, %7286, !dbg !521
  store i64 %7288, i64* %7240, align 4, !dbg !522
  br label %7257, !dbg !523

7289:                                             ; preds = %7257
  %7290 = load i64, i64* %7240, align 4, !dbg !524
  %7291 = load i32, i32* %7092, align 4, !dbg !525
  %7292 = zext i32 %7291 to i64, !dbg !526
  %7293 = icmp uge i64 %7267, %7268, !dbg !527
  %7294 = icmp ugt i64 %7267, %7268, !dbg !528
  %7295 = icmp ne i64 %7290, %7292, !dbg !529
  %7296 = icmp ugt i64 %7290, %7292, !dbg !530
  %7297 = or i1 %7294, %7295, !dbg !531
  %7298 = and i1 %7293, %7297, !dbg !532
  %7299 = or i1 %7298, %7296, !dbg !533
  br i1 %7299, label %7300, label %7304, !dbg !534

7300:                                             ; preds = %7289
  %7301 = load i32, i32* %7084, align 4, !dbg !535
  %7302 = icmp eq i32 %7301, 0, !dbg !536
  br i1 %7302, label %7303, label %7304, !dbg !537

7303:                                             ; preds = %7300
  store i32 0, i32* %7237, align 4, !dbg !538
  store i8* %7249, i8** %7246, align 8, !dbg !539
  br label %7304, !dbg !540

7304:                                             ; preds = %7303, %7300, %7289
  %7305 = load i32, i32* %7237, align 4, !dbg !541
  %7306 = trunc i32 %7305 to i16, !dbg !542
  store i16 %7306, i16* %7095, align 2, !dbg !543
  %7307 = load i8*, i8** %7246, align 8, !dbg !544
  %7308 = ptrtoint i8* %7307 to i64, !dbg !545
  %7309 = load i8*, i8** %7076, align 8, !dbg !546
  %7310 = ptrtoint i8* %7309 to i64, !dbg !547
  %7311 = sub i64 %7308, %7310, !dbg !548
  %7312 = trunc i64 %7311 to i32, !dbg !549
  store i32 %7312, i32* %7091, align 4, !dbg !550
  br label %7314, !dbg !551

7313:                                             ; preds = %7228
  store i32 0, i32* %7077, align 4, !dbg !552
  br label %7314, !dbg !553

7314:                                             ; preds = %7304, %7313
  %7315 = load i16, i16* %7095, align 2, !dbg !554
  %7316 = icmp sle i16 %7315, 1, !dbg !555
  br i1 %7316, label %7317, label %7146, !dbg !556

7317:                                             ; preds = %7314
  %7318 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7080, i32 0, i32 1, !dbg !557
  %7319 = load i16, i16* %7318, align 2, !dbg !557
  %7320 = and i16 %7319, 9216, !dbg !557
  %7321 = icmp ne i16 %7320, 0, !dbg !557
  br i1 %7321, label %7322, label %7323, !dbg !557

7322:                                             ; preds = %7317
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7080), !dbg !557
  br label %7324, !dbg !557

7323:                                             ; preds = %7317
  store i16 1, i16* %7318, align 2, !dbg !557
  br label %7324, !dbg !557

7324:                                             ; preds = %7322, %7323, %7193, %7173, %7212, %7223, %7141, %7142
  call void @llvm.stackrestore(i8* %7069), !dbg !558
  br label %7325, !dbg !75

7325:                                             ; preds = %18, %7324
  %7326 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 53, !dbg !685
  %7327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7326, i32 0, i32 1, !dbg !688
  %7328 = load i16, i16* %7327, align 2, !dbg !689
  %7329 = and i16 %7328, 36, !dbg !690
  %7330 = icmp ne i16 %7329, 0, !dbg !691
  br i1 %7330, label %7331, label %7332, !dbg !692

7331:                                             ; preds = %7325
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %7326), !dbg !693
  br label %7332, !dbg !694

7332:                                             ; preds = %7331, %7325, %18
  %7333 = call i8* @llvm.stacksave(), !dbg !266
  %7334 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %7335 = load i8, i8* %7334, align 1, !dbg !270
  %7336 = alloca i32, align 4, !dbg !271
  store i32 9, i32* %7336, align 4, !dbg !272
  %7337 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !273
  %7338 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %7339 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7337, align 8, !dbg !275
  store %struct.VdbeCursor* %7339, %struct.VdbeCursor** %7338, align 8, !dbg !276
  %7340 = alloca i8*, align 8, !dbg !277
  %7341 = alloca i32, align 4, !dbg !278
  %7342 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7338, i32* %7336), !dbg !279
  %7343 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7338, align 8, !dbg !280
  %7344 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 55, !dbg !281
  %7345 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 16, !dbg !282
  %7346 = load i16, i16* %7345, align 2, !dbg !283
  %7347 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 19, !dbg !284
  %7348 = load i32*, i32** %7347, align 8, !dbg !285
  %7349 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 0, !dbg !286
  %7350 = load i8, i8* %7349, align 1, !dbg !287
  %7351 = icmp ne i8 %7350, 3, !dbg !288
  %7352 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 2, !dbg !289
  %7353 = load i8, i8* %7352, align 1, !dbg !290
  %7354 = icmp ne i8 %7353, 0, !dbg !291
  %7355 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 14, !dbg !292
  %7356 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 21, !dbg !293
  %7357 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 22, !dbg !294
  %7358 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 20, !dbg !295
  %7359 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 17, !dbg !296
  %7360 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 9, !dbg !297
  %7361 = load i32, i32* %7360, align 4, !dbg !298
  %7362 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %7363 = load i32, i32* %7362, align 4, !dbg !300
  %7364 = icmp ne i32 %7361, %7363, !dbg !301
  br i1 %7364, label %7365, label %7407, !dbg !302

7365:                                             ; preds = %7332
  br i1 %7354, label %7387, label %7382, !dbg !303

7366:                                             ; preds = %7382, %7389
  %7367 = load i32, i32* %7362, align 4, !dbg !304
  store i32 %7367, i32* %7360, align 4, !dbg !305
  %7368 = load i8*, i8** %7358, align 8, !dbg !306
  %7369 = load i8, i8* %7368, align 1, !dbg !307
  %7370 = icmp sgt i8 %7369, -1, !dbg !310
  br i1 %7370, label %7371, label %7373, !dbg !311

7371:                                             ; preds = %7366
  %7372 = zext i8 %7369 to i32, !dbg !312
  store i32 %7372, i32* %7348, align 4, !dbg !313
  store i32 1, i32* %7355, align 4, !dbg !314
  br label %7376, !dbg !315

7373:                                             ; preds = %7366
  %7374 = call i8 @sqlite3GetVarint32(i8* %7368, i32* %7348), !dbg !316
  %7375 = zext i8 %7374 to i32, !dbg !317
  store i32 %7375, i32* %7355, align 4, !dbg !318
  br label %7376, !dbg !319

7376:                                             ; preds = %7373, %7371
  store i16 0, i16* %7359, align 2, !dbg !320
  %7377 = load i32, i32* %7357, align 4, !dbg !321
  %7378 = load i32, i32* %7348, align 4, !dbg !322
  %7379 = icmp ult i32 %7377, %7378, !dbg !323
  br i1 %7379, label %7381, label %7380, !dbg !324

7380:                                             ; preds = %7376
  store i8* %7368, i8** %7340, align 8, !dbg !325
  br label %7500, !dbg !326

7381:                                             ; preds = %7376
  store i8* null, i8** %7358, align 8, !dbg !327
  store i32 0, i32* %7357, align 4, !dbg !328
  br label %7407, !dbg !329

7382:                                             ; preds = %7365
  %7383 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 12, i32 0, !dbg !330
  %7384 = load %struct.BtCursor*, %struct.BtCursor** %7383, align 8, !dbg !331
  %7385 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7384), !dbg !332
  store i32 %7385, i32* %7356, align 4, !dbg !333
  %7386 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7384, i32* %7357), !dbg !334
  store i8* %7386, i8** %7358, align 8, !dbg !335
  br label %7366, !dbg !336

7387:                                             ; preds = %7365
  %7388 = icmp eq i8 %7350, 3, !dbg !337
  br i1 %7388, label %7389, label %7400, !dbg !338

7389:                                             ; preds = %7387
  %7390 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 10, !dbg !339
  %7391 = load i32, i32* %7390, align 4, !dbg !340
  %7392 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7391, !dbg !341
  %7393 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7392, i32 0, i32 1, !dbg !342
  %7394 = load i16, i16* %7393, align 2, !dbg !343
  %7395 = and i16 %7394, 16, !dbg !344
  %7396 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7392, i32 0, i32 4, !dbg !345
  %7397 = load i32, i32* %7396, align 4, !dbg !346
  store i32 %7397, i32* %7356, align 4, !dbg !347
  store i32 %7397, i32* %7357, align 4, !dbg !348
  %7398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7392, i32 0, i32 5, !dbg !349
  %7399 = load i8*, i8** %7398, align 8, !dbg !350
  store i8* %7399, i8** %7358, align 8, !dbg !351
  br label %7366, !dbg !352

7400:                                             ; preds = %7387
  %7401 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 1, !dbg !353
  %7402 = load i16, i16* %7401, align 2, !dbg !353
  %7403 = and i16 %7402, 9216, !dbg !353
  %7404 = icmp ne i16 %7403, 0, !dbg !353
  br i1 %7404, label %7405, label %7406, !dbg !353

7405:                                             ; preds = %7400
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7344), !dbg !353
  br label %7588, !dbg !353

7406:                                             ; preds = %7400
  store i16 1, i16* %7401, align 2, !dbg !353
  br label %7588, !dbg !353

7407:                                             ; preds = %7381, %7332
  %7408 = load i16, i16* %7359, align 2, !dbg !354
  %7409 = icmp ule i16 %7408, 2, !dbg !355
  br i1 %7409, label %7492, label %7489, !dbg !356

7410:                                             ; preds = %7489, %7578
  %7411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 1, !dbg !357
  %7412 = load i16, i16* %7411, align 2, !dbg !358
  %7413 = and i16 9216, %7412, !dbg !359
  %7414 = icmp eq i16 0, %7413, !dbg !360
  br i1 %7414, label %7415, label %7419, !dbg !361

7415:                                             ; preds = %7410
  %7416 = icmp ne i16 %7413, 0, !dbg !362
  br i1 %7416, label %7417, label %7418, !dbg !362

7417:                                             ; preds = %7415
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7344), !dbg !362
  br label %7419, !dbg !362

7418:                                             ; preds = %7415
  store i16 1, i16* %7411, align 2, !dbg !362
  br label %7419, !dbg !362

7419:                                             ; preds = %7417, %7418, %7410
  %7420 = load i32, i32* %7341, align 4, !dbg !363
  %7421 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 23, i32 2, !dbg !364
  %7422 = load i32, i32* %7421, align 4, !dbg !365
  %7423 = load i32, i32* %7357, align 4, !dbg !366
  %7424 = getelementptr i32, i32* %7348, i32 3, !dbg !367
  %7425 = load i32, i32* %7424, align 4, !dbg !368
  %7426 = icmp sge i32 %7423, %7425, !dbg !369
  br i1 %7426, label %7427, label %7467, !dbg !370

7427:                                             ; preds = %7419
  %7428 = load i8*, i8** %7358, align 8, !dbg !371
  %7429 = ptrtoint i8* %7428 to i64, !dbg !372
  %7430 = getelementptr i32, i32* %7348, i32 2, !dbg !373
  %7431 = load i32, i32* %7430, align 4, !dbg !374
  %7432 = zext i32 %7431 to i64, !dbg !375
  %7433 = add i64 %7429, %7432, !dbg !376
  %7434 = inttoptr i64 %7433 to i8*, !dbg !377
  store i8* %7434, i8** %7340, align 8, !dbg !378
  %7435 = load i32, i32* %7341, align 4, !dbg !379
  %7436 = icmp ult i32 %7435, 12, !dbg !380
  br i1 %7436, label %7437, label %7439, !dbg !381

7437:                                             ; preds = %7427
  %7438 = call i32 @sqlite3VdbeSerialGet(i8* %7434, i32 %7435, %struct.sqlite3_value* %7344), !dbg !382
  br label %7588, !dbg !383

7439:                                             ; preds = %7427
  %7440 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %7440, align 2, !dbg !385
  %7441 = getelementptr i16, i16* %7440, i32 1, !dbg !386
  store i16 514, i16* %7441, align 2, !dbg !387
  %7442 = load i32, i32* %7341, align 4, !dbg !388
  %7443 = sub i32 %7442, 12, !dbg !389
  %7444 = lshr i32 %7443, 1, !dbg !390
  %7445 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 4, !dbg !391
  store i32 %7444, i32* %7445, align 4, !dbg !392
  %7446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 2, !dbg !393
  store i8 %7335, i8* %7446, align 1, !dbg !394
  %7447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 5, !dbg !395
  %7448 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 7, !dbg !396
  %7449 = load i32, i32* %7448, align 4, !dbg !397
  %7450 = add i32 %7444, 2, !dbg !398
  %7451 = icmp slt i32 %7449, %7450, !dbg !399
  br i1 %7451, label %7452, label %7454, !dbg !400

7452:                                             ; preds = %7439
  store i16 1, i16* %7411, align 2, !dbg !401
  %7453 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7344, i32 %7450, i32 0), !dbg !402
  br label %7457, !dbg !403

7454:                                             ; preds = %7439
  %7455 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 6, !dbg !404
  %7456 = load i8*, i8** %7455, align 8, !dbg !405
  store i8* %7456, i8** %7447, align 8, !dbg !406
  br label %7457, !dbg !407

7457:                                             ; preds = %7454, %7452
  %7458 = zext i32 %7444 to i64, !dbg !408
  %7459 = load i8*, i8** %7447, align 8, !dbg !409
  %7460 = load i8*, i8** %7340, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7459, i8* %7460, i64 %7458, i1 false), !dbg !411
  %7461 = getelementptr i8, i8* %7459, i32 %7444, !dbg !412
  store i8 0, i8* %7461, align 1, !dbg !413
  %7462 = add i32 %7444, 1, !dbg !414
  %7463 = getelementptr i8, i8* %7459, i32 %7462, !dbg !415
  store i8 0, i8* %7463, align 1, !dbg !416
  %7464 = and i32 %7442, 1, !dbg !417
  %7465 = getelementptr i16, i16* %7440, i32 %7464, !dbg !418
  %7466 = load i16, i16* %7465, align 2, !dbg !419
  store i16 %7466, i16* %7411, align 2, !dbg !420
  br label %7588, !dbg !421

7467:                                             ; preds = %7419
  %7468 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 2, !dbg !422
  store i8 %7335, i8* %7468, align 1, !dbg !423
  %7469 = load i32, i32* %7341, align 4, !dbg !424
  %7470 = and i32 %7469, 1, !dbg !425
  %7471 = icmp eq i32 %7470, 0, !dbg !426
  %7472 = icmp sge i32 %7469, 12, !dbg !427
  %7473 = and i1 %7472, %7471, !dbg !428
  %7474 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7469), !dbg !429
  %7475 = icmp eq i32 %7474, 0, !dbg !430
  br i1 %7475, label %7487, label %7476, !dbg !431

7476:                                             ; preds = %7467
  %7477 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 12, i32 0, !dbg !432
  %7478 = load %struct.BtCursor*, %struct.BtCursor** %7477, align 8, !dbg !433
  %7479 = getelementptr i32, i32* %7348, i32 2, !dbg !434
  %7480 = load i32, i32* %7479, align 4, !dbg !435
  %7481 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7478, i32 %7480, i32 %7474, %struct.sqlite3_value* %7344), !dbg !436
  %7482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 5, !dbg !437
  %7483 = load i8*, i8** %7482, align 8, !dbg !438
  %7484 = call i32 @sqlite3VdbeSerialGet(i8* %7483, i32 %7469, %struct.sqlite3_value* %7344), !dbg !439
  %7485 = load i16, i16* %7411, align 2, !dbg !440
  %7486 = and i16 %7485, -4097, !dbg !441
  store i16 %7486, i16* %7411, align 2, !dbg !442
  br label %7588, !dbg !443

7487:                                             ; preds = %7467
  %7488 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7469, %struct.sqlite3_value* %7344), !dbg !444
  br label %7588, !dbg !445

7489:                                             ; preds = %7407
  %7490 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 23, i32 2, !dbg !446
  %7491 = load i32, i32* %7490, align 4, !dbg !447
  store i32 %7491, i32* %7341, align 4, !dbg !448
  br label %7410, !dbg !449

7492:                                             ; preds = %7407
  %7493 = load i32, i32* %7355, align 4, !dbg !450
  %7494 = load i32, i32* %7348, align 4, !dbg !451
  %7495 = icmp ult i32 %7493, %7494, !dbg !452
  br i1 %7495, label %7496, label %7577, !dbg !453

7496:                                             ; preds = %7492
  %7497 = load i8*, i8** %7358, align 8, !dbg !454
  %7498 = icmp eq i8* %7497, null, !dbg !455
  br i1 %7498, label %7500, label %7499, !dbg !456

7499:                                             ; preds = %7496
  store i8* %7497, i8** %7340, align 8, !dbg !457
  br label %7500, !dbg !458

7500:                                             ; preds = %7499, %7496, %7380
  %7501 = alloca i32, align 4, !dbg !459
  %7502 = load i16, i16* %7359, align 2, !dbg !460
  %7503 = zext i16 %7502 to i32, !dbg !461
  store i32 %7503, i32* %7501, align 4, !dbg !462
  %7504 = alloca i64, align 8, !dbg !463
  %7505 = getelementptr i32, i32* %7348, i32 %7503, !dbg !464
  %7506 = load i32, i32* %7505, align 4, !dbg !465
  %7507 = zext i32 %7506 to i64, !dbg !466
  store i64 %7507, i64* %7504, align 4, !dbg !467
  %7508 = load i8*, i8** %7340, align 8, !dbg !468
  %7509 = load i32, i32* %7355, align 4, !dbg !469
  %7510 = alloca i8*, align 8, !dbg !470
  %7511 = getelementptr i8, i8* %7508, i32 %7509, !dbg !471
  store i8* %7511, i8** %7510, align 8, !dbg !472
  %7512 = load i32, i32* %7348, align 4, !dbg !473
  %7513 = getelementptr i8, i8* %7508, i32 %7512, !dbg !474
  br label %7514, !dbg !475

7514:                                             ; preds = %7521, %7500
  %7515 = load i32, i32* %7501, align 4, !dbg !476
  %7516 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7343, i32 0, i32 23, i32 %7515, !dbg !477
  %7517 = load i8*, i8** %7510, align 8, !dbg !478
  %7518 = load i8, i8* %7517, align 1, !dbg !479
  %7519 = zext i8 %7518 to i32, !dbg !480
  store i32 %7519, i32* %7341, align 4, !dbg !481
  store i32 %7519, i32* %7516, align 4, !dbg !482
  %7520 = icmp sgt i8 %7518, -1, !dbg !483
  br i1 %7520, label %7544, label %7535, !dbg !484

7521:                                             ; preds = %7535, %7544
  %7522 = load i32, i32* %7501, align 4, !dbg !485
  %7523 = add i32 %7522, 1, !dbg !486
  store i32 %7523, i32* %7501, align 4, !dbg !487
  %7524 = load i64, i64* %7504, align 4, !dbg !488
  %7525 = and i64 4294967295, %7524, !dbg !489
  %7526 = trunc i64 %7525 to i32, !dbg !490
  %7527 = getelementptr i32, i32* %7348, i32 %7523, !dbg !491
  store i32 %7526, i32* %7527, align 4, !dbg !492
  %7528 = load i32, i32* %7501, align 4, !dbg !493
  %7529 = icmp sle i32 %7528, 2, !dbg !494
  %7530 = load i8*, i8** %7510, align 8, !dbg !495
  %7531 = ptrtoint i8* %7530 to i64, !dbg !496
  %7532 = ptrtoint i8* %7513 to i64, !dbg !497
  %7533 = icmp ult i64 %7531, %7532, !dbg !498
  %7534 = and i1 %7529, %7533, !dbg !499
  br i1 %7534, label %7514, label %7553, !dbg !500

7535:                                             ; preds = %7514
  %7536 = load i8*, i8** %7510, align 8, !dbg !501
  %7537 = call i8 @sqlite3GetVarint32(i8* %7536, i32* %7341), !dbg !502
  %7538 = getelementptr i8, i8* %7536, i8 %7537, !dbg !503
  store i8* %7538, i8** %7510, align 8, !dbg !504
  %7539 = load i32, i32* %7341, align 4, !dbg !505
  store i32 %7539, i32* %7516, align 4, !dbg !506
  %7540 = load i64, i64* %7504, align 4, !dbg !507
  %7541 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7539), !dbg !508
  %7542 = zext i32 %7541 to i64, !dbg !509
  %7543 = add i64 %7540, %7542, !dbg !510
  store i64 %7543, i64* %7504, align 4, !dbg !511
  br label %7521, !dbg !512

7544:                                             ; preds = %7514
  %7545 = getelementptr i8, i8* %7517, i32 1, !dbg !513
  store i8* %7545, i8** %7510, align 8, !dbg !514
  %7546 = load i32, i32* %7341, align 4, !dbg !515
  %7547 = trunc i32 %7546 to i8, !dbg !516
  %7548 = getelementptr i8, i8* %4, i8 %7547, !dbg !517
  %7549 = load i8, i8* %7548, align 1, !dbg !518
  %7550 = zext i8 %7549 to i64, !dbg !519
  %7551 = load i64, i64* %7504, align 4, !dbg !520
  %7552 = add i64 %7551, %7550, !dbg !521
  store i64 %7552, i64* %7504, align 4, !dbg !522
  br label %7521, !dbg !523

7553:                                             ; preds = %7521
  %7554 = load i64, i64* %7504, align 4, !dbg !524
  %7555 = load i32, i32* %7356, align 4, !dbg !525
  %7556 = zext i32 %7555 to i64, !dbg !526
  %7557 = icmp uge i64 %7531, %7532, !dbg !527
  %7558 = icmp ugt i64 %7531, %7532, !dbg !528
  %7559 = icmp ne i64 %7554, %7556, !dbg !529
  %7560 = icmp ugt i64 %7554, %7556, !dbg !530
  %7561 = or i1 %7558, %7559, !dbg !531
  %7562 = and i1 %7557, %7561, !dbg !532
  %7563 = or i1 %7562, %7560, !dbg !533
  br i1 %7563, label %7564, label %7568, !dbg !534

7564:                                             ; preds = %7553
  %7565 = load i32, i32* %7348, align 4, !dbg !535
  %7566 = icmp eq i32 %7565, 0, !dbg !536
  br i1 %7566, label %7567, label %7568, !dbg !537

7567:                                             ; preds = %7564
  store i32 0, i32* %7501, align 4, !dbg !538
  store i8* %7513, i8** %7510, align 8, !dbg !539
  br label %7568, !dbg !540

7568:                                             ; preds = %7567, %7564, %7553
  %7569 = load i32, i32* %7501, align 4, !dbg !541
  %7570 = trunc i32 %7569 to i16, !dbg !542
  store i16 %7570, i16* %7359, align 2, !dbg !543
  %7571 = load i8*, i8** %7510, align 8, !dbg !544
  %7572 = ptrtoint i8* %7571 to i64, !dbg !545
  %7573 = load i8*, i8** %7340, align 8, !dbg !546
  %7574 = ptrtoint i8* %7573 to i64, !dbg !547
  %7575 = sub i64 %7572, %7574, !dbg !548
  %7576 = trunc i64 %7575 to i32, !dbg !549
  store i32 %7576, i32* %7355, align 4, !dbg !550
  br label %7578, !dbg !551

7577:                                             ; preds = %7492
  store i32 0, i32* %7341, align 4, !dbg !552
  br label %7578, !dbg !553

7578:                                             ; preds = %7568, %7577
  %7579 = load i16, i16* %7359, align 2, !dbg !554
  %7580 = icmp sle i16 %7579, 2, !dbg !555
  br i1 %7580, label %7581, label %7410, !dbg !556

7581:                                             ; preds = %7578
  %7582 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7344, i32 0, i32 1, !dbg !557
  %7583 = load i16, i16* %7582, align 2, !dbg !557
  %7584 = and i16 %7583, 9216, !dbg !557
  %7585 = icmp ne i16 %7584, 0, !dbg !557
  br i1 %7585, label %7586, label %7587, !dbg !557

7586:                                             ; preds = %7581
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7344), !dbg !557
  br label %7588, !dbg !557

7587:                                             ; preds = %7581
  store i16 1, i16* %7582, align 2, !dbg !557
  br label %7588, !dbg !557

7588:                                             ; preds = %7586, %7587, %7457, %7437, %7476, %7487, %7405, %7406
  call void @llvm.stackrestore(i8* %7333), !dbg !558
  br label %7589, !dbg !75

7589:                                             ; preds = %18, %7588
  %7590 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 55, !dbg !685
  %7591 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7590, i32 0, i32 1, !dbg !688
  %7592 = load i16, i16* %7591, align 2, !dbg !689
  %7593 = and i16 %7592, 36, !dbg !690
  %7594 = icmp ne i16 %7593, 0, !dbg !691
  br i1 %7594, label %7595, label %7596, !dbg !692

7595:                                             ; preds = %7589
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %7590), !dbg !693
  br label %7596, !dbg !694

7596:                                             ; preds = %7595, %7589, %18
  %7597 = call i8* @llvm.stacksave(), !dbg !1003
  %7598 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 55, !dbg !1006
  %7599 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1007
  %7600 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 54, !dbg !1008
  %7601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7600, i32 0, i32 1, !dbg !1009
  %7602 = alloca i16, align 2, !dbg !1010
  %7603 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7598, i32 0, i32 1, !dbg !1011
  %7604 = load i16, i16* %7603, align 2, !dbg !1014
  %7605 = and i16 %7604, 44, !dbg !1015
  %7606 = icmp ne i16 %7605, 0, !dbg !1016
  br i1 %7606, label %7607, label %7608, !dbg !1017

7607:                                             ; preds = %7596
  store i16 %7605, i16* %7602, align 2, !dbg !1010
  br label %7614, !dbg !1018

7608:                                             ; preds = %7596
  %7609 = and i16 %7604, 18, !dbg !1010
  %7610 = icmp ne i16 %7609, 0, !dbg !1019
  br i1 %7610, label %7611, label %7613, !dbg !1020

7611:                                             ; preds = %7608
  %7612 = call i16 @computeNumericType(%struct.sqlite3_value* %7598), !dbg !1021
  br label %7614, !dbg !1022

7613:                                             ; preds = %7608
  store i16 0, i16* %7602, align 2, !dbg !1010
  br label %7614, !dbg !1023

7614:                                             ; preds = %7611, %7613, %7607
  %7615 = load i16, i16* %7602, align 2, !dbg !1010
  %7616 = alloca i16, align 2, !dbg !1024
  %7617 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7599, i32 0, i32 1, !dbg !1011
  %7618 = load i16, i16* %7617, align 2, !dbg !1014
  %7619 = and i16 %7618, 44, !dbg !1015
  %7620 = icmp ne i16 %7619, 0, !dbg !1016
  br i1 %7620, label %7621, label %7622, !dbg !1017

7621:                                             ; preds = %7614
  store i16 %7619, i16* %7616, align 2, !dbg !1024
  br label %7628, !dbg !1018

7622:                                             ; preds = %7614
  %7623 = and i16 %7618, 18, !dbg !1024
  %7624 = icmp ne i16 %7623, 0, !dbg !1019
  br i1 %7624, label %7625, label %7627, !dbg !1020

7625:                                             ; preds = %7622
  %7626 = call i16 @computeNumericType(%struct.sqlite3_value* %7599), !dbg !1021
  br label %7628, !dbg !1022

7627:                                             ; preds = %7622
  store i16 0, i16* %7616, align 2, !dbg !1024
  br label %7628, !dbg !1023

7628:                                             ; preds = %7625, %7627, %7621
  %7629 = load i16, i16* %7616, align 2, !dbg !1024
  %7630 = load i16, i16* %7603, align 2, !dbg !1025
  %7631 = load i16, i16* %7617, align 2, !dbg !1026
  %7632 = or i16 %7630, %7631, !dbg !1027
  %7633 = and i16 %7615, %7629, !dbg !1028
  %7634 = and i16 %7633, 4, !dbg !1029
  %7635 = icmp ne i16 %7634, 0, !dbg !1030
  br i1 %7635, label %7636, label %7653, !dbg !1031

7636:                                             ; preds = %7628
  %7637 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7598, i32 0, i32 0, !dbg !1032
  %7638 = bitcast %union.MemValue* %7637 to i64*, !dbg !1033
  %7639 = load i64, i64* %7638, align 4, !dbg !1034
  %7640 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7599, i32 0, i32 0, !dbg !1035
  %7641 = bitcast %union.MemValue* %7640 to i64*, !dbg !1036
  %7642 = load i64, i64* %7641, align 4, !dbg !1037
  %7643 = alloca i64, align 8, !dbg !1038
  store i64 %7642, i64* %7643, align 4, !dbg !1039
  %7644 = call i32 @sqlite3SubInt64(i64* %7643, i64 %7639), !dbg !1040
  %7645 = icmp eq i32 %7644, 0, !dbg !1041
  br i1 %7645, label %7646, label %7656, !dbg !1042

7646:                                             ; preds = %7636
  %7647 = load i64, i64* %7643, align 4, !dbg !1043
  %7648 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7600, i32 0, i32 0, !dbg !1044
  %7649 = bitcast %union.MemValue* %7648 to i64*, !dbg !1045
  store i64 %7647, i64* %7649, align 4, !dbg !1046
  %7650 = load i16, i16* %7601, align 2, !dbg !1047
  %7651 = and i16 %7650, 15936, !dbg !1047
  %7652 = or i16 %7651, 4, !dbg !1047
  store i16 %7652, i16* %7601, align 2, !dbg !1047
  br label %7674, !dbg !1048

7653:                                             ; preds = %7628
  %7654 = and i16 %7632, 1, !dbg !1049
  %7655 = icmp ne i16 %7654, 0, !dbg !1050
  br i1 %7655, label %7668, label %7656, !dbg !1051

7656:                                             ; preds = %7653, %7636
  %7657 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %7598), !dbg !1052
  %7658 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %7599), !dbg !1053
  %7659 = fsub double %7658, %7657, !dbg !1054
  %7660 = call i32 @sqlite3IsNaN(double %7659), !dbg !1055
  %7661 = icmp ne i32 %7660, 0, !dbg !1056
  br i1 %7661, label %7668, label %7662, !dbg !1057

7662:                                             ; preds = %7656
  %7663 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7600, i32 0, i32 0, !dbg !1058
  %7664 = bitcast %union.MemValue* %7663 to double*, !dbg !1059
  store double %7659, double* %7664, align 8, !dbg !1060
  %7665 = load i16, i16* %7601, align 2, !dbg !1047
  %7666 = and i16 %7665, 15936, !dbg !1047
  %7667 = or i16 %7666, 8, !dbg !1047
  store i16 %7667, i16* %7601, align 2, !dbg !1047
  br label %7674, !dbg !1061

7668:                                             ; preds = %7653, %7656
  %7669 = load i16, i16* %7601, align 2, !dbg !1062
  %7670 = and i16 %7669, 9216, !dbg !1062
  %7671 = icmp ne i16 %7670, 0, !dbg !1062
  br i1 %7671, label %7672, label %7673, !dbg !1062

7672:                                             ; preds = %7668
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7600), !dbg !1062
  br label %7674, !dbg !1062

7673:                                             ; preds = %7668
  store i16 1, i16* %7601, align 2, !dbg !1062
  br label %7674, !dbg !1062

7674:                                             ; preds = %7672, %7673, %7646, %7662
  call void @llvm.stackrestore(i8* %7597), !dbg !1063
  br label %7675, !dbg !75

7675:                                             ; preds = %18, %7674
  %7676 = call i8* @llvm.stacksave(), !dbg !1003
  %7677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 54, !dbg !1006
  %7678 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 53, !dbg !1007
  %7679 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 52, !dbg !1008
  %7680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7679, i32 0, i32 1, !dbg !1009
  %7681 = alloca i16, align 2, !dbg !1010
  %7682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7677, i32 0, i32 1, !dbg !1011
  %7683 = load i16, i16* %7682, align 2, !dbg !1014
  %7684 = and i16 %7683, 44, !dbg !1015
  %7685 = icmp ne i16 %7684, 0, !dbg !1016
  br i1 %7685, label %7686, label %7687, !dbg !1017

7686:                                             ; preds = %7675
  store i16 %7684, i16* %7681, align 2, !dbg !1010
  br label %7693, !dbg !1018

7687:                                             ; preds = %7675
  %7688 = and i16 %7683, 18, !dbg !1010
  %7689 = icmp ne i16 %7688, 0, !dbg !1019
  br i1 %7689, label %7690, label %7692, !dbg !1020

7690:                                             ; preds = %7687
  %7691 = call i16 @computeNumericType(%struct.sqlite3_value* %7677), !dbg !1021
  br label %7693, !dbg !1022

7692:                                             ; preds = %7687
  store i16 0, i16* %7681, align 2, !dbg !1010
  br label %7693, !dbg !1023

7693:                                             ; preds = %7690, %7692, %7686
  %7694 = load i16, i16* %7681, align 2, !dbg !1010
  %7695 = alloca i16, align 2, !dbg !1024
  %7696 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7678, i32 0, i32 1, !dbg !1011
  %7697 = load i16, i16* %7696, align 2, !dbg !1014
  %7698 = and i16 %7697, 44, !dbg !1015
  %7699 = icmp ne i16 %7698, 0, !dbg !1016
  br i1 %7699, label %7700, label %7701, !dbg !1017

7700:                                             ; preds = %7693
  store i16 %7698, i16* %7695, align 2, !dbg !1024
  br label %7707, !dbg !1018

7701:                                             ; preds = %7693
  %7702 = and i16 %7697, 18, !dbg !1024
  %7703 = icmp ne i16 %7702, 0, !dbg !1019
  br i1 %7703, label %7704, label %7706, !dbg !1020

7704:                                             ; preds = %7701
  %7705 = call i16 @computeNumericType(%struct.sqlite3_value* %7678), !dbg !1021
  br label %7707, !dbg !1022

7706:                                             ; preds = %7701
  store i16 0, i16* %7695, align 2, !dbg !1024
  br label %7707, !dbg !1023

7707:                                             ; preds = %7704, %7706, %7700
  %7708 = load i16, i16* %7695, align 2, !dbg !1024
  %7709 = load i16, i16* %7682, align 2, !dbg !1025
  %7710 = load i16, i16* %7696, align 2, !dbg !1026
  %7711 = or i16 %7709, %7710, !dbg !1027
  %7712 = and i16 %7694, %7708, !dbg !1028
  %7713 = and i16 %7712, 4, !dbg !1029
  %7714 = icmp ne i16 %7713, 0, !dbg !1030
  br i1 %7714, label %7715, label %7732, !dbg !1031

7715:                                             ; preds = %7707
  %7716 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7677, i32 0, i32 0, !dbg !1032
  %7717 = bitcast %union.MemValue* %7716 to i64*, !dbg !1033
  %7718 = load i64, i64* %7717, align 4, !dbg !1034
  %7719 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7678, i32 0, i32 0, !dbg !1035
  %7720 = bitcast %union.MemValue* %7719 to i64*, !dbg !1036
  %7721 = load i64, i64* %7720, align 4, !dbg !1037
  %7722 = alloca i64, align 8, !dbg !1038
  store i64 %7721, i64* %7722, align 4, !dbg !1039
  %7723 = call i32 @sqlite3MulInt64(i64* %7722, i64 %7718), !dbg !1064
  %7724 = icmp eq i32 %7723, 0, !dbg !1065
  br i1 %7724, label %7725, label %7735, !dbg !1066

7725:                                             ; preds = %7715
  %7726 = load i64, i64* %7722, align 4, !dbg !1043
  %7727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7679, i32 0, i32 0, !dbg !1044
  %7728 = bitcast %union.MemValue* %7727 to i64*, !dbg !1045
  store i64 %7726, i64* %7728, align 4, !dbg !1046
  %7729 = load i16, i16* %7680, align 2, !dbg !1047
  %7730 = and i16 %7729, 15936, !dbg !1047
  %7731 = or i16 %7730, 4, !dbg !1047
  store i16 %7731, i16* %7680, align 2, !dbg !1047
  br label %7753, !dbg !1048

7732:                                             ; preds = %7707
  %7733 = and i16 %7711, 1, !dbg !1049
  %7734 = icmp ne i16 %7733, 0, !dbg !1050
  br i1 %7734, label %7747, label %7735, !dbg !1051

7735:                                             ; preds = %7732, %7715
  %7736 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %7677), !dbg !1052
  %7737 = call double @sqlite3VdbeRealValue(%struct.sqlite3_value* %7678), !dbg !1053
  %7738 = fmul double %7737, %7736, !dbg !1067
  %7739 = call i32 @sqlite3IsNaN(double %7738), !dbg !1055
  %7740 = icmp ne i32 %7739, 0, !dbg !1056
  br i1 %7740, label %7747, label %7741, !dbg !1057

7741:                                             ; preds = %7735
  %7742 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7679, i32 0, i32 0, !dbg !1058
  %7743 = bitcast %union.MemValue* %7742 to double*, !dbg !1059
  store double %7738, double* %7743, align 8, !dbg !1060
  %7744 = load i16, i16* %7680, align 2, !dbg !1047
  %7745 = and i16 %7744, 15936, !dbg !1047
  %7746 = or i16 %7745, 8, !dbg !1047
  store i16 %7746, i16* %7680, align 2, !dbg !1047
  br label %7753, !dbg !1061

7747:                                             ; preds = %7732, %7735
  %7748 = load i16, i16* %7680, align 2, !dbg !1062
  %7749 = and i16 %7748, 9216, !dbg !1062
  %7750 = icmp ne i16 %7749, 0, !dbg !1062
  br i1 %7750, label %7751, label %7752, !dbg !1062

7751:                                             ; preds = %7747
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7679), !dbg !1062
  br label %7753, !dbg !1062

7752:                                             ; preds = %7747
  store i16 1, i16* %7680, align 2, !dbg !1062
  br label %7753, !dbg !1062

7753:                                             ; preds = %7751, %7752, %7725, %7741
  call void @llvm.stackrestore(i8* %7676), !dbg !1063
  br label %7754, !dbg !75

7754:                                             ; preds = %18, %7753
  %7755 = call i8* @llvm.stacksave(), !dbg !1068
  %7756 = alloca i32, align 8, !dbg !1071
  store i32 0, i32* %7756, align 4, !dbg !1072
  %7757 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 116, i32 1, !dbg !1073
  %7758 = load i8, i8* %7757, align 1, !dbg !1074
  %7759 = icmp eq i8 %7758, -8, !dbg !1075
  br i1 %7759, label %7760, label %7782, !dbg !1076

7760:                                             ; preds = %7754
  %7761 = alloca %struct.sqlite3_context*, align 8, !dbg !1077
  %7762 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1078
  %7763 = bitcast i8* %7762 to %struct.sqlite3_context*, !dbg !1079
  store %struct.sqlite3_context* %7763, %struct.sqlite3_context** %7761, align 8, !dbg !1080
  %7764 = ptrtoint %struct.sqlite3_context* %7763 to i64, !dbg !1081
  %7765 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 0, !dbg !1082
  %7766 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 1, !dbg !1083
  %7767 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 2, !dbg !1084
  %7768 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 3, !dbg !1085
  %7769 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 4, !dbg !1086
  %7770 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 5, !dbg !1087
  %7771 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 6, !dbg !1088
  %7772 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 7, !dbg !1089
  %7773 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7763, i32 0, i32 8, !dbg !1090
  %7774 = bitcast [1 x %struct.sqlite3_value*]* %7773 to %struct.sqlite3_value**, !dbg !1091
  %7775 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 116, i32 6, i32 0, !dbg !1092
  %7776 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %7774, i32 1, !dbg !1093
  %7777 = bitcast %struct.sqlite3_value** %7776 to %struct.sqlite3_value*, !dbg !1094
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %7777, %struct.sqlite3* %13, i16 1), !dbg !1095
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %7767, align 8, !dbg !1096
  store %struct.sqlite3_value* %7777, %struct.sqlite3_value** %7765, align 8, !dbg !1097
  %7778 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 116, !dbg !1098
  %7779 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %7778, i32 0, i32 6, !dbg !1099
  %7780 = bitcast %union.p4union* %7779 to %struct.FuncDef**, !dbg !1100
  %7781 = load %struct.FuncDef*, %struct.FuncDef** %7780, align 8, !dbg !1101
  store %struct.FuncDef* %7781, %struct.FuncDef** %7766, align 8, !dbg !1102
  store i32 116, i32* %7769, align 4, !dbg !1103
  store %struct.Vdbe* %0, %struct.Vdbe** %7768, align 8, !dbg !1104
  store i8 0, i8* %7771, align 1, !dbg !1105
  store i32 0, i32* %7770, align 4, !dbg !1106
  store i8 1, i8* %7772, align 1, !dbg !1107
  store i8 -16, i8* %7757, align 1, !dbg !1108
  store i8* %7762, i8** %7775, align 8, !dbg !1109
  br label %7782, !dbg !1110

7782:                                             ; preds = %7760, %7754
  %7783 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 116, i32 6, i32 0, !dbg !1111
  %7784 = bitcast i8** %7783 to %struct.sqlite3_context**, !dbg !1112
  %7785 = load %struct.sqlite3_context*, %struct.sqlite3_context** %7784, align 8, !dbg !1113
  %7786 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 0, !dbg !1114
  %7787 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 1, !dbg !1115
  %7788 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 5, !dbg !1116
  %7789 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 6, !dbg !1117
  %7790 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 7, !dbg !1118
  %7791 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 8, !dbg !1119
  %7792 = bitcast [1 x %struct.sqlite3_value*]* %7791 to %struct.sqlite3_value**, !dbg !1120
  %7793 = alloca i32, align 8, !dbg !1121
  %7794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !1122
  %7795 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %7785, i32 0, i32 2, !dbg !1123
  %7796 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7795, align 8, !dbg !1124
  %7797 = icmp ne %struct.sqlite3_value* %7796, %7794, !dbg !1125
  br i1 %7797, label %7798, label %7811, !dbg !1126

7798:                                             ; preds = %7782
  store %struct.sqlite3_value* %7794, %struct.sqlite3_value** %7795, align 8, !dbg !1127
  %7799 = load i8, i8* %7790, align 1, !dbg !1128
  %7800 = zext i8 %7799 to i32, !dbg !1129
  %7801 = add i32 %7800, -1, !dbg !1130
  %7802 = alloca i32, align 8, !dbg !1131
  store i32 %7801, i32* %7802, align 4, !dbg !1132
  br label %7808, !dbg !1133

7803:                                             ; preds = %7808
  %7804 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %7792, i32 %7809, !dbg !1134
  %7805 = add i32 %7809, 52, !dbg !1135
  %7806 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7805, !dbg !1136
  store %struct.sqlite3_value* %7806, %struct.sqlite3_value** %7804, align 8, !dbg !1137
  %7807 = add i32 %7809, -1, !dbg !1138
  store i32 %7807, i32* %7802, align 4, !dbg !1139
  br label %7808, !dbg !1140

7808:                                             ; preds = %7803, %7798
  %7809 = load i32, i32* %7802, align 4, !dbg !1141
  %7810 = icmp sge i32 %7809, 0, !dbg !1142
  br i1 %7810, label %7803, label %7811, !dbg !1143

7811:                                             ; preds = %7808, %7782
  %7812 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7794, i32 0, i32 4, !dbg !1144
  %7813 = load i32, i32* %7812, align 4, !dbg !1145
  %7814 = add i32 %7813, 1, !dbg !1146
  store i32 %7814, i32* %7812, align 4, !dbg !1147
  %7815 = load %struct.FuncDef*, %struct.FuncDef** %7787, align 8, !dbg !1148
  %7816 = load i8, i8* %7790, align 1, !dbg !1149
  %7817 = zext i8 %7816 to i32, !dbg !1150
  %7818 = getelementptr %struct.FuncDef, %struct.FuncDef* %7815, i32 0, i32 4, !dbg !1151
  %7819 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %7818, align 8, !dbg !1152
  call void %7819(%struct.sqlite3_context* %7785, i32 %7817, %struct.sqlite3_value** %7792), !dbg !1153
  %7820 = load i32, i32* %7788, align 4, !dbg !1154
  %7821 = icmp ne i32 %7820, 0, !dbg !1155
  br i1 %7821, label %7822, label %7837, !dbg !1156

7822:                                             ; preds = %7811
  %7823 = icmp sgt i32 %7820, 0, !dbg !1157
  br i1 %7823, label %7824, label %7828, !dbg !1158

7824:                                             ; preds = %7822
  %7825 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7786, align 8, !dbg !1159
  %7826 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %7825), !dbg !1160
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %7826), !dbg !1161
  %7827 = load i32, i32* %7788, align 4, !dbg !1162
  store i32 %7827, i32* %7756, align 4, !dbg !1163
  br label %7828, !dbg !1164

7828:                                             ; preds = %7824, %7822
  %7829 = load i8, i8* %7789, align 1, !dbg !1165
  %7830 = icmp ne i8 %7829, 0, !dbg !1166
  br i1 %7830, label %7831, label %7833, !dbg !1167

7831:                                             ; preds = %7828
  store i32 54, i32* %7793, align 4, !dbg !1168
  %7832 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 54, !dbg !1169
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %7832, i64 1), !dbg !1170
  store i8 0, i8* %7789, align 1, !dbg !1171
  br label %7833, !dbg !1172

7833:                                             ; preds = %7831, %7828
  %7834 = load %struct.sqlite3_value*, %struct.sqlite3_value** %7786, align 8, !dbg !1173
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %7834), !dbg !1174
  %7835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7834, i32 0, i32 1, !dbg !1175
  store i16 1, i16* %7835, align 2, !dbg !1176
  store i32 0, i32* %7788, align 4, !dbg !1177
  %7836 = load i32, i32* %7756, align 4, !dbg !1178
  br label %7837, !dbg !1179

7837:                                             ; preds = %7811, %7833
  call void @llvm.stackrestore(i8* %7755), !dbg !1180
  br label %7838, !dbg !75

7838:                                             ; preds = %18, %7837
  %7839 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 37, !dbg !1181
  %7840 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %7839, i32 0), !dbg !1184
  %7841 = icmp ne i32 %7840, 0, !dbg !1185
  br i1 %7841, label %8097, label %7842, !dbg !1186

7842:                                             ; preds = %18, %7838
  %7843 = call i8* @llvm.stacksave(), !dbg !266
  %7844 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %7845 = load i8, i8* %7844, align 1, !dbg !270
  %7846 = alloca i32, align 4, !dbg !271
  store i32 9, i32* %7846, align 4, !dbg !272
  %7847 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 9, !dbg !273
  %7848 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %7849 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7847, align 8, !dbg !275
  store %struct.VdbeCursor* %7849, %struct.VdbeCursor** %7848, align 8, !dbg !276
  %7850 = alloca i8*, align 8, !dbg !277
  %7851 = alloca i32, align 4, !dbg !278
  %7852 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %7848, i32* %7846), !dbg !279
  %7853 = load %struct.VdbeCursor*, %struct.VdbeCursor** %7848, align 8, !dbg !280
  %7854 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !281
  %7855 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 16, !dbg !282
  %7856 = load i16, i16* %7855, align 2, !dbg !283
  %7857 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 19, !dbg !284
  %7858 = load i32*, i32** %7857, align 8, !dbg !285
  %7859 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 0, !dbg !286
  %7860 = load i8, i8* %7859, align 1, !dbg !287
  %7861 = icmp ne i8 %7860, 3, !dbg !288
  %7862 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 2, !dbg !289
  %7863 = load i8, i8* %7862, align 1, !dbg !290
  %7864 = icmp ne i8 %7863, 0, !dbg !291
  %7865 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 14, !dbg !292
  %7866 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 21, !dbg !293
  %7867 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 22, !dbg !294
  %7868 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 20, !dbg !295
  %7869 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 17, !dbg !296
  %7870 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 9, !dbg !297
  %7871 = load i32, i32* %7870, align 4, !dbg !298
  %7872 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %7873 = load i32, i32* %7872, align 4, !dbg !300
  %7874 = icmp ne i32 %7871, %7873, !dbg !301
  br i1 %7874, label %7875, label %7917, !dbg !302

7875:                                             ; preds = %7842
  br i1 %7864, label %7897, label %7892, !dbg !303

7876:                                             ; preds = %7892, %7899
  %7877 = load i32, i32* %7872, align 4, !dbg !304
  store i32 %7877, i32* %7870, align 4, !dbg !305
  %7878 = load i8*, i8** %7868, align 8, !dbg !306
  %7879 = load i8, i8* %7878, align 1, !dbg !307
  %7880 = icmp sgt i8 %7879, -1, !dbg !310
  br i1 %7880, label %7881, label %7883, !dbg !311

7881:                                             ; preds = %7876
  %7882 = zext i8 %7879 to i32, !dbg !312
  store i32 %7882, i32* %7858, align 4, !dbg !313
  store i32 1, i32* %7865, align 4, !dbg !314
  br label %7886, !dbg !315

7883:                                             ; preds = %7876
  %7884 = call i8 @sqlite3GetVarint32(i8* %7878, i32* %7858), !dbg !316
  %7885 = zext i8 %7884 to i32, !dbg !317
  store i32 %7885, i32* %7865, align 4, !dbg !318
  br label %7886, !dbg !319

7886:                                             ; preds = %7883, %7881
  store i16 0, i16* %7869, align 2, !dbg !320
  %7887 = load i32, i32* %7867, align 4, !dbg !321
  %7888 = load i32, i32* %7858, align 4, !dbg !322
  %7889 = icmp ult i32 %7887, %7888, !dbg !323
  br i1 %7889, label %7891, label %7890, !dbg !324

7890:                                             ; preds = %7886
  store i8* %7878, i8** %7850, align 8, !dbg !325
  br label %8008, !dbg !326

7891:                                             ; preds = %7886
  store i8* null, i8** %7868, align 8, !dbg !327
  store i32 0, i32* %7867, align 4, !dbg !328
  br label %7917, !dbg !329

7892:                                             ; preds = %7875
  %7893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 12, i32 0, !dbg !330
  %7894 = load %struct.BtCursor*, %struct.BtCursor** %7893, align 8, !dbg !331
  %7895 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %7894), !dbg !332
  store i32 %7895, i32* %7866, align 4, !dbg !333
  %7896 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %7894, i32* %7867), !dbg !334
  store i8* %7896, i8** %7868, align 8, !dbg !335
  br label %7876, !dbg !336

7897:                                             ; preds = %7875
  %7898 = icmp eq i8 %7860, 3, !dbg !337
  br i1 %7898, label %7899, label %7910, !dbg !338

7899:                                             ; preds = %7897
  %7900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 10, !dbg !339
  %7901 = load i32, i32* %7900, align 4, !dbg !340
  %7902 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %7901, !dbg !341
  %7903 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7902, i32 0, i32 1, !dbg !342
  %7904 = load i16, i16* %7903, align 2, !dbg !343
  %7905 = and i16 %7904, 16, !dbg !344
  %7906 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7902, i32 0, i32 4, !dbg !345
  %7907 = load i32, i32* %7906, align 4, !dbg !346
  store i32 %7907, i32* %7866, align 4, !dbg !347
  store i32 %7907, i32* %7867, align 4, !dbg !348
  %7908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7902, i32 0, i32 5, !dbg !349
  %7909 = load i8*, i8** %7908, align 8, !dbg !350
  store i8* %7909, i8** %7868, align 8, !dbg !351
  br label %7876, !dbg !352

7910:                                             ; preds = %7897
  %7911 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 1, !dbg !353
  %7912 = load i16, i16* %7911, align 2, !dbg !353
  %7913 = and i16 %7912, 9216, !dbg !353
  %7914 = icmp ne i16 %7913, 0, !dbg !353
  br i1 %7914, label %7915, label %7916, !dbg !353

7915:                                             ; preds = %7910
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7854), !dbg !353
  br label %8096, !dbg !353

7916:                                             ; preds = %7910
  store i16 1, i16* %7911, align 2, !dbg !353
  br label %8096, !dbg !353

7917:                                             ; preds = %7891, %7842
  %7918 = load i16, i16* %7869, align 2, !dbg !354
  %7919 = icmp ule i16 %7918, 0, !dbg !355
  br i1 %7919, label %8000, label %7997, !dbg !356

7920:                                             ; preds = %7997, %8086
  %7921 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 1, !dbg !357
  %7922 = load i16, i16* %7921, align 2, !dbg !358
  %7923 = and i16 9216, %7922, !dbg !359
  %7924 = icmp eq i16 0, %7923, !dbg !360
  br i1 %7924, label %7925, label %7929, !dbg !361

7925:                                             ; preds = %7920
  %7926 = icmp ne i16 %7923, 0, !dbg !362
  br i1 %7926, label %7927, label %7928, !dbg !362

7927:                                             ; preds = %7925
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7854), !dbg !362
  br label %7929, !dbg !362

7928:                                             ; preds = %7925
  store i16 1, i16* %7921, align 2, !dbg !362
  br label %7929, !dbg !362

7929:                                             ; preds = %7927, %7928, %7920
  %7930 = load i32, i32* %7851, align 4, !dbg !363
  %7931 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 23, i32 0, !dbg !364
  %7932 = load i32, i32* %7931, align 4, !dbg !365
  %7933 = load i32, i32* %7867, align 4, !dbg !366
  %7934 = getelementptr i32, i32* %7858, i32 1, !dbg !367
  %7935 = load i32, i32* %7934, align 4, !dbg !368
  %7936 = icmp sge i32 %7933, %7935, !dbg !369
  br i1 %7936, label %7937, label %7976, !dbg !370

7937:                                             ; preds = %7929
  %7938 = load i8*, i8** %7868, align 8, !dbg !371
  %7939 = ptrtoint i8* %7938 to i64, !dbg !372
  %7940 = load i32, i32* %7858, align 4, !dbg !374
  %7941 = zext i32 %7940 to i64, !dbg !375
  %7942 = add i64 %7939, %7941, !dbg !376
  %7943 = inttoptr i64 %7942 to i8*, !dbg !377
  store i8* %7943, i8** %7850, align 8, !dbg !378
  %7944 = load i32, i32* %7851, align 4, !dbg !379
  %7945 = icmp ult i32 %7944, 12, !dbg !380
  br i1 %7945, label %7946, label %7948, !dbg !381

7946:                                             ; preds = %7937
  %7947 = call i32 @sqlite3VdbeSerialGet(i8* %7943, i32 %7944, %struct.sqlite3_value* %7854), !dbg !382
  br label %8096, !dbg !383

7948:                                             ; preds = %7937
  %7949 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %7949, align 2, !dbg !385
  %7950 = getelementptr i16, i16* %7949, i32 1, !dbg !386
  store i16 514, i16* %7950, align 2, !dbg !387
  %7951 = load i32, i32* %7851, align 4, !dbg !388
  %7952 = sub i32 %7951, 12, !dbg !389
  %7953 = lshr i32 %7952, 1, !dbg !390
  %7954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 4, !dbg !391
  store i32 %7953, i32* %7954, align 4, !dbg !392
  %7955 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 2, !dbg !393
  store i8 %7845, i8* %7955, align 1, !dbg !394
  %7956 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 5, !dbg !395
  %7957 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 7, !dbg !396
  %7958 = load i32, i32* %7957, align 4, !dbg !397
  %7959 = add i32 %7953, 2, !dbg !398
  %7960 = icmp slt i32 %7958, %7959, !dbg !399
  br i1 %7960, label %7961, label %7963, !dbg !400

7961:                                             ; preds = %7948
  store i16 1, i16* %7921, align 2, !dbg !401
  %7962 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %7854, i32 %7959, i32 0), !dbg !402
  br label %7966, !dbg !403

7963:                                             ; preds = %7948
  %7964 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 6, !dbg !404
  %7965 = load i8*, i8** %7964, align 8, !dbg !405
  store i8* %7965, i8** %7956, align 8, !dbg !406
  br label %7966, !dbg !407

7966:                                             ; preds = %7963, %7961
  %7967 = zext i32 %7953 to i64, !dbg !408
  %7968 = load i8*, i8** %7956, align 8, !dbg !409
  %7969 = load i8*, i8** %7850, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7968, i8* %7969, i64 %7967, i1 false), !dbg !411
  %7970 = getelementptr i8, i8* %7968, i32 %7953, !dbg !412
  store i8 0, i8* %7970, align 1, !dbg !413
  %7971 = add i32 %7953, 1, !dbg !414
  %7972 = getelementptr i8, i8* %7968, i32 %7971, !dbg !415
  store i8 0, i8* %7972, align 1, !dbg !416
  %7973 = and i32 %7951, 1, !dbg !417
  %7974 = getelementptr i16, i16* %7949, i32 %7973, !dbg !418
  %7975 = load i16, i16* %7974, align 2, !dbg !419
  store i16 %7975, i16* %7921, align 2, !dbg !420
  br label %8096, !dbg !421

7976:                                             ; preds = %7929
  %7977 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 2, !dbg !422
  store i8 %7845, i8* %7977, align 1, !dbg !423
  %7978 = load i32, i32* %7851, align 4, !dbg !424
  %7979 = and i32 %7978, 1, !dbg !425
  %7980 = icmp eq i32 %7979, 0, !dbg !426
  %7981 = icmp sge i32 %7978, 12, !dbg !427
  %7982 = and i1 %7981, %7980, !dbg !428
  %7983 = call i32 @sqlite3VdbeSerialTypeLen(i32 %7978), !dbg !429
  %7984 = icmp eq i32 %7983, 0, !dbg !430
  br i1 %7984, label %7995, label %7985, !dbg !431

7985:                                             ; preds = %7976
  %7986 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 12, i32 0, !dbg !432
  %7987 = load %struct.BtCursor*, %struct.BtCursor** %7986, align 8, !dbg !433
  %7988 = load i32, i32* %7858, align 4, !dbg !435
  %7989 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %7987, i32 %7988, i32 %7983, %struct.sqlite3_value* %7854), !dbg !436
  %7990 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 5, !dbg !437
  %7991 = load i8*, i8** %7990, align 8, !dbg !438
  %7992 = call i32 @sqlite3VdbeSerialGet(i8* %7991, i32 %7978, %struct.sqlite3_value* %7854), !dbg !439
  %7993 = load i16, i16* %7921, align 2, !dbg !440
  %7994 = and i16 %7993, -4097, !dbg !441
  store i16 %7994, i16* %7921, align 2, !dbg !442
  br label %8096, !dbg !443

7995:                                             ; preds = %7976
  %7996 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %7978, %struct.sqlite3_value* %7854), !dbg !444
  br label %8096, !dbg !445

7997:                                             ; preds = %7917
  %7998 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 23, i32 0, !dbg !446
  %7999 = load i32, i32* %7998, align 4, !dbg !447
  store i32 %7999, i32* %7851, align 4, !dbg !448
  br label %7920, !dbg !449

8000:                                             ; preds = %7917
  %8001 = load i32, i32* %7865, align 4, !dbg !450
  %8002 = load i32, i32* %7858, align 4, !dbg !451
  %8003 = icmp ult i32 %8001, %8002, !dbg !452
  br i1 %8003, label %8004, label %8085, !dbg !453

8004:                                             ; preds = %8000
  %8005 = load i8*, i8** %7868, align 8, !dbg !454
  %8006 = icmp eq i8* %8005, null, !dbg !455
  br i1 %8006, label %8008, label %8007, !dbg !456

8007:                                             ; preds = %8004
  store i8* %8005, i8** %7850, align 8, !dbg !457
  br label %8008, !dbg !458

8008:                                             ; preds = %8007, %8004, %7890
  %8009 = alloca i32, align 4, !dbg !459
  %8010 = load i16, i16* %7869, align 2, !dbg !460
  %8011 = zext i16 %8010 to i32, !dbg !461
  store i32 %8011, i32* %8009, align 4, !dbg !462
  %8012 = alloca i64, align 8, !dbg !463
  %8013 = getelementptr i32, i32* %7858, i32 %8011, !dbg !464
  %8014 = load i32, i32* %8013, align 4, !dbg !465
  %8015 = zext i32 %8014 to i64, !dbg !466
  store i64 %8015, i64* %8012, align 4, !dbg !467
  %8016 = load i8*, i8** %7850, align 8, !dbg !468
  %8017 = load i32, i32* %7865, align 4, !dbg !469
  %8018 = alloca i8*, align 8, !dbg !470
  %8019 = getelementptr i8, i8* %8016, i32 %8017, !dbg !471
  store i8* %8019, i8** %8018, align 8, !dbg !472
  %8020 = load i32, i32* %7858, align 4, !dbg !473
  %8021 = getelementptr i8, i8* %8016, i32 %8020, !dbg !474
  br label %8022, !dbg !475

8022:                                             ; preds = %8029, %8008
  %8023 = load i32, i32* %8009, align 4, !dbg !476
  %8024 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %7853, i32 0, i32 23, i32 %8023, !dbg !477
  %8025 = load i8*, i8** %8018, align 8, !dbg !478
  %8026 = load i8, i8* %8025, align 1, !dbg !479
  %8027 = zext i8 %8026 to i32, !dbg !480
  store i32 %8027, i32* %7851, align 4, !dbg !481
  store i32 %8027, i32* %8024, align 4, !dbg !482
  %8028 = icmp sgt i8 %8026, -1, !dbg !483
  br i1 %8028, label %8052, label %8043, !dbg !484

8029:                                             ; preds = %8043, %8052
  %8030 = load i32, i32* %8009, align 4, !dbg !485
  %8031 = add i32 %8030, 1, !dbg !486
  store i32 %8031, i32* %8009, align 4, !dbg !487
  %8032 = load i64, i64* %8012, align 4, !dbg !488
  %8033 = and i64 4294967295, %8032, !dbg !489
  %8034 = trunc i64 %8033 to i32, !dbg !490
  %8035 = getelementptr i32, i32* %7858, i32 %8031, !dbg !491
  store i32 %8034, i32* %8035, align 4, !dbg !492
  %8036 = load i32, i32* %8009, align 4, !dbg !493
  %8037 = icmp sle i32 %8036, 0, !dbg !494
  %8038 = load i8*, i8** %8018, align 8, !dbg !495
  %8039 = ptrtoint i8* %8038 to i64, !dbg !496
  %8040 = ptrtoint i8* %8021 to i64, !dbg !497
  %8041 = icmp ult i64 %8039, %8040, !dbg !498
  %8042 = and i1 %8037, %8041, !dbg !499
  br i1 %8042, label %8022, label %8061, !dbg !500

8043:                                             ; preds = %8022
  %8044 = load i8*, i8** %8018, align 8, !dbg !501
  %8045 = call i8 @sqlite3GetVarint32(i8* %8044, i32* %7851), !dbg !502
  %8046 = getelementptr i8, i8* %8044, i8 %8045, !dbg !503
  store i8* %8046, i8** %8018, align 8, !dbg !504
  %8047 = load i32, i32* %7851, align 4, !dbg !505
  store i32 %8047, i32* %8024, align 4, !dbg !506
  %8048 = load i64, i64* %8012, align 4, !dbg !507
  %8049 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8047), !dbg !508
  %8050 = zext i32 %8049 to i64, !dbg !509
  %8051 = add i64 %8048, %8050, !dbg !510
  store i64 %8051, i64* %8012, align 4, !dbg !511
  br label %8029, !dbg !512

8052:                                             ; preds = %8022
  %8053 = getelementptr i8, i8* %8025, i32 1, !dbg !513
  store i8* %8053, i8** %8018, align 8, !dbg !514
  %8054 = load i32, i32* %7851, align 4, !dbg !515
  %8055 = trunc i32 %8054 to i8, !dbg !516
  %8056 = getelementptr i8, i8* %4, i8 %8055, !dbg !517
  %8057 = load i8, i8* %8056, align 1, !dbg !518
  %8058 = zext i8 %8057 to i64, !dbg !519
  %8059 = load i64, i64* %8012, align 4, !dbg !520
  %8060 = add i64 %8059, %8058, !dbg !521
  store i64 %8060, i64* %8012, align 4, !dbg !522
  br label %8029, !dbg !523

8061:                                             ; preds = %8029
  %8062 = load i64, i64* %8012, align 4, !dbg !524
  %8063 = load i32, i32* %7866, align 4, !dbg !525
  %8064 = zext i32 %8063 to i64, !dbg !526
  %8065 = icmp uge i64 %8039, %8040, !dbg !527
  %8066 = icmp ugt i64 %8039, %8040, !dbg !528
  %8067 = icmp ne i64 %8062, %8064, !dbg !529
  %8068 = icmp ugt i64 %8062, %8064, !dbg !530
  %8069 = or i1 %8066, %8067, !dbg !531
  %8070 = and i1 %8065, %8069, !dbg !532
  %8071 = or i1 %8070, %8068, !dbg !533
  br i1 %8071, label %8072, label %8076, !dbg !534

8072:                                             ; preds = %8061
  %8073 = load i32, i32* %7858, align 4, !dbg !535
  %8074 = icmp eq i32 %8073, 0, !dbg !536
  br i1 %8074, label %8075, label %8076, !dbg !537

8075:                                             ; preds = %8072
  store i32 0, i32* %8009, align 4, !dbg !538
  store i8* %8021, i8** %8018, align 8, !dbg !539
  br label %8076, !dbg !540

8076:                                             ; preds = %8075, %8072, %8061
  %8077 = load i32, i32* %8009, align 4, !dbg !541
  %8078 = trunc i32 %8077 to i16, !dbg !542
  store i16 %8078, i16* %7869, align 2, !dbg !543
  %8079 = load i8*, i8** %8018, align 8, !dbg !544
  %8080 = ptrtoint i8* %8079 to i64, !dbg !545
  %8081 = load i8*, i8** %7850, align 8, !dbg !546
  %8082 = ptrtoint i8* %8081 to i64, !dbg !547
  %8083 = sub i64 %8080, %8082, !dbg !548
  %8084 = trunc i64 %8083 to i32, !dbg !549
  store i32 %8084, i32* %7865, align 4, !dbg !550
  br label %8086, !dbg !551

8085:                                             ; preds = %8000
  store i32 0, i32* %7851, align 4, !dbg !552
  br label %8086, !dbg !553

8086:                                             ; preds = %8076, %8085
  %8087 = load i16, i16* %7869, align 2, !dbg !554
  %8088 = icmp sle i16 %8087, 0, !dbg !555
  br i1 %8088, label %8089, label %7920, !dbg !556

8089:                                             ; preds = %8086
  %8090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7854, i32 0, i32 1, !dbg !557
  %8091 = load i16, i16* %8090, align 2, !dbg !557
  %8092 = and i16 %8091, 9216, !dbg !557
  %8093 = icmp ne i16 %8092, 0, !dbg !557
  br i1 %8093, label %8094, label %8095, !dbg !557

8094:                                             ; preds = %8089
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %7854), !dbg !557
  br label %8096, !dbg !557

8095:                                             ; preds = %8089
  store i16 1, i16* %8090, align 2, !dbg !557
  br label %8096, !dbg !557

8096:                                             ; preds = %8094, %8095, %7966, %7946, %7985, %7995, %7915, %7916
  call void @llvm.stackrestore(i8* %7843), !dbg !558
  br label %8097, !dbg !75

8097:                                             ; preds = %18, %8096, %7838
  %8098 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 119, !dbg !63
  %8099 = call i8* @llvm.stacksave(), !dbg !66
  %8100 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8098, i32 0, i32 4, !dbg !67
  %8101 = load i32, i32* %8100, align 4, !dbg !70
  %8102 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8101, !dbg !71
  %8103 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8102, i32 0, i32 1, !dbg !66
  %8104 = load i16, i16* %8103, align 2, !dbg !66
  %8105 = and i16 %8104, 9216, !dbg !66
  %8106 = icmp ne i16 %8105, 0, !dbg !66
  %8107 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %8106, label %8108, label %8110, !dbg !66

8108:                                             ; preds = %8097
  %8109 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8102), !dbg !66
  store %struct.sqlite3_value* %8109, %struct.sqlite3_value** %8107, align 8, !dbg !66
  br label %8111, !dbg !66

8110:                                             ; preds = %8097
  store i16 4, i16* %8103, align 2, !dbg !66
  store %struct.sqlite3_value* %8102, %struct.sqlite3_value** %8107, align 8, !dbg !66
  br label %8111, !dbg !66

8111:                                             ; preds = %8110, %8108
  %8112 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8107, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %8099), !dbg !66
  %8113 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8112, i32 0, i32 0, i32 0, !dbg !72
  %8114 = bitcast double* %8113 to i64*, !dbg !73
  store i64 1, i64* %8114, align 4, !dbg !74
  br label %8115, !dbg !75

8115:                                             ; preds = %18, %8111
  %8116 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 8, !dbg !1187
  %8117 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8116, align 8, !dbg !1190
  %8118 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %8117), !dbg !1191
  %8119 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8117, i32 0, i32 9, !dbg !1192
  store i32 0, i32* %8119, align 4, !dbg !1193
  %8120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8117, i32 0, i32 2, !dbg !1194
  %8121 = icmp eq i32 %8118, 0, !dbg !1195
  br i1 %8121, label %8122, label %8123, !dbg !1196

8122:                                             ; preds = %8115
  store i8 0, i8* %8120, align 1, !dbg !1197
  br label %6743, !dbg !1198

8123:                                             ; preds = %8115
  store i8 1, i8* %8120, align 1, !dbg !1199
  br label %8124, !dbg !1200

8124:                                             ; preds = %18, %8123
  %8125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !199
  %8126 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8125, i32 0, i32 1, !dbg !202
  store i16 4, i16* %8126, align 2, !dbg !203
  %8127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8125, i32 0, i32 0, i32 0, !dbg !204
  %8128 = bitcast double* %8127 to i64*, !dbg !205
  store i64 121, i64* %8128, align 4, !dbg !206
  br label %8154, !dbg !207

8129:                                             ; preds = %18
  %8130 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 123, !dbg !63
  %8131 = call i8* @llvm.stacksave(), !dbg !66
  %8132 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8130, i32 0, i32 4, !dbg !67
  %8133 = load i32, i32* %8132, align 4, !dbg !70
  %8134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8133, !dbg !71
  %8135 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8134, i32 0, i32 1, !dbg !66
  %8136 = load i16, i16* %8135, align 2, !dbg !66
  %8137 = and i16 %8136, 9216, !dbg !66
  %8138 = icmp ne i16 %8137, 0, !dbg !66
  %8139 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %8138, label %8140, label %8142, !dbg !66

8140:                                             ; preds = %8129
  %8141 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8134), !dbg !66
  store %struct.sqlite3_value* %8141, %struct.sqlite3_value** %8139, align 8, !dbg !66
  br label %8143, !dbg !66

8142:                                             ; preds = %8129
  store i16 4, i16* %8135, align 2, !dbg !66
  store %struct.sqlite3_value* %8134, %struct.sqlite3_value** %8139, align 8, !dbg !66
  br label %8143, !dbg !66

8143:                                             ; preds = %8142, %8140
  %8144 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8139, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %8131), !dbg !66
  %8145 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8144, i32 0, i32 0, i32 0, !dbg !72
  %8146 = bitcast double* %8145 to i64*, !dbg !73
  store i64 1, i64* %8146, align 4, !dbg !74
  br label %8147, !dbg !75

8147:                                             ; preds = %18, %8143
  %8148 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !1201
  %8149 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8148, i32 0, i32 0, i32 0, !dbg !1204
  %8150 = bitcast double* %8149 to i64*, !dbg !1205
  %8151 = load i64, i64* %8150, align 4, !dbg !1206
  %8152 = add i64 %8151, 1, !dbg !1207
  %8153 = trunc i64 %8152 to i32, !dbg !1208
  store i32 %8153, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

8154:                                             ; preds = %18, %8124, %7052
  %8155 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 37, !dbg !994
  %8156 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8155, i32 0, i32 0, i32 0, !dbg !997
  %8157 = bitcast double* %8156 to i64*, !dbg !998
  %8158 = load i64, i64* %8157, align 4, !dbg !999
  %8159 = icmp sgt i64 %8158, 0, !dbg !1000
  br i1 %8159, label %8160, label %.critedge4, !dbg !1001

8160:                                             ; preds = %8154
  br label %8167, !dbg !1002

.critedge4:                                       ; preds = %8154, %18
  %8161 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !1201
  %8162 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8161, i32 0, i32 0, i32 0, !dbg !1204
  %8163 = bitcast double* %8162 to i64*, !dbg !1205
  %8164 = load i64, i64* %8163, align 4, !dbg !1206
  %8165 = add i64 %8164, 1, !dbg !1207
  %8166 = trunc i64 %8165 to i32, !dbg !1208
  store i32 %8166, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

8167:                                             ; preds = %8160, %18
  %8168 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 127, !dbg !1211
  %8169 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8168, i32 0, i32 6, !dbg !1214
  %8170 = bitcast %union.p4union* %8169 to %struct.FuncDef**, !dbg !1215
  %8171 = load %struct.FuncDef*, %struct.FuncDef** %8170, align 8, !dbg !1216
  %8172 = call i8* @llvm.stacksave(), !dbg !1217
  %8173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !1218
  %8174 = alloca i32, align 8, !dbg !1219
  %8175 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %8173, %struct.FuncDef* %8171), !dbg !1220
  store i32 %8175, i32* %8174, align 4, !dbg !1221
  %8176 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %8173, i32 1), !dbg !1222
  %8177 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %8173), !dbg !1223
  call void @llvm.stackrestore(i8* %8172), !dbg !1224
  br label %8178, !dbg !75

8178:                                             ; preds = %18, %8167
  %8179 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 33, !dbg !1378
  %8180 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 56, !dbg !1381
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8180, %struct.sqlite3_value* %8179, i32 4096), !dbg !1382
  %8181 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 34, !dbg !1378
  %8182 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 57, !dbg !1381
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8182, %struct.sqlite3_value* %8181, i32 4096), !dbg !1382
  br label %8183, !dbg !75

8183:                                             ; preds = %18, %8178
  %8184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1383
  %8185 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8184, i32 0, i32 1, !dbg !1386
  store i16 4, i16* %8185, align 2, !dbg !1387
  %8186 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8184, i32 0, i32 0, !dbg !1388
  %8187 = bitcast %union.MemValue* %8186 to i64*, !dbg !1389
  %8188 = load i64, i64* %8187, align 4, !dbg !1390
  %8189 = add i64 %8188, 1, !dbg !1391
  store i64 129, i64* %8187, align 4, !dbg !1392
  %8190 = trunc i64 %8189 to i32, !dbg !1393
  store i32 %8190, i32* %15, align 4, !dbg !1394
  br label %14, !dbg !1395

8191:                                             ; preds = %18
  %8192 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 39, !dbg !1201
  %8193 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8192, i32 0, i32 0, i32 0, !dbg !1204
  %8194 = bitcast double* %8193 to i64*, !dbg !1205
  %8195 = load i64, i64* %8194, align 4, !dbg !1206
  %8196 = add i64 %8195, 1, !dbg !1207
  %8197 = trunc i64 %8196 to i32, !dbg !1208
  store i32 %8197, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

8198:                                             ; preds = %18, %.critedge3, %4632
  %8199 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 131, !dbg !191
  %8200 = call i8* @llvm.stacksave(), !dbg !194
  %8201 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8199, i32 0, i32 4, !dbg !67
  %8202 = load i32, i32* %8201, align 4, !dbg !70
  %8203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8202, !dbg !71
  %8204 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8203, i32 0, i32 1, !dbg !194
  %8205 = load i16, i16* %8204, align 2, !dbg !194
  %8206 = and i16 %8205, 9216, !dbg !194
  %8207 = icmp ne i16 %8206, 0, !dbg !194
  %8208 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %8207, label %8209, label %8211, !dbg !194

8209:                                             ; preds = %8198
  %8210 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8203), !dbg !194
  store %struct.sqlite3_value* %8210, %struct.sqlite3_value** %8208, align 8, !dbg !194
  br label %8212, !dbg !194

8211:                                             ; preds = %8198
  store i16 4, i16* %8204, align 2, !dbg !194
  store %struct.sqlite3_value* %8203, %struct.sqlite3_value** %8208, align 8, !dbg !194
  br label %8212, !dbg !194

8212:                                             ; preds = %8211, %8209
  %8213 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8208, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %8200), !dbg !194
  %8214 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8213, i32 0, i32 1, !dbg !195
  store i16 1, i16* %8214, align 2, !dbg !196
  %8215 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8213, i32 0, i32 4, !dbg !197
  store i32 0, i32* %8215, align 4, !dbg !198
  %8216 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8213, i32 1, !dbg !1363
  %8217 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8216, i32 0, i32 1, !dbg !1364
  %8218 = load i16, i16* %8217, align 2, !dbg !1364
  %8219 = and i16 %8218, 9216, !dbg !1364
  %8220 = icmp ne i16 %8219, 0, !dbg !1364
  br i1 %8220, label %8221, label %8222, !dbg !1364

8221:                                             ; preds = %8212
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8216), !dbg !1364
  br label %8223, !dbg !1364

8222:                                             ; preds = %8212
  store i16 1, i16* %8217, align 2, !dbg !1364
  br label %8223, !dbg !1364

8223:                                             ; preds = %8222, %8221
  store i16 1, i16* %8217, align 2, !dbg !1365
  %8224 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8216, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %8224, align 4, !dbg !1367
  %8225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8216, i32 1, !dbg !1363
  %8226 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8225, i32 0, i32 1, !dbg !1364
  %8227 = load i16, i16* %8226, align 2, !dbg !1364
  %8228 = and i16 %8227, 9216, !dbg !1364
  %8229 = icmp ne i16 %8228, 0, !dbg !1364
  br i1 %8229, label %8230, label %8231, !dbg !1364

8230:                                             ; preds = %8223
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8225), !dbg !1364
  br label %8232, !dbg !1364

8231:                                             ; preds = %8223
  store i16 1, i16* %8226, align 2, !dbg !1364
  br label %8232, !dbg !1364

8232:                                             ; preds = %8231, %8230
  store i16 1, i16* %8226, align 2, !dbg !1365
  %8233 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8225, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %8233, align 4, !dbg !1367
  %8234 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8225, i32 1, !dbg !1363
  %8235 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8234, i32 0, i32 1, !dbg !1364
  %8236 = load i16, i16* %8235, align 2, !dbg !1364
  %8237 = and i16 %8236, 9216, !dbg !1364
  %8238 = icmp ne i16 %8237, 0, !dbg !1364
  br i1 %8238, label %8239, label %8240, !dbg !1364

8239:                                             ; preds = %8232
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8234), !dbg !1364
  br label %8241, !dbg !1364

8240:                                             ; preds = %8232
  store i16 1, i16* %8235, align 2, !dbg !1364
  br label %8241, !dbg !1364

8241:                                             ; preds = %8240, %8239
  store i16 1, i16* %8235, align 2, !dbg !1365
  %8242 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8234, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %8242, align 4, !dbg !1367
  br label %8243, !dbg !75

8243:                                             ; preds = %18, %8241
  %8244 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 132, !dbg !63
  %8245 = call i8* @llvm.stacksave(), !dbg !66
  %8246 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8244, i32 0, i32 4, !dbg !67
  %8247 = load i32, i32* %8246, align 4, !dbg !70
  %8248 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8247, !dbg !71
  %8249 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8248, i32 0, i32 1, !dbg !66
  %8250 = load i16, i16* %8249, align 2, !dbg !66
  %8251 = and i16 %8250, 9216, !dbg !66
  %8252 = icmp ne i16 %8251, 0, !dbg !66
  %8253 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %8252, label %8254, label %8256, !dbg !66

8254:                                             ; preds = %8243
  %8255 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8248), !dbg !66
  store %struct.sqlite3_value* %8255, %struct.sqlite3_value** %8253, align 8, !dbg !66
  br label %8257, !dbg !66

8256:                                             ; preds = %8243
  store i16 4, i16* %8249, align 2, !dbg !66
  store %struct.sqlite3_value* %8248, %struct.sqlite3_value** %8253, align 8, !dbg !66
  br label %8257, !dbg !66

8257:                                             ; preds = %8256, %8254
  %8258 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8253, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %8245), !dbg !66
  %8259 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8258, i32 0, i32 0, i32 0, !dbg !72
  %8260 = bitcast double* %8259 to i64*, !dbg !73
  store i64 0, i64* %8260, align 4, !dbg !74
  br label %8261, !dbg !75

8261:                                             ; preds = %18, %8257
  %8262 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 40, !dbg !1201
  %8263 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8262, i32 0, i32 0, i32 0, !dbg !1204
  %8264 = bitcast double* %8263 to i64*, !dbg !1205
  %8265 = load i64, i64* %8264, align 4, !dbg !1206
  %8266 = add i64 %8265, 1, !dbg !1207
  %8267 = trunc i64 %8266 to i32, !dbg !1208
  store i32 %8267, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

8268:                                             ; preds = %7063, %18, %18, %6737
  %8269 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1396
  %8270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8269, i32 0, i32 0, !dbg !1399
  %8271 = bitcast %union.MemValue* %8270 to i64*, !dbg !1400
  %8272 = load i64, i64* %8271, align 4, !dbg !1401
  %8273 = trunc i64 %8272 to i32, !dbg !1402
  %8274 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 %8273, !dbg !1403
  %8275 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8274, i32 0, i32 4, !dbg !1404
  %8276 = load i32, i32* %8275, align 4, !dbg !1405
  store i32 %8276, i32* %15, align 4, !dbg !1406
  %8277 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8269, i32 0, i32 1, !dbg !1407
  store i16 128, i16* %8277, align 2, !dbg !1408
  br label %14, !dbg !1409

8278:                                             ; preds = %18, %4582
  %8279 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 135, !dbg !63
  %8280 = call i8* @llvm.stacksave(), !dbg !66
  %8281 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8279, i32 0, i32 4, !dbg !67
  %8282 = load i32, i32* %8281, align 4, !dbg !70
  %8283 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8282, !dbg !71
  %8284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8283, i32 0, i32 1, !dbg !66
  %8285 = load i16, i16* %8284, align 2, !dbg !66
  %8286 = and i16 %8285, 9216, !dbg !66
  %8287 = icmp ne i16 %8286, 0, !dbg !66
  %8288 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %8287, label %8289, label %8291, !dbg !66

8289:                                             ; preds = %8278
  %8290 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8283), !dbg !66
  store %struct.sqlite3_value* %8290, %struct.sqlite3_value** %8288, align 8, !dbg !66
  br label %8292, !dbg !66

8291:                                             ; preds = %8278
  store i16 4, i16* %8284, align 2, !dbg !66
  store %struct.sqlite3_value* %8283, %struct.sqlite3_value** %8288, align 8, !dbg !66
  br label %8292, !dbg !66

8292:                                             ; preds = %8291, %8289
  %8293 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8288, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %8280), !dbg !66
  %8294 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8293, i32 0, i32 0, i32 0, !dbg !72
  %8295 = bitcast double* %8294 to i64*, !dbg !73
  store i64 1, i64* %8295, align 4, !dbg !74
  br label %8296, !dbg !75

8296:                                             ; preds = %19, %8292
  %8297 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 136, !dbg !191
  %8298 = call i8* @llvm.stacksave(), !dbg !194
  %8299 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8297, i32 0, i32 4, !dbg !67
  %8300 = load i32, i32* %8299, align 4, !dbg !70
  %8301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8300, !dbg !71
  %8302 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8301, i32 0, i32 1, !dbg !194
  %8303 = load i16, i16* %8302, align 2, !dbg !194
  %8304 = and i16 %8303, 9216, !dbg !194
  %8305 = icmp ne i16 %8304, 0, !dbg !194
  %8306 = alloca %struct.sqlite3_value*, align 8, !dbg !194
  br i1 %8305, label %8307, label %8309, !dbg !194

8307:                                             ; preds = %8296
  %8308 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %8301), !dbg !194
  store %struct.sqlite3_value* %8308, %struct.sqlite3_value** %8306, align 8, !dbg !194
  br label %8310, !dbg !194

8309:                                             ; preds = %8296
  store i16 4, i16* %8302, align 2, !dbg !194
  store %struct.sqlite3_value* %8301, %struct.sqlite3_value** %8306, align 8, !dbg !194
  br label %8310, !dbg !194

8310:                                             ; preds = %8309, %8307
  %8311 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8306, align 8, !dbg !194
  call void @llvm.stackrestore(i8* %8298), !dbg !194
  %8312 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8311, i32 0, i32 1, !dbg !195
  store i16 1, i16* %8312, align 2, !dbg !196
  %8313 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8311, i32 0, i32 4, !dbg !197
  store i32 0, i32* %8313, align 4, !dbg !198
  %8314 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8311, i32 1, !dbg !1363
  %8315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8314, i32 0, i32 1, !dbg !1364
  %8316 = load i16, i16* %8315, align 2, !dbg !1364
  %8317 = and i16 %8316, 9216, !dbg !1364
  %8318 = icmp ne i16 %8317, 0, !dbg !1364
  br i1 %8318, label %8319, label %8320, !dbg !1364

8319:                                             ; preds = %8310
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8314), !dbg !1364
  br label %8321, !dbg !1364

8320:                                             ; preds = %8310
  store i16 1, i16* %8315, align 2, !dbg !1364
  br label %8321, !dbg !1364

8321:                                             ; preds = %8320, %8319
  store i16 1, i16* %8315, align 2, !dbg !1365
  %8322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8314, i32 0, i32 4, !dbg !1366
  store i32 0, i32* %8322, align 4, !dbg !1367
  br label %8323, !dbg !75

8323:                                             ; preds = %19, %8321
  %8324 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1369
  %8325 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 0, !dbg !1372
  %8326 = bitcast %union.MemValue* %8325 to i64*, !dbg !1373
  store i64 74, i64* %8326, align 4, !dbg !1374
  %8327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8324, i32 0, i32 1, !dbg !1375
  store i16 4, i16* %8327, align 2, !dbg !1376
  br label %8328, !dbg !1377

8328:                                             ; preds = %8428, %19, %19, %8323
  %8329 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 32, !dbg !1383
  %8330 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8329, i32 0, i32 1, !dbg !1386
  store i16 4, i16* %8330, align 2, !dbg !1387
  %8331 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8329, i32 0, i32 0, !dbg !1388
  %8332 = bitcast %union.MemValue* %8331 to i64*, !dbg !1389
  %8333 = load i64, i64* %8332, align 4, !dbg !1390
  %8334 = add i64 %8333, 1, !dbg !1391
  store i64 138, i64* %8332, align 4, !dbg !1392
  %8335 = trunc i64 %8334 to i32, !dbg !1393
  store i32 %8335, i32* %15, align 4, !dbg !1394
  br label %14, !dbg !1395

8336:                                             ; preds = %19
  %8337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 57, !dbg !1378
  %8338 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 61, !dbg !1381
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8338, %struct.sqlite3_value* %8337, i32 4096), !dbg !1382
  br label %8339, !dbg !75

8339:                                             ; preds = %19, %8336
  %8340 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 140, !dbg !1410
  %8341 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8340, i32 0, i32 3, !dbg !1413
  %8342 = load i32, i32* %8341, align 4, !dbg !1414
  %8343 = icmp ne i32 %8342, 0, !dbg !1415
  br i1 %8343, label %8344, label %8346, !dbg !1416

8344:                                             ; preds = %8339
  %8345 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8342, !dbg !1417
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %8345, i64 0), !dbg !1418
  br label %8346, !dbg !1419

8346:                                             ; preds = %8344, %8339, %19
  %8347 = call i8* @llvm.stacksave(), !dbg !1068
  %8348 = alloca i32, align 8, !dbg !1071
  store i32 0, i32* %8348, align 4, !dbg !1072
  %8349 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 141, i32 1, !dbg !1073
  %8350 = load i8, i8* %8349, align 1, !dbg !1074
  %8351 = icmp eq i8 %8350, -8, !dbg !1075
  br i1 %8351, label %8352, label %8374, !dbg !1076

8352:                                             ; preds = %8346
  %8353 = alloca %struct.sqlite3_context*, align 8, !dbg !1077
  %8354 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1078
  %8355 = bitcast i8* %8354 to %struct.sqlite3_context*, !dbg !1079
  store %struct.sqlite3_context* %8355, %struct.sqlite3_context** %8353, align 8, !dbg !1080
  %8356 = ptrtoint %struct.sqlite3_context* %8355 to i64, !dbg !1081
  %8357 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 0, !dbg !1082
  %8358 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 1, !dbg !1083
  %8359 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 2, !dbg !1084
  %8360 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 3, !dbg !1085
  %8361 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 4, !dbg !1086
  %8362 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 5, !dbg !1087
  %8363 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 6, !dbg !1088
  %8364 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 7, !dbg !1089
  %8365 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8355, i32 0, i32 8, !dbg !1090
  %8366 = bitcast [1 x %struct.sqlite3_value*]* %8365 to %struct.sqlite3_value**, !dbg !1091
  %8367 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 141, i32 6, i32 0, !dbg !1092
  %8368 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %8366, i32 1, !dbg !1093
  %8369 = bitcast %struct.sqlite3_value** %8368 to %struct.sqlite3_value*, !dbg !1094
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %8369, %struct.sqlite3* %13, i16 1), !dbg !1095
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %8359, align 8, !dbg !1096
  store %struct.sqlite3_value* %8369, %struct.sqlite3_value** %8357, align 8, !dbg !1097
  %8370 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 141, !dbg !1098
  %8371 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8370, i32 0, i32 6, !dbg !1099
  %8372 = bitcast %union.p4union* %8371 to %struct.FuncDef**, !dbg !1100
  %8373 = load %struct.FuncDef*, %struct.FuncDef** %8372, align 8, !dbg !1101
  store %struct.FuncDef* %8373, %struct.FuncDef** %8358, align 8, !dbg !1102
  store i32 141, i32* %8361, align 4, !dbg !1103
  store %struct.Vdbe* %0, %struct.Vdbe** %8360, align 8, !dbg !1104
  store i8 0, i8* %8363, align 1, !dbg !1105
  store i32 0, i32* %8362, align 4, !dbg !1106
  store i8 1, i8* %8364, align 1, !dbg !1107
  store i8 -16, i8* %8349, align 1, !dbg !1108
  store i8* %8354, i8** %8367, align 8, !dbg !1109
  br label %8374, !dbg !1110

8374:                                             ; preds = %8352, %8346
  %8375 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 141, i32 6, i32 0, !dbg !1111
  %8376 = bitcast i8** %8375 to %struct.sqlite3_context**, !dbg !1112
  %8377 = load %struct.sqlite3_context*, %struct.sqlite3_context** %8376, align 8, !dbg !1113
  %8378 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 0, !dbg !1114
  %8379 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 1, !dbg !1115
  %8380 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 5, !dbg !1116
  %8381 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 6, !dbg !1117
  %8382 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 7, !dbg !1118
  %8383 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 8, !dbg !1119
  %8384 = bitcast [1 x %struct.sqlite3_value*]* %8383 to %struct.sqlite3_value**, !dbg !1120
  %8385 = alloca i32, align 8, !dbg !1121
  %8386 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 59, !dbg !1122
  %8387 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %8377, i32 0, i32 2, !dbg !1123
  %8388 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8387, align 8, !dbg !1124
  %8389 = icmp ne %struct.sqlite3_value* %8388, %8386, !dbg !1125
  br i1 %8389, label %8390, label %8403, !dbg !1126

8390:                                             ; preds = %8374
  store %struct.sqlite3_value* %8386, %struct.sqlite3_value** %8387, align 8, !dbg !1127
  %8391 = load i8, i8* %8382, align 1, !dbg !1128
  %8392 = zext i8 %8391 to i32, !dbg !1129
  %8393 = add i32 %8392, -1, !dbg !1130
  %8394 = alloca i32, align 8, !dbg !1131
  store i32 %8393, i32* %8394, align 4, !dbg !1132
  br label %8400, !dbg !1133

8395:                                             ; preds = %8400
  %8396 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %8384, i32 %8401, !dbg !1134
  %8397 = add i32 %8401, 61, !dbg !1135
  %8398 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8397, !dbg !1136
  store %struct.sqlite3_value* %8398, %struct.sqlite3_value** %8396, align 8, !dbg !1137
  %8399 = add i32 %8401, -1, !dbg !1138
  store i32 %8399, i32* %8394, align 4, !dbg !1139
  br label %8400, !dbg !1140

8400:                                             ; preds = %8395, %8390
  %8401 = load i32, i32* %8394, align 4, !dbg !1141
  %8402 = icmp sge i32 %8401, 0, !dbg !1142
  br i1 %8402, label %8395, label %8403, !dbg !1143

8403:                                             ; preds = %8400, %8374
  %8404 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8386, i32 0, i32 4, !dbg !1144
  %8405 = load i32, i32* %8404, align 4, !dbg !1145
  %8406 = add i32 %8405, 1, !dbg !1146
  store i32 %8406, i32* %8404, align 4, !dbg !1147
  %8407 = load %struct.FuncDef*, %struct.FuncDef** %8379, align 8, !dbg !1148
  %8408 = load i8, i8* %8382, align 1, !dbg !1149
  %8409 = zext i8 %8408 to i32, !dbg !1150
  %8410 = getelementptr %struct.FuncDef, %struct.FuncDef* %8407, i32 0, i32 4, !dbg !1151
  %8411 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %8410, align 8, !dbg !1152
  call void %8411(%struct.sqlite3_context* %8377, i32 %8409, %struct.sqlite3_value** %8384), !dbg !1153
  %8412 = load i32, i32* %8380, align 4, !dbg !1154
  %8413 = icmp ne i32 %8412, 0, !dbg !1155
  br i1 %8413, label %8414, label %8428, !dbg !1156

8414:                                             ; preds = %8403
  %8415 = icmp sgt i32 %8412, 0, !dbg !1157
  br i1 %8415, label %8416, label %8420, !dbg !1158

8416:                                             ; preds = %8414
  %8417 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8378, align 8, !dbg !1159
  %8418 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %8417), !dbg !1160
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %8418), !dbg !1161
  %8419 = load i32, i32* %8380, align 4, !dbg !1162
  store i32 %8419, i32* %8348, align 4, !dbg !1163
  br label %8420, !dbg !1164

8420:                                             ; preds = %8416, %8414
  %8421 = load i8, i8* %8381, align 1, !dbg !1165
  %8422 = icmp ne i8 %8421, 0, !dbg !1166
  br i1 %8422, label %8423, label %8424, !dbg !1167

8423:                                             ; preds = %8420
  store i32 0, i32* %8385, align 4, !dbg !1168
  store i8 0, i8* %8381, align 1, !dbg !1171
  br label %8424, !dbg !1172

8424:                                             ; preds = %8423, %8420
  %8425 = load %struct.sqlite3_value*, %struct.sqlite3_value** %8378, align 8, !dbg !1173
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %8425), !dbg !1174
  %8426 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8425, i32 0, i32 1, !dbg !1175
  store i16 1, i16* %8426, align 2, !dbg !1176
  store i32 0, i32* %8380, align 4, !dbg !1177
  %8427 = load i32, i32* %8348, align 4, !dbg !1178
  br label %8428, !dbg !1179

8428:                                             ; preds = %8403, %8424
  call void @llvm.stackrestore(i8* %8347), !dbg !1180
  br label %8328, !dbg !75

8429:                                             ; preds = %19
  %8430 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 143, !dbg !1211
  %8431 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8430, i32 0, i32 6, !dbg !1214
  %8432 = bitcast %union.p4union* %8431 to %struct.FuncDef**, !dbg !1215
  %8433 = load %struct.FuncDef*, %struct.FuncDef** %8432, align 8, !dbg !1216
  %8434 = call i8* @llvm.stacksave(), !dbg !1217
  %8435 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 59, !dbg !1218
  %8436 = alloca i32, align 8, !dbg !1219
  %8437 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %8435, %struct.FuncDef* %8433), !dbg !1220
  store i32 %8437, i32* %8436, align 4, !dbg !1221
  %8438 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %8435, i32 1), !dbg !1222
  %8439 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %8435), !dbg !1223
  call void @llvm.stackrestore(i8* %8434), !dbg !1224
  br label %8440, !dbg !75

8440:                                             ; preds = %19, %8429
  %8441 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 59, !dbg !1378
  %8442 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !1381
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %8442, %struct.sqlite3_value* %8441, i32 4096), !dbg !1382
  br label %8443, !dbg !75

8443:                                             ; preds = %19, %8440
  %8444 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 58, !dbg !1420
  %8445 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8444, i32 0, i32 0, !dbg !1423
  %8446 = bitcast %union.MemValue* %8445 to i64*, !dbg !1424
  %8447 = load i64, i64* %8446, align 4, !dbg !1425
  %8448 = icmp sgt i64 %8447, 0, !dbg !1426
  br i1 %8448, label %8449, label %8451, !dbg !1427

8449:                                             ; preds = %8443
  %8450 = sub i64 %8447, 1, !dbg !1428
  store i64 %8450, i64* %8446, align 4, !dbg !1429
  br label %8451, !dbg !1430

8451:                                             ; preds = %8449, %8443, %19, %4556, %4560
  %8452 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 30, !dbg !1201
  %8453 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8452, i32 0, i32 0, i32 0, !dbg !1204
  %8454 = bitcast double* %8453 to i64*, !dbg !1205
  %8455 = load i64, i64* %8454, align 4, !dbg !1206
  %8456 = add i64 %8455, 1, !dbg !1207
  %8457 = trunc i64 %8456 to i32, !dbg !1208
  store i32 %8457, i32* %15, align 4, !dbg !1209
  br label %14, !dbg !1210

8458:                                             ; preds = %19
  %8459 = call i8* @llvm.stacksave(), !dbg !622
  %8460 = alloca i32, align 8, !dbg !625
  %8461 = alloca i32, align 8, !dbg !626
  %8462 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 31, !dbg !627
  %8463 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 28, !dbg !628
  %8464 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8462, i32 0, i32 1, !dbg !629
  %8465 = load i16, i16* %8464, align 2, !dbg !630
  %8466 = alloca i16, align 8, !dbg !631
  store i16 %8465, i16* %8466, align 2, !dbg !632
  %8467 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8463, i32 0, i32 1, !dbg !633
  %8468 = load i16, i16* %8467, align 2, !dbg !634
  %8469 = alloca i16, align 8, !dbg !635
  store i16 %8468, i16* %8469, align 2, !dbg !636
  %8470 = or i16 %8465, %8468, !dbg !637
  %8471 = and i16 %8470, 1, !dbg !638
  %8472 = icmp ne i16 %8471, 0, !dbg !639
  br i1 %8472, label %8473, label %8474, !dbg !640

8473:                                             ; preds = %8458
  call void @llvm.stackrestore(i8* %8459), !dbg !641
  br label %10523, !dbg !642

8474:                                             ; preds = %8458
  %8475 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 147, !dbg !667
  %8476 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %8475, i32 0, i32 6, !dbg !668
  %8477 = bitcast %union.p4union* %8476 to %struct.CollSeq**, !dbg !669
  %8478 = load %struct.CollSeq*, %struct.CollSeq** %8477, align 8, !dbg !670
  %8479 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %8463, %struct.sqlite3_value* %8462, %struct.CollSeq* %8478), !dbg !671
  store i32 %8479, i32* %8460, align 4, !dbg !672
  %8480 = icmp slt i32 %8479, 0, !dbg !673
  br i1 %8480, label %8481, label %8482, !dbg !674

8481:                                             ; preds = %8474
  store i32 1, i32* %8461, align 4, !dbg !675
  br label %8486, !dbg !676

8482:                                             ; preds = %8474
  %8483 = icmp eq i32 %8479, 0, !dbg !1431
  br i1 %8483, label %8484, label %8485, !dbg !1432

8484:                                             ; preds = %8482
  store i32 0, i32* %8461, align 4, !dbg !1433
  br label %8486, !dbg !1434

8485:                                             ; preds = %8482
  store i32 1, i32* %8461, align 4, !dbg !1435
  br label %8486, !dbg !1436

8486:                                             ; preds = %8485, %8484, %8481
  store i16 %8468, i16* %8469, align 2, !dbg !678
  store i16 %8465, i16* %8466, align 2, !dbg !679
  %8487 = load i32, i32* %8461, align 4, !dbg !680
  %8488 = icmp ne i32 %8487, 0, !dbg !681
  call void @llvm.stackrestore(i8* %8459), !dbg !682
  br i1 %8488, label %10523, label %8489, !dbg !683

8489:                                             ; preds = %19, %8486
  %8490 = call i8* @llvm.stacksave(), !dbg !266
  %8491 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %8492 = load i8, i8* %8491, align 1, !dbg !270
  %8493 = alloca i32, align 4, !dbg !271
  store i32 1, i32* %8493, align 4, !dbg !272
  %8494 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !273
  %8495 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %8496 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8494, align 8, !dbg !275
  store %struct.VdbeCursor* %8496, %struct.VdbeCursor** %8495, align 8, !dbg !276
  %8497 = alloca i8*, align 8, !dbg !277
  %8498 = alloca i32, align 4, !dbg !278
  %8499 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8495, i32* %8493), !dbg !279
  %8500 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8495, align 8, !dbg !280
  %8501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 62, !dbg !281
  %8502 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 16, !dbg !282
  %8503 = load i16, i16* %8502, align 2, !dbg !283
  %8504 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 19, !dbg !284
  %8505 = load i32*, i32** %8504, align 8, !dbg !285
  %8506 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 0, !dbg !286
  %8507 = load i8, i8* %8506, align 1, !dbg !287
  %8508 = icmp ne i8 %8507, 3, !dbg !288
  %8509 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 2, !dbg !289
  %8510 = load i8, i8* %8509, align 1, !dbg !290
  %8511 = icmp ne i8 %8510, 0, !dbg !291
  %8512 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 14, !dbg !292
  %8513 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 21, !dbg !293
  %8514 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 22, !dbg !294
  %8515 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 20, !dbg !295
  %8516 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 17, !dbg !296
  %8517 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 9, !dbg !297
  %8518 = load i32, i32* %8517, align 4, !dbg !298
  %8519 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %8520 = load i32, i32* %8519, align 4, !dbg !300
  %8521 = icmp ne i32 %8518, %8520, !dbg !301
  br i1 %8521, label %8522, label %8564, !dbg !302

8522:                                             ; preds = %8489
  br i1 %8511, label %8544, label %8539, !dbg !303

8523:                                             ; preds = %8539, %8546
  %8524 = load i32, i32* %8519, align 4, !dbg !304
  store i32 %8524, i32* %8517, align 4, !dbg !305
  %8525 = load i8*, i8** %8515, align 8, !dbg !306
  %8526 = load i8, i8* %8525, align 1, !dbg !307
  %8527 = icmp sgt i8 %8526, -1, !dbg !310
  br i1 %8527, label %8528, label %8530, !dbg !311

8528:                                             ; preds = %8523
  %8529 = zext i8 %8526 to i32, !dbg !312
  store i32 %8529, i32* %8505, align 4, !dbg !313
  store i32 1, i32* %8512, align 4, !dbg !314
  br label %8533, !dbg !315

8530:                                             ; preds = %8523
  %8531 = call i8 @sqlite3GetVarint32(i8* %8525, i32* %8505), !dbg !316
  %8532 = zext i8 %8531 to i32, !dbg !317
  store i32 %8532, i32* %8512, align 4, !dbg !318
  br label %8533, !dbg !319

8533:                                             ; preds = %8530, %8528
  store i16 0, i16* %8516, align 2, !dbg !320
  %8534 = load i32, i32* %8514, align 4, !dbg !321
  %8535 = load i32, i32* %8505, align 4, !dbg !322
  %8536 = icmp ult i32 %8534, %8535, !dbg !323
  br i1 %8536, label %8538, label %8537, !dbg !324

8537:                                             ; preds = %8533
  store i8* %8525, i8** %8497, align 8, !dbg !325
  br label %8655, !dbg !326

8538:                                             ; preds = %8533
  store i8* null, i8** %8515, align 8, !dbg !327
  store i32 0, i32* %8514, align 4, !dbg !328
  br label %8564, !dbg !329

8539:                                             ; preds = %8522
  %8540 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 12, i32 0, !dbg !330
  %8541 = load %struct.BtCursor*, %struct.BtCursor** %8540, align 8, !dbg !331
  %8542 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8541), !dbg !332
  store i32 %8542, i32* %8513, align 4, !dbg !333
  %8543 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8541, i32* %8514), !dbg !334
  store i8* %8543, i8** %8515, align 8, !dbg !335
  br label %8523, !dbg !336

8544:                                             ; preds = %8522
  %8545 = icmp eq i8 %8507, 3, !dbg !337
  br i1 %8545, label %8546, label %8557, !dbg !338

8546:                                             ; preds = %8544
  %8547 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 10, !dbg !339
  %8548 = load i32, i32* %8547, align 4, !dbg !340
  %8549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8548, !dbg !341
  %8550 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8549, i32 0, i32 1, !dbg !342
  %8551 = load i16, i16* %8550, align 2, !dbg !343
  %8552 = and i16 %8551, 16, !dbg !344
  %8553 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8549, i32 0, i32 4, !dbg !345
  %8554 = load i32, i32* %8553, align 4, !dbg !346
  store i32 %8554, i32* %8513, align 4, !dbg !347
  store i32 %8554, i32* %8514, align 4, !dbg !348
  %8555 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8549, i32 0, i32 5, !dbg !349
  %8556 = load i8*, i8** %8555, align 8, !dbg !350
  store i8* %8556, i8** %8515, align 8, !dbg !351
  br label %8523, !dbg !352

8557:                                             ; preds = %8544
  %8558 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 1, !dbg !353
  %8559 = load i16, i16* %8558, align 2, !dbg !353
  %8560 = and i16 %8559, 9216, !dbg !353
  %8561 = icmp ne i16 %8560, 0, !dbg !353
  br i1 %8561, label %8562, label %8563, !dbg !353

8562:                                             ; preds = %8557
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8501), !dbg !353
  br label %8743, !dbg !353

8563:                                             ; preds = %8557
  store i16 1, i16* %8558, align 2, !dbg !353
  br label %8743, !dbg !353

8564:                                             ; preds = %8538, %8489
  %8565 = load i16, i16* %8516, align 2, !dbg !354
  %8566 = icmp ule i16 %8565, 0, !dbg !355
  br i1 %8566, label %8647, label %8644, !dbg !356

8567:                                             ; preds = %8644, %8733
  %8568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 1, !dbg !357
  %8569 = load i16, i16* %8568, align 2, !dbg !358
  %8570 = and i16 9216, %8569, !dbg !359
  %8571 = icmp eq i16 0, %8570, !dbg !360
  br i1 %8571, label %8572, label %8576, !dbg !361

8572:                                             ; preds = %8567
  %8573 = icmp ne i16 %8570, 0, !dbg !362
  br i1 %8573, label %8574, label %8575, !dbg !362

8574:                                             ; preds = %8572
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8501), !dbg !362
  br label %8576, !dbg !362

8575:                                             ; preds = %8572
  store i16 1, i16* %8568, align 2, !dbg !362
  br label %8576, !dbg !362

8576:                                             ; preds = %8574, %8575, %8567
  %8577 = load i32, i32* %8498, align 4, !dbg !363
  %8578 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 23, i32 0, !dbg !364
  %8579 = load i32, i32* %8578, align 4, !dbg !365
  %8580 = load i32, i32* %8514, align 4, !dbg !366
  %8581 = getelementptr i32, i32* %8505, i32 1, !dbg !367
  %8582 = load i32, i32* %8581, align 4, !dbg !368
  %8583 = icmp sge i32 %8580, %8582, !dbg !369
  br i1 %8583, label %8584, label %8623, !dbg !370

8584:                                             ; preds = %8576
  %8585 = load i8*, i8** %8515, align 8, !dbg !371
  %8586 = ptrtoint i8* %8585 to i64, !dbg !372
  %8587 = load i32, i32* %8505, align 4, !dbg !374
  %8588 = zext i32 %8587 to i64, !dbg !375
  %8589 = add i64 %8586, %8588, !dbg !376
  %8590 = inttoptr i64 %8589 to i8*, !dbg !377
  store i8* %8590, i8** %8497, align 8, !dbg !378
  %8591 = load i32, i32* %8498, align 4, !dbg !379
  %8592 = icmp ult i32 %8591, 12, !dbg !380
  br i1 %8592, label %8593, label %8595, !dbg !381

8593:                                             ; preds = %8584
  %8594 = call i32 @sqlite3VdbeSerialGet(i8* %8590, i32 %8591, %struct.sqlite3_value* %8501), !dbg !382
  br label %8743, !dbg !383

8595:                                             ; preds = %8584
  %8596 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %8596, align 2, !dbg !385
  %8597 = getelementptr i16, i16* %8596, i32 1, !dbg !386
  store i16 514, i16* %8597, align 2, !dbg !387
  %8598 = load i32, i32* %8498, align 4, !dbg !388
  %8599 = sub i32 %8598, 12, !dbg !389
  %8600 = lshr i32 %8599, 1, !dbg !390
  %8601 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 4, !dbg !391
  store i32 %8600, i32* %8601, align 4, !dbg !392
  %8602 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 2, !dbg !393
  store i8 %8492, i8* %8602, align 1, !dbg !394
  %8603 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 5, !dbg !395
  %8604 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 7, !dbg !396
  %8605 = load i32, i32* %8604, align 4, !dbg !397
  %8606 = add i32 %8600, 2, !dbg !398
  %8607 = icmp slt i32 %8605, %8606, !dbg !399
  br i1 %8607, label %8608, label %8610, !dbg !400

8608:                                             ; preds = %8595
  store i16 1, i16* %8568, align 2, !dbg !401
  %8609 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8501, i32 %8606, i32 0), !dbg !402
  br label %8613, !dbg !403

8610:                                             ; preds = %8595
  %8611 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 6, !dbg !404
  %8612 = load i8*, i8** %8611, align 8, !dbg !405
  store i8* %8612, i8** %8603, align 8, !dbg !406
  br label %8613, !dbg !407

8613:                                             ; preds = %8610, %8608
  %8614 = zext i32 %8600 to i64, !dbg !408
  %8615 = load i8*, i8** %8603, align 8, !dbg !409
  %8616 = load i8*, i8** %8497, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8615, i8* %8616, i64 %8614, i1 false), !dbg !411
  %8617 = getelementptr i8, i8* %8615, i32 %8600, !dbg !412
  store i8 0, i8* %8617, align 1, !dbg !413
  %8618 = add i32 %8600, 1, !dbg !414
  %8619 = getelementptr i8, i8* %8615, i32 %8618, !dbg !415
  store i8 0, i8* %8619, align 1, !dbg !416
  %8620 = and i32 %8598, 1, !dbg !417
  %8621 = getelementptr i16, i16* %8596, i32 %8620, !dbg !418
  %8622 = load i16, i16* %8621, align 2, !dbg !419
  store i16 %8622, i16* %8568, align 2, !dbg !420
  br label %8743, !dbg !421

8623:                                             ; preds = %8576
  %8624 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 2, !dbg !422
  store i8 %8492, i8* %8624, align 1, !dbg !423
  %8625 = load i32, i32* %8498, align 4, !dbg !424
  %8626 = and i32 %8625, 1, !dbg !425
  %8627 = icmp eq i32 %8626, 0, !dbg !426
  %8628 = icmp sge i32 %8625, 12, !dbg !427
  %8629 = and i1 %8628, %8627, !dbg !428
  %8630 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8625), !dbg !429
  %8631 = icmp eq i32 %8630, 0, !dbg !430
  br i1 %8631, label %8642, label %8632, !dbg !431

8632:                                             ; preds = %8623
  %8633 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 12, i32 0, !dbg !432
  %8634 = load %struct.BtCursor*, %struct.BtCursor** %8633, align 8, !dbg !433
  %8635 = load i32, i32* %8505, align 4, !dbg !435
  %8636 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8634, i32 %8635, i32 %8630, %struct.sqlite3_value* %8501), !dbg !436
  %8637 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 5, !dbg !437
  %8638 = load i8*, i8** %8637, align 8, !dbg !438
  %8639 = call i32 @sqlite3VdbeSerialGet(i8* %8638, i32 %8625, %struct.sqlite3_value* %8501), !dbg !439
  %8640 = load i16, i16* %8568, align 2, !dbg !440
  %8641 = and i16 %8640, -4097, !dbg !441
  store i16 %8641, i16* %8568, align 2, !dbg !442
  br label %8743, !dbg !443

8642:                                             ; preds = %8623
  %8643 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8625, %struct.sqlite3_value* %8501), !dbg !444
  br label %8743, !dbg !445

8644:                                             ; preds = %8564
  %8645 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 23, i32 0, !dbg !446
  %8646 = load i32, i32* %8645, align 4, !dbg !447
  store i32 %8646, i32* %8498, align 4, !dbg !448
  br label %8567, !dbg !449

8647:                                             ; preds = %8564
  %8648 = load i32, i32* %8512, align 4, !dbg !450
  %8649 = load i32, i32* %8505, align 4, !dbg !451
  %8650 = icmp ult i32 %8648, %8649, !dbg !452
  br i1 %8650, label %8651, label %8732, !dbg !453

8651:                                             ; preds = %8647
  %8652 = load i8*, i8** %8515, align 8, !dbg !454
  %8653 = icmp eq i8* %8652, null, !dbg !455
  br i1 %8653, label %8655, label %8654, !dbg !456

8654:                                             ; preds = %8651
  store i8* %8652, i8** %8497, align 8, !dbg !457
  br label %8655, !dbg !458

8655:                                             ; preds = %8654, %8651, %8537
  %8656 = alloca i32, align 4, !dbg !459
  %8657 = load i16, i16* %8516, align 2, !dbg !460
  %8658 = zext i16 %8657 to i32, !dbg !461
  store i32 %8658, i32* %8656, align 4, !dbg !462
  %8659 = alloca i64, align 8, !dbg !463
  %8660 = getelementptr i32, i32* %8505, i32 %8658, !dbg !464
  %8661 = load i32, i32* %8660, align 4, !dbg !465
  %8662 = zext i32 %8661 to i64, !dbg !466
  store i64 %8662, i64* %8659, align 4, !dbg !467
  %8663 = load i8*, i8** %8497, align 8, !dbg !468
  %8664 = load i32, i32* %8512, align 4, !dbg !469
  %8665 = alloca i8*, align 8, !dbg !470
  %8666 = getelementptr i8, i8* %8663, i32 %8664, !dbg !471
  store i8* %8666, i8** %8665, align 8, !dbg !472
  %8667 = load i32, i32* %8505, align 4, !dbg !473
  %8668 = getelementptr i8, i8* %8663, i32 %8667, !dbg !474
  br label %8669, !dbg !475

8669:                                             ; preds = %8676, %8655
  %8670 = load i32, i32* %8656, align 4, !dbg !476
  %8671 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8500, i32 0, i32 23, i32 %8670, !dbg !477
  %8672 = load i8*, i8** %8665, align 8, !dbg !478
  %8673 = load i8, i8* %8672, align 1, !dbg !479
  %8674 = zext i8 %8673 to i32, !dbg !480
  store i32 %8674, i32* %8498, align 4, !dbg !481
  store i32 %8674, i32* %8671, align 4, !dbg !482
  %8675 = icmp sgt i8 %8673, -1, !dbg !483
  br i1 %8675, label %8699, label %8690, !dbg !484

8676:                                             ; preds = %8690, %8699
  %8677 = load i32, i32* %8656, align 4, !dbg !485
  %8678 = add i32 %8677, 1, !dbg !486
  store i32 %8678, i32* %8656, align 4, !dbg !487
  %8679 = load i64, i64* %8659, align 4, !dbg !488
  %8680 = and i64 4294967295, %8679, !dbg !489
  %8681 = trunc i64 %8680 to i32, !dbg !490
  %8682 = getelementptr i32, i32* %8505, i32 %8678, !dbg !491
  store i32 %8681, i32* %8682, align 4, !dbg !492
  %8683 = load i32, i32* %8656, align 4, !dbg !493
  %8684 = icmp sle i32 %8683, 0, !dbg !494
  %8685 = load i8*, i8** %8665, align 8, !dbg !495
  %8686 = ptrtoint i8* %8685 to i64, !dbg !496
  %8687 = ptrtoint i8* %8668 to i64, !dbg !497
  %8688 = icmp ult i64 %8686, %8687, !dbg !498
  %8689 = and i1 %8684, %8688, !dbg !499
  br i1 %8689, label %8669, label %8708, !dbg !500

8690:                                             ; preds = %8669
  %8691 = load i8*, i8** %8665, align 8, !dbg !501
  %8692 = call i8 @sqlite3GetVarint32(i8* %8691, i32* %8498), !dbg !502
  %8693 = getelementptr i8, i8* %8691, i8 %8692, !dbg !503
  store i8* %8693, i8** %8665, align 8, !dbg !504
  %8694 = load i32, i32* %8498, align 4, !dbg !505
  store i32 %8694, i32* %8671, align 4, !dbg !506
  %8695 = load i64, i64* %8659, align 4, !dbg !507
  %8696 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8694), !dbg !508
  %8697 = zext i32 %8696 to i64, !dbg !509
  %8698 = add i64 %8695, %8697, !dbg !510
  store i64 %8698, i64* %8659, align 4, !dbg !511
  br label %8676, !dbg !512

8699:                                             ; preds = %8669
  %8700 = getelementptr i8, i8* %8672, i32 1, !dbg !513
  store i8* %8700, i8** %8665, align 8, !dbg !514
  %8701 = load i32, i32* %8498, align 4, !dbg !515
  %8702 = trunc i32 %8701 to i8, !dbg !516
  %8703 = getelementptr i8, i8* %4, i8 %8702, !dbg !517
  %8704 = load i8, i8* %8703, align 1, !dbg !518
  %8705 = zext i8 %8704 to i64, !dbg !519
  %8706 = load i64, i64* %8659, align 4, !dbg !520
  %8707 = add i64 %8706, %8705, !dbg !521
  store i64 %8707, i64* %8659, align 4, !dbg !522
  br label %8676, !dbg !523

8708:                                             ; preds = %8676
  %8709 = load i64, i64* %8659, align 4, !dbg !524
  %8710 = load i32, i32* %8513, align 4, !dbg !525
  %8711 = zext i32 %8710 to i64, !dbg !526
  %8712 = icmp uge i64 %8686, %8687, !dbg !527
  %8713 = icmp ugt i64 %8686, %8687, !dbg !528
  %8714 = icmp ne i64 %8709, %8711, !dbg !529
  %8715 = icmp ugt i64 %8709, %8711, !dbg !530
  %8716 = or i1 %8713, %8714, !dbg !531
  %8717 = and i1 %8712, %8716, !dbg !532
  %8718 = or i1 %8717, %8715, !dbg !533
  br i1 %8718, label %8719, label %8723, !dbg !534

8719:                                             ; preds = %8708
  %8720 = load i32, i32* %8505, align 4, !dbg !535
  %8721 = icmp eq i32 %8720, 0, !dbg !536
  br i1 %8721, label %8722, label %8723, !dbg !537

8722:                                             ; preds = %8719
  store i32 0, i32* %8656, align 4, !dbg !538
  store i8* %8668, i8** %8665, align 8, !dbg !539
  br label %8723, !dbg !540

8723:                                             ; preds = %8722, %8719, %8708
  %8724 = load i32, i32* %8656, align 4, !dbg !541
  %8725 = trunc i32 %8724 to i16, !dbg !542
  store i16 %8725, i16* %8516, align 2, !dbg !543
  %8726 = load i8*, i8** %8665, align 8, !dbg !544
  %8727 = ptrtoint i8* %8726 to i64, !dbg !545
  %8728 = load i8*, i8** %8497, align 8, !dbg !546
  %8729 = ptrtoint i8* %8728 to i64, !dbg !547
  %8730 = sub i64 %8727, %8729, !dbg !548
  %8731 = trunc i64 %8730 to i32, !dbg !549
  store i32 %8731, i32* %8512, align 4, !dbg !550
  br label %8733, !dbg !551

8732:                                             ; preds = %8647
  store i32 0, i32* %8498, align 4, !dbg !552
  br label %8733, !dbg !553

8733:                                             ; preds = %8723, %8732
  %8734 = load i16, i16* %8516, align 2, !dbg !554
  %8735 = icmp sle i16 %8734, 0, !dbg !555
  br i1 %8735, label %8736, label %8567, !dbg !556

8736:                                             ; preds = %8733
  %8737 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8501, i32 0, i32 1, !dbg !557
  %8738 = load i16, i16* %8737, align 2, !dbg !557
  %8739 = and i16 %8738, 9216, !dbg !557
  %8740 = icmp ne i16 %8739, 0, !dbg !557
  br i1 %8740, label %8741, label %8742, !dbg !557

8741:                                             ; preds = %8736
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8501), !dbg !557
  br label %8743, !dbg !557

8742:                                             ; preds = %8736
  store i16 1, i16* %8737, align 2, !dbg !557
  br label %8743, !dbg !557

8743:                                             ; preds = %8741, %8742, %8613, %8593, %8632, %8642, %8562, %8563
  call void @llvm.stackrestore(i8* %8490), !dbg !558
  br label %8744, !dbg !75

8744:                                             ; preds = %19, %8743
  %8745 = call i8* @llvm.stacksave(), !dbg !1437
  %8746 = alloca i32, align 8, !dbg !1440
  %8747 = alloca i64, align 8, !dbg !1441
  %8748 = alloca i32, align 8, !dbg !1442
  %8749 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 62, !dbg !1443
  %8750 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8749, i32 0, i32 1, !dbg !1444
  %8751 = load i16, i16* %8750, align 2, !dbg !1445
  %8752 = and i16 %8751, 36, !dbg !1446
  %8753 = icmp eq i16 %8752, 0, !dbg !1447
  br i1 %8753, label %8754, label %8765, !dbg !1448

8754:                                             ; preds = %8744
  %8755 = alloca %struct.sqlite3_value, align 8, !dbg !1449
  %8756 = load %struct.sqlite3_value, %struct.sqlite3_value* %8749, align 8, !dbg !1450
  store %struct.sqlite3_value %8756, %struct.sqlite3_value* %8755, align 8, !dbg !1450
  call void @applyAffinity(%struct.sqlite3_value* %8755, i8 67, i8 1), !dbg !1451
  %8757 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8755, i32 0, i32 1, !dbg !1452
  %8758 = load i16, i16* %8757, align 2, !dbg !1453
  %8759 = and i16 %8758, 4, !dbg !1454
  %8760 = icmp eq i16 %8759, 0, !dbg !1455
  br i1 %8760, label %10523, label %8761, !dbg !1456

8761:                                             ; preds = %8754
  %8762 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8755, i32 0, i32 0, !dbg !1457
  %8763 = bitcast %union.MemValue* %8762 to i64*, !dbg !1458
  %8764 = load i64, i64* %8763, align 4, !dbg !1459
  store i64 %8764, i64* %8747, align 4, !dbg !1460
  br label %8769, !dbg !1461

8765:                                             ; preds = %8744
  %8766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8749, i32 0, i32 0, !dbg !1462
  %8767 = bitcast %union.MemValue* %8766 to i64*, !dbg !1463
  %8768 = load i64, i64* %8767, align 4, !dbg !1464
  store i64 %8768, i64* %8747, align 4, !dbg !1465
  br label %8769, !dbg !1466

8769:                                             ; preds = %8765, %8761
  %8770 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !1467
  %8771 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 12, i32 0, !dbg !1468
  %8772 = load %struct.BtCursor*, %struct.BtCursor** %8771, align 8, !dbg !1469
  store i32 0, i32* %8746, align 4, !dbg !1470
  %8773 = load i64, i64* %8747, align 4, !dbg !1471
  %8774 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %8772, %struct.UnpackedRecord* null, i64 %8773, i32 0, i32* %8746), !dbg !1472
  store i32 %8774, i32* %8748, align 4, !dbg !1473
  %8775 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 18, !dbg !1474
  store i64 %8773, i64* %8775, align 4, !dbg !1475
  %8776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 2, !dbg !1476
  store i8 0, i8* %8776, align 1, !dbg !1477
  %8777 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 9, !dbg !1478
  store i32 0, i32* %8777, align 4, !dbg !1479
  %8778 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 3, !dbg !1480
  store i8 0, i8* %8778, align 1, !dbg !1481
  %8779 = load i32, i32* %8746, align 4, !dbg !1482
  %8780 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8770, i32 0, i32 10, !dbg !1483
  store i32 %8779, i32* %8780, align 4, !dbg !1484
  %8781 = icmp ne i32 %8779, 0, !dbg !1485
  br i1 %8781, label %8782, label %8783, !dbg !1486

8782:                                             ; preds = %8769
  call void @llvm.stackrestore(i8* %8745), !dbg !1487
  br label %10523, !dbg !1488

8783:                                             ; preds = %8769
  %8784 = load i32, i32* %8748, align 4, !dbg !1489
  call void @llvm.stackrestore(i8* %8745), !dbg !1490
  br label %8785, !dbg !1491

8785:                                             ; preds = %19, %8783
  %8786 = call i8* @llvm.stacksave(), !dbg !266
  %8787 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %8788 = load i8, i8* %8787, align 1, !dbg !270
  %8789 = alloca i32, align 4, !dbg !271
  store i32 0, i32* %8789, align 4, !dbg !272
  %8790 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %8791 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !275
  store %struct.VdbeCursor* %8791, %struct.VdbeCursor** %8790, align 8, !dbg !276
  %8792 = alloca i8*, align 8, !dbg !277
  %8793 = alloca i32, align 4, !dbg !278
  %8794 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %8790, i32* %8789), !dbg !279
  %8795 = load %struct.VdbeCursor*, %struct.VdbeCursor** %8790, align 8, !dbg !280
  %8796 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 64, !dbg !281
  %8797 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 16, !dbg !282
  %8798 = load i16, i16* %8797, align 2, !dbg !283
  %8799 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 19, !dbg !284
  %8800 = load i32*, i32** %8799, align 8, !dbg !285
  %8801 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 0, !dbg !286
  %8802 = load i8, i8* %8801, align 1, !dbg !287
  %8803 = icmp ne i8 %8802, 3, !dbg !288
  %8804 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 2, !dbg !289
  %8805 = load i8, i8* %8804, align 1, !dbg !290
  %8806 = icmp ne i8 %8805, 0, !dbg !291
  %8807 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 14, !dbg !292
  %8808 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 21, !dbg !293
  %8809 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 22, !dbg !294
  %8810 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 20, !dbg !295
  %8811 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 17, !dbg !296
  %8812 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 9, !dbg !297
  %8813 = load i32, i32* %8812, align 4, !dbg !298
  %8814 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %8815 = load i32, i32* %8814, align 4, !dbg !300
  %8816 = icmp ne i32 %8813, %8815, !dbg !301
  br i1 %8816, label %8817, label %8859, !dbg !302

8817:                                             ; preds = %8785
  br i1 %8806, label %8839, label %8834, !dbg !303

8818:                                             ; preds = %8834, %8841
  %8819 = load i32, i32* %8814, align 4, !dbg !304
  store i32 %8819, i32* %8812, align 4, !dbg !305
  %8820 = load i8*, i8** %8810, align 8, !dbg !306
  %8821 = load i8, i8* %8820, align 1, !dbg !307
  %8822 = icmp sgt i8 %8821, -1, !dbg !310
  br i1 %8822, label %8823, label %8825, !dbg !311

8823:                                             ; preds = %8818
  %8824 = zext i8 %8821 to i32, !dbg !312
  store i32 %8824, i32* %8800, align 4, !dbg !313
  store i32 1, i32* %8807, align 4, !dbg !314
  br label %8828, !dbg !315

8825:                                             ; preds = %8818
  %8826 = call i8 @sqlite3GetVarint32(i8* %8820, i32* %8800), !dbg !316
  %8827 = zext i8 %8826 to i32, !dbg !317
  store i32 %8827, i32* %8807, align 4, !dbg !318
  br label %8828, !dbg !319

8828:                                             ; preds = %8825, %8823
  store i16 0, i16* %8811, align 2, !dbg !320
  %8829 = load i32, i32* %8809, align 4, !dbg !321
  %8830 = load i32, i32* %8800, align 4, !dbg !322
  %8831 = icmp ult i32 %8829, %8830, !dbg !323
  br i1 %8831, label %8833, label %8832, !dbg !324

8832:                                             ; preds = %8828
  store i8* %8820, i8** %8792, align 8, !dbg !325
  br label %8952, !dbg !326

8833:                                             ; preds = %8828
  store i8* null, i8** %8810, align 8, !dbg !327
  store i32 0, i32* %8809, align 4, !dbg !328
  br label %8859, !dbg !329

8834:                                             ; preds = %8817
  %8835 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 12, i32 0, !dbg !330
  %8836 = load %struct.BtCursor*, %struct.BtCursor** %8835, align 8, !dbg !331
  %8837 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %8836), !dbg !332
  store i32 %8837, i32* %8808, align 4, !dbg !333
  %8838 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %8836, i32* %8809), !dbg !334
  store i8* %8838, i8** %8810, align 8, !dbg !335
  br label %8818, !dbg !336

8839:                                             ; preds = %8817
  %8840 = icmp eq i8 %8802, 3, !dbg !337
  br i1 %8840, label %8841, label %8852, !dbg !338

8841:                                             ; preds = %8839
  %8842 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 10, !dbg !339
  %8843 = load i32, i32* %8842, align 4, !dbg !340
  %8844 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %8843, !dbg !341
  %8845 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8844, i32 0, i32 1, !dbg !342
  %8846 = load i16, i16* %8845, align 2, !dbg !343
  %8847 = and i16 %8846, 16, !dbg !344
  %8848 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8844, i32 0, i32 4, !dbg !345
  %8849 = load i32, i32* %8848, align 4, !dbg !346
  store i32 %8849, i32* %8808, align 4, !dbg !347
  store i32 %8849, i32* %8809, align 4, !dbg !348
  %8850 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8844, i32 0, i32 5, !dbg !349
  %8851 = load i8*, i8** %8850, align 8, !dbg !350
  store i8* %8851, i8** %8810, align 8, !dbg !351
  br label %8818, !dbg !352

8852:                                             ; preds = %8839
  %8853 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 1, !dbg !353
  %8854 = load i16, i16* %8853, align 2, !dbg !353
  %8855 = and i16 %8854, 9216, !dbg !353
  %8856 = icmp ne i16 %8855, 0, !dbg !353
  br i1 %8856, label %8857, label %8858, !dbg !353

8857:                                             ; preds = %8852
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8796), !dbg !353
  br label %9040, !dbg !353

8858:                                             ; preds = %8852
  store i16 1, i16* %8853, align 2, !dbg !353
  br label %9040, !dbg !353

8859:                                             ; preds = %8833, %8785
  %8860 = load i16, i16* %8811, align 2, !dbg !354
  %8861 = icmp ule i16 %8860, 1, !dbg !355
  br i1 %8861, label %8944, label %8941, !dbg !356

8862:                                             ; preds = %8941, %9030
  %8863 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 1, !dbg !357
  %8864 = load i16, i16* %8863, align 2, !dbg !358
  %8865 = and i16 9216, %8864, !dbg !359
  %8866 = icmp eq i16 0, %8865, !dbg !360
  br i1 %8866, label %8867, label %8871, !dbg !361

8867:                                             ; preds = %8862
  %8868 = icmp ne i16 %8865, 0, !dbg !362
  br i1 %8868, label %8869, label %8870, !dbg !362

8869:                                             ; preds = %8867
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8796), !dbg !362
  br label %8871, !dbg !362

8870:                                             ; preds = %8867
  store i16 1, i16* %8863, align 2, !dbg !362
  br label %8871, !dbg !362

8871:                                             ; preds = %8869, %8870, %8862
  %8872 = load i32, i32* %8793, align 4, !dbg !363
  %8873 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 23, i32 1, !dbg !364
  %8874 = load i32, i32* %8873, align 4, !dbg !365
  %8875 = load i32, i32* %8809, align 4, !dbg !366
  %8876 = getelementptr i32, i32* %8800, i32 2, !dbg !367
  %8877 = load i32, i32* %8876, align 4, !dbg !368
  %8878 = icmp sge i32 %8875, %8877, !dbg !369
  br i1 %8878, label %8879, label %8919, !dbg !370

8879:                                             ; preds = %8871
  %8880 = load i8*, i8** %8810, align 8, !dbg !371
  %8881 = ptrtoint i8* %8880 to i64, !dbg !372
  %8882 = getelementptr i32, i32* %8800, i32 1, !dbg !373
  %8883 = load i32, i32* %8882, align 4, !dbg !374
  %8884 = zext i32 %8883 to i64, !dbg !375
  %8885 = add i64 %8881, %8884, !dbg !376
  %8886 = inttoptr i64 %8885 to i8*, !dbg !377
  store i8* %8886, i8** %8792, align 8, !dbg !378
  %8887 = load i32, i32* %8793, align 4, !dbg !379
  %8888 = icmp ult i32 %8887, 12, !dbg !380
  br i1 %8888, label %8889, label %8891, !dbg !381

8889:                                             ; preds = %8879
  %8890 = call i32 @sqlite3VdbeSerialGet(i8* %8886, i32 %8887, %struct.sqlite3_value* %8796), !dbg !382
  br label %9040, !dbg !383

8891:                                             ; preds = %8879
  %8892 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %8892, align 2, !dbg !385
  %8893 = getelementptr i16, i16* %8892, i32 1, !dbg !386
  store i16 514, i16* %8893, align 2, !dbg !387
  %8894 = load i32, i32* %8793, align 4, !dbg !388
  %8895 = sub i32 %8894, 12, !dbg !389
  %8896 = lshr i32 %8895, 1, !dbg !390
  %8897 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 4, !dbg !391
  store i32 %8896, i32* %8897, align 4, !dbg !392
  %8898 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 2, !dbg !393
  store i8 %8788, i8* %8898, align 1, !dbg !394
  %8899 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 5, !dbg !395
  %8900 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 7, !dbg !396
  %8901 = load i32, i32* %8900, align 4, !dbg !397
  %8902 = add i32 %8896, 2, !dbg !398
  %8903 = icmp slt i32 %8901, %8902, !dbg !399
  br i1 %8903, label %8904, label %8906, !dbg !400

8904:                                             ; preds = %8891
  store i16 1, i16* %8863, align 2, !dbg !401
  %8905 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %8796, i32 %8902, i32 0), !dbg !402
  br label %8909, !dbg !403

8906:                                             ; preds = %8891
  %8907 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 6, !dbg !404
  %8908 = load i8*, i8** %8907, align 8, !dbg !405
  store i8* %8908, i8** %8899, align 8, !dbg !406
  br label %8909, !dbg !407

8909:                                             ; preds = %8906, %8904
  %8910 = zext i32 %8896 to i64, !dbg !408
  %8911 = load i8*, i8** %8899, align 8, !dbg !409
  %8912 = load i8*, i8** %8792, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8911, i8* %8912, i64 %8910, i1 false), !dbg !411
  %8913 = getelementptr i8, i8* %8911, i32 %8896, !dbg !412
  store i8 0, i8* %8913, align 1, !dbg !413
  %8914 = add i32 %8896, 1, !dbg !414
  %8915 = getelementptr i8, i8* %8911, i32 %8914, !dbg !415
  store i8 0, i8* %8915, align 1, !dbg !416
  %8916 = and i32 %8894, 1, !dbg !417
  %8917 = getelementptr i16, i16* %8892, i32 %8916, !dbg !418
  %8918 = load i16, i16* %8917, align 2, !dbg !419
  store i16 %8918, i16* %8863, align 2, !dbg !420
  br label %9040, !dbg !421

8919:                                             ; preds = %8871
  %8920 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 2, !dbg !422
  store i8 %8788, i8* %8920, align 1, !dbg !423
  %8921 = load i32, i32* %8793, align 4, !dbg !424
  %8922 = and i32 %8921, 1, !dbg !425
  %8923 = icmp eq i32 %8922, 0, !dbg !426
  %8924 = icmp sge i32 %8921, 12, !dbg !427
  %8925 = and i1 %8924, %8923, !dbg !428
  %8926 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8921), !dbg !429
  %8927 = icmp eq i32 %8926, 0, !dbg !430
  br i1 %8927, label %8939, label %8928, !dbg !431

8928:                                             ; preds = %8919
  %8929 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 12, i32 0, !dbg !432
  %8930 = load %struct.BtCursor*, %struct.BtCursor** %8929, align 8, !dbg !433
  %8931 = getelementptr i32, i32* %8800, i32 1, !dbg !434
  %8932 = load i32, i32* %8931, align 4, !dbg !435
  %8933 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %8930, i32 %8932, i32 %8926, %struct.sqlite3_value* %8796), !dbg !436
  %8934 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 5, !dbg !437
  %8935 = load i8*, i8** %8934, align 8, !dbg !438
  %8936 = call i32 @sqlite3VdbeSerialGet(i8* %8935, i32 %8921, %struct.sqlite3_value* %8796), !dbg !439
  %8937 = load i16, i16* %8863, align 2, !dbg !440
  %8938 = and i16 %8937, -4097, !dbg !441
  store i16 %8938, i16* %8863, align 2, !dbg !442
  br label %9040, !dbg !443

8939:                                             ; preds = %8919
  %8940 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %8921, %struct.sqlite3_value* %8796), !dbg !444
  br label %9040, !dbg !445

8941:                                             ; preds = %8859
  %8942 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 23, i32 1, !dbg !446
  %8943 = load i32, i32* %8942, align 4, !dbg !447
  store i32 %8943, i32* %8793, align 4, !dbg !448
  br label %8862, !dbg !449

8944:                                             ; preds = %8859
  %8945 = load i32, i32* %8807, align 4, !dbg !450
  %8946 = load i32, i32* %8800, align 4, !dbg !451
  %8947 = icmp ult i32 %8945, %8946, !dbg !452
  br i1 %8947, label %8948, label %9029, !dbg !453

8948:                                             ; preds = %8944
  %8949 = load i8*, i8** %8810, align 8, !dbg !454
  %8950 = icmp eq i8* %8949, null, !dbg !455
  br i1 %8950, label %8952, label %8951, !dbg !456

8951:                                             ; preds = %8948
  store i8* %8949, i8** %8792, align 8, !dbg !457
  br label %8952, !dbg !458

8952:                                             ; preds = %8951, %8948, %8832
  %8953 = alloca i32, align 4, !dbg !459
  %8954 = load i16, i16* %8811, align 2, !dbg !460
  %8955 = zext i16 %8954 to i32, !dbg !461
  store i32 %8955, i32* %8953, align 4, !dbg !462
  %8956 = alloca i64, align 8, !dbg !463
  %8957 = getelementptr i32, i32* %8800, i32 %8955, !dbg !464
  %8958 = load i32, i32* %8957, align 4, !dbg !465
  %8959 = zext i32 %8958 to i64, !dbg !466
  store i64 %8959, i64* %8956, align 4, !dbg !467
  %8960 = load i8*, i8** %8792, align 8, !dbg !468
  %8961 = load i32, i32* %8807, align 4, !dbg !469
  %8962 = alloca i8*, align 8, !dbg !470
  %8963 = getelementptr i8, i8* %8960, i32 %8961, !dbg !471
  store i8* %8963, i8** %8962, align 8, !dbg !472
  %8964 = load i32, i32* %8800, align 4, !dbg !473
  %8965 = getelementptr i8, i8* %8960, i32 %8964, !dbg !474
  br label %8966, !dbg !475

8966:                                             ; preds = %8973, %8952
  %8967 = load i32, i32* %8953, align 4, !dbg !476
  %8968 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %8795, i32 0, i32 23, i32 %8967, !dbg !477
  %8969 = load i8*, i8** %8962, align 8, !dbg !478
  %8970 = load i8, i8* %8969, align 1, !dbg !479
  %8971 = zext i8 %8970 to i32, !dbg !480
  store i32 %8971, i32* %8793, align 4, !dbg !481
  store i32 %8971, i32* %8968, align 4, !dbg !482
  %8972 = icmp sgt i8 %8970, -1, !dbg !483
  br i1 %8972, label %8996, label %8987, !dbg !484

8973:                                             ; preds = %8987, %8996
  %8974 = load i32, i32* %8953, align 4, !dbg !485
  %8975 = add i32 %8974, 1, !dbg !486
  store i32 %8975, i32* %8953, align 4, !dbg !487
  %8976 = load i64, i64* %8956, align 4, !dbg !488
  %8977 = and i64 4294967295, %8976, !dbg !489
  %8978 = trunc i64 %8977 to i32, !dbg !490
  %8979 = getelementptr i32, i32* %8800, i32 %8975, !dbg !491
  store i32 %8978, i32* %8979, align 4, !dbg !492
  %8980 = load i32, i32* %8953, align 4, !dbg !493
  %8981 = icmp sle i32 %8980, 1, !dbg !494
  %8982 = load i8*, i8** %8962, align 8, !dbg !495
  %8983 = ptrtoint i8* %8982 to i64, !dbg !496
  %8984 = ptrtoint i8* %8965 to i64, !dbg !497
  %8985 = icmp ult i64 %8983, %8984, !dbg !498
  %8986 = and i1 %8981, %8985, !dbg !499
  br i1 %8986, label %8966, label %9005, !dbg !500

8987:                                             ; preds = %8966
  %8988 = load i8*, i8** %8962, align 8, !dbg !501
  %8989 = call i8 @sqlite3GetVarint32(i8* %8988, i32* %8793), !dbg !502
  %8990 = getelementptr i8, i8* %8988, i8 %8989, !dbg !503
  store i8* %8990, i8** %8962, align 8, !dbg !504
  %8991 = load i32, i32* %8793, align 4, !dbg !505
  store i32 %8991, i32* %8968, align 4, !dbg !506
  %8992 = load i64, i64* %8956, align 4, !dbg !507
  %8993 = call i32 @sqlite3VdbeSerialTypeLen(i32 %8991), !dbg !508
  %8994 = zext i32 %8993 to i64, !dbg !509
  %8995 = add i64 %8992, %8994, !dbg !510
  store i64 %8995, i64* %8956, align 4, !dbg !511
  br label %8973, !dbg !512

8996:                                             ; preds = %8966
  %8997 = getelementptr i8, i8* %8969, i32 1, !dbg !513
  store i8* %8997, i8** %8962, align 8, !dbg !514
  %8998 = load i32, i32* %8793, align 4, !dbg !515
  %8999 = trunc i32 %8998 to i8, !dbg !516
  %9000 = getelementptr i8, i8* %4, i8 %8999, !dbg !517
  %9001 = load i8, i8* %9000, align 1, !dbg !518
  %9002 = zext i8 %9001 to i64, !dbg !519
  %9003 = load i64, i64* %8956, align 4, !dbg !520
  %9004 = add i64 %9003, %9002, !dbg !521
  store i64 %9004, i64* %8956, align 4, !dbg !522
  br label %8973, !dbg !523

9005:                                             ; preds = %8973
  %9006 = load i64, i64* %8956, align 4, !dbg !524
  %9007 = load i32, i32* %8808, align 4, !dbg !525
  %9008 = zext i32 %9007 to i64, !dbg !526
  %9009 = icmp uge i64 %8983, %8984, !dbg !527
  %9010 = icmp ugt i64 %8983, %8984, !dbg !528
  %9011 = icmp ne i64 %9006, %9008, !dbg !529
  %9012 = icmp ugt i64 %9006, %9008, !dbg !530
  %9013 = or i1 %9010, %9011, !dbg !531
  %9014 = and i1 %9009, %9013, !dbg !532
  %9015 = or i1 %9014, %9012, !dbg !533
  br i1 %9015, label %9016, label %9020, !dbg !534

9016:                                             ; preds = %9005
  %9017 = load i32, i32* %8800, align 4, !dbg !535
  %9018 = icmp eq i32 %9017, 0, !dbg !536
  br i1 %9018, label %9019, label %9020, !dbg !537

9019:                                             ; preds = %9016
  store i32 0, i32* %8953, align 4, !dbg !538
  store i8* %8965, i8** %8962, align 8, !dbg !539
  br label %9020, !dbg !540

9020:                                             ; preds = %9019, %9016, %9005
  %9021 = load i32, i32* %8953, align 4, !dbg !541
  %9022 = trunc i32 %9021 to i16, !dbg !542
  store i16 %9022, i16* %8811, align 2, !dbg !543
  %9023 = load i8*, i8** %8962, align 8, !dbg !544
  %9024 = ptrtoint i8* %9023 to i64, !dbg !545
  %9025 = load i8*, i8** %8792, align 8, !dbg !546
  %9026 = ptrtoint i8* %9025 to i64, !dbg !547
  %9027 = sub i64 %9024, %9026, !dbg !548
  %9028 = trunc i64 %9027 to i32, !dbg !549
  store i32 %9028, i32* %8807, align 4, !dbg !550
  br label %9030, !dbg !551

9029:                                             ; preds = %8944
  store i32 0, i32* %8793, align 4, !dbg !552
  br label %9030, !dbg !553

9030:                                             ; preds = %9020, %9029
  %9031 = load i16, i16* %8811, align 2, !dbg !554
  %9032 = icmp sle i16 %9031, 1, !dbg !555
  br i1 %9032, label %9033, label %8862, !dbg !556

9033:                                             ; preds = %9030
  %9034 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %8796, i32 0, i32 1, !dbg !557
  %9035 = load i16, i16* %9034, align 2, !dbg !557
  %9036 = and i16 %9035, 9216, !dbg !557
  %9037 = icmp ne i16 %9036, 0, !dbg !557
  br i1 %9037, label %9038, label %9039, !dbg !557

9038:                                             ; preds = %9033
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %8796), !dbg !557
  br label %9040, !dbg !557

9039:                                             ; preds = %9033
  store i16 1, i16* %9034, align 2, !dbg !557
  br label %9040, !dbg !557

9040:                                             ; preds = %9038, %9039, %8909, %8889, %8928, %8939, %8857, %8858
  call void @llvm.stackrestore(i8* %8786), !dbg !558
  br label %9041, !dbg !75

9041:                                             ; preds = %19, %9040
  %9042 = call i8* @llvm.stacksave(), !dbg !266
  %9043 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %9044 = load i8, i8* %9043, align 1, !dbg !270
  %9045 = alloca i32, align 4, !dbg !271
  store i32 0, i32* %9045, align 4, !dbg !272
  %9046 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %9047 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !275
  store %struct.VdbeCursor* %9047, %struct.VdbeCursor** %9046, align 8, !dbg !276
  %9048 = alloca i8*, align 8, !dbg !277
  %9049 = alloca i32, align 4, !dbg !278
  %9050 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9046, i32* %9045), !dbg !279
  %9051 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9046, align 8, !dbg !280
  %9052 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 65, !dbg !281
  %9053 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 16, !dbg !282
  %9054 = load i16, i16* %9053, align 2, !dbg !283
  %9055 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 19, !dbg !284
  %9056 = load i32*, i32** %9055, align 8, !dbg !285
  %9057 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 0, !dbg !286
  %9058 = load i8, i8* %9057, align 1, !dbg !287
  %9059 = icmp ne i8 %9058, 3, !dbg !288
  %9060 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 2, !dbg !289
  %9061 = load i8, i8* %9060, align 1, !dbg !290
  %9062 = icmp ne i8 %9061, 0, !dbg !291
  %9063 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 14, !dbg !292
  %9064 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 21, !dbg !293
  %9065 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 22, !dbg !294
  %9066 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 20, !dbg !295
  %9067 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 17, !dbg !296
  %9068 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 9, !dbg !297
  %9069 = load i32, i32* %9068, align 4, !dbg !298
  %9070 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %9071 = load i32, i32* %9070, align 4, !dbg !300
  %9072 = icmp ne i32 %9069, %9071, !dbg !301
  br i1 %9072, label %9073, label %9115, !dbg !302

9073:                                             ; preds = %9041
  br i1 %9062, label %9095, label %9090, !dbg !303

9074:                                             ; preds = %9090, %9097
  %9075 = load i32, i32* %9070, align 4, !dbg !304
  store i32 %9075, i32* %9068, align 4, !dbg !305
  %9076 = load i8*, i8** %9066, align 8, !dbg !306
  %9077 = load i8, i8* %9076, align 1, !dbg !307
  %9078 = icmp sgt i8 %9077, -1, !dbg !310
  br i1 %9078, label %9079, label %9081, !dbg !311

9079:                                             ; preds = %9074
  %9080 = zext i8 %9077 to i32, !dbg !312
  store i32 %9080, i32* %9056, align 4, !dbg !313
  store i32 1, i32* %9063, align 4, !dbg !314
  br label %9084, !dbg !315

9081:                                             ; preds = %9074
  %9082 = call i8 @sqlite3GetVarint32(i8* %9076, i32* %9056), !dbg !316
  %9083 = zext i8 %9082 to i32, !dbg !317
  store i32 %9083, i32* %9063, align 4, !dbg !318
  br label %9084, !dbg !319

9084:                                             ; preds = %9081, %9079
  store i16 0, i16* %9067, align 2, !dbg !320
  %9085 = load i32, i32* %9065, align 4, !dbg !321
  %9086 = load i32, i32* %9056, align 4, !dbg !322
  %9087 = icmp ult i32 %9085, %9086, !dbg !323
  br i1 %9087, label %9089, label %9088, !dbg !324

9088:                                             ; preds = %9084
  store i8* %9076, i8** %9048, align 8, !dbg !325
  br label %9208, !dbg !326

9089:                                             ; preds = %9084
  store i8* null, i8** %9066, align 8, !dbg !327
  store i32 0, i32* %9065, align 4, !dbg !328
  br label %9115, !dbg !329

9090:                                             ; preds = %9073
  %9091 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 12, i32 0, !dbg !330
  %9092 = load %struct.BtCursor*, %struct.BtCursor** %9091, align 8, !dbg !331
  %9093 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9092), !dbg !332
  store i32 %9093, i32* %9064, align 4, !dbg !333
  %9094 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9092, i32* %9065), !dbg !334
  store i8* %9094, i8** %9066, align 8, !dbg !335
  br label %9074, !dbg !336

9095:                                             ; preds = %9073
  %9096 = icmp eq i8 %9058, 3, !dbg !337
  br i1 %9096, label %9097, label %9108, !dbg !338

9097:                                             ; preds = %9095
  %9098 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 10, !dbg !339
  %9099 = load i32, i32* %9098, align 4, !dbg !340
  %9100 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9099, !dbg !341
  %9101 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9100, i32 0, i32 1, !dbg !342
  %9102 = load i16, i16* %9101, align 2, !dbg !343
  %9103 = and i16 %9102, 16, !dbg !344
  %9104 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9100, i32 0, i32 4, !dbg !345
  %9105 = load i32, i32* %9104, align 4, !dbg !346
  store i32 %9105, i32* %9064, align 4, !dbg !347
  store i32 %9105, i32* %9065, align 4, !dbg !348
  %9106 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9100, i32 0, i32 5, !dbg !349
  %9107 = load i8*, i8** %9106, align 8, !dbg !350
  store i8* %9107, i8** %9066, align 8, !dbg !351
  br label %9074, !dbg !352

9108:                                             ; preds = %9095
  %9109 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 1, !dbg !353
  %9110 = load i16, i16* %9109, align 2, !dbg !353
  %9111 = and i16 %9110, 9216, !dbg !353
  %9112 = icmp ne i16 %9111, 0, !dbg !353
  br i1 %9112, label %9113, label %9114, !dbg !353

9113:                                             ; preds = %9108
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9052), !dbg !353
  br label %9296, !dbg !353

9114:                                             ; preds = %9108
  store i16 1, i16* %9109, align 2, !dbg !353
  br label %9296, !dbg !353

9115:                                             ; preds = %9089, %9041
  %9116 = load i16, i16* %9067, align 2, !dbg !354
  %9117 = icmp ule i16 %9116, 2, !dbg !355
  br i1 %9117, label %9200, label %9197, !dbg !356

9118:                                             ; preds = %9197, %9286
  %9119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 1, !dbg !357
  %9120 = load i16, i16* %9119, align 2, !dbg !358
  %9121 = and i16 9216, %9120, !dbg !359
  %9122 = icmp eq i16 0, %9121, !dbg !360
  br i1 %9122, label %9123, label %9127, !dbg !361

9123:                                             ; preds = %9118
  %9124 = icmp ne i16 %9121, 0, !dbg !362
  br i1 %9124, label %9125, label %9126, !dbg !362

9125:                                             ; preds = %9123
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9052), !dbg !362
  br label %9127, !dbg !362

9126:                                             ; preds = %9123
  store i16 1, i16* %9119, align 2, !dbg !362
  br label %9127, !dbg !362

9127:                                             ; preds = %9125, %9126, %9118
  %9128 = load i32, i32* %9049, align 4, !dbg !363
  %9129 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 23, i32 2, !dbg !364
  %9130 = load i32, i32* %9129, align 4, !dbg !365
  %9131 = load i32, i32* %9065, align 4, !dbg !366
  %9132 = getelementptr i32, i32* %9056, i32 3, !dbg !367
  %9133 = load i32, i32* %9132, align 4, !dbg !368
  %9134 = icmp sge i32 %9131, %9133, !dbg !369
  br i1 %9134, label %9135, label %9175, !dbg !370

9135:                                             ; preds = %9127
  %9136 = load i8*, i8** %9066, align 8, !dbg !371
  %9137 = ptrtoint i8* %9136 to i64, !dbg !372
  %9138 = getelementptr i32, i32* %9056, i32 2, !dbg !373
  %9139 = load i32, i32* %9138, align 4, !dbg !374
  %9140 = zext i32 %9139 to i64, !dbg !375
  %9141 = add i64 %9137, %9140, !dbg !376
  %9142 = inttoptr i64 %9141 to i8*, !dbg !377
  store i8* %9142, i8** %9048, align 8, !dbg !378
  %9143 = load i32, i32* %9049, align 4, !dbg !379
  %9144 = icmp ult i32 %9143, 12, !dbg !380
  br i1 %9144, label %9145, label %9147, !dbg !381

9145:                                             ; preds = %9135
  %9146 = call i32 @sqlite3VdbeSerialGet(i8* %9142, i32 %9143, %struct.sqlite3_value* %9052), !dbg !382
  br label %9296, !dbg !383

9147:                                             ; preds = %9135
  %9148 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %9148, align 2, !dbg !385
  %9149 = getelementptr i16, i16* %9148, i32 1, !dbg !386
  store i16 514, i16* %9149, align 2, !dbg !387
  %9150 = load i32, i32* %9049, align 4, !dbg !388
  %9151 = sub i32 %9150, 12, !dbg !389
  %9152 = lshr i32 %9151, 1, !dbg !390
  %9153 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 4, !dbg !391
  store i32 %9152, i32* %9153, align 4, !dbg !392
  %9154 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 2, !dbg !393
  store i8 %9044, i8* %9154, align 1, !dbg !394
  %9155 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 5, !dbg !395
  %9156 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 7, !dbg !396
  %9157 = load i32, i32* %9156, align 4, !dbg !397
  %9158 = add i32 %9152, 2, !dbg !398
  %9159 = icmp slt i32 %9157, %9158, !dbg !399
  br i1 %9159, label %9160, label %9162, !dbg !400

9160:                                             ; preds = %9147
  store i16 1, i16* %9119, align 2, !dbg !401
  %9161 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9052, i32 %9158, i32 0), !dbg !402
  br label %9165, !dbg !403

9162:                                             ; preds = %9147
  %9163 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 6, !dbg !404
  %9164 = load i8*, i8** %9163, align 8, !dbg !405
  store i8* %9164, i8** %9155, align 8, !dbg !406
  br label %9165, !dbg !407

9165:                                             ; preds = %9162, %9160
  %9166 = zext i32 %9152 to i64, !dbg !408
  %9167 = load i8*, i8** %9155, align 8, !dbg !409
  %9168 = load i8*, i8** %9048, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9167, i8* %9168, i64 %9166, i1 false), !dbg !411
  %9169 = getelementptr i8, i8* %9167, i32 %9152, !dbg !412
  store i8 0, i8* %9169, align 1, !dbg !413
  %9170 = add i32 %9152, 1, !dbg !414
  %9171 = getelementptr i8, i8* %9167, i32 %9170, !dbg !415
  store i8 0, i8* %9171, align 1, !dbg !416
  %9172 = and i32 %9150, 1, !dbg !417
  %9173 = getelementptr i16, i16* %9148, i32 %9172, !dbg !418
  %9174 = load i16, i16* %9173, align 2, !dbg !419
  store i16 %9174, i16* %9119, align 2, !dbg !420
  br label %9296, !dbg !421

9175:                                             ; preds = %9127
  %9176 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 2, !dbg !422
  store i8 %9044, i8* %9176, align 1, !dbg !423
  %9177 = load i32, i32* %9049, align 4, !dbg !424
  %9178 = and i32 %9177, 1, !dbg !425
  %9179 = icmp eq i32 %9178, 0, !dbg !426
  %9180 = icmp sge i32 %9177, 12, !dbg !427
  %9181 = and i1 %9180, %9179, !dbg !428
  %9182 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9177), !dbg !429
  %9183 = icmp eq i32 %9182, 0, !dbg !430
  br i1 %9183, label %9195, label %9184, !dbg !431

9184:                                             ; preds = %9175
  %9185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 12, i32 0, !dbg !432
  %9186 = load %struct.BtCursor*, %struct.BtCursor** %9185, align 8, !dbg !433
  %9187 = getelementptr i32, i32* %9056, i32 2, !dbg !434
  %9188 = load i32, i32* %9187, align 4, !dbg !435
  %9189 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9186, i32 %9188, i32 %9182, %struct.sqlite3_value* %9052), !dbg !436
  %9190 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 5, !dbg !437
  %9191 = load i8*, i8** %9190, align 8, !dbg !438
  %9192 = call i32 @sqlite3VdbeSerialGet(i8* %9191, i32 %9177, %struct.sqlite3_value* %9052), !dbg !439
  %9193 = load i16, i16* %9119, align 2, !dbg !440
  %9194 = and i16 %9193, -4097, !dbg !441
  store i16 %9194, i16* %9119, align 2, !dbg !442
  br label %9296, !dbg !443

9195:                                             ; preds = %9175
  %9196 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9177, %struct.sqlite3_value* %9052), !dbg !444
  br label %9296, !dbg !445

9197:                                             ; preds = %9115
  %9198 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 23, i32 2, !dbg !446
  %9199 = load i32, i32* %9198, align 4, !dbg !447
  store i32 %9199, i32* %9049, align 4, !dbg !448
  br label %9118, !dbg !449

9200:                                             ; preds = %9115
  %9201 = load i32, i32* %9063, align 4, !dbg !450
  %9202 = load i32, i32* %9056, align 4, !dbg !451
  %9203 = icmp ult i32 %9201, %9202, !dbg !452
  br i1 %9203, label %9204, label %9285, !dbg !453

9204:                                             ; preds = %9200
  %9205 = load i8*, i8** %9066, align 8, !dbg !454
  %9206 = icmp eq i8* %9205, null, !dbg !455
  br i1 %9206, label %9208, label %9207, !dbg !456

9207:                                             ; preds = %9204
  store i8* %9205, i8** %9048, align 8, !dbg !457
  br label %9208, !dbg !458

9208:                                             ; preds = %9207, %9204, %9088
  %9209 = alloca i32, align 4, !dbg !459
  %9210 = load i16, i16* %9067, align 2, !dbg !460
  %9211 = zext i16 %9210 to i32, !dbg !461
  store i32 %9211, i32* %9209, align 4, !dbg !462
  %9212 = alloca i64, align 8, !dbg !463
  %9213 = getelementptr i32, i32* %9056, i32 %9211, !dbg !464
  %9214 = load i32, i32* %9213, align 4, !dbg !465
  %9215 = zext i32 %9214 to i64, !dbg !466
  store i64 %9215, i64* %9212, align 4, !dbg !467
  %9216 = load i8*, i8** %9048, align 8, !dbg !468
  %9217 = load i32, i32* %9063, align 4, !dbg !469
  %9218 = alloca i8*, align 8, !dbg !470
  %9219 = getelementptr i8, i8* %9216, i32 %9217, !dbg !471
  store i8* %9219, i8** %9218, align 8, !dbg !472
  %9220 = load i32, i32* %9056, align 4, !dbg !473
  %9221 = getelementptr i8, i8* %9216, i32 %9220, !dbg !474
  br label %9222, !dbg !475

9222:                                             ; preds = %9229, %9208
  %9223 = load i32, i32* %9209, align 4, !dbg !476
  %9224 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9051, i32 0, i32 23, i32 %9223, !dbg !477
  %9225 = load i8*, i8** %9218, align 8, !dbg !478
  %9226 = load i8, i8* %9225, align 1, !dbg !479
  %9227 = zext i8 %9226 to i32, !dbg !480
  store i32 %9227, i32* %9049, align 4, !dbg !481
  store i32 %9227, i32* %9224, align 4, !dbg !482
  %9228 = icmp sgt i8 %9226, -1, !dbg !483
  br i1 %9228, label %9252, label %9243, !dbg !484

9229:                                             ; preds = %9243, %9252
  %9230 = load i32, i32* %9209, align 4, !dbg !485
  %9231 = add i32 %9230, 1, !dbg !486
  store i32 %9231, i32* %9209, align 4, !dbg !487
  %9232 = load i64, i64* %9212, align 4, !dbg !488
  %9233 = and i64 4294967295, %9232, !dbg !489
  %9234 = trunc i64 %9233 to i32, !dbg !490
  %9235 = getelementptr i32, i32* %9056, i32 %9231, !dbg !491
  store i32 %9234, i32* %9235, align 4, !dbg !492
  %9236 = load i32, i32* %9209, align 4, !dbg !493
  %9237 = icmp sle i32 %9236, 2, !dbg !494
  %9238 = load i8*, i8** %9218, align 8, !dbg !495
  %9239 = ptrtoint i8* %9238 to i64, !dbg !496
  %9240 = ptrtoint i8* %9221 to i64, !dbg !497
  %9241 = icmp ult i64 %9239, %9240, !dbg !498
  %9242 = and i1 %9237, %9241, !dbg !499
  br i1 %9242, label %9222, label %9261, !dbg !500

9243:                                             ; preds = %9222
  %9244 = load i8*, i8** %9218, align 8, !dbg !501
  %9245 = call i8 @sqlite3GetVarint32(i8* %9244, i32* %9049), !dbg !502
  %9246 = getelementptr i8, i8* %9244, i8 %9245, !dbg !503
  store i8* %9246, i8** %9218, align 8, !dbg !504
  %9247 = load i32, i32* %9049, align 4, !dbg !505
  store i32 %9247, i32* %9224, align 4, !dbg !506
  %9248 = load i64, i64* %9212, align 4, !dbg !507
  %9249 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9247), !dbg !508
  %9250 = zext i32 %9249 to i64, !dbg !509
  %9251 = add i64 %9248, %9250, !dbg !510
  store i64 %9251, i64* %9212, align 4, !dbg !511
  br label %9229, !dbg !512

9252:                                             ; preds = %9222
  %9253 = getelementptr i8, i8* %9225, i32 1, !dbg !513
  store i8* %9253, i8** %9218, align 8, !dbg !514
  %9254 = load i32, i32* %9049, align 4, !dbg !515
  %9255 = trunc i32 %9254 to i8, !dbg !516
  %9256 = getelementptr i8, i8* %4, i8 %9255, !dbg !517
  %9257 = load i8, i8* %9256, align 1, !dbg !518
  %9258 = zext i8 %9257 to i64, !dbg !519
  %9259 = load i64, i64* %9212, align 4, !dbg !520
  %9260 = add i64 %9259, %9258, !dbg !521
  store i64 %9260, i64* %9212, align 4, !dbg !522
  br label %9229, !dbg !523

9261:                                             ; preds = %9229
  %9262 = load i64, i64* %9212, align 4, !dbg !524
  %9263 = load i32, i32* %9064, align 4, !dbg !525
  %9264 = zext i32 %9263 to i64, !dbg !526
  %9265 = icmp uge i64 %9239, %9240, !dbg !527
  %9266 = icmp ugt i64 %9239, %9240, !dbg !528
  %9267 = icmp ne i64 %9262, %9264, !dbg !529
  %9268 = icmp ugt i64 %9262, %9264, !dbg !530
  %9269 = or i1 %9266, %9267, !dbg !531
  %9270 = and i1 %9265, %9269, !dbg !532
  %9271 = or i1 %9270, %9268, !dbg !533
  br i1 %9271, label %9272, label %9276, !dbg !534

9272:                                             ; preds = %9261
  %9273 = load i32, i32* %9056, align 4, !dbg !535
  %9274 = icmp eq i32 %9273, 0, !dbg !536
  br i1 %9274, label %9275, label %9276, !dbg !537

9275:                                             ; preds = %9272
  store i32 0, i32* %9209, align 4, !dbg !538
  store i8* %9221, i8** %9218, align 8, !dbg !539
  br label %9276, !dbg !540

9276:                                             ; preds = %9275, %9272, %9261
  %9277 = load i32, i32* %9209, align 4, !dbg !541
  %9278 = trunc i32 %9277 to i16, !dbg !542
  store i16 %9278, i16* %9067, align 2, !dbg !543
  %9279 = load i8*, i8** %9218, align 8, !dbg !544
  %9280 = ptrtoint i8* %9279 to i64, !dbg !545
  %9281 = load i8*, i8** %9048, align 8, !dbg !546
  %9282 = ptrtoint i8* %9281 to i64, !dbg !547
  %9283 = sub i64 %9280, %9282, !dbg !548
  %9284 = trunc i64 %9283 to i32, !dbg !549
  store i32 %9284, i32* %9063, align 4, !dbg !550
  br label %9286, !dbg !551

9285:                                             ; preds = %9200
  store i32 0, i32* %9049, align 4, !dbg !552
  br label %9286, !dbg !553

9286:                                             ; preds = %9276, %9285
  %9287 = load i16, i16* %9067, align 2, !dbg !554
  %9288 = icmp sle i16 %9287, 2, !dbg !555
  br i1 %9288, label %9289, label %9118, !dbg !556

9289:                                             ; preds = %9286
  %9290 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9052, i32 0, i32 1, !dbg !557
  %9291 = load i16, i16* %9290, align 2, !dbg !557
  %9292 = and i16 %9291, 9216, !dbg !557
  %9293 = icmp ne i16 %9292, 0, !dbg !557
  br i1 %9293, label %9294, label %9295, !dbg !557

9294:                                             ; preds = %9289
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9052), !dbg !557
  br label %9296, !dbg !557

9295:                                             ; preds = %9289
  store i16 1, i16* %9290, align 2, !dbg !557
  br label %9296, !dbg !557

9296:                                             ; preds = %9294, %9295, %9165, %9145, %9184, %9195, %9113, %9114
  call void @llvm.stackrestore(i8* %9042), !dbg !558
  br label %9297, !dbg !75

9297:                                             ; preds = %19, %9296
  %9298 = call i8* @llvm.stacksave(), !dbg !266
  %9299 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %9300 = load i8, i8* %9299, align 1, !dbg !270
  %9301 = alloca i32, align 4, !dbg !271
  store i32 0, i32* %9301, align 4, !dbg !272
  %9302 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %9303 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !275
  store %struct.VdbeCursor* %9303, %struct.VdbeCursor** %9302, align 8, !dbg !276
  %9304 = alloca i8*, align 8, !dbg !277
  %9305 = alloca i32, align 4, !dbg !278
  %9306 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9302, i32* %9301), !dbg !279
  %9307 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9302, align 8, !dbg !280
  %9308 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 66, !dbg !281
  %9309 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 16, !dbg !282
  %9310 = load i16, i16* %9309, align 2, !dbg !283
  %9311 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 19, !dbg !284
  %9312 = load i32*, i32** %9311, align 8, !dbg !285
  %9313 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 0, !dbg !286
  %9314 = load i8, i8* %9313, align 1, !dbg !287
  %9315 = icmp ne i8 %9314, 3, !dbg !288
  %9316 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 2, !dbg !289
  %9317 = load i8, i8* %9316, align 1, !dbg !290
  %9318 = icmp ne i8 %9317, 0, !dbg !291
  %9319 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 14, !dbg !292
  %9320 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 21, !dbg !293
  %9321 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 22, !dbg !294
  %9322 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 20, !dbg !295
  %9323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 17, !dbg !296
  %9324 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 9, !dbg !297
  %9325 = load i32, i32* %9324, align 4, !dbg !298
  %9326 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %9327 = load i32, i32* %9326, align 4, !dbg !300
  %9328 = icmp ne i32 %9325, %9327, !dbg !301
  br i1 %9328, label %9329, label %9371, !dbg !302

9329:                                             ; preds = %9297
  br i1 %9318, label %9351, label %9346, !dbg !303

9330:                                             ; preds = %9346, %9353
  %9331 = load i32, i32* %9326, align 4, !dbg !304
  store i32 %9331, i32* %9324, align 4, !dbg !305
  %9332 = load i8*, i8** %9322, align 8, !dbg !306
  %9333 = load i8, i8* %9332, align 1, !dbg !307
  %9334 = icmp sgt i8 %9333, -1, !dbg !310
  br i1 %9334, label %9335, label %9337, !dbg !311

9335:                                             ; preds = %9330
  %9336 = zext i8 %9333 to i32, !dbg !312
  store i32 %9336, i32* %9312, align 4, !dbg !313
  store i32 1, i32* %9319, align 4, !dbg !314
  br label %9340, !dbg !315

9337:                                             ; preds = %9330
  %9338 = call i8 @sqlite3GetVarint32(i8* %9332, i32* %9312), !dbg !316
  %9339 = zext i8 %9338 to i32, !dbg !317
  store i32 %9339, i32* %9319, align 4, !dbg !318
  br label %9340, !dbg !319

9340:                                             ; preds = %9337, %9335
  store i16 0, i16* %9323, align 2, !dbg !320
  %9341 = load i32, i32* %9321, align 4, !dbg !321
  %9342 = load i32, i32* %9312, align 4, !dbg !322
  %9343 = icmp ult i32 %9341, %9342, !dbg !323
  br i1 %9343, label %9345, label %9344, !dbg !324

9344:                                             ; preds = %9340
  store i8* %9332, i8** %9304, align 8, !dbg !325
  br label %9464, !dbg !326

9345:                                             ; preds = %9340
  store i8* null, i8** %9322, align 8, !dbg !327
  store i32 0, i32* %9321, align 4, !dbg !328
  br label %9371, !dbg !329

9346:                                             ; preds = %9329
  %9347 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 12, i32 0, !dbg !330
  %9348 = load %struct.BtCursor*, %struct.BtCursor** %9347, align 8, !dbg !331
  %9349 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9348), !dbg !332
  store i32 %9349, i32* %9320, align 4, !dbg !333
  %9350 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9348, i32* %9321), !dbg !334
  store i8* %9350, i8** %9322, align 8, !dbg !335
  br label %9330, !dbg !336

9351:                                             ; preds = %9329
  %9352 = icmp eq i8 %9314, 3, !dbg !337
  br i1 %9352, label %9353, label %9364, !dbg !338

9353:                                             ; preds = %9351
  %9354 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 10, !dbg !339
  %9355 = load i32, i32* %9354, align 4, !dbg !340
  %9356 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9355, !dbg !341
  %9357 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9356, i32 0, i32 1, !dbg !342
  %9358 = load i16, i16* %9357, align 2, !dbg !343
  %9359 = and i16 %9358, 16, !dbg !344
  %9360 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9356, i32 0, i32 4, !dbg !345
  %9361 = load i32, i32* %9360, align 4, !dbg !346
  store i32 %9361, i32* %9320, align 4, !dbg !347
  store i32 %9361, i32* %9321, align 4, !dbg !348
  %9362 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9356, i32 0, i32 5, !dbg !349
  %9363 = load i8*, i8** %9362, align 8, !dbg !350
  store i8* %9363, i8** %9322, align 8, !dbg !351
  br label %9330, !dbg !352

9364:                                             ; preds = %9351
  %9365 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 1, !dbg !353
  %9366 = load i16, i16* %9365, align 2, !dbg !353
  %9367 = and i16 %9366, 9216, !dbg !353
  %9368 = icmp ne i16 %9367, 0, !dbg !353
  br i1 %9368, label %9369, label %9370, !dbg !353

9369:                                             ; preds = %9364
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9308), !dbg !353
  br label %9552, !dbg !353

9370:                                             ; preds = %9364
  store i16 1, i16* %9365, align 2, !dbg !353
  br label %9552, !dbg !353

9371:                                             ; preds = %9345, %9297
  %9372 = load i16, i16* %9323, align 2, !dbg !354
  %9373 = icmp ule i16 %9372, 4, !dbg !355
  br i1 %9373, label %9456, label %9453, !dbg !356

9374:                                             ; preds = %9453, %9542
  %9375 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 1, !dbg !357
  %9376 = load i16, i16* %9375, align 2, !dbg !358
  %9377 = and i16 9216, %9376, !dbg !359
  %9378 = icmp eq i16 0, %9377, !dbg !360
  br i1 %9378, label %9379, label %9383, !dbg !361

9379:                                             ; preds = %9374
  %9380 = icmp ne i16 %9377, 0, !dbg !362
  br i1 %9380, label %9381, label %9382, !dbg !362

9381:                                             ; preds = %9379
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9308), !dbg !362
  br label %9383, !dbg !362

9382:                                             ; preds = %9379
  store i16 1, i16* %9375, align 2, !dbg !362
  br label %9383, !dbg !362

9383:                                             ; preds = %9381, %9382, %9374
  %9384 = load i32, i32* %9305, align 4, !dbg !363
  %9385 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 23, i32 4, !dbg !364
  %9386 = load i32, i32* %9385, align 4, !dbg !365
  %9387 = load i32, i32* %9321, align 4, !dbg !366
  %9388 = getelementptr i32, i32* %9312, i32 5, !dbg !367
  %9389 = load i32, i32* %9388, align 4, !dbg !368
  %9390 = icmp sge i32 %9387, %9389, !dbg !369
  br i1 %9390, label %9391, label %9431, !dbg !370

9391:                                             ; preds = %9383
  %9392 = load i8*, i8** %9322, align 8, !dbg !371
  %9393 = ptrtoint i8* %9392 to i64, !dbg !372
  %9394 = getelementptr i32, i32* %9312, i32 4, !dbg !373
  %9395 = load i32, i32* %9394, align 4, !dbg !374
  %9396 = zext i32 %9395 to i64, !dbg !375
  %9397 = add i64 %9393, %9396, !dbg !376
  %9398 = inttoptr i64 %9397 to i8*, !dbg !377
  store i8* %9398, i8** %9304, align 8, !dbg !378
  %9399 = load i32, i32* %9305, align 4, !dbg !379
  %9400 = icmp ult i32 %9399, 12, !dbg !380
  br i1 %9400, label %9401, label %9403, !dbg !381

9401:                                             ; preds = %9391
  %9402 = call i32 @sqlite3VdbeSerialGet(i8* %9398, i32 %9399, %struct.sqlite3_value* %9308), !dbg !382
  br label %9552, !dbg !383

9403:                                             ; preds = %9391
  %9404 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %9404, align 2, !dbg !385
  %9405 = getelementptr i16, i16* %9404, i32 1, !dbg !386
  store i16 514, i16* %9405, align 2, !dbg !387
  %9406 = load i32, i32* %9305, align 4, !dbg !388
  %9407 = sub i32 %9406, 12, !dbg !389
  %9408 = lshr i32 %9407, 1, !dbg !390
  %9409 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 4, !dbg !391
  store i32 %9408, i32* %9409, align 4, !dbg !392
  %9410 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 2, !dbg !393
  store i8 %9300, i8* %9410, align 1, !dbg !394
  %9411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 5, !dbg !395
  %9412 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 7, !dbg !396
  %9413 = load i32, i32* %9412, align 4, !dbg !397
  %9414 = add i32 %9408, 2, !dbg !398
  %9415 = icmp slt i32 %9413, %9414, !dbg !399
  br i1 %9415, label %9416, label %9418, !dbg !400

9416:                                             ; preds = %9403
  store i16 1, i16* %9375, align 2, !dbg !401
  %9417 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9308, i32 %9414, i32 0), !dbg !402
  br label %9421, !dbg !403

9418:                                             ; preds = %9403
  %9419 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 6, !dbg !404
  %9420 = load i8*, i8** %9419, align 8, !dbg !405
  store i8* %9420, i8** %9411, align 8, !dbg !406
  br label %9421, !dbg !407

9421:                                             ; preds = %9418, %9416
  %9422 = zext i32 %9408 to i64, !dbg !408
  %9423 = load i8*, i8** %9411, align 8, !dbg !409
  %9424 = load i8*, i8** %9304, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9423, i8* %9424, i64 %9422, i1 false), !dbg !411
  %9425 = getelementptr i8, i8* %9423, i32 %9408, !dbg !412
  store i8 0, i8* %9425, align 1, !dbg !413
  %9426 = add i32 %9408, 1, !dbg !414
  %9427 = getelementptr i8, i8* %9423, i32 %9426, !dbg !415
  store i8 0, i8* %9427, align 1, !dbg !416
  %9428 = and i32 %9406, 1, !dbg !417
  %9429 = getelementptr i16, i16* %9404, i32 %9428, !dbg !418
  %9430 = load i16, i16* %9429, align 2, !dbg !419
  store i16 %9430, i16* %9375, align 2, !dbg !420
  br label %9552, !dbg !421

9431:                                             ; preds = %9383
  %9432 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 2, !dbg !422
  store i8 %9300, i8* %9432, align 1, !dbg !423
  %9433 = load i32, i32* %9305, align 4, !dbg !424
  %9434 = and i32 %9433, 1, !dbg !425
  %9435 = icmp eq i32 %9434, 0, !dbg !426
  %9436 = icmp sge i32 %9433, 12, !dbg !427
  %9437 = and i1 %9436, %9435, !dbg !428
  %9438 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9433), !dbg !429
  %9439 = icmp eq i32 %9438, 0, !dbg !430
  br i1 %9439, label %9451, label %9440, !dbg !431

9440:                                             ; preds = %9431
  %9441 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 12, i32 0, !dbg !432
  %9442 = load %struct.BtCursor*, %struct.BtCursor** %9441, align 8, !dbg !433
  %9443 = getelementptr i32, i32* %9312, i32 4, !dbg !434
  %9444 = load i32, i32* %9443, align 4, !dbg !435
  %9445 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9442, i32 %9444, i32 %9438, %struct.sqlite3_value* %9308), !dbg !436
  %9446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 5, !dbg !437
  %9447 = load i8*, i8** %9446, align 8, !dbg !438
  %9448 = call i32 @sqlite3VdbeSerialGet(i8* %9447, i32 %9433, %struct.sqlite3_value* %9308), !dbg !439
  %9449 = load i16, i16* %9375, align 2, !dbg !440
  %9450 = and i16 %9449, -4097, !dbg !441
  store i16 %9450, i16* %9375, align 2, !dbg !442
  br label %9552, !dbg !443

9451:                                             ; preds = %9431
  %9452 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9433, %struct.sqlite3_value* %9308), !dbg !444
  br label %9552, !dbg !445

9453:                                             ; preds = %9371
  %9454 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 23, i32 4, !dbg !446
  %9455 = load i32, i32* %9454, align 4, !dbg !447
  store i32 %9455, i32* %9305, align 4, !dbg !448
  br label %9374, !dbg !449

9456:                                             ; preds = %9371
  %9457 = load i32, i32* %9319, align 4, !dbg !450
  %9458 = load i32, i32* %9312, align 4, !dbg !451
  %9459 = icmp ult i32 %9457, %9458, !dbg !452
  br i1 %9459, label %9460, label %9541, !dbg !453

9460:                                             ; preds = %9456
  %9461 = load i8*, i8** %9322, align 8, !dbg !454
  %9462 = icmp eq i8* %9461, null, !dbg !455
  br i1 %9462, label %9464, label %9463, !dbg !456

9463:                                             ; preds = %9460
  store i8* %9461, i8** %9304, align 8, !dbg !457
  br label %9464, !dbg !458

9464:                                             ; preds = %9463, %9460, %9344
  %9465 = alloca i32, align 4, !dbg !459
  %9466 = load i16, i16* %9323, align 2, !dbg !460
  %9467 = zext i16 %9466 to i32, !dbg !461
  store i32 %9467, i32* %9465, align 4, !dbg !462
  %9468 = alloca i64, align 8, !dbg !463
  %9469 = getelementptr i32, i32* %9312, i32 %9467, !dbg !464
  %9470 = load i32, i32* %9469, align 4, !dbg !465
  %9471 = zext i32 %9470 to i64, !dbg !466
  store i64 %9471, i64* %9468, align 4, !dbg !467
  %9472 = load i8*, i8** %9304, align 8, !dbg !468
  %9473 = load i32, i32* %9319, align 4, !dbg !469
  %9474 = alloca i8*, align 8, !dbg !470
  %9475 = getelementptr i8, i8* %9472, i32 %9473, !dbg !471
  store i8* %9475, i8** %9474, align 8, !dbg !472
  %9476 = load i32, i32* %9312, align 4, !dbg !473
  %9477 = getelementptr i8, i8* %9472, i32 %9476, !dbg !474
  br label %9478, !dbg !475

9478:                                             ; preds = %9485, %9464
  %9479 = load i32, i32* %9465, align 4, !dbg !476
  %9480 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9307, i32 0, i32 23, i32 %9479, !dbg !477
  %9481 = load i8*, i8** %9474, align 8, !dbg !478
  %9482 = load i8, i8* %9481, align 1, !dbg !479
  %9483 = zext i8 %9482 to i32, !dbg !480
  store i32 %9483, i32* %9305, align 4, !dbg !481
  store i32 %9483, i32* %9480, align 4, !dbg !482
  %9484 = icmp sgt i8 %9482, -1, !dbg !483
  br i1 %9484, label %9508, label %9499, !dbg !484

9485:                                             ; preds = %9499, %9508
  %9486 = load i32, i32* %9465, align 4, !dbg !485
  %9487 = add i32 %9486, 1, !dbg !486
  store i32 %9487, i32* %9465, align 4, !dbg !487
  %9488 = load i64, i64* %9468, align 4, !dbg !488
  %9489 = and i64 4294967295, %9488, !dbg !489
  %9490 = trunc i64 %9489 to i32, !dbg !490
  %9491 = getelementptr i32, i32* %9312, i32 %9487, !dbg !491
  store i32 %9490, i32* %9491, align 4, !dbg !492
  %9492 = load i32, i32* %9465, align 4, !dbg !493
  %9493 = icmp sle i32 %9492, 4, !dbg !494
  %9494 = load i8*, i8** %9474, align 8, !dbg !495
  %9495 = ptrtoint i8* %9494 to i64, !dbg !496
  %9496 = ptrtoint i8* %9477 to i64, !dbg !497
  %9497 = icmp ult i64 %9495, %9496, !dbg !498
  %9498 = and i1 %9493, %9497, !dbg !499
  br i1 %9498, label %9478, label %9517, !dbg !500

9499:                                             ; preds = %9478
  %9500 = load i8*, i8** %9474, align 8, !dbg !501
  %9501 = call i8 @sqlite3GetVarint32(i8* %9500, i32* %9305), !dbg !502
  %9502 = getelementptr i8, i8* %9500, i8 %9501, !dbg !503
  store i8* %9502, i8** %9474, align 8, !dbg !504
  %9503 = load i32, i32* %9305, align 4, !dbg !505
  store i32 %9503, i32* %9480, align 4, !dbg !506
  %9504 = load i64, i64* %9468, align 4, !dbg !507
  %9505 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9503), !dbg !508
  %9506 = zext i32 %9505 to i64, !dbg !509
  %9507 = add i64 %9504, %9506, !dbg !510
  store i64 %9507, i64* %9468, align 4, !dbg !511
  br label %9485, !dbg !512

9508:                                             ; preds = %9478
  %9509 = getelementptr i8, i8* %9481, i32 1, !dbg !513
  store i8* %9509, i8** %9474, align 8, !dbg !514
  %9510 = load i32, i32* %9305, align 4, !dbg !515
  %9511 = trunc i32 %9510 to i8, !dbg !516
  %9512 = getelementptr i8, i8* %4, i8 %9511, !dbg !517
  %9513 = load i8, i8* %9512, align 1, !dbg !518
  %9514 = zext i8 %9513 to i64, !dbg !519
  %9515 = load i64, i64* %9468, align 4, !dbg !520
  %9516 = add i64 %9515, %9514, !dbg !521
  store i64 %9516, i64* %9468, align 4, !dbg !522
  br label %9485, !dbg !523

9517:                                             ; preds = %9485
  %9518 = load i64, i64* %9468, align 4, !dbg !524
  %9519 = load i32, i32* %9320, align 4, !dbg !525
  %9520 = zext i32 %9519 to i64, !dbg !526
  %9521 = icmp uge i64 %9495, %9496, !dbg !527
  %9522 = icmp ugt i64 %9495, %9496, !dbg !528
  %9523 = icmp ne i64 %9518, %9520, !dbg !529
  %9524 = icmp ugt i64 %9518, %9520, !dbg !530
  %9525 = or i1 %9522, %9523, !dbg !531
  %9526 = and i1 %9521, %9525, !dbg !532
  %9527 = or i1 %9526, %9524, !dbg !533
  br i1 %9527, label %9528, label %9532, !dbg !534

9528:                                             ; preds = %9517
  %9529 = load i32, i32* %9312, align 4, !dbg !535
  %9530 = icmp eq i32 %9529, 0, !dbg !536
  br i1 %9530, label %9531, label %9532, !dbg !537

9531:                                             ; preds = %9528
  store i32 0, i32* %9465, align 4, !dbg !538
  store i8* %9477, i8** %9474, align 8, !dbg !539
  br label %9532, !dbg !540

9532:                                             ; preds = %9531, %9528, %9517
  %9533 = load i32, i32* %9465, align 4, !dbg !541
  %9534 = trunc i32 %9533 to i16, !dbg !542
  store i16 %9534, i16* %9323, align 2, !dbg !543
  %9535 = load i8*, i8** %9474, align 8, !dbg !544
  %9536 = ptrtoint i8* %9535 to i64, !dbg !545
  %9537 = load i8*, i8** %9304, align 8, !dbg !546
  %9538 = ptrtoint i8* %9537 to i64, !dbg !547
  %9539 = sub i64 %9536, %9538, !dbg !548
  %9540 = trunc i64 %9539 to i32, !dbg !549
  store i32 %9540, i32* %9319, align 4, !dbg !550
  br label %9542, !dbg !551

9541:                                             ; preds = %9456
  store i32 0, i32* %9305, align 4, !dbg !552
  br label %9542, !dbg !553

9542:                                             ; preds = %9532, %9541
  %9543 = load i16, i16* %9323, align 2, !dbg !554
  %9544 = icmp sle i16 %9543, 4, !dbg !555
  br i1 %9544, label %9545, label %9374, !dbg !556

9545:                                             ; preds = %9542
  %9546 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9308, i32 0, i32 1, !dbg !557
  %9547 = load i16, i16* %9546, align 2, !dbg !557
  %9548 = and i16 %9547, 9216, !dbg !557
  %9549 = icmp ne i16 %9548, 0, !dbg !557
  br i1 %9549, label %9550, label %9551, !dbg !557

9550:                                             ; preds = %9545
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9308), !dbg !557
  br label %9552, !dbg !557

9551:                                             ; preds = %9545
  store i16 1, i16* %9546, align 2, !dbg !557
  br label %9552, !dbg !557

9552:                                             ; preds = %9550, %9551, %9421, %9401, %9440, %9451, %9369, %9370
  call void @llvm.stackrestore(i8* %9298), !dbg !558
  br label %9553, !dbg !75

9553:                                             ; preds = %19, %9552
  %9554 = call i8* @llvm.stacksave(), !dbg !266
  %9555 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %9556 = load i8, i8* %9555, align 1, !dbg !270
  %9557 = alloca i32, align 4, !dbg !271
  store i32 1, i32* %9557, align 4, !dbg !272
  %9558 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !273
  %9559 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %9560 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9558, align 8, !dbg !275
  store %struct.VdbeCursor* %9560, %struct.VdbeCursor** %9559, align 8, !dbg !276
  %9561 = alloca i8*, align 8, !dbg !277
  %9562 = alloca i32, align 4, !dbg !278
  %9563 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %9559, i32* %9557), !dbg !279
  %9564 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9559, align 8, !dbg !280
  %9565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 67, !dbg !281
  %9566 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 16, !dbg !282
  %9567 = load i16, i16* %9566, align 2, !dbg !283
  %9568 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 19, !dbg !284
  %9569 = load i32*, i32** %9568, align 8, !dbg !285
  %9570 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 0, !dbg !286
  %9571 = load i8, i8* %9570, align 1, !dbg !287
  %9572 = icmp ne i8 %9571, 3, !dbg !288
  %9573 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 2, !dbg !289
  %9574 = load i8, i8* %9573, align 1, !dbg !290
  %9575 = icmp ne i8 %9574, 0, !dbg !291
  %9576 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 14, !dbg !292
  %9577 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 21, !dbg !293
  %9578 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 22, !dbg !294
  %9579 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 20, !dbg !295
  %9580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 17, !dbg !296
  %9581 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 9, !dbg !297
  %9582 = load i32, i32* %9581, align 4, !dbg !298
  %9583 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %9584 = load i32, i32* %9583, align 4, !dbg !300
  %9585 = icmp ne i32 %9582, %9584, !dbg !301
  br i1 %9585, label %9586, label %9628, !dbg !302

9586:                                             ; preds = %9553
  br i1 %9575, label %9608, label %9603, !dbg !303

9587:                                             ; preds = %9603, %9610
  %9588 = load i32, i32* %9583, align 4, !dbg !304
  store i32 %9588, i32* %9581, align 4, !dbg !305
  %9589 = load i8*, i8** %9579, align 8, !dbg !306
  %9590 = load i8, i8* %9589, align 1, !dbg !307
  %9591 = icmp sgt i8 %9590, -1, !dbg !310
  br i1 %9591, label %9592, label %9594, !dbg !311

9592:                                             ; preds = %9587
  %9593 = zext i8 %9590 to i32, !dbg !312
  store i32 %9593, i32* %9569, align 4, !dbg !313
  store i32 1, i32* %9576, align 4, !dbg !314
  br label %9597, !dbg !315

9594:                                             ; preds = %9587
  %9595 = call i8 @sqlite3GetVarint32(i8* %9589, i32* %9569), !dbg !316
  %9596 = zext i8 %9595 to i32, !dbg !317
  store i32 %9596, i32* %9576, align 4, !dbg !318
  br label %9597, !dbg !319

9597:                                             ; preds = %9594, %9592
  store i16 0, i16* %9580, align 2, !dbg !320
  %9598 = load i32, i32* %9578, align 4, !dbg !321
  %9599 = load i32, i32* %9569, align 4, !dbg !322
  %9600 = icmp ult i32 %9598, %9599, !dbg !323
  br i1 %9600, label %9602, label %9601, !dbg !324

9601:                                             ; preds = %9597
  store i8* %9589, i8** %9561, align 8, !dbg !325
  br label %9721, !dbg !326

9602:                                             ; preds = %9597
  store i8* null, i8** %9579, align 8, !dbg !327
  store i32 0, i32* %9578, align 4, !dbg !328
  br label %9628, !dbg !329

9603:                                             ; preds = %9586
  %9604 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 12, i32 0, !dbg !330
  %9605 = load %struct.BtCursor*, %struct.BtCursor** %9604, align 8, !dbg !331
  %9606 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %9605), !dbg !332
  store i32 %9606, i32* %9577, align 4, !dbg !333
  %9607 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %9605, i32* %9578), !dbg !334
  store i8* %9607, i8** %9579, align 8, !dbg !335
  br label %9587, !dbg !336

9608:                                             ; preds = %9586
  %9609 = icmp eq i8 %9571, 3, !dbg !337
  br i1 %9609, label %9610, label %9621, !dbg !338

9610:                                             ; preds = %9608
  %9611 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 10, !dbg !339
  %9612 = load i32, i32* %9611, align 4, !dbg !340
  %9613 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9612, !dbg !341
  %9614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9613, i32 0, i32 1, !dbg !342
  %9615 = load i16, i16* %9614, align 2, !dbg !343
  %9616 = and i16 %9615, 16, !dbg !344
  %9617 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9613, i32 0, i32 4, !dbg !345
  %9618 = load i32, i32* %9617, align 4, !dbg !346
  store i32 %9618, i32* %9577, align 4, !dbg !347
  store i32 %9618, i32* %9578, align 4, !dbg !348
  %9619 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9613, i32 0, i32 5, !dbg !349
  %9620 = load i8*, i8** %9619, align 8, !dbg !350
  store i8* %9620, i8** %9579, align 8, !dbg !351
  br label %9587, !dbg !352

9621:                                             ; preds = %9608
  %9622 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 1, !dbg !353
  %9623 = load i16, i16* %9622, align 2, !dbg !353
  %9624 = and i16 %9623, 9216, !dbg !353
  %9625 = icmp ne i16 %9624, 0, !dbg !353
  br i1 %9625, label %9626, label %9627, !dbg !353

9626:                                             ; preds = %9621
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9565), !dbg !353
  br label %9809, !dbg !353

9627:                                             ; preds = %9621
  store i16 1, i16* %9622, align 2, !dbg !353
  br label %9809, !dbg !353

9628:                                             ; preds = %9602, %9553
  %9629 = load i16, i16* %9580, align 2, !dbg !354
  %9630 = icmp ule i16 %9629, 1, !dbg !355
  br i1 %9630, label %9713, label %9710, !dbg !356

9631:                                             ; preds = %9710, %9799
  %9632 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 1, !dbg !357
  %9633 = load i16, i16* %9632, align 2, !dbg !358
  %9634 = and i16 9216, %9633, !dbg !359
  %9635 = icmp eq i16 0, %9634, !dbg !360
  br i1 %9635, label %9636, label %9640, !dbg !361

9636:                                             ; preds = %9631
  %9637 = icmp ne i16 %9634, 0, !dbg !362
  br i1 %9637, label %9638, label %9639, !dbg !362

9638:                                             ; preds = %9636
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9565), !dbg !362
  br label %9640, !dbg !362

9639:                                             ; preds = %9636
  store i16 1, i16* %9632, align 2, !dbg !362
  br label %9640, !dbg !362

9640:                                             ; preds = %9638, %9639, %9631
  %9641 = load i32, i32* %9562, align 4, !dbg !363
  %9642 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 23, i32 1, !dbg !364
  %9643 = load i32, i32* %9642, align 4, !dbg !365
  %9644 = load i32, i32* %9578, align 4, !dbg !366
  %9645 = getelementptr i32, i32* %9569, i32 2, !dbg !367
  %9646 = load i32, i32* %9645, align 4, !dbg !368
  %9647 = icmp sge i32 %9644, %9646, !dbg !369
  br i1 %9647, label %9648, label %9688, !dbg !370

9648:                                             ; preds = %9640
  %9649 = load i8*, i8** %9579, align 8, !dbg !371
  %9650 = ptrtoint i8* %9649 to i64, !dbg !372
  %9651 = getelementptr i32, i32* %9569, i32 1, !dbg !373
  %9652 = load i32, i32* %9651, align 4, !dbg !374
  %9653 = zext i32 %9652 to i64, !dbg !375
  %9654 = add i64 %9650, %9653, !dbg !376
  %9655 = inttoptr i64 %9654 to i8*, !dbg !377
  store i8* %9655, i8** %9561, align 8, !dbg !378
  %9656 = load i32, i32* %9562, align 4, !dbg !379
  %9657 = icmp ult i32 %9656, 12, !dbg !380
  br i1 %9657, label %9658, label %9660, !dbg !381

9658:                                             ; preds = %9648
  %9659 = call i32 @sqlite3VdbeSerialGet(i8* %9655, i32 %9656, %struct.sqlite3_value* %9565), !dbg !382
  br label %9809, !dbg !383

9660:                                             ; preds = %9648
  %9661 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %9661, align 2, !dbg !385
  %9662 = getelementptr i16, i16* %9661, i32 1, !dbg !386
  store i16 514, i16* %9662, align 2, !dbg !387
  %9663 = load i32, i32* %9562, align 4, !dbg !388
  %9664 = sub i32 %9663, 12, !dbg !389
  %9665 = lshr i32 %9664, 1, !dbg !390
  %9666 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 4, !dbg !391
  store i32 %9665, i32* %9666, align 4, !dbg !392
  %9667 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 2, !dbg !393
  store i8 %9556, i8* %9667, align 1, !dbg !394
  %9668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 5, !dbg !395
  %9669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 7, !dbg !396
  %9670 = load i32, i32* %9669, align 4, !dbg !397
  %9671 = add i32 %9665, 2, !dbg !398
  %9672 = icmp slt i32 %9670, %9671, !dbg !399
  br i1 %9672, label %9673, label %9675, !dbg !400

9673:                                             ; preds = %9660
  store i16 1, i16* %9632, align 2, !dbg !401
  %9674 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %9565, i32 %9671, i32 0), !dbg !402
  br label %9678, !dbg !403

9675:                                             ; preds = %9660
  %9676 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 6, !dbg !404
  %9677 = load i8*, i8** %9676, align 8, !dbg !405
  store i8* %9677, i8** %9668, align 8, !dbg !406
  br label %9678, !dbg !407

9678:                                             ; preds = %9675, %9673
  %9679 = zext i32 %9665 to i64, !dbg !408
  %9680 = load i8*, i8** %9668, align 8, !dbg !409
  %9681 = load i8*, i8** %9561, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9680, i8* %9681, i64 %9679, i1 false), !dbg !411
  %9682 = getelementptr i8, i8* %9680, i32 %9665, !dbg !412
  store i8 0, i8* %9682, align 1, !dbg !413
  %9683 = add i32 %9665, 1, !dbg !414
  %9684 = getelementptr i8, i8* %9680, i32 %9683, !dbg !415
  store i8 0, i8* %9684, align 1, !dbg !416
  %9685 = and i32 %9663, 1, !dbg !417
  %9686 = getelementptr i16, i16* %9661, i32 %9685, !dbg !418
  %9687 = load i16, i16* %9686, align 2, !dbg !419
  store i16 %9687, i16* %9632, align 2, !dbg !420
  br label %9809, !dbg !421

9688:                                             ; preds = %9640
  %9689 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 2, !dbg !422
  store i8 %9556, i8* %9689, align 1, !dbg !423
  %9690 = load i32, i32* %9562, align 4, !dbg !424
  %9691 = and i32 %9690, 1, !dbg !425
  %9692 = icmp eq i32 %9691, 0, !dbg !426
  %9693 = icmp sge i32 %9690, 12, !dbg !427
  %9694 = and i1 %9693, %9692, !dbg !428
  %9695 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9690), !dbg !429
  %9696 = icmp eq i32 %9695, 0, !dbg !430
  br i1 %9696, label %9708, label %9697, !dbg !431

9697:                                             ; preds = %9688
  %9698 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 12, i32 0, !dbg !432
  %9699 = load %struct.BtCursor*, %struct.BtCursor** %9698, align 8, !dbg !433
  %9700 = getelementptr i32, i32* %9569, i32 1, !dbg !434
  %9701 = load i32, i32* %9700, align 4, !dbg !435
  %9702 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %9699, i32 %9701, i32 %9695, %struct.sqlite3_value* %9565), !dbg !436
  %9703 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 5, !dbg !437
  %9704 = load i8*, i8** %9703, align 8, !dbg !438
  %9705 = call i32 @sqlite3VdbeSerialGet(i8* %9704, i32 %9690, %struct.sqlite3_value* %9565), !dbg !439
  %9706 = load i16, i16* %9632, align 2, !dbg !440
  %9707 = and i16 %9706, -4097, !dbg !441
  store i16 %9707, i16* %9632, align 2, !dbg !442
  br label %9809, !dbg !443

9708:                                             ; preds = %9688
  %9709 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %9690, %struct.sqlite3_value* %9565), !dbg !444
  br label %9809, !dbg !445

9710:                                             ; preds = %9628
  %9711 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 23, i32 1, !dbg !446
  %9712 = load i32, i32* %9711, align 4, !dbg !447
  store i32 %9712, i32* %9562, align 4, !dbg !448
  br label %9631, !dbg !449

9713:                                             ; preds = %9628
  %9714 = load i32, i32* %9576, align 4, !dbg !450
  %9715 = load i32, i32* %9569, align 4, !dbg !451
  %9716 = icmp ult i32 %9714, %9715, !dbg !452
  br i1 %9716, label %9717, label %9798, !dbg !453

9717:                                             ; preds = %9713
  %9718 = load i8*, i8** %9579, align 8, !dbg !454
  %9719 = icmp eq i8* %9718, null, !dbg !455
  br i1 %9719, label %9721, label %9720, !dbg !456

9720:                                             ; preds = %9717
  store i8* %9718, i8** %9561, align 8, !dbg !457
  br label %9721, !dbg !458

9721:                                             ; preds = %9720, %9717, %9601
  %9722 = alloca i32, align 4, !dbg !459
  %9723 = load i16, i16* %9580, align 2, !dbg !460
  %9724 = zext i16 %9723 to i32, !dbg !461
  store i32 %9724, i32* %9722, align 4, !dbg !462
  %9725 = alloca i64, align 8, !dbg !463
  %9726 = getelementptr i32, i32* %9569, i32 %9724, !dbg !464
  %9727 = load i32, i32* %9726, align 4, !dbg !465
  %9728 = zext i32 %9727 to i64, !dbg !466
  store i64 %9728, i64* %9725, align 4, !dbg !467
  %9729 = load i8*, i8** %9561, align 8, !dbg !468
  %9730 = load i32, i32* %9576, align 4, !dbg !469
  %9731 = alloca i8*, align 8, !dbg !470
  %9732 = getelementptr i8, i8* %9729, i32 %9730, !dbg !471
  store i8* %9732, i8** %9731, align 8, !dbg !472
  %9733 = load i32, i32* %9569, align 4, !dbg !473
  %9734 = getelementptr i8, i8* %9729, i32 %9733, !dbg !474
  br label %9735, !dbg !475

9735:                                             ; preds = %9742, %9721
  %9736 = load i32, i32* %9722, align 4, !dbg !476
  %9737 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9564, i32 0, i32 23, i32 %9736, !dbg !477
  %9738 = load i8*, i8** %9731, align 8, !dbg !478
  %9739 = load i8, i8* %9738, align 1, !dbg !479
  %9740 = zext i8 %9739 to i32, !dbg !480
  store i32 %9740, i32* %9562, align 4, !dbg !481
  store i32 %9740, i32* %9737, align 4, !dbg !482
  %9741 = icmp sgt i8 %9739, -1, !dbg !483
  br i1 %9741, label %9765, label %9756, !dbg !484

9742:                                             ; preds = %9756, %9765
  %9743 = load i32, i32* %9722, align 4, !dbg !485
  %9744 = add i32 %9743, 1, !dbg !486
  store i32 %9744, i32* %9722, align 4, !dbg !487
  %9745 = load i64, i64* %9725, align 4, !dbg !488
  %9746 = and i64 4294967295, %9745, !dbg !489
  %9747 = trunc i64 %9746 to i32, !dbg !490
  %9748 = getelementptr i32, i32* %9569, i32 %9744, !dbg !491
  store i32 %9747, i32* %9748, align 4, !dbg !492
  %9749 = load i32, i32* %9722, align 4, !dbg !493
  %9750 = icmp sle i32 %9749, 1, !dbg !494
  %9751 = load i8*, i8** %9731, align 8, !dbg !495
  %9752 = ptrtoint i8* %9751 to i64, !dbg !496
  %9753 = ptrtoint i8* %9734 to i64, !dbg !497
  %9754 = icmp ult i64 %9752, %9753, !dbg !498
  %9755 = and i1 %9750, %9754, !dbg !499
  br i1 %9755, label %9735, label %9774, !dbg !500

9756:                                             ; preds = %9735
  %9757 = load i8*, i8** %9731, align 8, !dbg !501
  %9758 = call i8 @sqlite3GetVarint32(i8* %9757, i32* %9562), !dbg !502
  %9759 = getelementptr i8, i8* %9757, i8 %9758, !dbg !503
  store i8* %9759, i8** %9731, align 8, !dbg !504
  %9760 = load i32, i32* %9562, align 4, !dbg !505
  store i32 %9760, i32* %9737, align 4, !dbg !506
  %9761 = load i64, i64* %9725, align 4, !dbg !507
  %9762 = call i32 @sqlite3VdbeSerialTypeLen(i32 %9760), !dbg !508
  %9763 = zext i32 %9762 to i64, !dbg !509
  %9764 = add i64 %9761, %9763, !dbg !510
  store i64 %9764, i64* %9725, align 4, !dbg !511
  br label %9742, !dbg !512

9765:                                             ; preds = %9735
  %9766 = getelementptr i8, i8* %9738, i32 1, !dbg !513
  store i8* %9766, i8** %9731, align 8, !dbg !514
  %9767 = load i32, i32* %9562, align 4, !dbg !515
  %9768 = trunc i32 %9767 to i8, !dbg !516
  %9769 = getelementptr i8, i8* %4, i8 %9768, !dbg !517
  %9770 = load i8, i8* %9769, align 1, !dbg !518
  %9771 = zext i8 %9770 to i64, !dbg !519
  %9772 = load i64, i64* %9725, align 4, !dbg !520
  %9773 = add i64 %9772, %9771, !dbg !521
  store i64 %9773, i64* %9725, align 4, !dbg !522
  br label %9742, !dbg !523

9774:                                             ; preds = %9742
  %9775 = load i64, i64* %9725, align 4, !dbg !524
  %9776 = load i32, i32* %9577, align 4, !dbg !525
  %9777 = zext i32 %9776 to i64, !dbg !526
  %9778 = icmp uge i64 %9752, %9753, !dbg !527
  %9779 = icmp ugt i64 %9752, %9753, !dbg !528
  %9780 = icmp ne i64 %9775, %9777, !dbg !529
  %9781 = icmp ugt i64 %9775, %9777, !dbg !530
  %9782 = or i1 %9779, %9780, !dbg !531
  %9783 = and i1 %9778, %9782, !dbg !532
  %9784 = or i1 %9783, %9781, !dbg !533
  br i1 %9784, label %9785, label %9789, !dbg !534

9785:                                             ; preds = %9774
  %9786 = load i32, i32* %9569, align 4, !dbg !535
  %9787 = icmp eq i32 %9786, 0, !dbg !536
  br i1 %9787, label %9788, label %9789, !dbg !537

9788:                                             ; preds = %9785
  store i32 0, i32* %9722, align 4, !dbg !538
  store i8* %9734, i8** %9731, align 8, !dbg !539
  br label %9789, !dbg !540

9789:                                             ; preds = %9788, %9785, %9774
  %9790 = load i32, i32* %9722, align 4, !dbg !541
  %9791 = trunc i32 %9790 to i16, !dbg !542
  store i16 %9791, i16* %9580, align 2, !dbg !543
  %9792 = load i8*, i8** %9731, align 8, !dbg !544
  %9793 = ptrtoint i8* %9792 to i64, !dbg !545
  %9794 = load i8*, i8** %9561, align 8, !dbg !546
  %9795 = ptrtoint i8* %9794 to i64, !dbg !547
  %9796 = sub i64 %9793, %9795, !dbg !548
  %9797 = trunc i64 %9796 to i32, !dbg !549
  store i32 %9797, i32* %9576, align 4, !dbg !550
  br label %9799, !dbg !551

9798:                                             ; preds = %9713
  store i32 0, i32* %9562, align 4, !dbg !552
  br label %9799, !dbg !553

9799:                                             ; preds = %9789, %9798
  %9800 = load i16, i16* %9580, align 2, !dbg !554
  %9801 = icmp sle i16 %9800, 1, !dbg !555
  br i1 %9801, label %9802, label %9631, !dbg !556

9802:                                             ; preds = %9799
  %9803 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9565, i32 0, i32 1, !dbg !557
  %9804 = load i16, i16* %9803, align 2, !dbg !557
  %9805 = and i16 %9804, 9216, !dbg !557
  %9806 = icmp ne i16 %9805, 0, !dbg !557
  br i1 %9806, label %9807, label %9808, !dbg !557

9807:                                             ; preds = %9802
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %9565), !dbg !557
  br label %9809, !dbg !557

9808:                                             ; preds = %9802
  store i16 1, i16* %9803, align 2, !dbg !557
  br label %9809, !dbg !557

9809:                                             ; preds = %9807, %9808, %9678, %9658, %9697, %9708, %9626, %9627
  call void @llvm.stackrestore(i8* %9554), !dbg !558
  br label %9810, !dbg !75

9810:                                             ; preds = %19, %9809
  %9811 = call i8* @llvm.stacksave(), !dbg !1492
  %9812 = alloca i64, align 8, !dbg !1495
  %9813 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 154, !dbg !1496
  %9814 = call i8* @llvm.stacksave(), !dbg !1497
  %9815 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9813, i32 0, i32 4, !dbg !67
  %9816 = load i32, i32* %9815, align 4, !dbg !70
  %9817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %9816, !dbg !71
  %9818 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9817, i32 0, i32 1, !dbg !1497
  %9819 = load i16, i16* %9818, align 2, !dbg !1497
  %9820 = and i16 %9819, 9216, !dbg !1497
  %9821 = icmp ne i16 %9820, 0, !dbg !1497
  %9822 = alloca %struct.sqlite3_value*, align 8, !dbg !1497
  br i1 %9821, label %9823, label %9825, !dbg !1497

9823:                                             ; preds = %9810
  %9824 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %9817), !dbg !1497
  store %struct.sqlite3_value* %9824, %struct.sqlite3_value** %9822, align 8, !dbg !1497
  br label %9826, !dbg !1497

9825:                                             ; preds = %9810
  store i16 4, i16* %9818, align 2, !dbg !1497
  store %struct.sqlite3_value* %9817, %struct.sqlite3_value** %9822, align 8, !dbg !1497
  br label %9826, !dbg !1497

9826:                                             ; preds = %9825, %9823
  %9827 = load %struct.sqlite3_value*, %struct.sqlite3_value** %9822, align 8, !dbg !1497
  call void @llvm.stackrestore(i8* %9814), !dbg !1497
  %9828 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !1498
  %9829 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9828, i32 0, i32 2, !dbg !1499
  %9830 = load i8, i8* %9829, align 1, !dbg !1500
  %9831 = icmp ne i8 %9830, 0, !dbg !1501
  br i1 %9831, label %9832, label %9834, !dbg !1502

9832:                                             ; preds = %9826
  %9833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9827, i32 0, i32 1, !dbg !1503
  store i16 1, i16* %9833, align 2, !dbg !1504
  br label %9859, !dbg !1505

9834:                                             ; preds = %9826
  %9835 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9828, i32 0, i32 3, !dbg !1506
  %9836 = load i8, i8* %9835, align 1, !dbg !1507
  %9837 = icmp ne i8 %9836, 0, !dbg !1508
  br i1 %9837, label %9838, label %9841, !dbg !1509

9838:                                             ; preds = %9834
  %9839 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9828, i32 0, i32 18, !dbg !1510
  %9840 = load i64, i64* %9839, align 4, !dbg !1511
  store i64 %9840, i64* %9812, align 4, !dbg !1512
  br label %9855, !dbg !1513

9841:                                             ; preds = %9834
  %9842 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9828, i32 0, i32 0, !dbg !1514
  %9843 = load i8, i8* %9842, align 1, !dbg !1515
  %9844 = icmp eq i8 %9843, 2, !dbg !1516
  br i1 %9844, label %9855, label %9845, !dbg !1517

9845:                                             ; preds = %9841
  %9846 = call i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor* %9828), !dbg !1518
  %9847 = load i8, i8* %9829, align 1, !dbg !1519
  %9848 = icmp ne i8 %9847, 0, !dbg !1520
  br i1 %9848, label %9849, label %9851, !dbg !1521

9849:                                             ; preds = %9845
  %9850 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9827, i32 0, i32 1, !dbg !1522
  store i16 1, i16* %9850, align 2, !dbg !1523
  br label %9859, !dbg !1524

9851:                                             ; preds = %9845
  %9852 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %9828, i32 0, i32 12, i32 0, !dbg !1525
  %9853 = load %struct.BtCursor*, %struct.BtCursor** %9852, align 8, !dbg !1526
  %9854 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %9853), !dbg !1527
  store i64 %9854, i64* %9812, align 4, !dbg !1528
  br label %9855, !dbg !1529

9855:                                             ; preds = %9841, %9851, %9838
  %9856 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9827, i32 0, i32 0, i32 0, !dbg !1530
  %9857 = bitcast double* %9856 to i64*, !dbg !1531
  %9858 = load i64, i64* %9812, align 4, !dbg !1532
  store i64 %9858, i64* %9857, align 4, !dbg !1533
  br label %9859, !dbg !1534

9859:                                             ; preds = %9849, %9855, %9832
  call void @llvm.stackrestore(i8* %9811), !dbg !1535
  br label %9860, !dbg !75

9860:                                             ; preds = %19, %9859
  %9861 = call i8* @llvm.stacksave(), !dbg !695
  %9862 = alloca i64, align 8, !dbg !698
  store i64 0, i64* %9862, align 4, !dbg !699
  %9863 = alloca i32, align 8, !dbg !700
  store i32 0, i32* %9863, align 4, !dbg !701
  %9864 = alloca i64, align 8, !dbg !702
  store i64 0, i64* %9864, align 4, !dbg !703
  %9865 = alloca i8*, align 8, !dbg !704
  %9866 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 155, !dbg !705
  %9867 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %9866, i32 0, i32 6, !dbg !706
  %9868 = bitcast %union.p4union* %9867 to i8**, !dbg !707
  %9869 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 63, !dbg !708
  %9870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9869, i32 4, !dbg !709
  %9871 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 69, !dbg !710
  %9872 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 0, i32 1, !dbg !711
  %9873 = load i16, i16* %9872, align 2, !dbg !712
  %9874 = and i16 %9873, 1, !dbg !713
  %9875 = icmp ne i16 %9874, 0, !dbg !713
  %9876 = and i16 %9873, 36, !dbg !714
  %9877 = icmp ne i16 %9876, 0, !dbg !714
  %9878 = and i16 %9873, 8, !dbg !715
  %9879 = icmp ne i16 %9878, 0, !dbg !715
  %9880 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 0, i32 8, !dbg !716
  br i1 %9875, label %9881, label %9889, !dbg !717

9881:                                             ; preds = %9860
  %9882 = and i16 %9873, 16384, !dbg !718
  %9883 = icmp ne i16 %9882, 0, !dbg !718
  br i1 %9883, label %9884, label %9885, !dbg !719

9884:                                             ; preds = %9881
  store i32 10, i32* %9880, align 4, !dbg !720
  br label %9886, !dbg !721

9885:                                             ; preds = %9881
  store i32 0, i32* %9880, align 4, !dbg !722
  br label %9886, !dbg !723

9886:                                             ; preds = %9885, %9884
  %9887 = load i32, i32* %9863, align 4, !dbg !724
  %9888 = add i32 %9887, 1, !dbg !724
  store i32 %9888, i32* %9863, align 4, !dbg !724
  br label %9979, !dbg !725

9889:                                             ; preds = %9860
  br i1 %9877, label %9890, label %9934, !dbg !726

9890:                                             ; preds = %9889
  %9891 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 0, i32 0, !dbg !727
  %9892 = bitcast %union.MemValue* %9891 to i64*, !dbg !728
  %9893 = load i64, i64* %9892, align 4, !dbg !729
  %9894 = alloca i64, align 8, !dbg !730
  %9895 = icmp slt i64 %9893, 0, !dbg !731
  br i1 %9895, label %9896, label %9898, !dbg !732

9896:                                             ; preds = %9890
  %9897 = xor i64 %9893, -1, !dbg !733
  store i64 %9897, i64* %9894, align 4, !dbg !734
  br label %9899, !dbg !735

9898:                                             ; preds = %9890
  store i64 %9893, i64* %9894, align 4, !dbg !736
  br label %9899, !dbg !737

9899:                                             ; preds = %9898, %9896
  %9900 = load i32, i32* %9863, align 4, !dbg !738
  %9901 = add i32 %9900, 1, !dbg !738
  store i32 %9901, i32* %9863, align 4, !dbg !738
  %9902 = load i64, i64* %9894, align 4, !dbg !739
  %9903 = icmp slt i64 %9902, 127, !dbg !740
  %9904 = icmp slt i64 %9902, 32767, !dbg !741
  %9905 = icmp slt i64 %9902, 8388607, !dbg !742
  %9906 = icmp slt i64 %9902, 2147483647, !dbg !743
  br i1 %9903, label %9907, label %9916, !dbg !744

9907:                                             ; preds = %9899
  %9908 = and i64 %9893, 1, !dbg !745
  %9909 = icmp eq i64 %9908, %9893, !dbg !746
  br i1 %9909, label %9910, label %9913, !dbg !747

9910:                                             ; preds = %9907
  %9911 = trunc i64 %9902 to i32, !dbg !748
  %9912 = add i32 %9911, 8, !dbg !749
  store i32 %9912, i32* %9880, align 4, !dbg !750
  br label %9979, !dbg !751

9913:                                             ; preds = %9907
  %9914 = load i64, i64* %9862, align 4, !dbg !752
  %9915 = add i64 %9914, 1, !dbg !752
  store i64 %9915, i64* %9862, align 4, !dbg !752
  store i32 1, i32* %9880, align 4, !dbg !753
  br label %9979, !dbg !754

9916:                                             ; preds = %9899
  %9917 = load i64, i64* %9862, align 4, !dbg !755
  br i1 %9904, label %9918, label %9920, !dbg !756

9918:                                             ; preds = %9916
  %9919 = add i64 %9917, 2, !dbg !757
  store i64 %9919, i64* %9862, align 4, !dbg !757
  store i32 2, i32* %9880, align 4, !dbg !758
  br label %9979, !dbg !759

9920:                                             ; preds = %9916
  br i1 %9905, label %9921, label %9923, !dbg !760

9921:                                             ; preds = %9920
  %9922 = add i64 %9917, 3, !dbg !761
  store i64 %9922, i64* %9862, align 4, !dbg !761
  store i32 3, i32* %9880, align 4, !dbg !762
  br label %9979, !dbg !763

9923:                                             ; preds = %9920
  br i1 %9906, label %9924, label %9926, !dbg !764

9924:                                             ; preds = %9923
  %9925 = add i64 %9917, 4, !dbg !765
  store i64 %9925, i64* %9862, align 4, !dbg !765
  store i32 4, i32* %9880, align 4, !dbg !766
  br label %9979, !dbg !767

9926:                                             ; preds = %9923
  %9927 = add i64 %9917, 8, !dbg !768
  store i64 %9927, i64* %9862, align 4, !dbg !768
  %9928 = and i16 %9873, 32, !dbg !769
  %9929 = icmp ne i16 %9928, 0, !dbg !769
  br i1 %9929, label %9930, label %9933, !dbg !770

9930:                                             ; preds = %9926
  %9931 = and i16 %9873, -33, !dbg !771
  %9932 = or i16 %9931, 8, !dbg !772
  store i16 %9932, i16* %9872, align 2, !dbg !773
  store i32 7, i32* %9880, align 4, !dbg !774
  br label %9979, !dbg !775

9933:                                             ; preds = %9926
  store i32 6, i32* %9880, align 4, !dbg !776
  br label %9979, !dbg !777

9934:                                             ; preds = %9889
  br i1 %9879, label %9935, label %9940, !dbg !778

9935:                                             ; preds = %9934
  %9936 = load i32, i32* %9863, align 4, !dbg !779
  %9937 = add i32 %9936, 1, !dbg !779
  store i32 %9937, i32* %9863, align 4, !dbg !779
  %9938 = load i64, i64* %9862, align 4, !dbg !780
  %9939 = add i64 %9938, 8, !dbg !780
  store i64 %9939, i64* %9862, align 4, !dbg !780
  store i32 7, i32* %9880, align 4, !dbg !781
  br label %9979, !dbg !782

9940:                                             ; preds = %9934
  %9941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 0, i32 4, !dbg !783
  %9942 = load i32, i32* %9941, align 4, !dbg !784
  %9943 = alloca i32, align 8, !dbg !785
  store i32 %9942, i32* %9943, align 4, !dbg !786
  %9944 = alloca i32, align 8, !dbg !787
  %9945 = add i32 %9942, %9942, !dbg !788
  %9946 = add i32 %9945, 12, !dbg !789
  %9947 = and i16 %9873, 2, !dbg !790
  %9948 = icmp ne i16 %9947, 0, !dbg !791
  %9949 = zext i1 %9948 to i32, !dbg !792
  %9950 = add i32 %9946, %9949, !dbg !793
  store i32 %9950, i32* %9944, align 4, !dbg !794
  %9951 = and i16 %9873, 16384, !dbg !795
  %9952 = icmp ne i16 %9951, 0, !dbg !796
  br i1 %9952, label %9953, label %9969, !dbg !797

9953:                                             ; preds = %9940
  %9954 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 0, i32 0, !dbg !798
  %9955 = bitcast %union.MemValue* %9954 to i32*, !dbg !799
  %9956 = load i32, i32* %9955, align 4, !dbg !800
  %9957 = add i32 %9956, %9956, !dbg !801
  %9958 = add i32 %9950, %9957, !dbg !802
  store i32 %9958, i32* %9944, align 4, !dbg !802
  %9959 = load i64, i64* %9862, align 4, !dbg !803
  %9960 = icmp ne i64 %9959, 0, !dbg !803
  br i1 %9960, label %9965, label %9961, !dbg !804

9961:                                             ; preds = %9953
  %9962 = zext i32 %9956 to i64, !dbg !805
  %9963 = load i64, i64* %9864, align 4, !dbg !806
  %9964 = add i64 %9963, %9962, !dbg !806
  store i64 %9964, i64* %9864, align 4, !dbg !806
  br label %9969, !dbg !807

9965:                                             ; preds = %9953
  %9966 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %9870), !dbg !808
  %9967 = load i32, i32* %9943, align 4, !dbg !809
  %9968 = add i32 %9967, %9956, !dbg !809
  store i32 %9968, i32* %9943, align 4, !dbg !809
  br label %9969, !dbg !810

9969:                                             ; preds = %9961, %9965, %9940
  %9970 = load i32, i32* %9943, align 4, !dbg !811
  %9971 = zext i32 %9970 to i64, !dbg !812
  %9972 = load i64, i64* %9862, align 4, !dbg !813
  %9973 = add i64 %9972, %9971, !dbg !813
  store i64 %9973, i64* %9862, align 4, !dbg !813
  %9974 = load i32, i32* %9944, align 4, !dbg !814
  %9975 = zext i32 %9974 to i64, !dbg !815
  %9976 = call i32 @sqlite3VarintLen(i64 %9975), !dbg !816
  %9977 = load i32, i32* %9863, align 4, !dbg !817
  %9978 = add i32 %9977, %9976, !dbg !817
  store i32 %9978, i32* %9863, align 4, !dbg !817
  store i32 %9974, i32* %9880, align 4, !dbg !818
  br label %9979, !dbg !819

9979:                                             ; preds = %9918, %9921, %9924, %9930, %9933, %9913, %9910, %9969, %9935, %9886
  %9980 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9870, i32 -1, !dbg !820
  %9981 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 0, i32 1, !dbg !711
  %9982 = load i16, i16* %9981, align 2, !dbg !712
  %9983 = and i16 %9982, 1, !dbg !713
  %9984 = icmp ne i16 %9983, 0, !dbg !713
  %9985 = and i16 %9982, 36, !dbg !714
  %9986 = icmp ne i16 %9985, 0, !dbg !714
  %9987 = and i16 %9982, 8, !dbg !715
  %9988 = icmp ne i16 %9987, 0, !dbg !715
  %9989 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 0, i32 8, !dbg !716
  br i1 %9984, label %9990, label %9998, !dbg !717

9990:                                             ; preds = %9979
  %9991 = and i16 %9982, 16384, !dbg !718
  %9992 = icmp ne i16 %9991, 0, !dbg !718
  br i1 %9992, label %9993, label %9994, !dbg !719

9993:                                             ; preds = %9990
  store i32 10, i32* %9989, align 4, !dbg !720
  br label %9995, !dbg !721

9994:                                             ; preds = %9990
  store i32 0, i32* %9989, align 4, !dbg !722
  br label %9995, !dbg !723

9995:                                             ; preds = %9994, %9993
  %9996 = load i32, i32* %9863, align 4, !dbg !724
  %9997 = add i32 %9996, 1, !dbg !724
  store i32 %9997, i32* %9863, align 4, !dbg !724
  br label %10088, !dbg !725

9998:                                             ; preds = %9979
  br i1 %9986, label %9999, label %10043, !dbg !726

9999:                                             ; preds = %9998
  %10000 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 0, i32 0, !dbg !727
  %10001 = bitcast %union.MemValue* %10000 to i64*, !dbg !728
  %10002 = load i64, i64* %10001, align 4, !dbg !729
  %10003 = alloca i64, align 8, !dbg !730
  %10004 = icmp slt i64 %10002, 0, !dbg !731
  br i1 %10004, label %10005, label %10007, !dbg !732

10005:                                            ; preds = %9999
  %10006 = xor i64 %10002, -1, !dbg !733
  store i64 %10006, i64* %10003, align 4, !dbg !734
  br label %10008, !dbg !735

10007:                                            ; preds = %9999
  store i64 %10002, i64* %10003, align 4, !dbg !736
  br label %10008, !dbg !737

10008:                                            ; preds = %10007, %10005
  %10009 = load i32, i32* %9863, align 4, !dbg !738
  %10010 = add i32 %10009, 1, !dbg !738
  store i32 %10010, i32* %9863, align 4, !dbg !738
  %10011 = load i64, i64* %10003, align 4, !dbg !739
  %10012 = icmp slt i64 %10011, 127, !dbg !740
  %10013 = icmp slt i64 %10011, 32767, !dbg !741
  %10014 = icmp slt i64 %10011, 8388607, !dbg !742
  %10015 = icmp slt i64 %10011, 2147483647, !dbg !743
  br i1 %10012, label %10016, label %10025, !dbg !744

10016:                                            ; preds = %10008
  %10017 = and i64 %10002, 1, !dbg !745
  %10018 = icmp eq i64 %10017, %10002, !dbg !746
  br i1 %10018, label %10019, label %10022, !dbg !747

10019:                                            ; preds = %10016
  %10020 = trunc i64 %10011 to i32, !dbg !748
  %10021 = add i32 %10020, 8, !dbg !749
  store i32 %10021, i32* %9989, align 4, !dbg !750
  br label %10088, !dbg !751

10022:                                            ; preds = %10016
  %10023 = load i64, i64* %9862, align 4, !dbg !752
  %10024 = add i64 %10023, 1, !dbg !752
  store i64 %10024, i64* %9862, align 4, !dbg !752
  store i32 1, i32* %9989, align 4, !dbg !753
  br label %10088, !dbg !754

10025:                                            ; preds = %10008
  %10026 = load i64, i64* %9862, align 4, !dbg !755
  br i1 %10013, label %10027, label %10029, !dbg !756

10027:                                            ; preds = %10025
  %10028 = add i64 %10026, 2, !dbg !757
  store i64 %10028, i64* %9862, align 4, !dbg !757
  store i32 2, i32* %9989, align 4, !dbg !758
  br label %10088, !dbg !759

10029:                                            ; preds = %10025
  br i1 %10014, label %10030, label %10032, !dbg !760

10030:                                            ; preds = %10029
  %10031 = add i64 %10026, 3, !dbg !761
  store i64 %10031, i64* %9862, align 4, !dbg !761
  store i32 3, i32* %9989, align 4, !dbg !762
  br label %10088, !dbg !763

10032:                                            ; preds = %10029
  br i1 %10015, label %10033, label %10035, !dbg !764

10033:                                            ; preds = %10032
  %10034 = add i64 %10026, 4, !dbg !765
  store i64 %10034, i64* %9862, align 4, !dbg !765
  store i32 4, i32* %9989, align 4, !dbg !766
  br label %10088, !dbg !767

10035:                                            ; preds = %10032
  %10036 = add i64 %10026, 8, !dbg !768
  store i64 %10036, i64* %9862, align 4, !dbg !768
  %10037 = and i16 %9982, 32, !dbg !769
  %10038 = icmp ne i16 %10037, 0, !dbg !769
  br i1 %10038, label %10039, label %10042, !dbg !770

10039:                                            ; preds = %10035
  %10040 = and i16 %9982, -33, !dbg !771
  %10041 = or i16 %10040, 8, !dbg !772
  store i16 %10041, i16* %9981, align 2, !dbg !773
  store i32 7, i32* %9989, align 4, !dbg !774
  br label %10088, !dbg !775

10042:                                            ; preds = %10035
  store i32 6, i32* %9989, align 4, !dbg !776
  br label %10088, !dbg !777

10043:                                            ; preds = %9998
  br i1 %9988, label %10044, label %10049, !dbg !778

10044:                                            ; preds = %10043
  %10045 = load i32, i32* %9863, align 4, !dbg !779
  %10046 = add i32 %10045, 1, !dbg !779
  store i32 %10046, i32* %9863, align 4, !dbg !779
  %10047 = load i64, i64* %9862, align 4, !dbg !780
  %10048 = add i64 %10047, 8, !dbg !780
  store i64 %10048, i64* %9862, align 4, !dbg !780
  store i32 7, i32* %9989, align 4, !dbg !781
  br label %10088, !dbg !782

10049:                                            ; preds = %10043
  %10050 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 0, i32 4, !dbg !783
  %10051 = load i32, i32* %10050, align 4, !dbg !784
  %10052 = alloca i32, align 8, !dbg !785
  store i32 %10051, i32* %10052, align 4, !dbg !786
  %10053 = alloca i32, align 8, !dbg !787
  %10054 = add i32 %10051, %10051, !dbg !788
  %10055 = add i32 %10054, 12, !dbg !789
  %10056 = and i16 %9982, 2, !dbg !790
  %10057 = icmp ne i16 %10056, 0, !dbg !791
  %10058 = zext i1 %10057 to i32, !dbg !792
  %10059 = add i32 %10055, %10058, !dbg !793
  store i32 %10059, i32* %10053, align 4, !dbg !794
  %10060 = and i16 %9982, 16384, !dbg !795
  %10061 = icmp ne i16 %10060, 0, !dbg !796
  br i1 %10061, label %10062, label %10078, !dbg !797

10062:                                            ; preds = %10049
  %10063 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 0, i32 0, !dbg !798
  %10064 = bitcast %union.MemValue* %10063 to i32*, !dbg !799
  %10065 = load i32, i32* %10064, align 4, !dbg !800
  %10066 = add i32 %10065, %10065, !dbg !801
  %10067 = add i32 %10059, %10066, !dbg !802
  store i32 %10067, i32* %10053, align 4, !dbg !802
  %10068 = load i64, i64* %9862, align 4, !dbg !803
  %10069 = icmp ne i64 %10068, 0, !dbg !803
  br i1 %10069, label %10074, label %10070, !dbg !804

10070:                                            ; preds = %10062
  %10071 = zext i32 %10065 to i64, !dbg !805
  %10072 = load i64, i64* %9864, align 4, !dbg !806
  %10073 = add i64 %10072, %10071, !dbg !806
  store i64 %10073, i64* %9864, align 4, !dbg !806
  br label %10078, !dbg !807

10074:                                            ; preds = %10062
  %10075 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %9980), !dbg !808
  %10076 = load i32, i32* %10052, align 4, !dbg !809
  %10077 = add i32 %10076, %10065, !dbg !809
  store i32 %10077, i32* %10052, align 4, !dbg !809
  br label %10078, !dbg !810

10078:                                            ; preds = %10070, %10074, %10049
  %10079 = load i32, i32* %10052, align 4, !dbg !811
  %10080 = zext i32 %10079 to i64, !dbg !812
  %10081 = load i64, i64* %9862, align 4, !dbg !813
  %10082 = add i64 %10081, %10080, !dbg !813
  store i64 %10082, i64* %9862, align 4, !dbg !813
  %10083 = load i32, i32* %10053, align 4, !dbg !814
  %10084 = zext i32 %10083 to i64, !dbg !815
  %10085 = call i32 @sqlite3VarintLen(i64 %10084), !dbg !816
  %10086 = load i32, i32* %9863, align 4, !dbg !817
  %10087 = add i32 %10086, %10085, !dbg !817
  store i32 %10087, i32* %9863, align 4, !dbg !817
  store i32 %10083, i32* %9989, align 4, !dbg !818
  br label %10088, !dbg !819

10088:                                            ; preds = %10027, %10030, %10033, %10039, %10042, %10022, %10019, %10078, %10044, %9995
  %10089 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9980, i32 -1, !dbg !820
  %10090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 0, i32 1, !dbg !711
  %10091 = load i16, i16* %10090, align 2, !dbg !712
  %10092 = and i16 %10091, 1, !dbg !713
  %10093 = icmp ne i16 %10092, 0, !dbg !713
  %10094 = and i16 %10091, 36, !dbg !714
  %10095 = icmp ne i16 %10094, 0, !dbg !714
  %10096 = and i16 %10091, 8, !dbg !715
  %10097 = icmp ne i16 %10096, 0, !dbg !715
  %10098 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 0, i32 8, !dbg !716
  br i1 %10093, label %10099, label %10107, !dbg !717

10099:                                            ; preds = %10088
  %10100 = and i16 %10091, 16384, !dbg !718
  %10101 = icmp ne i16 %10100, 0, !dbg !718
  br i1 %10101, label %10102, label %10103, !dbg !719

10102:                                            ; preds = %10099
  store i32 10, i32* %10098, align 4, !dbg !720
  br label %10104, !dbg !721

10103:                                            ; preds = %10099
  store i32 0, i32* %10098, align 4, !dbg !722
  br label %10104, !dbg !723

10104:                                            ; preds = %10103, %10102
  %10105 = load i32, i32* %9863, align 4, !dbg !724
  %10106 = add i32 %10105, 1, !dbg !724
  store i32 %10106, i32* %9863, align 4, !dbg !724
  br label %10197, !dbg !725

10107:                                            ; preds = %10088
  br i1 %10095, label %10108, label %10152, !dbg !726

10108:                                            ; preds = %10107
  %10109 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 0, i32 0, !dbg !727
  %10110 = bitcast %union.MemValue* %10109 to i64*, !dbg !728
  %10111 = load i64, i64* %10110, align 4, !dbg !729
  %10112 = alloca i64, align 8, !dbg !730
  %10113 = icmp slt i64 %10111, 0, !dbg !731
  br i1 %10113, label %10114, label %10116, !dbg !732

10114:                                            ; preds = %10108
  %10115 = xor i64 %10111, -1, !dbg !733
  store i64 %10115, i64* %10112, align 4, !dbg !734
  br label %10117, !dbg !735

10116:                                            ; preds = %10108
  store i64 %10111, i64* %10112, align 4, !dbg !736
  br label %10117, !dbg !737

10117:                                            ; preds = %10116, %10114
  %10118 = load i32, i32* %9863, align 4, !dbg !738
  %10119 = add i32 %10118, 1, !dbg !738
  store i32 %10119, i32* %9863, align 4, !dbg !738
  %10120 = load i64, i64* %10112, align 4, !dbg !739
  %10121 = icmp slt i64 %10120, 127, !dbg !740
  %10122 = icmp slt i64 %10120, 32767, !dbg !741
  %10123 = icmp slt i64 %10120, 8388607, !dbg !742
  %10124 = icmp slt i64 %10120, 2147483647, !dbg !743
  br i1 %10121, label %10125, label %10134, !dbg !744

10125:                                            ; preds = %10117
  %10126 = and i64 %10111, 1, !dbg !745
  %10127 = icmp eq i64 %10126, %10111, !dbg !746
  br i1 %10127, label %10128, label %10131, !dbg !747

10128:                                            ; preds = %10125
  %10129 = trunc i64 %10120 to i32, !dbg !748
  %10130 = add i32 %10129, 8, !dbg !749
  store i32 %10130, i32* %10098, align 4, !dbg !750
  br label %10197, !dbg !751

10131:                                            ; preds = %10125
  %10132 = load i64, i64* %9862, align 4, !dbg !752
  %10133 = add i64 %10132, 1, !dbg !752
  store i64 %10133, i64* %9862, align 4, !dbg !752
  store i32 1, i32* %10098, align 4, !dbg !753
  br label %10197, !dbg !754

10134:                                            ; preds = %10117
  %10135 = load i64, i64* %9862, align 4, !dbg !755
  br i1 %10122, label %10136, label %10138, !dbg !756

10136:                                            ; preds = %10134
  %10137 = add i64 %10135, 2, !dbg !757
  store i64 %10137, i64* %9862, align 4, !dbg !757
  store i32 2, i32* %10098, align 4, !dbg !758
  br label %10197, !dbg !759

10138:                                            ; preds = %10134
  br i1 %10123, label %10139, label %10141, !dbg !760

10139:                                            ; preds = %10138
  %10140 = add i64 %10135, 3, !dbg !761
  store i64 %10140, i64* %9862, align 4, !dbg !761
  store i32 3, i32* %10098, align 4, !dbg !762
  br label %10197, !dbg !763

10141:                                            ; preds = %10138
  br i1 %10124, label %10142, label %10144, !dbg !764

10142:                                            ; preds = %10141
  %10143 = add i64 %10135, 4, !dbg !765
  store i64 %10143, i64* %9862, align 4, !dbg !765
  store i32 4, i32* %10098, align 4, !dbg !766
  br label %10197, !dbg !767

10144:                                            ; preds = %10141
  %10145 = add i64 %10135, 8, !dbg !768
  store i64 %10145, i64* %9862, align 4, !dbg !768
  %10146 = and i16 %10091, 32, !dbg !769
  %10147 = icmp ne i16 %10146, 0, !dbg !769
  br i1 %10147, label %10148, label %10151, !dbg !770

10148:                                            ; preds = %10144
  %10149 = and i16 %10091, -33, !dbg !771
  %10150 = or i16 %10149, 8, !dbg !772
  store i16 %10150, i16* %10090, align 2, !dbg !773
  store i32 7, i32* %10098, align 4, !dbg !774
  br label %10197, !dbg !775

10151:                                            ; preds = %10144
  store i32 6, i32* %10098, align 4, !dbg !776
  br label %10197, !dbg !777

10152:                                            ; preds = %10107
  br i1 %10097, label %10153, label %10158, !dbg !778

10153:                                            ; preds = %10152
  %10154 = load i32, i32* %9863, align 4, !dbg !779
  %10155 = add i32 %10154, 1, !dbg !779
  store i32 %10155, i32* %9863, align 4, !dbg !779
  %10156 = load i64, i64* %9862, align 4, !dbg !780
  %10157 = add i64 %10156, 8, !dbg !780
  store i64 %10157, i64* %9862, align 4, !dbg !780
  store i32 7, i32* %10098, align 4, !dbg !781
  br label %10197, !dbg !782

10158:                                            ; preds = %10152
  %10159 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 0, i32 4, !dbg !783
  %10160 = load i32, i32* %10159, align 4, !dbg !784
  %10161 = alloca i32, align 8, !dbg !785
  store i32 %10160, i32* %10161, align 4, !dbg !786
  %10162 = alloca i32, align 8, !dbg !787
  %10163 = add i32 %10160, %10160, !dbg !788
  %10164 = add i32 %10163, 12, !dbg !789
  %10165 = and i16 %10091, 2, !dbg !790
  %10166 = icmp ne i16 %10165, 0, !dbg !791
  %10167 = zext i1 %10166 to i32, !dbg !792
  %10168 = add i32 %10164, %10167, !dbg !793
  store i32 %10168, i32* %10162, align 4, !dbg !794
  %10169 = and i16 %10091, 16384, !dbg !795
  %10170 = icmp ne i16 %10169, 0, !dbg !796
  br i1 %10170, label %10171, label %10187, !dbg !797

10171:                                            ; preds = %10158
  %10172 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 0, i32 0, !dbg !798
  %10173 = bitcast %union.MemValue* %10172 to i32*, !dbg !799
  %10174 = load i32, i32* %10173, align 4, !dbg !800
  %10175 = add i32 %10174, %10174, !dbg !801
  %10176 = add i32 %10168, %10175, !dbg !802
  store i32 %10176, i32* %10162, align 4, !dbg !802
  %10177 = load i64, i64* %9862, align 4, !dbg !803
  %10178 = icmp ne i64 %10177, 0, !dbg !803
  br i1 %10178, label %10183, label %10179, !dbg !804

10179:                                            ; preds = %10171
  %10180 = zext i32 %10174 to i64, !dbg !805
  %10181 = load i64, i64* %9864, align 4, !dbg !806
  %10182 = add i64 %10181, %10180, !dbg !806
  store i64 %10182, i64* %9864, align 4, !dbg !806
  br label %10187, !dbg !807

10183:                                            ; preds = %10171
  %10184 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %10089), !dbg !808
  %10185 = load i32, i32* %10161, align 4, !dbg !809
  %10186 = add i32 %10185, %10174, !dbg !809
  store i32 %10186, i32* %10161, align 4, !dbg !809
  br label %10187, !dbg !810

10187:                                            ; preds = %10179, %10183, %10158
  %10188 = load i32, i32* %10161, align 4, !dbg !811
  %10189 = zext i32 %10188 to i64, !dbg !812
  %10190 = load i64, i64* %9862, align 4, !dbg !813
  %10191 = add i64 %10190, %10189, !dbg !813
  store i64 %10191, i64* %9862, align 4, !dbg !813
  %10192 = load i32, i32* %10162, align 4, !dbg !814
  %10193 = zext i32 %10192 to i64, !dbg !815
  %10194 = call i32 @sqlite3VarintLen(i64 %10193), !dbg !816
  %10195 = load i32, i32* %9863, align 4, !dbg !817
  %10196 = add i32 %10195, %10194, !dbg !817
  store i32 %10196, i32* %9863, align 4, !dbg !817
  store i32 %10192, i32* %10098, align 4, !dbg !818
  br label %10197, !dbg !819

10197:                                            ; preds = %10136, %10139, %10142, %10148, %10151, %10131, %10128, %10187, %10153, %10104
  %10198 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10089, i32 -1, !dbg !820
  %10199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 0, i32 1, !dbg !711
  %10200 = load i16, i16* %10199, align 2, !dbg !712
  %10201 = and i16 %10200, 1, !dbg !713
  %10202 = icmp ne i16 %10201, 0, !dbg !713
  %10203 = and i16 %10200, 36, !dbg !714
  %10204 = icmp ne i16 %10203, 0, !dbg !714
  %10205 = and i16 %10200, 8, !dbg !715
  %10206 = icmp ne i16 %10205, 0, !dbg !715
  %10207 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 0, i32 8, !dbg !716
  br i1 %10202, label %10208, label %10216, !dbg !717

10208:                                            ; preds = %10197
  %10209 = and i16 %10200, 16384, !dbg !718
  %10210 = icmp ne i16 %10209, 0, !dbg !718
  br i1 %10210, label %10211, label %10212, !dbg !719

10211:                                            ; preds = %10208
  store i32 10, i32* %10207, align 4, !dbg !720
  br label %10213, !dbg !721

10212:                                            ; preds = %10208
  store i32 0, i32* %10207, align 4, !dbg !722
  br label %10213, !dbg !723

10213:                                            ; preds = %10212, %10211
  %10214 = load i32, i32* %9863, align 4, !dbg !724
  %10215 = add i32 %10214, 1, !dbg !724
  store i32 %10215, i32* %9863, align 4, !dbg !724
  br label %10306, !dbg !725

10216:                                            ; preds = %10197
  br i1 %10204, label %10217, label %10261, !dbg !726

10217:                                            ; preds = %10216
  %10218 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 0, i32 0, !dbg !727
  %10219 = bitcast %union.MemValue* %10218 to i64*, !dbg !728
  %10220 = load i64, i64* %10219, align 4, !dbg !729
  %10221 = alloca i64, align 8, !dbg !730
  %10222 = icmp slt i64 %10220, 0, !dbg !731
  br i1 %10222, label %10223, label %10225, !dbg !732

10223:                                            ; preds = %10217
  %10224 = xor i64 %10220, -1, !dbg !733
  store i64 %10224, i64* %10221, align 4, !dbg !734
  br label %10226, !dbg !735

10225:                                            ; preds = %10217
  store i64 %10220, i64* %10221, align 4, !dbg !736
  br label %10226, !dbg !737

10226:                                            ; preds = %10225, %10223
  %10227 = load i32, i32* %9863, align 4, !dbg !738
  %10228 = add i32 %10227, 1, !dbg !738
  store i32 %10228, i32* %9863, align 4, !dbg !738
  %10229 = load i64, i64* %10221, align 4, !dbg !739
  %10230 = icmp slt i64 %10229, 127, !dbg !740
  %10231 = icmp slt i64 %10229, 32767, !dbg !741
  %10232 = icmp slt i64 %10229, 8388607, !dbg !742
  %10233 = icmp slt i64 %10229, 2147483647, !dbg !743
  br i1 %10230, label %10234, label %10243, !dbg !744

10234:                                            ; preds = %10226
  %10235 = and i64 %10220, 1, !dbg !745
  %10236 = icmp eq i64 %10235, %10220, !dbg !746
  br i1 %10236, label %10237, label %10240, !dbg !747

10237:                                            ; preds = %10234
  %10238 = trunc i64 %10229 to i32, !dbg !748
  %10239 = add i32 %10238, 8, !dbg !749
  store i32 %10239, i32* %10207, align 4, !dbg !750
  br label %10306, !dbg !751

10240:                                            ; preds = %10234
  %10241 = load i64, i64* %9862, align 4, !dbg !752
  %10242 = add i64 %10241, 1, !dbg !752
  store i64 %10242, i64* %9862, align 4, !dbg !752
  store i32 1, i32* %10207, align 4, !dbg !753
  br label %10306, !dbg !754

10243:                                            ; preds = %10226
  %10244 = load i64, i64* %9862, align 4, !dbg !755
  br i1 %10231, label %10245, label %10247, !dbg !756

10245:                                            ; preds = %10243
  %10246 = add i64 %10244, 2, !dbg !757
  store i64 %10246, i64* %9862, align 4, !dbg !757
  store i32 2, i32* %10207, align 4, !dbg !758
  br label %10306, !dbg !759

10247:                                            ; preds = %10243
  br i1 %10232, label %10248, label %10250, !dbg !760

10248:                                            ; preds = %10247
  %10249 = add i64 %10244, 3, !dbg !761
  store i64 %10249, i64* %9862, align 4, !dbg !761
  store i32 3, i32* %10207, align 4, !dbg !762
  br label %10306, !dbg !763

10250:                                            ; preds = %10247
  br i1 %10233, label %10251, label %10253, !dbg !764

10251:                                            ; preds = %10250
  %10252 = add i64 %10244, 4, !dbg !765
  store i64 %10252, i64* %9862, align 4, !dbg !765
  store i32 4, i32* %10207, align 4, !dbg !766
  br label %10306, !dbg !767

10253:                                            ; preds = %10250
  %10254 = add i64 %10244, 8, !dbg !768
  store i64 %10254, i64* %9862, align 4, !dbg !768
  %10255 = and i16 %10200, 32, !dbg !769
  %10256 = icmp ne i16 %10255, 0, !dbg !769
  br i1 %10256, label %10257, label %10260, !dbg !770

10257:                                            ; preds = %10253
  %10258 = and i16 %10200, -33, !dbg !771
  %10259 = or i16 %10258, 8, !dbg !772
  store i16 %10259, i16* %10199, align 2, !dbg !773
  store i32 7, i32* %10207, align 4, !dbg !774
  br label %10306, !dbg !775

10260:                                            ; preds = %10253
  store i32 6, i32* %10207, align 4, !dbg !776
  br label %10306, !dbg !777

10261:                                            ; preds = %10216
  br i1 %10206, label %10262, label %10267, !dbg !778

10262:                                            ; preds = %10261
  %10263 = load i32, i32* %9863, align 4, !dbg !779
  %10264 = add i32 %10263, 1, !dbg !779
  store i32 %10264, i32* %9863, align 4, !dbg !779
  %10265 = load i64, i64* %9862, align 4, !dbg !780
  %10266 = add i64 %10265, 8, !dbg !780
  store i64 %10266, i64* %9862, align 4, !dbg !780
  store i32 7, i32* %10207, align 4, !dbg !781
  br label %10306, !dbg !782

10267:                                            ; preds = %10261
  %10268 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 0, i32 4, !dbg !783
  %10269 = load i32, i32* %10268, align 4, !dbg !784
  %10270 = alloca i32, align 8, !dbg !785
  store i32 %10269, i32* %10270, align 4, !dbg !786
  %10271 = alloca i32, align 8, !dbg !787
  %10272 = add i32 %10269, %10269, !dbg !788
  %10273 = add i32 %10272, 12, !dbg !789
  %10274 = and i16 %10200, 2, !dbg !790
  %10275 = icmp ne i16 %10274, 0, !dbg !791
  %10276 = zext i1 %10275 to i32, !dbg !792
  %10277 = add i32 %10273, %10276, !dbg !793
  store i32 %10277, i32* %10271, align 4, !dbg !794
  %10278 = and i16 %10200, 16384, !dbg !795
  %10279 = icmp ne i16 %10278, 0, !dbg !796
  br i1 %10279, label %10280, label %10296, !dbg !797

10280:                                            ; preds = %10267
  %10281 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 0, i32 0, !dbg !798
  %10282 = bitcast %union.MemValue* %10281 to i32*, !dbg !799
  %10283 = load i32, i32* %10282, align 4, !dbg !800
  %10284 = add i32 %10283, %10283, !dbg !801
  %10285 = add i32 %10277, %10284, !dbg !802
  store i32 %10285, i32* %10271, align 4, !dbg !802
  %10286 = load i64, i64* %9862, align 4, !dbg !803
  %10287 = icmp ne i64 %10286, 0, !dbg !803
  br i1 %10287, label %10292, label %10288, !dbg !804

10288:                                            ; preds = %10280
  %10289 = zext i32 %10283 to i64, !dbg !805
  %10290 = load i64, i64* %9864, align 4, !dbg !806
  %10291 = add i64 %10290, %10289, !dbg !806
  store i64 %10291, i64* %9864, align 4, !dbg !806
  br label %10296, !dbg !807

10292:                                            ; preds = %10280
  %10293 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %10198), !dbg !808
  %10294 = load i32, i32* %10270, align 4, !dbg !809
  %10295 = add i32 %10294, %10283, !dbg !809
  store i32 %10295, i32* %10270, align 4, !dbg !809
  br label %10296, !dbg !810

10296:                                            ; preds = %10288, %10292, %10267
  %10297 = load i32, i32* %10270, align 4, !dbg !811
  %10298 = zext i32 %10297 to i64, !dbg !812
  %10299 = load i64, i64* %9862, align 4, !dbg !813
  %10300 = add i64 %10299, %10298, !dbg !813
  store i64 %10300, i64* %9862, align 4, !dbg !813
  %10301 = load i32, i32* %10271, align 4, !dbg !814
  %10302 = zext i32 %10301 to i64, !dbg !815
  %10303 = call i32 @sqlite3VarintLen(i64 %10302), !dbg !816
  %10304 = load i32, i32* %9863, align 4, !dbg !817
  %10305 = add i32 %10304, %10303, !dbg !817
  store i32 %10305, i32* %9863, align 4, !dbg !817
  store i32 %10301, i32* %10207, align 4, !dbg !818
  br label %10306, !dbg !819

10306:                                            ; preds = %10245, %10248, %10251, %10257, %10260, %10240, %10237, %10296, %10262, %10213
  %10307 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10198, i32 -1, !dbg !820
  %10308 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10307, i32 0, i32 1, !dbg !711
  %10309 = load i16, i16* %10308, align 2, !dbg !712
  %10310 = and i16 %10309, 1, !dbg !713
  %10311 = icmp ne i16 %10310, 0, !dbg !713
  %10312 = and i16 %10309, 36, !dbg !714
  %10313 = icmp ne i16 %10312, 0, !dbg !714
  %10314 = and i16 %10309, 8, !dbg !715
  %10315 = icmp ne i16 %10314, 0, !dbg !715
  %10316 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10307, i32 0, i32 8, !dbg !716
  br i1 %10311, label %10317, label %10325, !dbg !717

10317:                                            ; preds = %10306
  %10318 = and i16 %10309, 16384, !dbg !718
  %10319 = icmp ne i16 %10318, 0, !dbg !718
  br i1 %10319, label %10320, label %10321, !dbg !719

10320:                                            ; preds = %10317
  store i32 10, i32* %10316, align 4, !dbg !720
  br label %10322, !dbg !721

10321:                                            ; preds = %10317
  store i32 0, i32* %10316, align 4, !dbg !722
  br label %10322, !dbg !723

10322:                                            ; preds = %10321, %10320
  %10323 = load i32, i32* %9863, align 4, !dbg !724
  %10324 = add i32 %10323, 1, !dbg !724
  store i32 %10324, i32* %9863, align 4, !dbg !724
  br label %10415, !dbg !725

10325:                                            ; preds = %10306
  br i1 %10313, label %10326, label %10370, !dbg !726

10326:                                            ; preds = %10325
  %10327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10307, i32 0, i32 0, !dbg !727
  %10328 = bitcast %union.MemValue* %10327 to i64*, !dbg !728
  %10329 = load i64, i64* %10328, align 4, !dbg !729
  %10330 = alloca i64, align 8, !dbg !730
  %10331 = icmp slt i64 %10329, 0, !dbg !731
  br i1 %10331, label %10332, label %10334, !dbg !732

10332:                                            ; preds = %10326
  %10333 = xor i64 %10329, -1, !dbg !733
  store i64 %10333, i64* %10330, align 4, !dbg !734
  br label %10335, !dbg !735

10334:                                            ; preds = %10326
  store i64 %10329, i64* %10330, align 4, !dbg !736
  br label %10335, !dbg !737

10335:                                            ; preds = %10334, %10332
  %10336 = load i32, i32* %9863, align 4, !dbg !738
  %10337 = add i32 %10336, 1, !dbg !738
  store i32 %10337, i32* %9863, align 4, !dbg !738
  %10338 = load i64, i64* %10330, align 4, !dbg !739
  %10339 = icmp slt i64 %10338, 127, !dbg !740
  %10340 = icmp slt i64 %10338, 32767, !dbg !741
  %10341 = icmp slt i64 %10338, 8388607, !dbg !742
  %10342 = icmp slt i64 %10338, 2147483647, !dbg !743
  br i1 %10339, label %10343, label %10352, !dbg !744

10343:                                            ; preds = %10335
  %10344 = and i64 %10329, 1, !dbg !745
  %10345 = icmp eq i64 %10344, %10329, !dbg !746
  br i1 %10345, label %10346, label %10349, !dbg !747

10346:                                            ; preds = %10343
  %10347 = trunc i64 %10338 to i32, !dbg !748
  %10348 = add i32 %10347, 8, !dbg !749
  store i32 %10348, i32* %10316, align 4, !dbg !750
  br label %10415, !dbg !751

10349:                                            ; preds = %10343
  %10350 = load i64, i64* %9862, align 4, !dbg !752
  %10351 = add i64 %10350, 1, !dbg !752
  store i64 %10351, i64* %9862, align 4, !dbg !752
  store i32 1, i32* %10316, align 4, !dbg !753
  br label %10415, !dbg !754

10352:                                            ; preds = %10335
  %10353 = load i64, i64* %9862, align 4, !dbg !755
  br i1 %10340, label %10354, label %10356, !dbg !756

10354:                                            ; preds = %10352
  %10355 = add i64 %10353, 2, !dbg !757
  store i64 %10355, i64* %9862, align 4, !dbg !757
  store i32 2, i32* %10316, align 4, !dbg !758
  br label %10415, !dbg !759

10356:                                            ; preds = %10352
  br i1 %10341, label %10357, label %10359, !dbg !760

10357:                                            ; preds = %10356
  %10358 = add i64 %10353, 3, !dbg !761
  store i64 %10358, i64* %9862, align 4, !dbg !761
  store i32 3, i32* %10316, align 4, !dbg !762
  br label %10415, !dbg !763

10359:                                            ; preds = %10356
  br i1 %10342, label %10360, label %10362, !dbg !764

10360:                                            ; preds = %10359
  %10361 = add i64 %10353, 4, !dbg !765
  store i64 %10361, i64* %9862, align 4, !dbg !765
  store i32 4, i32* %10316, align 4, !dbg !766
  br label %10415, !dbg !767

10362:                                            ; preds = %10359
  %10363 = add i64 %10353, 8, !dbg !768
  store i64 %10363, i64* %9862, align 4, !dbg !768
  %10364 = and i16 %10309, 32, !dbg !769
  %10365 = icmp ne i16 %10364, 0, !dbg !769
  br i1 %10365, label %10366, label %10369, !dbg !770

10366:                                            ; preds = %10362
  %10367 = and i16 %10309, -33, !dbg !771
  %10368 = or i16 %10367, 8, !dbg !772
  store i16 %10368, i16* %10308, align 2, !dbg !773
  store i32 7, i32* %10316, align 4, !dbg !774
  br label %10415, !dbg !775

10369:                                            ; preds = %10362
  store i32 6, i32* %10316, align 4, !dbg !776
  br label %10415, !dbg !777

10370:                                            ; preds = %10325
  br i1 %10315, label %10371, label %10376, !dbg !778

10371:                                            ; preds = %10370
  %10372 = load i32, i32* %9863, align 4, !dbg !779
  %10373 = add i32 %10372, 1, !dbg !779
  store i32 %10373, i32* %9863, align 4, !dbg !779
  %10374 = load i64, i64* %9862, align 4, !dbg !780
  %10375 = add i64 %10374, 8, !dbg !780
  store i64 %10375, i64* %9862, align 4, !dbg !780
  store i32 7, i32* %10316, align 4, !dbg !781
  br label %10415, !dbg !782

10376:                                            ; preds = %10370
  %10377 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10307, i32 0, i32 4, !dbg !783
  %10378 = load i32, i32* %10377, align 4, !dbg !784
  %10379 = alloca i32, align 8, !dbg !785
  store i32 %10378, i32* %10379, align 4, !dbg !786
  %10380 = alloca i32, align 8, !dbg !787
  %10381 = add i32 %10378, %10378, !dbg !788
  %10382 = add i32 %10381, 12, !dbg !789
  %10383 = and i16 %10309, 2, !dbg !790
  %10384 = icmp ne i16 %10383, 0, !dbg !791
  %10385 = zext i1 %10384 to i32, !dbg !792
  %10386 = add i32 %10382, %10385, !dbg !793
  store i32 %10386, i32* %10380, align 4, !dbg !794
  %10387 = and i16 %10309, 16384, !dbg !795
  %10388 = icmp ne i16 %10387, 0, !dbg !796
  br i1 %10388, label %10389, label %10405, !dbg !797

10389:                                            ; preds = %10376
  %10390 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10307, i32 0, i32 0, !dbg !798
  %10391 = bitcast %union.MemValue* %10390 to i32*, !dbg !799
  %10392 = load i32, i32* %10391, align 4, !dbg !800
  %10393 = add i32 %10392, %10392, !dbg !801
  %10394 = add i32 %10386, %10393, !dbg !802
  store i32 %10394, i32* %10380, align 4, !dbg !802
  %10395 = load i64, i64* %9862, align 4, !dbg !803
  %10396 = icmp ne i64 %10395, 0, !dbg !803
  br i1 %10396, label %10401, label %10397, !dbg !804

10397:                                            ; preds = %10389
  %10398 = zext i32 %10392 to i64, !dbg !805
  %10399 = load i64, i64* %9864, align 4, !dbg !806
  %10400 = add i64 %10399, %10398, !dbg !806
  store i64 %10400, i64* %9864, align 4, !dbg !806
  br label %10405, !dbg !807

10401:                                            ; preds = %10389
  %10402 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %10307), !dbg !808
  %10403 = load i32, i32* %10379, align 4, !dbg !809
  %10404 = add i32 %10403, %10392, !dbg !809
  store i32 %10404, i32* %10379, align 4, !dbg !809
  br label %10405, !dbg !810

10405:                                            ; preds = %10397, %10401, %10376
  %10406 = load i32, i32* %10379, align 4, !dbg !811
  %10407 = zext i32 %10406 to i64, !dbg !812
  %10408 = load i64, i64* %9862, align 4, !dbg !813
  %10409 = add i64 %10408, %10407, !dbg !813
  store i64 %10409, i64* %9862, align 4, !dbg !813
  %10410 = load i32, i32* %10380, align 4, !dbg !814
  %10411 = zext i32 %10410 to i64, !dbg !815
  %10412 = call i32 @sqlite3VarintLen(i64 %10411), !dbg !816
  %10413 = load i32, i32* %9863, align 4, !dbg !817
  %10414 = add i32 %10413, %10412, !dbg !817
  store i32 %10414, i32* %9863, align 4, !dbg !817
  store i32 %10410, i32* %10316, align 4, !dbg !818
  br label %10415, !dbg !819

10415:                                            ; preds = %10354, %10357, %10360, %10366, %10369, %10349, %10346, %10405, %10371, %10322
  %10416 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 5, !dbg !821
  %10417 = load i32, i32* %9863, align 4, !dbg !822
  %10418 = zext i32 %10417 to i64, !dbg !823
  %10419 = icmp slt i32 %10417, 126, !dbg !824
  br i1 %10419, label %10420, label %10422, !dbg !825

10420:                                            ; preds = %10415
  %10421 = add i32 %10417, 1, !dbg !826
  store i32 %10421, i32* %9863, align 4, !dbg !826
  br label %10431, !dbg !827

10422:                                            ; preds = %10415
  %10423 = call i32 @sqlite3VarintLen(i64 %10418), !dbg !828
  %10424 = load i32, i32* %9863, align 4, !dbg !829
  %10425 = add i32 %10424, %10423, !dbg !829
  store i32 %10425, i32* %9863, align 4, !dbg !829
  %10426 = call i32 @sqlite3VarintLen(i64 %10418), !dbg !830
  %10427 = icmp slt i32 %10423, %10426, !dbg !831
  br i1 %10427, label %10428, label %10431, !dbg !832

10428:                                            ; preds = %10422
  %10429 = load i32, i32* %9863, align 4, !dbg !833
  %10430 = add i32 %10429, 1, !dbg !833
  store i32 %10430, i32* %9863, align 4, !dbg !833
  br label %10431, !dbg !834

10431:                                            ; preds = %10428, %10422, %10420
  %10432 = load i32, i32* %9863, align 4, !dbg !835
  %10433 = zext i32 %10432 to i64, !dbg !835
  %10434 = load i64, i64* %9862, align 4, !dbg !836
  %10435 = add i64 %10433, %10434, !dbg !836
  %10436 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 7, !dbg !837
  %10437 = load i32, i32* %10436, align 4, !dbg !838
  %10438 = zext i32 %10437 to i64, !dbg !839
  %10439 = load i64, i64* %9864, align 4, !dbg !840
  %10440 = add i64 %10435, %10439, !dbg !841
  %10441 = icmp sle i64 %10440, %10438, !dbg !842
  br i1 %10441, label %10442, label %10445, !dbg !843

10442:                                            ; preds = %10431
  %10443 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 6, !dbg !844
  %10444 = load i8*, i8** %10443, align 8, !dbg !845
  store i8* %10444, i8** %10416, align 8, !dbg !846
  br label %10448, !dbg !847

10445:                                            ; preds = %10431
  %10446 = trunc i64 %10435 to i32, !dbg !848
  %10447 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %9871, i32 %10446), !dbg !849
  br label %10448, !dbg !850

10448:                                            ; preds = %10445, %10442
  %10449 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 4, !dbg !851
  %10450 = trunc i64 %10435 to i32, !dbg !852
  store i32 %10450, i32* %10449, align 4, !dbg !853
  %10451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 1, !dbg !854
  store i16 16, i16* %10451, align 2, !dbg !855
  %10452 = load i64, i64* %9864, align 4, !dbg !856
  %10453 = icmp ne i64 %10452, 0, !dbg !857
  br i1 %10453, label %10454, label %10460, !dbg !858

10454:                                            ; preds = %10448
  %10455 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9871, i32 0, i32 0, i32 0, !dbg !859
  %10456 = bitcast double* %10455 to i32*, !dbg !860
  %10457 = trunc i64 %10452 to i32, !dbg !861
  store i32 %10457, i32* %10456, align 4, !dbg !862
  %10458 = load i16, i16* %10451, align 2, !dbg !863
  %10459 = or i16 %10458, 16384, !dbg !864
  store i16 %10459, i16* %10451, align 2, !dbg !865
  br label %10460, !dbg !866

10460:                                            ; preds = %10454, %10448
  %10461 = alloca i8*, align 8, !dbg !867
  %10462 = load i8*, i8** %10416, align 8, !dbg !868
  store i8* %10462, i8** %10461, align 8, !dbg !869
  %10463 = load i32, i32* %9863, align 4, !dbg !870
  %10464 = zext i32 %10463 to i64, !dbg !871
  %10465 = getelementptr i8, i8* %10462, i32 %10463, !dbg !872
  store i8* %10465, i8** %9865, align 8, !dbg !873
  %10466 = call i32 @sqlite3PutVarint(i8* %10462, i64 %10464), !dbg !874
  %10467 = getelementptr i8, i8* %10462, i32 %10466, !dbg !875
  store i8* %10467, i8** %10461, align 8, !dbg !876
  %10468 = load i8*, i8** %9865, align 8, !dbg !877
  %10469 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9869, i32 0, i32 8, !dbg !878
  %10470 = load i32, i32* %10469, align 4, !dbg !879
  %10471 = zext i32 %10470 to i64, !dbg !880
  %10472 = call i32 @sqlite3PutVarint(i8* %10467, i64 %10471), !dbg !881
  %10473 = getelementptr i8, i8* %10467, i32 %10472, !dbg !882
  store i8* %10473, i8** %10461, align 8, !dbg !883
  %10474 = call i32 @sqlite3VdbeSerialPut(i8* %10468, %struct.sqlite3_value* %9869, i32 %10470), !dbg !884
  %10475 = getelementptr i8, i8* %10468, i32 %10474, !dbg !885
  %10476 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %9869, i32 1, !dbg !886
  %10477 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10476, i32 0, i32 8, !dbg !878
  %10478 = load i32, i32* %10477, align 4, !dbg !879
  %10479 = zext i32 %10478 to i64, !dbg !880
  %10480 = call i32 @sqlite3PutVarint(i8* %10473, i64 %10479), !dbg !881
  %10481 = getelementptr i8, i8* %10473, i32 %10480, !dbg !882
  store i8* %10481, i8** %10461, align 8, !dbg !883
  %10482 = call i32 @sqlite3VdbeSerialPut(i8* %10475, %struct.sqlite3_value* %10476, i32 %10478), !dbg !884
  %10483 = getelementptr i8, i8* %10475, i32 %10482, !dbg !885
  %10484 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10476, i32 1, !dbg !886
  %10485 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10484, i32 0, i32 8, !dbg !878
  %10486 = load i32, i32* %10485, align 4, !dbg !879
  %10487 = zext i32 %10486 to i64, !dbg !880
  %10488 = call i32 @sqlite3PutVarint(i8* %10481, i64 %10487), !dbg !881
  %10489 = getelementptr i8, i8* %10481, i32 %10488, !dbg !882
  store i8* %10489, i8** %10461, align 8, !dbg !883
  %10490 = call i32 @sqlite3VdbeSerialPut(i8* %10483, %struct.sqlite3_value* %10484, i32 %10486), !dbg !884
  %10491 = getelementptr i8, i8* %10483, i32 %10490, !dbg !885
  %10492 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10484, i32 1, !dbg !886
  %10493 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10492, i32 0, i32 8, !dbg !878
  %10494 = load i32, i32* %10493, align 4, !dbg !879
  %10495 = zext i32 %10494 to i64, !dbg !880
  %10496 = call i32 @sqlite3PutVarint(i8* %10489, i64 %10495), !dbg !881
  %10497 = getelementptr i8, i8* %10489, i32 %10496, !dbg !882
  store i8* %10497, i8** %10461, align 8, !dbg !883
  %10498 = call i32 @sqlite3VdbeSerialPut(i8* %10491, %struct.sqlite3_value* %10492, i32 %10494), !dbg !884
  %10499 = getelementptr i8, i8* %10491, i32 %10498, !dbg !885
  %10500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10492, i32 1, !dbg !886
  %10501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10500, i32 0, i32 8, !dbg !878
  %10502 = load i32, i32* %10501, align 4, !dbg !879
  %10503 = zext i32 %10502 to i64, !dbg !880
  %10504 = call i32 @sqlite3PutVarint(i8* %10497, i64 %10503), !dbg !881
  %10505 = getelementptr i8, i8* %10497, i32 %10504, !dbg !882
  store i8* %10505, i8** %10461, align 8, !dbg !883
  %10506 = call i32 @sqlite3VdbeSerialPut(i8* %10499, %struct.sqlite3_value* %10500, i32 %10502), !dbg !884
  call void @llvm.stackrestore(i8* %9861), !dbg !887
  br label %10507, !dbg !75

10507:                                            ; preds = %19, %10460
  %10508 = call i8* @llvm.stacksave(), !dbg !888
  %10509 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !891
  %10510 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10509, align 8, !dbg !892
  %10511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 69, !dbg !893
  %10512 = call i8* @llvm.stacksave(), !dbg !894
  %10513 = alloca i32, align 8, !dbg !895
  store i32 0, i32* %10513, align 4, !dbg !894
  %10514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10511, i32 0, i32 1, !dbg !894
  %10515 = load i16, i16* %10514, align 2, !dbg !894
  %10516 = and i16 %10515, 16384, !dbg !894
  %10517 = icmp ne i16 %10516, 0, !dbg !894
  br i1 %10517, label %10518, label %10520, !dbg !894

10518:                                            ; preds = %10507
  %10519 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %10511), !dbg !894
  store i32 %10519, i32* %10513, align 4, !dbg !894
  br label %10520, !dbg !895

10520:                                            ; preds = %10518, %10507
  call void @llvm.stackrestore(i8* %10512), !dbg !894
  %10521 = load i32, i32* %10513, align 4, !dbg !894
  %10522 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %10510, %struct.sqlite3_value* %10511), !dbg !896
  call void @llvm.stackrestore(i8* %10508), !dbg !897
  br label %10523, !dbg !75

10523:                                            ; preds = %19, %10520, %8782, %8754, %8486, %8473
  %10524 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !898
  %10525 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10524, align 8, !dbg !901
  %10526 = ptrtoint %struct.VdbeCursor* %10525 to i64, !dbg !902
  %10527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10525, i32 0, i32 12, i32 0, !dbg !903
  %10528 = load %struct.BtCursor*, %struct.BtCursor** %10527, align 8, !dbg !904
  %10529 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %10528, i32 0), !dbg !905
  %10530 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10525, i32 0, i32 2, !dbg !906
  %10531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10525, i32 0, i32 9, !dbg !907
  store i32 0, i32* %10531, align 4, !dbg !908
  %10532 = icmp eq i32 %10529, 0, !dbg !909
  br i1 %10532, label %10533, label %10534, !dbg !910

10533:                                            ; preds = %10523
  store i8 0, i8* %10530, align 1, !dbg !911
  br label %4273, !dbg !912

10534:                                            ; preds = %10523
  store i8 1, i8* %10530, align 1, !dbg !913
  br label %10535, !dbg !914

10535:                                            ; preds = %19, %10534, %4267
  %10536 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 10, i32 7, i32 -1, i8 3), !dbg !915
  %10537 = ptrtoint %struct.VdbeCursor* %10536 to i64, !dbg !918
  %10538 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10536, i32 0, i32 2, !dbg !919
  store i8 1, i8* %10538, align 1, !dbg !920
  %10539 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10536, i32 0, i32 10, !dbg !921
  store i32 70, i32* %10539, align 4, !dbg !922
  %10540 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10536, i32 0, i32 4, !dbg !923
  store i8 1, i8* %10540, align 1, !dbg !924
  %10541 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !925
  %10542 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10536, i32 0, i32 12, i32 0, !dbg !926
  store %struct.BtCursor* %10541, %struct.BtCursor** %10542, align 8, !dbg !927
  br label %10543, !dbg !75

10543:                                            ; preds = %19, %10535
  %10544 = call i8* @llvm.stacksave(), !dbg !232
  %10545 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !235
  %10546 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %10545, i32 7, !dbg !236
  %10547 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10546, align 8, !dbg !237
  %10548 = alloca i32, align 4, !dbg !238
  store i32 1, i32* %10548, align 4, !dbg !239
  %10549 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10547, i32 0, i32 0, !dbg !240
  %10550 = load i8, i8* %10549, align 1, !dbg !241
  %10551 = icmp eq i8 %10550, 1, !dbg !242
  %10552 = alloca i32, align 4, !dbg !243
  store i32 0, i32* %10552, align 4, !dbg !244
  br i1 %10551, label %10553, label %10555, !dbg !245

10553:                                            ; preds = %10543
  %10554 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %10547, i32* %10548), !dbg !246
  store i32 %10554, i32* %10552, align 4, !dbg !247
  br label %10561, !dbg !248

10555:                                            ; preds = %10543
  %10556 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10547, i32 0, i32 12, i32 0, !dbg !249
  %10557 = load %struct.BtCursor*, %struct.BtCursor** %10556, align 8, !dbg !250
  %10558 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %10557, i32* %10548), !dbg !251
  store i32 %10558, i32* %10552, align 4, !dbg !252
  %10559 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10547, i32 0, i32 3, !dbg !253
  store i8 0, i8* %10559, align 1, !dbg !254
  %10560 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10547, i32 0, i32 9, !dbg !255
  store i32 0, i32* %10560, align 4, !dbg !256
  br label %10561, !dbg !257

10561:                                            ; preds = %10555, %10553
  %10562 = load i32, i32* %10552, align 4, !dbg !258
  %10563 = load i32, i32* %10548, align 4, !dbg !259
  %10564 = trunc i32 %10563 to i8, !dbg !260
  %10565 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10547, i32 0, i32 2, !dbg !261
  store i8 %10564, i8* %10565, align 1, !dbg !262
  call void @llvm.stackrestore(i8* %10544), !dbg !263
  %10566 = icmp ne i32 %10563, 0, !dbg !264
  br i1 %10566, label %11913, label %10567, !dbg !265

10567:                                            ; preds = %19, %11911, %10561
  %10568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 70, !dbg !928
  %10569 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !931
  %10570 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %10569, i32 7, !dbg !932
  %10571 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10570, align 8, !dbg !933
  %10572 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %10571, %struct.sqlite3_value* %10568), !dbg !934
  %10573 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %10569, i32 10, !dbg !935
  %10574 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10573, align 8, !dbg !936
  %10575 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10574, i32 0, i32 9, !dbg !937
  store i32 0, i32* %10575, align 4, !dbg !938
  br label %10576, !dbg !75

10576:                                            ; preds = %19, %10567
  %10577 = call i8* @llvm.stacksave(), !dbg !266
  %10578 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %10579 = load i8, i8* %10578, align 1, !dbg !270
  %10580 = alloca i32, align 4, !dbg !271
  store i32 10, i32* %10580, align 4, !dbg !272
  %10581 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 10, !dbg !273
  %10582 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %10583 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10581, align 8, !dbg !275
  store %struct.VdbeCursor* %10583, %struct.VdbeCursor** %10582, align 8, !dbg !276
  %10584 = alloca i8*, align 8, !dbg !277
  %10585 = alloca i32, align 4, !dbg !278
  %10586 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %10582, i32* %10580), !dbg !279
  %10587 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10582, align 8, !dbg !280
  %10588 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 68, !dbg !281
  %10589 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 16, !dbg !282
  %10590 = load i16, i16* %10589, align 2, !dbg !283
  %10591 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 19, !dbg !284
  %10592 = load i32*, i32** %10591, align 8, !dbg !285
  %10593 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 0, !dbg !286
  %10594 = load i8, i8* %10593, align 1, !dbg !287
  %10595 = icmp ne i8 %10594, 3, !dbg !288
  %10596 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 2, !dbg !289
  %10597 = load i8, i8* %10596, align 1, !dbg !290
  %10598 = icmp ne i8 %10597, 0, !dbg !291
  %10599 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 14, !dbg !292
  %10600 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 21, !dbg !293
  %10601 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 22, !dbg !294
  %10602 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 20, !dbg !295
  %10603 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 17, !dbg !296
  %10604 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 9, !dbg !297
  %10605 = load i32, i32* %10604, align 4, !dbg !298
  %10606 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %10607 = load i32, i32* %10606, align 4, !dbg !300
  %10608 = icmp ne i32 %10605, %10607, !dbg !301
  br i1 %10608, label %10609, label %10651, !dbg !302

10609:                                            ; preds = %10576
  br i1 %10598, label %10631, label %10626, !dbg !303

10610:                                            ; preds = %10626, %10633
  %10611 = load i32, i32* %10606, align 4, !dbg !304
  store i32 %10611, i32* %10604, align 4, !dbg !305
  %10612 = load i8*, i8** %10602, align 8, !dbg !306
  %10613 = load i8, i8* %10612, align 1, !dbg !307
  %10614 = icmp sgt i8 %10613, -1, !dbg !310
  br i1 %10614, label %10615, label %10617, !dbg !311

10615:                                            ; preds = %10610
  %10616 = zext i8 %10613 to i32, !dbg !312
  store i32 %10616, i32* %10592, align 4, !dbg !313
  store i32 1, i32* %10599, align 4, !dbg !314
  br label %10620, !dbg !315

10617:                                            ; preds = %10610
  %10618 = call i8 @sqlite3GetVarint32(i8* %10612, i32* %10592), !dbg !316
  %10619 = zext i8 %10618 to i32, !dbg !317
  store i32 %10619, i32* %10599, align 4, !dbg !318
  br label %10620, !dbg !319

10620:                                            ; preds = %10617, %10615
  store i16 0, i16* %10603, align 2, !dbg !320
  %10621 = load i32, i32* %10601, align 4, !dbg !321
  %10622 = load i32, i32* %10592, align 4, !dbg !322
  %10623 = icmp ult i32 %10621, %10622, !dbg !323
  br i1 %10623, label %10625, label %10624, !dbg !324

10624:                                            ; preds = %10620
  store i8* %10612, i8** %10584, align 8, !dbg !325
  br label %10744, !dbg !326

10625:                                            ; preds = %10620
  store i8* null, i8** %10602, align 8, !dbg !327
  store i32 0, i32* %10601, align 4, !dbg !328
  br label %10651, !dbg !329

10626:                                            ; preds = %10609
  %10627 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 12, i32 0, !dbg !330
  %10628 = load %struct.BtCursor*, %struct.BtCursor** %10627, align 8, !dbg !331
  %10629 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %10628), !dbg !332
  store i32 %10629, i32* %10600, align 4, !dbg !333
  %10630 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %10628, i32* %10601), !dbg !334
  store i8* %10630, i8** %10602, align 8, !dbg !335
  br label %10610, !dbg !336

10631:                                            ; preds = %10609
  %10632 = icmp eq i8 %10594, 3, !dbg !337
  br i1 %10632, label %10633, label %10644, !dbg !338

10633:                                            ; preds = %10631
  %10634 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 10, !dbg !339
  %10635 = load i32, i32* %10634, align 4, !dbg !340
  %10636 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10635, !dbg !341
  %10637 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10636, i32 0, i32 1, !dbg !342
  %10638 = load i16, i16* %10637, align 2, !dbg !343
  %10639 = and i16 %10638, 16, !dbg !344
  %10640 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10636, i32 0, i32 4, !dbg !345
  %10641 = load i32, i32* %10640, align 4, !dbg !346
  store i32 %10641, i32* %10600, align 4, !dbg !347
  store i32 %10641, i32* %10601, align 4, !dbg !348
  %10642 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10636, i32 0, i32 5, !dbg !349
  %10643 = load i8*, i8** %10642, align 8, !dbg !350
  store i8* %10643, i8** %10602, align 8, !dbg !351
  br label %10610, !dbg !352

10644:                                            ; preds = %10631
  %10645 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 1, !dbg !353
  %10646 = load i16, i16* %10645, align 2, !dbg !353
  %10647 = and i16 %10646, 9216, !dbg !353
  %10648 = icmp ne i16 %10647, 0, !dbg !353
  br i1 %10648, label %10649, label %10650, !dbg !353

10649:                                            ; preds = %10644
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10588), !dbg !353
  br label %10832, !dbg !353

10650:                                            ; preds = %10644
  store i16 1, i16* %10645, align 2, !dbg !353
  br label %10832, !dbg !353

10651:                                            ; preds = %10625, %10576
  %10652 = load i16, i16* %10603, align 2, !dbg !354
  %10653 = icmp ule i16 %10652, 4, !dbg !355
  br i1 %10653, label %10736, label %10733, !dbg !356

10654:                                            ; preds = %10733, %10822
  %10655 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 1, !dbg !357
  %10656 = load i16, i16* %10655, align 2, !dbg !358
  %10657 = and i16 9216, %10656, !dbg !359
  %10658 = icmp eq i16 0, %10657, !dbg !360
  br i1 %10658, label %10659, label %10663, !dbg !361

10659:                                            ; preds = %10654
  %10660 = icmp ne i16 %10657, 0, !dbg !362
  br i1 %10660, label %10661, label %10662, !dbg !362

10661:                                            ; preds = %10659
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10588), !dbg !362
  br label %10663, !dbg !362

10662:                                            ; preds = %10659
  store i16 1, i16* %10655, align 2, !dbg !362
  br label %10663, !dbg !362

10663:                                            ; preds = %10661, %10662, %10654
  %10664 = load i32, i32* %10585, align 4, !dbg !363
  %10665 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 23, i32 4, !dbg !364
  %10666 = load i32, i32* %10665, align 4, !dbg !365
  %10667 = load i32, i32* %10601, align 4, !dbg !366
  %10668 = getelementptr i32, i32* %10592, i32 5, !dbg !367
  %10669 = load i32, i32* %10668, align 4, !dbg !368
  %10670 = icmp sge i32 %10667, %10669, !dbg !369
  br i1 %10670, label %10671, label %10711, !dbg !370

10671:                                            ; preds = %10663
  %10672 = load i8*, i8** %10602, align 8, !dbg !371
  %10673 = ptrtoint i8* %10672 to i64, !dbg !372
  %10674 = getelementptr i32, i32* %10592, i32 4, !dbg !373
  %10675 = load i32, i32* %10674, align 4, !dbg !374
  %10676 = zext i32 %10675 to i64, !dbg !375
  %10677 = add i64 %10673, %10676, !dbg !376
  %10678 = inttoptr i64 %10677 to i8*, !dbg !377
  store i8* %10678, i8** %10584, align 8, !dbg !378
  %10679 = load i32, i32* %10585, align 4, !dbg !379
  %10680 = icmp ult i32 %10679, 12, !dbg !380
  br i1 %10680, label %10681, label %10683, !dbg !381

10681:                                            ; preds = %10671
  %10682 = call i32 @sqlite3VdbeSerialGet(i8* %10678, i32 %10679, %struct.sqlite3_value* %10588), !dbg !382
  br label %10832, !dbg !383

10683:                                            ; preds = %10671
  %10684 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %10684, align 2, !dbg !385
  %10685 = getelementptr i16, i16* %10684, i32 1, !dbg !386
  store i16 514, i16* %10685, align 2, !dbg !387
  %10686 = load i32, i32* %10585, align 4, !dbg !388
  %10687 = sub i32 %10686, 12, !dbg !389
  %10688 = lshr i32 %10687, 1, !dbg !390
  %10689 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 4, !dbg !391
  store i32 %10688, i32* %10689, align 4, !dbg !392
  %10690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 2, !dbg !393
  store i8 %10579, i8* %10690, align 1, !dbg !394
  %10691 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 5, !dbg !395
  %10692 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 7, !dbg !396
  %10693 = load i32, i32* %10692, align 4, !dbg !397
  %10694 = add i32 %10688, 2, !dbg !398
  %10695 = icmp slt i32 %10693, %10694, !dbg !399
  br i1 %10695, label %10696, label %10698, !dbg !400

10696:                                            ; preds = %10683
  store i16 1, i16* %10655, align 2, !dbg !401
  %10697 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %10588, i32 %10694, i32 0), !dbg !402
  br label %10701, !dbg !403

10698:                                            ; preds = %10683
  %10699 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 6, !dbg !404
  %10700 = load i8*, i8** %10699, align 8, !dbg !405
  store i8* %10700, i8** %10691, align 8, !dbg !406
  br label %10701, !dbg !407

10701:                                            ; preds = %10698, %10696
  %10702 = zext i32 %10688 to i64, !dbg !408
  %10703 = load i8*, i8** %10691, align 8, !dbg !409
  %10704 = load i8*, i8** %10584, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10703, i8* %10704, i64 %10702, i1 false), !dbg !411
  %10705 = getelementptr i8, i8* %10703, i32 %10688, !dbg !412
  store i8 0, i8* %10705, align 1, !dbg !413
  %10706 = add i32 %10688, 1, !dbg !414
  %10707 = getelementptr i8, i8* %10703, i32 %10706, !dbg !415
  store i8 0, i8* %10707, align 1, !dbg !416
  %10708 = and i32 %10686, 1, !dbg !417
  %10709 = getelementptr i16, i16* %10684, i32 %10708, !dbg !418
  %10710 = load i16, i16* %10709, align 2, !dbg !419
  store i16 %10710, i16* %10655, align 2, !dbg !420
  br label %10832, !dbg !421

10711:                                            ; preds = %10663
  %10712 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 2, !dbg !422
  store i8 %10579, i8* %10712, align 1, !dbg !423
  %10713 = load i32, i32* %10585, align 4, !dbg !424
  %10714 = and i32 %10713, 1, !dbg !425
  %10715 = icmp eq i32 %10714, 0, !dbg !426
  %10716 = icmp sge i32 %10713, 12, !dbg !427
  %10717 = and i1 %10716, %10715, !dbg !428
  %10718 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10713), !dbg !429
  %10719 = icmp eq i32 %10718, 0, !dbg !430
  br i1 %10719, label %10731, label %10720, !dbg !431

10720:                                            ; preds = %10711
  %10721 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 12, i32 0, !dbg !432
  %10722 = load %struct.BtCursor*, %struct.BtCursor** %10721, align 8, !dbg !433
  %10723 = getelementptr i32, i32* %10592, i32 4, !dbg !434
  %10724 = load i32, i32* %10723, align 4, !dbg !435
  %10725 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %10722, i32 %10724, i32 %10718, %struct.sqlite3_value* %10588), !dbg !436
  %10726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 5, !dbg !437
  %10727 = load i8*, i8** %10726, align 8, !dbg !438
  %10728 = call i32 @sqlite3VdbeSerialGet(i8* %10727, i32 %10713, %struct.sqlite3_value* %10588), !dbg !439
  %10729 = load i16, i16* %10655, align 2, !dbg !440
  %10730 = and i16 %10729, -4097, !dbg !441
  store i16 %10730, i16* %10655, align 2, !dbg !442
  br label %10832, !dbg !443

10731:                                            ; preds = %10711
  %10732 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %10713, %struct.sqlite3_value* %10588), !dbg !444
  br label %10832, !dbg !445

10733:                                            ; preds = %10651
  %10734 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 23, i32 4, !dbg !446
  %10735 = load i32, i32* %10734, align 4, !dbg !447
  store i32 %10735, i32* %10585, align 4, !dbg !448
  br label %10654, !dbg !449

10736:                                            ; preds = %10651
  %10737 = load i32, i32* %10599, align 4, !dbg !450
  %10738 = load i32, i32* %10592, align 4, !dbg !451
  %10739 = icmp ult i32 %10737, %10738, !dbg !452
  br i1 %10739, label %10740, label %10821, !dbg !453

10740:                                            ; preds = %10736
  %10741 = load i8*, i8** %10602, align 8, !dbg !454
  %10742 = icmp eq i8* %10741, null, !dbg !455
  br i1 %10742, label %10744, label %10743, !dbg !456

10743:                                            ; preds = %10740
  store i8* %10741, i8** %10584, align 8, !dbg !457
  br label %10744, !dbg !458

10744:                                            ; preds = %10743, %10740, %10624
  %10745 = alloca i32, align 4, !dbg !459
  %10746 = load i16, i16* %10603, align 2, !dbg !460
  %10747 = zext i16 %10746 to i32, !dbg !461
  store i32 %10747, i32* %10745, align 4, !dbg !462
  %10748 = alloca i64, align 8, !dbg !463
  %10749 = getelementptr i32, i32* %10592, i32 %10747, !dbg !464
  %10750 = load i32, i32* %10749, align 4, !dbg !465
  %10751 = zext i32 %10750 to i64, !dbg !466
  store i64 %10751, i64* %10748, align 4, !dbg !467
  %10752 = load i8*, i8** %10584, align 8, !dbg !468
  %10753 = load i32, i32* %10599, align 4, !dbg !469
  %10754 = alloca i8*, align 8, !dbg !470
  %10755 = getelementptr i8, i8* %10752, i32 %10753, !dbg !471
  store i8* %10755, i8** %10754, align 8, !dbg !472
  %10756 = load i32, i32* %10592, align 4, !dbg !473
  %10757 = getelementptr i8, i8* %10752, i32 %10756, !dbg !474
  br label %10758, !dbg !475

10758:                                            ; preds = %10765, %10744
  %10759 = load i32, i32* %10745, align 4, !dbg !476
  %10760 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10587, i32 0, i32 23, i32 %10759, !dbg !477
  %10761 = load i8*, i8** %10754, align 8, !dbg !478
  %10762 = load i8, i8* %10761, align 1, !dbg !479
  %10763 = zext i8 %10762 to i32, !dbg !480
  store i32 %10763, i32* %10585, align 4, !dbg !481
  store i32 %10763, i32* %10760, align 4, !dbg !482
  %10764 = icmp sgt i8 %10762, -1, !dbg !483
  br i1 %10764, label %10788, label %10779, !dbg !484

10765:                                            ; preds = %10779, %10788
  %10766 = load i32, i32* %10745, align 4, !dbg !485
  %10767 = add i32 %10766, 1, !dbg !486
  store i32 %10767, i32* %10745, align 4, !dbg !487
  %10768 = load i64, i64* %10748, align 4, !dbg !488
  %10769 = and i64 4294967295, %10768, !dbg !489
  %10770 = trunc i64 %10769 to i32, !dbg !490
  %10771 = getelementptr i32, i32* %10592, i32 %10767, !dbg !491
  store i32 %10770, i32* %10771, align 4, !dbg !492
  %10772 = load i32, i32* %10745, align 4, !dbg !493
  %10773 = icmp sle i32 %10772, 4, !dbg !494
  %10774 = load i8*, i8** %10754, align 8, !dbg !495
  %10775 = ptrtoint i8* %10774 to i64, !dbg !496
  %10776 = ptrtoint i8* %10757 to i64, !dbg !497
  %10777 = icmp ult i64 %10775, %10776, !dbg !498
  %10778 = and i1 %10773, %10777, !dbg !499
  br i1 %10778, label %10758, label %10797, !dbg !500

10779:                                            ; preds = %10758
  %10780 = load i8*, i8** %10754, align 8, !dbg !501
  %10781 = call i8 @sqlite3GetVarint32(i8* %10780, i32* %10585), !dbg !502
  %10782 = getelementptr i8, i8* %10780, i8 %10781, !dbg !503
  store i8* %10782, i8** %10754, align 8, !dbg !504
  %10783 = load i32, i32* %10585, align 4, !dbg !505
  store i32 %10783, i32* %10760, align 4, !dbg !506
  %10784 = load i64, i64* %10748, align 4, !dbg !507
  %10785 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10783), !dbg !508
  %10786 = zext i32 %10785 to i64, !dbg !509
  %10787 = add i64 %10784, %10786, !dbg !510
  store i64 %10787, i64* %10748, align 4, !dbg !511
  br label %10765, !dbg !512

10788:                                            ; preds = %10758
  %10789 = getelementptr i8, i8* %10761, i32 1, !dbg !513
  store i8* %10789, i8** %10754, align 8, !dbg !514
  %10790 = load i32, i32* %10585, align 4, !dbg !515
  %10791 = trunc i32 %10790 to i8, !dbg !516
  %10792 = getelementptr i8, i8* %4, i8 %10791, !dbg !517
  %10793 = load i8, i8* %10792, align 1, !dbg !518
  %10794 = zext i8 %10793 to i64, !dbg !519
  %10795 = load i64, i64* %10748, align 4, !dbg !520
  %10796 = add i64 %10795, %10794, !dbg !521
  store i64 %10796, i64* %10748, align 4, !dbg !522
  br label %10765, !dbg !523

10797:                                            ; preds = %10765
  %10798 = load i64, i64* %10748, align 4, !dbg !524
  %10799 = load i32, i32* %10600, align 4, !dbg !525
  %10800 = zext i32 %10799 to i64, !dbg !526
  %10801 = icmp uge i64 %10775, %10776, !dbg !527
  %10802 = icmp ugt i64 %10775, %10776, !dbg !528
  %10803 = icmp ne i64 %10798, %10800, !dbg !529
  %10804 = icmp ugt i64 %10798, %10800, !dbg !530
  %10805 = or i1 %10802, %10803, !dbg !531
  %10806 = and i1 %10801, %10805, !dbg !532
  %10807 = or i1 %10806, %10804, !dbg !533
  br i1 %10807, label %10808, label %10812, !dbg !534

10808:                                            ; preds = %10797
  %10809 = load i32, i32* %10592, align 4, !dbg !535
  %10810 = icmp eq i32 %10809, 0, !dbg !536
  br i1 %10810, label %10811, label %10812, !dbg !537

10811:                                            ; preds = %10808
  store i32 0, i32* %10745, align 4, !dbg !538
  store i8* %10757, i8** %10754, align 8, !dbg !539
  br label %10812, !dbg !540

10812:                                            ; preds = %10811, %10808, %10797
  %10813 = load i32, i32* %10745, align 4, !dbg !541
  %10814 = trunc i32 %10813 to i16, !dbg !542
  store i16 %10814, i16* %10603, align 2, !dbg !543
  %10815 = load i8*, i8** %10754, align 8, !dbg !544
  %10816 = ptrtoint i8* %10815 to i64, !dbg !545
  %10817 = load i8*, i8** %10584, align 8, !dbg !546
  %10818 = ptrtoint i8* %10817 to i64, !dbg !547
  %10819 = sub i64 %10816, %10818, !dbg !548
  %10820 = trunc i64 %10819 to i32, !dbg !549
  store i32 %10820, i32* %10599, align 4, !dbg !550
  br label %10822, !dbg !551

10821:                                            ; preds = %10736
  store i32 0, i32* %10585, align 4, !dbg !552
  br label %10822, !dbg !553

10822:                                            ; preds = %10812, %10821
  %10823 = load i16, i16* %10603, align 2, !dbg !554
  %10824 = icmp sle i16 %10823, 4, !dbg !555
  br i1 %10824, label %10825, label %10654, !dbg !556

10825:                                            ; preds = %10822
  %10826 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10588, i32 0, i32 1, !dbg !557
  %10827 = load i16, i16* %10826, align 2, !dbg !557
  %10828 = and i16 %10827, 9216, !dbg !557
  %10829 = icmp ne i16 %10828, 0, !dbg !557
  br i1 %10829, label %10830, label %10831, !dbg !557

10830:                                            ; preds = %10825
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10588), !dbg !557
  br label %10832, !dbg !557

10831:                                            ; preds = %10825
  store i16 1, i16* %10826, align 2, !dbg !557
  br label %10832, !dbg !557

10832:                                            ; preds = %10830, %10831, %10701, %10681, %10720, %10731, %10649, %10650
  call void @llvm.stackrestore(i8* %10577), !dbg !558
  br label %10833, !dbg !75

10833:                                            ; preds = %19, %10832
  %10834 = call i8* @llvm.stacksave(), !dbg !266
  %10835 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %10836 = load i8, i8* %10835, align 1, !dbg !270
  %10837 = alloca i32, align 4, !dbg !271
  store i32 10, i32* %10837, align 4, !dbg !272
  %10838 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 10, !dbg !273
  %10839 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %10840 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10838, align 8, !dbg !275
  store %struct.VdbeCursor* %10840, %struct.VdbeCursor** %10839, align 8, !dbg !276
  %10841 = alloca i8*, align 8, !dbg !277
  %10842 = alloca i32, align 4, !dbg !278
  %10843 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %10839, i32* %10837), !dbg !279
  %10844 = load %struct.VdbeCursor*, %struct.VdbeCursor** %10839, align 8, !dbg !280
  %10845 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 67, !dbg !281
  %10846 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 16, !dbg !282
  %10847 = load i16, i16* %10846, align 2, !dbg !283
  %10848 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 19, !dbg !284
  %10849 = load i32*, i32** %10848, align 8, !dbg !285
  %10850 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 0, !dbg !286
  %10851 = load i8, i8* %10850, align 1, !dbg !287
  %10852 = icmp ne i8 %10851, 3, !dbg !288
  %10853 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 2, !dbg !289
  %10854 = load i8, i8* %10853, align 1, !dbg !290
  %10855 = icmp ne i8 %10854, 0, !dbg !291
  %10856 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 14, !dbg !292
  %10857 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 21, !dbg !293
  %10858 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 22, !dbg !294
  %10859 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 20, !dbg !295
  %10860 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 17, !dbg !296
  %10861 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 9, !dbg !297
  %10862 = load i32, i32* %10861, align 4, !dbg !298
  %10863 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %10864 = load i32, i32* %10863, align 4, !dbg !300
  %10865 = icmp ne i32 %10862, %10864, !dbg !301
  br i1 %10865, label %10866, label %10908, !dbg !302

10866:                                            ; preds = %10833
  br i1 %10855, label %10888, label %10883, !dbg !303

10867:                                            ; preds = %10883, %10890
  %10868 = load i32, i32* %10863, align 4, !dbg !304
  store i32 %10868, i32* %10861, align 4, !dbg !305
  %10869 = load i8*, i8** %10859, align 8, !dbg !306
  %10870 = load i8, i8* %10869, align 1, !dbg !307
  %10871 = icmp sgt i8 %10870, -1, !dbg !310
  br i1 %10871, label %10872, label %10874, !dbg !311

10872:                                            ; preds = %10867
  %10873 = zext i8 %10870 to i32, !dbg !312
  store i32 %10873, i32* %10849, align 4, !dbg !313
  store i32 1, i32* %10856, align 4, !dbg !314
  br label %10877, !dbg !315

10874:                                            ; preds = %10867
  %10875 = call i8 @sqlite3GetVarint32(i8* %10869, i32* %10849), !dbg !316
  %10876 = zext i8 %10875 to i32, !dbg !317
  store i32 %10876, i32* %10856, align 4, !dbg !318
  br label %10877, !dbg !319

10877:                                            ; preds = %10874, %10872
  store i16 0, i16* %10860, align 2, !dbg !320
  %10878 = load i32, i32* %10858, align 4, !dbg !321
  %10879 = load i32, i32* %10849, align 4, !dbg !322
  %10880 = icmp ult i32 %10878, %10879, !dbg !323
  br i1 %10880, label %10882, label %10881, !dbg !324

10881:                                            ; preds = %10877
  store i8* %10869, i8** %10841, align 8, !dbg !325
  br label %11001, !dbg !326

10882:                                            ; preds = %10877
  store i8* null, i8** %10859, align 8, !dbg !327
  store i32 0, i32* %10858, align 4, !dbg !328
  br label %10908, !dbg !329

10883:                                            ; preds = %10866
  %10884 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 12, i32 0, !dbg !330
  %10885 = load %struct.BtCursor*, %struct.BtCursor** %10884, align 8, !dbg !331
  %10886 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %10885), !dbg !332
  store i32 %10886, i32* %10857, align 4, !dbg !333
  %10887 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %10885, i32* %10858), !dbg !334
  store i8* %10887, i8** %10859, align 8, !dbg !335
  br label %10867, !dbg !336

10888:                                            ; preds = %10866
  %10889 = icmp eq i8 %10851, 3, !dbg !337
  br i1 %10889, label %10890, label %10901, !dbg !338

10890:                                            ; preds = %10888
  %10891 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 10, !dbg !339
  %10892 = load i32, i32* %10891, align 4, !dbg !340
  %10893 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %10892, !dbg !341
  %10894 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10893, i32 0, i32 1, !dbg !342
  %10895 = load i16, i16* %10894, align 2, !dbg !343
  %10896 = and i16 %10895, 16, !dbg !344
  %10897 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10893, i32 0, i32 4, !dbg !345
  %10898 = load i32, i32* %10897, align 4, !dbg !346
  store i32 %10898, i32* %10857, align 4, !dbg !347
  store i32 %10898, i32* %10858, align 4, !dbg !348
  %10899 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10893, i32 0, i32 5, !dbg !349
  %10900 = load i8*, i8** %10899, align 8, !dbg !350
  store i8* %10900, i8** %10859, align 8, !dbg !351
  br label %10867, !dbg !352

10901:                                            ; preds = %10888
  %10902 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 1, !dbg !353
  %10903 = load i16, i16* %10902, align 2, !dbg !353
  %10904 = and i16 %10903, 9216, !dbg !353
  %10905 = icmp ne i16 %10904, 0, !dbg !353
  br i1 %10905, label %10906, label %10907, !dbg !353

10906:                                            ; preds = %10901
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10845), !dbg !353
  br label %11089, !dbg !353

10907:                                            ; preds = %10901
  store i16 1, i16* %10902, align 2, !dbg !353
  br label %11089, !dbg !353

10908:                                            ; preds = %10882, %10833
  %10909 = load i16, i16* %10860, align 2, !dbg !354
  %10910 = icmp ule i16 %10909, 3, !dbg !355
  br i1 %10910, label %10993, label %10990, !dbg !356

10911:                                            ; preds = %10990, %11079
  %10912 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 1, !dbg !357
  %10913 = load i16, i16* %10912, align 2, !dbg !358
  %10914 = and i16 9216, %10913, !dbg !359
  %10915 = icmp eq i16 0, %10914, !dbg !360
  br i1 %10915, label %10916, label %10920, !dbg !361

10916:                                            ; preds = %10911
  %10917 = icmp ne i16 %10914, 0, !dbg !362
  br i1 %10917, label %10918, label %10919, !dbg !362

10918:                                            ; preds = %10916
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10845), !dbg !362
  br label %10920, !dbg !362

10919:                                            ; preds = %10916
  store i16 1, i16* %10912, align 2, !dbg !362
  br label %10920, !dbg !362

10920:                                            ; preds = %10918, %10919, %10911
  %10921 = load i32, i32* %10842, align 4, !dbg !363
  %10922 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 23, i32 3, !dbg !364
  %10923 = load i32, i32* %10922, align 4, !dbg !365
  %10924 = load i32, i32* %10858, align 4, !dbg !366
  %10925 = getelementptr i32, i32* %10849, i32 4, !dbg !367
  %10926 = load i32, i32* %10925, align 4, !dbg !368
  %10927 = icmp sge i32 %10924, %10926, !dbg !369
  br i1 %10927, label %10928, label %10968, !dbg !370

10928:                                            ; preds = %10920
  %10929 = load i8*, i8** %10859, align 8, !dbg !371
  %10930 = ptrtoint i8* %10929 to i64, !dbg !372
  %10931 = getelementptr i32, i32* %10849, i32 3, !dbg !373
  %10932 = load i32, i32* %10931, align 4, !dbg !374
  %10933 = zext i32 %10932 to i64, !dbg !375
  %10934 = add i64 %10930, %10933, !dbg !376
  %10935 = inttoptr i64 %10934 to i8*, !dbg !377
  store i8* %10935, i8** %10841, align 8, !dbg !378
  %10936 = load i32, i32* %10842, align 4, !dbg !379
  %10937 = icmp ult i32 %10936, 12, !dbg !380
  br i1 %10937, label %10938, label %10940, !dbg !381

10938:                                            ; preds = %10928
  %10939 = call i32 @sqlite3VdbeSerialGet(i8* %10935, i32 %10936, %struct.sqlite3_value* %10845), !dbg !382
  br label %11089, !dbg !383

10940:                                            ; preds = %10928
  %10941 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %10941, align 2, !dbg !385
  %10942 = getelementptr i16, i16* %10941, i32 1, !dbg !386
  store i16 514, i16* %10942, align 2, !dbg !387
  %10943 = load i32, i32* %10842, align 4, !dbg !388
  %10944 = sub i32 %10943, 12, !dbg !389
  %10945 = lshr i32 %10944, 1, !dbg !390
  %10946 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 4, !dbg !391
  store i32 %10945, i32* %10946, align 4, !dbg !392
  %10947 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 2, !dbg !393
  store i8 %10836, i8* %10947, align 1, !dbg !394
  %10948 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 5, !dbg !395
  %10949 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 7, !dbg !396
  %10950 = load i32, i32* %10949, align 4, !dbg !397
  %10951 = add i32 %10945, 2, !dbg !398
  %10952 = icmp slt i32 %10950, %10951, !dbg !399
  br i1 %10952, label %10953, label %10955, !dbg !400

10953:                                            ; preds = %10940
  store i16 1, i16* %10912, align 2, !dbg !401
  %10954 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %10845, i32 %10951, i32 0), !dbg !402
  br label %10958, !dbg !403

10955:                                            ; preds = %10940
  %10956 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 6, !dbg !404
  %10957 = load i8*, i8** %10956, align 8, !dbg !405
  store i8* %10957, i8** %10948, align 8, !dbg !406
  br label %10958, !dbg !407

10958:                                            ; preds = %10955, %10953
  %10959 = zext i32 %10945 to i64, !dbg !408
  %10960 = load i8*, i8** %10948, align 8, !dbg !409
  %10961 = load i8*, i8** %10841, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10960, i8* %10961, i64 %10959, i1 false), !dbg !411
  %10962 = getelementptr i8, i8* %10960, i32 %10945, !dbg !412
  store i8 0, i8* %10962, align 1, !dbg !413
  %10963 = add i32 %10945, 1, !dbg !414
  %10964 = getelementptr i8, i8* %10960, i32 %10963, !dbg !415
  store i8 0, i8* %10964, align 1, !dbg !416
  %10965 = and i32 %10943, 1, !dbg !417
  %10966 = getelementptr i16, i16* %10941, i32 %10965, !dbg !418
  %10967 = load i16, i16* %10966, align 2, !dbg !419
  store i16 %10967, i16* %10912, align 2, !dbg !420
  br label %11089, !dbg !421

10968:                                            ; preds = %10920
  %10969 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 2, !dbg !422
  store i8 %10836, i8* %10969, align 1, !dbg !423
  %10970 = load i32, i32* %10842, align 4, !dbg !424
  %10971 = and i32 %10970, 1, !dbg !425
  %10972 = icmp eq i32 %10971, 0, !dbg !426
  %10973 = icmp sge i32 %10970, 12, !dbg !427
  %10974 = and i1 %10973, %10972, !dbg !428
  %10975 = call i32 @sqlite3VdbeSerialTypeLen(i32 %10970), !dbg !429
  %10976 = icmp eq i32 %10975, 0, !dbg !430
  br i1 %10976, label %10988, label %10977, !dbg !431

10977:                                            ; preds = %10968
  %10978 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 12, i32 0, !dbg !432
  %10979 = load %struct.BtCursor*, %struct.BtCursor** %10978, align 8, !dbg !433
  %10980 = getelementptr i32, i32* %10849, i32 3, !dbg !434
  %10981 = load i32, i32* %10980, align 4, !dbg !435
  %10982 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %10979, i32 %10981, i32 %10975, %struct.sqlite3_value* %10845), !dbg !436
  %10983 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 5, !dbg !437
  %10984 = load i8*, i8** %10983, align 8, !dbg !438
  %10985 = call i32 @sqlite3VdbeSerialGet(i8* %10984, i32 %10970, %struct.sqlite3_value* %10845), !dbg !439
  %10986 = load i16, i16* %10912, align 2, !dbg !440
  %10987 = and i16 %10986, -4097, !dbg !441
  store i16 %10987, i16* %10912, align 2, !dbg !442
  br label %11089, !dbg !443

10988:                                            ; preds = %10968
  %10989 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %10970, %struct.sqlite3_value* %10845), !dbg !444
  br label %11089, !dbg !445

10990:                                            ; preds = %10908
  %10991 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 23, i32 3, !dbg !446
  %10992 = load i32, i32* %10991, align 4, !dbg !447
  store i32 %10992, i32* %10842, align 4, !dbg !448
  br label %10911, !dbg !449

10993:                                            ; preds = %10908
  %10994 = load i32, i32* %10856, align 4, !dbg !450
  %10995 = load i32, i32* %10849, align 4, !dbg !451
  %10996 = icmp ult i32 %10994, %10995, !dbg !452
  br i1 %10996, label %10997, label %11078, !dbg !453

10997:                                            ; preds = %10993
  %10998 = load i8*, i8** %10859, align 8, !dbg !454
  %10999 = icmp eq i8* %10998, null, !dbg !455
  br i1 %10999, label %11001, label %11000, !dbg !456

11000:                                            ; preds = %10997
  store i8* %10998, i8** %10841, align 8, !dbg !457
  br label %11001, !dbg !458

11001:                                            ; preds = %11000, %10997, %10881
  %11002 = alloca i32, align 4, !dbg !459
  %11003 = load i16, i16* %10860, align 2, !dbg !460
  %11004 = zext i16 %11003 to i32, !dbg !461
  store i32 %11004, i32* %11002, align 4, !dbg !462
  %11005 = alloca i64, align 8, !dbg !463
  %11006 = getelementptr i32, i32* %10849, i32 %11004, !dbg !464
  %11007 = load i32, i32* %11006, align 4, !dbg !465
  %11008 = zext i32 %11007 to i64, !dbg !466
  store i64 %11008, i64* %11005, align 4, !dbg !467
  %11009 = load i8*, i8** %10841, align 8, !dbg !468
  %11010 = load i32, i32* %10856, align 4, !dbg !469
  %11011 = alloca i8*, align 8, !dbg !470
  %11012 = getelementptr i8, i8* %11009, i32 %11010, !dbg !471
  store i8* %11012, i8** %11011, align 8, !dbg !472
  %11013 = load i32, i32* %10849, align 4, !dbg !473
  %11014 = getelementptr i8, i8* %11009, i32 %11013, !dbg !474
  br label %11015, !dbg !475

11015:                                            ; preds = %11022, %11001
  %11016 = load i32, i32* %11002, align 4, !dbg !476
  %11017 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %10844, i32 0, i32 23, i32 %11016, !dbg !477
  %11018 = load i8*, i8** %11011, align 8, !dbg !478
  %11019 = load i8, i8* %11018, align 1, !dbg !479
  %11020 = zext i8 %11019 to i32, !dbg !480
  store i32 %11020, i32* %10842, align 4, !dbg !481
  store i32 %11020, i32* %11017, align 4, !dbg !482
  %11021 = icmp sgt i8 %11019, -1, !dbg !483
  br i1 %11021, label %11045, label %11036, !dbg !484

11022:                                            ; preds = %11036, %11045
  %11023 = load i32, i32* %11002, align 4, !dbg !485
  %11024 = add i32 %11023, 1, !dbg !486
  store i32 %11024, i32* %11002, align 4, !dbg !487
  %11025 = load i64, i64* %11005, align 4, !dbg !488
  %11026 = and i64 4294967295, %11025, !dbg !489
  %11027 = trunc i64 %11026 to i32, !dbg !490
  %11028 = getelementptr i32, i32* %10849, i32 %11024, !dbg !491
  store i32 %11027, i32* %11028, align 4, !dbg !492
  %11029 = load i32, i32* %11002, align 4, !dbg !493
  %11030 = icmp sle i32 %11029, 3, !dbg !494
  %11031 = load i8*, i8** %11011, align 8, !dbg !495
  %11032 = ptrtoint i8* %11031 to i64, !dbg !496
  %11033 = ptrtoint i8* %11014 to i64, !dbg !497
  %11034 = icmp ult i64 %11032, %11033, !dbg !498
  %11035 = and i1 %11030, %11034, !dbg !499
  br i1 %11035, label %11015, label %11054, !dbg !500

11036:                                            ; preds = %11015
  %11037 = load i8*, i8** %11011, align 8, !dbg !501
  %11038 = call i8 @sqlite3GetVarint32(i8* %11037, i32* %10842), !dbg !502
  %11039 = getelementptr i8, i8* %11037, i8 %11038, !dbg !503
  store i8* %11039, i8** %11011, align 8, !dbg !504
  %11040 = load i32, i32* %10842, align 4, !dbg !505
  store i32 %11040, i32* %11017, align 4, !dbg !506
  %11041 = load i64, i64* %11005, align 4, !dbg !507
  %11042 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11040), !dbg !508
  %11043 = zext i32 %11042 to i64, !dbg !509
  %11044 = add i64 %11041, %11043, !dbg !510
  store i64 %11044, i64* %11005, align 4, !dbg !511
  br label %11022, !dbg !512

11045:                                            ; preds = %11015
  %11046 = getelementptr i8, i8* %11018, i32 1, !dbg !513
  store i8* %11046, i8** %11011, align 8, !dbg !514
  %11047 = load i32, i32* %10842, align 4, !dbg !515
  %11048 = trunc i32 %11047 to i8, !dbg !516
  %11049 = getelementptr i8, i8* %4, i8 %11048, !dbg !517
  %11050 = load i8, i8* %11049, align 1, !dbg !518
  %11051 = zext i8 %11050 to i64, !dbg !519
  %11052 = load i64, i64* %11005, align 4, !dbg !520
  %11053 = add i64 %11052, %11051, !dbg !521
  store i64 %11053, i64* %11005, align 4, !dbg !522
  br label %11022, !dbg !523

11054:                                            ; preds = %11022
  %11055 = load i64, i64* %11005, align 4, !dbg !524
  %11056 = load i32, i32* %10857, align 4, !dbg !525
  %11057 = zext i32 %11056 to i64, !dbg !526
  %11058 = icmp uge i64 %11032, %11033, !dbg !527
  %11059 = icmp ugt i64 %11032, %11033, !dbg !528
  %11060 = icmp ne i64 %11055, %11057, !dbg !529
  %11061 = icmp ugt i64 %11055, %11057, !dbg !530
  %11062 = or i1 %11059, %11060, !dbg !531
  %11063 = and i1 %11058, %11062, !dbg !532
  %11064 = or i1 %11063, %11061, !dbg !533
  br i1 %11064, label %11065, label %11069, !dbg !534

11065:                                            ; preds = %11054
  %11066 = load i32, i32* %10849, align 4, !dbg !535
  %11067 = icmp eq i32 %11066, 0, !dbg !536
  br i1 %11067, label %11068, label %11069, !dbg !537

11068:                                            ; preds = %11065
  store i32 0, i32* %11002, align 4, !dbg !538
  store i8* %11014, i8** %11011, align 8, !dbg !539
  br label %11069, !dbg !540

11069:                                            ; preds = %11068, %11065, %11054
  %11070 = load i32, i32* %11002, align 4, !dbg !541
  %11071 = trunc i32 %11070 to i16, !dbg !542
  store i16 %11071, i16* %10860, align 2, !dbg !543
  %11072 = load i8*, i8** %11011, align 8, !dbg !544
  %11073 = ptrtoint i8* %11072 to i64, !dbg !545
  %11074 = load i8*, i8** %10841, align 8, !dbg !546
  %11075 = ptrtoint i8* %11074 to i64, !dbg !547
  %11076 = sub i64 %11073, %11075, !dbg !548
  %11077 = trunc i64 %11076 to i32, !dbg !549
  store i32 %11077, i32* %10856, align 4, !dbg !550
  br label %11079, !dbg !551

11078:                                            ; preds = %10993
  store i32 0, i32* %10842, align 4, !dbg !552
  br label %11079, !dbg !553

11079:                                            ; preds = %11069, %11078
  %11080 = load i16, i16* %10860, align 2, !dbg !554
  %11081 = icmp sle i16 %11080, 3, !dbg !555
  br i1 %11081, label %11082, label %10911, !dbg !556

11082:                                            ; preds = %11079
  %11083 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %10845, i32 0, i32 1, !dbg !557
  %11084 = load i16, i16* %11083, align 2, !dbg !557
  %11085 = and i16 %11084, 9216, !dbg !557
  %11086 = icmp ne i16 %11085, 0, !dbg !557
  br i1 %11086, label %11087, label %11088, !dbg !557

11087:                                            ; preds = %11082
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %10845), !dbg !557
  br label %11089, !dbg !557

11088:                                            ; preds = %11082
  store i16 1, i16* %11083, align 2, !dbg !557
  br label %11089, !dbg !557

11089:                                            ; preds = %11087, %11088, %10958, %10938, %10977, %10988, %10906, %10907
  call void @llvm.stackrestore(i8* %10834), !dbg !558
  br label %11090, !dbg !75

11090:                                            ; preds = %19, %11089
  %11091 = call i8* @llvm.stacksave(), !dbg !266
  %11092 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %11093 = load i8, i8* %11092, align 1, !dbg !270
  %11094 = alloca i32, align 4, !dbg !271
  store i32 10, i32* %11094, align 4, !dbg !272
  %11095 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 10, !dbg !273
  %11096 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %11097 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11095, align 8, !dbg !275
  store %struct.VdbeCursor* %11097, %struct.VdbeCursor** %11096, align 8, !dbg !276
  %11098 = alloca i8*, align 8, !dbg !277
  %11099 = alloca i32, align 4, !dbg !278
  %11100 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %11096, i32* %11094), !dbg !279
  %11101 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11096, align 8, !dbg !280
  %11102 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 66, !dbg !281
  %11103 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 16, !dbg !282
  %11104 = load i16, i16* %11103, align 2, !dbg !283
  %11105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 19, !dbg !284
  %11106 = load i32*, i32** %11105, align 8, !dbg !285
  %11107 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 0, !dbg !286
  %11108 = load i8, i8* %11107, align 1, !dbg !287
  %11109 = icmp ne i8 %11108, 3, !dbg !288
  %11110 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 2, !dbg !289
  %11111 = load i8, i8* %11110, align 1, !dbg !290
  %11112 = icmp ne i8 %11111, 0, !dbg !291
  %11113 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 14, !dbg !292
  %11114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 21, !dbg !293
  %11115 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 22, !dbg !294
  %11116 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 20, !dbg !295
  %11117 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 17, !dbg !296
  %11118 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 9, !dbg !297
  %11119 = load i32, i32* %11118, align 4, !dbg !298
  %11120 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %11121 = load i32, i32* %11120, align 4, !dbg !300
  %11122 = icmp ne i32 %11119, %11121, !dbg !301
  br i1 %11122, label %11123, label %11165, !dbg !302

11123:                                            ; preds = %11090
  br i1 %11112, label %11145, label %11140, !dbg !303

11124:                                            ; preds = %11140, %11147
  %11125 = load i32, i32* %11120, align 4, !dbg !304
  store i32 %11125, i32* %11118, align 4, !dbg !305
  %11126 = load i8*, i8** %11116, align 8, !dbg !306
  %11127 = load i8, i8* %11126, align 1, !dbg !307
  %11128 = icmp sgt i8 %11127, -1, !dbg !310
  br i1 %11128, label %11129, label %11131, !dbg !311

11129:                                            ; preds = %11124
  %11130 = zext i8 %11127 to i32, !dbg !312
  store i32 %11130, i32* %11106, align 4, !dbg !313
  store i32 1, i32* %11113, align 4, !dbg !314
  br label %11134, !dbg !315

11131:                                            ; preds = %11124
  %11132 = call i8 @sqlite3GetVarint32(i8* %11126, i32* %11106), !dbg !316
  %11133 = zext i8 %11132 to i32, !dbg !317
  store i32 %11133, i32* %11113, align 4, !dbg !318
  br label %11134, !dbg !319

11134:                                            ; preds = %11131, %11129
  store i16 0, i16* %11117, align 2, !dbg !320
  %11135 = load i32, i32* %11115, align 4, !dbg !321
  %11136 = load i32, i32* %11106, align 4, !dbg !322
  %11137 = icmp ult i32 %11135, %11136, !dbg !323
  br i1 %11137, label %11139, label %11138, !dbg !324

11138:                                            ; preds = %11134
  store i8* %11126, i8** %11098, align 8, !dbg !325
  br label %11258, !dbg !326

11139:                                            ; preds = %11134
  store i8* null, i8** %11116, align 8, !dbg !327
  store i32 0, i32* %11115, align 4, !dbg !328
  br label %11165, !dbg !329

11140:                                            ; preds = %11123
  %11141 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 12, i32 0, !dbg !330
  %11142 = load %struct.BtCursor*, %struct.BtCursor** %11141, align 8, !dbg !331
  %11143 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %11142), !dbg !332
  store i32 %11143, i32* %11114, align 4, !dbg !333
  %11144 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %11142, i32* %11115), !dbg !334
  store i8* %11144, i8** %11116, align 8, !dbg !335
  br label %11124, !dbg !336

11145:                                            ; preds = %11123
  %11146 = icmp eq i8 %11108, 3, !dbg !337
  br i1 %11146, label %11147, label %11158, !dbg !338

11147:                                            ; preds = %11145
  %11148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 10, !dbg !339
  %11149 = load i32, i32* %11148, align 4, !dbg !340
  %11150 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %11149, !dbg !341
  %11151 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11150, i32 0, i32 1, !dbg !342
  %11152 = load i16, i16* %11151, align 2, !dbg !343
  %11153 = and i16 %11152, 16, !dbg !344
  %11154 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11150, i32 0, i32 4, !dbg !345
  %11155 = load i32, i32* %11154, align 4, !dbg !346
  store i32 %11155, i32* %11114, align 4, !dbg !347
  store i32 %11155, i32* %11115, align 4, !dbg !348
  %11156 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11150, i32 0, i32 5, !dbg !349
  %11157 = load i8*, i8** %11156, align 8, !dbg !350
  store i8* %11157, i8** %11116, align 8, !dbg !351
  br label %11124, !dbg !352

11158:                                            ; preds = %11145
  %11159 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 1, !dbg !353
  %11160 = load i16, i16* %11159, align 2, !dbg !353
  %11161 = and i16 %11160, 9216, !dbg !353
  %11162 = icmp ne i16 %11161, 0, !dbg !353
  br i1 %11162, label %11163, label %11164, !dbg !353

11163:                                            ; preds = %11158
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11102), !dbg !353
  br label %11346, !dbg !353

11164:                                            ; preds = %11158
  store i16 1, i16* %11159, align 2, !dbg !353
  br label %11346, !dbg !353

11165:                                            ; preds = %11139, %11090
  %11166 = load i16, i16* %11117, align 2, !dbg !354
  %11167 = icmp ule i16 %11166, 2, !dbg !355
  br i1 %11167, label %11250, label %11247, !dbg !356

11168:                                            ; preds = %11247, %11336
  %11169 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 1, !dbg !357
  %11170 = load i16, i16* %11169, align 2, !dbg !358
  %11171 = and i16 9216, %11170, !dbg !359
  %11172 = icmp eq i16 0, %11171, !dbg !360
  br i1 %11172, label %11173, label %11177, !dbg !361

11173:                                            ; preds = %11168
  %11174 = icmp ne i16 %11171, 0, !dbg !362
  br i1 %11174, label %11175, label %11176, !dbg !362

11175:                                            ; preds = %11173
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11102), !dbg !362
  br label %11177, !dbg !362

11176:                                            ; preds = %11173
  store i16 1, i16* %11169, align 2, !dbg !362
  br label %11177, !dbg !362

11177:                                            ; preds = %11175, %11176, %11168
  %11178 = load i32, i32* %11099, align 4, !dbg !363
  %11179 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 23, i32 2, !dbg !364
  %11180 = load i32, i32* %11179, align 4, !dbg !365
  %11181 = load i32, i32* %11115, align 4, !dbg !366
  %11182 = getelementptr i32, i32* %11106, i32 3, !dbg !367
  %11183 = load i32, i32* %11182, align 4, !dbg !368
  %11184 = icmp sge i32 %11181, %11183, !dbg !369
  br i1 %11184, label %11185, label %11225, !dbg !370

11185:                                            ; preds = %11177
  %11186 = load i8*, i8** %11116, align 8, !dbg !371
  %11187 = ptrtoint i8* %11186 to i64, !dbg !372
  %11188 = getelementptr i32, i32* %11106, i32 2, !dbg !373
  %11189 = load i32, i32* %11188, align 4, !dbg !374
  %11190 = zext i32 %11189 to i64, !dbg !375
  %11191 = add i64 %11187, %11190, !dbg !376
  %11192 = inttoptr i64 %11191 to i8*, !dbg !377
  store i8* %11192, i8** %11098, align 8, !dbg !378
  %11193 = load i32, i32* %11099, align 4, !dbg !379
  %11194 = icmp ult i32 %11193, 12, !dbg !380
  br i1 %11194, label %11195, label %11197, !dbg !381

11195:                                            ; preds = %11185
  %11196 = call i32 @sqlite3VdbeSerialGet(i8* %11192, i32 %11193, %struct.sqlite3_value* %11102), !dbg !382
  br label %11346, !dbg !383

11197:                                            ; preds = %11185
  %11198 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %11198, align 2, !dbg !385
  %11199 = getelementptr i16, i16* %11198, i32 1, !dbg !386
  store i16 514, i16* %11199, align 2, !dbg !387
  %11200 = load i32, i32* %11099, align 4, !dbg !388
  %11201 = sub i32 %11200, 12, !dbg !389
  %11202 = lshr i32 %11201, 1, !dbg !390
  %11203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 4, !dbg !391
  store i32 %11202, i32* %11203, align 4, !dbg !392
  %11204 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 2, !dbg !393
  store i8 %11093, i8* %11204, align 1, !dbg !394
  %11205 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 5, !dbg !395
  %11206 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 7, !dbg !396
  %11207 = load i32, i32* %11206, align 4, !dbg !397
  %11208 = add i32 %11202, 2, !dbg !398
  %11209 = icmp slt i32 %11207, %11208, !dbg !399
  br i1 %11209, label %11210, label %11212, !dbg !400

11210:                                            ; preds = %11197
  store i16 1, i16* %11169, align 2, !dbg !401
  %11211 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %11102, i32 %11208, i32 0), !dbg !402
  br label %11215, !dbg !403

11212:                                            ; preds = %11197
  %11213 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 6, !dbg !404
  %11214 = load i8*, i8** %11213, align 8, !dbg !405
  store i8* %11214, i8** %11205, align 8, !dbg !406
  br label %11215, !dbg !407

11215:                                            ; preds = %11212, %11210
  %11216 = zext i32 %11202 to i64, !dbg !408
  %11217 = load i8*, i8** %11205, align 8, !dbg !409
  %11218 = load i8*, i8** %11098, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11217, i8* %11218, i64 %11216, i1 false), !dbg !411
  %11219 = getelementptr i8, i8* %11217, i32 %11202, !dbg !412
  store i8 0, i8* %11219, align 1, !dbg !413
  %11220 = add i32 %11202, 1, !dbg !414
  %11221 = getelementptr i8, i8* %11217, i32 %11220, !dbg !415
  store i8 0, i8* %11221, align 1, !dbg !416
  %11222 = and i32 %11200, 1, !dbg !417
  %11223 = getelementptr i16, i16* %11198, i32 %11222, !dbg !418
  %11224 = load i16, i16* %11223, align 2, !dbg !419
  store i16 %11224, i16* %11169, align 2, !dbg !420
  br label %11346, !dbg !421

11225:                                            ; preds = %11177
  %11226 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 2, !dbg !422
  store i8 %11093, i8* %11226, align 1, !dbg !423
  %11227 = load i32, i32* %11099, align 4, !dbg !424
  %11228 = and i32 %11227, 1, !dbg !425
  %11229 = icmp eq i32 %11228, 0, !dbg !426
  %11230 = icmp sge i32 %11227, 12, !dbg !427
  %11231 = and i1 %11230, %11229, !dbg !428
  %11232 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11227), !dbg !429
  %11233 = icmp eq i32 %11232, 0, !dbg !430
  br i1 %11233, label %11245, label %11234, !dbg !431

11234:                                            ; preds = %11225
  %11235 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 12, i32 0, !dbg !432
  %11236 = load %struct.BtCursor*, %struct.BtCursor** %11235, align 8, !dbg !433
  %11237 = getelementptr i32, i32* %11106, i32 2, !dbg !434
  %11238 = load i32, i32* %11237, align 4, !dbg !435
  %11239 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %11236, i32 %11238, i32 %11232, %struct.sqlite3_value* %11102), !dbg !436
  %11240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 5, !dbg !437
  %11241 = load i8*, i8** %11240, align 8, !dbg !438
  %11242 = call i32 @sqlite3VdbeSerialGet(i8* %11241, i32 %11227, %struct.sqlite3_value* %11102), !dbg !439
  %11243 = load i16, i16* %11169, align 2, !dbg !440
  %11244 = and i16 %11243, -4097, !dbg !441
  store i16 %11244, i16* %11169, align 2, !dbg !442
  br label %11346, !dbg !443

11245:                                            ; preds = %11225
  %11246 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %11227, %struct.sqlite3_value* %11102), !dbg !444
  br label %11346, !dbg !445

11247:                                            ; preds = %11165
  %11248 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 23, i32 2, !dbg !446
  %11249 = load i32, i32* %11248, align 4, !dbg !447
  store i32 %11249, i32* %11099, align 4, !dbg !448
  br label %11168, !dbg !449

11250:                                            ; preds = %11165
  %11251 = load i32, i32* %11113, align 4, !dbg !450
  %11252 = load i32, i32* %11106, align 4, !dbg !451
  %11253 = icmp ult i32 %11251, %11252, !dbg !452
  br i1 %11253, label %11254, label %11335, !dbg !453

11254:                                            ; preds = %11250
  %11255 = load i8*, i8** %11116, align 8, !dbg !454
  %11256 = icmp eq i8* %11255, null, !dbg !455
  br i1 %11256, label %11258, label %11257, !dbg !456

11257:                                            ; preds = %11254
  store i8* %11255, i8** %11098, align 8, !dbg !457
  br label %11258, !dbg !458

11258:                                            ; preds = %11257, %11254, %11138
  %11259 = alloca i32, align 4, !dbg !459
  %11260 = load i16, i16* %11117, align 2, !dbg !460
  %11261 = zext i16 %11260 to i32, !dbg !461
  store i32 %11261, i32* %11259, align 4, !dbg !462
  %11262 = alloca i64, align 8, !dbg !463
  %11263 = getelementptr i32, i32* %11106, i32 %11261, !dbg !464
  %11264 = load i32, i32* %11263, align 4, !dbg !465
  %11265 = zext i32 %11264 to i64, !dbg !466
  store i64 %11265, i64* %11262, align 4, !dbg !467
  %11266 = load i8*, i8** %11098, align 8, !dbg !468
  %11267 = load i32, i32* %11113, align 4, !dbg !469
  %11268 = alloca i8*, align 8, !dbg !470
  %11269 = getelementptr i8, i8* %11266, i32 %11267, !dbg !471
  store i8* %11269, i8** %11268, align 8, !dbg !472
  %11270 = load i32, i32* %11106, align 4, !dbg !473
  %11271 = getelementptr i8, i8* %11266, i32 %11270, !dbg !474
  br label %11272, !dbg !475

11272:                                            ; preds = %11279, %11258
  %11273 = load i32, i32* %11259, align 4, !dbg !476
  %11274 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11101, i32 0, i32 23, i32 %11273, !dbg !477
  %11275 = load i8*, i8** %11268, align 8, !dbg !478
  %11276 = load i8, i8* %11275, align 1, !dbg !479
  %11277 = zext i8 %11276 to i32, !dbg !480
  store i32 %11277, i32* %11099, align 4, !dbg !481
  store i32 %11277, i32* %11274, align 4, !dbg !482
  %11278 = icmp sgt i8 %11276, -1, !dbg !483
  br i1 %11278, label %11302, label %11293, !dbg !484

11279:                                            ; preds = %11293, %11302
  %11280 = load i32, i32* %11259, align 4, !dbg !485
  %11281 = add i32 %11280, 1, !dbg !486
  store i32 %11281, i32* %11259, align 4, !dbg !487
  %11282 = load i64, i64* %11262, align 4, !dbg !488
  %11283 = and i64 4294967295, %11282, !dbg !489
  %11284 = trunc i64 %11283 to i32, !dbg !490
  %11285 = getelementptr i32, i32* %11106, i32 %11281, !dbg !491
  store i32 %11284, i32* %11285, align 4, !dbg !492
  %11286 = load i32, i32* %11259, align 4, !dbg !493
  %11287 = icmp sle i32 %11286, 2, !dbg !494
  %11288 = load i8*, i8** %11268, align 8, !dbg !495
  %11289 = ptrtoint i8* %11288 to i64, !dbg !496
  %11290 = ptrtoint i8* %11271 to i64, !dbg !497
  %11291 = icmp ult i64 %11289, %11290, !dbg !498
  %11292 = and i1 %11287, %11291, !dbg !499
  br i1 %11292, label %11272, label %11311, !dbg !500

11293:                                            ; preds = %11272
  %11294 = load i8*, i8** %11268, align 8, !dbg !501
  %11295 = call i8 @sqlite3GetVarint32(i8* %11294, i32* %11099), !dbg !502
  %11296 = getelementptr i8, i8* %11294, i8 %11295, !dbg !503
  store i8* %11296, i8** %11268, align 8, !dbg !504
  %11297 = load i32, i32* %11099, align 4, !dbg !505
  store i32 %11297, i32* %11274, align 4, !dbg !506
  %11298 = load i64, i64* %11262, align 4, !dbg !507
  %11299 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11297), !dbg !508
  %11300 = zext i32 %11299 to i64, !dbg !509
  %11301 = add i64 %11298, %11300, !dbg !510
  store i64 %11301, i64* %11262, align 4, !dbg !511
  br label %11279, !dbg !512

11302:                                            ; preds = %11272
  %11303 = getelementptr i8, i8* %11275, i32 1, !dbg !513
  store i8* %11303, i8** %11268, align 8, !dbg !514
  %11304 = load i32, i32* %11099, align 4, !dbg !515
  %11305 = trunc i32 %11304 to i8, !dbg !516
  %11306 = getelementptr i8, i8* %4, i8 %11305, !dbg !517
  %11307 = load i8, i8* %11306, align 1, !dbg !518
  %11308 = zext i8 %11307 to i64, !dbg !519
  %11309 = load i64, i64* %11262, align 4, !dbg !520
  %11310 = add i64 %11309, %11308, !dbg !521
  store i64 %11310, i64* %11262, align 4, !dbg !522
  br label %11279, !dbg !523

11311:                                            ; preds = %11279
  %11312 = load i64, i64* %11262, align 4, !dbg !524
  %11313 = load i32, i32* %11114, align 4, !dbg !525
  %11314 = zext i32 %11313 to i64, !dbg !526
  %11315 = icmp uge i64 %11289, %11290, !dbg !527
  %11316 = icmp ugt i64 %11289, %11290, !dbg !528
  %11317 = icmp ne i64 %11312, %11314, !dbg !529
  %11318 = icmp ugt i64 %11312, %11314, !dbg !530
  %11319 = or i1 %11316, %11317, !dbg !531
  %11320 = and i1 %11315, %11319, !dbg !532
  %11321 = or i1 %11320, %11318, !dbg !533
  br i1 %11321, label %11322, label %11326, !dbg !534

11322:                                            ; preds = %11311
  %11323 = load i32, i32* %11106, align 4, !dbg !535
  %11324 = icmp eq i32 %11323, 0, !dbg !536
  br i1 %11324, label %11325, label %11326, !dbg !537

11325:                                            ; preds = %11322
  store i32 0, i32* %11259, align 4, !dbg !538
  store i8* %11271, i8** %11268, align 8, !dbg !539
  br label %11326, !dbg !540

11326:                                            ; preds = %11325, %11322, %11311
  %11327 = load i32, i32* %11259, align 4, !dbg !541
  %11328 = trunc i32 %11327 to i16, !dbg !542
  store i16 %11328, i16* %11117, align 2, !dbg !543
  %11329 = load i8*, i8** %11268, align 8, !dbg !544
  %11330 = ptrtoint i8* %11329 to i64, !dbg !545
  %11331 = load i8*, i8** %11098, align 8, !dbg !546
  %11332 = ptrtoint i8* %11331 to i64, !dbg !547
  %11333 = sub i64 %11330, %11332, !dbg !548
  %11334 = trunc i64 %11333 to i32, !dbg !549
  store i32 %11334, i32* %11113, align 4, !dbg !550
  br label %11336, !dbg !551

11335:                                            ; preds = %11250
  store i32 0, i32* %11099, align 4, !dbg !552
  br label %11336, !dbg !553

11336:                                            ; preds = %11326, %11335
  %11337 = load i16, i16* %11117, align 2, !dbg !554
  %11338 = icmp sle i16 %11337, 2, !dbg !555
  br i1 %11338, label %11339, label %11168, !dbg !556

11339:                                            ; preds = %11336
  %11340 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11102, i32 0, i32 1, !dbg !557
  %11341 = load i16, i16* %11340, align 2, !dbg !557
  %11342 = and i16 %11341, 9216, !dbg !557
  %11343 = icmp ne i16 %11342, 0, !dbg !557
  br i1 %11343, label %11344, label %11345, !dbg !557

11344:                                            ; preds = %11339
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11102), !dbg !557
  br label %11346, !dbg !557

11345:                                            ; preds = %11339
  store i16 1, i16* %11340, align 2, !dbg !557
  br label %11346, !dbg !557

11346:                                            ; preds = %11344, %11345, %11215, %11195, %11234, %11245, %11163, %11164
  call void @llvm.stackrestore(i8* %11091), !dbg !558
  br label %11347, !dbg !75

11347:                                            ; preds = %19, %11346
  %11348 = call i8* @llvm.stacksave(), !dbg !266
  %11349 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %11350 = load i8, i8* %11349, align 1, !dbg !270
  %11351 = alloca i32, align 4, !dbg !271
  store i32 10, i32* %11351, align 4, !dbg !272
  %11352 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 10, !dbg !273
  %11353 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %11354 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11352, align 8, !dbg !275
  store %struct.VdbeCursor* %11354, %struct.VdbeCursor** %11353, align 8, !dbg !276
  %11355 = alloca i8*, align 8, !dbg !277
  %11356 = alloca i32, align 4, !dbg !278
  %11357 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %11353, i32* %11351), !dbg !279
  %11358 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11353, align 8, !dbg !280
  %11359 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 65, !dbg !281
  %11360 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 16, !dbg !282
  %11361 = load i16, i16* %11360, align 2, !dbg !283
  %11362 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 19, !dbg !284
  %11363 = load i32*, i32** %11362, align 8, !dbg !285
  %11364 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 0, !dbg !286
  %11365 = load i8, i8* %11364, align 1, !dbg !287
  %11366 = icmp ne i8 %11365, 3, !dbg !288
  %11367 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 2, !dbg !289
  %11368 = load i8, i8* %11367, align 1, !dbg !290
  %11369 = icmp ne i8 %11368, 0, !dbg !291
  %11370 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 14, !dbg !292
  %11371 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 21, !dbg !293
  %11372 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 22, !dbg !294
  %11373 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 20, !dbg !295
  %11374 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 17, !dbg !296
  %11375 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 9, !dbg !297
  %11376 = load i32, i32* %11375, align 4, !dbg !298
  %11377 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %11378 = load i32, i32* %11377, align 4, !dbg !300
  %11379 = icmp ne i32 %11376, %11378, !dbg !301
  br i1 %11379, label %11380, label %11422, !dbg !302

11380:                                            ; preds = %11347
  br i1 %11369, label %11402, label %11397, !dbg !303

11381:                                            ; preds = %11397, %11404
  %11382 = load i32, i32* %11377, align 4, !dbg !304
  store i32 %11382, i32* %11375, align 4, !dbg !305
  %11383 = load i8*, i8** %11373, align 8, !dbg !306
  %11384 = load i8, i8* %11383, align 1, !dbg !307
  %11385 = icmp sgt i8 %11384, -1, !dbg !310
  br i1 %11385, label %11386, label %11388, !dbg !311

11386:                                            ; preds = %11381
  %11387 = zext i8 %11384 to i32, !dbg !312
  store i32 %11387, i32* %11363, align 4, !dbg !313
  store i32 1, i32* %11370, align 4, !dbg !314
  br label %11391, !dbg !315

11388:                                            ; preds = %11381
  %11389 = call i8 @sqlite3GetVarint32(i8* %11383, i32* %11363), !dbg !316
  %11390 = zext i8 %11389 to i32, !dbg !317
  store i32 %11390, i32* %11370, align 4, !dbg !318
  br label %11391, !dbg !319

11391:                                            ; preds = %11388, %11386
  store i16 0, i16* %11374, align 2, !dbg !320
  %11392 = load i32, i32* %11372, align 4, !dbg !321
  %11393 = load i32, i32* %11363, align 4, !dbg !322
  %11394 = icmp ult i32 %11392, %11393, !dbg !323
  br i1 %11394, label %11396, label %11395, !dbg !324

11395:                                            ; preds = %11391
  store i8* %11383, i8** %11355, align 8, !dbg !325
  br label %11515, !dbg !326

11396:                                            ; preds = %11391
  store i8* null, i8** %11373, align 8, !dbg !327
  store i32 0, i32* %11372, align 4, !dbg !328
  br label %11422, !dbg !329

11397:                                            ; preds = %11380
  %11398 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 12, i32 0, !dbg !330
  %11399 = load %struct.BtCursor*, %struct.BtCursor** %11398, align 8, !dbg !331
  %11400 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %11399), !dbg !332
  store i32 %11400, i32* %11371, align 4, !dbg !333
  %11401 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %11399, i32* %11372), !dbg !334
  store i8* %11401, i8** %11373, align 8, !dbg !335
  br label %11381, !dbg !336

11402:                                            ; preds = %11380
  %11403 = icmp eq i8 %11365, 3, !dbg !337
  br i1 %11403, label %11404, label %11415, !dbg !338

11404:                                            ; preds = %11402
  %11405 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 10, !dbg !339
  %11406 = load i32, i32* %11405, align 4, !dbg !340
  %11407 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %11406, !dbg !341
  %11408 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11407, i32 0, i32 1, !dbg !342
  %11409 = load i16, i16* %11408, align 2, !dbg !343
  %11410 = and i16 %11409, 16, !dbg !344
  %11411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11407, i32 0, i32 4, !dbg !345
  %11412 = load i32, i32* %11411, align 4, !dbg !346
  store i32 %11412, i32* %11371, align 4, !dbg !347
  store i32 %11412, i32* %11372, align 4, !dbg !348
  %11413 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11407, i32 0, i32 5, !dbg !349
  %11414 = load i8*, i8** %11413, align 8, !dbg !350
  store i8* %11414, i8** %11373, align 8, !dbg !351
  br label %11381, !dbg !352

11415:                                            ; preds = %11402
  %11416 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 1, !dbg !353
  %11417 = load i16, i16* %11416, align 2, !dbg !353
  %11418 = and i16 %11417, 9216, !dbg !353
  %11419 = icmp ne i16 %11418, 0, !dbg !353
  br i1 %11419, label %11420, label %11421, !dbg !353

11420:                                            ; preds = %11415
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11359), !dbg !353
  br label %11603, !dbg !353

11421:                                            ; preds = %11415
  store i16 1, i16* %11416, align 2, !dbg !353
  br label %11603, !dbg !353

11422:                                            ; preds = %11396, %11347
  %11423 = load i16, i16* %11374, align 2, !dbg !354
  %11424 = icmp ule i16 %11423, 1, !dbg !355
  br i1 %11424, label %11507, label %11504, !dbg !356

11425:                                            ; preds = %11504, %11593
  %11426 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 1, !dbg !357
  %11427 = load i16, i16* %11426, align 2, !dbg !358
  %11428 = and i16 9216, %11427, !dbg !359
  %11429 = icmp eq i16 0, %11428, !dbg !360
  br i1 %11429, label %11430, label %11434, !dbg !361

11430:                                            ; preds = %11425
  %11431 = icmp ne i16 %11428, 0, !dbg !362
  br i1 %11431, label %11432, label %11433, !dbg !362

11432:                                            ; preds = %11430
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11359), !dbg !362
  br label %11434, !dbg !362

11433:                                            ; preds = %11430
  store i16 1, i16* %11426, align 2, !dbg !362
  br label %11434, !dbg !362

11434:                                            ; preds = %11432, %11433, %11425
  %11435 = load i32, i32* %11356, align 4, !dbg !363
  %11436 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 23, i32 1, !dbg !364
  %11437 = load i32, i32* %11436, align 4, !dbg !365
  %11438 = load i32, i32* %11372, align 4, !dbg !366
  %11439 = getelementptr i32, i32* %11363, i32 2, !dbg !367
  %11440 = load i32, i32* %11439, align 4, !dbg !368
  %11441 = icmp sge i32 %11438, %11440, !dbg !369
  br i1 %11441, label %11442, label %11482, !dbg !370

11442:                                            ; preds = %11434
  %11443 = load i8*, i8** %11373, align 8, !dbg !371
  %11444 = ptrtoint i8* %11443 to i64, !dbg !372
  %11445 = getelementptr i32, i32* %11363, i32 1, !dbg !373
  %11446 = load i32, i32* %11445, align 4, !dbg !374
  %11447 = zext i32 %11446 to i64, !dbg !375
  %11448 = add i64 %11444, %11447, !dbg !376
  %11449 = inttoptr i64 %11448 to i8*, !dbg !377
  store i8* %11449, i8** %11355, align 8, !dbg !378
  %11450 = load i32, i32* %11356, align 4, !dbg !379
  %11451 = icmp ult i32 %11450, 12, !dbg !380
  br i1 %11451, label %11452, label %11454, !dbg !381

11452:                                            ; preds = %11442
  %11453 = call i32 @sqlite3VdbeSerialGet(i8* %11449, i32 %11450, %struct.sqlite3_value* %11359), !dbg !382
  br label %11603, !dbg !383

11454:                                            ; preds = %11442
  %11455 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %11455, align 2, !dbg !385
  %11456 = getelementptr i16, i16* %11455, i32 1, !dbg !386
  store i16 514, i16* %11456, align 2, !dbg !387
  %11457 = load i32, i32* %11356, align 4, !dbg !388
  %11458 = sub i32 %11457, 12, !dbg !389
  %11459 = lshr i32 %11458, 1, !dbg !390
  %11460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 4, !dbg !391
  store i32 %11459, i32* %11460, align 4, !dbg !392
  %11461 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 2, !dbg !393
  store i8 %11350, i8* %11461, align 1, !dbg !394
  %11462 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 5, !dbg !395
  %11463 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 7, !dbg !396
  %11464 = load i32, i32* %11463, align 4, !dbg !397
  %11465 = add i32 %11459, 2, !dbg !398
  %11466 = icmp slt i32 %11464, %11465, !dbg !399
  br i1 %11466, label %11467, label %11469, !dbg !400

11467:                                            ; preds = %11454
  store i16 1, i16* %11426, align 2, !dbg !401
  %11468 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %11359, i32 %11465, i32 0), !dbg !402
  br label %11472, !dbg !403

11469:                                            ; preds = %11454
  %11470 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 6, !dbg !404
  %11471 = load i8*, i8** %11470, align 8, !dbg !405
  store i8* %11471, i8** %11462, align 8, !dbg !406
  br label %11472, !dbg !407

11472:                                            ; preds = %11469, %11467
  %11473 = zext i32 %11459 to i64, !dbg !408
  %11474 = load i8*, i8** %11462, align 8, !dbg !409
  %11475 = load i8*, i8** %11355, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11474, i8* %11475, i64 %11473, i1 false), !dbg !411
  %11476 = getelementptr i8, i8* %11474, i32 %11459, !dbg !412
  store i8 0, i8* %11476, align 1, !dbg !413
  %11477 = add i32 %11459, 1, !dbg !414
  %11478 = getelementptr i8, i8* %11474, i32 %11477, !dbg !415
  store i8 0, i8* %11478, align 1, !dbg !416
  %11479 = and i32 %11457, 1, !dbg !417
  %11480 = getelementptr i16, i16* %11455, i32 %11479, !dbg !418
  %11481 = load i16, i16* %11480, align 2, !dbg !419
  store i16 %11481, i16* %11426, align 2, !dbg !420
  br label %11603, !dbg !421

11482:                                            ; preds = %11434
  %11483 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 2, !dbg !422
  store i8 %11350, i8* %11483, align 1, !dbg !423
  %11484 = load i32, i32* %11356, align 4, !dbg !424
  %11485 = and i32 %11484, 1, !dbg !425
  %11486 = icmp eq i32 %11485, 0, !dbg !426
  %11487 = icmp sge i32 %11484, 12, !dbg !427
  %11488 = and i1 %11487, %11486, !dbg !428
  %11489 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11484), !dbg !429
  %11490 = icmp eq i32 %11489, 0, !dbg !430
  br i1 %11490, label %11502, label %11491, !dbg !431

11491:                                            ; preds = %11482
  %11492 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 12, i32 0, !dbg !432
  %11493 = load %struct.BtCursor*, %struct.BtCursor** %11492, align 8, !dbg !433
  %11494 = getelementptr i32, i32* %11363, i32 1, !dbg !434
  %11495 = load i32, i32* %11494, align 4, !dbg !435
  %11496 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %11493, i32 %11495, i32 %11489, %struct.sqlite3_value* %11359), !dbg !436
  %11497 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 5, !dbg !437
  %11498 = load i8*, i8** %11497, align 8, !dbg !438
  %11499 = call i32 @sqlite3VdbeSerialGet(i8* %11498, i32 %11484, %struct.sqlite3_value* %11359), !dbg !439
  %11500 = load i16, i16* %11426, align 2, !dbg !440
  %11501 = and i16 %11500, -4097, !dbg !441
  store i16 %11501, i16* %11426, align 2, !dbg !442
  br label %11603, !dbg !443

11502:                                            ; preds = %11482
  %11503 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %11484, %struct.sqlite3_value* %11359), !dbg !444
  br label %11603, !dbg !445

11504:                                            ; preds = %11422
  %11505 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 23, i32 1, !dbg !446
  %11506 = load i32, i32* %11505, align 4, !dbg !447
  store i32 %11506, i32* %11356, align 4, !dbg !448
  br label %11425, !dbg !449

11507:                                            ; preds = %11422
  %11508 = load i32, i32* %11370, align 4, !dbg !450
  %11509 = load i32, i32* %11363, align 4, !dbg !451
  %11510 = icmp ult i32 %11508, %11509, !dbg !452
  br i1 %11510, label %11511, label %11592, !dbg !453

11511:                                            ; preds = %11507
  %11512 = load i8*, i8** %11373, align 8, !dbg !454
  %11513 = icmp eq i8* %11512, null, !dbg !455
  br i1 %11513, label %11515, label %11514, !dbg !456

11514:                                            ; preds = %11511
  store i8* %11512, i8** %11355, align 8, !dbg !457
  br label %11515, !dbg !458

11515:                                            ; preds = %11514, %11511, %11395
  %11516 = alloca i32, align 4, !dbg !459
  %11517 = load i16, i16* %11374, align 2, !dbg !460
  %11518 = zext i16 %11517 to i32, !dbg !461
  store i32 %11518, i32* %11516, align 4, !dbg !462
  %11519 = alloca i64, align 8, !dbg !463
  %11520 = getelementptr i32, i32* %11363, i32 %11518, !dbg !464
  %11521 = load i32, i32* %11520, align 4, !dbg !465
  %11522 = zext i32 %11521 to i64, !dbg !466
  store i64 %11522, i64* %11519, align 4, !dbg !467
  %11523 = load i8*, i8** %11355, align 8, !dbg !468
  %11524 = load i32, i32* %11370, align 4, !dbg !469
  %11525 = alloca i8*, align 8, !dbg !470
  %11526 = getelementptr i8, i8* %11523, i32 %11524, !dbg !471
  store i8* %11526, i8** %11525, align 8, !dbg !472
  %11527 = load i32, i32* %11363, align 4, !dbg !473
  %11528 = getelementptr i8, i8* %11523, i32 %11527, !dbg !474
  br label %11529, !dbg !475

11529:                                            ; preds = %11536, %11515
  %11530 = load i32, i32* %11516, align 4, !dbg !476
  %11531 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11358, i32 0, i32 23, i32 %11530, !dbg !477
  %11532 = load i8*, i8** %11525, align 8, !dbg !478
  %11533 = load i8, i8* %11532, align 1, !dbg !479
  %11534 = zext i8 %11533 to i32, !dbg !480
  store i32 %11534, i32* %11356, align 4, !dbg !481
  store i32 %11534, i32* %11531, align 4, !dbg !482
  %11535 = icmp sgt i8 %11533, -1, !dbg !483
  br i1 %11535, label %11559, label %11550, !dbg !484

11536:                                            ; preds = %11550, %11559
  %11537 = load i32, i32* %11516, align 4, !dbg !485
  %11538 = add i32 %11537, 1, !dbg !486
  store i32 %11538, i32* %11516, align 4, !dbg !487
  %11539 = load i64, i64* %11519, align 4, !dbg !488
  %11540 = and i64 4294967295, %11539, !dbg !489
  %11541 = trunc i64 %11540 to i32, !dbg !490
  %11542 = getelementptr i32, i32* %11363, i32 %11538, !dbg !491
  store i32 %11541, i32* %11542, align 4, !dbg !492
  %11543 = load i32, i32* %11516, align 4, !dbg !493
  %11544 = icmp sle i32 %11543, 1, !dbg !494
  %11545 = load i8*, i8** %11525, align 8, !dbg !495
  %11546 = ptrtoint i8* %11545 to i64, !dbg !496
  %11547 = ptrtoint i8* %11528 to i64, !dbg !497
  %11548 = icmp ult i64 %11546, %11547, !dbg !498
  %11549 = and i1 %11544, %11548, !dbg !499
  br i1 %11549, label %11529, label %11568, !dbg !500

11550:                                            ; preds = %11529
  %11551 = load i8*, i8** %11525, align 8, !dbg !501
  %11552 = call i8 @sqlite3GetVarint32(i8* %11551, i32* %11356), !dbg !502
  %11553 = getelementptr i8, i8* %11551, i8 %11552, !dbg !503
  store i8* %11553, i8** %11525, align 8, !dbg !504
  %11554 = load i32, i32* %11356, align 4, !dbg !505
  store i32 %11554, i32* %11531, align 4, !dbg !506
  %11555 = load i64, i64* %11519, align 4, !dbg !507
  %11556 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11554), !dbg !508
  %11557 = zext i32 %11556 to i64, !dbg !509
  %11558 = add i64 %11555, %11557, !dbg !510
  store i64 %11558, i64* %11519, align 4, !dbg !511
  br label %11536, !dbg !512

11559:                                            ; preds = %11529
  %11560 = getelementptr i8, i8* %11532, i32 1, !dbg !513
  store i8* %11560, i8** %11525, align 8, !dbg !514
  %11561 = load i32, i32* %11356, align 4, !dbg !515
  %11562 = trunc i32 %11561 to i8, !dbg !516
  %11563 = getelementptr i8, i8* %4, i8 %11562, !dbg !517
  %11564 = load i8, i8* %11563, align 1, !dbg !518
  %11565 = zext i8 %11564 to i64, !dbg !519
  %11566 = load i64, i64* %11519, align 4, !dbg !520
  %11567 = add i64 %11566, %11565, !dbg !521
  store i64 %11567, i64* %11519, align 4, !dbg !522
  br label %11536, !dbg !523

11568:                                            ; preds = %11536
  %11569 = load i64, i64* %11519, align 4, !dbg !524
  %11570 = load i32, i32* %11371, align 4, !dbg !525
  %11571 = zext i32 %11570 to i64, !dbg !526
  %11572 = icmp uge i64 %11546, %11547, !dbg !527
  %11573 = icmp ugt i64 %11546, %11547, !dbg !528
  %11574 = icmp ne i64 %11569, %11571, !dbg !529
  %11575 = icmp ugt i64 %11569, %11571, !dbg !530
  %11576 = or i1 %11573, %11574, !dbg !531
  %11577 = and i1 %11572, %11576, !dbg !532
  %11578 = or i1 %11577, %11575, !dbg !533
  br i1 %11578, label %11579, label %11583, !dbg !534

11579:                                            ; preds = %11568
  %11580 = load i32, i32* %11363, align 4, !dbg !535
  %11581 = icmp eq i32 %11580, 0, !dbg !536
  br i1 %11581, label %11582, label %11583, !dbg !537

11582:                                            ; preds = %11579
  store i32 0, i32* %11516, align 4, !dbg !538
  store i8* %11528, i8** %11525, align 8, !dbg !539
  br label %11583, !dbg !540

11583:                                            ; preds = %11582, %11579, %11568
  %11584 = load i32, i32* %11516, align 4, !dbg !541
  %11585 = trunc i32 %11584 to i16, !dbg !542
  store i16 %11585, i16* %11374, align 2, !dbg !543
  %11586 = load i8*, i8** %11525, align 8, !dbg !544
  %11587 = ptrtoint i8* %11586 to i64, !dbg !545
  %11588 = load i8*, i8** %11355, align 8, !dbg !546
  %11589 = ptrtoint i8* %11588 to i64, !dbg !547
  %11590 = sub i64 %11587, %11589, !dbg !548
  %11591 = trunc i64 %11590 to i32, !dbg !549
  store i32 %11591, i32* %11370, align 4, !dbg !550
  br label %11593, !dbg !551

11592:                                            ; preds = %11507
  store i32 0, i32* %11356, align 4, !dbg !552
  br label %11593, !dbg !553

11593:                                            ; preds = %11583, %11592
  %11594 = load i16, i16* %11374, align 2, !dbg !554
  %11595 = icmp sle i16 %11594, 1, !dbg !555
  br i1 %11595, label %11596, label %11425, !dbg !556

11596:                                            ; preds = %11593
  %11597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11359, i32 0, i32 1, !dbg !557
  %11598 = load i16, i16* %11597, align 2, !dbg !557
  %11599 = and i16 %11598, 9216, !dbg !557
  %11600 = icmp ne i16 %11599, 0, !dbg !557
  br i1 %11600, label %11601, label %11602, !dbg !557

11601:                                            ; preds = %11596
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11359), !dbg !557
  br label %11603, !dbg !557

11602:                                            ; preds = %11596
  store i16 1, i16* %11597, align 2, !dbg !557
  br label %11603, !dbg !557

11603:                                            ; preds = %11601, %11602, %11472, %11452, %11491, %11502, %11420, %11421
  call void @llvm.stackrestore(i8* %11348), !dbg !558
  br label %11604, !dbg !75

11604:                                            ; preds = %19, %11603
  %11605 = call i8* @llvm.stacksave(), !dbg !266
  %11606 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !269
  %11607 = load i8, i8* %11606, align 1, !dbg !270
  %11608 = alloca i32, align 4, !dbg !271
  store i32 10, i32* %11608, align 4, !dbg !272
  %11609 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 10, !dbg !273
  %11610 = alloca %struct.VdbeCursor*, align 8, !dbg !274
  %11611 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11609, align 8, !dbg !275
  store %struct.VdbeCursor* %11611, %struct.VdbeCursor** %11610, align 8, !dbg !276
  %11612 = alloca i8*, align 8, !dbg !277
  %11613 = alloca i32, align 4, !dbg !278
  %11614 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %11610, i32* %11608), !dbg !279
  %11615 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11610, align 8, !dbg !280
  %11616 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 64, !dbg !281
  %11617 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 16, !dbg !282
  %11618 = load i16, i16* %11617, align 2, !dbg !283
  %11619 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 19, !dbg !284
  %11620 = load i32*, i32** %11619, align 8, !dbg !285
  %11621 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 0, !dbg !286
  %11622 = load i8, i8* %11621, align 1, !dbg !287
  %11623 = icmp ne i8 %11622, 3, !dbg !288
  %11624 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 2, !dbg !289
  %11625 = load i8, i8* %11624, align 1, !dbg !290
  %11626 = icmp ne i8 %11625, 0, !dbg !291
  %11627 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 14, !dbg !292
  %11628 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 21, !dbg !293
  %11629 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 22, !dbg !294
  %11630 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 20, !dbg !295
  %11631 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 17, !dbg !296
  %11632 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 9, !dbg !297
  %11633 = load i32, i32* %11632, align 4, !dbg !298
  %11634 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !299
  %11635 = load i32, i32* %11634, align 4, !dbg !300
  %11636 = icmp ne i32 %11633, %11635, !dbg !301
  br i1 %11636, label %11637, label %11679, !dbg !302

11637:                                            ; preds = %11604
  br i1 %11626, label %11659, label %11654, !dbg !303

11638:                                            ; preds = %11654, %11661
  %11639 = load i32, i32* %11634, align 4, !dbg !304
  store i32 %11639, i32* %11632, align 4, !dbg !305
  %11640 = load i8*, i8** %11630, align 8, !dbg !306
  %11641 = load i8, i8* %11640, align 1, !dbg !307
  %11642 = icmp sgt i8 %11641, -1, !dbg !310
  br i1 %11642, label %11643, label %11645, !dbg !311

11643:                                            ; preds = %11638
  %11644 = zext i8 %11641 to i32, !dbg !312
  store i32 %11644, i32* %11620, align 4, !dbg !313
  store i32 1, i32* %11627, align 4, !dbg !314
  br label %11648, !dbg !315

11645:                                            ; preds = %11638
  %11646 = call i8 @sqlite3GetVarint32(i8* %11640, i32* %11620), !dbg !316
  %11647 = zext i8 %11646 to i32, !dbg !317
  store i32 %11647, i32* %11627, align 4, !dbg !318
  br label %11648, !dbg !319

11648:                                            ; preds = %11645, %11643
  store i16 0, i16* %11631, align 2, !dbg !320
  %11649 = load i32, i32* %11629, align 4, !dbg !321
  %11650 = load i32, i32* %11620, align 4, !dbg !322
  %11651 = icmp ult i32 %11649, %11650, !dbg !323
  br i1 %11651, label %11653, label %11652, !dbg !324

11652:                                            ; preds = %11648
  store i8* %11640, i8** %11612, align 8, !dbg !325
  br label %11770, !dbg !326

11653:                                            ; preds = %11648
  store i8* null, i8** %11630, align 8, !dbg !327
  store i32 0, i32* %11629, align 4, !dbg !328
  br label %11679, !dbg !329

11654:                                            ; preds = %11637
  %11655 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 12, i32 0, !dbg !330
  %11656 = load %struct.BtCursor*, %struct.BtCursor** %11655, align 8, !dbg !331
  %11657 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %11656), !dbg !332
  store i32 %11657, i32* %11628, align 4, !dbg !333
  %11658 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %11656, i32* %11629), !dbg !334
  store i8* %11658, i8** %11630, align 8, !dbg !335
  br label %11638, !dbg !336

11659:                                            ; preds = %11637
  %11660 = icmp eq i8 %11622, 3, !dbg !337
  br i1 %11660, label %11661, label %11672, !dbg !338

11661:                                            ; preds = %11659
  %11662 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 10, !dbg !339
  %11663 = load i32, i32* %11662, align 4, !dbg !340
  %11664 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %11663, !dbg !341
  %11665 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11664, i32 0, i32 1, !dbg !342
  %11666 = load i16, i16* %11665, align 2, !dbg !343
  %11667 = and i16 %11666, 16, !dbg !344
  %11668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11664, i32 0, i32 4, !dbg !345
  %11669 = load i32, i32* %11668, align 4, !dbg !346
  store i32 %11669, i32* %11628, align 4, !dbg !347
  store i32 %11669, i32* %11629, align 4, !dbg !348
  %11670 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11664, i32 0, i32 5, !dbg !349
  %11671 = load i8*, i8** %11670, align 8, !dbg !350
  store i8* %11671, i8** %11630, align 8, !dbg !351
  br label %11638, !dbg !352

11672:                                            ; preds = %11659
  %11673 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 1, !dbg !353
  %11674 = load i16, i16* %11673, align 2, !dbg !353
  %11675 = and i16 %11674, 9216, !dbg !353
  %11676 = icmp ne i16 %11675, 0, !dbg !353
  br i1 %11676, label %11677, label %11678, !dbg !353

11677:                                            ; preds = %11672
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11616), !dbg !353
  br label %11858, !dbg !353

11678:                                            ; preds = %11672
  store i16 1, i16* %11673, align 2, !dbg !353
  br label %11858, !dbg !353

11679:                                            ; preds = %11653, %11604
  %11680 = load i16, i16* %11631, align 2, !dbg !354
  %11681 = icmp ule i16 %11680, 0, !dbg !355
  br i1 %11681, label %11762, label %11759, !dbg !356

11682:                                            ; preds = %11759, %11848
  %11683 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 1, !dbg !357
  %11684 = load i16, i16* %11683, align 2, !dbg !358
  %11685 = and i16 9216, %11684, !dbg !359
  %11686 = icmp eq i16 0, %11685, !dbg !360
  br i1 %11686, label %11687, label %11691, !dbg !361

11687:                                            ; preds = %11682
  %11688 = icmp ne i16 %11685, 0, !dbg !362
  br i1 %11688, label %11689, label %11690, !dbg !362

11689:                                            ; preds = %11687
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11616), !dbg !362
  br label %11691, !dbg !362

11690:                                            ; preds = %11687
  store i16 1, i16* %11683, align 2, !dbg !362
  br label %11691, !dbg !362

11691:                                            ; preds = %11689, %11690, %11682
  %11692 = load i32, i32* %11613, align 4, !dbg !363
  %11693 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 23, i32 0, !dbg !364
  %11694 = load i32, i32* %11693, align 4, !dbg !365
  %11695 = load i32, i32* %11629, align 4, !dbg !366
  %11696 = getelementptr i32, i32* %11620, i32 1, !dbg !367
  %11697 = load i32, i32* %11696, align 4, !dbg !368
  %11698 = icmp sge i32 %11695, %11697, !dbg !369
  br i1 %11698, label %11699, label %11738, !dbg !370

11699:                                            ; preds = %11691
  %11700 = load i8*, i8** %11630, align 8, !dbg !371
  %11701 = ptrtoint i8* %11700 to i64, !dbg !372
  %11702 = load i32, i32* %11620, align 4, !dbg !374
  %11703 = zext i32 %11702 to i64, !dbg !375
  %11704 = add i64 %11701, %11703, !dbg !376
  %11705 = inttoptr i64 %11704 to i8*, !dbg !377
  store i8* %11705, i8** %11612, align 8, !dbg !378
  %11706 = load i32, i32* %11613, align 4, !dbg !379
  %11707 = icmp ult i32 %11706, 12, !dbg !380
  br i1 %11707, label %11708, label %11710, !dbg !381

11708:                                            ; preds = %11699
  %11709 = call i32 @sqlite3VdbeSerialGet(i8* %11705, i32 %11706, %struct.sqlite3_value* %11616), !dbg !382
  br label %11858, !dbg !383

11710:                                            ; preds = %11699
  %11711 = alloca i16, i32 2, align 2, !dbg !384
  store i16 16, i16* %11711, align 2, !dbg !385
  %11712 = getelementptr i16, i16* %11711, i32 1, !dbg !386
  store i16 514, i16* %11712, align 2, !dbg !387
  %11713 = load i32, i32* %11613, align 4, !dbg !388
  %11714 = sub i32 %11713, 12, !dbg !389
  %11715 = lshr i32 %11714, 1, !dbg !390
  %11716 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 4, !dbg !391
  store i32 %11715, i32* %11716, align 4, !dbg !392
  %11717 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 2, !dbg !393
  store i8 %11607, i8* %11717, align 1, !dbg !394
  %11718 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 5, !dbg !395
  %11719 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 7, !dbg !396
  %11720 = load i32, i32* %11719, align 4, !dbg !397
  %11721 = add i32 %11715, 2, !dbg !398
  %11722 = icmp slt i32 %11720, %11721, !dbg !399
  br i1 %11722, label %11723, label %11725, !dbg !400

11723:                                            ; preds = %11710
  store i16 1, i16* %11683, align 2, !dbg !401
  %11724 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %11616, i32 %11721, i32 0), !dbg !402
  br label %11728, !dbg !403

11725:                                            ; preds = %11710
  %11726 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 6, !dbg !404
  %11727 = load i8*, i8** %11726, align 8, !dbg !405
  store i8* %11727, i8** %11718, align 8, !dbg !406
  br label %11728, !dbg !407

11728:                                            ; preds = %11725, %11723
  %11729 = zext i32 %11715 to i64, !dbg !408
  %11730 = load i8*, i8** %11718, align 8, !dbg !409
  %11731 = load i8*, i8** %11612, align 8, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11730, i8* %11731, i64 %11729, i1 false), !dbg !411
  %11732 = getelementptr i8, i8* %11730, i32 %11715, !dbg !412
  store i8 0, i8* %11732, align 1, !dbg !413
  %11733 = add i32 %11715, 1, !dbg !414
  %11734 = getelementptr i8, i8* %11730, i32 %11733, !dbg !415
  store i8 0, i8* %11734, align 1, !dbg !416
  %11735 = and i32 %11713, 1, !dbg !417
  %11736 = getelementptr i16, i16* %11711, i32 %11735, !dbg !418
  %11737 = load i16, i16* %11736, align 2, !dbg !419
  store i16 %11737, i16* %11683, align 2, !dbg !420
  br label %11858, !dbg !421

11738:                                            ; preds = %11691
  %11739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 2, !dbg !422
  store i8 %11607, i8* %11739, align 1, !dbg !423
  %11740 = load i32, i32* %11613, align 4, !dbg !424
  %11741 = and i32 %11740, 1, !dbg !425
  %11742 = icmp eq i32 %11741, 0, !dbg !426
  %11743 = icmp sge i32 %11740, 12, !dbg !427
  %11744 = and i1 %11743, %11742, !dbg !428
  %11745 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11740), !dbg !429
  %11746 = icmp eq i32 %11745, 0, !dbg !430
  br i1 %11746, label %11757, label %11747, !dbg !431

11747:                                            ; preds = %11738
  %11748 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 12, i32 0, !dbg !432
  %11749 = load %struct.BtCursor*, %struct.BtCursor** %11748, align 8, !dbg !433
  %11750 = load i32, i32* %11620, align 4, !dbg !435
  %11751 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %11749, i32 %11750, i32 %11745, %struct.sqlite3_value* %11616), !dbg !436
  %11752 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 5, !dbg !437
  %11753 = load i8*, i8** %11752, align 8, !dbg !438
  %11754 = call i32 @sqlite3VdbeSerialGet(i8* %11753, i32 %11740, %struct.sqlite3_value* %11616), !dbg !439
  %11755 = load i16, i16* %11683, align 2, !dbg !440
  %11756 = and i16 %11755, -4097, !dbg !441
  store i16 %11756, i16* %11683, align 2, !dbg !442
  br label %11858, !dbg !443

11757:                                            ; preds = %11738
  %11758 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %11740, %struct.sqlite3_value* %11616), !dbg !444
  br label %11858, !dbg !445

11759:                                            ; preds = %11679
  %11760 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 23, i32 0, !dbg !446
  %11761 = load i32, i32* %11760, align 4, !dbg !447
  store i32 %11761, i32* %11613, align 4, !dbg !448
  br label %11682, !dbg !449

11762:                                            ; preds = %11679
  %11763 = load i32, i32* %11627, align 4, !dbg !450
  %11764 = load i32, i32* %11620, align 4, !dbg !451
  %11765 = icmp ult i32 %11763, %11764, !dbg !452
  br i1 %11765, label %11766, label %11847, !dbg !453

11766:                                            ; preds = %11762
  %11767 = load i8*, i8** %11630, align 8, !dbg !454
  %11768 = icmp eq i8* %11767, null, !dbg !455
  br i1 %11768, label %11770, label %11769, !dbg !456

11769:                                            ; preds = %11766
  store i8* %11767, i8** %11612, align 8, !dbg !457
  br label %11770, !dbg !458

11770:                                            ; preds = %11769, %11766, %11652
  %11771 = alloca i32, align 4, !dbg !459
  %11772 = load i16, i16* %11631, align 2, !dbg !460
  %11773 = zext i16 %11772 to i32, !dbg !461
  store i32 %11773, i32* %11771, align 4, !dbg !462
  %11774 = alloca i64, align 8, !dbg !463
  %11775 = getelementptr i32, i32* %11620, i32 %11773, !dbg !464
  %11776 = load i32, i32* %11775, align 4, !dbg !465
  %11777 = zext i32 %11776 to i64, !dbg !466
  store i64 %11777, i64* %11774, align 4, !dbg !467
  %11778 = load i8*, i8** %11612, align 8, !dbg !468
  %11779 = load i32, i32* %11627, align 4, !dbg !469
  %11780 = alloca i8*, align 8, !dbg !470
  %11781 = getelementptr i8, i8* %11778, i32 %11779, !dbg !471
  store i8* %11781, i8** %11780, align 8, !dbg !472
  %11782 = load i32, i32* %11620, align 4, !dbg !473
  %11783 = getelementptr i8, i8* %11778, i32 %11782, !dbg !474
  br label %11784, !dbg !475

11784:                                            ; preds = %11791, %11770
  %11785 = load i32, i32* %11771, align 4, !dbg !476
  %11786 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11615, i32 0, i32 23, i32 %11785, !dbg !477
  %11787 = load i8*, i8** %11780, align 8, !dbg !478
  %11788 = load i8, i8* %11787, align 1, !dbg !479
  %11789 = zext i8 %11788 to i32, !dbg !480
  store i32 %11789, i32* %11613, align 4, !dbg !481
  store i32 %11789, i32* %11786, align 4, !dbg !482
  %11790 = icmp sgt i8 %11788, -1, !dbg !483
  br i1 %11790, label %11814, label %11805, !dbg !484

11791:                                            ; preds = %11805, %11814
  %11792 = load i32, i32* %11771, align 4, !dbg !485
  %11793 = add i32 %11792, 1, !dbg !486
  store i32 %11793, i32* %11771, align 4, !dbg !487
  %11794 = load i64, i64* %11774, align 4, !dbg !488
  %11795 = and i64 4294967295, %11794, !dbg !489
  %11796 = trunc i64 %11795 to i32, !dbg !490
  %11797 = getelementptr i32, i32* %11620, i32 %11793, !dbg !491
  store i32 %11796, i32* %11797, align 4, !dbg !492
  %11798 = load i32, i32* %11771, align 4, !dbg !493
  %11799 = icmp sle i32 %11798, 0, !dbg !494
  %11800 = load i8*, i8** %11780, align 8, !dbg !495
  %11801 = ptrtoint i8* %11800 to i64, !dbg !496
  %11802 = ptrtoint i8* %11783 to i64, !dbg !497
  %11803 = icmp ult i64 %11801, %11802, !dbg !498
  %11804 = and i1 %11799, %11803, !dbg !499
  br i1 %11804, label %11784, label %11823, !dbg !500

11805:                                            ; preds = %11784
  %11806 = load i8*, i8** %11780, align 8, !dbg !501
  %11807 = call i8 @sqlite3GetVarint32(i8* %11806, i32* %11613), !dbg !502
  %11808 = getelementptr i8, i8* %11806, i8 %11807, !dbg !503
  store i8* %11808, i8** %11780, align 8, !dbg !504
  %11809 = load i32, i32* %11613, align 4, !dbg !505
  store i32 %11809, i32* %11786, align 4, !dbg !506
  %11810 = load i64, i64* %11774, align 4, !dbg !507
  %11811 = call i32 @sqlite3VdbeSerialTypeLen(i32 %11809), !dbg !508
  %11812 = zext i32 %11811 to i64, !dbg !509
  %11813 = add i64 %11810, %11812, !dbg !510
  store i64 %11813, i64* %11774, align 4, !dbg !511
  br label %11791, !dbg !512

11814:                                            ; preds = %11784
  %11815 = getelementptr i8, i8* %11787, i32 1, !dbg !513
  store i8* %11815, i8** %11780, align 8, !dbg !514
  %11816 = load i32, i32* %11613, align 4, !dbg !515
  %11817 = trunc i32 %11816 to i8, !dbg !516
  %11818 = getelementptr i8, i8* %4, i8 %11817, !dbg !517
  %11819 = load i8, i8* %11818, align 1, !dbg !518
  %11820 = zext i8 %11819 to i64, !dbg !519
  %11821 = load i64, i64* %11774, align 4, !dbg !520
  %11822 = add i64 %11821, %11820, !dbg !521
  store i64 %11822, i64* %11774, align 4, !dbg !522
  br label %11791, !dbg !523

11823:                                            ; preds = %11791
  %11824 = load i64, i64* %11774, align 4, !dbg !524
  %11825 = load i32, i32* %11628, align 4, !dbg !525
  %11826 = zext i32 %11825 to i64, !dbg !526
  %11827 = icmp uge i64 %11801, %11802, !dbg !527
  %11828 = icmp ugt i64 %11801, %11802, !dbg !528
  %11829 = icmp ne i64 %11824, %11826, !dbg !529
  %11830 = icmp ugt i64 %11824, %11826, !dbg !530
  %11831 = or i1 %11828, %11829, !dbg !531
  %11832 = and i1 %11827, %11831, !dbg !532
  %11833 = or i1 %11832, %11830, !dbg !533
  br i1 %11833, label %11834, label %11838, !dbg !534

11834:                                            ; preds = %11823
  %11835 = load i32, i32* %11620, align 4, !dbg !535
  %11836 = icmp eq i32 %11835, 0, !dbg !536
  br i1 %11836, label %11837, label %11838, !dbg !537

11837:                                            ; preds = %11834
  store i32 0, i32* %11771, align 4, !dbg !538
  store i8* %11783, i8** %11780, align 8, !dbg !539
  br label %11838, !dbg !540

11838:                                            ; preds = %11837, %11834, %11823
  %11839 = load i32, i32* %11771, align 4, !dbg !541
  %11840 = trunc i32 %11839 to i16, !dbg !542
  store i16 %11840, i16* %11631, align 2, !dbg !543
  %11841 = load i8*, i8** %11780, align 8, !dbg !544
  %11842 = ptrtoint i8* %11841 to i64, !dbg !545
  %11843 = load i8*, i8** %11612, align 8, !dbg !546
  %11844 = ptrtoint i8* %11843 to i64, !dbg !547
  %11845 = sub i64 %11842, %11844, !dbg !548
  %11846 = trunc i64 %11845 to i32, !dbg !549
  store i32 %11846, i32* %11627, align 4, !dbg !550
  br label %11848, !dbg !551

11847:                                            ; preds = %11762
  store i32 0, i32* %11613, align 4, !dbg !552
  br label %11848, !dbg !553

11848:                                            ; preds = %11838, %11847
  %11849 = load i16, i16* %11631, align 2, !dbg !554
  %11850 = icmp sle i16 %11849, 0, !dbg !555
  br i1 %11850, label %11851, label %11682, !dbg !556

11851:                                            ; preds = %11848
  %11852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11616, i32 0, i32 1, !dbg !557
  %11853 = load i16, i16* %11852, align 2, !dbg !557
  %11854 = and i16 %11853, 9216, !dbg !557
  %11855 = icmp ne i16 %11854, 0, !dbg !557
  br i1 %11855, label %11856, label %11857, !dbg !557

11856:                                            ; preds = %11851
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %11616), !dbg !557
  br label %11858, !dbg !557

11857:                                            ; preds = %11851
  store i16 1, i16* %11852, align 2, !dbg !557
  br label %11858, !dbg !557

11858:                                            ; preds = %11856, %11857, %11728, %11708, %11747, %11757, %11677, %11678
  call void @llvm.stackrestore(i8* %11605), !dbg !558
  br label %11859, !dbg !75

11859:                                            ; preds = %19, %11858
  %11860 = call i8* @llvm.stacksave(), !dbg !1536
  %11861 = call i32 @sqlite3VdbeCheckFk(%struct.Vdbe* %0, i32 0), !dbg !1539
  %11862 = call i32 @sqlite3VdbeCloseStatement(%struct.Vdbe* %0, i32 1), !dbg !1540
  %11863 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !1541
  %11864 = load i32, i32* %11863, align 4, !dbg !1542
  %11865 = add i32 %11864, 2, !dbg !1543
  %11866 = or i32 %11865, 1, !dbg !1544
  store i32 %11866, i32* %11863, align 4, !dbg !1545
  %11867 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 64, !dbg !1546
  %11868 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 27, !dbg !1547
  store %struct.sqlite3_value* %11867, %struct.sqlite3_value** %11868, align 8, !dbg !1548
  %11869 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11867, i32 1, !dbg !1549
  %11870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11869, i32 0, i32 1, !dbg !1550
  %11871 = load i16, i16* %11870, align 2, !dbg !1551
  %11872 = and i16 %11871, 4096, !dbg !1552
  %11873 = icmp ne i16 %11872, 0, !dbg !1553
  br i1 %11873, label %11874, label %11876, !dbg !1554

11874:                                            ; preds = %11859
  %11875 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %11869), !dbg !1555
  br label %11876, !dbg !1556

11876:                                            ; preds = %11874, %11859
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %11869), !dbg !1557
  %11877 = load i16, i16* %11870, align 2, !dbg !1551
  %11878 = and i16 %11877, 4096, !dbg !1552
  %11879 = icmp ne i16 %11878, 0, !dbg !1553
  br i1 %11879, label %11880, label %11882, !dbg !1554

11880:                                            ; preds = %11876
  %11881 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %11869), !dbg !1555
  br label %11882, !dbg !1556

11882:                                            ; preds = %11880, %11876
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %11869), !dbg !1557
  %11883 = load i16, i16* %11870, align 2, !dbg !1551
  %11884 = and i16 %11883, 4096, !dbg !1552
  %11885 = icmp ne i16 %11884, 0, !dbg !1553
  br i1 %11885, label %11886, label %11888, !dbg !1554

11886:                                            ; preds = %11882
  %11887 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %11869), !dbg !1555
  br label %11888, !dbg !1556

11888:                                            ; preds = %11886, %11882
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %11869), !dbg !1557
  %11889 = load i16, i16* %11870, align 2, !dbg !1551
  %11890 = and i16 %11889, 4096, !dbg !1552
  %11891 = icmp ne i16 %11890, 0, !dbg !1553
  br i1 %11891, label %11892, label %11894, !dbg !1554

11892:                                            ; preds = %11888
  %11893 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %11869), !dbg !1555
  br label %11894, !dbg !1556

11894:                                            ; preds = %11892, %11888
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %11869), !dbg !1557
  %11895 = load i16, i16* %11870, align 2, !dbg !1551
  %11896 = and i16 %11895, 4096, !dbg !1552
  %11897 = icmp ne i16 %11896, 0, !dbg !1553
  br i1 %11897, label %11898, label %11900, !dbg !1554

11898:                                            ; preds = %11894
  %11899 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %11869), !dbg !1555
  br label %11900, !dbg !1556

11900:                                            ; preds = %11898, %11894
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %11869), !dbg !1557
  %11901 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1558
  %11902 = getelementptr %struct.sqlite3, %struct.sqlite3* %11901, i32 0, i32 19, !dbg !1559
  %11903 = load i8, i8* %11902, align 1, !dbg !1560
  store i32 167, i32* %15, align 4, !dbg !1561
  call void @llvm.stackrestore(i8* %11860), !dbg !1562
  ret i32 100, !dbg !1563

11904:                                            ; preds = %19
  %11905 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !1187
  %11906 = load %struct.VdbeCursor*, %struct.VdbeCursor** %11905, align 8, !dbg !1190
  %11907 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %11906), !dbg !1191
  %11908 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11906, i32 0, i32 9, !dbg !1192
  store i32 0, i32* %11908, align 4, !dbg !1193
  %11909 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %11906, i32 0, i32 2, !dbg !1194
  %11910 = icmp eq i32 %11907, 0, !dbg !1195
  br i1 %11910, label %11911, label %11912, !dbg !1196

11911:                                            ; preds = %11904
  store i8 0, i8* %11909, align 1, !dbg !1197
  br label %10567, !dbg !1198

11912:                                            ; preds = %11904
  store i8 1, i8* %11909, align 1, !dbg !1199
  br label %11913, !dbg !1200

11913:                                            ; preds = %19, %11912, %10561
  %11914 = call i32 @sqlite3VdbeHalt(%struct.Vdbe* %0), !dbg !1564
  ret i32 101, !dbg !1567

11915:                                            ; preds = %19, %20
  %11916 = call i8* @llvm.stacksave(), !dbg !1568
  %11917 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1571
  %11918 = load %struct.Db*, %struct.Db** %11917, align 8, !dbg !1572
  %11919 = getelementptr %struct.Db, %struct.Db* %11918, i32 0, i32 1, !dbg !1573
  %11920 = load %struct.Btree*, %struct.Btree** %11919, align 8, !dbg !1574
  %11921 = ptrtoint %struct.Btree* %11920 to i64, !dbg !1575
  %11922 = alloca i32, align 8, !dbg !1576
  %11923 = alloca i32, align 8, !dbg !1577
  %11924 = icmp ne i64 %11921, 0, !dbg !1578
  br i1 %11924, label %11925, label %11927, !dbg !1579

11925:                                            ; preds = %11915
  %11926 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %11920, i32 0, i32* %11922), !dbg !1580
  store i32 %11926, i32* %11923, align 4, !dbg !1581
  br label %11927, !dbg !1582

11927:                                            ; preds = %11925, %11915
  %11928 = load i32, i32* %11922, align 4, !dbg !1583
  %11929 = icmp ne i32 %11928, 8, !dbg !1584
  %11930 = getelementptr %struct.Db, %struct.Db* %11918, i32 0, i32 4, !dbg !1585
  %11931 = load %struct.Schema*, %struct.Schema** %11930, align 8, !dbg !1586
  %11932 = getelementptr %struct.Schema, %struct.Schema* %11931, i32 0, i32 1, !dbg !1587
  %11933 = load i32, i32* %11932, align 4, !dbg !1588
  %11934 = icmp ne i32 %11933, 0, !dbg !1589
  %11935 = or i1 %11934, %11929, !dbg !1590
  %11936 = load i32, i32* %11923, align 4, !dbg !1591
  call void @llvm.stackrestore(i8* %11916), !dbg !1592
  br label %11937, !dbg !75

11937:                                            ; preds = %19, %11927
  %11938 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 170, !dbg !63
  %11939 = call i8* @llvm.stacksave(), !dbg !66
  %11940 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11938, i32 0, i32 4, !dbg !67
  %11941 = load i32, i32* %11940, align 4, !dbg !70
  %11942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %11941, !dbg !71
  %11943 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11942, i32 0, i32 1, !dbg !66
  %11944 = load i16, i16* %11943, align 2, !dbg !66
  %11945 = and i16 %11944, 9216, !dbg !66
  %11946 = icmp ne i16 %11945, 0, !dbg !66
  %11947 = alloca %struct.sqlite3_value*, align 8, !dbg !66
  br i1 %11946, label %11948, label %11950, !dbg !66

11948:                                            ; preds = %11937
  %11949 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %11942), !dbg !66
  store %struct.sqlite3_value* %11949, %struct.sqlite3_value** %11947, align 8, !dbg !66
  br label %11951, !dbg !66

11950:                                            ; preds = %11937
  store i16 4, i16* %11943, align 2, !dbg !66
  store %struct.sqlite3_value* %11942, %struct.sqlite3_value** %11947, align 8, !dbg !66
  br label %11951, !dbg !66

11951:                                            ; preds = %11950, %11948
  %11952 = load %struct.sqlite3_value*, %struct.sqlite3_value** %11947, align 8, !dbg !66
  call void @llvm.stackrestore(i8* %11939), !dbg !66
  %11953 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %11952, i32 0, i32 0, i32 0, !dbg !72
  %11954 = bitcast double* %11953 to i64*, !dbg !73
  store i64 1, i64* %11954, align 4, !dbg !74
  br label %30, !dbg !75
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status64(i32, i64* nocapture, i64* nocapture, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_enter(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_leave(%struct.sqlite3_mutex*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status(i32, i32* nocapture, i32* nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @countLookasideSlots(%struct.LookasideSlot* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_status(%struct.sqlite3*, i32, i32* nocapture, i32*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_msize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeClearObject(%struct.sqlite3*, %struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFree(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getDigits(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
declare i32 @parseTimezone(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseHhMmSs(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @datetimeError(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeJD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @parseYyyyMmDd(i8* nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDateTimeToCurrent(%struct.sqlite3_context* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @setRawDateNumber(%struct.DateTime* nocapture, double) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @parseDateOrTime(%struct.sqlite3_context* nocapture, i8* readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @validJulianDay(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeHMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD_HMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @clearYMD_HMS_TZ(%struct.DateTime* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @osLocaltime(i64*, %struct.tm* nocapture) local_unnamed_addr #3

declare %struct.tm* @localtime(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i64 @localtimeOffset(%struct.DateTime* nocapture readonly, %struct.sqlite3_context* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseModifier(%struct.sqlite3_context* nocapture, i8* readonly, i32, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stricmp(i8* readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_strnicmp(i8* readonly, i8* readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDate(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_type(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_value_double(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @juliandayFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_double(%struct.sqlite3_context* nocapture readonly, double) #3

; Function Attrs: nounwind ssp uwtable
declare void @datetimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_snprintf(i32, i8* returned, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @timeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @strftimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_context_db_handle(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_toobig(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_nomem(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MallocSize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cdateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimestampFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_vfs* @sqlite3_vfs_find(i8* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_initialize() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vfsUnlink(%struct.sqlite3_vfs* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_register(%struct.sqlite3_vfs*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_unregister(%struct.sqlite3_vfs* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_mutex_alloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_free(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_mutex_try(%struct.sqlite3_mutex*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexEnd() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_mutex* @noopMutexAlloc(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexFree(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexEnter(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexTry(%struct.sqlite3_mutex* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexLeave(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexEnd() #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @pthreadMutexAlloc(i32) #3

declare i32 @pthread_mutexattr_init(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @pthread_mutexattr_settype(%struct._opaque_pthread_mutexattr_t*, i32) local_unnamed_addr #12

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @"\01_pthread_mutexattr_destroy"(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexFree(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexEnter(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @pthreadMutexTry(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_trylock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexLeave(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_release_memory(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_memory_alarm(void (i8*, i64, i32)* nocapture readnone, i8* nocapture readnone, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_soft_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_used() #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_soft_heap_limit(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_hard_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_highwater(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @mallocWithAlarm(i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc64(i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isLookaside(%struct.sqlite3* nocapture readonly, i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @lookasideMallocSize(%struct.sqlite3* nocapture readonly, i8* readnone) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @measureAllocationSize(%struct.sqlite3* readonly, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3Realloc(i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc64(i8*, i64) #3

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbMallocRawFinish(%struct.sqlite3*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3OomFault(%struct.sqlite3*) unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbReallocFinish(%struct.sqlite3*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @apiOomError(%struct.sqlite3*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare signext i8 @et_getdigit(x86_fp80* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @setStrAccumError(%struct.sqlite3_str* nocapture, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_reset(%struct.sqlite3_str* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @getIntArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_value_int64(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare double @getDoubleArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @getTextArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @printfTempBuf(%struct.sqlite3_str*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRaw(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_vappendf(%struct.sqlite3_str*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_append(%struct.sqlite3_str*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendchar(%struct.sqlite3_str*, i32, i8 signext) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendall(%struct.sqlite3_str*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3StrAccumEnlarge(%struct.sqlite3_str*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @enlargeAndAppend(%struct.sqlite3_str*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @strAccumFinishRealloc(%struct.sqlite3_str* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_str_finish(%struct.sqlite3_str*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_errcode(%struct.sqlite3_str* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_length(%struct.sqlite3_str* readonly) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @sqlite3_str_value(%struct.sqlite3_str* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_str* @sqlite3_str_new(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vmprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_mprintf(i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vsnprintf(i32, i8* returned, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @renderLogMsg(i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_log(i32, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendf(%struct.sqlite3_str*, i8*, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @compare2pow63(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable writeonly
declare i32 @putVarint64(i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
declare void @logBadConnection(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @strHash(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @insertElement(%struct.Hash* nocapture, %struct._ht*, %struct.HashElem*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @rehash(%struct.Hash* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.HashElem* @findElementWithHash(%struct.Hash* nocapture readonly, i8* nocapture readonly, i32*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @removeElementGivenHash(%struct.Hash* nocapture, %struct.HashElem*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @posixOpen(i8*, i32, i32) #3

declare i32 @"\01_open"(i8*, i32, ...) local_unnamed_addr #12

declare i32 @"\01_close"(i32) #12

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) #9

declare i8* @getcwd(i8*, i64) #12

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #12

declare i32 @"\01_fstat$INODE64"(i32, %struct.stat*) #12

declare i32 @ftruncate(i32, i64) #12

declare i32 @"\01_fcntl"(i32, i32, ...) #12

declare i64 @"\01_read"(i32, i8*, i64) #12

declare i64 @"\01_pread"(i32, i8*, i64, i64) #12

declare i64 @"\01_write"(i32, i8*, i64) #12

declare i64 @"\01_pwrite"(i32, i8*, i64, i64) #12

declare i32 @"\01_fchmod"(i32, i16 zeroext) #12

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) #9

; Function Attrs: nounwind ssp uwtable
declare i32 @openDirectory(i8*, i32* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i16 zeroext) #9

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) #9

declare i32 @fchown(i32, i32, i32) #12

declare i32 @geteuid() #12

declare i8* @"\01_mmap"(i8*, i64, i32, i32, i32, i64) #12

declare i32 @"\01_munmap"(i8*, i64) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetpagesize() #3

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #9

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @robustFchown(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @unixSetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly, void ()*) #8

; Function Attrs: nounwind readonly ssp uwtable
declare void ()* @unixGetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @unixNextSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_open(i8*, i32, i16 zeroext) local_unnamed_addr #3

declare i32* @__error() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixEnterMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixLeaveMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqliteErrorFromPosixError(i32, i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLogErrorAtLine(i32 returned, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @robust_close(%struct.unixFile* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @storeLastErrno(%struct.unixFile* nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @closePendingFds(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseInodeInfo(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findInodeInfo(%struct.unixFile* nocapture, %struct.unixInodeInfo** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @fileHasMoved(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @verifyDbFile(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileLock(%struct.unixFile* nocapture readonly, %struct.flock*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPendingFd(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @posixUnlock(%struct.sqlite3_file*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @closeUnixFile(%struct.sqlite3_file*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixUnmapfile(%struct.unixFile* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixClose(%struct.sqlite3_file*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @nolockCheckReservedLock(%struct.sqlite3_file* nocapture readnone, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockLock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockUnlock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @nolockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockCheckReservedLock(%struct.sqlite3_file* nocapture readonly, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree nounwind
declare i32 @utimes(i8* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_flock(i32, i32) local_unnamed_addr #3

declare i32 @flock(i32, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @flockCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpSetLock(i8*, %struct.unixFile* nocapture, i64, i64, i32) local_unnamed_addr #3

declare i32 @fsctl(i8*, i64, i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpLock(%struct.sqlite3_file* nocapture, i32) #3

declare i64 @random() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @nfsUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndRead(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWriteFd(i32, i64, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWrite(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixWrite(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @full_fsync(i32, i32, i32) local_unnamed_addr #3

declare i32 @"\01_fsync"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSync(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileSize(%struct.sqlite3_file* nocapture, i64* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fcntlSizeHint(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixMapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @unixModeBit(%struct.unixFile* nocapture, i8 zeroext, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileControl(%struct.sqlite3_file*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetTempname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyFileControl(%struct.sqlite3_file*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDeviceCharacteristics(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixSectorSize(%struct.sqlite3_file* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixDeviceCharacteristics(%struct.sqlite3_file* nocapture) #15

declare i64 @sysconf(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmSystemLock(%struct.unixFile* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmRegionPerMap() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmPurge(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLockSharedMemory(%struct.unixFile* nocapture readonly, %struct.unixShmNode* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpenSharedMemory(%struct.unixFile*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_uri_boolean(i8* readonly, i8* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmMap(%struct.sqlite3_file*, i32, i32, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmLock(%struct.sqlite3_file* nocapture readonly, i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmBarrier(%struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmUnmap(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixRemapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFetch(%struct.sqlite3_file* nocapture, i64, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnfetch(%struct.sqlite3_file* nocapture, i64, i8* readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @posixIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nolockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @dotlockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @flockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @afpIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyLock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCheckReservedLock(%struct.sqlite3_file*, i32*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @proxyIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nfsIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_io_methods* @autolockIoFinderImpl(i8*, %struct.unixFile* nocapture readonly) #3

declare i32 @"\01_statfs$INODE64"(i8*, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInUnixFile(%struct.sqlite3_vfs*, i32, %struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

declare void @srandomdev() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i8* @unixTempFileDir() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare %struct.UnixUnusedFd* @findReusableFd(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getFileMode(i8*, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findCreateFileMode(i8*, i32, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_parameter(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*) #3

declare i32 @getpid() local_unnamed_addr #12

declare i32 @"\01_fstatfs$INODE64"(i32, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTransformUnixFile(%struct.unixFile* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixDelete(%struct.sqlite3_vfs* nocapture readnone, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixAccess(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @mkFullPathname(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFullPathname(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @unixDlOpen(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i8* @dlopen(i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlError(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i8* @dlerror() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void ()* @unixDlSym(%struct.sqlite3_vfs* nocapture readnone, i8*, i8*) #3

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlClose(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i32 @dlclose(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRandomness(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i64 @time(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSleep(%struct.sqlite3_vfs* nocapture readnone, i32) #3

declare i32 @"\01_sleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTimeInt64(%struct.sqlite3_vfs* nocapture readnone, i64* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTime(%struct.sqlite3_vfs* nocapture readnone, double* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetLastError(%struct.sqlite3_vfs* nocapture readnone, i32, i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetLockPath(i8* nocapture readonly, i8*, i64) local_unnamed_addr #3

declare i64 @"\01_confstr"(i32, i8*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateLockPath(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateUnixFile(i8*, %struct.unixFile** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetHostID(i8*, i32*) local_unnamed_addr #3

declare i32 @gethostuuid(i8*, %struct.timespec*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyBreakConchLock(%struct.unixFile* readonly, i8* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @__strlcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyConchLock(%struct.unixFile*, i8* nocapture readonly, i32) local_unnamed_addr #3

declare i32 @"\01_usleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTakeConch(%struct.unixFile*) local_unnamed_addr #3

declare i32 @futimes(i32, %struct.timeval*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbStrDup(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyReleaseConch(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateConchPathname(i8*, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @switchLockProxyPath(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @proxyGetDbPathForUnixFile(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_os_init() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_os_end() local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcacheManageDirtyList(%struct.PgHdr*, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcacheUnpin(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @numberOfCachePages(%struct.PCache* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree noinline nounwind ssp uwtable
declare %struct.PgHdr* @pcacheFetchFinishWithInit(%struct.PCache*, i32, %struct.sqlite3_pcache_page*) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheMergeDirtyList(%struct.PgHdr*, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheSortDirtyList(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1InitBulk(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pcache1Alloc(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1AllocPage(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1FreePage(%struct.PgHdr1*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1UnderMemoryPressure(%struct.PCache1* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pcache1ResizeHash(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1PinPage(%struct.PgHdr1* returned) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1RemoveFromHash(%struct.PgHdr1*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1EnforceMaxPage(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1TruncateUnsafe(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1Init(i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable writeonly
declare void @pcache1Shutdown(i8* nocapture readnone) #20

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache* @pcache1Create(i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Destroy(%struct.sqlite3_pcache*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Cachesize(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Shrink(%struct.sqlite3_pcache* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1Pagecount(%struct.sqlite3_pcache* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchStage2(%struct.PCache1*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchNoMutex(%struct.sqlite3_pcache*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache_page* @pcache1Fetch(%struct.sqlite3_pcache*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Unpin(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcache1Rekey(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Truncate(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryAlloc(%struct.RowSet* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryMerge(%struct.RowSetEntry*, %struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntrySort(%struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @rowSetTreeToList(%struct.RowSetEntry*, %struct.RowSetEntry** nocapture, %struct.RowSetEntry** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetNDeepTree(%struct.RowSetEntry**, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetListToTree(%struct.RowSetEntry*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setGetterMethod(%struct.Pager* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @getPageError(%struct.Pager* nocapture readonly, i32, %struct.PgHdr** nocapture, i32) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageMMap(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageNormal(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @subjRequiresPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @read32bits(%struct.sqlite3_file*, i64, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @write32bits(%struct.sqlite3_file*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUnlockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerLockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @jrnlBufferSize(%struct.Pager* nocapture readnone) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @readMasterJournal(%struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @journalHdrOffset(%struct.Pager* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @zeroJournalHdr(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeJournalHdr(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readJournalHdr(%struct.Pager* nocapture, i32, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetPagesize(%struct.Pager* nocapture, i32* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeMasterJournal(%struct.Pager* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_reset(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseAllSavepoints(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BitvecDestroy(%struct.Bitvec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addToSavepointBitvecs(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BitvecSet(%struct.Bitvec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_unlock(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @pager_error(%struct.Pager* nocapture, i32 returned) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pagerFlushOnCommit(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_end_transaction(%struct.Pager*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_truncate(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockAndRollback(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerRollback(%struct.Pager*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pager_cksum(%struct.Pager* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback_one_page(%struct.Pager*, i64* nocapture, %struct.Bitvec*, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3PcacheRelease(%struct.PgHdr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_delmaster(%struct.Pager* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setSectorSize(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readDbPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalFindFrame(%struct.Wal* nocapture, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pager_write_changecounter(%struct.PgHdr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUndoCallback(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerRollbackWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerWalFrames(%struct.Pager* nocapture, %struct.PgHdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerBeginReadTransaction(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPagecount(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWalIfPresent(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPlaybackSavepoint(%struct.Pager*, %struct.PagerSavepoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFixMaplimit(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpentemp(%struct.Pager* nocapture readonly, %struct.sqlite3_file*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_wait_on_lock(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerSyncHotJournal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerAcquireMapPage(%struct.Pager*, i32, i8*, %struct.PgHdr** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerReleaseMapPage(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFreeMapHdrs(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @databaseIsUnmoved(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @syncJournal(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write_pagelist(%struct.Pager*, %struct.PgHdr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @openSubJournal(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPageIfRequired(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerStress(i8*, %struct.PgHdr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @hasHotJournal(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockIfUnused(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_open_journal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerAddPageToRollbackJournal(%struct.PgHdr* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerWriteLargeSector(%struct.PgHdr* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_incr_changecounter(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerOpenSavepoint(%struct.Pager* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerExclusiveLock(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walIndexPageRealloc(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexPage(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull %struct.WalCkptInfo* @walCkptInfo(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WalIndexHdr* @walIndexHdr(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare void @walChecksumBytes(i32, i8* readonly, i32, i32* readonly, i32* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walShmBarrier(%struct.Wal* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexWriteHdr(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @walEncodeFrame(%struct.Wal*, i32, i32, i8* readonly, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @walDecodeFrame(%struct.Wal* nocapture, i32* nocapture, i32* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walHash(i32) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walNextHash(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @walHashGet(%struct.Wal* nocapture, i32, %struct.WalHashLoc* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walFramePage(i32) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walFramePgno(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @walCleanupHash(%struct.Wal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexAppend(%struct.Wal* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexRecover(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexClose(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walIteratorNext(%struct.WalIterator* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare void @walMerge(i32* nocapture readonly, i16*, i32, i16** nocapture, i32* nocapture, i16*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walMergesort(i32* nocapture readonly, i16*, i16*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIteratorFree(%struct.WalIterator*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIteratorInit(%struct.Wal* nocapture, i32, %struct.WalIterator** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBusyLock(%struct.Wal* nocapture readonly, i32 (i8*)*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @walPagesize(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @walRestartHdr(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walLimitSize(%struct.Wal* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexTryHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexReadHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBeginShmUnreliable(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walTryBeginRead(%struct.Wal*, i32* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRestartLog(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteToLog(%struct.WalWriter* nocapture readonly, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteOneFrame(%struct.WalWriter* nocapture readonly, %struct.PgHdr* nocapture readonly, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRewriteChecksums(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @lockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @unlockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLockCarefully(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeEnterAll(%struct.sqlite3* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLeaveAll(%struct.sqlite3* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_enable_shared_cache(i32) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @querySharedCacheTableLock(%struct.Btree* readonly, i32, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @setSharedCacheTableLock(%struct.Btree*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @clearAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @downgradeAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateAllOverflowCache(%struct.BtShared* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateIncrblobCursors(%struct.Btree* nocapture, i32, i64, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeSetHasContent(%struct.BtShared* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreeGetHasContent(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @btreeClearHasContent(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeReleaseAllCursorPages(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageNotNull(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorKey(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveAllCursors(%struct.BtShared* nocapture readonly, i32, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @saveCursorsOnList(%struct.BtCursor*, i32, %struct.BtCursor* readnone) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeMoveto(%struct.BtCursor*, i8*, i64, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeRestoreCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @ptrmapPageno(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPut(%struct.BtShared* nocapture readonly, i32, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @ptrmapGet(%struct.BtShared* nocapture readonly, i32, i8* nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind ssp uwtable
declare void @btreeParseCellAdjustSizeForOverflow(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) local_unnamed_addr #21

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly, %struct.CellInfo* nocapture) #15

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local zeroext i8 @sqlite3GetVarint(i8* nocapture readonly %p, i64* nocapture %v) unnamed_addr #2 {
entry:
  %0 = load i8, i8* %p, align 1, !tbaa !10
  %cmp = icmp sgt i8 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv2 = zext i8 %0 to i64
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds i8, i8* %p, i64 1
  %1 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %cmp5 = icmp sgt i8 %1, -1
  %conv9 = zext i8 %0 to i32
  br i1 %cmp5, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end
  %and = shl nuw nsw i32 %conv9, 7
  %shl = and i32 %and, 16256
  %conv11 = zext i8 %1 to i32
  %or = or i32 %shl, %conv11
  %conv12 = zext i32 %or to i64
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %shl16 = shl nuw nsw i32 %conv9, 14
  %conv18 = zext i8 %1 to i32
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 2
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv19 = zext i8 %2 to i32
  %or20 = or i32 %shl16, %conv19
  %tobool = icmp slt i8 %2, 0
  %and29 = and i32 %or20, 2080895
  br i1 %tobool, label %if.end28, label %if.then22

if.then22:                                        ; preds = %if.end13
  %and24 = shl nuw nsw i32 %conv18, 7
  %shl25 = and i32 %and24, 16256
  %or26 = or i32 %and29, %shl25
  %conv27 = zext i32 %or26 to i64
  br label %cleanup

if.end28:                                         ; preds = %if.end13
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 3
  %shl30 = shl nuw nsw i32 %conv18, 14
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv31 = zext i8 %3 to i32
  %or32 = or i32 %shl30, %conv31
  %tobool34 = icmp slt i8 %3, 0
  %and41 = and i32 %or32, 2080895
  br i1 %tobool34, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end28
  %shl37 = shl nuw nsw i32 %and29, 7
  %or38 = or i32 %and41, %shl37
  %conv39 = zext i32 %or38 to i64
  br label %cleanup

if.end40:                                         ; preds = %if.end28
  %incdec.ptr42 = getelementptr inbounds i8, i8* %p, i64 4
  %shl43 = shl i32 %and29, 14
  %4 = load i8, i8* %incdec.ptr42, align 1, !tbaa !10
  %conv44 = zext i8 %4 to i32
  %or45 = or i32 %shl43, %conv44
  %tobool47 = icmp slt i8 %4, 0
  br i1 %tobool47, label %if.end55, label %if.then48

if.then48:                                        ; preds = %if.end40
  %shl49 = shl nuw nsw i32 %and41, 7
  %or50 = or i32 %or45, %shl49
  %shr = lshr i32 %and29, 18
  %conv51 = zext i32 %shr to i64
  %shl52 = shl nuw nsw i64 %conv51, 32
  %conv53 = zext i32 %or50 to i64
  %or54 = or i64 %shl52, %conv53
  br label %cleanup

if.end55:                                         ; preds = %if.end40
  %shl56 = shl nuw nsw i32 %and29, 7
  %or57 = or i32 %and41, %shl56
  %incdec.ptr58 = getelementptr inbounds i8, i8* %p, i64 5
  %shl59 = shl i32 %and41, 14
  %5 = load i8, i8* %incdec.ptr58, align 1, !tbaa !10
  %conv60 = zext i8 %5 to i32
  %or61 = or i32 %shl59, %conv60
  %tobool63 = icmp slt i8 %5, 0
  br i1 %tobool63, label %if.end73, label %if.then64

if.then64:                                        ; preds = %if.end55
  %and65 = shl i32 %or45, 7
  %shl66 = and i32 %and65, 266354560
  %or67 = or i32 %or61, %shl66
  %shr68 = lshr i32 %or57, 18
  %conv69 = zext i32 %shr68 to i64
  %shl70 = shl nuw nsw i64 %conv69, 32
  %conv71 = zext i32 %or67 to i64
  %or72 = or i64 %shl70, %conv71
  br label %cleanup

if.end73:                                         ; preds = %if.end55
  %incdec.ptr74 = getelementptr inbounds i8, i8* %p, i64 6
  %shl75 = shl i32 %or45, 14
  %6 = load i8, i8* %incdec.ptr74, align 1, !tbaa !10
  %conv76 = zext i8 %6 to i32
  %or77 = or i32 %shl75, %conv76
  %tobool79 = icmp slt i8 %6, 0
  br i1 %tobool79, label %if.end90, label %if.then80

if.then80:                                        ; preds = %if.end73
  %and81 = and i32 %or77, -266354561
  %and82 = shl i32 %or61, 7
  %shl83 = and i32 %and82, 266354560
  %or84 = or i32 %and81, %shl83
  %shr85 = lshr i32 %or57, 11
  %conv86 = zext i32 %shr85 to i64
  %shl87 = shl nuw nsw i64 %conv86, 32
  %conv88 = zext i32 %or84 to i64
  %or89 = or i64 %shl87, %conv88
  br label %cleanup

if.end90:                                         ; preds = %if.end73
  %and91 = and i32 %or77, 2080895
  %incdec.ptr92 = getelementptr inbounds i8, i8* %p, i64 7
  %shl93 = shl i32 %or61, 14
  %7 = load i8, i8* %incdec.ptr92, align 1, !tbaa !10
  %conv94 = zext i8 %7 to i32
  %or95 = or i32 %shl93, %conv94
  %tobool97 = icmp slt i8 %7, 0
  br i1 %tobool97, label %if.end107, label %if.then98

if.then98:                                        ; preds = %if.end90
  %and99 = and i32 %or95, -266354561
  %shl100 = shl nuw nsw i32 %and91, 7
  %or101 = or i32 %and99, %shl100
  %shr102 = lshr i32 %or57, 4
  %conv103 = zext i32 %shr102 to i64
  %shl104 = shl nuw nsw i64 %conv103, 32
  %conv105 = zext i32 %or101 to i64
  %or106 = or i64 %shl104, %conv105
  br label %cleanup

if.end107:                                        ; preds = %if.end90
  %incdec.ptr108 = getelementptr inbounds i8, i8* %p, i64 8
  %shl109 = shl i32 %and91, 15
  %8 = load i8, i8* %incdec.ptr108, align 1, !tbaa !10
  %conv110 = zext i8 %8 to i32
  %and112 = shl i32 %or95, 8
  %shl113 = and i32 %and112, 532709120
  %or111 = or i32 %shl113, %shl109
  %or114 = or i32 %or111, %conv110
  %shl115 = shl nuw i32 %or57, 4
  %9 = lshr i8 %4, 3
  %10 = and i8 %9, 15
  %shr119 = zext i8 %10 to i32
  %or120 = or i32 %shl115, %shr119
  %conv121 = zext i32 %or120 to i64
  %shl122 = shl nuw i64 %conv121, 32
  %conv123 = zext i32 %or114 to i64
  %or124 = or i64 %shl122, %conv123
  br label %cleanup

cleanup:                                          ; preds = %if.end107, %if.then98, %if.then80, %if.then64, %if.then48, %if.then35, %if.then22, %if.then7, %if.then
  %or124.sink = phi i64 [ %or124, %if.end107 ], [ %or106, %if.then98 ], [ %or89, %if.then80 ], [ %or72, %if.then64 ], [ %or54, %if.then48 ], [ %conv39, %if.then35 ], [ %conv27, %if.then22 ], [ %conv12, %if.then7 ], [ %conv2, %if.then ]
  %retval.0 = phi i8 [ 9, %if.end107 ], [ 8, %if.then98 ], [ 7, %if.then80 ], [ 6, %if.then64 ], [ 5, %if.then48 ], [ 4, %if.then35 ], [ 3, %if.then22 ], [ 2, %if.then7 ], [ 1, %if.then ]
  store i64 %or124.sink, i64* %v, align 8, !tbaa !16
  ret i8 %retval.0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtr(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrIndex(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @btreeParseCell(%struct.MemPage*, i32, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtr(%struct.MemPage* nocapture readonly, i8*) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPutOvflPtr(%struct.MemPage*, %struct.MemPage* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @defragmentPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pageFindSlot(%struct.MemPage* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateSpace(%struct.MemPage*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @freeSpace(%struct.MemPage* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @decodeFlags(%struct.MemPage* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeComputeFreeSpace(%struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeCellSizeCheck(%struct.MemPage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInitPage(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.MemPage* @btreePageFromDbPage(%struct.PgHdr*, i32, %struct.BtShared*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MemPage* @btreePageLookup(%struct.BtShared*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreePagecount(%struct.BtShared* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAndInitPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, %struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePage(%struct.MemPage* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageOne(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetUnusedPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pageReinit(%struct.PgHdr* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInvokeBusyHandler(i8* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @removeFromSharingList(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @allocateTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @lockBtree(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSharedLock(%struct.Pager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unlockBtreeIfUnused(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @newDatabase(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setChildPtrmaps(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @modifyPagePointer(%struct.MemPage*, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @relocatePage(%struct.BtShared*, %struct.MemPage*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @incrVacuumStep(%struct.BtShared*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateBtreePage(%struct.BtShared*, %struct.MemPage** nocapture, i32* nocapture, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @finalDbSize(%struct.BtShared* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @autoVacuumCommit(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeEndTransaction(%struct.Btree*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeSetNPage(%struct.BtShared* nocapture, %struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursorWithLock(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @getCellInfo(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @getOverflowPage(%struct.BtShared*, i32, %struct.MemPage**, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @copyPayload(i8*, i8*, i32, i32, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @accessPayload(%struct.BtCursor*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @accessPayloadChecked(%struct.BtCursor*, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @fetchPayload(%struct.BtCursor* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToChild(%struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @moveToParent(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRoot(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToLeftmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRightmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeNext(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreePrevious(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @freePage2(%struct.BtShared*, %struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freePage(%struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearCell(%struct.MemPage*, i8*, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInCell(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @dropCell(%struct.MemPage* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @insertCell(%struct.MemPage*, i32, i8*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @populateCellCache(%struct.CellArray* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @cachedCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @rebuildPage(%struct.CellArray* nocapture readonly, i32, i32, %struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageInsertArray(%struct.MemPage* nocapture readonly, i8*, i8** nocapture, i8* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageFreeArray(%struct.MemPage* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @editPage(%struct.MemPage*, i32, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_quick(%struct.MemPage*, %struct.MemPage*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @copyNodeContent(%struct.MemPage* nocapture readonly, %struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_nonroot(%struct.MemPage*, i32, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_deeper(%struct.MemPage*, %struct.MemPage** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @anotherValidCursor(%struct.BtCursor* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteContent(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteCell(%struct.BtCursor* nocapture readonly, %struct.BtreePayload* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCreateTable(%struct.Btree* nocapture, i32* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearDatabasePage(%struct.BtShared*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeDropTable(%struct.Btree*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkAppendMsg(%struct.IntegrityCk*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkRef(%struct.IntegrityCk*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkPtrmap(%struct.IntegrityCk*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkList(%struct.IntegrityCk*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeHeapInsert(i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @btreeHeapPull(i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkTreePage(%struct.IntegrityCk*, i32, i64* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Btree* @findBtree(%struct.sqlite3*, %struct.sqlite3*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTempDatabase(%struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorWithMsg(%struct.sqlite3*, i32, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDestPgsz(%struct.sqlite3_backup* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetPageSize(%struct.Btree* nocapture, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @checkReadTransaction(%struct.sqlite3*, %struct.Btree* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_backup* @sqlite3_backup_init(%struct.sqlite3*, i8*, %struct.sqlite3*, i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @isFatalError(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @backupOnePage(%struct.sqlite3_backup* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @backupTruncateFile(%struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @attachBackupObject(%struct.sqlite3_backup*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_step(%struct.sqlite3_backup*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ResetAllSchemasOfConnection(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerCommitPhaseOne(%struct.Pager*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseTwo(%struct.Btree*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseOne(%struct.Btree* nocapture, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_finish(%struct.sqlite3_backup*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeRollback(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3LeaveMutexAndCloseZombie(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_remaining(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_pagecount(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @backupUpdate(%struct.sqlite3_backup* nocapture, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMemRenderNum(i32, i8*, %struct.sqlite3_value* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeMemAddTerminator(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClear(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define i64 @doubleToInt64(double %r) local_unnamed_addr #22 {
entry:
  %cmp = fcmp ugt double %r, 0xC3E0000000000000
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult double %r, 0x43E0000000000000
  br i1 %cmp1, label %if.else3, label %return

if.else3:                                         ; preds = %if.else
  %conv = fptosi double %r to i64
  br label %return

return:                                           ; preds = %if.else3, %if.else, %entry
  %retval.0 = phi i64 [ %conv, %if.else3 ], [ -9223372036854775808, %entry ], [ 9223372036854775807, %if.else ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind ssp uwtable
declare i64 @memIntValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3Atoi64(i8* readonly %zNum, i64* nocapture %pNum, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  %conv = zext i8 %enc to i32
  %cmp = icmp eq i8 %enc, 1
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %sub = sub nsw i32 3, %conv
  %cmp3255 = icmp slt i32 %sub, %length
  br i1 %cmp3255, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %length to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv266 = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next267, %for.inc ]
  %i.0256 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %zNum, i64 %indvars.iv266
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %for.inc, label %for.end.loopexit.split.loop.exit295

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next267 = add i64 %indvars.iv266, 2
  %add = add nsw i32 %i.0256, 2
  %cmp3 = icmp slt i64 %indvars.iv.next267, %1
  br i1 %cmp3, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit295:              ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv266 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit295, %for.inc, %if.else
  %i.0.lcssa = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit295 ], [ %add, %for.inc ]
  %cmp3.lcssa = phi i32 [ 0, %if.else ], [ 1, %for.end.loopexit.split.loop.exit295 ], [ 0, %for.inc ]
  %xor = xor i32 %i.0.lcssa, 1
  %and = and i32 %conv, 1
  %idx.ext13 = zext i32 %and to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext13
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %zNum.addr.0 = phi i8* [ %add.ptr14, %for.end ], [ %zNum, %entry ]
  %incr.0 = phi i32 [ 2, %for.end ], [ 1, %entry ]
  %nonNum.0 = phi i32 [ %cmp3.lcssa, %for.end ], [ 0, %entry ]
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %entry ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext.pn
  %cmp15252 = icmp ult i8* %zNum.addr.0, %zEnd.0
  br i1 %cmp15252, label %land.rhs17.lr.ph, label %if.end43

land.rhs17.lr.ph:                                 ; preds = %if.end
  %idx.ext23 = zext i32 %incr.0 to i64
  br label %land.rhs17

land.rhs17:                                       ; preds = %while.body, %land.rhs17.lr.ph
  %zNum.addr.1253 = phi i8* [ %zNum.addr.0, %land.rhs17.lr.ph ], [ %add.ptr24, %while.body ]
  %4 = load i8, i8* %zNum.addr.1253, align 1, !tbaa !10
  %idxprom18 = zext i8 %4 to i64
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom18
  %5 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %6 = and i8 %5, 1
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.then27, label %while.body

while.body:                                       ; preds = %land.rhs17
  %add.ptr24 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  %cmp15 = icmp ult i8* %add.ptr24, %zEnd.0
  br i1 %cmp15, label %land.rhs17, label %if.end43

if.then27:                                        ; preds = %land.rhs17
  switch i8 %4, label %if.end43 [
    i8 45, label %if.then31
    i8 43, label %if.then38
  ]

if.then31:                                        ; preds = %if.then27
  %add.ptr33 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.then38:                                        ; preds = %if.then27
  %add.ptr40 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.then31, %if.then27, %while.body, %if.end
  %zNum.addr.2 = phi i8* [ %add.ptr33, %if.then31 ], [ %add.ptr40, %if.then38 ], [ %zNum.addr.1253, %if.then27 ], [ %zNum.addr.0, %if.end ], [ %add.ptr24, %while.body ]
  %neg.0 = phi i32 [ 1, %if.then31 ], [ 0, %if.then38 ], [ 0, %if.then27 ], [ 0, %if.end ], [ 0, %while.body ]
  %cmp45248 = icmp ult i8* %zNum.addr.2, %zEnd.0
  br i1 %cmp45248, label %land.rhs47.lr.ph, label %while.end56

land.rhs47.lr.ph:                                 ; preds = %if.end43
  %idx.ext54 = zext i32 %incr.0 to i64
  br label %land.rhs47

land.rhs47:                                       ; preds = %while.body53, %land.rhs47.lr.ph
  %zNum.addr.3249 = phi i8* [ %zNum.addr.2, %land.rhs47.lr.ph ], [ %add.ptr55, %while.body53 ]
  %7 = load i8, i8* %zNum.addr.3249, align 1, !tbaa !10
  %cmp50 = icmp eq i8 %7, 48
  br i1 %cmp50, label %while.body53, label %while.end56

while.body53:                                     ; preds = %land.rhs47
  %add.ptr55 = getelementptr inbounds i8, i8* %zNum.addr.3249, i64 %idx.ext54
  %cmp45 = icmp ult i8* %add.ptr55, %zEnd.0
  br i1 %cmp45, label %land.rhs47, label %while.end56

while.end56:                                      ; preds = %while.body53, %land.rhs47, %if.end43
  %zNum.addr.3.lcssa = phi i8* [ %zNum.addr.2, %if.end43 ], [ %add.ptr55, %while.body53 ], [ %zNum.addr.3249, %land.rhs47 ]
  %cmp60238 = icmp ult i8* %zNum.addr.3.lcssa, %zEnd.0
  br i1 %cmp60238, label %land.end70.preheader, label %for.end77.thread

for.end77.thread:                                 ; preds = %while.end56
  %tobool81272 = icmp eq i32 %neg.0, 0
  br i1 %tobool81272, label %if.end88, label %if.then84

land.end70.preheader:                             ; preds = %while.end56
  %8 = zext i32 %incr.0 to i64
  br label %land.end70

land.end70:                                       ; preds = %for.body71, %land.end70.preheader
  %indvars.iv264 = phi i64 [ 0, %land.end70.preheader ], [ %indvars.iv.next265, %for.body71 ]
  %arrayidx59241 = phi i8* [ %zNum.addr.3.lcssa, %land.end70.preheader ], [ %arrayidx59, %for.body71 ]
  %i.1240 = phi i32 [ 0, %land.end70.preheader ], [ %add76, %for.body71 ]
  %u.0239 = phi i64 [ 0, %land.end70.preheader ], [ %sub74, %for.body71 ]
  %9 = load i8, i8* %arrayidx59241, align 1, !tbaa !10
  %.off = add i8 %9, -48
  %10 = icmp ult i8 %.off, 10
  br i1 %10, label %for.body71, label %for.end77.split.loop.exit

for.body71:                                       ; preds = %land.end70
  %mul = mul i64 %u.0239, 10
  %conv72288 = zext i8 %9 to i64
  %add73 = add i64 %mul, -48
  %sub74 = add i64 %add73, %conv72288
  %indvars.iv.next265 = add i64 %indvars.iv264, %8
  %add76 = add nuw nsw i32 %i.1240, %incr.0
  %arrayidx59 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next265
  %cmp60 = icmp ult i8* %arrayidx59, %zEnd.0
  br i1 %cmp60, label %land.end70, label %for.end77

for.end77.split.loop.exit:                        ; preds = %land.end70
  %11 = trunc i64 %indvars.iv264 to i32
  br label %for.end77

for.end77:                                        ; preds = %for.end77.split.loop.exit, %for.body71
  %u.0.lcssa = phi i64 [ %u.0239, %for.end77.split.loop.exit ], [ %sub74, %for.body71 ]
  %i.1.lcssa = phi i32 [ %11, %for.end77.split.loop.exit ], [ %add76, %for.body71 ]
  %cmp60.lcssa = phi i1 [ true, %for.end77.split.loop.exit ], [ false, %for.body71 ]
  %cmp78 = icmp slt i64 %u.0.lcssa, 0
  %tobool81 = icmp ne i32 %neg.0, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %for.end77
  %cond = select i1 %tobool81, i64 -9223372036854775808, i64 9223372036854775807
  br label %if.end88

if.else82:                                        ; preds = %for.end77
  br i1 %tobool81, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.else82, %for.end77.thread
  %u.0.lcssa273286 = phi i64 [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %i.1.lcssa275284 = phi i32 [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  %cmp60.lcssa277282 = phi i1 [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %sub85 = sub nsw i64 0, %u.0.lcssa273286
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.else82, %if.then80, %for.end77.thread
  %sub85.sink = phi i64 [ %sub85, %if.then84 ], [ %cond, %if.then80 ], [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %tobool81279 = phi i1 [ true, %if.then84 ], [ %tobool81, %if.then80 ], [ false, %for.end77.thread ], [ false, %if.else82 ]
  %cmp60.lcssa276 = phi i1 [ %cmp60.lcssa277282, %if.then84 ], [ %cmp60.lcssa, %if.then80 ], [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %i.1.lcssa274 = phi i32 [ %i.1.lcssa275284, %if.then84 ], [ %i.1.lcssa, %if.then80 ], [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  store i64 %sub85.sink, i64* %pNum, align 8, !tbaa !16
  %cmp89 = icmp eq i32 %i.1.lcssa274, 0
  %cmp92 = icmp eq i8* %zNum.addr.2, %zNum.addr.3.lcssa
  %or.cond = and i1 %cmp92, %cmp89
  br i1 %or.cond, label %if.end120, label %if.else95

if.else95:                                        ; preds = %if.end88
  %tobool96 = icmp ne i32 %nonNum.0, 0
  %cmp60.not = xor i1 %cmp60.lcssa276, true
  %brmerge = or i1 %tobool96, %cmp60.not
  br i1 %brmerge, label %if.end120, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else95
  %12 = zext i32 %i.1.lcssa274 to i64
  %13 = zext i32 %incr.0 to i64
  br label %do.body

do.body:                                          ; preds = %if.end112, %do.body.preheader
  %indvars.iv = phi i64 [ %12, %do.body.preheader ], [ %indvars.iv.next, %if.end112 ]
  %arrayidx105 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %idxprom106 = zext i8 %14 to i64
  %arrayidx107 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom106
  %15 = load i8, i8* %arrayidx107, align 1, !tbaa !10
  %16 = and i8 %15, 1
  %tobool110 = icmp eq i8 %16, 0
  br i1 %tobool110, label %if.end120, label %if.end112

if.end112:                                        ; preds = %do.body
  %indvars.iv.next = add i64 %indvars.iv, %13
  %arrayidx115 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next
  %cmp116 = icmp ult i8* %arrayidx115, %zEnd.0
  br i1 %cmp116, label %do.body, label %if.end120

if.end120:                                        ; preds = %if.end112, %do.body, %if.else95, %if.end88
  %rc.1 = phi i32 [ -1, %if.end88 ], [ %nonNum.0, %if.else95 ], [ 1, %do.body ], [ 0, %if.end112 ]
  %mul121 = mul nuw nsw i32 %incr.0, 19
  %cmp122 = icmp ult i32 %i.1.lcssa274, %mul121
  br i1 %cmp122, label %cleanup, label %if.else125

if.else125:                                       ; preds = %if.end120
  %cmp127 = icmp ugt i32 %i.1.lcssa274, %mul121
  br i1 %cmp127, label %if.else133.thread, label %cond.false

if.else133.thread:                                ; preds = %if.else125
  %cond135233 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135233, i64* %pNum, align 8, !tbaa !16
  br label %cleanup

cond.false:                                       ; preds = %if.else125
  %17 = zext i32 %incr.0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %cond.false
  %indvars.iv.i = phi i64 [ 0, %cond.false ], [ %indvars.iv.next.i, %for.body.i ]
  %18 = mul nuw nsw i64 %indvars.iv.i, %17
  %arrayidx.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %18
  %19 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = sext i8 %19 to i32
  %arrayidx3.i = getelementptr inbounds [19 x i8], [19 x i8]* @.str.33, i64 0, i64 %indvars.iv.i
  %20 = load i8, i8* %arrayidx3.i, align 1, !tbaa !10
  %conv4.i = sext i8 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp eq i32 %sub.i, 0
  %cmp1.i = icmp ult i64 %indvars.iv.i, 17
  %21 = and i1 %cmp1.i, %cmp.i
  br i1 %21, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i
  %mul5.i = mul nsw i32 %sub.i, 10
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %for.end.i
  %mul8.i = mul nuw nsw i32 %incr.0, 18
  %idxprom9.i = zext i32 %mul8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %idxprom9.i
  %22 = load i8, i8* %arrayidx10.i, align 1, !tbaa !10
  %conv11.i = sext i8 %22 to i32
  %sub12.i = add nsw i32 %conv11.i, -56
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %for.end.i
  %cond129 = phi i32 [ %sub12.i, %if.then.i ], [ %mul5.i, %for.end.i ]
  %cmp130 = icmp slt i32 %cond129, 0
  br i1 %cmp130, label %cleanup, label %if.else133

if.else133:                                       ; preds = %cond.end
  %cond135 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135, i64* %pNum, align 8, !tbaa !16
  %cmp136 = icmp eq i32 %cond129, 0
  %cond144 = select i1 %tobool81279, i32 %rc.1, i32 3
  %spec.select236 = select i1 %cmp136, i32 %cond144, i32 2
  ret i32 %spec.select236

cleanup:                                          ; preds = %cond.end, %if.else133.thread, %if.end120
  %23 = phi i32 [ 2, %if.else133.thread ], [ %rc.1, %cond.end ], [ %rc.1, %if.end120 ]
  ret i32 %23
}

; Function Attrs: noinline nounwind ssp uwtable
declare double @memRealValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeReleaseAndSetInt64(%struct.sqlite3_value*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeClrCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @valueToText(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @valueNew(%struct.sqlite3*, %struct.ValueNewStat4Ctx* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @valueFromExpr(%struct.sqlite3*, %struct.Expr* nocapture readonly, i8 zeroext, i8 zeroext, %struct.sqlite3_value** nocapture, %struct.ValueNewStat4Ctx* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MPrintf(%struct.sqlite3*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMemNumerify(%struct.sqlite3_value* nocapture) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @valueBytes(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @growOpArray(%struct.Vdbe* nocapture, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @growOp3(%struct.Vdbe* nocapture, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp3(%struct.Vdbe*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @resizeResolveLabel(%struct.Parse* nocapture, %struct.Vdbe* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @resolveP2Values(%struct.Vdbe* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeEphemeralFunction(%struct.sqlite3*, %struct.FuncDef*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4Mem(%struct.sqlite3*, %struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4FuncCtx(%struct.sqlite3*, %struct.sqlite3_context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @freeP4(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeFreeOpArray(%struct.sqlite3*, %struct.VdbeOp*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeChangeP4Full(%struct.Vdbe* nocapture readonly, %struct.VdbeOp*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeChangeP4(%struct.Vdbe*, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @displayP4(%struct.VdbeOp* nocapture readonly, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeLeave(%struct.Vdbe* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @initMemArray(%struct.sqlite3_value* nocapture, i32, %struct.sqlite3*, i16 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @releaseMemArray(%struct.sqlite3_value*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @allocSpace(%struct.ReusableSpace* nocapture, i8* readnone, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @closeCursorsInFrame(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @closeAllCursors(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFrameRestore(%struct.VdbeFrame* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCommit(%struct.sqlite3*, %struct.Vdbe* nocapture readnone) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeCloseStatement(%struct.Vdbe* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSavepoint(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @handleMovedCursor(%struct.VdbeCursor* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @serialGet(i8* nocapture readonly, i32, %struct.sqlite3_value*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCompareMemString(%struct.sqlite3_value*, %struct.sqlite3_value*, %struct.CollSeq* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isAllZero(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @vdbeRecordDecodeInt(i32, i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareInt(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompare(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompareWithSkip(i32, i8*, %struct.UnpackedRecord*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareString(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_expired(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafety(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafetyNotNull(%struct.Vdbe* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_finalize(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_reset(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeReset(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_clear_bindings(%struct.sqlite3_stmt* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_blob(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_int(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_subtype(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_value_pointer(%struct.sqlite3_value* nocapture readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16be(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16le(%struct.sqlite3_value*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_nochange(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_frombind(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_value_dup(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_value_free(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @setResultStrOrError(%struct.sqlite3_context* nocapture, i8*, i32, i8 zeroext, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @invokeValueDestructor(i8*, void (i8*)*, %struct.sqlite3_context*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error16(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_null(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_pointer(%struct.sqlite3_context* nocapture readonly, i8*, i8*, void (i8*)*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_result_subtype(%struct.sqlite3_context* nocapture readonly, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16be(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16le(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_value(%struct.sqlite3_context* nocapture readonly, %struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_zeroblob(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_result_zeroblob64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_code(%struct.sqlite3_context* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @doWalCallbacks(%struct.sqlite3*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_step(%struct.sqlite3_stmt*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_user_data(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_vtab_nochange(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @createAggContext(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_aggregate_context(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_get_auxdata(%struct.sqlite3_context* nocapture readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_auxdata(%struct.sqlite3_context* nocapture, i32, i8*, void (i8*)*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_aggregate_count(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_column_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_data_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_value* @columnNullValue() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @columnMem(%struct.sqlite3_stmt* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @columnMallocFailure(%struct.sqlite3_stmt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_blob(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_column_double(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_int(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_column_int64(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_column_value(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_type(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @columnName(%struct.sqlite3_stmt* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeUnbind(%struct.Vdbe*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @bindText(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_null(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_pointer(%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_value(%struct.sqlite3_stmt*, i32, %struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_bind_parameter_name(%struct.sqlite3_stmt* readonly, i32) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_index(%struct.sqlite3_stmt* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_transfer_bindings(%struct.sqlite3_stmt* nocapture, %struct.sqlite3_stmt* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_db_handle(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_readonly(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_isexplain(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_busy(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_stmt* @sqlite3_next_stmt(%struct.sqlite3* nocapture readonly, %struct.sqlite3_stmt* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_stmt_status(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_sql(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare noalias i8* @sqlite3_expanded_sql(%struct.sqlite3_stmt* nocapture readnone) #11

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define i32 @alsoAnInt(%struct.sqlite3_value* nocapture readonly %pRec, double %rValue, i64* nocapture %piValue) local_unnamed_addr #2 {
entry:
  %conv = fptosi double %rValue to i64
  %cmp.i = fcmp oeq double %rValue, 0.000000e+00
  br i1 %cmp.i, label %if.then, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %entry
  %conv.i = sitofp i64 %conv to double
  %0 = bitcast double %conv.i to i64
  %1 = bitcast double %rValue to i64
  %2 = icmp ne i64 %1, %0
  %conv.off = add i64 %conv, 2251799813685248
  %3 = icmp ugt i64 %conv.off, 4503599627370495
  %4 = or i1 %3, %2
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.rhs.i, %entry
  store i64 %conv, i64* %piValue, align 8, !tbaa !16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %5 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %6 = load i32, i32* %n, align 4, !tbaa !29
  %enc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %7 = load i8, i8* %enc, align 2, !tbaa !21
  %call1 = call i32 @sqlite3Atoi64(i8* %5, i64* %piValue, i32 %6, i8 zeroext %7)
  %cmp = icmp eq i32 %call1, 0
  %conv2 = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %conv2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_numeric_type(%struct.sqlite3_value* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @out2Prerelease(%struct.Vdbe* nocapture readonly, %struct.VdbeOp* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobSeekToRow(%struct.Incrblob* nocapture, i64, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeExec(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_open(%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorMsg(%struct.Parse* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMakeReady(%struct.Vdbe*, %struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_close(%struct.sqlite3_blob*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobReadWrite(%struct.sqlite3_blob*, i8*, i32, i32, i32 (%struct.BtCursor*, i32, i32, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_read(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePayloadChecked(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_write(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePutData(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_blob_bytes(%struct.sqlite3_blob* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_reopen(%struct.sqlite3_blob*, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaReaderClear(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeIncrFree(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadBlob(%struct.PmaReader* nocapture, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadVarint(%struct.PmaReader* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMapFile(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderSeek(%struct.SortSubtask* nocapture readonly, %struct.PmaReader*, %struct.SorterFile* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderNext(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrSwap(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderInit(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i64, %struct.PmaReader*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareTail(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompare(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareText(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareInt(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterRecordFree(%struct.sqlite3*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSortSubtaskCleanup(%struct.sqlite3*, %struct.SortSubtask*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinThread(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCreateThread(%struct.SortSubtask* nocapture, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinAll(%struct.VdbeSorter* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MergeEngine* @vdbeMergeEngineNew(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineFree(%struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterExtendFile(%struct.sqlite3* nocapture readonly, %struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterOpenTempFile(%struct.sqlite3* nocapture readonly, i64, %struct.sqlite3_file** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSortAllocUnpacked(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SorterRecord* @vdbeSorterMerge(%struct.SortSubtask*, %struct.SorterRecord*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)* @vdbeSorterGetCompare(%struct.VdbeSorter* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSort(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriterInit(%struct.sqlite3_file*, %struct.PmaWriter*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteBlob(%struct.PmaWriter* nocapture, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaWriterFinish(%struct.PmaWriter*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteVarint(%struct.PmaWriter* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterListToPMA(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineStep(%struct.MergeEngine* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeSorterFlushThread(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterFlushPMA(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrPopulate(%struct.IncrMerger* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeIncrPopulateThread(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrBgPopulate(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrMergerNew(%struct.SortSubtask*, %struct.MergeEngine*, %struct.IncrMerger** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vdbeIncrMergerSetThreads(%struct.IncrMerger* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineCompare(%struct.MergeEngine* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineInit(%struct.SortSubtask*, %struct.MergeEngine* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrMergeInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbePmaReaderBgIncrInit(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineLevel0(%struct.SortSubtask* nocapture readonly, i32, i64* nocapture, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @vdbeSorterTreeDepth(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterAddToTree(%struct.SortSubtask*, i32, i32, %struct.MergeEngine* nocapture readonly, %struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMergeTreeBuild(%struct.VdbeSorter*, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSetupMerge(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @vdbeSorterRowkey(%struct.VdbeSorter* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @memjrnlRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #8

; Function Attrs: nounwind ssp uwtable
declare void @memjrnlFreeChunks(%struct.MemJournal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlCreateFile(%struct.MemJournal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlWrite(%struct.sqlite3_file*, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlClose(%struct.sqlite3_file* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @memjrnlSync(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @memjrnlFileSize(%struct.sqlite3_file* nocapture readonly, i64* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @walkWindowList(%struct.Walker*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walkExpr(%struct.Walker*, %struct.Expr*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelect(%struct.Walker*, %struct.Select*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @incrAggDepth(%struct.Walker* nocapture readonly, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @incrAggFunctionDepth(%struct.Expr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveAlias(%struct.Parse* nocapture readonly, %struct.ExprList* nocapture readonly, i32, %struct.Expr*, i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nameInUsingClause(%struct.IdList* readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @areDoubleQuotedStringsEnabled(%struct.sqlite3* nocapture readonly, %struct.NameContext* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @lookupName(%struct.Parse*, i8*, i8*, i8*, %struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3MatchEName(%struct.ExprList_item* nocapture readonly, i8* readonly, i8* readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @notValidImpl(%struct.Parse* nocapture, %struct.NameContext* nocapture readonly, i8*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprProbability(%struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveExprStep(%struct.Walker*, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.FuncDef* @sqlite3FindFunction(%struct.sqlite3*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @resolveAsName(%struct.Parse* nocapture readnone, %struct.ExprList* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderByTermToExprList(%struct.Parse*, %struct.Select* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCompare(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveOutOfRangeError(%struct.Parse* nocapture, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveCompoundOrderBy(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprIsInteger(%struct.Expr* readonly, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @resolveRemoveWindowsCb(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare void @windowRemoveExprFromSelect(%struct.Select*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderGroupBy(%struct.NameContext*, %struct.Select*, %struct.ExprList*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ResolveOrderGroupBy(%struct.Parse* nocapture, %struct.Select* nocapture readonly, %struct.ExprList* readonly, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveSelectStep(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectPrep(%struct.Parse*, %struct.Select*, %struct.NameContext*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare signext i8 @comparisonAffinity(%struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local signext i8 @sqlite3ExprAffinity(%struct.Expr* nocapture readonly) unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare zeroext i8 @binaryCompareP5(%struct.Expr* nocapture readonly, %struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @codeCompare(%struct.Parse* nocapture, %struct.Expr*, %struct.Expr*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp4(%struct.Vdbe*, i32, i32, i32, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeSubselect(%struct.Parse*, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CodeSubselect(%struct.Parse*, %struct.Expr* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprVectorRegister(%struct.Parse*, %struct.Expr*, i32, i32, %struct.Expr** nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTemp(%struct.Parse*, %struct.Expr*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeVectorCompare(%struct.Parse*, %struct.Expr* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExpr(%struct.Expr* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExprList(%struct.ExprList* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfSelect(%struct.Select* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @exprSetHeight(%struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @exprStructSize(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @dupedExprStructSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprNodeSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprSize(%struct.Expr* readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprDup(%struct.sqlite3*, %struct.Expr*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectDup(%struct.sqlite3*, %struct.Select* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListDup(%struct.sqlite3*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowDup(%struct.sqlite3*, %struct.Expr*, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.With* @withDup(%struct.sqlite3*, %struct.With* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @gatherSelectWindowsCallback(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @gatherSelectWindowsSelectCallback(%struct.Walker* nocapture readonly, %struct.Select* readnone) #7

; Function Attrs: nounwind ssp uwtable
declare void @gatherSelectWindows(%struct.Select*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @exprListDeleteNN(%struct.sqlite3*, %struct.ExprList*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsConstant(%struct.Walker* nocapture, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsConst(%struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare dso_local i32 @sqlite3SelectWalkFail(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #10

; Function Attrs: nounwind ssp uwtable
declare i32 @exprNodeIsConstantOrGroupBy(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @isCandidateForInOpt(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i8* @exprINAffinity(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeReal(%struct.Vdbe* nocapture, i8* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeInteger(%struct.Parse* nocapture, %struct.Expr* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3DecOrHexToI64(i8* readonly, i64*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @exprToRegister(%struct.Expr*, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeVector(%struct.Parse*, %struct.Expr*, i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDoNotMergeFlagOnCopy(%struct.Vdbe* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeInlineFunction(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCode(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTarget(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesExpr(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesNonNullRow(%struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprCodeBetween(%struct.Parse*, %struct.Expr* nocapture readonly, i32, void (%struct.Parse*, %struct.Expr*, i32, i32)*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCompareVariable(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprImpliesNotNull(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @impliesNotNullRow(%struct.Walker*, %struct.Expr* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprIdxCover(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprSrcCount(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoColumn(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoFunc(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeAggregate(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @analyzeAggregatesInSelect(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @analyzeAggregatesInSelectEnd(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @isAlterableTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTestSchema(%struct.Parse*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3NestedParse(%struct.Parse*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameReloadSchema(%struct.Parse* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @isRealTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameUnmapExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readnone) #15

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkWith(%struct.Walker*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameUnmapSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTokenFree(%struct.sqlite3*, %struct.RenameToken*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameTokenFind(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, i8* readnone) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameColumnSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameColumnExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.RenameToken* @renameColumnTokenNext(%struct.RenameCtx* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnParseError(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnElistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.ExprList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnIdlistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.IdList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameParseSql(%struct.Parse*, i8* readonly, %struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3RunParser(%struct.Parse*, i8*, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameEditSql(%struct.sqlite3_context* nocapture, %struct.RenameCtx* nocapture, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameResolveTrigger(%struct.Parse*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local %struct.Table* @sqlite3FindTable(%struct.sqlite3* nocapture readonly, i8* nocapture readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ViewGetColumnNames(%struct.Parse*, %struct.Table* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkTrigger(%struct.Walker*, %struct.Trigger* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameParseCleanup(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameTableExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameTableSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableTest(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @openStatTable(%struct.Parse*, i32, i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableLock(%struct.Parse* nocapture, i32, i32, i8 zeroext, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @statAccumDestructor(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @statInit(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statPush(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statGet(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @callStatGet(%struct.Parse* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeOneTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readnone, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strlike(i8* readonly, i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3OpenTable(%struct.Parse*, i32, i32, %struct.Table* nocapture readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @loadAnalysis(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeDatabase(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @decodeIntArray(i8* readonly, i32, i32* nocapture readnone, i16* nocapture, %struct.Index* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strglob(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @analysisLoader(i8* nocapture readonly, i32, i8** readonly, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveAttachExpr(%struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @attachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ParseUri(i8*, i8*, i32* nocapture, %struct.sqlite3_vfs** nocapture, i8** nocapture, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Schema* @sqlite3SchemaGet(%struct.sqlite3*, %struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeSetPagerFlags(%struct.Btree* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_filename(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeClose(%struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @detachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CollapseDatabaseArray(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeAttach(%struct.Parse*, i32, %struct.FuncDef*, %struct.Expr* readonly, %struct.Expr*, %struct.Expr*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_set_authorizer(%struct.sqlite3* nocapture, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteAuthBadReturnCode(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeTableLocks(%struct.Parse*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @deleteTable(%struct.sqlite3*, %struct.Table*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3HashInsert(%struct.Hash* nocapture, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @makeColumnPartOfPrimaryKey(%struct.Parse* nocapture, %struct.Column* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @identLength(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @identPut(i8* nocapture, i32* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @createTableStmt(%struct.sqlite3*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resizeIndexObject(%struct.sqlite3*, %struct.Index* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateTableWidth(%struct.Table* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateIndexWidth(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @hasColumn(i16* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isDupColumn(%struct.Index* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @recomputeColumnsNotIndexed(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @convertToWithoutRowidTable(%struct.Parse*, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppend(%struct.sqlite3*, %struct.ExprList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprAlloc(%struct.sqlite3*, i32, %struct.Token* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateIndex(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.SrcList*, %struct.ExprList*, i32, %struct.Token* readnone, %struct.Expr*, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteViewResetAll(%struct.sqlite3*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyRootPage(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyTable(%struct.Parse*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tableMayNotBeDropped(%struct.sqlite3* nocapture readnone, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @collationMatch(i8* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @reindexTable(%struct.Parse*, %struct.Table* nocapture readonly, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RefillIndex(%struct.Parse*, %struct.Index* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @reindexDatabases(%struct.Parse*, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @callCollNeeded(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @synthCollSeq(%struct.sqlite3* nocapture readonly, %struct.CollSeq*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @findCollSeqEntry(%struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @matchQuality(%struct.FuncDef* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tabIsReadOnly(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @minmaxFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @typeofFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lengthFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @absFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @instrFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @printfFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value**) #3

; Function Attrs: nounwind ssp uwtable
declare void @substrFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @roundFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @contextMalloc(%struct.sqlite3_context* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @upperFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lowerFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomBlob(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_insert_rowid(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @sqlite3_last_insert_rowid(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @total_changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_total_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @patternCompare(i8*, i8*, %struct.compareInfo* readonly, i32) local_unnamed_addr #18

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare void @likeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nullifFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @versionFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_libversion() #11

; Function Attrs: nounwind ssp uwtable
declare void @sourceidFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_sourceid() #11

; Function Attrs: nounwind ssp uwtable
declare void @errlogFunc(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @compileoptionusedFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_compileoption_used(i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare void @compileoptiongetFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readnone ssp uwtable
declare i8* @sqlite3_compileoption_get(i32) #23

; Function Attrs: nounwind ssp uwtable
declare void @quoteFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @unicodeFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @charFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @hexFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroblobFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @replaceFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @trimFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @loadExt(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_load_extension(%struct.sqlite3*, i8*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @avgFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @totalFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minmaxStep(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValueFinalize(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValue(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatValue(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @fkLookupParent(%struct.Parse*, i32, %struct.Table* readonly, %struct.Index*, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3IndexAffinityStr(%struct.sqlite3*, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableRegister(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableColumn(%struct.sqlite3*, %struct.Table*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkScanChildren(%struct.Parse*, %struct.SrcList*, %struct.Table*, %struct.Index* readonly, %struct.FKey* nocapture readonly, i32* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3PExpr(%struct.Parse* nocapture, i32, %struct.Expr*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.WhereInfo* @sqlite3WhereBegin(%struct.Parse*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.ExprList*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereEnd(%struct.WhereInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkTriggerDelete(%struct.sqlite3*, %struct.Trigger*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkChildIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkParentIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isSetNullAction(%struct.Parse* nocapture readonly, %struct.FKey* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.Trigger* @fkActionTrigger(%struct.Parse*, %struct.Table* nocapture readonly, %struct.FKey* nocapture, %struct.ExprList* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkLocateIndex(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, %struct.Index** nocapture, i32**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectNew(%struct.Parse* nocapture, %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, i32, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppend(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token* readonly, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readsTable(%struct.Parse*, i32, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprColumnFlagUnion(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @autoIncBegin(%struct.Parse* nocapture, i32, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @autoIncStep(%struct.Parse* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @autoIncrementEnd(%struct.Parse*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @checkConstraintExprNode(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @xferCompatibleIndex(%struct.Index* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @xferOptimization(%struct.Parse*, %struct.Table*, %struct.Select* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_exec(%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_enable_load_extension(%struct.sqlite3* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_auto_extension(void ()*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_cancel_auto_extension(void ()* readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_reset_auto_extension() #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @getSafetyLevel(i8* readonly, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getLockingMode(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAutoVacuum(i8* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getTempStore(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @invalidateTempStorage(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @changeTempStorage(%struct.Parse* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setPragmaResultColumnNames(%struct.Vdbe* nocapture, %struct.PragmaName* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleInt(%struct.Vdbe*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleText(%struct.Vdbe* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setAllPagerFlags(%struct.sqlite3* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @actionName(i8 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.PragmaName* @pragmaLocate(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pragmaFunclistLine(%struct.Vdbe* nocapture, %struct.FuncDef* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMultiLoad(%struct.Vdbe* nocapture, i32, i8* nocapture readonly, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @integrityCheckResultRow(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @corruptSchema(%struct.InitData* nocapture, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @schemaIsValid(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3LockAndPrepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare16(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @clearSelect(%struct.sqlite3*, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SrcListDelete(%struct.sqlite3*, %struct.SrcList*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @findRightmost(%struct.Select* readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @columnIndex(%struct.Table* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @tableAndColumnIndex(%struct.SrcList* nocapture readonly, i32, i8* nocapture readonly, i32*, i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @addWhereTerm(%struct.Parse* nocapture, %struct.SrcList* nocapture, i32, i32, i32, i32, i32, %struct.Expr** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @unsetJoinExpr(%struct.Expr*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteProcessJoin(%struct.Parse* nocapture, %struct.Select* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SetJoinExpr(%struct.Expr*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @innerLoopLoadRow(%struct.Parse*, %struct.Select* nocapture readonly, %struct.RowLoadInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeExprList(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @makeSorterRecord(%struct.Parse*, %struct.SortCtx* nocapture readonly, %struct.Select* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pushOntoSorter(%struct.Parse*, %struct.SortCtx* nocapture, %struct.Select* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeOffset(%struct.Vdbe* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeDistinct(%struct.Parse* nocapture, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @selectInnerLoop(%struct.Parse*, %struct.Select* nocapture readonly, i32, %struct.SortCtx*, %struct.DistinctCtx* readonly, %struct.SelectDest* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3ExprCollSeq(%struct.Parse* nocapture, %struct.Expr* readonly) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @selectOpName(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @explainTempTable(%struct.Parse* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeExplain(%struct.Parse* nocapture, i8 zeroext, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateSortTail(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SortCtx* nocapture readonly, i32, %struct.SelectDest* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @columnTypeImpl(%struct.NameContext*, %struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnTypes(%struct.Parse*, %struct.SrcList*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnNames(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @computeLimitRegisters(%struct.Parse*, %struct.Select* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @multiSelectCollSeq(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.KeyInfo* @multiSelectOrderByKeyInfo(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateWithRecursiveQuery(%struct.Parse*, %struct.Select*, %struct.SelectDest*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Select(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectValues(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelect(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectOrderBy(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @generateOutputSubroutine(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SelectDest* nocapture readonly, %struct.SelectDest* nocapture, i32, i32, %struct.KeyInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @substExpr(%struct.SubstContext* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substSelect(%struct.SubstContext* nocapture readonly, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substExprList(%struct.SubstContext*, %struct.ExprList*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flattenSubquery(%struct.Parse*, %struct.Select*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListEnlarge(%struct.Parse* nocapture, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @constInsert(%struct.WhereConst* nocapture, %struct.Expr*, %struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @findConstInWhere(%struct.WhereConst*, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstantExprRewrite(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstants(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3SelectWalkNoop(%struct.Walker* nocapture readnone, %struct.Select* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @pushDownWhereTerms(%struct.Parse*, %struct.Select*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @minMaxQuery(%struct.sqlite3*, %struct.Expr* nocapture readonly, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @isSimpleCount(%struct.Select* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @convertCompoundSelectToSubquery(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppendFromTerm(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token*, %struct.Token*, %struct.Token* readonly, %struct.Select*, %struct.Expr*, %struct.IdList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @cannotBeFunction(%struct.Parse* nocapture, %struct.SrcList_item* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.Cte* @searchWith(%struct.With*, %struct.SrcList_item* nocapture readonly, %struct.With** nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @withExpand(%struct.Walker*, %struct.SrcList_item* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ColumnsFromExprList(%struct.sqlite3*, %struct.ExprList* readonly, i16* nocapture, %struct.Column** nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @selectPopWith(%struct.Walker* nocapture readonly, %struct.Select* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @selectExpander(%struct.Walker*, %struct.Select* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SrcListAssignCursors(%struct.Parse* nocapture, %struct.SrcList*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @selectAddSubqueryTypeInfo(%struct.Walker* nocapture readonly, %struct.Select* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectAddColumnTypeAndCollation(%struct.Parse* nocapture, %struct.Table* nocapture, %struct.Select* nocapture readonly, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resetAccumulator(%struct.Parse* nocapture, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @finalizeAggFunctions(%struct.Parse* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @updateAccumulator(%struct.Parse*, i32, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfFalse(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @explainSimpleCount(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @havingToWhereExprCb(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @havingToWhere(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList_item* @isSelfJoinView(%struct.SrcList* readonly, %struct.SrcList_item* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table_cb(i8* nocapture, i32, i8** readonly, i8** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table(%struct.sqlite3*, i8*, i8*** nocapture, i32*, i32*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_table(i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @triggerSpanDup(%struct.sqlite3*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerStep* @triggerStepAllocate(%struct.Parse* nocapture, i8 zeroext, %struct.Token* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @tableOfTrigger(%struct.Trigger* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @checkColumnOverlap(%struct.IdList* readonly, %struct.ExprList* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList* @targetSrcList(%struct.Parse* nocapture readonly, %struct.TriggerStep* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeTriggerProgram(%struct.Parse*, %struct.TriggerStep* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Update(%struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.Expr*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Insert(%struct.Parse*, %struct.SrcList*, %struct.Select*, %struct.IdList*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListDup(%struct.sqlite3*, %struct.IdList* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteFrom(%struct.Parse*, %struct.SrcList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @transferParseError(%struct.Parse* nocapture, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @codeRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeDelete(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @getRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexColumnIsBeingUpdated(%struct.Index* nocapture readonly, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexWhereClauseMightChange(%struct.Index* nocapture readonly, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSql(%struct.sqlite3*, i8** nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSqlF(%struct.sqlite3*, i8** nocapture, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @explainIndexColumnName(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @explainAppendTerm(%struct.sqlite3_str*, %struct.Index* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @explainIndexRange(%struct.sqlite3_str*, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableTerm(%struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeApplyAffinity(%struct.Parse* nocapture readonly, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @updateRangeAffinityStr(%struct.Expr* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @removeUnindexableInClauseTerms(%struct.Parse* nocapture readonly, i32, %struct.WhereLoop* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeEqualityTerm(%struct.Parse*, %struct.WhereTerm* nocapture, %struct.WhereLevel* nocapture, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindInIndex(%struct.Parse*, %struct.Expr*, i32, i32*, i32*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeAllEqualityTerms(%struct.Parse*, %struct.WhereLevel*, i32, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLikeOptimizationStringFixup(%struct.Vdbe* nocapture readonly, %struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeDeferredSeek(%struct.WhereInfo* nocapture, %struct.Index* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeExprOrVector(%struct.Parse*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @preserveExpr(%struct.IdxExprTrans* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransNode(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransColumn(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @whereIndexExprTrans(%struct.Index* nocapture readonly, i32, i32, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereApplyPartialIndexConstraints(%struct.Expr* readonly, i32, %struct.WhereClause* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereOrInfoDelete(%struct.sqlite3*, %struct.WhereOrInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereClauseClear(%struct.WhereClause* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereAndInfoDelete(%struct.sqlite3*, %struct.WhereAndInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereClauseInsert(%struct.WhereClause*, %struct.Expr*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @allowedOp(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @exprCommute(%struct.Parse* nocapture, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @operatorMask(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @isLikeOrGlob(%struct.Parse*, %struct.Expr* nocapture readonly, %struct.Expr** nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @transferJoinMarkings(%struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @markTermAsChild(%struct.WhereClause* nocapture readonly, i32, i32) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereTerm* @whereNthSubterm(%struct.WhereTerm* readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @whereCombineDisjuncts(%struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.WhereTerm* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyze(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyzeOrTerm(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereSplit(%struct.WhereClause*, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @termIsEquivalence(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i64 @exprSelectUsage(%struct.WhereMaskSet* nocapture, %struct.Select* readonly) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @exprMightBeIndexed2(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @exprMightBeIndexed(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCheckIN(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereExprUsageNN(%struct.WhereMaskSet* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @whereOrMove(%struct.WhereOrSet*, %struct.WhereOrSet*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereOrInsert(%struct.WhereOrSet* nocapture, i64, i16 signext, i16 signext) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @createMask(%struct.WhereMaskSet* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanNext(%struct.WhereScan* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInitIndexExpr(%struct.WhereScan* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInit(%struct.WhereScan* nocapture, %struct.WhereClause*, i32, i32, i32, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findIndexCol(%struct.Parse* nocapture, %struct.ExprList* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @indexColumnNotNull(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDistinctRedundant(%struct.Parse* nocapture, %struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare signext i16 @estLog(i16 signext) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @translateColumnToCopy(%struct.Parse* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #15

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @termCanDriveIndex(%struct.WhereTerm* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @constructAutomaticIndex(%struct.Parse*, %struct.WhereClause* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64, %struct.WhereLevel* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopResize(%struct.sqlite3*, %struct.WhereLoop*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GenerateIndexKey(%struct.Parse*, %struct.Index* nocapture, i32, i32, i32, i32*, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereRangeAdjust(%struct.WhereTerm* readonly, i16 signext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereRangeScanEst(%struct.Parse* nocapture readnone, %struct.WhereLoopBuilder* nocapture readnone, %struct.WhereTerm* readonly, %struct.WhereTerm* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @whereLoopInit(%struct.WhereLoop*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClearUnion(%struct.sqlite3*, %struct.WhereLoop* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClear(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopXfer(%struct.sqlite3*, %struct.WhereLoop*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopDelete(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereInfoFree(%struct.sqlite3*, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @whereLoopCheaperProperSubset(%struct.WhereLoop* nocapture readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLoopAdjustCost(%struct.WhereLoop* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereLoop** @whereLoopFindLesser(%struct.WhereLoop** readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopInsert(%struct.WhereLoopBuilder* nocapture, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopOutputAdjust(%struct.WhereClause* nocapture readonly, %struct.WhereLoop* nocapture, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereRangeVectorLen(%struct.Parse* nocapture, i32, %struct.Index* nocapture readonly, i32, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtreeIndex(%struct.WhereLoopBuilder*, %struct.SrcList_item* readonly, %struct.Index* readonly, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexMightHelpWithOrderBy(%struct.WhereLoopBuilder* nocapture readonly, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereUsablePartialIndex(i32, i32, %struct.WhereClause* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtree(%struct.WhereLoopBuilder*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddOr(%struct.WhereLoopBuilder* nocapture, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddAll(%struct.WhereLoopBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare signext i8 @wherePathSatisfiesOrderBy(%struct.WhereInfo*, %struct.ExprList* nocapture readonly, %struct.WherePath* nocapture readonly, i16 zeroext, i16 zeroext, %struct.WhereLoop* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereSortingCost(%struct.WhereInfo* nocapture readonly, i16 signext, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @wherePathSolver(%struct.WhereInfo*, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereShortCut(%struct.WhereLoopBuilder* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsDeterministic(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsDeterministic(%struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopValueFunc(%struct.sqlite3_context* nocapture) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.Window* @windowFind(%struct.Parse* nocapture, %struct.Window*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteExprCb(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteSelectCb(%struct.Walker*, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare void @selectWindowRewriteEList(%struct.Parse*, %struct.Window*, %struct.SrcList*, %struct.ExprList* readonly, %struct.Table*, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.ExprList* @exprListAppendList(%struct.Parse* nocapture readonly, %struct.ExprList*, %struct.ExprList* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCheckValue(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowArgCount(%struct.Window* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowReadPeerValues(%struct.WindowCodeArg* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggStep(%struct.WindowCodeArg* nocapture readonly, %struct.Window* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggFinal(%struct.WindowCodeArg* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowFullScan(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowReturnOneRow(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowInitAccum(%struct.Parse*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowCacheFrame(%struct.Window* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowIfNewPeer(%struct.Parse*, %struct.ExprList* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCodeRangeTest(%struct.WindowCodeArg* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowCodeOp(%struct.WindowCodeArg*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowExprGtZero(%struct.Parse* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableLookaside(%struct.Parse* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @yy_destructor(%struct.yyParser* nocapture readonly, i16 zeroext, %union.YYMINORTYPE* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowDelete(%struct.sqlite3*, %struct.Window*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteTriggerStep(%struct.sqlite3*, %struct.TriggerStep*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_pop_parser_stack(%struct.yyParser* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_shift_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_reduce_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @yyStackOverflow(%struct.yyParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_shift(%struct.yyParser*, i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @yy_reduce(%struct.yyParser*, i32, i32, i8*, i32, %struct.Parse*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3StartTable(%struct.Parse*, %struct.Token*, %struct.Token*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3EndTable(%struct.Parse*, %struct.Token* nocapture readonly, %struct.Token* readonly, i8 zeroext, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddDefaultValue(%struct.Parse*, %struct.Expr*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @tokenExpr(%struct.Parse* nocapture, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddPrimaryKey(%struct.Parse*, %struct.ExprList*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateForeignKey(%struct.Parse* nocapture, %struct.ExprList*, %struct.Token*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddGenerated(%struct.Parse* nocapture, %struct.Expr*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTable(%struct.Parse*, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3JoinType(%struct.Parse* nocapture, %struct.Token*, %struct.Token*, %struct.Token*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppendVector(%struct.Parse*, %struct.ExprList*, %struct.IdList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListAppend(%struct.Parse* nocapture, %struct.IdList*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GetInt32(i8* nocapture readonly, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Vacuum(%struct.Parse*, %struct.Token*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Pragma(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.Token*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Analyze(%struct.Parse*, %struct.Token*, %struct.Token* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.With* @sqlite3WithAdd(%struct.Parse* nocapture, %struct.With*, %struct.Token* readonly, %struct.ExprList*, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowChain(%struct.Parse* nocapture, %struct.Window* nocapture, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowAlloc(%struct.Parse*, i32, i32, %struct.Expr*, i32, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_syntax_error(%struct.yyParser* nocapture, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @yy_accept(%struct.yyParser* nocapture) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @keywordCode(i8* nocapture readonly, i32 returned, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_keyword_name(i32, i8** nocapture, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_keyword_count() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_keyword_check(i8* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getToken(i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local i32 @sqlite3GetToken(i8* readonly, i32*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeWindowKeyword(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeOverKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeFilterKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_complete(i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_complete16(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_libversion_number() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_threadsafe() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_shutdown() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_config(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setupLookaside(%struct.sqlite3*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_db_mutex(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_release_memory(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_cacheflush(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_config(%struct.sqlite3*, i32, ...) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @binCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @rtrimCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nocaseCollatingFunc(i8* nocapture readnone, i32, i8* readonly, i32, i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_last_insert_rowid(%struct.sqlite3* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @functionDestroy(%struct.sqlite3*, %struct.FuncDef* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @disconnectAllVtab(%struct.sqlite3* nocapture) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @connectionIsBusy(%struct.sqlite3* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Close(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close_v2(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteDefaultBusyCallback(i8* nocapture readonly, i32, %struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_handler(%struct.sqlite3* nocapture, i32 (i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_progress_handler(%struct.sqlite3* nocapture, i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_timeout(%struct.sqlite3*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_interrupt(%struct.sqlite3*) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @createFunctionApi(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CreateFunc(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, %struct.FuncDestructor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function_v2(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_window_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function16(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_overload_function(%struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3InvalidFunction(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_commit_hook(%struct.sqlite3* nocapture, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_update_hook(%struct.sqlite3* nocapture, void (i8*, i32, i8*, i8*, i64)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_rollback_hook(%struct.sqlite3* nocapture, void (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_autocheckpoint(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_wal_hook(%struct.sqlite3* nocapture, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalDefaultHook(i8*, %struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint_v2(%struct.sqlite3*, i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Checkpoint(%struct.sqlite3* nocapture readonly, i32, i32, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint(%struct.sqlite3*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg16(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_system_errno(%struct.sqlite3* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_errstr(i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @createCollation(%struct.sqlite3*, i8*, i8 zeroext, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @sqlite3_limit(%struct.sqlite3* nocapture, i32, i32) #15

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @uriParameter(i8* readonly, i8* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @openDatabase(i8*, %struct.sqlite3** nocapture, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open_v2(i8*, %struct.sqlite3** nocapture, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open16(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation_v2(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation16(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed16(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_global_recover() local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_get_autocommit(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @sqlite3_thread_cleanup() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_table_column_metadata(%struct.sqlite3*, i8* readonly, i8*, i8*, i8**, i8**, i32*, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_sleep(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_result_codes(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_file_control(%struct.sqlite3* nocapture readonly, i8* readonly, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_test_control(i32, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @databaseName(i8* readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare nonnull i8* @appendText(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_create_filename(i8*, i8*, i8*, i32, i8** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_key(i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_uri_int64(i8* readonly, i8* readonly, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_filename_database(i8* readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_journal(i8* readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_wal(i8* readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_db_filename(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_db_readonly(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ErrorFinish(%struct.sqlite3* nocapture, i32) unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3BitvecClear(%struct.Bitvec*, i32, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeTripAllCursors(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeCloseCursor(%struct.BtCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeSorterReset(%struct.sqlite3*, %struct.VdbeSorter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeTransferError(%struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RollbackAll(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #24

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3NoopDestructor(i8* nocapture) #11

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFinishMoveto(%struct.VdbeCursor* nocapture) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SchemaClear(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitOne(%struct.sqlite3*, i32, i8**, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitCallback(i8* nocapture, i32, i8**, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AnalysisLoad(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFrameMemDel(i8*) #15

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetJournalMode(%struct.Pager*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3RunVacuum(i8** nocapture, %struct.sqlite3*, i32, %struct.sqlite3_value*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RowSetDelete(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalClose(%struct.Wal*, %struct.sqlite3*, i32, i32, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i32, i8*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetSpillSize(%struct.Btree* nocapture, i32) unnamed_addr #3

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) local_unnamed_addr #12

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelectExpr(%struct.Walker*, %struct.Select* nocapture readonly) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ExprDeleteNN(%struct.sqlite3*, %struct.Expr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListDup(%struct.sqlite3*, %struct.SrcList* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGeneratedColumn(%struct.Parse*, %struct.Column*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeRunJustOnce(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeIN(%struct.Parse*, %struct.Expr*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeCopy(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGetColumnOfTable(%struct.Vdbe* nocapture, %struct.Table* readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3BlobCompare(%struct.sqlite3_value* nocapture readonly, %struct.sqlite3_value* nocapture readonly) unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WindowCompare(%struct.Parse*, %struct.Window* readonly, %struct.Window* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.KeyInfo* @sqlite3KeyInfoOfIndex(%struct.Parse* nocapture, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3PagerClose(%struct.Pager*, %struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AuthReadCol(%struct.Parse* nocapture, i8*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ReadSchema(%struct.Parse*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Table* @sqlite3ResultSetOfSelect(%struct.Parse*, %struct.Select*, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSrcList(%struct.DbFixer* nocapture readonly, %struct.SrcList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CheckObjectName(%struct.Parse* nocapture, i8*, i8* readonly, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindDb(%struct.sqlite3*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSelect(%struct.DbFixer* nocapture readonly, %struct.Select* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixExpr(%struct.DbFixer* nocapture readonly, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UniqueConstraint(%struct.Parse*, i32, %struct.Index* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3GetCollSeq(%struct.Parse* nocapture, i8 zeroext, %struct.CollSeq*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3ExprWalkNoop(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readnone) #11

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprSimplifiedAndOr(%struct.Expr* readonly) unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfTrue(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTableAndIndices(%struct.Parse*, %struct.Table* nocapture readonly, i32, i8 zeroext, i32, i8* readonly, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ComputeGeneratedColumns(%struct.Parse*, i32, %struct.Table*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableAffinity(%struct.Vdbe* nocapture, %struct.Table* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeRowTrigger(%struct.Parse*, %struct.Trigger*, i32, %struct.ExprList* readonly, i32, %struct.Table*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateConstraintChecks(%struct.Parse*, %struct.Table*, i32* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i32, i32* nocapture, i32*, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3FkCheck(%struct.Parse*, %struct.Table*, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CompleteInsertion(%struct.Parse*, %struct.Table*, i32, i32, i32, i32* nocapture readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowDelete(%struct.Parse*, %struct.Table*, %struct.Trigger*, i32, i32, i32, i16 signext, i8 zeroext, i8 zeroext, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowIndexDelete(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UpsertDoUpdate(%struct.Parse*, %struct.Upsert*, %struct.Table* nocapture readonly, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkOldmask(%struct.Parse* nocapture, %struct.Table* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MaterializeView(%struct.Parse*, %struct.Table* nocapture readonly, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SetHasNullFlag(%struct.Vdbe* nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereExplainOneScan(%struct.Parse* nocapture readonly, %struct.SrcList* nocapture readonly, %struct.WhereLevel* nocapture readonly, i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereCodeOneLoopStart(%struct.Parse*, %struct.Vdbe*, %struct.WhereInfo*, i32, %struct.WhereLevel*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeVerifyNamedSchema(%struct.Parse* nocapture, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeDropTable(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTriggerPtr(%struct.Parse*, %struct.Trigger* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3WindowOffsetExpr(%struct.Parse*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemMalloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MemFree(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemRealloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemSize(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3MemRoundup(i32) #11

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemInit(i8* nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3MemShutdown(i8* nocapture) #11

; Function Attrs: allocsize(1)
declare i8* @malloc_zone_malloc(%struct._malloc_zone_t*, i64) local_unnamed_addr #26

declare void @malloc_zone_free(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: allocsize(2)
declare i8* @malloc_zone_realloc(%struct._malloc_zone_t*, i8*, i64) local_unnamed_addr #27

declare i64 @malloc_size(i8*) local_unnamed_addr #12

declare i32 @sysctlbyname(i8*, i8*, i64*, i8*, i64) local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_default_zone() local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_create_zone(i64, i32) local_unnamed_addr #12

declare void @malloc_set_zone_name(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #28

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #28

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) local_unnamed_addr #29

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #28

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #30

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #28

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree
declare i64 @strlcat(i8*, i8*, i64) #31

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) #31

attributes #0 = { norecurse nounwind nonlazybind uwtable willreturn "nonfree" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { alwaysinline nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noinline nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree noinline norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { noinline nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { allocsize(2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { nounwind readnone speculatable willreturn }
attributes #29 = { nofree nounwind }
attributes #30 = { cold noreturn nounwind }
attributes #31 = { nofree }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 7, !"PIC Level", i32 2}
!5 = !{!"clang version 11.0.0 (https://github.com/KowalskiThomas/LLVM 63660cfe7d4c851881497a874a10f82c1b74cd5a)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"double", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"UnpackedRecord", !13, i64 0, !13, i64 8, !14, i64 16, !8, i64 18, !8, i64 19, !8, i64 20, !8, i64 21, !8, i64 22}
!13 = !{!"any pointer", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!12, !8, i64 18}
!16 = !{!17, !17, i64 0}
!17 = !{!"long long", !8, i64 0}
!18 = !{!19, !8, i64 4}
!19 = !{!"KeyInfo", !20, i64 0, !8, i64 4, !14, i64 6, !14, i64 8, !13, i64 16, !13, i64 24, !8, i64 32}
!20 = !{!"int", !8, i64 0}
!21 = !{!22, !8, i64 10}
!22 = !{!"sqlite3_value", !8, i64 0, !14, i64 8, !8, i64 10, !8, i64 11, !20, i64 12, !13, i64 16, !13, i64 24, !20, i64 32, !20, i64 36, !13, i64 40, !13, i64 48}
!23 = !{!19, !13, i64 16}
!24 = !{!22, !13, i64 40}
!25 = !{!22, !20, i64 32}
!26 = !{!22, !13, i64 16}
!27 = !{!12, !14, i64 16}
!28 = !{!22, !14, i64 8}
!29 = !{!22, !20, i64 12}
!30 = !{!22, !13, i64 24}
!31 = !{!32, !13, i64 8}
!32 = !{!"sqlite3_str", !13, i64 0, !13, i64 8, !20, i64 16, !20, i64 20, !20, i64 24, !8, i64 28, !8, i64 29}
!33 = !{!32, !13, i64 0}
!34 = !{!32, !20, i64 16}
!35 = !{!32, !20, i64 24}
!36 = !{!14, !14, i64 0}
!37 = distinct !DISubprogram(name: "jittedFunction", linkageName: "jittedFunction", scope: null, file: !38, line: 1610, type: !39, scopeLine: 1610, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !40)
!38 = !DIFile(filename: "../src/mlir/thomas/ModuleWriter.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!39 = !DISubroutineType(types: !40)
!40 = !{}
!41 = !DILocation(line: 100, scope: !42)
!42 = !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!43 = !DILocation(line: 102, scope: !42)
!44 = !DILocation(line: 106, scope: !42)
!45 = !DILocation(line: 107, scope: !42)
!46 = !DILocation(line: 111, scope: !42)
!47 = !DILocation(line: 112, scope: !42)
!48 = !DILocation(line: 116, scope: !42)
!49 = !DILocation(line: 117, scope: !42)
!50 = !DILocation(line: 131, scope: !42)
!51 = !DILocation(line: 135, scope: !42)
!52 = !DILocation(line: 136, scope: !42)
!53 = !DILocation(line: 164, scope: !42)
!54 = !DILocation(line: 24, scope: !55)
!55 = !DILexicalBlockFile(scope: !37, file: !56, discriminator: 0)
!56 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!57 = !DILocation(line: 28, scope: !55)
!58 = !DILocation(line: 34, scope: !55)
!59 = !DILocation(line: 38, scope: !55)
!60 = !DILocation(line: 39, scope: !55)
!61 = !DILocation(line: 40, scope: !55)
!62 = !DILocation(line: 46, scope: !55)
!63 = !DILocation(line: 30, scope: !64)
!64 = !DILexicalBlockFile(scope: !37, file: !65, discriminator: 0)
!65 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IntegerLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!66 = !DILocation(line: 36, scope: !64)
!67 = !DILocation(line: 34, scope: !68)
!68 = !DILexicalBlockFile(scope: !37, file: !69, discriminator: 0)
!69 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/OutToPrerelease.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!70 = !DILocation(line: 38, scope: !68)
!71 = !DILocation(line: 41, scope: !68)
!72 = !DILocation(line: 39, scope: !64)
!73 = !DILocation(line: 40, scope: !64)
!74 = !DILocation(line: 42, scope: !64)
!75 = !DILocation(line: 1567, scope: !42)
!76 = !DILocation(line: 36, scope: !77)
!77 = !DILexicalBlockFile(scope: !37, file: !78, discriminator: 0)
!78 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OnceLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!79 = !DILocation(line: 37, scope: !77)
!80 = !DILocation(line: 38, scope: !77)
!81 = !DILocation(line: 41, scope: !77)
!82 = !DILocation(line: 42, scope: !77)
!83 = !DILocation(line: 45, scope: !77)
!84 = !DILocation(line: 52, scope: !77)
!85 = !DILocation(line: 53, scope: !77)
!86 = !DILocation(line: 59, scope: !77)
!87 = !DILocation(line: 60, scope: !77)
!88 = !DILocation(line: 63, scope: !77)
!89 = !DILocation(line: 79, scope: !77)
!90 = !DILocation(line: 85, scope: !77)
!91 = !DILocation(line: 88, scope: !77)
!92 = !DILocation(line: 91, scope: !77)
!93 = !DILocation(line: 97, scope: !77)
!94 = !DILocation(line: 103, scope: !77)
!95 = !DILocation(line: 50, scope: !96)
!96 = !DILexicalBlockFile(scope: !37, file: !97, discriminator: 0)
!97 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenEphemeralLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!98 = !DILocation(line: 53, scope: !96)
!99 = !DILocation(line: 54, scope: !96)
!100 = !DILocation(line: 57, scope: !96)
!101 = !DILocation(line: 58, scope: !96)
!102 = !DILocation(line: 59, scope: !96)
!103 = !DILocation(line: 66, scope: !96)
!104 = !DILocation(line: 68, scope: !96)
!105 = !DILocation(line: 75, scope: !96)
!106 = !DILocation(line: 76, scope: !96)
!107 = !DILocation(line: 77, scope: !96)
!108 = !DILocation(line: 82, scope: !96)
!109 = !DILocation(line: 87, scope: !96)
!110 = !DILocation(line: 88, scope: !96)
!111 = !DILocation(line: 91, scope: !96)
!112 = !DILocation(line: 92, scope: !96)
!113 = !DILocation(line: 95, scope: !96)
!114 = !DILocation(line: 96, scope: !96)
!115 = !DILocation(line: 98, scope: !96)
!116 = !DILocation(line: 103, scope: !96)
!117 = !DILocation(line: 105, scope: !96)
!118 = !DILocation(line: 112, scope: !96)
!119 = !DILocation(line: 119, scope: !96)
!120 = !DILocation(line: 128, scope: !96)
!121 = !DILocation(line: 129, scope: !96)
!122 = !DILocation(line: 130, scope: !96)
!123 = !DILocation(line: 131, scope: !96)
!124 = !DILocation(line: 135, scope: !96)
!125 = !DILocation(line: 136, scope: !96)
!126 = !DILocation(line: 139, scope: !96)
!127 = !DILocation(line: 141, scope: !96)
!128 = !DILocation(line: 149, scope: !96)
!129 = !DILocation(line: 155, scope: !96)
!130 = !DILocation(line: 157, scope: !96)
!131 = !DILocation(line: 161, scope: !96)
!132 = !DILocation(line: 162, scope: !96)
!133 = !DILocation(line: 167, scope: !96)
!134 = !DILocation(line: 169, scope: !96)
!135 = !DILocation(line: 177, scope: !96)
!136 = !DILocation(line: 178, scope: !96)
!137 = !DILocation(line: 180, scope: !96)
!138 = !DILocation(line: 184, scope: !96)
!139 = !DILocation(line: 185, scope: !96)
!140 = !DILocation(line: 186, scope: !96)
!141 = !DILocation(line: 187, scope: !96)
!142 = !DILocation(line: 197, scope: !96)
!143 = !DILocation(line: 198, scope: !96)
!144 = !DILocation(line: 201, scope: !96)
!145 = !DILocation(line: 204, scope: !96)
!146 = !DILocation(line: 211, scope: !96)
!147 = !DILocation(line: 213, scope: !96)
!148 = !DILocation(line: 218, scope: !96)
!149 = !DILocation(line: 219, scope: !96)
!150 = !DILocation(line: 224, scope: !96)
!151 = !DILocation(line: 230, scope: !96)
!152 = !DILocation(line: 232, scope: !96)
!153 = !DILocation(line: 237, scope: !96)
!154 = !DILocation(line: 238, scope: !96)
!155 = !DILocation(line: 239, scope: !96)
!156 = !DILocation(line: 246, scope: !96)
!157 = !DILocation(line: 248, scope: !96)
!158 = !DILocation(line: 254, scope: !96)
!159 = !DILocation(line: 255, scope: !96)
!160 = !DILocation(line: 257, scope: !96)
!161 = !DILocation(line: 263, scope: !96)
!162 = !DILocation(line: 266, scope: !96)
!163 = !DILocation(line: 267, scope: !96)
!164 = !DILocation(line: 268, scope: !96)
!165 = !DILocation(line: 275, scope: !96)
!166 = !DILocation(line: 278, scope: !96)
!167 = !DILocation(line: 279, scope: !96)
!168 = !DILocation(line: 281, scope: !96)
!169 = !DILocation(line: 293, scope: !96)
!170 = !DILocation(line: 294, scope: !96)
!171 = !DILocation(line: 295, scope: !96)
!172 = !DILocation(line: 296, scope: !96)
!173 = !DILocation(line: 297, scope: !96)
!174 = !DILocation(line: 299, scope: !96)
!175 = !DILocation(line: 305, scope: !96)
!176 = !DILocation(line: 311, scope: !96)
!177 = !DILocation(line: 312, scope: !96)
!178 = !DILocation(line: 313, scope: !96)
!179 = !DILocation(line: 319, scope: !96)
!180 = !DILocation(line: 37, scope: !181)
!181 = !DILexicalBlockFile(scope: !37, file: !182, discriminator: 0)
!182 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterOpenLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!183 = !DILocation(line: 45, scope: !181)
!184 = !DILocation(line: 50, scope: !181)
!185 = !DILocation(line: 52, scope: !181)
!186 = !DILocation(line: 53, scope: !181)
!187 = !DILocation(line: 54, scope: !181)
!188 = !DILocation(line: 55, scope: !181)
!189 = !DILocation(line: 57, scope: !181)
!190 = !DILocation(line: 59, scope: !181)
!191 = !DILocation(line: 42, scope: !192)
!192 = !DILexicalBlockFile(scope: !37, file: !193, discriminator: 0)
!193 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!194 = !DILocation(line: 43, scope: !192)
!195 = !DILocation(line: 52, scope: !192)
!196 = !DILocation(line: 55, scope: !192)
!197 = !DILocation(line: 58, scope: !192)
!198 = !DILocation(line: 59, scope: !192)
!199 = !DILocation(line: 35, scope: !200)
!200 = !DILexicalBlockFile(scope: !37, file: !201, discriminator: 0)
!201 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/GosubLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!202 = !DILocation(line: 38, scope: !200)
!203 = !DILocation(line: 39, scope: !200)
!204 = !DILocation(line: 42, scope: !200)
!205 = !DILocation(line: 43, scope: !200)
!206 = !DILocation(line: 45, scope: !200)
!207 = !DILocation(line: 51, scope: !200)
!208 = !DILocation(line: 37, scope: !209)
!209 = !DILexicalBlockFile(scope: !37, file: !210, discriminator: 0)
!210 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenReadLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!211 = !DILocation(line: 38, scope: !209)
!212 = !DILocation(line: 39, scope: !209)
!213 = !DILocation(line: 43, scope: !209)
!214 = !DILocation(line: 45, scope: !209)
!215 = !DILocation(line: 94, scope: !209)
!216 = !DILocation(line: 103, scope: !209)
!217 = !DILocation(line: 104, scope: !209)
!218 = !DILocation(line: 107, scope: !209)
!219 = !DILocation(line: 109, scope: !209)
!220 = !DILocation(line: 111, scope: !209)
!221 = !DILocation(line: 112, scope: !209)
!222 = !DILocation(line: 115, scope: !209)
!223 = !DILocation(line: 117, scope: !209)
!224 = !DILocation(line: 120, scope: !209)
!225 = !DILocation(line: 126, scope: !209)
!226 = !DILocation(line: 129, scope: !209)
!227 = !DILocation(line: 136, scope: !209)
!228 = !DILocation(line: 138, scope: !209)
!229 = !DILocation(line: 141, scope: !209)
!230 = !DILocation(line: 142, scope: !209)
!231 = !DILocation(line: 145, scope: !209)
!232 = !DILocation(line: 28, scope: !233)
!233 = !DILexicalBlockFile(scope: !37, file: !234, discriminator: 0)
!234 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RewindLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!235 = !DILocation(line: 39, scope: !233)
!236 = !DILocation(line: 41, scope: !233)
!237 = !DILocation(line: 43, scope: !233)
!238 = !DILocation(line: 45, scope: !233)
!239 = !DILocation(line: 46, scope: !233)
!240 = !DILocation(line: 49, scope: !233)
!241 = !DILocation(line: 56, scope: !233)
!242 = !DILocation(line: 58, scope: !233)
!243 = !DILocation(line: 73, scope: !233)
!244 = !DILocation(line: 74, scope: !233)
!245 = !DILocation(line: 77, scope: !233)
!246 = !DILocation(line: 85, scope: !233)
!247 = !DILocation(line: 87, scope: !233)
!248 = !DILocation(line: 89, scope: !233)
!249 = !DILocation(line: 100, scope: !233)
!250 = !DILocation(line: 107, scope: !233)
!251 = !DILocation(line: 111, scope: !233)
!252 = !DILocation(line: 115, scope: !233)
!253 = !DILocation(line: 121, scope: !233)
!254 = !DILocation(line: 125, scope: !233)
!255 = !DILocation(line: 129, scope: !233)
!256 = !DILocation(line: 133, scope: !233)
!257 = !DILocation(line: 136, scope: !233)
!258 = !DILocation(line: 142, scope: !233)
!259 = !DILocation(line: 148, scope: !233)
!260 = !DILocation(line: 149, scope: !233)
!261 = !DILocation(line: 151, scope: !233)
!262 = !DILocation(line: 155, scope: !233)
!263 = !DILocation(line: 157, scope: !233)
!264 = !DILocation(line: 159, scope: !233)
!265 = !DILocation(line: 162, scope: !233)
!266 = !DILocation(line: 30, scope: !267)
!267 = !DILexicalBlockFile(scope: !37, file: !268, discriminator: 0)
!268 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ColumnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!269 = !DILocation(line: 42, scope: !267)
!270 = !DILocation(line: 43, scope: !267)
!271 = !DILocation(line: 60, scope: !267)
!272 = !DILocation(line: 61, scope: !267)
!273 = !DILocation(line: 67, scope: !267)
!274 = !DILocation(line: 72, scope: !267)
!275 = !DILocation(line: 73, scope: !267)
!276 = !DILocation(line: 74, scope: !267)
!277 = !DILocation(line: 85, scope: !267)
!278 = !DILocation(line: 88, scope: !267)
!279 = !DILocation(line: 93, scope: !267)
!280 = !DILocation(line: 103, scope: !267)
!281 = !DILocation(line: 120, scope: !267)
!282 = !DILocation(line: 126, scope: !267)
!283 = !DILocation(line: 130, scope: !267)
!284 = !DILocation(line: 142, scope: !267)
!285 = !DILocation(line: 147, scope: !267)
!286 = !DILocation(line: 153, scope: !267)
!287 = !DILocation(line: 159, scope: !267)
!288 = !DILocation(line: 168, scope: !267)
!289 = !DILocation(line: 174, scope: !267)
!290 = !DILocation(line: 179, scope: !267)
!291 = !DILocation(line: 181, scope: !267)
!292 = !DILocation(line: 199, scope: !267)
!293 = !DILocation(line: 206, scope: !267)
!294 = !DILocation(line: 214, scope: !267)
!295 = !DILocation(line: 222, scope: !267)
!296 = !DILocation(line: 230, scope: !267)
!297 = !DILocation(line: 248, scope: !267)
!298 = !DILocation(line: 253, scope: !267)
!299 = !DILocation(line: 257, scope: !267)
!300 = !DILocation(line: 261, scope: !267)
!301 = !DILocation(line: 264, scope: !267)
!302 = !DILocation(line: 268, scope: !267)
!303 = !DILocation(line: 303, scope: !267)
!304 = !DILocation(line: 498, scope: !267)
!305 = !DILocation(line: 499, scope: !267)
!306 = !DILocation(line: 504, scope: !267)
!307 = !DILocation(line: 23, scope: !308)
!308 = !DILexicalBlockFile(scope: !37, file: !309, discriminator: 0)
!309 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/GetVarint32.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!310 = !DILocation(line: 36, scope: !308)
!311 = !DILocation(line: 39, scope: !308)
!312 = !DILocation(line: 47, scope: !308)
!313 = !DILocation(line: 50, scope: !308)
!314 = !DILocation(line: 53, scope: !308)
!315 = !DILocation(line: 55, scope: !308)
!316 = !DILocation(line: 64, scope: !308)
!317 = !DILocation(line: 71, scope: !308)
!318 = !DILocation(line: 72, scope: !308)
!319 = !DILocation(line: 73, scope: !308)
!320 = !DILocation(line: 509, scope: !267)
!321 = !DILocation(line: 517, scope: !267)
!322 = !DILocation(line: 518, scope: !267)
!323 = !DILocation(line: 521, scope: !267)
!324 = !DILocation(line: 524, scope: !267)
!325 = !DILocation(line: 547, scope: !267)
!326 = !DILocation(line: 550, scope: !267)
!327 = !DILocation(line: 533, scope: !267)
!328 = !DILocation(line: 535, scope: !267)
!329 = !DILocation(line: 556, scope: !267)
!330 = !DILocation(line: 425, scope: !267)
!331 = !DILocation(line: 433, scope: !267)
!332 = !DILocation(line: 469, scope: !267)
!333 = !DILocation(line: 474, scope: !267)
!334 = !DILocation(line: 478, scope: !267)
!335 = !DILocation(line: 484, scope: !267)
!336 = !DILocation(line: 491, scope: !267)
!337 = !DILocation(line: 327, scope: !267)
!338 = !DILocation(line: 332, scope: !267)
!339 = !DILocation(line: 343, scope: !267)
!340 = !DILocation(line: 349, scope: !267)
!341 = !DILocation(line: 352, scope: !267)
!342 = !DILocation(line: 358, scope: !267)
!343 = !DILocation(line: 362, scope: !267)
!344 = !DILocation(line: 364, scope: !267)
!345 = !DILocation(line: 372, scope: !267)
!346 = !DILocation(line: 377, scope: !267)
!347 = !DILocation(line: 378, scope: !267)
!348 = !DILocation(line: 379, scope: !267)
!349 = !DILocation(line: 384, scope: !267)
!350 = !DILocation(line: 389, scope: !267)
!351 = !DILocation(line: 390, scope: !267)
!352 = !DILocation(line: 405, scope: !267)
!353 = !DILocation(line: 411, scope: !267)
!354 = !DILocation(line: 563, scope: !267)
!355 = !DILocation(line: 565, scope: !267)
!356 = !DILocation(line: 575, scope: !267)
!357 = !DILocation(line: 1037, scope: !267)
!358 = !DILocation(line: 1041, scope: !267)
!359 = !DILocation(line: 1042, scope: !267)
!360 = !DILocation(line: 1044, scope: !267)
!361 = !DILocation(line: 1057, scope: !267)
!362 = !DILocation(line: 1063, scope: !267)
!363 = !DILocation(line: 1072, scope: !267)
!364 = !DILocation(line: 1077, scope: !267)
!365 = !DILocation(line: 1083, scope: !267)
!366 = !DILocation(line: 1095, scope: !267)
!367 = !DILocation(line: 1097, scope: !267)
!368 = !DILocation(line: 1099, scope: !267)
!369 = !DILocation(line: 1101, scope: !267)
!370 = !DILocation(line: 1103, scope: !267)
!371 = !DILocation(line: 1109, scope: !267)
!372 = !DILocation(line: 1110, scope: !267)
!373 = !DILocation(line: 1111, scope: !267)
!374 = !DILocation(line: 1112, scope: !267)
!375 = !DILocation(line: 1113, scope: !267)
!376 = !DILocation(line: 1114, scope: !267)
!377 = !DILocation(line: 1115, scope: !267)
!378 = !DILocation(line: 1116, scope: !267)
!379 = !DILocation(line: 1123, scope: !267)
!380 = !DILocation(line: 1124, scope: !267)
!381 = !DILocation(line: 1125, scope: !267)
!382 = !DILocation(line: 1130, scope: !267)
!383 = !DILocation(line: 1134, scope: !267)
!384 = !DILocation(line: 1140, scope: !267)
!385 = !DILocation(line: 1141, scope: !267)
!386 = !DILocation(line: 1142, scope: !267)
!387 = !DILocation(line: 1143, scope: !267)
!388 = !DILocation(line: 1145, scope: !267)
!389 = !DILocation(line: 1148, scope: !267)
!390 = !DILocation(line: 1149, scope: !267)
!391 = !DILocation(line: 1152, scope: !267)
!392 = !DILocation(line: 1157, scope: !267)
!393 = !DILocation(line: 1159, scope: !267)
!394 = !DILocation(line: 1163, scope: !267)
!395 = !DILocation(line: 1172, scope: !267)
!396 = !DILocation(line: 1182, scope: !267)
!397 = !DILocation(line: 1188, scope: !267)
!398 = !DILocation(line: 1190, scope: !267)
!399 = !DILocation(line: 1192, scope: !267)
!400 = !DILocation(line: 1194, scope: !267)
!401 = !DILocation(line: 1199, scope: !267)
!402 = !DILocation(line: 1201, scope: !267)
!403 = !DILocation(line: 1210, scope: !267)
!404 = !DILocation(line: 1217, scope: !267)
!405 = !DILocation(line: 1222, scope: !267)
!406 = !DILocation(line: 1225, scope: !267)
!407 = !DILocation(line: 1227, scope: !267)
!408 = !DILocation(line: 1234, scope: !267)
!409 = !DILocation(line: 1235, scope: !267)
!410 = !DILocation(line: 1236, scope: !267)
!411 = !DILocation(line: 1237, scope: !267)
!412 = !DILocation(line: 1242, scope: !267)
!413 = !DILocation(line: 1243, scope: !267)
!414 = !DILocation(line: 1245, scope: !267)
!415 = !DILocation(line: 1246, scope: !267)
!416 = !DILocation(line: 1247, scope: !267)
!417 = !DILocation(line: 1250, scope: !267)
!418 = !DILocation(line: 1252, scope: !267)
!419 = !DILocation(line: 1254, scope: !267)
!420 = !DILocation(line: 1256, scope: !267)
!421 = !DILocation(line: 1258, scope: !267)
!422 = !DILocation(line: 1268, scope: !267)
!423 = !DILocation(line: 1272, scope: !267)
!424 = !DILocation(line: 1281, scope: !267)
!425 = !DILocation(line: 1282, scope: !267)
!426 = !DILocation(line: 1283, scope: !267)
!427 = !DILocation(line: 1285, scope: !267)
!428 = !DILocation(line: 1287, scope: !267)
!429 = !DILocation(line: 1297, scope: !267)
!430 = !DILocation(line: 1300, scope: !267)
!431 = !DILocation(line: 1309, scope: !267)
!432 = !DILocation(line: 1326, scope: !267)
!433 = !DILocation(line: 1334, scope: !267)
!434 = !DILocation(line: 1339, scope: !267)
!435 = !DILocation(line: 1340, scope: !267)
!436 = !DILocation(line: 1343, scope: !267)
!437 = !DILocation(line: 1354, scope: !267)
!438 = !DILocation(line: 1359, scope: !267)
!439 = !DILocation(line: 1363, scope: !267)
!440 = !DILocation(line: 1373, scope: !267)
!441 = !DILocation(line: 1375, scope: !267)
!442 = !DILocation(line: 1376, scope: !267)
!443 = !DILocation(line: 1378, scope: !267)
!444 = !DILocation(line: 1314, scope: !267)
!445 = !DILocation(line: 1318, scope: !267)
!446 = !DILocation(line: 1017, scope: !267)
!447 = !DILocation(line: 1023, scope: !267)
!448 = !DILocation(line: 1025, scope: !267)
!449 = !DILocation(line: 1027, scope: !267)
!450 = !DILocation(line: 584, scope: !267)
!451 = !DILocation(line: 585, scope: !267)
!452 = !DILocation(line: 586, scope: !267)
!453 = !DILocation(line: 595, scope: !267)
!454 = !DILocation(line: 605, scope: !267)
!455 = !DILocation(line: 607, scope: !267)
!456 = !DILocation(line: 614, scope: !267)
!457 = !DILocation(line: 628, scope: !267)
!458 = !DILocation(line: 629, scope: !267)
!459 = !DILocation(line: 644, scope: !267)
!460 = !DILocation(line: 645, scope: !267)
!461 = !DILocation(line: 646, scope: !267)
!462 = !DILocation(line: 647, scope: !267)
!463 = !DILocation(line: 649, scope: !267)
!464 = !DILocation(line: 651, scope: !267)
!465 = !DILocation(line: 654, scope: !267)
!466 = !DILocation(line: 655, scope: !267)
!467 = !DILocation(line: 656, scope: !267)
!468 = !DILocation(line: 658, scope: !267)
!469 = !DILocation(line: 659, scope: !267)
!470 = !DILocation(line: 662, scope: !267)
!471 = !DILocation(line: 664, scope: !267)
!472 = !DILocation(line: 666, scope: !267)
!473 = !DILocation(line: 668, scope: !267)
!474 = !DILocation(line: 670, scope: !267)
!475 = !DILocation(line: 684, scope: !267)
!476 = !DILocation(line: 695, scope: !267)
!477 = !DILocation(line: 697, scope: !267)
!478 = !DILocation(line: 703, scope: !267)
!479 = !DILocation(line: 704, scope: !267)
!480 = !DILocation(line: 705, scope: !267)
!481 = !DILocation(line: 708, scope: !267)
!482 = !DILocation(line: 710, scope: !267)
!483 = !DILocation(line: 713, scope: !267)
!484 = !DILocation(line: 717, scope: !267)
!485 = !DILocation(line: 786, scope: !267)
!486 = !DILocation(line: 788, scope: !267)
!487 = !DILocation(line: 790, scope: !267)
!488 = !DILocation(line: 794, scope: !267)
!489 = !DILocation(line: 795, scope: !267)
!490 = !DILocation(line: 796, scope: !267)
!491 = !DILocation(line: 799, scope: !267)
!492 = !DILocation(line: 804, scope: !267)
!493 = !DILocation(line: 814, scope: !267)
!494 = !DILocation(line: 817, scope: !267)
!495 = !DILocation(line: 821, scope: !267)
!496 = !DILocation(line: 822, scope: !267)
!497 = !DILocation(line: 823, scope: !267)
!498 = !DILocation(line: 825, scope: !267)
!499 = !DILocation(line: 830, scope: !267)
!500 = !DILocation(line: 833, scope: !267)
!501 = !DILocation(line: 750, scope: !267)
!502 = !DILocation(line: 753, scope: !267)
!503 = !DILocation(line: 760, scope: !267)
!504 = !DILocation(line: 766, scope: !267)
!505 = !DILocation(line: 769, scope: !267)
!506 = !DILocation(line: 770, scope: !267)
!507 = !DILocation(line: 773, scope: !267)
!508 = !DILocation(line: 775, scope: !267)
!509 = !DILocation(line: 778, scope: !267)
!510 = !DILocation(line: 779, scope: !267)
!511 = !DILocation(line: 780, scope: !267)
!512 = !DILocation(line: 782, scope: !267)
!513 = !DILocation(line: 723, scope: !267)
!514 = !DILocation(line: 726, scope: !267)
!515 = !DILocation(line: 730, scope: !267)
!516 = !DILocation(line: 731, scope: !267)
!517 = !DILocation(line: 732, scope: !267)
!518 = !DILocation(line: 733, scope: !267)
!519 = !DILocation(line: 734, scope: !267)
!520 = !DILocation(line: 737, scope: !267)
!521 = !DILocation(line: 739, scope: !267)
!522 = !DILocation(line: 741, scope: !267)
!523 = !DILocation(line: 743, scope: !267)
!524 = !DILocation(line: 843, scope: !267)
!525 = !DILocation(line: 844, scope: !267)
!526 = !DILocation(line: 845, scope: !267)
!527 = !DILocation(line: 853, scope: !267)
!528 = !DILocation(line: 857, scope: !267)
!529 = !DILocation(line: 861, scope: !267)
!530 = !DILocation(line: 865, scope: !267)
!531 = !DILocation(line: 869, scope: !267)
!532 = !DILocation(line: 870, scope: !267)
!533 = !DILocation(line: 871, scope: !267)
!534 = !DILocation(line: 877, scope: !267)
!535 = !DILocation(line: 887, scope: !267)
!536 = !DILocation(line: 889, scope: !267)
!537 = !DILocation(line: 892, scope: !267)
!538 = !DILocation(line: 897, scope: !267)
!539 = !DILocation(line: 898, scope: !267)
!540 = !DILocation(line: 900, scope: !267)
!541 = !DILocation(line: 922, scope: !267)
!542 = !DILocation(line: 923, scope: !267)
!543 = !DILocation(line: 924, scope: !267)
!544 = !DILocation(line: 927, scope: !267)
!545 = !DILocation(line: 928, scope: !267)
!546 = !DILocation(line: 929, scope: !267)
!547 = !DILocation(line: 930, scope: !267)
!548 = !DILocation(line: 931, scope: !267)
!549 = !DILocation(line: 932, scope: !267)
!550 = !DILocation(line: 933, scope: !267)
!551 = !DILocation(line: 946, scope: !267)
!552 = !DILocation(line: 961, scope: !267)
!553 = !DILocation(line: 963, scope: !267)
!554 = !DILocation(line: 972, scope: !267)
!555 = !DILocation(line: 974, scope: !267)
!556 = !DILocation(line: 975, scope: !267)
!557 = !DILocation(line: 1001, scope: !267)
!558 = !DILocation(line: 1391, scope: !267)
!559 = !DILocation(line: 62, scope: !77)
!560 = !DILocation(line: 42, scope: !561)
!561 = !DILexicalBlockFile(scope: !37, file: !562, discriminator: 0)
!562 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/StringLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!563 = !DILocation(line: 43, scope: !561)
!564 = !DILocation(line: 48, scope: !561)
!565 = !DILocation(line: 49, scope: !561)
!566 = !DILocation(line: 50, scope: !561)
!567 = !DILocation(line: 51, scope: !561)
!568 = !DILocation(line: 52, scope: !561)
!569 = !DILocation(line: 55, scope: !561)
!570 = !DILocation(line: 56, scope: !561)
!571 = !DILocation(line: 57, scope: !561)
!572 = !DILocation(line: 58, scope: !561)
!573 = !DILocation(line: 59, scope: !561)
!574 = !DILocation(line: 60, scope: !561)
!575 = !DILocation(line: 40, scope: !576)
!576 = !DILexicalBlockFile(scope: !37, file: !577, discriminator: 0)
!577 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/FunctionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!578 = !DILocation(line: 42, scope: !576)
!579 = !DILocation(line: 44, scope: !576)
!580 = !DILocation(line: 45, scope: !576)
!581 = !DILocation(line: 46, scope: !576)
!582 = !DILocation(line: 47, scope: !576)
!583 = !DILocation(line: 48, scope: !576)
!584 = !DILocation(line: 49, scope: !576)
!585 = !DILocation(line: 50, scope: !576)
!586 = !DILocation(line: 51, scope: !576)
!587 = !DILocation(line: 52, scope: !576)
!588 = !DILocation(line: 53, scope: !576)
!589 = !DILocation(line: 55, scope: !576)
!590 = !DILocation(line: 56, scope: !576)
!591 = !DILocation(line: 66, scope: !576)
!592 = !DILocation(line: 67, scope: !576)
!593 = !DILocation(line: 65, scope: !576)
!594 = !DILocation(line: 70, scope: !576)
!595 = !DILocation(line: 75, scope: !576)
!596 = !DILocation(line: 76, scope: !576)
!597 = !DILocation(line: 79, scope: !576)
!598 = !DILocation(line: 83, scope: !576)
!599 = !DILocation(line: 85, scope: !576)
!600 = !DILocation(line: 88, scope: !576)
!601 = !DILocation(line: 98, scope: !576)
!602 = !DILocation(line: 25, scope: !576)
!603 = !DILocation(line: 102, scope: !576)
!604 = !DILocation(line: 109, scope: !576)
!605 = !DILocation(line: 110, scope: !576)
!606 = !DILocation(line: 111, scope: !576)
!607 = !DILocation(line: 114, scope: !576)
!608 = !DILocation(line: 115, scope: !576)
!609 = !DILocation(line: 121, scope: !576)
!610 = !DILocation(line: 127, scope: !576)
!611 = !DILocation(line: 123, scope: !576)
!612 = !DILocation(line: 136, scope: !576)
!613 = !DILocation(line: 138, scope: !576)
!614 = !DILocation(line: 144, scope: !576)
!615 = !DILocation(line: 163, scope: !576)
!616 = !DILocation(line: 164, scope: !576)
!617 = !DILocation(line: 165, scope: !576)
!618 = !DILocation(line: 167, scope: !576)
!619 = !DILocation(line: 171, scope: !576)
!620 = !DILocation(line: 174, scope: !576)
!621 = !DILocation(line: 179, scope: !576)
!622 = !DILocation(line: 58, scope: !623)
!623 = !DILexicalBlockFile(scope: !37, file: !624, discriminator: 0)
!624 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareJumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!625 = !DILocation(line: 61, scope: !623)
!626 = !DILocation(line: 63, scope: !623)
!627 = !DILocation(line: 66, scope: !623)
!628 = !DILocation(line: 69, scope: !623)
!629 = !DILocation(line: 72, scope: !623)
!630 = !DILocation(line: 73, scope: !623)
!631 = !DILocation(line: 74, scope: !623)
!632 = !DILocation(line: 75, scope: !623)
!633 = !DILocation(line: 78, scope: !623)
!634 = !DILocation(line: 79, scope: !623)
!635 = !DILocation(line: 80, scope: !623)
!636 = !DILocation(line: 81, scope: !623)
!637 = !DILocation(line: 236, scope: !623)
!638 = !DILocation(line: 238, scope: !623)
!639 = !DILocation(line: 244, scope: !623)
!640 = !DILocation(line: 246, scope: !623)
!641 = !DILocation(line: 332, scope: !623)
!642 = !DILocation(line: 334, scope: !623)
!643 = !DILocation(line: 503, scope: !623)
!644 = !DILocation(line: 505, scope: !623)
!645 = !DILocation(line: 508, scope: !623)
!646 = !DILocation(line: 510, scope: !623)
!647 = !DILocation(line: 513, scope: !623)
!648 = !DILocation(line: 515, scope: !623)
!649 = !DILocation(line: 518, scope: !623)
!650 = !DILocation(line: 520, scope: !623)
!651 = !DILocation(line: 526, scope: !623)
!652 = !DILocation(line: 528, scope: !623)
!653 = !DILocation(line: 532, scope: !623)
!654 = !DILocation(line: 539, scope: !623)
!655 = !DILocation(line: 540, scope: !623)
!656 = !DILocation(line: 541, scope: !623)
!657 = !DILocation(line: 542, scope: !623)
!658 = !DILocation(line: 544, scope: !623)
!659 = !DILocation(line: 553, scope: !623)
!660 = !DILocation(line: 555, scope: !623)
!661 = !DILocation(line: 559, scope: !623)
!662 = !DILocation(line: 566, scope: !623)
!663 = !DILocation(line: 567, scope: !623)
!664 = !DILocation(line: 568, scope: !623)
!665 = !DILocation(line: 569, scope: !623)
!666 = !DILocation(line: 571, scope: !623)
!667 = !DILocation(line: 579, scope: !623)
!668 = !DILocation(line: 580, scope: !623)
!669 = !DILocation(line: 581, scope: !623)
!670 = !DILocation(line: 582, scope: !623)
!671 = !DILocation(line: 583, scope: !623)
!672 = !DILocation(line: 588, scope: !623)
!673 = !DILocation(line: 612, scope: !623)
!674 = !DILocation(line: 614, scope: !623)
!675 = !DILocation(line: 619, scope: !623)
!676 = !DILocation(line: 621, scope: !623)
!677 = !DILocation(line: 0, scope: !623)
!678 = !DILocation(line: 650, scope: !623)
!679 = !DILocation(line: 652, scope: !623)
!680 = !DILocation(line: 688, scope: !623)
!681 = !DILocation(line: 689, scope: !623)
!682 = !DILocation(line: 690, scope: !623)
!683 = !DILocation(line: 691, scope: !623)
!684 = !DILocation(line: 84, scope: !576)
!685 = !DILocation(line: 35, scope: !686)
!686 = !DILexicalBlockFile(scope: !37, file: !687, discriminator: 0)
!687 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RealAffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!688 = !DILocation(line: 38, scope: !686)
!689 = !DILocation(line: 39, scope: !686)
!690 = !DILocation(line: 41, scope: !686)
!691 = !DILocation(line: 47, scope: !686)
!692 = !DILocation(line: 49, scope: !686)
!693 = !DILocation(line: 53, scope: !686)
!694 = !DILocation(line: 55, scope: !686)
!695 = !DILocation(line: 48, scope: !696)
!696 = !DILexicalBlockFile(scope: !37, file: !697, discriminator: 0)
!697 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MakeRecordLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!698 = !DILocation(line: 54, scope: !696)
!699 = !DILocation(line: 55, scope: !696)
!700 = !DILocation(line: 58, scope: !696)
!701 = !DILocation(line: 59, scope: !696)
!702 = !DILocation(line: 62, scope: !696)
!703 = !DILocation(line: 63, scope: !696)
!704 = !DILocation(line: 66, scope: !696)
!705 = !DILocation(line: 72, scope: !696)
!706 = !DILocation(line: 73, scope: !696)
!707 = !DILocation(line: 74, scope: !696)
!708 = !DILocation(line: 80, scope: !696)
!709 = !DILocation(line: 87, scope: !696)
!710 = !DILocation(line: 94, scope: !696)
!711 = !DILocation(line: 145, scope: !696)
!712 = !DILocation(line: 146, scope: !696)
!713 = !DILocation(line: 148, scope: !696)
!714 = !DILocation(line: 149, scope: !696)
!715 = !DILocation(line: 150, scope: !696)
!716 = !DILocation(line: 151, scope: !696)
!717 = !DILocation(line: 162, scope: !696)
!718 = !DILocation(line: 171, scope: !696)
!719 = !DILocation(line: 172, scope: !696)
!720 = !DILocation(line: 177, scope: !696)
!721 = !DILocation(line: 179, scope: !696)
!722 = !DILocation(line: 185, scope: !696)
!723 = !DILocation(line: 187, scope: !696)
!724 = !DILocation(line: 193, scope: !696)
!725 = !DILocation(line: 195, scope: !696)
!726 = !DILocation(line: 199, scope: !696)
!727 = !DILocation(line: 205, scope: !696)
!728 = !DILocation(line: 206, scope: !696)
!729 = !DILocation(line: 207, scope: !696)
!730 = !DILocation(line: 209, scope: !696)
!731 = !DILocation(line: 211, scope: !696)
!732 = !DILocation(line: 218, scope: !696)
!733 = !DILocation(line: 224, scope: !696)
!734 = !DILocation(line: 225, scope: !696)
!735 = !DILocation(line: 227, scope: !696)
!736 = !DILocation(line: 232, scope: !696)
!737 = !DILocation(line: 234, scope: !696)
!738 = !DILocation(line: 239, scope: !696)
!739 = !DILocation(line: 241, scope: !696)
!740 = !DILocation(line: 242, scope: !696)
!741 = !DILocation(line: 243, scope: !696)
!742 = !DILocation(line: 244, scope: !696)
!743 = !DILocation(line: 245, scope: !696)
!744 = !DILocation(line: 261, scope: !696)
!745 = !DILocation(line: 271, scope: !696)
!746 = !DILocation(line: 272, scope: !696)
!747 = !DILocation(line: 276, scope: !696)
!748 = !DILocation(line: 282, scope: !696)
!749 = !DILocation(line: 283, scope: !696)
!750 = !DILocation(line: 284, scope: !696)
!751 = !DILocation(line: 286, scope: !696)
!752 = !DILocation(line: 292, scope: !696)
!753 = !DILocation(line: 295, scope: !696)
!754 = !DILocation(line: 297, scope: !696)
!755 = !DILocation(line: 0, scope: !696)
!756 = !DILocation(line: 306, scope: !696)
!757 = !DILocation(line: 311, scope: !696)
!758 = !DILocation(line: 312, scope: !696)
!759 = !DILocation(line: 314, scope: !696)
!760 = !DILocation(line: 318, scope: !696)
!761 = !DILocation(line: 323, scope: !696)
!762 = !DILocation(line: 324, scope: !696)
!763 = !DILocation(line: 326, scope: !696)
!764 = !DILocation(line: 330, scope: !696)
!765 = !DILocation(line: 335, scope: !696)
!766 = !DILocation(line: 336, scope: !696)
!767 = !DILocation(line: 338, scope: !696)
!768 = !DILocation(line: 355, scope: !696)
!769 = !DILocation(line: 361, scope: !696)
!770 = !DILocation(line: 362, scope: !696)
!771 = !DILocation(line: 368, scope: !696)
!772 = !DILocation(line: 369, scope: !696)
!773 = !DILocation(line: 370, scope: !696)
!774 = !DILocation(line: 371, scope: !696)
!775 = !DILocation(line: 373, scope: !696)
!776 = !DILocation(line: 377, scope: !696)
!777 = !DILocation(line: 378, scope: !696)
!778 = !DILocation(line: 391, scope: !696)
!779 = !DILocation(line: 396, scope: !696)
!780 = !DILocation(line: 397, scope: !696)
!781 = !DILocation(line: 398, scope: !696)
!782 = !DILocation(line: 400, scope: !696)
!783 = !DILocation(line: 406, scope: !696)
!784 = !DILocation(line: 407, scope: !696)
!785 = !DILocation(line: 408, scope: !696)
!786 = !DILocation(line: 409, scope: !696)
!787 = !DILocation(line: 412, scope: !696)
!788 = !DILocation(line: 413, scope: !696)
!789 = !DILocation(line: 414, scope: !696)
!790 = !DILocation(line: 415, scope: !696)
!791 = !DILocation(line: 416, scope: !696)
!792 = !DILocation(line: 417, scope: !696)
!793 = !DILocation(line: 418, scope: !696)
!794 = !DILocation(line: 419, scope: !696)
!795 = !DILocation(line: 421, scope: !696)
!796 = !DILocation(line: 427, scope: !696)
!797 = !DILocation(line: 428, scope: !696)
!798 = !DILocation(line: 434, scope: !696)
!799 = !DILocation(line: 436, scope: !696)
!800 = !DILocation(line: 438, scope: !696)
!801 = !DILocation(line: 440, scope: !696)
!802 = !DILocation(line: 442, scope: !696)
!803 = !DILocation(line: 448, scope: !696)
!804 = !DILocation(line: 449, scope: !696)
!805 = !DILocation(line: 468, scope: !696)
!806 = !DILocation(line: 469, scope: !696)
!807 = !DILocation(line: 470, scope: !696)
!808 = !DILocation(line: 454, scope: !696)
!809 = !DILocation(line: 461, scope: !696)
!810 = !DILocation(line: 463, scope: !696)
!811 = !DILocation(line: 479, scope: !696)
!812 = !DILocation(line: 480, scope: !696)
!813 = !DILocation(line: 481, scope: !696)
!814 = !DILocation(line: 484, scope: !696)
!815 = !DILocation(line: 485, scope: !696)
!816 = !DILocation(line: 486, scope: !696)
!817 = !DILocation(line: 487, scope: !696)
!818 = !DILocation(line: 490, scope: !696)
!819 = !DILocation(line: 492, scope: !696)
!820 = !DILocation(line: 500, scope: !696)
!821 = !DILocation(line: 506, scope: !696)
!822 = !DILocation(line: 508, scope: !696)
!823 = !DILocation(line: 509, scope: !696)
!824 = !DILocation(line: 510, scope: !696)
!825 = !DILocation(line: 516, scope: !696)
!826 = !DILocation(line: 520, scope: !696)
!827 = !DILocation(line: 521, scope: !696)
!828 = !DILocation(line: 527, scope: !696)
!829 = !DILocation(line: 530, scope: !696)
!830 = !DILocation(line: 535, scope: !696)
!831 = !DILocation(line: 536, scope: !696)
!832 = !DILocation(line: 537, scope: !696)
!833 = !DILocation(line: 541, scope: !696)
!834 = !DILocation(line: 542, scope: !696)
!835 = !DILocation(line: 550, scope: !696)
!836 = !DILocation(line: 551, scope: !696)
!837 = !DILocation(line: 554, scope: !696)
!838 = !DILocation(line: 555, scope: !696)
!839 = !DILocation(line: 556, scope: !696)
!840 = !DILocation(line: 557, scope: !696)
!841 = !DILocation(line: 558, scope: !696)
!842 = !DILocation(line: 559, scope: !696)
!843 = !DILocation(line: 566, scope: !696)
!844 = !DILocation(line: 571, scope: !696)
!845 = !DILocation(line: 572, scope: !696)
!846 = !DILocation(line: 573, scope: !696)
!847 = !DILocation(line: 575, scope: !696)
!848 = !DILocation(line: 603, scope: !696)
!849 = !DILocation(line: 604, scope: !696)
!850 = !DILocation(line: 619, scope: !696)
!851 = !DILocation(line: 625, scope: !696)
!852 = !DILocation(line: 626, scope: !696)
!853 = !DILocation(line: 627, scope: !696)
!854 = !DILocation(line: 630, scope: !696)
!855 = !DILocation(line: 631, scope: !696)
!856 = !DILocation(line: 638, scope: !696)
!857 = !DILocation(line: 639, scope: !696)
!858 = !DILocation(line: 641, scope: !696)
!859 = !DILocation(line: 646, scope: !696)
!860 = !DILocation(line: 647, scope: !696)
!861 = !DILocation(line: 648, scope: !696)
!862 = !DILocation(line: 649, scope: !696)
!863 = !DILocation(line: 652, scope: !696)
!864 = !DILocation(line: 653, scope: !696)
!865 = !DILocation(line: 654, scope: !696)
!866 = !DILocation(line: 656, scope: !696)
!867 = !DILocation(line: 662, scope: !696)
!868 = !DILocation(line: 663, scope: !696)
!869 = !DILocation(line: 664, scope: !696)
!870 = !DILocation(line: 667, scope: !696)
!871 = !DILocation(line: 668, scope: !696)
!872 = !DILocation(line: 671, scope: !696)
!873 = !DILocation(line: 673, scope: !696)
!874 = !DILocation(line: 677, scope: !696)
!875 = !DILocation(line: 678, scope: !696)
!876 = !DILocation(line: 679, scope: !696)
!877 = !DILocation(line: 684, scope: !696)
!878 = !DILocation(line: 687, scope: !696)
!879 = !DILocation(line: 688, scope: !696)
!880 = !DILocation(line: 689, scope: !696)
!881 = !DILocation(line: 693, scope: !696)
!882 = !DILocation(line: 694, scope: !696)
!883 = !DILocation(line: 695, scope: !696)
!884 = !DILocation(line: 698, scope: !696)
!885 = !DILocation(line: 699, scope: !696)
!886 = !DILocation(line: 701, scope: !696)
!887 = !DILocation(line: 707, scope: !696)
!888 = !DILocation(line: 26, scope: !889)
!889 = !DILexicalBlockFile(scope: !37, file: !890, discriminator: 0)
!890 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!891 = !DILocation(line: 41, scope: !889)
!892 = !DILocation(line: 42, scope: !889)
!893 = !DILocation(line: 45, scope: !889)
!894 = !DILocation(line: 48, scope: !889)
!895 = !DILocation(line: 24, scope: !889)
!896 = !DILocation(line: 56, scope: !889)
!897 = !DILocation(line: 66, scope: !889)
!898 = !DILocation(line: 42, scope: !899)
!899 = !DILexicalBlockFile(scope: !37, file: !900, discriminator: 0)
!900 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!901 = !DILocation(line: 43, scope: !899)
!902 = !DILocation(line: 46, scope: !899)
!903 = !DILocation(line: 65, scope: !899)
!904 = !DILocation(line: 71, scope: !899)
!905 = !DILocation(line: 75, scope: !899)
!906 = !DILocation(line: 80, scope: !899)
!907 = !DILocation(line: 83, scope: !899)
!908 = !DILocation(line: 84, scope: !899)
!909 = !DILocation(line: 87, scope: !899)
!910 = !DILocation(line: 93, scope: !899)
!911 = !DILocation(line: 99, scope: !899)
!912 = !DILocation(line: 101, scope: !899)
!913 = !DILocation(line: 114, scope: !899)
!914 = !DILocation(line: 116, scope: !899)
!915 = !DILocation(line: 32, scope: !916)
!916 = !DILexicalBlockFile(scope: !37, file: !917, discriminator: 0)
!917 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenPseudoLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!918 = !DILocation(line: 41, scope: !916)
!919 = !DILocation(line: 46, scope: !916)
!920 = !DILocation(line: 47, scope: !916)
!921 = !DILocation(line: 49, scope: !916)
!922 = !DILocation(line: 50, scope: !916)
!923 = !DILocation(line: 52, scope: !916)
!924 = !DILocation(line: 53, scope: !916)
!925 = !DILocation(line: 55, scope: !916)
!926 = !DILocation(line: 56, scope: !916)
!927 = !DILocation(line: 57, scope: !916)
!928 = !DILocation(line: 36, scope: !929)
!929 = !DILexicalBlockFile(scope: !37, file: !930, discriminator: 0)
!930 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterDataLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!931 = !DILocation(line: 39, scope: !929)
!932 = !DILocation(line: 40, scope: !929)
!933 = !DILocation(line: 41, scope: !929)
!934 = !DILocation(line: 46, scope: !929)
!935 = !DILocation(line: 60, scope: !929)
!936 = !DILocation(line: 61, scope: !929)
!937 = !DILocation(line: 62, scope: !929)
!938 = !DILocation(line: 63, scope: !929)
!939 = !DILocation(line: 31, scope: !940)
!940 = !DILexicalBlockFile(scope: !37, file: !941, discriminator: 0)
!941 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!942 = !DILocation(line: 52, scope: !940)
!943 = !DILocation(line: 53, scope: !940)
!944 = !DILocation(line: 54, scope: !940)
!945 = !DILocation(line: 55, scope: !940)
!946 = !DILocation(line: 56, scope: !940)
!947 = !DILocation(line: 129, scope: !940)
!948 = !DILocation(line: 133, scope: !940)
!949 = !DILocation(line: 153, scope: !940)
!950 = !DILocation(line: 154, scope: !940)
!951 = !DILocation(line: 160, scope: !940)
!952 = !DILocation(line: 164, scope: !940)
!953 = !DILocation(line: 165, scope: !940)
!954 = !DILocation(line: 167, scope: !940)
!955 = !DILocation(line: 168, scope: !940)
!956 = !DILocation(line: 169, scope: !940)
!957 = !DILocation(line: 170, scope: !940)
!958 = !DILocation(line: 171, scope: !940)
!959 = !DILocation(line: 177, scope: !940)
!960 = !DILocation(line: 185, scope: !940)
!961 = !DILocation(line: 186, scope: !940)
!962 = !DILocation(line: 188, scope: !940)
!963 = !DILocation(line: 198, scope: !940)
!964 = !DILocation(line: 199, scope: !940)
!965 = !DILocation(line: 200, scope: !940)
!966 = !DILocation(line: 201, scope: !940)
!967 = !DILocation(line: 203, scope: !940)
!968 = !DILocation(line: 204, scope: !940)
!969 = !DILocation(line: 205, scope: !940)
!970 = !DILocation(line: 206, scope: !940)
!971 = !DILocation(line: 208, scope: !940)
!972 = !DILocation(line: 211, scope: !940)
!973 = !DILocation(line: 215, scope: !940)
!974 = !DILocation(line: 216, scope: !940)
!975 = !DILocation(line: 218, scope: !940)
!976 = !DILocation(line: 232, scope: !940)
!977 = !DILocation(line: 233, scope: !940)
!978 = !DILocation(line: 237, scope: !940)
!979 = !DILocation(line: 238, scope: !940)
!980 = !DILocation(line: 239, scope: !940)
!981 = !DILocation(line: 241, scope: !940)
!982 = !DILocation(line: 259, scope: !940)
!983 = !DILocation(line: 36, scope: !984)
!984 = !DILexicalBlockFile(scope: !37, file: !985, discriminator: 0)
!985 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/JumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!986 = !DILocation(line: 38, scope: !984)
!987 = !DILocation(line: 42, scope: !984)
!988 = !DILocation(line: 39, scope: !984)
!989 = !DILocation(line: 36, scope: !990)
!990 = !DILexicalBlockFile(scope: !37, file: !991, discriminator: 0)
!991 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MoveLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!992 = !DILocation(line: 37, scope: !990)
!993 = !DILocation(line: 39, scope: !990)
!994 = !DILocation(line: 34, scope: !995)
!995 = !DILexicalBlockFile(scope: !37, file: !996, discriminator: 0)
!996 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfPosLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!997 = !DILocation(line: 35, scope: !995)
!998 = !DILocation(line: 36, scope: !995)
!999 = !DILocation(line: 37, scope: !995)
!1000 = !DILocation(line: 43, scope: !995)
!1001 = !DILocation(line: 45, scope: !995)
!1002 = !DILocation(line: 61, scope: !995)
!1003 = !DILocation(line: 66, scope: !1004)
!1004 = !DILexicalBlockFile(scope: !37, file: !1005, discriminator: 0)
!1005 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ArithmeticLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1006 = !DILocation(line: 71, scope: !1004)
!1007 = !DILocation(line: 74, scope: !1004)
!1008 = !DILocation(line: 78, scope: !1004)
!1009 = !DILocation(line: 79, scope: !1004)
!1010 = !DILocation(line: 185, scope: !1004)
!1011 = !DILocation(line: 39, scope: !1012)
!1012 = !DILexicalBlockFile(scope: !37, file: !1013, discriminator: 0)
!1013 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/NumericType.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1014 = !DILocation(line: 43, scope: !1012)
!1015 = !DILocation(line: 45, scope: !1012)
!1016 = !DILocation(line: 56, scope: !1012)
!1017 = !DILocation(line: 61, scope: !1012)
!1018 = !DILocation(line: 67, scope: !1012)
!1019 = !DILocation(line: 83, scope: !1012)
!1020 = !DILocation(line: 88, scope: !1012)
!1021 = !DILocation(line: 94, scope: !1012)
!1022 = !DILocation(line: 98, scope: !1012)
!1023 = !DILocation(line: 106, scope: !1012)
!1024 = !DILocation(line: 188, scope: !1004)
!1025 = !DILocation(line: 193, scope: !1004)
!1026 = !DILocation(line: 197, scope: !1004)
!1027 = !DILocation(line: 200, scope: !1004)
!1028 = !DILocation(line: 203, scope: !1004)
!1029 = !DILocation(line: 204, scope: !1004)
!1030 = !DILocation(line: 205, scope: !1004)
!1031 = !DILocation(line: 214, scope: !1004)
!1032 = !DILocation(line: 222, scope: !1004)
!1033 = !DILocation(line: 223, scope: !1004)
!1034 = !DILocation(line: 224, scope: !1004)
!1035 = !DILocation(line: 227, scope: !1004)
!1036 = !DILocation(line: 228, scope: !1004)
!1037 = !DILocation(line: 229, scope: !1004)
!1038 = !DILocation(line: 230, scope: !1004)
!1039 = !DILocation(line: 231, scope: !1004)
!1040 = !DILocation(line: 247, scope: !1004)
!1041 = !DILocation(line: 250, scope: !1004)
!1042 = !DILocation(line: 251, scope: !1004)
!1043 = !DILocation(line: 346, scope: !1004)
!1044 = !DILocation(line: 347, scope: !1004)
!1045 = !DILocation(line: 348, scope: !1004)
!1046 = !DILocation(line: 349, scope: !1004)
!1047 = !DILocation(line: 39, scope: !1004)
!1048 = !DILocation(line: 354, scope: !1004)
!1049 = !DILocation(line: 358, scope: !1004)
!1050 = !DILocation(line: 359, scope: !1004)
!1051 = !DILocation(line: 360, scope: !1004)
!1052 = !DILocation(line: 370, scope: !1004)
!1053 = !DILocation(line: 373, scope: !1004)
!1054 = !DILocation(line: 384, scope: !1004)
!1055 = !DILocation(line: 445, scope: !1004)
!1056 = !DILocation(line: 446, scope: !1004)
!1057 = !DILocation(line: 448, scope: !1004)
!1058 = !DILocation(line: 453, scope: !1004)
!1059 = !DILocation(line: 454, scope: !1004)
!1060 = !DILocation(line: 455, scope: !1004)
!1061 = !DILocation(line: 460, scope: !1004)
!1062 = !DILocation(line: 476, scope: !1004)
!1063 = !DILocation(line: 469, scope: !1004)
!1064 = !DILocation(line: 257, scope: !1004)
!1065 = !DILocation(line: 260, scope: !1004)
!1066 = !DILocation(line: 261, scope: !1004)
!1067 = !DILocation(line: 390, scope: !1004)
!1068 = !DILocation(line: 25, scope: !1069)
!1069 = !DILexicalBlockFile(scope: !37, file: !1070, discriminator: 0)
!1070 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggStepLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1071 = !DILocation(line: 47, scope: !1069)
!1072 = !DILocation(line: 48, scope: !1069)
!1073 = !DILocation(line: 58, scope: !1069)
!1074 = !DILocation(line: 63, scope: !1069)
!1075 = !DILocation(line: 64, scope: !1069)
!1076 = !DILocation(line: 66, scope: !1069)
!1077 = !DILocation(line: 73, scope: !1069)
!1078 = !DILocation(line: 75, scope: !1069)
!1079 = !DILocation(line: 79, scope: !1069)
!1080 = !DILocation(line: 80, scope: !1069)
!1081 = !DILocation(line: 83, scope: !1069)
!1082 = !DILocation(line: 88, scope: !1069)
!1083 = !DILocation(line: 89, scope: !1069)
!1084 = !DILocation(line: 90, scope: !1069)
!1085 = !DILocation(line: 91, scope: !1069)
!1086 = !DILocation(line: 92, scope: !1069)
!1087 = !DILocation(line: 93, scope: !1069)
!1088 = !DILocation(line: 94, scope: !1069)
!1089 = !DILocation(line: 95, scope: !1069)
!1090 = !DILocation(line: 96, scope: !1069)
!1091 = !DILocation(line: 97, scope: !1069)
!1092 = !DILocation(line: 108, scope: !1069)
!1093 = !DILocation(line: 116, scope: !1069)
!1094 = !DILocation(line: 117, scope: !1069)
!1095 = !DILocation(line: 119, scope: !1069)
!1096 = !DILocation(line: 125, scope: !1069)
!1097 = !DILocation(line: 126, scope: !1069)
!1098 = !DILocation(line: 128, scope: !1069)
!1099 = !DILocation(line: 129, scope: !1069)
!1100 = !DILocation(line: 130, scope: !1069)
!1101 = !DILocation(line: 131, scope: !1069)
!1102 = !DILocation(line: 133, scope: !1069)
!1103 = !DILocation(line: 136, scope: !1069)
!1104 = !DILocation(line: 137, scope: !1069)
!1105 = !DILocation(line: 138, scope: !1069)
!1106 = !DILocation(line: 139, scope: !1069)
!1107 = !DILocation(line: 140, scope: !1069)
!1108 = !DILocation(line: 143, scope: !1069)
!1109 = !DILocation(line: 146, scope: !1069)
!1110 = !DILocation(line: 150, scope: !1069)
!1111 = !DILocation(line: 158, scope: !1069)
!1112 = !DILocation(line: 164, scope: !1069)
!1113 = !DILocation(line: 165, scope: !1069)
!1114 = !DILocation(line: 166, scope: !1069)
!1115 = !DILocation(line: 167, scope: !1069)
!1116 = !DILocation(line: 171, scope: !1069)
!1117 = !DILocation(line: 172, scope: !1069)
!1118 = !DILocation(line: 173, scope: !1069)
!1119 = !DILocation(line: 174, scope: !1069)
!1120 = !DILocation(line: 175, scope: !1069)
!1121 = !DILocation(line: 178, scope: !1069)
!1122 = !DILocation(line: 182, scope: !1069)
!1123 = !DILocation(line: 187, scope: !1069)
!1124 = !DILocation(line: 188, scope: !1069)
!1125 = !DILocation(line: 189, scope: !1069)
!1126 = !DILocation(line: 194, scope: !1069)
!1127 = !DILocation(line: 198, scope: !1069)
!1128 = !DILocation(line: 199, scope: !1069)
!1129 = !DILocation(line: 200, scope: !1069)
!1130 = !DILocation(line: 201, scope: !1069)
!1131 = !DILocation(line: 202, scope: !1069)
!1132 = !DILocation(line: 203, scope: !1069)
!1133 = !DILocation(line: 210, scope: !1069)
!1134 = !DILocation(line: 231, scope: !1069)
!1135 = !DILocation(line: 233, scope: !1069)
!1136 = !DILocation(line: 234, scope: !1069)
!1137 = !DILocation(line: 239, scope: !1069)
!1138 = !DILocation(line: 242, scope: !1069)
!1139 = !DILocation(line: 243, scope: !1069)
!1140 = !DILocation(line: 246, scope: !1069)
!1141 = !DILocation(line: 216, scope: !1069)
!1142 = !DILocation(line: 219, scope: !1069)
!1143 = !DILocation(line: 221, scope: !1069)
!1144 = !DILocation(line: 256, scope: !1069)
!1145 = !DILocation(line: 258, scope: !1069)
!1146 = !DILocation(line: 259, scope: !1069)
!1147 = !DILocation(line: 260, scope: !1069)
!1148 = !DILocation(line: 263, scope: !1069)
!1149 = !DILocation(line: 270, scope: !1069)
!1150 = !DILocation(line: 271, scope: !1069)
!1151 = !DILocation(line: 277, scope: !1069)
!1152 = !DILocation(line: 278, scope: !1069)
!1153 = !DILocation(line: 279, scope: !1069)
!1154 = !DILocation(line: 282, scope: !1069)
!1155 = !DILocation(line: 283, scope: !1069)
!1156 = !DILocation(line: 289, scope: !1069)
!1157 = !DILocation(line: 293, scope: !1069)
!1158 = !DILocation(line: 297, scope: !1069)
!1159 = !DILocation(line: 302, scope: !1069)
!1160 = !DILocation(line: 303, scope: !1069)
!1161 = !DILocation(line: 305, scope: !1069)
!1162 = !DILocation(line: 311, scope: !1069)
!1163 = !DILocation(line: 312, scope: !1069)
!1164 = !DILocation(line: 314, scope: !1069)
!1165 = !DILocation(line: 319, scope: !1069)
!1166 = !DILocation(line: 320, scope: !1069)
!1167 = !DILocation(line: 325, scope: !1069)
!1168 = !DILocation(line: 336, scope: !1069)
!1169 = !DILocation(line: 342, scope: !1069)
!1170 = !DILocation(line: 341, scope: !1069)
!1171 = !DILocation(line: 350, scope: !1069)
!1172 = !DILocation(line: 352, scope: !1069)
!1173 = !DILocation(line: 358, scope: !1069)
!1174 = !DILocation(line: 359, scope: !1069)
!1175 = !DILocation(line: 362, scope: !1069)
!1176 = !DILocation(line: 363, scope: !1069)
!1177 = !DILocation(line: 366, scope: !1069)
!1178 = !DILocation(line: 369, scope: !1069)
!1179 = !DILocation(line: 374, scope: !1069)
!1180 = !DILocation(line: 382, scope: !1069)
!1181 = !DILocation(line: 34, scope: !1182)
!1182 = !DILexicalBlockFile(scope: !37, file: !1183, discriminator: 0)
!1183 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1184 = !DILocation(line: 35, scope: !1182)
!1185 = !DILocation(line: 40, scope: !1182)
!1186 = !DILocation(line: 41, scope: !1182)
!1187 = !DILocation(line: 36, scope: !1188)
!1188 = !DILexicalBlockFile(scope: !37, file: !1189, discriminator: 0)
!1189 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterNextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1190 = !DILocation(line: 37, scope: !1188)
!1191 = !DILocation(line: 43, scope: !1188)
!1192 = !DILocation(line: 46, scope: !1188)
!1193 = !DILocation(line: 47, scope: !1188)
!1194 = !DILocation(line: 49, scope: !1188)
!1195 = !DILocation(line: 55, scope: !1188)
!1196 = !DILocation(line: 56, scope: !1188)
!1197 = !DILocation(line: 60, scope: !1188)
!1198 = !DILocation(line: 62, scope: !1188)
!1199 = !DILocation(line: 75, scope: !1188)
!1200 = !DILocation(line: 85, scope: !1188)
!1201 = !DILocation(line: 31, scope: !1202)
!1202 = !DILexicalBlockFile(scope: !37, file: !1203, discriminator: 0)
!1203 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ReturnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1204 = !DILocation(line: 33, scope: !1202)
!1205 = !DILocation(line: 35, scope: !1202)
!1206 = !DILocation(line: 37, scope: !1202)
!1207 = !DILocation(line: 39, scope: !1202)
!1208 = !DILocation(line: 41, scope: !1202)
!1209 = !DILocation(line: 45, scope: !1202)
!1210 = !DILocation(line: 48, scope: !1202)
!1211 = !DILocation(line: 31, scope: !1212)
!1212 = !DILexicalBlockFile(scope: !37, file: !1213, discriminator: 0)
!1213 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggFinalLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1214 = !DILocation(line: 32, scope: !1212)
!1215 = !DILocation(line: 33, scope: !1212)
!1216 = !DILocation(line: 34, scope: !1212)
!1217 = !DILocation(line: 39, scope: !1212)
!1218 = !DILocation(line: 45, scope: !1212)
!1219 = !DILocation(line: 47, scope: !1212)
!1220 = !DILocation(line: 48, scope: !1212)
!1221 = !DILocation(line: 49, scope: !1212)
!1222 = !DILocation(line: 56, scope: !1212)
!1223 = !DILocation(line: 59, scope: !1212)
!1224 = !DILocation(line: 67, scope: !1212)
!1225 = !DILocation(line: 35, scope: !1226)
!1226 = !DILexicalBlockFile(scope: !37, file: !1227, discriminator: 0)
!1227 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SCopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1228 = !DILocation(line: 38, scope: !1226)
!1229 = !DILocation(line: 41, scope: !1226)
!1230 = !DILocation(line: 47, scope: !1231)
!1231 = !DILexicalBlockFile(scope: !37, file: !1232, discriminator: 0)
!1232 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NewRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1233 = !DILocation(line: 49, scope: !1231)
!1234 = !DILocation(line: 50, scope: !1231)
!1235 = !DILocation(line: 52, scope: !1231)
!1236 = !DILocation(line: 53, scope: !1231)
!1237 = !DILocation(line: 59, scope: !1231)
!1238 = !DILocation(line: 60, scope: !1231)
!1239 = !DILocation(line: 63, scope: !1231)
!1240 = !DILocation(line: 64, scope: !1231)
!1241 = !DILocation(line: 66, scope: !1231)
!1242 = !DILocation(line: 67, scope: !1231)
!1243 = !DILocation(line: 71, scope: !1231)
!1244 = !DILocation(line: 72, scope: !1231)
!1245 = !DILocation(line: 73, scope: !1231)
!1246 = !DILocation(line: 79, scope: !1231)
!1247 = !DILocation(line: 81, scope: !1231)
!1248 = !DILocation(line: 85, scope: !1231)
!1249 = !DILocation(line: 97, scope: !1231)
!1250 = !DILocation(line: 98, scope: !1231)
!1251 = !DILocation(line: 100, scope: !1231)
!1252 = !DILocation(line: 105, scope: !1231)
!1253 = !DILocation(line: 107, scope: !1231)
!1254 = !DILocation(line: 113, scope: !1231)
!1255 = !DILocation(line: 114, scope: !1231)
!1256 = !DILocation(line: 121, scope: !1231)
!1257 = !DILocation(line: 123, scope: !1231)
!1258 = !DILocation(line: 128, scope: !1231)
!1259 = !DILocation(line: 130, scope: !1231)
!1260 = !DILocation(line: 136, scope: !1231)
!1261 = !DILocation(line: 137, scope: !1231)
!1262 = !DILocation(line: 139, scope: !1231)
!1263 = !DILocation(line: 240, scope: !1231)
!1264 = !DILocation(line: 241, scope: !1231)
!1265 = !DILocation(line: 242, scope: !1231)
!1266 = !DILocation(line: 244, scope: !1231)
!1267 = !DILocation(line: 249, scope: !1231)
!1268 = !DILocation(line: 256, scope: !1231)
!1269 = !DILocation(line: 263, scope: !1231)
!1270 = !DILocation(line: 261, scope: !1231)
!1271 = !DILocation(line: 267, scope: !1231)
!1272 = !DILocation(line: 272, scope: !1231)
!1273 = !DILocation(line: 273, scope: !1231)
!1274 = !DILocation(line: 281, scope: !1231)
!1275 = !DILocation(line: 288, scope: !1231)
!1276 = !DILocation(line: 291, scope: !1231)
!1277 = !DILocation(line: 292, scope: !1231)
!1278 = !DILocation(line: 295, scope: !1231)
!1279 = !DILocation(line: 296, scope: !1231)
!1280 = !DILocation(line: 297, scope: !1231)
!1281 = !DILocation(line: 298, scope: !1231)
!1282 = !DILocation(line: 301, scope: !1231)
!1283 = !DILocation(line: 302, scope: !1231)
!1284 = !DILocation(line: 304, scope: !1231)
!1285 = !DILocation(line: 313, scope: !1231)
!1286 = !DILocation(line: 314, scope: !1231)
!1287 = !DILocation(line: 317, scope: !1231)
!1288 = !DILocation(line: 318, scope: !1231)
!1289 = !DILocation(line: 325, scope: !1231)
!1290 = !DILocation(line: 326, scope: !1231)
!1291 = !DILocation(line: 327, scope: !1231)
!1292 = !DILocation(line: 328, scope: !1231)
!1293 = !DILocation(line: 330, scope: !1231)
!1294 = !DILocation(line: 40, scope: !1295)
!1295 = !DILexicalBlockFile(scope: !37, file: !1296, discriminator: 0)
!1296 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1297 = !DILocation(line: 43, scope: !1295)
!1298 = !DILocation(line: 44, scope: !1295)
!1299 = !DILocation(line: 47, scope: !1295)
!1300 = !DILocation(line: 50, scope: !1295)
!1301 = !DILocation(line: 51, scope: !1295)
!1302 = !DILocation(line: 52, scope: !1295)
!1303 = !DILocation(line: 53, scope: !1295)
!1304 = !DILocation(line: 54, scope: !1295)
!1305 = !DILocation(line: 55, scope: !1295)
!1306 = !DILocation(line: 56, scope: !1295)
!1307 = !DILocation(line: 57, scope: !1295)
!1308 = !DILocation(line: 58, scope: !1295)
!1309 = !DILocation(line: 63, scope: !1295)
!1310 = !DILocation(line: 64, scope: !1295)
!1311 = !DILocation(line: 65, scope: !1295)
!1312 = !DILocation(line: 66, scope: !1295)
!1313 = !DILocation(line: 75, scope: !1295)
!1314 = !DILocation(line: 80, scope: !1295)
!1315 = !DILocation(line: 81, scope: !1295)
!1316 = !DILocation(line: 83, scope: !1295)
!1317 = !DILocation(line: 84, scope: !1295)
!1318 = !DILocation(line: 86, scope: !1295)
!1319 = !DILocation(line: 87, scope: !1295)
!1320 = !DILocation(line: 88, scope: !1295)
!1321 = !DILocation(line: 90, scope: !1295)
!1322 = !DILocation(line: 93, scope: !1295)
!1323 = !DILocation(line: 94, scope: !1295)
!1324 = !DILocation(line: 95, scope: !1295)
!1325 = !DILocation(line: 96, scope: !1295)
!1326 = !DILocation(line: 97, scope: !1295)
!1327 = !DILocation(line: 99, scope: !1295)
!1328 = !DILocation(line: 105, scope: !1295)
!1329 = !DILocation(line: 108, scope: !1295)
!1330 = !DILocation(line: 110, scope: !1295)
!1331 = !DILocation(line: 129, scope: !1295)
!1332 = !DILocation(line: 130, scope: !1295)
!1333 = !DILocation(line: 131, scope: !1295)
!1334 = !DILocation(line: 132, scope: !1295)
!1335 = !DILocation(line: 135, scope: !1295)
!1336 = !DILocation(line: 136, scope: !1295)
!1337 = !DILocation(line: 137, scope: !1295)
!1338 = !DILocation(line: 138, scope: !1295)
!1339 = !DILocation(line: 150, scope: !1295)
!1340 = !DILocation(line: 151, scope: !1295)
!1341 = !DILocation(line: 152, scope: !1295)
!1342 = !DILocation(line: 154, scope: !1295)
!1343 = !DILocation(line: 161, scope: !1295)
!1344 = !DILocation(line: 163, scope: !1295)
!1345 = !DILocation(line: 168, scope: !1295)
!1346 = !DILocation(line: 169, scope: !1295)
!1347 = !DILocation(line: 170, scope: !1295)
!1348 = !DILocation(line: 172, scope: !1295)
!1349 = !DILocation(line: 174, scope: !1295)
!1350 = !DILocation(line: 180, scope: !1295)
!1351 = !DILocation(line: 182, scope: !1295)
!1352 = !DILocation(line: 187, scope: !1295)
!1353 = !DILocation(line: 188, scope: !1295)
!1354 = !DILocation(line: 190, scope: !1295)
!1355 = !DILocation(line: 191, scope: !1295)
!1356 = !DILocation(line: 192, scope: !1295)
!1357 = !DILocation(line: 200, scope: !1295)
!1358 = !DILocation(line: 201, scope: !1295)
!1359 = !DILocation(line: 204, scope: !1295)
!1360 = !DILocation(line: 205, scope: !1295)
!1361 = !DILocation(line: 213, scope: !1295)
!1362 = !DILocation(line: 237, scope: !1295)
!1363 = !DILocation(line: 63, scope: !192)
!1364 = !DILocation(line: 66, scope: !192)
!1365 = !DILocation(line: 71, scope: !192)
!1366 = !DILocation(line: 74, scope: !192)
!1367 = !DILocation(line: 75, scope: !192)
!1368 = !DILocation(line: 71, scope: !77)
!1369 = !DILocation(line: 38, scope: !1370)
!1370 = !DILexicalBlockFile(scope: !37, file: !1371, discriminator: 0)
!1371 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitCoroutineLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1372 = !DILocation(line: 41, scope: !1370)
!1373 = !DILocation(line: 42, scope: !1370)
!1374 = !DILocation(line: 43, scope: !1370)
!1375 = !DILocation(line: 46, scope: !1370)
!1376 = !DILocation(line: 47, scope: !1370)
!1377 = !DILocation(line: 52, scope: !1370)
!1378 = !DILocation(line: 40, scope: !1379)
!1379 = !DILexicalBlockFile(scope: !37, file: !1380, discriminator: 0)
!1380 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1381 = !DILocation(line: 41, scope: !1379)
!1382 = !DILocation(line: 43, scope: !1379)
!1383 = !DILocation(line: 35, scope: !1384)
!1384 = !DILexicalBlockFile(scope: !37, file: !1385, discriminator: 0)
!1385 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/YieldLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1386 = !DILocation(line: 38, scope: !1384)
!1387 = !DILocation(line: 39, scope: !1384)
!1388 = !DILocation(line: 42, scope: !1384)
!1389 = !DILocation(line: 43, scope: !1384)
!1390 = !DILocation(line: 44, scope: !1384)
!1391 = !DILocation(line: 45, scope: !1384)
!1392 = !DILocation(line: 48, scope: !1384)
!1393 = !DILocation(line: 52, scope: !1384)
!1394 = !DILocation(line: 53, scope: !1384)
!1395 = !DILocation(line: 58, scope: !1384)
!1396 = !DILocation(line: 34, scope: !1397)
!1397 = !DILexicalBlockFile(scope: !37, file: !1398, discriminator: 0)
!1398 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/EndCoroutineLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1399 = !DILocation(line: 37, scope: !1397)
!1400 = !DILocation(line: 38, scope: !1397)
!1401 = !DILocation(line: 39, scope: !1397)
!1402 = !DILocation(line: 40, scope: !1397)
!1403 = !DILocation(line: 42, scope: !1397)
!1404 = !DILocation(line: 43, scope: !1397)
!1405 = !DILocation(line: 44, scope: !1397)
!1406 = !DILocation(line: 49, scope: !1397)
!1407 = !DILocation(line: 52, scope: !1397)
!1408 = !DILocation(line: 53, scope: !1397)
!1409 = !DILocation(line: 59, scope: !1397)
!1410 = !DILocation(line: 34, scope: !1411)
!1411 = !DILexicalBlockFile(scope: !37, file: !1412, discriminator: 0)
!1412 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CollSeqLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1413 = !DILocation(line: 35, scope: !1411)
!1414 = !DILocation(line: 36, scope: !1411)
!1415 = !DILocation(line: 42, scope: !1411)
!1416 = !DILocation(line: 44, scope: !1411)
!1417 = !DILocation(line: 48, scope: !1411)
!1418 = !DILocation(line: 49, scope: !1411)
!1419 = !DILocation(line: 51, scope: !1411)
!1420 = !DILocation(line: 38, scope: !1421)
!1421 = !DILexicalBlockFile(scope: !37, file: !1422, discriminator: 0)
!1422 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/DecrJumpZeroLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1423 = !DILocation(line: 41, scope: !1421)
!1424 = !DILocation(line: 42, scope: !1421)
!1425 = !DILocation(line: 43, scope: !1421)
!1426 = !DILocation(line: 49, scope: !1421)
!1427 = !DILocation(line: 51, scope: !1421)
!1428 = !DILocation(line: 56, scope: !1421)
!1429 = !DILocation(line: 57, scope: !1421)
!1430 = !DILocation(line: 59, scope: !1421)
!1431 = !DILocation(line: 626, scope: !623)
!1432 = !DILocation(line: 628, scope: !623)
!1433 = !DILocation(line: 634, scope: !623)
!1434 = !DILocation(line: 636, scope: !623)
!1435 = !DILocation(line: 642, scope: !623)
!1436 = !DILocation(line: 644, scope: !623)
!1437 = !DILocation(line: 41, scope: !1438)
!1438 = !DILexicalBlockFile(scope: !37, file: !1439, discriminator: 0)
!1439 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1440 = !DILocation(line: 43, scope: !1438)
!1441 = !DILocation(line: 44, scope: !1438)
!1442 = !DILocation(line: 45, scope: !1438)
!1443 = !DILocation(line: 47, scope: !1438)
!1444 = !DILocation(line: 49, scope: !1438)
!1445 = !DILocation(line: 50, scope: !1438)
!1446 = !DILocation(line: 51, scope: !1438)
!1447 = !DILocation(line: 58, scope: !1438)
!1448 = !DILocation(line: 60, scope: !1438)
!1449 = !DILocation(line: 65, scope: !1438)
!1450 = !DILocation(line: 66, scope: !1438)
!1451 = !DILocation(line: 69, scope: !1438)
!1452 = !DILocation(line: 72, scope: !1438)
!1453 = !DILocation(line: 73, scope: !1438)
!1454 = !DILocation(line: 74, scope: !1438)
!1455 = !DILocation(line: 75, scope: !1438)
!1456 = !DILocation(line: 81, scope: !1438)
!1457 = !DILocation(line: 85, scope: !1438)
!1458 = !DILocation(line: 86, scope: !1438)
!1459 = !DILocation(line: 87, scope: !1438)
!1460 = !DILocation(line: 88, scope: !1438)
!1461 = !DILocation(line: 90, scope: !1438)
!1462 = !DILocation(line: 95, scope: !1438)
!1463 = !DILocation(line: 96, scope: !1438)
!1464 = !DILocation(line: 97, scope: !1438)
!1465 = !DILocation(line: 98, scope: !1438)
!1466 = !DILocation(line: 100, scope: !1438)
!1467 = !DILocation(line: 107, scope: !1438)
!1468 = !DILocation(line: 110, scope: !1438)
!1469 = !DILocation(line: 111, scope: !1438)
!1470 = !DILocation(line: 114, scope: !1438)
!1471 = !DILocation(line: 117, scope: !1438)
!1472 = !DILocation(line: 118, scope: !1438)
!1473 = !DILocation(line: 125, scope: !1438)
!1474 = !DILocation(line: 128, scope: !1438)
!1475 = !DILocation(line: 129, scope: !1438)
!1476 = !DILocation(line: 132, scope: !1438)
!1477 = !DILocation(line: 133, scope: !1438)
!1478 = !DILocation(line: 136, scope: !1438)
!1479 = !DILocation(line: 137, scope: !1438)
!1480 = !DILocation(line: 140, scope: !1438)
!1481 = !DILocation(line: 141, scope: !1438)
!1482 = !DILocation(line: 144, scope: !1438)
!1483 = !DILocation(line: 145, scope: !1438)
!1484 = !DILocation(line: 146, scope: !1438)
!1485 = !DILocation(line: 155, scope: !1438)
!1486 = !DILocation(line: 157, scope: !1438)
!1487 = !DILocation(line: 165, scope: !1438)
!1488 = !DILocation(line: 166, scope: !1438)
!1489 = !DILocation(line: 178, scope: !1438)
!1490 = !DILocation(line: 183, scope: !1438)
!1491 = !DILocation(line: 184, scope: !1438)
!1492 = !DILocation(line: 39, scope: !1493)
!1493 = !DILexicalBlockFile(scope: !37, file: !1494, discriminator: 0)
!1494 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1495 = !DILocation(line: 40, scope: !1493)
!1496 = !DILocation(line: 43, scope: !1493)
!1497 = !DILocation(line: 44, scope: !1493)
!1498 = !DILocation(line: 48, scope: !1493)
!1499 = !DILocation(line: 51, scope: !1493)
!1500 = !DILocation(line: 52, scope: !1493)
!1501 = !DILocation(line: 53, scope: !1493)
!1502 = !DILocation(line: 68, scope: !1493)
!1503 = !DILocation(line: 73, scope: !1493)
!1504 = !DILocation(line: 74, scope: !1493)
!1505 = !DILocation(line: 77, scope: !1493)
!1506 = !DILocation(line: 82, scope: !1493)
!1507 = !DILocation(line: 83, scope: !1493)
!1508 = !DILocation(line: 84, scope: !1493)
!1509 = !DILocation(line: 86, scope: !1493)
!1510 = !DILocation(line: 92, scope: !1493)
!1511 = !DILocation(line: 93, scope: !1493)
!1512 = !DILocation(line: 94, scope: !1493)
!1513 = !DILocation(line: 96, scope: !1493)
!1514 = !DILocation(line: 102, scope: !1493)
!1515 = !DILocation(line: 103, scope: !1493)
!1516 = !DILocation(line: 104, scope: !1493)
!1517 = !DILocation(line: 106, scope: !1493)
!1518 = !DILocation(line: 120, scope: !1493)
!1519 = !DILocation(line: 128, scope: !1493)
!1520 = !DILocation(line: 129, scope: !1493)
!1521 = !DILocation(line: 135, scope: !1493)
!1522 = !DILocation(line: 140, scope: !1493)
!1523 = !DILocation(line: 141, scope: !1493)
!1524 = !DILocation(line: 144, scope: !1493)
!1525 = !DILocation(line: 149, scope: !1493)
!1526 = !DILocation(line: 150, scope: !1493)
!1527 = !DILocation(line: 151, scope: !1493)
!1528 = !DILocation(line: 152, scope: !1493)
!1529 = !DILocation(line: 154, scope: !1493)
!1530 = !DILocation(line: 159, scope: !1493)
!1531 = !DILocation(line: 160, scope: !1493)
!1532 = !DILocation(line: 161, scope: !1493)
!1533 = !DILocation(line: 162, scope: !1493)
!1534 = !DILocation(line: 164, scope: !1493)
!1535 = !DILocation(line: 167, scope: !1493)
!1536 = !DILocation(line: 23, scope: !1537)
!1537 = !DILexicalBlockFile(scope: !37, file: !1538, discriminator: 0)
!1538 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ResultRowLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1539 = !DILocation(line: 28, scope: !1537)
!1540 = !DILocation(line: 52, scope: !1537)
!1541 = !DILocation(line: 56, scope: !1537)
!1542 = !DILocation(line: 62, scope: !1537)
!1543 = !DILocation(line: 63, scope: !1537)
!1544 = !DILocation(line: 64, scope: !1537)
!1545 = !DILocation(line: 65, scope: !1537)
!1546 = !DILocation(line: 71, scope: !1537)
!1547 = !DILocation(line: 75, scope: !1537)
!1548 = !DILocation(line: 76, scope: !1537)
!1549 = !DILocation(line: 80, scope: !1537)
!1550 = !DILocation(line: 82, scope: !1537)
!1551 = !DILocation(line: 83, scope: !1537)
!1552 = !DILocation(line: 84, scope: !1537)
!1553 = !DILocation(line: 85, scope: !1537)
!1554 = !DILocation(line: 91, scope: !1537)
!1555 = !DILocation(line: 95, scope: !1537)
!1556 = !DILocation(line: 99, scope: !1537)
!1557 = !DILocation(line: 106, scope: !1537)
!1558 = !DILocation(line: 111, scope: !1537)
!1559 = !DILocation(line: 112, scope: !1537)
!1560 = !DILocation(line: 113, scope: !1537)
!1561 = !DILocation(line: 121, scope: !1537)
!1562 = !DILocation(line: 127, scope: !1537)
!1563 = !DILocation(line: 128, scope: !1537)
!1564 = !DILocation(line: 26, scope: !1565)
!1565 = !DILexicalBlockFile(scope: !37, file: !1566, discriminator: 0)
!1566 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/HaltLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1567 = !DILocation(line: 29, scope: !1565)
!1568 = !DILocation(line: 25, scope: !1569)
!1569 = !DILexicalBlockFile(scope: !37, file: !1570, discriminator: 0)
!1570 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/TransactionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1571 = !DILocation(line: 48, scope: !1569)
!1572 = !DILocation(line: 52, scope: !1569)
!1573 = !DILocation(line: 53, scope: !1569)
!1574 = !DILocation(line: 54, scope: !1569)
!1575 = !DILocation(line: 55, scope: !1569)
!1576 = !DILocation(line: 57, scope: !1569)
!1577 = !DILocation(line: 58, scope: !1569)
!1578 = !DILocation(line: 60, scope: !1569)
!1579 = !DILocation(line: 65, scope: !1569)
!1580 = !DILocation(line: 69, scope: !1569)
!1581 = !DILocation(line: 71, scope: !1569)
!1582 = !DILocation(line: 143, scope: !1569)
!1583 = !DILocation(line: 152, scope: !1569)
!1584 = !DILocation(line: 153, scope: !1569)
!1585 = !DILocation(line: 156, scope: !1569)
!1586 = !DILocation(line: 157, scope: !1569)
!1587 = !DILocation(line: 158, scope: !1569)
!1588 = !DILocation(line: 159, scope: !1569)
!1589 = !DILocation(line: 161, scope: !1569)
!1590 = !DILocation(line: 162, scope: !1569)
!1591 = !DILocation(line: 181, scope: !1569)
!1592 = !DILocation(line: 189, scope: !1569)
