; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%struct.sqlite3StatType = type { [10 x i64], [10 x i64] }
%struct.Sqlite3Config = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.sqlite3_mem_methods, %struct.sqlite3_mutex_methods, %struct.sqlite3_pcache_methods2, i8*, i32, i32, i32, i64, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sqlite3_mutex*, void (i8*, i32, i8*)*, i8*, i32 (i32)*, i32, i32, i32, i32 }
%struct.sqlite3_mem_methods = type { i8* (i32)*, void (i8*)*, i8* (i8*, i32)*, i32 (i8*)*, i32 (i32)*, i32 (i8*)*, void (i8*)*, i8* }
%struct.sqlite3_mutex_methods = type { i32 ()*, i32 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)* }
%struct.sqlite3_pcache_methods2 = type { i32, i8*, i32 (i8*)*, void (i8*)*, %struct.sqlite3_pcache* (i32, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, i32 (%struct.sqlite3_pcache*)*, %struct.sqlite3_pcache_page* (%struct.sqlite3_pcache*, i32, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32)*, void (%struct.sqlite3_pcache*, %struct.sqlite3_pcache_page*, i32, i32)*, void (%struct.sqlite3_pcache*, i32)*, void (%struct.sqlite3_pcache*)*, void (%struct.sqlite3_pcache*)* }
%struct.sqlite3_pcache = type opaque
%struct.sqlite3_pcache_page = type { i8*, i8* }
%struct.sqlite3_mutex = type { %struct._opaque_pthread_mutex_t }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct.anon.9 = type { i8, i8, i8*, double, double }
%struct.sqlite3_vfs = type { i32, i32, i32, %struct.sqlite3_vfs*, i8*, i8*, i32 (%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i32*)*, i32 (%struct.sqlite3_vfs*, i8*, i32, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)*, void (%struct.sqlite3_vfs*, i32, i8*)*, void ()* (%struct.sqlite3_vfs*, i8*, i8*)*, void (%struct.sqlite3_vfs*, i8*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*, double*)*, i32 (%struct.sqlite3_vfs*, i32, i8*)*, i32 (%struct.sqlite3_vfs*, i64*)*, i32 (%struct.sqlite3_vfs*, i8*, void ()*)*, void ()* (%struct.sqlite3_vfs*, i8*)*, i8* (%struct.sqlite3_vfs*, i8*)* }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%struct.BenignMallocHooks = type { void ()*, void ()* }
%struct.Mem0Global = type { %struct.sqlite3_mutex*, i64, i64, i32 }
%struct.et_info = type { i8, i8, i8, i8, i8, i8 }
%struct.sqlite3_str = type { %struct.sqlite3*, i8*, i32, i32, i32, i8, i8 }
%struct.sqlite3 = type { %struct.sqlite3_vfs*, %struct.Vdbe*, %struct.CollSeq*, %struct.sqlite3_mutex*, %struct.Db*, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [12 x i32], i32, %struct.sqlite3InitInfo, i32, i32, i32, i32, i32, i32, i8**, i32 (i32, i8*, i8*, i8*)*, i8*, void (i8*, i8*, i64)*, i8*, i8*, i32 (i8*)*, i8*, void (i8*)*, i8*, void (i8*, i32, i8*, i8*, i64)*, %struct.Parse*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*, void (i8*, %struct.sqlite3*, i32, i8*)*, i8*, %struct.sqlite3_value*, %union.anon.8, %struct.Lookaside, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*, i32 (i8*)*, i8*, i32, %struct.Hash, %struct.Hash, %struct.BusyHandler, [2 x %struct.Db], %struct.Savepoint*, i32, i32, i32, i64, i64, i32* }
%struct.Vdbe = type <{ %struct.sqlite3*, %struct.Vdbe*, %struct.Vdbe*, %struct.Parse*, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i64, i64, %struct.sqlite3_value*, %struct.sqlite3_value**, %struct.VdbeCursor**, %struct.sqlite3_value*, %struct.VdbeOp*, i32, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, i8*, i32*, i16, i8, i8, i8, i16, i8, i32, i32, [7 x i32], [4 x i8], i8*, i8*, %struct.VdbeFrame*, %struct.VdbeFrame*, i32, i32, %struct.SubProgram*, %struct.AuxData* }>
%struct.VdbeCursor = type { i8, i8, i8, i8, i8, i8, %struct.Btree*, i64, i32*, i32, i32, %struct.VdbeCursor*, %union.anon.7, %struct.KeyInfo*, i32, i32, i16, i16, i64, i32*, i8*, i32, i32, [1 x i32] }
%struct.Btree = type { %struct.sqlite3*, %struct.BtShared*, i8, i8, i8, i8, i32, i32, i32, %struct.Btree*, %struct.Btree*, %struct.BtLock }
%struct.BtShared = type { %struct.Pager*, %struct.sqlite3*, %struct.BtCursor*, %struct.MemPage*, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i32, i32, i32, i32, i8*, void (i8*)*, %struct.sqlite3_mutex*, %struct.Bitvec*, i32, %struct.BtShared*, %struct.BtLock*, %struct.Btree*, i8* }
%struct.Pager = type { %struct.sqlite3_vfs*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Bitvec*, %struct.sqlite3_file*, %struct.sqlite3_file*, %struct.sqlite3_file*, i64, i64, %struct.sqlite3_backup*, %struct.PagerSavepoint*, i32, i32, [16 x i8], i32, i64, %struct.PgHdr*, i16, i16, i32, i32, i32, i32, i64, i8*, i8*, i32 (i8*)*, i8*, [4 x i32], void (%struct.PgHdr*)*, i32 (%struct.Pager*, i32, %struct.PgHdr**, i32)*, i8*, %struct.PCache*, %struct.Wal*, i8* }
%struct.sqlite3_backup = type { %struct.sqlite3*, %struct.Btree*, i32, i32, i32, %struct.sqlite3*, %struct.Btree*, i32, i32, i32, i32, %struct.sqlite3_backup* }
%struct.PagerSavepoint = type { i64, i64, %struct.Bitvec*, i32, i32, [4 x i32] }
%struct.PgHdr = type { %struct.sqlite3_pcache_page*, i8*, i8*, %struct.PCache*, %struct.PgHdr*, %struct.Pager*, i32, i16, i16, %struct.PgHdr*, %struct.PgHdr* }
%struct.PCache = type { %struct.PgHdr*, %struct.PgHdr*, %struct.PgHdr*, i32, i32, i32, i32, i32, i8, i8, i32 (i8*, %struct.PgHdr*)*, i8*, %struct.sqlite3_pcache* }
%struct.Wal = type { %struct.sqlite3_vfs*, %struct.sqlite3_file*, %struct.sqlite3_file*, i32, i64, i32, i32, i32**, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.WalIndexHdr, i32, i32, i8*, i32 }
%struct.WalIndexHdr = type { i32, i32, i32, i8, i8, i16, i32, i32, [2 x i32], [2 x i32], [2 x i32] }
%struct.BtCursor = type { i8, i8, i8, i8, i32, %struct.Btree*, i32*, i8*, %struct.BtShared*, %struct.BtCursor*, %struct.CellInfo, i64, i32, i8, i8, i16, [19 x i16], %struct.KeyInfo*, %struct.MemPage*, [19 x %struct.MemPage*] }
%struct.CellInfo = type { i64, i8*, i32, i16, i16 }
%struct.MemPage = type { i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i32, i16, i16, [4 x i16], [4 x i8*], %struct.BtShared*, i8*, i8*, i8*, i8*, %struct.PgHdr*, i16 (%struct.MemPage*, i8*)*, void (%struct.MemPage*, i8*, %struct.CellInfo*)* }
%struct.Bitvec = type { i32, i32, i32, %union.anon.10 }
%union.anon.10 = type { [62 x %struct.Bitvec*] }
%struct.BtLock = type { %struct.Btree*, i32, i8, %struct.BtLock* }
%union.anon.7 = type { %struct.BtCursor* }
%struct.KeyInfo = type { i32, i8, i16, i16, %struct.sqlite3*, i8*, [1 x %struct.CollSeq*] }
%struct.VdbeOp = type { i8, i8, i16, i32, i32, i32, %union.p4union }
%union.p4union = type { i8* }
%struct.VdbeFrame = type { %struct.Vdbe*, %struct.VdbeFrame*, %struct.VdbeOp*, i64*, %struct.sqlite3_value*, %struct.VdbeCursor**, i8*, i8*, i64, %struct.AuxData*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SubProgram = type { %struct.VdbeOp*, i32, i32, i32, i8*, i8*, %struct.SubProgram* }
%struct.AuxData = type { i32, i32, i8*, void (i8*)*, %struct.AuxData* }
%struct.CollSeq = type { i8*, i8, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)* }
%struct.Db = type { i8*, %struct.Btree*, i8, i8, %struct.Schema* }
%struct.Schema = type { i32, i32, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Hash, %struct.Table*, i8, i8, i16, i32 }
%struct.Table = type { i8*, %struct.Column*, %struct.Index*, %struct.Select*, %struct.FKey*, i8*, %struct.ExprList*, i32, i32, i32, i16, i16, i16, i16, i16, i8, i32, %struct.Trigger*, %struct.Schema*, %struct.Table* }
%struct.Column = type { i8*, %struct.Expr*, i8*, i8, i8, i8, i16 }
%struct.Expr = type { i8, i8, i8, i32, %union.anon, %struct.Expr*, %struct.Expr*, %union.anon.0, i32, i32, i16, i16, i16, %struct.AggInfo*, %union.anon.3 }
%union.anon = type { i8* }
%union.anon.0 = type { %struct.ExprList* }
%struct.AggInfo = type { i8, i8, i32, i32, i32, i32, i32, %struct.ExprList*, %struct.AggInfo_col*, i32, i32, %struct.AggInfo_func*, i32 }
%struct.AggInfo_col = type { %struct.Table*, i32, i32, i32, i32, %struct.Expr* }
%struct.AggInfo_func = type { %struct.Expr*, %struct.FuncDef*, i32, i32 }
%struct.FuncDef = type { i8, i32, i8*, %struct.FuncDef*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, i8*, %union.anon.2 }
%struct.sqlite3_context = type { %struct.sqlite3_value*, %struct.FuncDef*, %struct.sqlite3_value*, %struct.Vdbe*, i32, i32, i8, i8, [1 x %struct.sqlite3_value*] }
%union.anon.2 = type { %struct.FuncDef* }
%union.anon.3 = type { %struct.Table* }
%struct.Index = type <{ i8*, i16*, i16*, %struct.Table*, i8*, %struct.Index*, %struct.Schema*, i8*, i8**, %struct.Expr*, %struct.ExprList*, i32, i16, i16, i16, i8, i16, [3 x i8], i64 }>
%struct.Select = type { i8, i16, i32, i32, i32, i32, [2 x i32], %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Select*, %struct.Select*, %struct.Expr*, %struct.With*, %struct.Window*, %struct.Window* }
%struct.SrcList = type { i32, i32, [1 x %struct.SrcList_item] }
%struct.SrcList_item = type { %struct.Schema*, i8*, i8*, i8*, %struct.Table*, %struct.Select*, i32, i32, i32, %struct.anon, i32, %struct.Expr*, %struct.IdList*, i64, %union.anon.1, %struct.Index* }
%struct.anon = type { i8, i8, [2 x i8] }
%struct.IdList = type { %struct.IdList_item*, i32 }
%struct.IdList_item = type { i8*, i32 }
%union.anon.1 = type { i8* }
%struct.With = type { i32, %struct.With*, [1 x %struct.Cte] }
%struct.Cte = type { i8*, %struct.ExprList*, %struct.Select*, i8* }
%struct.Window = type { i8*, i8*, %struct.ExprList*, %struct.ExprList*, i8, i8, i8, i8, i8, %struct.Expr*, %struct.Expr*, %struct.Window**, %struct.Window*, %struct.Expr*, %struct.FuncDef*, i32, i32, i32, i32, i32, i32, %struct.Expr*, i32, i32, i32, i32, i32, i8 }
%struct.FKey = type { %struct.Table*, %struct.FKey*, i8*, %struct.FKey*, %struct.FKey*, i32, i8, [2 x i8], [2 x %struct.Trigger*], [1 x %struct.sColMap] }
%struct.sColMap = type { i32, i8* }
%struct.ExprList = type { i32, [1 x %struct.ExprList_item] }
%struct.ExprList_item = type { %struct.Expr*, i8*, i8, i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.Trigger = type { i8*, i8*, i8, i8, %struct.Expr*, %struct.IdList*, %struct.Schema*, %struct.Schema*, %struct.TriggerStep*, %struct.Trigger* }
%struct.TriggerStep = type { i8, i8, %struct.Trigger*, %struct.Select*, i8*, %struct.Expr*, %struct.ExprList*, %struct.IdList*, %struct.Upsert*, i8*, %struct.TriggerStep*, %struct.TriggerStep* }
%struct.Upsert = type { %struct.ExprList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.Index*, %struct.SrcList*, i32, i32, i32 }
%struct.sqlite3InitInfo = type { i32, i8, i8, i8, i8** }
%struct.Parse = type { %struct.sqlite3*, i8*, %struct.Vdbe*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.ExprList*, %struct.Token, i32, i32, i32, i32, i32, i32, i32, %struct.TableLock*, %struct.AutoincInfo*, %struct.Parse*, %struct.Table*, %struct.Parse*, i32, i32, i32, i32, i8, i8, i8, [8 x i32], %struct.Token, %struct.Token, i16, i8, i8, i8, i32, i32, i32*, %struct.Vdbe*, i8*, %struct.Table*, %struct.Index*, %struct.Trigger*, i8*, %struct.Table*, %struct.TriggerPrg*, %struct.With*, %struct.With*, %struct.RenameToken* }
%struct.TableLock = type { i32, i32, i8, i8* }
%struct.AutoincInfo = type { %struct.AutoincInfo*, %struct.Table*, i32, i32 }
%struct.Token = type { i8*, i32 }
%struct.TriggerPrg = type { %struct.Trigger*, %struct.TriggerPrg*, %struct.SubProgram*, i32, [2 x i32] }
%struct.RenameToken = type { i8*, %struct.Token, %struct.RenameToken* }
%struct.sqlite3_value = type { %union.MemValue, i16, i8, i8, i32, i8*, i8*, i32, i32, %struct.sqlite3*, void (i8*)* }
%union.MemValue = type { double }
%union.anon.8 = type { double }
%struct.Lookaside = type { i32, i16, i16, i8, i32, [3 x i32], %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, %struct.LookasideSlot*, i8*, i8*, i8* }
%struct.LookasideSlot = type { %struct.LookasideSlot* }
%struct.Hash = type { i32, i32, %struct.HashElem*, %struct._ht* }
%struct.HashElem = type { %struct.HashElem*, %struct.HashElem*, i8*, i8* }
%struct._ht = type { i32, %struct.HashElem* }
%struct.BusyHandler = type { i32 (i8*, i32)*, i8*, i32, i8 }
%struct.Savepoint = type { i8*, i64, i64, %struct.Savepoint* }
%struct.sqlite3PrngType = type { i8, i8, i8, [256 x i8] }
%struct.unix_syscall = type { i8*, void ()*, void ()* }
%struct.unixInodeInfo = type { %struct.unixFileId, %struct.sqlite3_mutex*, i32, i32, i8, i8, %struct.UnixUnusedFd*, i32, %struct.unixShmNode*, %struct.unixInodeInfo*, %struct.unixInodeInfo*, i64 }
%struct.unixFileId = type { i32, i64 }
%struct.UnixUnusedFd = type { i32, i32, %struct.UnixUnusedFd* }
%struct.unixShmNode = type { %struct.unixInodeInfo*, %struct.sqlite3_mutex*, i8*, i32, i32, i16, i8, i8, i8**, i32, %struct.unixShm* }
%struct.unixShm = type { %struct.unixShmNode*, %struct.unixShm*, i8, i8, i16, i16 }
%struct.unixFile = type { %struct.sqlite3_io_methods*, %struct.sqlite3_vfs*, %struct.unixInodeInfo*, i32, i8, i16, i32, i8*, %struct.UnixUnusedFd*, i8*, %struct.unixShm*, i32, i32, i64, i64, i64, i8*, i32, i32, i32, i32 }
%struct.Mapping = type { i8*, %struct.sqlite3_io_methods* }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.PCacheGlobal = type { %struct.PGroup, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.sqlite3_mutex*, %struct.PgFreeslot*, i32, i32 }
%struct.PGroup = type { %struct.sqlite3_mutex*, i32, i32, i32, i32, %struct.PgHdr1 }
%struct.PgHdr1 = type { %struct.sqlite3_pcache_page, i32, i16, i16, %struct.PgHdr1*, %struct.PCache1*, %struct.PgHdr1*, %struct.PgHdr1* }
%struct.PCache1 = type { %struct.PGroup*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PgHdr1**, %struct.PgHdr1*, i8* }
%struct.PgFreeslot = type { %struct.PgFreeslot* }
%struct.compareInfo = type { i8, i8, i8, i8 }
%struct.sqlite3AutoExtList = type { i32, void ()** }
%struct.PragmaName = type { i8*, i8, i8, i8, i8, i64 }
%struct.SelectDest = type { i8, i32, i32, i32, i8*, %struct.ExprList* }
%struct.FuncDefHash = type { [23 x %struct.FuncDef*] }
%struct.anon.22 = type { i32, i32 }
%struct._malloc_zone_t = type { i8*, i8*, i64 (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i64)*, i8* (%struct._malloc_zone_t*, i64, i64)*, i8* (%struct._malloc_zone_t*, i64)*, void (%struct._malloc_zone_t*, i8*)*, i8* (%struct._malloc_zone_t*, i8*, i64)*, void (%struct._malloc_zone_t*)*, i8*, i32 (%struct._malloc_zone_t*, i64, i8**, i32)*, void (%struct._malloc_zone_t*, i8**, i32)*, %struct.malloc_introspection_t*, i32, i8* (%struct._malloc_zone_t*, i64, i64)*, void (%struct._malloc_zone_t*, i8*, i64)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*, i8*)* }
%struct.malloc_introspection_t = type { i32 (i32, i8*, i32, i64, i32 (i32, i64, i64, i8**)*, void (i32, i8*, i32, %struct.vm_range_t*, i32)*)*, i64 (%struct._malloc_zone_t*, i64)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i32)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, %struct.malloc_statistics_t*)*, i32 (%struct._malloc_zone_t*)*, i32 (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*)*, void (%struct._malloc_zone_t*, i8*)*, void (%struct._malloc_zone_t*, void (i8*, i8*)*)*, void (%struct._malloc_zone_t*)*, void (i32, i32, i64, i32 (i32, i64, i64, i8**)*, void (i8*, ...)*)*, void (i32, i64, i32 (i32, i64, i64, i8**)*, %struct.malloc_statistics_t*)* }
%struct.vm_range_t = type { i64, i64 }
%struct.malloc_statistics_t = type { i32, i64, i64, i64 }
%struct.sqlite3_api_routines = type { i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, double)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*, i8*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, %struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i32 (i8*, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, double (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, i64 (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3_stmt*, i32)*, i32 (%struct.sqlite3_stmt*, i32)*, %struct.sqlite3_value* (%struct.sqlite3_stmt*, i32)*, i8* (%struct.sqlite3*, i32 (i8*)*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*)*, i32 (%struct.sqlite3_stmt*)*, %struct.sqlite3* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*)*, i32 (i32)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i8* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, void (i8*)*, void (i8**)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3*, i8*, i8***, i32*, i32*, i8**)*, i32 ()*, void (%struct.sqlite3*)*, i64 (%struct.sqlite3*)*, i8* ()*, i32 ()*, i8* (i32)*, i8* (i8*, ...)*, i32 (i8*, %struct.sqlite3**)*, i32 (i8*, %struct.sqlite3**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i8* (%struct.sqlite3*, void (i8*, i8*, i64)*, i8*)*, void (%struct.sqlite3*, i32, i32 (i8*)*, i8*)*, i8* (i8*, i32)*, i32 (%struct.sqlite3_stmt*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, double)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i8*, i32)*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i64)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i32, void (i8*)*)*, void (%struct.sqlite3_context*, %struct.sqlite3_value*)*, i8* (%struct.sqlite3*, void (i8*)*, i8*)*, i32 (%struct.sqlite3*, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*)*, void (%struct.sqlite3_context*, i32, i8*, void (i8*)*)*, i8* (i32, i8*, i8*, ...)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i8**, i8**, i32*, i32*, i32*)*, void ()*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, void (i8*, i8*)*, i8*)*, i32 (%struct.sqlite3_stmt*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3*, void (i8*, i32, i8*, i8*, i64)*, i8*)*, i8* (%struct.sqlite3_context*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, double (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i64 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_value*)*, i8* (i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3_blob*)*, i32 (%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob**)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3_blob*, i8*, i32, i32)*, i32 (%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i8*, i32, i8*)*, i64 (i32)*, i64 ()*, %struct.sqlite3_mutex* (i32)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, void (%struct.sqlite3_mutex*)*, i32 (%struct.sqlite3_mutex*)*, i32 (i8*, %struct.sqlite3**, i32, i8*)*, i32 (i32)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, i32 (i32)*, void (i32)*, %struct.sqlite3_vfs* (i8*)*, i32 (%struct.sqlite3_vfs*, i32)*, i32 (%struct.sqlite3_vfs*)*, i32 ()*, void (%struct.sqlite3_context*, i32)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, ...)*, void (i32, i8*)*, %struct.sqlite3* (%struct.sqlite3_context*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i32, i32)*, %struct.sqlite3_stmt* (%struct.sqlite3*, %struct.sqlite3_stmt*)*, i8* (%struct.sqlite3_stmt*)*, i32 (i32, i32*, i32*, i32)*, i32 (%struct.sqlite3_backup*)*, %struct.sqlite3_backup* (%struct.sqlite3*, i8*, %struct.sqlite3*, i8*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*)*, i32 (%struct.sqlite3_backup*, i32)*, i8* (i32)*, i32 (i8*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*)*, i32 (%struct.sqlite3*, i32, ...)*, %struct.sqlite3_mutex* (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32*, i32*, i32)*, i32 (%struct.sqlite3*)*, void (i32, i8*, ...)*, i64 (i64)*, i8* ()*, i32 (%struct.sqlite3_stmt*, i32, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*, void (i8**, i32)*, i8*)*, i32 (%struct.sqlite3*, i32)*, i32 (%struct.sqlite3*, i8*)*, i8* (%struct.sqlite3*, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*)*, i32 (%struct.sqlite3_blob*, i64)*, i32 (%struct.sqlite3*, i32, ...)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i8* (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*, i8*)*, i32 (%struct.sqlite3*)*, i8* (i32)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i8*, i64)*, i8* (i8*, i8*)*, i8* (i32, i8*, i8*, %struct.__va_list_tag*)*, i32 (%struct.sqlite3*, i8*, i32, i32*, i32*)*, i32 (void ()*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8)*, i32 (void ()*)*, i32 (%struct.sqlite3*, i8*, i8*, i8**)*, i8* (i64)*, i64 (i8*)*, i8* (i8*, i64)*, void ()*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8)*, i32 (i8*, i8*)*, %struct.sqlite3_value* (%struct.sqlite3_value*)*, void (%struct.sqlite3_value*)*, i32 (%struct.sqlite3_context*, i64)*, i32 (%struct.sqlite3_stmt*, i32, i64)*, i32 (%struct.sqlite3_value*)*, void (%struct.sqlite3_context*, i32)*, i32 (i32, i64*, i64*, i32)*, i32 (i8*, i8*, i32)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*)*, i32 (%struct.sqlite3*, i32, i32 (i32, i8*, i8*, i8*)*, i8*)*, i8* (%struct.sqlite3_stmt*)*, void (%struct.sqlite3*, i64)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**)*, i32 (%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*)*, void (%struct.sqlite3_context*, i8*, i8*, void (i8*)*)*, i8* (%struct.sqlite3_value*, i8*)*, i32 (%struct.sqlite3_context*)*, i32 (%struct.sqlite3_value*)*, i8* (%struct.sqlite3_index_info*, i32)*, i32 ()*, i32 (i32, i8**, i32*)*, i32 (i8*, i32)*, %struct.sqlite3_str* (%struct.sqlite3*)*, i8* (%struct.sqlite3_str*)*, void (%struct.sqlite3_str*, i8*, ...)*, void (%struct.sqlite3_str*, i8*, %struct.__va_list_tag*)*, void (%struct.sqlite3_str*, i8*, i32)*, void (%struct.sqlite3_str*, i8*)*, void (%struct.sqlite3_str*, i32, i8)*, void (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i32 (%struct.sqlite3_str*)*, i8* (%struct.sqlite3_str*)*, i32 (%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*)*, i8* (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_stmt*)*, i32 (%struct.sqlite3_value*)*, i32 (%struct.sqlite3*, i8**)*, i64 (i64)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*)*, i8* (i8*, i8*, i8*, i32, i8**)*, void (i8*)* }
%struct.sqlite3_stmt = type opaque
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %struct.sqlite3_index_constraint*, i32, %struct.sqlite3_index_orderby*, %struct.sqlite3_index_constraint_usage*, i32, i8*, i32, i32, double, i64, i32, i64 }
%struct.sqlite3_index_constraint = type { i32, i8, i8, i32 }
%struct.sqlite3_index_orderby = type { i32, i8 }
%struct.sqlite3_index_constraint_usage = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sqlite3_blob = type opaque
%struct.WindowUpdate = type { i8*, i32, i32, i32 }
%struct.anon.23 = type { i8, i8, i8 }
%struct.EncName = type { i8*, i8 }
%struct.OpenMode = type { i8*, i32 }
%struct.RowSet = type { %struct.RowSetChunk*, %struct.sqlite3*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, %struct.RowSetEntry*, i16, i16, i32 }
%struct.RowSetChunk = type { %struct.RowSetChunk*, [42 x %struct.RowSetEntry] }
%struct.RowSetEntry = type { i64, %struct.RowSetEntry*, %struct.RowSetEntry* }
%struct.UnpackedRecord = type { %struct.KeyInfo*, %struct.sqlite3_value*, i16, i8, i8, i8, i8, i8 }
%struct.BtreePayload = type { i8*, i64, i8*, %struct.sqlite3_value*, i16, i32, i32 }
%struct.DateTime = type { i64, i32, i32, i32, i32, i32, i32, double, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct.PrintfArguments = type { i32, i32, %struct.sqlite3_value** }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.flock = type { i64, i64, i32, i16, i16 }
%struct.timeval = type { i64, i32 }
%struct.statfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.fsid, i32, i32, i32, i32, [16 x i8], [1024 x i8], [1024 x i8], i32, [7 x i32] }
%struct.fsid = type { [2 x i32] }
%struct.WalCkptInfo = type { i32, [5 x i32], [8 x i8], i32, i32 }
%struct.WalHashLoc = type { i16*, i32*, i32 }
%struct.WalIterator = type { i32, i32, [1 x %struct.WalSegment] }
%struct.WalSegment = type { i32, i16*, i32*, i32, i32 }
%struct.WalWriter = type { %struct.Wal*, %struct.sqlite3_file*, i64, i32, i32 }
%struct.CellArray = type { i32, %struct.MemPage*, i8**, i16*, [6 x i8*], [6 x i32] }
%struct.IntegrityCk = type { %struct.BtShared*, %struct.Pager*, i8*, i32, i32, i32, i32, i8*, i32, i32, %struct.sqlite3_str, i32*, %struct.sqlite3* }
%struct.ValueNewStat4Ctx = type { %struct.Parse*, %struct.Index*, %struct.UnpackedRecord**, i32 }
%struct.ReusableSpace = type { i8*, i64, i64 }
%struct.Incrblob = type { i32, i32, i16, %struct.BtCursor*, %struct.sqlite3_stmt*, %struct.sqlite3*, i8*, %struct.Table* }
%struct.PmaReader = type { i64, i64, i32, i32, %struct.sqlite3_file*, i8*, i8*, i8*, i32, i8*, %struct.IncrMerger* }
%struct.IncrMerger = type { %struct.SortSubtask*, %struct.MergeEngine*, i64, i32, i32, i32, [2 x %struct.SorterFile] }
%struct.SortSubtask = type { %struct.SQLiteThread*, i32, %struct.VdbeSorter*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)*, %struct.SorterFile, %struct.SorterFile }
%struct.SQLiteThread = type { %struct._opaque_pthread_t*, i32, i8*, i8* (i8*)*, i8* }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct.VdbeSorter = type { i32, i32, i32, i32, %struct.PmaReader*, %struct.MergeEngine*, %struct.sqlite3*, %struct.KeyInfo*, %struct.UnpackedRecord*, %struct.SorterList, i32, i32, i8, i8, i8, i8, i8, [1 x %struct.SortSubtask] }
%struct.SorterList = type { %struct.SorterRecord*, i8*, i32 }
%struct.SorterRecord = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.SorterRecord* }
%struct.SorterFile = type { %struct.sqlite3_file*, i64 }
%struct.MergeEngine = type { i32, %struct.SortSubtask*, i32*, %struct.PmaReader* }
%struct.PmaWriter = type { i32, i8*, i32, i32, i32, i64, %struct.sqlite3_file* }
%struct.MemJournal = type { %struct.sqlite3_io_methods*, i32, i32, i32, %struct.FileChunk*, %struct.FilePoint, %struct.FilePoint, i32, %struct.sqlite3_vfs*, i8* }
%struct.FileChunk = type { %struct.FileChunk*, [8 x i8] }
%struct.FilePoint = type { i64, %struct.FileChunk* }
%struct.Walker = type { %struct.Parse*, i32 (%struct.Walker*, %struct.Expr*)*, i32 (%struct.Walker*, %struct.Select*)*, void (%struct.Walker*, %struct.Select*)*, i32, i16, %union.anon.12 }
%union.anon.12 = type { %struct.NameContext* }
%struct.NameContext = type { %struct.Parse*, %struct.SrcList*, %union.anon.13, %struct.NameContext*, i32, i32, i32, %struct.Select* }
%union.anon.13 = type { %struct.ExprList* }
%struct.RenameCtx = type { %struct.RenameToken*, i32, i32, %struct.Table*, i8* }
%struct.WhereInfo = type { %struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.ExprList*, %struct.Expr*, [2 x i32], i32, i32, i32, i16, i16, i8, i8, i8, i8, i8, i16, i32, %struct.WhereLoop*, %struct.WhereExprMod*, i64, %struct.WhereClause, %struct.WhereMaskSet, [1 x %struct.WhereLevel] }
%struct.WhereLoop = type { i64, i64, i8, i8, i16, i16, i16, %union.anon.15, i32, i16, i16, i16, %struct.WhereTerm**, %struct.WhereLoop*, [3 x %struct.WhereTerm*] }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i16, i16, i16, i16, %struct.Index* }
%struct.WhereTerm = type { %struct.Expr*, %struct.WhereClause*, i16, i16, i16, i8, i8, i32, i32, i32, %union.anon.18, i64, i64 }
%union.anon.18 = type { %struct.WhereOrInfo* }
%struct.WhereOrInfo = type { %struct.WhereClause, i64 }
%struct.WhereExprMod = type { %struct.WhereExprMod*, %struct.Expr*, %struct.Expr }
%struct.WhereClause = type { %struct.WhereInfo*, %struct.WhereClause*, i8, i8, i32, i32, %struct.WhereTerm*, [8 x %struct.WhereTerm] }
%struct.WhereMaskSet = type { i32, i32, [64 x i32] }
%struct.WhereLevel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %union.anon.19, %struct.WhereLoop*, i64 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32, %struct.InLoop* }
%struct.InLoop = type { i32, i32, i32, i32, i8 }
%struct.InitData = type { %struct.sqlite3*, i8**, i32, i32, i32, i32 }
%struct.RowLoadInfo = type { i32, i8 }
%struct.SortCtx = type { %struct.ExprList*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.RowLoadInfo* }
%struct.DistinctCtx = type { i8, i8, i32, i32 }
%struct.SubstContext = type { %struct.Parse*, i32, i32, i32, %struct.ExprList* }
%struct.WhereConst = type { %struct.Parse*, i32, i32, %struct.Expr** }
%struct.IdxExprTrans = type { %struct.Expr*, i32, i32, i32, i32, %struct.WhereInfo*, %struct.sqlite3* }
%struct.WhereAndInfo = type { %struct.WhereClause }
%struct.WhereOrSet = type { i16, [3 x %struct.WhereOrCost] }
%struct.WhereOrCost = type { i64, i16, i16 }
%struct.WhereScan = type { %struct.WhereClause*, %struct.WhereClause*, i8*, %struct.Expr*, i8, i8, i8, i32, i32, [11 x i32], [11 x i16] }
%struct.WhereLoopBuilder = type { %struct.WhereInfo*, %struct.WhereClause*, %struct.ExprList*, %struct.WhereLoop*, %struct.WhereOrSet*, i8, i8, i32 }
%struct.WherePath = type { i64, i64, i16, i16, i16, i8, %struct.WhereLoop** }
%struct.WindowCodeArg = type { %struct.Parse*, %struct.Window*, %struct.Vdbe*, i32, i32, i32, i32, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg, %struct.WindowCsrAndReg }
%struct.WindowCsrAndReg = type { i32, i32 }
%struct.yyParser = type { %struct.yyStackEntry*, %struct.Parse*, [100 x %struct.yyStackEntry], %struct.yyStackEntry* }
%struct.yyStackEntry = type { i16, i16, %union.YYMINORTYPE }
%union.YYMINORTYPE = type { %struct.Token }
%struct.FuncDestructor = type { i32, void (i8*)*, i8* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }
%struct.DbFixer = type { %struct.Parse*, %struct.Schema*, i8, i8*, i8*, %struct.Token* }

@sqlite3_version = constant [7 x i8] c"3.32.0\00", align 1
@sqlite3Stat = local_unnamed_addr global %struct.sqlite3StatType zeroinitializer, align 8
@statMutex = local_unnamed_addr constant [10 x i8] c"\00\01\01\00\00\00\00\01\00\00", align 1
@sqlite3Config = external dso_local global %struct.Sqlite3Config, align 8
@getDigits.aMx = internal unnamed_addr constant [6 x i16] [i16 12, i16 14, i16 24, i16 31, i16 59, i16 9999], align 2
@sqlite3CtypeMap = internal constant [256 x i8] calign 16
@.str = private unnamed_addr constant [8 x i8] c"20b:20e\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"20c:20e\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"20e\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"40f-21a-21d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"local time unavailable\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@aXformType = local_unnamed_addr constant [6 x %struct.anon.9] [%struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), double 0x425B0625EAB00000, double 1.000000e+03 }, %struct.anon.9 { i8 0, i8 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double 0x41FCD35BA5000000, double 6.000000e+04 }, %struct.anon.9 { i8 0, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), double 0x419EBF50B0000000, double 3.600000e+06 }, %struct.anon.9 { i8 0, i8 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), double 0x41547F8B40000000, double 8.640000e+07 }, %struct.anon.9 { i8 1, i8 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), double 1.765460e+05, double 2.592000e+09 }, %struct.anon.9 { i8 2, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), double 1.471300e+04, double 3.153600e+10 }], align 16
@sqlite3UpperToLower = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@.str.12 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"unixepoch\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"weekday \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"start of \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%04d-%02d-%02d %02d:%02d:%02d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%04d-%02d-%02d\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"%06.3f\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"%.16g\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%04d\00", align 1
@vfsList = local_unnamed_addr global %struct.sqlite3_vfs* null, align 8
@sqlite3Hooks = local_unnamed_addr global %struct.BenignMallocHooks zeroinitializer, align 8
@pthreadMutexAlloc.staticMutexes = internal global [12 x %struct.sqlite3_mutex] [%struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }, %struct.sqlite3_mutex { %struct._opaque_pthread_mutex_t { i64 850045863, [56 x i8] zeroinitializer } }], align 16
@mem0 = local_unnamed_addr global %struct.Mem0Global zeroinitializer, align 8
@aDigits = local_unnamed_addr constant [33 x i8] c"0123456789ABCDEF0123456789abcdef\00", align 16
@aPrefix = local_unnamed_addr constant [7 x i8] c"-x0\00X0\00", align 1
@fmtinfo = local_unnamed_addr constant [23 x %struct.et_info] [%struct.et_info { i8 100, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 115, i8 0, i8 4, i8 5, i8 0, i8 0 }, %struct.et_info { i8 103, i8 0, i8 1, i8 3, i8 30, i8 0 }, %struct.et_info { i8 122, i8 0, i8 4, i8 6, i8 0, i8 0 }, %struct.et_info { i8 113, i8 0, i8 4, i8 9, i8 0, i8 0 }, %struct.et_info { i8 81, i8 0, i8 4, i8 10, i8 0, i8 0 }, %struct.et_info { i8 119, i8 0, i8 4, i8 14, i8 0, i8 0 }, %struct.et_info { i8 99, i8 0, i8 0, i8 8, i8 0, i8 0 }, %struct.et_info { i8 111, i8 8, i8 0, i8 0, i8 0, i8 2 }, %struct.et_info { i8 117, i8 10, i8 0, i8 16, i8 0, i8 0 }, %struct.et_info { i8 120, i8 16, i8 0, i8 0, i8 16, i8 1 }, %struct.et_info { i8 88, i8 16, i8 0, i8 0, i8 0, i8 4 }, %struct.et_info { i8 102, i8 0, i8 1, i8 1, i8 0, i8 0 }, %struct.et_info { i8 101, i8 0, i8 1, i8 2, i8 30, i8 0 }, %struct.et_info { i8 69, i8 0, i8 1, i8 2, i8 14, i8 0 }, %struct.et_info { i8 71, i8 0, i8 1, i8 3, i8 14, i8 0 }, %struct.et_info { i8 105, i8 10, i8 1, i8 16, i8 0, i8 0 }, %struct.et_info { i8 110, i8 0, i8 0, i8 4, i8 0, i8 0 }, %struct.et_info { i8 37, i8 0, i8 0, i8 7, i8 0, i8 0 }, %struct.et_info { i8 112, i8 16, i8 0, i8 13, i8 0, i8 1 }, %struct.et_info { i8 84, i8 0, i8 0, i8 11, i8 0, i8 0 }, %struct.et_info { i8 83, i8 0, i8 0, i8 12, i8 0, i8 0 }, %struct.et_info { i8 114, i8 10, i8 1, i8 15, i8 0, i8 0 }], align 16
@arRound = local_unnamed_addr constant [10 x double] [double 5.000000e-01, double 5.000000e-02, double 5.000000e-03, double 5.000000e-04, double 5.000000e-05, double 5.000000e-06, double 5.000000e-07, double 5.000000e-08, double 5.000000e-09, double 5.000000e-10], align 16
@.str.26 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@sqlite3_str_vappendf.zOrd = internal unnamed_addr constant [9 x i8] c"thstndrd\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@sqlite3OomStr = internal global %struct.sqlite3_str { %struct.sqlite3* null, i8* null, i32 0, i32 0, i32 0, i8 7, i8 0 }, align 8
@sqlite3Prng = local_unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"922337203685477580\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"API call with %s database connection pointer\00", align 1
@findElementWithHash.nullElement = internal global %struct.HashElem zeroinitializer, align 8
@randomnessPid = global i32 0, align 4
@.str.35 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"getcwd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"fstat\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"fcntl\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"pread\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"pread64\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"pwrite\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"pwrite64\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"fchmod\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"fallocate\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"openDirectory\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"fchown\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"geteuid\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"mremap\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"getpagesize\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"readlink\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"lstat\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@aSyscall = external local_unnamed_addr global [29 x %struct.unix_syscall], align 16
@.str.64 = private unnamed_addr constant [43 x i8] c"attempt to open \22%s\22 as file descriptor %d\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@unixBigLock = local_unnamed_addr global %struct.sqlite3_mutex* null, align 8
@inodeList = local_unnamed_addr global %struct.unixInodeInfo* null, align 8
@.str.66 = private unnamed_addr constant [31 x i8] c"os_unix.c:%d: (%d) %s(%s) - %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"cannot fstat db file %s\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"file unlinked while open: %s\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"multiple links to file: %s\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"file renamed while open: %s\00", align 1
@sqlite3PendingByte = internal unnamed_addr global i32 1073741824, align 4
@.str.72 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"full_fsync\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s-shm\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"readonly_shm\00", align 1
@posixIoMethods = external constant %struct.sqlite3_io_methods, align 8
@posixIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nolockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@dotlockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@dotlockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@flockIoMethods = external constant %struct.sqlite3_io_methods, align 8
@flockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@afpIoMethods = external constant %struct.sqlite3_io_methods, align 8
@afpIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@proxyIoMethods = external constant %struct.sqlite3_io_methods, align 8
@proxyIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@nfsIoMethods = external constant %struct.sqlite3_io_methods, align 8
@nfsIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@autolockIoFinderImpl.aMap = internal unnamed_addr constant [6 x %struct.Mapping] [%struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), %struct.sqlite3_io_methods* @posixIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), %struct.sqlite3_io_methods* @afpIoMethods }, %struct.Mapping { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct.sqlite3_io_methods* @nolockIoMethods }, %struct.Mapping zeroinitializer], align 16
@.str.76 = private unnamed_addr constant [4 x i8] c"hfs\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"ufs\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"afpfs\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"smbfs\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"webdav\00", align 1
@autolockIoFinder = external constant %struct.sqlite3_io_methods* (i8*, %struct.unixFile*)*, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"psow\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"unix-excl\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s.lock\00", align 1
@unixTempFileDir.azDirs = internal unnamed_addr global [6 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [9 x i8] c"/var/tmp\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@sqlite3_temp_directory = local_unnamed_addr global i8* null, align 8
@.str.88 = private unnamed_addr constant [14 x i8] c"SQLITE_TMPDIR\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"TMPDIR\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"%s/etilqs_%llx%c\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"modeof\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"msdos\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"exfat\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"SQLITE_FORCE_PROXY_LOCKING\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c":auto:\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"fsync\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sqliteplocks\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@__const.proxyGetHostID.timeout = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.101 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"path error (len %d)\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"read error (len %d)\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"create failed (%d)\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"write failed (%d)\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"rename failed (%d)\00", align 1
@__stderrp = external local_unnamed_addr global %struct.__sFILE*, align 8
@.str.107 = private unnamed_addr constant [24 x i8] c"broke stale lock on %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"failed to break stale lock on %s, %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"-conch\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c":auto: (not held)\00", align 1
@sqlite3_os_init.aVfs = external dso_local global [9 x %struct.sqlite3_vfs], align 16
@.str.111 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"unix-none\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"unix-dotfile\00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"unix-posix\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"unix-flock\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"unix-afp\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"unix-nfs\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"unix-proxy\00", align 1
@pcache1_g = global %struct.PCacheGlobal zeroinitializer, align 8
@aJournalMagic = constant [8 x i8] c"\D9\D5\05\F9 \A1c\D7", align 1
@zeroJournalHdr.zeroHdr = internal constant [28 x i8] zeroinitializer, align 16
@.str.119 = private unnamed_addr constant [27 x i8] c"recovered %d pages from %s\00", align 1
@syncJournal.zerobyte = internal constant i8 0, align 1
@.str.120 = private unnamed_addr constant [37 x i8] c"recovered %d frames from WAL file %s\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"cannot limit WAL size: %s\00", align 1
@zMagicHeader = constant [16 x i8] c"SQLite format 3\00", align 16
@sqlite3SharedCacheList = internal unnamed_addr global %struct.BtShared* null, align 8
@.str.122 = private unnamed_addr constant [4 x i8] c"@  \00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"invalid page number %d\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"2nd reference to page %d\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Failed to read ptrmap key=%d\00", align 1
@.str.127 = private unnamed_addr constant [54 x i8] c"Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"failed to get page %d\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"freelist leaf count too big on page %d\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%s is %d but should be %d\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.132 = private unnamed_addr constant [21 x i8] c"overflow list length\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"Page %d: \00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"unable to get the page. error code=%d\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"btreeInitPage() returns error code %d\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"free space corruption\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"On tree page %d cell %d: \00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"On page %d at right child: \00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Offset %d out of range %d..%d\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"Extends off end of page\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"Rowid %lld out of order\00", align 1
@.str.142 = private unnamed_addr constant [25 x i8] c"Child page depth differs\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Multiple uses for byte %u of page %d\00", align 1
@.str.144 = private unnamed_addr constant [52 x i8] c"Fragmentation of %d bytes reported as %d on page %d\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"unknown database %s\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"destination database is in use\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"source and destination must be distinct\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"%!.15g\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"k(%d\00", align 1
@.str.152 = private constant [7 x i8] c"BINARY\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c",%s%s%s\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"N.\00", align 1
@.str.156 = private unnamed_addr constant [2 x i8] c")\00", align 1
@displayP4.encnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0)], align 16
@.str.157 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"16LE\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"16BE\00", align 1
@.str.161 = private unnamed_addr constant [9 x i8] c"%.18s-%s\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s(%d)\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"(blob)\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"%s-mjXXXXXX9XXz%c%c\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"MJ delete: %s\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"MJ collide: %s\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"-mj%06X9%02X\00", align 1
@sqlite3SmallTypeSizes = local_unnamed_addr constant [128 x i8] c"\00\01\02\03\04\06\08\08\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12\13\13\14\14\15\15\16\16\17\17\18\18\19\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !!\22\22##$$%%&&''(())**++,,--..//00112233445566778899", align 16
@.str.172 = private unnamed_addr constant [45 x i8] c"API called with finalized prepared statement\00", align 1
@.str.173 = private unnamed_addr constant [40 x i8] c"API called with NULL prepared statement\00", align 1
@sqlite3_value_type.aType = internal unnamed_addr constant [64 x i8] c"\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\04\05\03\05\01\05\01\05\02\05\02\05\01\05\01\05\02\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05\04\05\03\05\02\05\02\05\02\05\02\05\02\05\02\05", align 16
@.str.174 = private unnamed_addr constant [23 x i8] c"string or blob too big\00", align 1
@columnNullValue.nullMem = internal constant %struct.sqlite3_value { %union.MemValue zeroinitializer, i16 1, i8 0, i8 0, i32 0, i8* null, i8* null, i32 0, i32 0, %struct.sqlite3* null, void (i8*)* null }, align 8
@.str.175 = private unnamed_addr constant [40 x i8] c"bind on a busy prepared statement: [%s]\00", align 1
@enableJit = local_unnamed_addr global i8 -1, align 1
@Argv = local_unnamed_addr global i8** null, align 8
@Argc = local_unnamed_addr global i32 -1, align 4
@maxVdbeSteps = local_unnamed_addr global i64 -1, align 8
@pcHasBeenSet = local_unnamed_addr global i8 0, align 1
@iCompare = local_unnamed_addr global i32 0, align 4
@.str.176 = private unnamed_addr constant [29 x i8] c"cannot open value of type %s\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"no such rowid: %lld\00", align 1
@.str.182 = private unnamed_addr constant [36 x i8] c"cannot open table without rowid: %s\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"cannot open view: %s\00", align 1
@.str.184 = private unnamed_addr constant [21 x i8] c"no such column: \22%s\22\00", align 1
@.str.185 = private unnamed_addr constant [12 x i8] c"foreign key\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.187 = private unnamed_addr constant [34 x i8] c"cannot open %s column for writing\00", align 1
@vdbeSorterCompareInt.aLen = internal unnamed_addr constant [10 x i8] c"\00\01\02\03\04\06\08\00\00\00", align 1
@MemJournalMethods = external constant %struct.sqlite3_io_methods, align 8
@.str.188 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"excluded\00", align 1
@.str.191 = private unnamed_addr constant [31 x i8] c"misuse of aliased aggregate %s\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"misuse of aliased window function %s\00", align 1
@.str.193 = private unnamed_addr constant [18 x i8] c"row value misused\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"double-quoted string literal: \22%w\22\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"no such column\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"ambiguous column name\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"%s: %s.%s.%s\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"%s: %s.%s\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.200 = private unnamed_addr constant [28 x i8] c"partial index WHERE clauses\00", align 1
@.str.201 = private unnamed_addr constant [18 x i8] c"index expressions\00", align 1
@.str.202 = private unnamed_addr constant [18 x i8] c"CHECK constraints\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"generated columns\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"%s prohibited in %s\00", align 1
@.str.205 = private unnamed_addr constant [17 x i8] c"the \22.\22 operator\00", align 1
@.str.206 = private unnamed_addr constant [71 x i8] c"second argument to likelihood() must be a constant between 0.0 and 1.0\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"not authorized to use function: %s\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"non-deterministic functions\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"%.*s() may not be used as a window function\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"aggregate\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"misuse of %s function %.*s()\00", align 1
@.str.213 = private unnamed_addr constant [23 x i8] c"no such function: %.*s\00", align 1
@.str.214 = private unnamed_addr constant [45 x i8] c"wrong number of arguments to function %.*s()\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"FILTER may not be used with non-aggregate %.*s()\00", align 1
@.str.216 = private unnamed_addr constant [11 x i8] c"subqueries\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.218 = private unnamed_addr constant [56 x i8] c"%r %s BY term out of range - should be between 1 and %d\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"too many terms in ORDER BY clause\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"ORDER\00", align 1
@.str.221 = private unnamed_addr constant [61 x i8] c"%r ORDER BY term does not match any column in the result set\00", align 1
@.str.222 = private unnamed_addr constant [44 x i8] c"a GROUP BY clause is required before HAVING\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"GROUP\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"aggregate functions are not allowed in the GROUP BY clause\00", align 1
@.str.225 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.226 = private unnamed_addr constant [26 x i8] c"hex literal too big: %s%s\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"sqlite_\00", align 1
@.str.228 = private unnamed_addr constant [28 x i8] c"table %s may not be altered\00", align 1
@.str.229 = private unnamed_addr constant [156 x i8] c"SELECT 1 FROM \22%w\22.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.231 = private unnamed_addr constant [155 x i8] c"SELECT 1 FROM temp.%s WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' AND sql NOT LIKE 'create virtual%%' AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"view\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"cannot rename columns of %s \22%s\22\00", align 1
@.str.234 = private unnamed_addr constant [21 x i8] c"error in %s %s%s: %s\00", align 1
@.str.235 = private unnamed_addr constant [14 x i8] c" after rename\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"\22%w\22\00", align 1
@.str.237 = private unnamed_addr constant [13 x i8] c"sqlite_stat1\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"tbl,idx,stat\00", align 1
@.str.239 = private unnamed_addr constant [13 x i8] c"sqlite_stat4\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"sqlite_stat3\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"CREATE TABLE %Q.%s(%s)\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"DELETE FROM %Q.%s WHERE %s=%Q\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"stat_init\00", align 1
@statInitFuncdef = external constant %struct.FuncDef, align 8
@.str.244 = private unnamed_addr constant [10 x i8] c"stat_push\00", align 1
@statPushFuncdef = external constant %struct.FuncDef, align 8
@.str.245 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c" %llu\00", align 1
@.str.247 = private unnamed_addr constant [9 x i8] c"stat_get\00", align 1
@statGetFuncdef = external constant %struct.FuncDef, align 8
@.str.248 = private unnamed_addr constant [10 x i8] c"sqlite\\_%\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"BBB\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"idx\00", align 1
@.str.251 = private unnamed_addr constant [4 x i8] c"tbl\00", align 1
@.str.252 = private unnamed_addr constant [11 x i8] c"unordered*\00", align 1
@.str.253 = private unnamed_addr constant [10 x i8] c"sz=[0-9]*\00", align 1
@.str.254 = private unnamed_addr constant [12 x i8] c"noskipscan*\00", align 1
@.str.255 = private unnamed_addr constant [37 x i8] c"too many attached databases - max %d\00", align 1
@.str.256 = private unnamed_addr constant [30 x i8] c"database %s is already in use\00", align 1
@.str.257 = private unnamed_addr constant [29 x i8] c"database is already attached\00", align 1
@.str.258 = private unnamed_addr constant [68 x i8] c"attached databases must use the same text encoding as main database\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"unable to open database: %s\00", align 1
@.str.261 = private unnamed_addr constant [21 x i8] c"no such database: %s\00", align 1
@.str.262 = private unnamed_addr constant [26 x i8] c"cannot detach database %s\00", align 1
@.str.263 = private unnamed_addr constant [22 x i8] c"database %s is locked\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"authorizer malfunction\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"generated columns cannot be part of the PRIMARY KEY\00", align 1
@.str.266 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.267 = private unnamed_addr constant [4 x i8] c"\0A  \00", align 1
@.str.268 = private unnamed_addr constant [5 x i8] c",\0A  \00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"\0A)\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@createTableStmt.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0)], align 16
@.str.271 = private unnamed_addr constant [6 x i8] c" TEXT\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c" NUM\00", align 1
@.str.273 = private unnamed_addr constant [5 x i8] c" INT\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c" REAL\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"corrupt schema\00", align 1
@.str.276 = private unnamed_addr constant [56 x i8] c"UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\00", align 1
@typeofFunc.azType = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)], align 16
@.str.277 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.279 = private unnamed_addr constant [17 x i8] c"integer overflow\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@globInfo = constant %struct.compareInfo { i8 42, i8 63, i8 91, i8 0 }, align 1
@likeInfoNorm = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 1 }, align 1
@likeInfoAlt = constant %struct.compareInfo { i8 37, i8 95, i8 0, i8 0 }, align 1
@.str.281 = private unnamed_addr constant [33 x i8] c"LIKE or GLOB pattern too complex\00", align 1
@.str.282 = private unnamed_addr constant [45 x i8] c"ESCAPE expression must be a single character\00", align 1
@hexdigits = local_unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@.str.283 = private unnamed_addr constant [7 x i8] c"%!.20e\00", align 1
@trimFunc.lenOne = internal unnamed_addr constant [1 x i8] c"\01", align 1
@trimFunc.azOne = internal constant [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.284, i32 0, i32 0)], align 8
@.str.284 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"not authorized\00", align 1
@.str.286 = private unnamed_addr constant [30 x i8] c"FOREIGN KEY constraint failed\00", align 1
@sqlite3Autoext = local_unnamed_addr global %struct.sqlite3AutoExtList zeroinitializer, align 8
@.str.287 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.288 = private unnamed_addr constant [4 x i8] c"seq\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.290 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"on_update\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"on_delete\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"notnull\00", align 1
@.str.299 = private unnamed_addr constant [11 x i8] c"dflt_value\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"pk\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.302 = private unnamed_addr constant [6 x i8] c"seqno\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.304 = private unnamed_addr constant [5 x i8] c"coll\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"enc\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"narg\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"hght\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"flgs\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"partial\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"rowid\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"fkid\00", align 1
@.str.319 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.320 = private unnamed_addr constant [5 x i8] c"busy\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.322 = private unnamed_addr constant [13 x i8] c"checkpointed\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"database\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.325 = private unnamed_addr constant [11 x i8] c"cache_size\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@pragCName = local_unnamed_addr constant [51 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0)], align 16
@.str.327 = private unnamed_addr constant [15 x i8] c"application_id\00", align 1
@.str.328 = private unnamed_addr constant [12 x i8] c"auto_vacuum\00", align 1
@.str.329 = private unnamed_addr constant [16 x i8] c"automatic_index\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"busy_timeout\00", align 1
@.str.331 = private unnamed_addr constant [12 x i8] c"cache_spill\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"case_sensitive_like\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"cell_size_check\00", align 1
@.str.334 = private unnamed_addr constant [21 x i8] c"checkpoint_fullfsync\00", align 1
@.str.335 = private unnamed_addr constant [15 x i8] c"collation_list\00", align 1
@.str.336 = private unnamed_addr constant [16 x i8] c"compile_options\00", align 1
@.str.337 = private unnamed_addr constant [14 x i8] c"count_changes\00", align 1
@.str.338 = private unnamed_addr constant [13 x i8] c"data_version\00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"database_list\00", align 1
@.str.340 = private unnamed_addr constant [19 x i8] c"default_cache_size\00", align 1
@.str.341 = private unnamed_addr constant [19 x i8] c"defer_foreign_keys\00", align 1
@.str.342 = private unnamed_addr constant [23 x i8] c"empty_result_callbacks\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"foreign_key_check\00", align 1
@.str.345 = private unnamed_addr constant [17 x i8] c"foreign_key_list\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"foreign_keys\00", align 1
@.str.347 = private unnamed_addr constant [15 x i8] c"freelist_count\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"full_column_names\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"fullfsync\00", align 1
@.str.350 = private unnamed_addr constant [14 x i8] c"function_list\00", align 1
@.str.351 = private unnamed_addr constant [16 x i8] c"hard_heap_limit\00", align 1
@.str.352 = private unnamed_addr constant [25 x i8] c"ignore_check_constraints\00", align 1
@.str.353 = private unnamed_addr constant [19 x i8] c"incremental_vacuum\00", align 1
@.str.354 = private unnamed_addr constant [11 x i8] c"index_info\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"index_list\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"index_xinfo\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"integrity_check\00", align 1
@.str.358 = private unnamed_addr constant [13 x i8] c"journal_mode\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"journal_size_limit\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"legacy_alter_table\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"lock_proxy_file\00", align 1
@.str.362 = private unnamed_addr constant [13 x i8] c"locking_mode\00", align 1
@.str.363 = private unnamed_addr constant [15 x i8] c"max_page_count\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"mmap_size\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.366 = private unnamed_addr constant [11 x i8] c"page_count\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"page_size\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c"pragma_list\00", align 1
@.str.369 = private unnamed_addr constant [11 x i8] c"query_only\00", align 1
@.str.370 = private unnamed_addr constant [12 x i8] c"quick_check\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"read_uncommitted\00", align 1
@.str.372 = private unnamed_addr constant [19 x i8] c"recursive_triggers\00", align 1
@.str.373 = private unnamed_addr constant [26 x i8] c"reverse_unordered_selects\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"schema_version\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"secure_delete\00", align 1
@.str.376 = private unnamed_addr constant [19 x i8] c"short_column_names\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"shrink_memory\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"soft_heap_limit\00", align 1
@.str.379 = private unnamed_addr constant [12 x i8] c"synchronous\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"table_info\00", align 1
@.str.381 = private unnamed_addr constant [12 x i8] c"table_xinfo\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"temp_store\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"temp_store_directory\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.385 = private unnamed_addr constant [15 x i8] c"trusted_schema\00", align 1
@.str.386 = private unnamed_addr constant [13 x i8] c"user_version\00", align 1
@.str.387 = private unnamed_addr constant [19 x i8] c"wal_autocheckpoint\00", align 1
@.str.388 = private unnamed_addr constant [15 x i8] c"wal_checkpoint\00", align 1
@.str.389 = private unnamed_addr constant [16 x i8] c"writable_schema\00", align 1
@aPragmaName = constant [64 x %struct.PragmaName] [%struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.328, i32 0, i32 0), i8 2, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.329, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 32768 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i8 4, i8 16, i8 50, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.325, i32 0, i32 0), i8 5, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.331, i32 0, i32 0), i8 6, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), i8 7, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 2097152 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.334, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.335, i32 0, i32 0), i8 8, i8 16, i8 32, i8 2, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.336, i32 0, i32 0), i8 9, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.337, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4294967296 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.338, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 15 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8 11, i8 17, i8 41, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.340, i32 0, i32 0), i8 12, i8 -107, i8 49, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.341, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 524288 }, %struct.PragmaName { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.342, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 256 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i32 0, i32 0), i8 13, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8 14, i8 17, i8 37, i8 4, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.345, i32 0, i32 0), i8 15, i8 97, i8 0, i8 8, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 16384 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.347, i32 0, i32 0), i8 1, i8 24, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.350, i32 0, i32 0), i8 16, i8 16, i8 21, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.351, i32 0, i32 0), i8 17, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.352, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 512 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.353, i32 0, i32 0), i8 18, i8 3, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8 19, i8 97, i8 15, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i8 20, i8 97, i8 32, i8 5, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i32 0, i32 0), i8 19, i8 97, i8 15, i8 6, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.358, i32 0, i32 0), i8 22, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i32 0, i32 0), i8 23, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 67108864 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i32 0, i32 0), i8 24, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.362, i32 0, i32 0), i8 25, i8 -112, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.363, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i8 27, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i32 0, i32 0), i8 29, i8 33, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.366, i32 0, i32 0), i8 26, i8 -111, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), i8 30, i8 -108, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.368, i32 0, i32 0), i8 31, i8 16, i8 9, i8 1, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.369, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1048576 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i32 0, i32 0), i8 21, i8 49, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 1024 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.372, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 8192 }, %struct.PragmaName { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.373, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 4096 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.374, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i32 0, i32 0), i8 32, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.376, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 64 }, %struct.PragmaName { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i8 33, i8 2, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8 34, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.379, i32 0, i32 0), i8 35, i8 -107, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i8 36, i8 97, i8 8, i8 6, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.381, i32 0, i32 0), i8 36, i8 97, i8 8, i8 7, i64 1 }, %struct.PragmaName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8 37, i8 20, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i8 38, i8 4, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0), i8 39, i8 16, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.385, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 128 }, %struct.PragmaName { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.386, i32 0, i32 0), i8 1, i8 20, i8 0, i8 0, i64 6 }, %struct.PragmaName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.387, i32 0, i32 0), i8 40, i8 0, i8 0, i8 0, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.388, i32 0, i32 0), i8 41, i8 1, i8 44, i8 3, i64 0 }, %struct.PragmaName { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.389, i32 0, i32 0), i8 3, i8 20, i8 0, i8 0, i64 134217729 }], align 16
@getSafetyLevel.zText = internal unnamed_addr constant [25 x i8] c"onoffalseyestruextrafull\00", align 16
@getSafetyLevel.iValue = internal unnamed_addr constant [8 x i8] c"\01\00\00\00\01\01\03\02", align 1
@.str.390 = private unnamed_addr constant [10 x i8] c"exclusive\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.392 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.394 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.396 = private unnamed_addr constant [62 x i8] c"temporary storage cannot be changed from within a transaction\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"SET NULL\00", align 1
@.str.398 = private unnamed_addr constant [12 x i8] c"SET DEFAULT\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"CASCADE\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"RESTRICT\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"NO ACTION\00", align 1
@pragmaFunclistLine.azEnc = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.404, i32 0, i32 0)], align 16
@.str.402 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.404 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.407 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"sissii\00", align 1
@.str.409 = private unnamed_addr constant [31 x i8] c"malformed database schema (%s)\00", align 1
@.str.410 = private unnamed_addr constant [8 x i8] c"%z - %s\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"a NATURAL join may not have an ON or USING clause\00", align 1
@.str.412 = private unnamed_addr constant [55 x i8] c"cannot have both ON and USING clauses in the same join\00", align 1
@.str.413 = private unnamed_addr constant [64 x i8] c"cannot join using column %s - column not present in both tables\00", align 1
@.str.414 = private unnamed_addr constant [10 x i8] c"UNION ALL\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"INTERSECT\00", align 1
@.str.416 = private unnamed_addr constant [7 x i8] c"EXCEPT\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"UNION\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"USE TEMP B-TREE FOR %s\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.420 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"column%d\00", align 1
@.str.422 = private unnamed_addr constant [49 x i8] c"cannot use window functions in recursive queries\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"SETUP\00", align 1
@.str.424 = private unnamed_addr constant [42 x i8] c"recursive aggregate queries not supported\00", align 1
@.str.425 = private unnamed_addr constant [15 x i8] c"RECURSIVE STEP\00", align 1
@.str.426 = private unnamed_addr constant [23 x i8] c"SCAN %d CONSTANT ROW%s\00", align 1
@.str.427 = private unnamed_addr constant [42 x i8] c"%s clause should come after %s not before\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"ORDER BY\00", align 1
@.str.429 = private unnamed_addr constant [6 x i8] c"LIMIT\00", align 1
@.str.430 = private unnamed_addr constant [15 x i8] c"COMPOUND QUERY\00", align 1
@.str.431 = private unnamed_addr constant [19 x i8] c"LEFT-MOST SUBQUERY\00", align 1
@.str.432 = private unnamed_addr constant [21 x i8] c"%s USING TEMP B-TREE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"MERGE (%s)\00", align 1
@.str.434 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.435 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.437 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"'%s' is not a function\00", align 1
@.str.439 = private unnamed_addr constant [43 x i8] c"multiple references to recursive table: %s\00", align 1
@.str.440 = private unnamed_addr constant [23 x i8] c"circular reference: %s\00", align 1
@.str.441 = private unnamed_addr constant [38 x i8] c"table %s has %d values for %d columns\00", align 1
@.str.442 = private unnamed_addr constant [34 x i8] c"multiple recursive references: %s\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"recursive reference in a subquery: %s\00", align 1
@.str.444 = private unnamed_addr constant [39 x i8] c"too many references to \22%s\22: max 65535\00", align 1
@.str.445 = private unnamed_addr constant [31 x i8] c"access to view \22%s\22 prohibited\00", align 1
@.str.446 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"%s.%s.%s\00", align 1
@.str.448 = private unnamed_addr constant [18 x i8] c"no such table: %s\00", align 1
@.str.449 = private unnamed_addr constant [20 x i8] c"no tables specified\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"too many columns in result set\00", align 1
@.str.451 = private unnamed_addr constant [51 x i8] c"DISTINCT aggregates must have exactly one argument\00", align 1
@.str.452 = private unnamed_addr constant [18 x i8] c"SCAN TABLE %s%s%s\00", align 1
@.str.453 = private unnamed_addr constant [23 x i8] c" USING COVERING INDEX \00", align 1
@.str.454 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.455 = private unnamed_addr constant [65 x i8] c"sqlite3_get_table() called with two or more incompatible queries\00", align 1
@.str.456 = private unnamed_addr constant [4 x i8] c"CRE\00", align 1
@.str.457 = private unnamed_addr constant [4 x i8] c"INS\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"<expr>\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c" AND \00", align 1
@.str.460 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.462 = private unnamed_addr constant [5 x i8] c"%s=?\00", align 1
@.str.463 = private unnamed_addr constant [8 x i8] c"ANY(%s)\00", align 1
@.str.464 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.465 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.466 = private unnamed_addr constant [41 x i8] c"ON clause references tables to its right\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"NOCASE\00", align 1
@.str.468 = private unnamed_addr constant [26 x i8] c"automatic index on %s(%s)\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"auto-index\00", align 1
@.str.470 = private unnamed_addr constant [35 x i8] c"abbreviated query algorithm search\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"no query solution\00", align 1
@.str.472 = private unnamed_addr constant [56 x i8] c"second argument to nth_value must be a positive integer\00", align 1
@.str.473 = private unnamed_addr constant [45 x i8] c"argument of ntile must be a positive integer\00", align 1
@row_numberName = constant [11 x i8] c"row_number\00", align 1
@dense_rankName = constant [11 x i8] c"dense_rank\00", align 1
@rankName = constant [5 x i8] c"rank\00", align 1
@percent_rankName = constant [13 x i8] c"percent_rank\00", align 1
@cume_distName = constant [10 x i8] c"cume_dist\00", align 1
@ntileName = constant [6 x i8] c"ntile\00", align 1
@last_valueName = constant [11 x i8] c"last_value\00", align 1
@nth_valueName = constant [10 x i8] c"nth_value\00", align 1
@first_valueName = constant [12 x i8] c"first_value\00", align 1
@leadName = constant [5 x i8] c"lead\00", align 1
@lagName = constant [4 x i8] c"lag\00", align 1
@.str.474 = private unnamed_addr constant [19 x i8] c"no such window: %s\00", align 1
@windowCheckValue.azErr = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.478, i32 0, i32 0)], align 16
@.str.475 = private unnamed_addr constant [53 x i8] c"frame starting offset must be a non-negative integer\00", align 1
@.str.476 = private unnamed_addr constant [51 x i8] c"frame ending offset must be a non-negative integer\00", align 1
@.str.477 = private unnamed_addr constant [52 x i8] c"frame starting offset must be a non-negative number\00", align 1
@.str.478 = private unnamed_addr constant [50 x i8] c"frame ending offset must be a non-negative number\00", align 1
@windowCheckValue.aOp = internal unnamed_addr constant [5 x i32] [i32 57, i32 57, i32 54, i32 57, i32 57], align 16
@yy_action = local_unnamed_addr constant [1924 x i16] [i16 528, i16 1183, i16 528, i16 114, i16 111, i16 208, i16 114, i16 111, i16 208, i16 192, i16 1186, i16 528, i16 418, i16 528, i16 450, i16 528, i16 1447, i16 362, i16 528, i16 380, i16 6, i16 373, i16 70, i16 70, i16 42, i16 42, i16 476, i16 1423, i16 485, i16 418, i16 417, i16 911, i16 505, i16 42, i16 42, i16 71, i16 71, i16 51, i16 51, i16 912, i16 71, i16 71, i16 484, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 415, i16 380, i16 261, i16 261, i16 261, i16 261, i16 16, i16 16, i16 970, i16 970, i16 981, i16 984, i16 1226, i16 1226, i16 510, i16 525, i16 477, i16 525, i16 528, i16 491, i16 350, i16 236, i16 205, i16 486, i16 356, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 42, i16 42, i16 418, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1452, i16 349, i16 413, i16 1150, i16 1, i16 1, i16 534, i16 3, i16 1154, i16 1454, i16 1185, i16 348, i16 940, i16 286, i16 1081, i16 143, i16 1081, i16 380, i16 940, i16 114, i16 111, i16 208, i16 1234, i16 1440, i16 98, i16 370, i16 164, i16 974, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 261, i16 261, i16 228, i16 261, i16 261, i16 463, i16 460, i16 459, i16 306, i16 423, i16 296, i16 123, i16 435, i16 525, i16 306, i16 458, i16 525, i16 177, i16 1452, i16 499, i16 116, i16 116, i16 116, i16 115, i16 409, i16 285, i16 519, i16 218, i16 1221, i16 335, i16 1200, i16 380, i16 431, i16 120, i16 120, i16 120, i16 120, i16 113, i16 1221, i16 1109, i16 1110, i16 1111, i16 794, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 351, i16 12, i16 83, i16 1109, i16 81, i16 142, i16 256, i16 1109, i16 80, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 169, i16 426, i16 307, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1109, i16 1110, i16 1111, i16 1497, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 114, i16 111, i16 208, i16 528, i16 1109, i16 1109, i16 1110, i16 1111, i16 1491, i16 1109, i16 1110, i16 1111, i16 114, i16 111, i16 208, i16 380, i16 1193, i16 183, i16 1003, i16 321, i16 120, i16 120, i16 120, i16 120, i16 440, i16 71, i16 71, i16 487, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1379, i16 1468, i16 1109, i16 464, i16 1109, i16 1110, i16 1111, i16 281, i16 522, i16 522, i16 522, i16 97, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1392, i16 1334, i16 203, i16 473, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 164, i16 12, i16 1392, i16 1394, i16 1109, i16 1110, i16 1111, i16 228, i16 1076, i16 215, i16 463, i16 460, i16 459, i16 319, i16 488, i16 380, i16 334, i16 1465, i16 399, i16 816, i16 458, i16 1076, i16 239, i16 325, i16 1076, i16 407, i16 407, i16 407, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 285, i16 519, i16 1130, i16 809, i16 164, i16 235, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 189, i16 1392, i16 314, i16 178, i16 317, i16 425, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 382, i16 466, i16 1076, i16 419, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1076, i16 527, i16 396, i16 1076, i16 1109, i16 1130, i16 285, i16 519, i16 247, i16 264, i16 333, i16 469, i16 328, i16 468, i16 233, i16 380, i16 217, i16 812, i16 336, i16 1094, i16 324, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 1076, i16 394, i16 960, i16 961, i16 1109, i16 1110, i16 1111, i16 285, i16 519, i16 1109, i16 444, i16 495, i16 163, i16 1076, i16 441, i16 347, i16 1076, i16 812, i16 951, i16 450, i16 505, i16 163, i16 950, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 1333, i16 1224, i16 1224, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 950, i16 950, i16 952, i16 528, i16 877, i16 115, i16 409, i16 13, i16 13, i16 293, i16 1422, i16 1109, i16 1110, i16 1111, i16 494, i16 380, i16 334, i16 1465, i16 526, i16 945, i16 866, i16 866, i16 388, i16 439, i16 32, i16 71, i16 71, i16 490, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 380, i16 433, i16 284, i16 1471, i16 534, i16 3, i16 1154, i16 1109, i16 510, i16 474, i16 1446, i16 286, i16 378, i16 143, i16 6, i16 506, i16 1439, i16 509, i16 503, i16 1446, i16 1234, i16 508, i16 336, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 137, i16 5, i16 206, i16 1387, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 261, i16 261, i16 528, i16 255, i16 255, i16 533, i16 401, i16 1154, i16 1109, i16 1110, i16 1111, i16 270, i16 286, i16 525, i16 143, i16 380, i16 525, i16 406, i16 405, i16 335, i16 267, i16 1234, i16 335, i16 1109, i16 71, i16 71, i16 832, i16 218, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 261, i16 261, i16 467, i16 380, i16 355, i16 1023, i16 510, i16 1139, i16 192, i16 1139, i16 833, i16 145, i16 450, i16 525, i16 141, i16 475, i16 258, i16 1109, i16 1434, i16 896, i16 368, i16 71, i16 71, i16 1109, i16 1110, i16 1111, i16 1109, i16 218, i16 100, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 211, i16 1044, i16 528, i16 1386, i16 433, i16 282, i16 960, i16 1028, i16 1028, i16 447, i16 386, i16 397, i16 1319, i16 511, i16 1444, i16 357, i16 1045, i16 353, i16 6, i16 1109, i16 1110, i16 1111, i16 951, i16 414, i16 71, i16 71, i16 950, i16 528, i16 1109, i16 1110, i16 1111, i16 1046, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 125, i16 103, i16 1147, i16 898, i16 261, i16 261, i16 71, i16 71, i16 192, i16 852, i16 528, i16 386, i16 897, i16 207, i16 950, i16 950, i16 952, i16 525, i16 510, i16 853, i16 379, i16 380, i16 262, i16 262, i16 426, i16 307, i16 193, i16 512, i16 782, i16 783, i16 784, i16 386, i16 55, i16 55, i16 271, i16 525, i16 295, i16 450, i16 896, i16 390, i16 528, i16 380, i16 275, i16 404, i16 275, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 1445, i16 380, i16 56, i16 56, i16 6, i16 121, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 268, i16 1233, i16 2, i16 377, i16 376, i16 121, i16 110, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 269, i16 285, i16 519, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 1109, i16 528, i16 439, i16 528, i16 9, i16 1109, i16 239, i16 1113, i16 450, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 528, i16 420, i16 528, i16 15, i16 15, i16 13, i16 13, i16 471, i16 528, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 393, i16 1130, i16 44, i16 44, i16 57, i16 57, i16 406, i16 405, i16 1431, i16 380, i16 13, i16 13, i16 1229, i16 872, i16 1136, i16 1109, i16 1110, i16 1111, i16 871, i16 1138, i16 1109, i16 1110, i16 1111, i16 1113, i16 439, i16 395, i16 294, i16 1137, i16 450, i16 455, i16 335, i16 104, i16 528, i16 102, i16 122, i16 112, i16 1132, i16 1132, i16 980, i16 983, i16 973, i16 973, i16 119, i16 119, i16 120, i16 120, i16 120, i16 120, i16 528, i16 433, i16 1109, i16 1139, i16 528, i16 1139, i16 13, i16 13, i16 232, i16 1130, i16 305, i16 109, i16 261, i16 261, i16 107, i16 520, i16 140, i16 4, i16 38, i16 1076, i16 1319, i16 274, i16 13, i16 13, i16 312, i16 525, i16 13, i16 13, i16 1319, i16 144, i16 502, i16 523, i16 1076, i16 528, i16 911, i16 1076, i16 288, i16 186, i16 528, i16 896, i16 528, i16 187, i16 912, i16 118, i16 118, i16 118, i16 118, i16 117, i16 117, i16 116, i16 116, i16 116, i16 115, i16 409, i16 410, i16 13, i16 13, i16 1109, i16 1110, i16 1111, i16 71, i16 71, i16 58, i16 58, i16 107, i16 520, i16 517, i16 4, i16 304, i16 289, i16 507, i16 1232, i16 273, i16 528, i16 272, i16 383, i16 164, i16 437, i16 1172, i16 1443, i16 501, i16 523, i16 1496, i16 6, i16 1025, i16 841, i16 493, i16 478, i16 1025, i16 481, i16 391, i16 324, i16 513, i16 8, i16 960, i16 59, i16 59, i16 408, i16 392, i16 500, i16 105, i16 105, i16 261, i16 261, i16 410, i16 261, i16 261, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 261, i16 261, i16 950, i16 525, i16 517, i16 301, i16 525, i16 528, i16 445, i16 261, i16 261, i16 261, i16 261, i16 525, i16 261, i16 261, i16 508, i16 207, i16 497, i16 285, i16 519, i16 528, i16 525, i16 496, i16 525, i16 260, i16 205, i16 525, i16 528, i16 60, i16 60, i16 528, i16 960, i16 950, i16 950, i16 952, i16 953, i16 27, i16 105, i16 105, i16 528, i16 1319, i16 896, i16 61, i16 61, i16 106, i16 1087, i16 410, i16 530, i16 529, i16 62, i16 62, i16 950, i16 45, i16 45, i16 107, i16 520, i16 528, i16 4, i16 528, i16 438, i16 1044, i16 46, i16 46, i16 1175, i16 384, i16 298, i16 292, i16 300, i16 231, i16 230, i16 229, i16 523, i16 1442, i16 528, i16 1270, i16 1045, i16 6, i16 30, i16 47, i16 47, i16 49, i16 49, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1470, i16 1098, i16 412, i16 1046, i16 528, i16 265, i16 1238, i16 410, i16 50, i16 50, i16 366, i16 366, i16 365, i16 250, i16 363, i16 97, i16 1319, i16 791, i16 525, i16 517, i16 528, i16 31, i16 528, i16 446, i16 516, i16 1129, i16 63, i16 63, i16 528, i16 232, i16 212, i16 872, i16 291, i16 497, i16 428, i16 528, i16 871, i16 1022, i16 498, i16 1022, i16 290, i16 201, i16 64, i16 64, i16 65, i16 65, i16 528, i16 960, i16 1459, i16 528, i16 14, i16 14, i16 1269, i16 105, i16 105, i16 139, i16 937, i16 66, i16 66, i16 299, i16 106, i16 528, i16 410, i16 530, i16 529, i16 528, i16 422, i16 950, i16 127, i16 127, i16 214, i16 67, i16 67, i16 303, i16 107, i16 520, i16 97, i16 4, i16 156, i16 1411, i16 17, i16 158, i16 528, i16 52, i16 52, i16 528, i16 402, i16 68, i16 68, i16 528, i16 1204, i16 523, i16 804, i16 528, i16 819, i16 528, i16 383, i16 213, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1410, i16 69, i16 69, i16 528, i16 53, i16 53, i16 831, i16 830, i16 151, i16 151, i16 823, i16 410, i16 152, i16 152, i16 76, i16 76, i16 427, i16 528, i16 521, i16 384, i16 1010, i16 528, i16 1021, i16 517, i16 1021, i16 54, i16 54, i16 528, i16 381, i16 442, i16 528, i16 309, i16 528, i16 285, i16 519, i16 1266, i16 196, i16 497, i16 528, i16 72, i16 72, i16 954, i16 496, i16 128, i16 128, i16 804, i16 263, i16 819, i16 313, i16 73, i16 73, i16 960, i16 129, i16 129, i16 130, i16 130, i16 416, i16 105, i16 105, i16 95, i16 126, i16 126, i16 838, i16 839, i16 106, i16 528, i16 410, i16 530, i16 529, i16 1098, i16 412, i16 950, i16 316, i16 265, i16 942, i16 1203, i16 1010, i16 238, i16 366, i16 366, i16 365, i16 250, i16 363, i16 432, i16 318, i16 791, i16 238, i16 150, i16 150, i16 528, i16 107, i16 520, i16 528, i16 4, i16 528, i16 320, i16 528, i16 954, i16 212, i16 1217, i16 291, i16 1257, i16 950, i16 950, i16 952, i16 953, i16 27, i16 523, i16 290, i16 528, i16 1202, i16 149, i16 149, i16 528, i16 134, i16 134, i16 133, i16 133, i16 131, i16 131, i16 107, i16 520, i16 528, i16 4, i16 332, i16 528, i16 914, i16 915, i16 1201, i16 528, i16 410, i16 132, i16 132, i16 528, i16 331, i16 75, i16 75, i16 523, i16 214, i16 327, i16 434, i16 280, i16 517, i16 238, i16 77, i16 77, i16 156, i16 74, i16 74, i16 158, i16 869, i16 43, i16 43, i16 109, i16 308, i16 48, i16 48, i16 97, i16 337, i16 456, i16 410, i16 322, i16 234, i16 1484, i16 97, i16 213, i16 1006, i16 338, i16 905, i16 234, i16 960, i16 238, i16 517, i16 1278, i16 1318, i16 1253, i16 105, i16 105, i16 876, i16 802, i16 1264, i16 870, i16 138, i16 106, i16 109, i16 410, i16 530, i16 529, i16 514, i16 515, i16 950, i16 1324, i16 99, i16 520, i16 451, i16 4, i16 1182, i16 1174, i16 1163, i16 381, i16 960, i16 1162, i16 1164, i16 1478, i16 285, i16 519, i16 105, i16 105, i16 253, i16 523, i16 195, i16 210, i16 1250, i16 106, i16 340, i16 410, i16 530, i16 529, i16 342, i16 11, i16 950, i16 950, i16 950, i16 952, i16 953, i16 27, i16 344, i16 416, i16 198, i16 367, i16 1303, i16 421, i16 410, i16 297, i16 302, i16 1311, i16 372, i16 436, i16 461, i16 202, i16 1200, i16 330, i16 1383, i16 1382, i16 517, i16 190, i16 346, i16 191, i16 518, i16 197, i16 360, i16 950, i16 950, i16 952, i16 953, i16 27, i16 1481, i16 1147, i16 242, i16 1430, i16 165, i16 1428, i16 1144, i16 385, i16 83, i16 430, i16 1388, i16 79, i16 175, i16 1308, i16 82, i16 161, i16 960, i16 167, i16 1300, i16 95, i16 424, i16 170, i16 105, i16 105, i16 35, i16 171, i16 172, i16 371, i16 173, i16 106, i16 36, i16 410, i16 530, i16 529, i16 1314, i16 179, i16 950, i16 265, i16 369, i16 429, i16 443, i16 1377, i16 366, i16 366, i16 365, i16 250, i16 363, i16 454, i16 222, i16 791, i16 88, i16 449, i16 1399, i16 254, i16 224, i16 184, i16 311, i16 452, i16 315, i16 225, i16 470, i16 1165, i16 212, i16 226, i16 291, i16 374, i16 90, i16 950, i16 950, i16 952, i16 953, i16 27, i16 290, i16 398, i16 1211, i16 1495, i16 823, i16 1494, i16 203, i16 1220, i16 1219, i16 1464, i16 1218, i16 1261, i16 400, i16 278, i16 375, i16 1190, i16 1189, i16 329, i16 489, i16 1188, i16 1493, i16 279, i16 94, i16 339, i16 241, i16 480, i16 1262, i16 1210, i16 483, i16 341, i16 214, i16 1260, i16 1259, i16 343, i16 345, i16 240, i16 403, i16 124, i16 156, i16 10, i16 508, i16 158, i16 1285, i16 1450, i16 1449, i16 354, i16 492, i16 101, i16 96, i16 248, i16 1171, i16 34, i16 531, i16 1363, i16 1104, i16 249, i16 251, i16 213, i16 1243, i16 252, i16 352, i16 359, i16 194, i16 1242, i16 358, i16 532, i16 1160, i16 1155, i16 1415, i16 153, i16 1416, i16 1284, i16 1414, i16 154, i16 136, i16 276, i16 1413, i16 778, i16 411, i16 199, i16 287, i16 200, i16 78, i16 155, i16 209, i16 266, i16 283, i16 135, i16 1020, i16 1018, i16 934, i16 381, i16 166, i16 157, i16 216, i16 168, i16 285, i16 519, i16 855, i16 1034, i16 938, i16 159, i16 174, i16 387, i16 389, i16 84, i16 176, i16 85, i16 86, i16 87, i16 160, i16 1037, i16 1033, i16 219, i16 220, i16 146, i16 18, i16 221, i16 1026, i16 416, i16 1141, i16 310, i16 238, i16 448, i16 223, i16 180, i16 181, i16 37, i16 793, i16 331, i16 227, i16 453, i16 323, i16 465, i16 834, i16 182, i16 89, i16 19, i16 20, i16 457, i16 821, i16 462, i16 326, i16 91, i16 277, i16 147, i16 92, i16 472, i16 479, i16 1092, i16 148, i16 986, i16 904, i16 1062, i16 162, i16 93, i16 39, i16 482, i16 1063, i16 40, i16 204, i16 257, i16 259, i16 185, i16 899, i16 237, i16 109, i16 1082, i16 1078, i16 1080, i16 21, i16 1066, i16 1086, i16 33, i16 504, i16 188, i16 22, i16 23, i16 24, i16 1085, i16 25, i16 97, i16 1001, i16 987, i16 985, i16 989, i16 26, i16 1043, i16 244, i16 7, i16 1042, i16 243, i16 990, i16 28, i16 41, i16 524, i16 955, i16 803, i16 108, i16 29, i16 245, i16 865, i16 246, i16 1486, i16 364, i16 361, i16 1100, i16 1099, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1151, i16 1485], align 16
@yy_lookahead = local_unnamed_addr constant [2105 x i16] [i16 189, i16 211, i16 189, i16 267, i16 268, i16 269, i16 267, i16 268, i16 269, i16 189, i16 211, i16 189, i16 189, i16 189, i16 189, i16 189, i16 294, i16 197, i16 189, i16 19, i16 298, i16 201, i16 211, i16 212, i16 211, i16 212, i16 200, i16 288, i16 200, i16 206, i16 207, i16 31, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 39, i16 211, i16 212, i16 189, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 233, i16 19, i16 234, i16 235, i16 234, i16 235, i16 211, i16 212, i16 46, i16 47, i16 48, i16 49, i16 230, i16 231, i16 248, i16 247, i16 248, i16 247, i16 189, i16 248, i16 214, i16 251, i16 252, i16 257, i16 271, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 211, i16 212, i16 277, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 299, i16 300, i16 289, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 299, i16 211, i16 301, i16 73, i16 191, i16 86, i16 193, i16 88, i16 19, i16 73, i16 267, i16 268, i16 269, i16 200, i16 292, i16 26, i16 200, i16 81, i16 119, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 234, i16 235, i16 117, i16 234, i16 235, i16 120, i16 121, i16 122, i16 125, i16 126, i16 127, i16 69, i16 189, i16 247, i16 125, i16 130, i16 247, i16 22, i16 299, i16 300, i16 107, i16 108, i16 109, i16 110, i16 111, i16 136, i16 137, i16 261, i16 218, i16 189, i16 220, i16 19, i16 263, i16 54, i16 55, i16 56, i16 57, i16 58, i16 228, i16 114, i16 115, i16 116, i16 21, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 214, i16 208, i16 148, i16 59, i16 24, i16 236, i16 208, i16 59, i16 67, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 72, i16 126, i16 127, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 114, i16 115, i16 116, i16 225, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 267, i16 268, i16 269, i16 189, i16 59, i16 114, i16 115, i16 116, i16 210, i16 114, i16 115, i16 116, i16 267, i16 268, i16 269, i16 19, i16 218, i16 72, i16 121, i16 23, i16 54, i16 55, i16 56, i16 57, i16 284, i16 211, i16 212, i16 19, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 158, i16 189, i16 59, i16 23, i16 114, i16 115, i16 116, i16 248, i16 205, i16 206, i16 207, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 162, i16 163, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 81, i16 208, i16 206, i16 207, i16 114, i16 115, i16 116, i16 117, i16 76, i16 24, i16 120, i16 121, i16 122, i16 16, i16 114, i16 19, i16 296, i16 297, i16 19, i16 23, i16 130, i16 89, i16 24, i16 24, i16 92, i16 205, i16 206, i16 207, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 136, i16 137, i16 59, i16 23, i16 81, i16 26, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 279, i16 277, i16 77, i16 22, i16 79, i16 284, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 194, i16 95, i16 76, i16 118, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 89, i16 189, i16 111, i16 92, i16 59, i16 115, i16 136, i16 137, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 19, i16 139, i16 59, i16 189, i16 23, i16 129, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 76, i16 227, i16 99, i16 23, i16 114, i16 115, i16 116, i16 136, i16 137, i16 59, i16 274, i16 87, i16 189, i16 89, i16 278, i16 189, i16 92, i16 114, i16 115, i16 189, i16 189, i16 189, i16 119, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 266, i16 230, i16 231, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 150, i16 151, i16 152, i16 189, i16 107, i16 110, i16 111, i16 211, i16 212, i16 189, i16 233, i16 114, i16 115, i16 116, i16 143, i16 19, i16 296, i16 297, i16 132, i16 23, i16 134, i16 135, i16 226, i16 189, i16 22, i16 211, i16 212, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 19, i16 189, i16 239, i16 183, i16 184, i16 185, i16 186, i16 59, i16 248, i16 293, i16 294, i16 191, i16 249, i16 193, i16 298, i16 291, i16 292, i16 257, i16 293, i16 294, i16 200, i16 143, i16 189, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 161, i16 22, i16 189, i16 276, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 234, i16 235, i16 189, i16 234, i16 235, i16 184, i16 227, i16 186, i16 114, i16 115, i16 116, i16 285, i16 191, i16 247, i16 193, i16 19, i16 247, i16 105, i16 106, i16 189, i16 262, i16 200, i16 189, i16 59, i16 211, i16 212, i16 35, i16 261, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 234, i16 235, i16 66, i16 19, i16 189, i16 11, i16 248, i16 150, i16 189, i16 152, i16 74, i16 236, i16 189, i16 247, i16 236, i16 257, i16 23, i16 59, i16 189, i16 26, i16 201, i16 211, i16 212, i16 114, i16 115, i16 116, i16 59, i16 261, i16 156, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 15, i16 12, i16 189, i16 233, i16 189, i16 248, i16 99, i16 125, i16 126, i16 127, i16 189, i16 128, i16 189, i16 200, i16 294, i16 244, i16 27, i16 246, i16 298, i16 114, i16 115, i16 116, i16 115, i16 189, i16 211, i16 212, i16 119, i16 189, i16 114, i16 115, i16 116, i16 42, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 22, i16 156, i16 60, i16 141, i16 234, i16 235, i16 211, i16 212, i16 189, i16 63, i16 189, i16 189, i16 141, i16 116, i16 150, i16 151, i16 152, i16 247, i16 248, i16 73, i16 201, i16 19, i16 234, i16 235, i16 126, i16 127, i16 24, i16 257, i16 7, i16 8, i16 9, i16 189, i16 211, i16 212, i16 262, i16 247, i16 258, i16 189, i16 141, i16 259, i16 189, i16 19, i16 223, i16 248, i16 225, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 294, i16 19, i16 211, i16 212, i16 298, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 233, i16 22, i16 105, i16 106, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 258, i16 136, i16 137, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 189, i16 189, i16 189, i16 22, i16 59, i16 24, i16 59, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 189, i16 263, i16 189, i16 211, i16 212, i16 211, i16 212, i16 107, i16 189, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 226, i16 59, i16 211, i16 212, i16 211, i16 212, i16 105, i16 106, i16 189, i16 19, i16 211, i16 212, i16 233, i16 133, i16 113, i16 114, i16 115, i16 116, i16 138, i16 118, i16 114, i16 115, i16 116, i16 115, i16 189, i16 226, i16 200, i16 126, i16 189, i16 19, i16 189, i16 155, i16 189, i16 157, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 189, i16 189, i16 59, i16 150, i16 189, i16 152, i16 211, i16 212, i16 46, i16 115, i16 285, i16 26, i16 234, i16 235, i16 19, i16 20, i16 22, i16 22, i16 24, i16 76, i16 189, i16 226, i16 211, i16 212, i16 233, i16 247, i16 211, i16 212, i16 189, i16 236, i16 87, i16 36, i16 89, i16 189, i16 31, i16 92, i16 189, i16 226, i16 189, i16 26, i16 189, i16 226, i16 39, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 59, i16 211, i16 212, i16 114, i16 115, i16 116, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 71, i16 22, i16 200, i16 189, i16 226, i16 200, i16 285, i16 189, i16 262, i16 113, i16 81, i16 19, i16 200, i16 294, i16 66, i16 36, i16 23, i16 298, i16 29, i16 26, i16 143, i16 200, i16 33, i16 200, i16 259, i16 129, i16 200, i16 48, i16 99, i16 211, i16 212, i16 248, i16 259, i16 85, i16 105, i16 106, i16 234, i16 235, i16 59, i16 234, i16 235, i16 112, i16 94, i16 114, i16 115, i16 116, i16 234, i16 235, i16 119, i16 247, i16 71, i16 16, i16 247, i16 189, i16 65, i16 234, i16 235, i16 234, i16 235, i16 247, i16 234, i16 235, i16 143, i16 116, i16 85, i16 136, i16 137, i16 189, i16 247, i16 90, i16 247, i16 251, i16 252, i16 247, i16 189, i16 211, i16 212, i16 189, i16 99, i16 150, i16 151, i16 152, i16 153, i16 154, i16 105, i16 106, i16 189, i16 189, i16 141, i16 211, i16 212, i16 112, i16 144, i16 114, i16 115, i16 116, i16 211, i16 212, i16 119, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 189, i16 114, i16 12, i16 211, i16 212, i16 203, i16 204, i16 77, i16 189, i16 79, i16 125, i16 126, i16 127, i16 36, i16 294, i16 189, i16 189, i16 27, i16 298, i16 22, i16 211, i16 212, i16 211, i16 212, i16 150, i16 151, i16 152, i16 153, i16 154, i16 0, i16 1, i16 2, i16 42, i16 189, i16 5, i16 235, i16 59, i16 211, i16 212, i16 10, i16 11, i16 12, i16 13, i16 14, i16 26, i16 189, i16 17, i16 247, i16 71, i16 189, i16 53, i16 189, i16 259, i16 63, i16 26, i16 211, i16 212, i16 189, i16 46, i16 30, i16 133, i16 32, i16 85, i16 127, i16 189, i16 138, i16 150, i16 90, i16 152, i16 40, i16 26, i16 211, i16 212, i16 211, i16 212, i16 189, i16 99, i16 303, i16 189, i16 211, i16 212, i16 189, i16 105, i16 106, i16 22, i16 149, i16 211, i16 212, i16 158, i16 112, i16 189, i16 114, i16 115, i16 116, i16 189, i16 189, i16 119, i16 211, i16 212, i16 70, i16 211, i16 212, i16 23, i16 19, i16 20, i16 26, i16 22, i16 78, i16 189, i16 22, i16 81, i16 189, i16 211, i16 212, i16 189, i16 259, i16 211, i16 212, i16 189, i16 221, i16 36, i16 59, i16 189, i16 59, i16 189, i16 113, i16 97, i16 150, i16 151, i16 152, i16 153, i16 154, i16 189, i16 211, i16 212, i16 189, i16 211, i16 212, i16 118, i16 119, i16 211, i16 212, i16 124, i16 59, i16 211, i16 212, i16 211, i16 212, i16 61, i16 189, i16 203, i16 204, i16 59, i16 189, i16 150, i16 71, i16 152, i16 211, i16 212, i16 189, i16 131, i16 189, i16 189, i16 189, i16 189, i16 136, i16 137, i16 189, i16 140, i16 85, i16 189, i16 211, i16 212, i16 59, i16 90, i16 211, i16 212, i16 115, i16 22, i16 115, i16 189, i16 211, i16 212, i16 99, i16 211, i16 212, i16 211, i16 212, i16 159, i16 105, i16 106, i16 147, i16 211, i16 212, i16 7, i16 8, i16 112, i16 189, i16 114, i16 115, i16 116, i16 1, i16 2, i16 119, i16 189, i16 5, i16 23, i16 221, i16 115, i16 26, i16 10, i16 11, i16 12, i16 13, i16 14, i16 23, i16 189, i16 17, i16 26, i16 211, i16 212, i16 189, i16 19, i16 20, i16 189, i16 22, i16 189, i16 189, i16 189, i16 115, i16 30, i16 189, i16 32, i16 253, i16 150, i16 151, i16 152, i16 153, i16 154, i16 36, i16 40, i16 189, i16 221, i16 211, i16 212, i16 189, i16 211, i16 212, i16 211, i16 212, i16 211, i16 212, i16 19, i16 20, i16 189, i16 22, i16 119, i16 189, i16 83, i16 84, i16 189, i16 189, i16 59, i16 211, i16 212, i16 189, i16 129, i16 211, i16 212, i16 36, i16 70, i16 189, i16 23, i16 250, i16 71, i16 26, i16 211, i16 212, i16 78, i16 211, i16 212, i16 81, i16 23, i16 211, i16 212, i16 26, i16 23, i16 211, i16 212, i16 26, i16 189, i16 23, i16 59, i16 23, i16 26, i16 139, i16 26, i16 97, i16 23, i16 189, i16 23, i16 26, i16 99, i16 26, i16 71, i16 189, i16 189, i16 189, i16 105, i16 106, i16 107, i16 23, i16 189, i16 23, i16 26, i16 112, i16 26, i16 114, i16 115, i16 116, i16 189, i16 231, i16 119, i16 189, i16 19, i16 20, i16 281, i16 22, i16 189, i16 189, i16 189, i16 131, i16 99, i16 189, i16 189, i16 189, i16 136, i16 137, i16 105, i16 106, i16 280, i16 36, i16 237, i16 290, i16 250, i16 112, i16 250, i16 114, i16 115, i16 116, i16 250, i16 238, i16 119, i16 150, i16 151, i16 152, i16 153, i16 154, i16 250, i16 159, i16 209, i16 187, i16 241, i16 254, i16 59, i16 254, i16 286, i16 241, i16 241, i16 286, i16 215, i16 224, i16 220, i16 214, i16 214, i16 214, i16 71, i16 244, i16 254, i16 244, i16 273, i16 238, i16 240, i16 150, i16 151, i16 152, i16 153, i16 154, i16 192, i16 60, i16 139, i16 196, i16 290, i16 196, i16 38, i16 196, i16 148, i16 113, i16 276, i16 287, i16 22, i16 265, i16 287, i16 43, i16 99, i16 229, i16 241, i16 147, i16 18, i16 232, i16 105, i16 106, i16 264, i16 232, i16 232, i16 265, i16 232, i16 112, i16 264, i16 114, i16 115, i16 116, i16 229, i16 229, i16 119, i16 5, i16 241, i16 241, i16 196, i16 241, i16 10, i16 11, i16 12, i16 13, i16 14, i16 18, i16 195, i16 17, i16 155, i16 62, i16 283, i16 196, i16 195, i16 22, i16 282, i16 216, i16 196, i16 195, i16 113, i16 196, i16 30, i16 195, i16 32, i16 216, i16 22, i16 150, i16 151, i16 152, i16 153, i16 154, i16 40, i16 64, i16 222, i16 219, i16 124, i16 219, i16 162, i16 213, i16 213, i16 297, i16 213, i16 256, i16 111, i16 275, i16 216, i16 213, i16 215, i16 213, i16 142, i16 213, i16 213, i16 275, i16 113, i16 255, i16 91, i16 216, i16 256, i16 222, i16 216, i16 255, i16 70, i16 256, i16 256, i16 255, i16 255, i16 196, i16 82, i16 146, i16 78, i16 22, i16 143, i16 81, i16 260, i16 302, i16 302, i16 196, i16 144, i16 155, i16 145, i16 25, i16 199, i16 26, i16 198, i16 270, i16 13, i16 190, i16 190, i16 97, i16 245, i16 6, i16 244, i16 241, i16 243, i16 245, i16 242, i16 188, i16 188, i16 188, i16 208, i16 202, i16 208, i16 260, i16 208, i16 202, i16 217, i16 217, i16 208, i16 4, i16 3, i16 209, i16 160, i16 209, i16 208, i16 202, i16 15, i16 98, i16 272, i16 16, i16 23, i16 23, i16 137, i16 131, i16 148, i16 128, i16 24, i16 140, i16 136, i16 137, i16 20, i16 1, i16 149, i16 128, i16 140, i16 61, i16 37, i16 53, i16 148, i16 53, i16 53, i16 53, i16 128, i16 114, i16 1, i16 34, i16 139, i16 5, i16 22, i16 113, i16 68, i16 159, i16 75, i16 158, i16 26, i16 41, i16 139, i16 68, i16 113, i16 24, i16 20, i16 129, i16 123, i16 19, i16 23, i16 96, i16 28, i16 22, i16 22, i16 22, i16 22, i16 67, i16 59, i16 67, i16 24, i16 22, i16 67, i16 23, i16 147, i16 22, i16 24, i16 23, i16 23, i16 23, i16 114, i16 23, i16 37, i16 26, i16 22, i16 24, i16 23, i16 22, i16 139, i16 23, i16 23, i16 22, i16 141, i16 34, i16 26, i16 75, i16 88, i16 86, i16 34, i16 23, i16 75, i16 22, i16 24, i16 26, i16 34, i16 34, i16 34, i16 93, i16 34, i16 26, i16 23, i16 23, i16 23, i16 23, i16 34, i16 23, i16 22, i16 44, i16 23, i16 26, i16 11, i16 22, i16 22, i16 26, i16 23, i16 23, i16 22, i16 22, i16 139, i16 133, i16 139, i16 139, i16 15, i16 23, i16 1, i16 1, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 139, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304, i16 304], align 16
@yy_shift_ofst = local_unnamed_addr constant [535 x i16] [i16 1448, i16 1277, i16 1072, i16 1668, i16 1072, i16 319, i16 1122, i16 1225, i16 1332, i16 1481, i16 1481, i16 1481, i16 57, i16 0, i16 0, i16 180, i16 897, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 930, i16 930, i16 1020, i16 1020, i16 290, i16 378, i16 319, i16 319, i16 319, i16 319, i16 319, i16 319, i16 40, i16 110, i16 219, i16 288, i16 327, i16 396, i16 435, i16 504, i16 543, i16 612, i16 651, i16 720, i16 877, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 897, i16 917, i16 897, i16 1019, i16 763, i16 763, i16 1451, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1553, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 1481, i16 147, i16 258, i16 258, i16 258, i16 258, i16 258, i16 360, i16 424, i16 81, i16 183, i16 1039, i16 183, i16 636, i16 636, i16 183, i16 434, i16 434, i16 189, i16 434, i16 434, i16 134, i16 225, i16 225, i16 511, i16 29, i16 1924, i16 1924, i16 399, i16 399, i16 399, i16 93, i16 163, i16 187, i16 163, i16 163, i16 821, i16 821, i16 487, i16 237, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 332, i16 332, i16 183, i16 773, i16 419, i16 419, i16 937, i16 937, i16 548, i16 840, i16 1924, i16 1924, i16 466, i16 739, i16 739, i16 453, i16 53, i16 618, i16 513, i16 688, i16 737, i16 746, i16 935, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 51, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 715, i16 715, i16 715, i16 183, i16 183, i16 183, i16 183, i16 772, i16 183, i16 183, i16 183, i16 971, i16 1091, i16 183, i16 183, i16 1238, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 183, i16 714, i16 1132, i16 502, i16 398, i16 398, i16 398, i16 398, i16 1090, i16 502, i16 502, i16 909, i16 853, i16 896, i16 817, i16 1292, i16 300, i16 300, i16 1135, i16 1292, i16 1292, i16 1135, i16 1266, i16 1136, i16 1260, i16 1080, i16 1080, i16 1080, i16 300, i16 1062, i16 1062, i16 905, i16 1276, i16 1175, i16 1071, i16 1577, i16 1499, i16 1499, i16 1604, i16 1604, i16 1499, i16 1496, i16 1532, i16 1626, i16 1608, i16 1508, i16 1638, i16 1638, i16 1638, i16 1638, i16 1508, i16 1508, i16 1532, i16 1626, i16 1608, i16 1608, i16 1508, i16 1499, i16 1665, i16 1531, i16 1625, i16 1499, i16 1665, i16 1669, i16 1499, i16 1665, i16 1499, i16 1665, i16 1669, i16 1583, i16 1583, i16 1583, i16 1645, i16 1680, i16 1680, i16 1669, i16 1583, i16 1588, i16 1583, i16 1645, i16 1583, i16 1583, i16 1552, i16 1669, i16 1609, i16 1609, i16 1669, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1584, i16 1617, i16 1499, i16 1641, i16 1641, i16 1662, i16 1662, i16 1599, i16 1605, i16 1725, i16 1499, i16 1600, i16 1599, i16 1611, i16 1610, i16 1508, i16 1732, i16 1733, i16 1749, i16 1749, i16 1761, i16 1761, i16 1761, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 1924, i16 20, i16 1178, i16 397, i16 1133, i16 1310, i16 1245, i16 385, i16 1184, i16 1327, i16 1335, i16 1431, i16 1440, i16 1497, i16 1511, i16 1516, i16 1518, i16 1312, i16 1268, i16 1435, i16 1385, i16 1341, i16 1523, i16 1525, i16 1423, i16 1507, i16 1164, i16 1252, i16 1536, i16 1538, i16 1362, i16 1404, i16 1781, i16 1783, i16 1628, i16 1777, i16 1695, i16 1779, i16 1773, i16 1774, i16 1661, i16 1652, i16 1673, i16 1778, i16 1663, i16 1786, i16 1806, i16 1670, i16 1659, i16 1681, i16 1750, i16 1775, i16 1666, i16 1760, i16 1762, i16 1763, i16 1764, i16 1690, i16 1705, i16 1787, i16 1683, i16 1819, i16 1818, i16 1802, i16 1712, i16 1671, i16 1758, i16 1804, i16 1765, i16 1753, i16 1790, i16 1693, i16 1721, i16 1811, i16 1816, i16 1820, i16 1708, i16 1715, i16 1821, i16 1780, i16 1822, i16 1823, i16 1817, i16 1824, i16 1782, i16 1789, i16 1826, i16 1745, i16 1814, i16 1829, i16 1785, i16 1825, i16 1830, i16 1707, i16 1833, i16 1834, i16 1835, i16 1836, i16 1837, i16 1838, i16 1842, i16 1832, i16 1843, i16 1845, i16 1841, i16 1729, i16 1846, i16 1847, i16 1746, i16 1839, i16 1849, i16 1731, i16 1848, i16 1844, i16 1850, i16 1851, i16 1852, i16 1788, i16 1800, i16 1791, i16 1853, i16 1805, i16 1794, i16 1854, i16 1856, i16 1859, i16 1858, i16 1857, i16 1863, i16 1860, i16 1867, i16 1848, i16 1868, i16 1869, i16 1870, i16 1872, i16 1873, i16 1875, i16 1874, i16 1889, i16 1879, i16 1880, i16 1881, i16 1882, i16 1884, i16 1885, i16 1877, i16 1776, i16 1769, i16 1771, i16 1772, i16 1784, i16 1890, i16 1897, i16 1913, i16 1914], align 16
@yy_reduce_ofst = local_unnamed_addr constant [380 x i16] [i16 -66, i16 490, i16 645, i16 545, i16 -174, i16 -172, i16 -187, i16 -178, i16 -113, i16 -176, i16 430, i16 537, i16 -63, i16 -136, i16 25, i16 -261, i16 37, i16 412, i16 803, i16 828, i16 872, i16 -171, i16 888, i16 892, i16 106, i16 589, i16 921, i16 -189, i16 670, i16 926, i16 -177, i16 196, i16 386, i16 395, i16 694, i16 855, i16 945, i16 948, i16 955, i16 964, i16 966, i16 969, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -147, i16 696, i16 726, i16 801, i16 820, i16 822, i16 928, i16 961, i16 1007, i16 1021, i16 1028, i16 1031, i16 1040, i16 1057, i16 1059, i16 1074, i16 1092, i16 1108, i16 1110, i16 1116, i16 1123, i16 1134, i16 1137, i16 1149, i16 1153, i16 1170, i16 1173, i16 1177, i16 1181, i16 1183, i16 1194, i16 1208, i16 1212, i16 1218, i16 1221, i16 1223, i16 1229, i16 1256, i16 1280, i16 1283, i16 1285, i16 1287, i16 1300, i16 1304, i16 1313, i16 1316, i16 1320, i16 1324, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -264, i16 -175, i16 -22, i16 394, i16 150, i16 220, i16 -180, i16 493, i16 663, i16 299, i16 493, i16 663, i16 193, i16 120, i16 336, i16 -264, i16 -264, i16 -264, i16 -264, i16 90, i16 90, i16 90, i16 436, i16 482, i16 8, i16 647, i16 889, i16 -160, i16 373, i16 -278, i16 554, i16 598, i16 653, i16 697, i16 717, i16 557, i16 393, i16 602, i16 723, i16 808, i16 450, i16 655, i16 802, i16 908, i16 916, i16 864, i16 1041, i16 868, i16 337, i16 870, i16 503, i16 1104, i16 552, i16 641, i16 -157, i16 32, i16 862, i16 968, i16 1050, i16 1195, i16 603, i16 1048, i16 963, i16 433, i16 -210, i16 -201, i16 -89, i16 -9, i16 55, i16 159, i16 320, i16 389, i16 454, i16 522, i16 594, i16 608, i16 666, i16 848, i16 924, i16 957, i16 1067, i16 1075, i16 1140, i16 1154, i16 747, i16 1167, i16 1191, i16 1220, i16 1222, i16 1226, i16 1239, i16 1263, i16 1275, i16 1286, i16 1290, i16 1146, i16 1234, i16 1269, i16 1319, i16 1330, i16 1349, i16 1358, i16 1228, i16 1364, i16 1365, i16 1366, i16 1271, i16 1022, i16 1371, i16 1379, i16 1338, i16 1382, i16 320, i16 1387, i16 1388, i16 1389, i16 1392, i16 1393, i16 1394, i16 1293, i16 1308, i16 1353, i16 1342, i16 1344, i16 1348, i16 1356, i16 1228, i16 1353, i16 1353, i16 1361, i16 1399, i16 1422, i16 1301, i16 1369, i16 1357, i16 1359, i16 1328, i16 1374, i16 1375, i16 1331, i16 1403, i16 1395, i16 1400, i16 1407, i16 1408, i16 1409, i16 1372, i16 1381, i16 1383, i16 1355, i16 1390, i16 1391, i16 1444, i16 1350, i16 1443, i16 1445, i16 1360, i16 1363, i16 1447, i16 1370, i16 1384, i16 1396, i16 1424, i16 1413, i16 1425, i16 1429, i16 1430, i16 1432, i16 1433, i16 1434, i16 1398, i16 1402, i16 1441, i16 1442, i16 1436, i16 1480, i16 1489, i16 1405, i16 1410, i16 1493, i16 1495, i16 1477, i16 1498, i16 1500, i16 1501, i16 1504, i16 1485, i16 1502, i16 1503, i16 1505, i16 1488, i16 1492, i16 1494, i16 1506, i16 1510, i16 1509, i16 1512, i16 1513, i16 1514, i16 1515, i16 1420, i16 1517, i16 1446, i16 1454, i16 1520, i16 1463, i16 1476, i16 1478, i16 1482, i16 1483, i16 1486, i16 1484, i16 1487, i16 1547, i16 1449, i16 1450, i16 1490, i16 1519, i16 1521, i16 1524, i16 1491, i16 1557, i16 1522, i16 1526, i16 1527, i16 1530, i16 1528, i16 1559, i16 1562, i16 1573, i16 1574, i16 1585, i16 1586, i16 1587, i16 1575, i16 1568, i16 1570, i16 1572, i16 1576, i16 1579, i16 1565, i16 1566, i16 1578, i16 1580, i16 1582, i16 1589], align 16
@yy_default = local_unnamed_addr constant [535 x i16] [i16 1523, i16 1523, i16 1372, i16 1523, i16 1149, i16 1258, i16 1149, i16 1149, i16 1149, i16 1372, i16 1372, i16 1372, i16 1149, i16 1288, i16 1288, i16 1425, i16 1180, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1371, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1297, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1373, i16 1374, i16 1149, i16 1149, i16 1149, i16 1424, i16 1426, i16 1389, i16 1307, i16 1306, i16 1305, i16 1304, i16 1407, i16 1275, i16 1302, i16 1295, i16 1299, i16 1367, i16 1368, i16 1366, i16 1370, i16 1374, i16 1373, i16 1149, i16 1298, i16 1338, i16 1352, i16 1337, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1346, i16 1351, i16 1357, i16 1350, i16 1347, i16 1340, i16 1339, i16 1341, i16 1342, i16 1149, i16 1222, i16 1149, i16 1149, i16 1149, i16 1149, i16 1436, i16 1435, i16 1170, i16 1149, i16 1149, i16 1180, i16 1332, i16 1331, i16 1343, i16 1344, i16 1354, i16 1353, i16 1432, i16 1483, i16 1482, i16 1390, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1448, i16 1448, i16 1149, i16 1180, i16 1448, i16 1448, i16 1176, i16 1176, i16 1282, i16 1149, i16 1258, i16 1249, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1429, i16 1427, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1254, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1477, i16 1149, i16 1402, i16 1236, i16 1254, i16 1254, i16 1254, i16 1254, i16 1256, i16 1237, i16 1235, i16 1248, i16 1181, i16 1156, i16 1521, i16 1301, i16 1277, i16 1277, i16 1518, i16 1301, i16 1301, i16 1518, i16 1197, i16 1499, i16 1192, i16 1288, i16 1288, i16 1288, i16 1277, i16 1282, i16 1282, i16 1369, i16 1255, i16 1248, i16 1149, i16 1521, i16 1263, i16 1263, i16 1520, i16 1520, i16 1263, i16 1390, i16 1310, i16 1316, i16 1225, i16 1301, i16 1231, i16 1231, i16 1231, i16 1231, i16 1301, i16 1301, i16 1310, i16 1316, i16 1225, i16 1225, i16 1301, i16 1263, i16 1167, i16 1406, i16 1515, i16 1263, i16 1167, i16 1380, i16 1263, i16 1167, i16 1263, i16 1167, i16 1380, i16 1223, i16 1223, i16 1223, i16 1212, i16 1149, i16 1149, i16 1380, i16 1223, i16 1197, i16 1223, i16 1212, i16 1223, i16 1223, i16 1466, i16 1380, i16 1384, i16 1384, i16 1380, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1281, i16 1276, i16 1263, i16 1458, i16 1458, i16 1291, i16 1291, i16 1296, i16 1282, i16 1375, i16 1263, i16 1149, i16 1296, i16 1294, i16 1292, i16 1301, i16 1173, i16 1215, i16 1480, i16 1480, i16 1476, i16 1476, i16 1476, i16 1492, i16 1180, i16 1180, i16 1180, i16 1180, i16 1492, i16 1199, i16 1199, i16 1181, i16 1181, i16 1180, i16 1492, i16 1149, i16 1149, i16 1149, i16 1149, i16 1487, i16 1391, i16 1267, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1321, i16 1149, i16 1152, i16 1149, i16 1149, i16 1433, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1268, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1517, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1405, i16 1404, i16 1149, i16 1149, i16 1265, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1195, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1293, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1463, i16 1283, i16 1149, i16 1149, i16 1508, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1149, i16 1503, i16 1239, i16 1323, i16 1149, i16 1322, i16 1326, i16 1149, i16 1161, i16 1149, i16 1149], align 16
@yyFallback = local_unnamed_addr constant <{ [100 x i16], [81 x i16] }> <{ [100 x i16] [i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 0, i16 59, i16 0, i16 0, i16 0, i16 59, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 0, i16 0, i16 0, i16 59, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59, i16 59], [81 x i16] zeroinitializer }>, align 16
@.str.479 = private unnamed_addr constant [22 x i8] c"parser stack overflow\00", align 1
@yyRuleInfoLhs = local_unnamed_addr constant [372 x i16] [i16 185, i16 185, i16 184, i16 186, i16 187, i16 187, i16 187, i16 187, i16 186, i16 186, i16 186, i16 186, i16 186, i16 191, i16 193, i16 195, i16 195, i16 194, i16 194, i16 192, i16 192, i16 199, i16 199, i16 201, i16 203, i16 203, i16 203, i16 204, i16 208, i16 209, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 210, i16 219, i16 219, i16 215, i16 215, i16 217, i16 217, i16 220, i16 220, i16 220, i16 220, i16 221, i16 221, i16 221, i16 221, i16 221, i16 218, i16 218, i16 222, i16 222, i16 222, i16 198, i16 224, i16 225, i16 225, i16 225, i16 225, i16 225, i16 228, i16 213, i16 213, i16 229, i16 229, i16 230, i16 230, i16 186, i16 232, i16 232, i16 186, i16 186, i16 186, i16 200, i16 200, i16 200, i16 234, i16 237, i16 237, i16 237, i16 235, i16 235, i16 247, i16 247, i16 238, i16 238, i16 238, i16 249, i16 239, i16 239, i16 239, i16 250, i16 250, i16 240, i16 240, i16 252, i16 252, i16 251, i16 251, i16 251, i16 251, i16 196, i16 196, i16 233, i16 233, i16 258, i16 258, i16 258, i16 258, i16 253, i16 253, i16 253, i16 253, i16 255, i16 255, i16 254, i16 254, i16 254, i16 256, i16 256, i16 244, i16 244, i16 226, i16 226, i16 214, i16 214, i16 214, i16 260, i16 260, i16 260, i16 242, i16 242, i16 243, i16 243, i16 245, i16 245, i16 245, i16 245, i16 186, i16 241, i16 241, i16 186, i16 262, i16 262, i16 262, i16 262, i16 186, i16 186, i16 265, i16 265, i16 265, i16 265, i16 263, i16 263, i16 264, i16 264, i16 259, i16 259, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 211, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 267, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 268, i16 268, i16 212, i16 269, i16 269, i16 212, i16 212, i16 212, i16 212, i16 212, i16 212, i16 272, i16 272, i16 273, i16 273, i16 271, i16 271, i16 257, i16 248, i16 248, i16 270, i16 270, i16 186, i16 274, i16 274, i16 216, i16 216, i16 227, i16 227, i16 275, i16 275, i16 186, i16 186, i16 186, i16 276, i16 276, i16 186, i16 186, i16 186, i16 186, i16 186, i16 206, i16 207, i16 186, i16 278, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 283, i16 283, i16 279, i16 279, i16 285, i16 286, i16 286, i16 284, i16 284, i16 284, i16 284, i16 212, i16 212, i16 231, i16 231, i16 231, i16 186, i16 186, i16 186, i16 288, i16 288, i16 186, i16 186, i16 186, i16 186, i16 186, i16 186, i16 289, i16 186, i16 261, i16 261, i16 236, i16 236, i16 291, i16 291, i16 292, i16 293, i16 293, i16 293, i16 293, i16 293, i16 293, i16 294, i16 294, i16 294, i16 298, i16 300, i16 300, i16 301, i16 301, i16 299, i16 299, i16 302, i16 302, i16 303, i16 303, i16 303, i16 246, i16 266, i16 266, i16 266, i16 297, i16 297, i16 296, i16 181, i16 182, i16 182, i16 183, i16 183, i16 183, i16 188, i16 188, i16 188, i16 190, i16 190, i16 186, i16 197, i16 197, i16 189, i16 189, i16 189, i16 203, i16 204, i16 205, i16 205, i16 202, i16 202, i16 210, i16 210, i16 210, i16 198, i16 223, i16 223, i16 224, i16 228, i16 230, i16 234, i16 235, i16 249, i16 250, i16 212, i16 267, i16 257, i16 277, i16 277, i16 277, i16 277, i16 277, i16 206, i16 282, i16 282, i16 285, i16 286, i16 287, i16 287, i16 290, i16 290, i16 261], align 16
@yyRuleInfoNRhs = local_unnamed_addr constant [372 x i8] c"\FF\FD\FF\FD\00\FF\FF\FF\FE\FE\FE\FD\FB\FA\FF\00\FD\FF\00\FB\FE\00\FE\FE\00\FC\FA\FE\00\00\FE\FD\FC\FC\FC\FD\FD\FB\FE\FC\FC\FF\FE\FD\FC\00\FF\00\FE\FE\FD\FD\FD\FE\FE\FF\FF\FE\FD\FE\00\FE\FE\00\FF\FE\F9\FB\FB\F6\00\00\FD\00\FE\FF\FF\FC\FE\00\F7\FC\FF\FD\FC\FF\FD\FF\FE\FF\F7\F6\FC\FB\FF\FF\00\00\FB\FD\FB\FE\00\00\FE\FE\00\F9\F7\F9\F9\00\FE\FF\FD\FF\FD\FB\FD\FF\FE\FD\FC\FE\00\00\FD\FE\FC\00\00\FD\FB\FD\FF\FF\00\FE\FE\00\00\FD\00\FE\00\FE\FC\FC\FA\00\FE\F8\FB\F9\FD\FB\F9\F9\00\F5\F8\FC\FE\FF\00\FD\FD\FF\FD\FF\FF\FD\FB\FF\FF\FF\FF\FD\FA\FB\FC\FA\FB\FF\FB\FD\FD\FD\FD\FD\FD\FD\FD\FE\FD\FB\FE\FD\FD\FC\FE\FE\FE\FF\FE\FB\FF\FE\FB\FD\FB\FB\FC\FB\FB\FC\FE\00\FF\00\00\FD\FF\00\FD\F4\FF\00\00\FD\FB\FD\00\FE\FC\FE\FD\FE\00\FD\FB\FA\FB\FA\FE\FE\FB\F5\FF\FE\00\FF\FF\FD\00\FE\FD\FE\FD\FD\FE\F8\F8\FA\FD\FC\FA\FF\FF\FF\FC\FA\FD\00\FE\FF\FD\FF\FD\FA\F9\FF\F8\FE\FD\FA\F8\FF\FD\FB\FB\FA\FC\FB\FF\FE\00\FD\FA\FF\FF\FE\FF\FE\FE\FE\00\FE\FE\FE\FF\FE\FE\FF\FF\FC\FE\FB\FF\FE\FF\FF\FE\FD\00\FF\FE\FF\00\FE\FC\FE\FF\FF\FF\FF\FF\FF\FF\FE\00\FE\FC\FE\FE\FD\FF\00\FF\FF\FF\FF\FE\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FD\FF\00\FF\00\00\FF\00", align 16
@.str.480 = private unnamed_addr constant [27 x i8] c"unknown table option: %.*s\00", align 1
@__const.yy_reduce.dest = private unnamed_addr constant %struct.SelectDest { i8 9, i32 0, i32 0, i32 0, i8* null, %struct.ExprList* null }, align 8
@.str.481 = private unnamed_addr constant [9 x i8] c"set list\00", align 1
@.str.482 = private unnamed_addr constant [24 x i8] c"near \22%T\22: syntax error\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.484 = private unnamed_addr constant [95 x i8] c"qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\00", align 1
@.str.485 = private unnamed_addr constant [84 x i8] c"the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.486 = private unnamed_addr constant [85 x i8] c"the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\00", align 1
@.str.487 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@aiClass = local_unnamed_addr constant [256 x i8] calign 16
@zKWText = constant [647 x i8] c"REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEAFTERENAMEANDEFERREDISTINCTAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPARTITIONDROPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY", align 16
@aKWHash = local_unnamed_addr constant [127 x i8] c"Tf\84Rr\1D\00\00[\00UH\005#V\0F\00*^6~\85\13\00\00\8A\00(\80\00\16h\00\09\00\00zP\00N\06\00Ac\91\00\86p\00\000\00d\18\00\11\00\1BF\17\1A\05<\8Cky\00IeG\8F=wJ\001\00\0B)\00n\00\00\00j\0Alq|\0E2{\00Y\00\12x\8E8\81\89XS%\1E}\00\00i3\82\7F\00\22\00\00,\00_&'\00\14-tZ", align 16
@aKWNext = local_unnamed_addr constant [145 x i8] c"\00\00\00\00\04\00+\00\00go\00\00\00\02\00\00\8D\00\00\00\0D\00\00\00\00\8B\00\00v4\00\00\87\0C\00\00>\00\88\00\83\00\00$\00\00\1CM\00\00\00\00;\00/\00\00\00\00\00\00\00\00\00\00E\00\00\00\00\00\90\03\00:\00\01K\00\00\00\1F\00\00\00\00\00\00@B?\00\00\00\00.\00\10\00s\00\00\00\00\00\00\00\00\00\00Qa\00\08\00m\15\07C\00O]u\00\00D\00\00`\007\00L\00\\ !9\19\00b\00\00W", align 16
@aKWLen = local_unnamed_addr constant [145 x i8] c"\07\07\05\04\06\04\05\03\06\07\03\06\06\07\07\03\08\02\06\05\04\04\03\0A\04\07\06\09\04\02\06\05\09\09\04\07\03\02\04\04\06\0B\06\02\07\05\05\09\06\0A\04\06\02\03\07\05\09\06\06\04\05\05\0A\06\05\07\04\05\07\06\07\07\06\05\07\03\07\04\07\06\0C\09\04\06\05\04\07\06\05\06\06\07\06\04\05\09\05\06\03\08\08\02\0D\02\02\04\06\06\08\05\11\0C\07\09\04\09\04\04\06\07\05\09\04\04\05\02\05\08\06\04\05\08\04\03\09\05\05\06\04\06\02\02\09\03\07", align 16
@aKWOffset = local_unnamed_addr constant [145 x i16] [i16 0, i16 2, i16 2, i16 8, i16 9, i16 14, i16 16, i16 20, i16 23, i16 25, i16 25, i16 29, i16 33, i16 36, i16 41, i16 46, i16 48, i16 53, i16 54, i16 59, i16 62, i16 65, i16 67, i16 69, i16 78, i16 81, i16 86, i16 90, i16 90, i16 94, i16 99, i16 101, i16 105, i16 111, i16 119, i16 123, i16 123, i16 123, i16 126, i16 129, i16 132, i16 137, i16 142, i16 146, i16 147, i16 152, i16 156, i16 160, i16 168, i16 174, i16 181, i16 184, i16 184, i16 187, i16 189, i16 195, i16 198, i16 206, i16 211, i16 216, i16 219, i16 222, i16 226, i16 236, i16 239, i16 244, i16 244, i16 248, i16 252, i16 259, i16 265, i16 271, i16 277, i16 277, i16 283, i16 284, i16 288, i16 295, i16 299, i16 306, i16 312, i16 324, i16 333, i16 335, i16 341, i16 346, i16 348, i16 355, i16 360, i16 365, i16 371, i16 377, i16 382, i16 388, i16 392, i16 395, i16 404, i16 408, i16 414, i16 416, i16 423, i16 424, i16 431, i16 433, i16 435, i16 444, i16 448, i16 454, i16 460, i16 468, i16 473, i16 473, i16 473, i16 489, i16 498, i16 501, i16 510, i16 513, i16 517, i16 522, i16 529, i16 534, i16 543, i16 547, i16 550, i16 555, i16 557, i16 561, i16 569, i16 575, i16 578, i16 583, i16 591, i16 591, i16 595, i16 604, i16 609, i16 614, i16 620, i16 623, i16 626, i16 629, i16 631, i16 636, i16 640], align 16
@aKWCode = local_unnamed_addr constant [145 x i8] c"ar\9E':)zC!\82>?/\02A\A0&\18\88\10t\9C\0B\81\9D[~\15\15+2R\0D\87^3\13Bw/\86\06\1Cqt\9FG\09\14u\94ED\80MY_(\91/\05t{y\03\19Qt\0E 0\95\\\90#\1Fv\9Ao\11c\08\8D}.\04\1EF\1B\7F\89P`\9B\93H\1Db,\07\8A-|\0F1$<\0A%tccUW\83X*T\A3ISV\8Ct\92\12\8FJ]\A2t\0CLKZ\84\8ENO\A1=\22@\85x", align 16
@sqlite3_complete.trans = internal unnamed_addr constant [8 x [8 x i8]] [[8 x i8] c"\01\00\02\03\04\02\02\02", [8 x i8] c"\01\01\02\03\04\02\02\02", [8 x i8] c"\01\02\02\02\02\02\02\02", [8 x i8] c"\01\03\03\02\04\02\02\02", [8 x i8] c"\01\04\02\02\02\04\05\02", [8 x i8] c"\06\05\05\05\05\05\05\05", [8 x i8] c"\06\06\05\05\05\05\05\07", [8 x i8] c"\01\07\05\05\05\05\05\05"], align 16
@.str.488 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.489 = private unnamed_addr constant [8 x i8] c"trigger\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.491 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.492 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.493 = private unnamed_addr constant [8 x i8] c"explain\00", align 1
@sqlite3_data_directory = local_unnamed_addr global i8* null, align 8
@sqlite3BuiltinFunctions = internal unnamed_addr global %struct.FuncDefHash zeroinitializer, align 8
@sqlite3_db_config.aFlagOp = internal unnamed_addr constant [16 x %struct.anon.22] [%struct.anon.22 { i32 1002, i32 16384 }, %struct.anon.22 { i32 1003, i32 262144 }, %struct.anon.22 { i32 1015, i32 -2147483648 }, %struct.anon.22 { i32 1004, i32 4194304 }, %struct.anon.22 { i32 1005, i32 65536 }, %struct.anon.22 { i32 1006, i32 2048 }, %struct.anon.22 { i32 1007, i32 8388608 }, %struct.anon.22 { i32 1008, i32 16777216 }, %struct.anon.22 { i32 1009, i32 33554432 }, %struct.anon.22 { i32 1010, i32 268435456 }, %struct.anon.22 { i32 1011, i32 134217729 }, %struct.anon.22 { i32 1012, i32 67108864 }, %struct.anon.22 { i32 1014, i32 536870912 }, %struct.anon.22 { i32 1013, i32 1073741824 }, %struct.anon.22 { i32 1016, i32 2 }, %struct.anon.22 { i32 1017, i32 128 }], align 16
@.str.494 = private unnamed_addr constant [21 x i8] c"unknown database: %s\00", align 1
@sqlite3_errmsg16.outOfMem = internal constant [14 x i16] [i16 111, i16 117, i16 116, i16 32, i16 111, i16 102, i16 32, i16 109, i16 101, i16 109, i16 111, i16 114, i16 121, i16 0], align 16
@sqlite3_errmsg16.misuse = internal constant [34 x i16] [i16 98, i16 97, i16 100, i16 32, i16 112, i16 97, i16 114, i16 97, i16 109, i16 101, i16 116, i16 101, i16 114, i16 32, i16 111, i16 114, i16 32, i16 111, i16 116, i16 104, i16 101, i16 114, i16 32, i16 65, i16 80, i16 73, i16 32, i16 109, i16 105, i16 115, i16 117, i16 115, i16 101, i16 0], align 16
@.str.495 = private unnamed_addr constant [68 x i8] c"unable to delete/modify collation sequence due to active statements\00", align 1
@aHardLimit = constant [12 x i32] [i32 1000000000, i32 1000000000, i32 2000, i32 1000, i32 500, i32 250000000, i32 127, i32 10, i32 50000, i32 32766, i32 1000, i32 8], align 16
@.str.496 = private unnamed_addr constant [6 x i8] c"RTRIM\00", align 1
@.str.497 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.498 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.499 = private unnamed_addr constant [28 x i8] c"no such table column: %s.%s\00", align 1
@.str.500 = private unnamed_addr constant [8 x i8] c"SQLITE_\00", align 1
@.str.501 = private unnamed_addr constant [85 x i8] c"2020-03-11 19:56:26 c5f96a085db9688a09793f52ce1ecf033c2e6e2e5873a19fe0fb374b242balt1\00", align 1
@_sqliteZone_ = local_unnamed_addr global %struct._malloc_zone_t* null, align 8
@top_of_stack = local_unnamed_addr global i64 0, align 8
@sqlite3Utf8Trans1 = internal unnamed_addr constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\00\01\02\03\00\01\00\00", align 16
@sqlite3PagerFilename.zFake = internal constant [8 x i8] zeroinitializer, align 1
@sqlite3VdbeSerialGet.aFlag = internal unnamed_addr constant [2 x i16] [i16 4112, i16 4098], align 2
@.str.502 = private unnamed_addr constant [19 x i8] c"a CHECK constraint\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"a generated column\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"an index\00", align 1
@.str.505 = private unnamed_addr constant [36 x i8] c"non-deterministic use of %s() in %s\00", align 1
@.str.506 = private unnamed_addr constant [35 x i8] c"sqlite3VdbeRealValue: NO FLAG SET\0A\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@sqlite3OpcodeName.azName = internal unnamed_addr constant [176 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.683, i32 0, i32 0)], align 16
@.str.508 = private unnamed_addr constant [10 x i8] c"Savepoint\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"AutoCommit\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"Transaction\00", align 1
@.str.511 = private unnamed_addr constant [11 x i8] c"SorterNext\00", align 1
@.str.512 = private unnamed_addr constant [5 x i8] c"Prev\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"Next\00", align 1
@.str.514 = private unnamed_addr constant [11 x i8] c"Checkpoint\00", align 1
@.str.515 = private unnamed_addr constant [12 x i8] c"JournalMode\00", align 1
@.str.516 = private unnamed_addr constant [7 x i8] c"Vacuum\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"VFilter\00", align 1
@.str.518 = private unnamed_addr constant [8 x i8] c"VUpdate\00", align 1
@.str.519 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.520 = private unnamed_addr constant [6 x i8] c"Gosub\00", align 1
@.str.521 = private unnamed_addr constant [14 x i8] c"InitCoroutine\00", align 1
@.str.522 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"MustBeInt\00", align 1
@.str.524 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"Once\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"IfNot\00", align 1
@.str.529 = private unnamed_addr constant [10 x i8] c"IfNullRow\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"SeekLT\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"SeekLE\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"SeekGE\00", align 1
@.str.533 = private unnamed_addr constant [7 x i8] c"SeekGT\00", align 1
@.str.534 = private unnamed_addr constant [10 x i8] c"IfNotOpen\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"IfNoHope\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"NoConflict\00", align 1
@.str.537 = private unnamed_addr constant [9 x i8] c"NotFound\00", align 1
@.str.538 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"SeekRowid\00", align 1
@.str.540 = private unnamed_addr constant [10 x i8] c"NotExists\00", align 1
@.str.541 = private unnamed_addr constant [5 x i8] c"Last\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"IfSmaller\00", align 1
@.str.543 = private unnamed_addr constant [11 x i8] c"SorterSort\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"Sort\00", align 1
@.str.545 = private unnamed_addr constant [7 x i8] c"Rewind\00", align 1
@.str.546 = private unnamed_addr constant [6 x i8] c"IdxLE\00", align 1
@.str.547 = private unnamed_addr constant [6 x i8] c"IdxGT\00", align 1
@.str.548 = private unnamed_addr constant [6 x i8] c"IdxLT\00", align 1
@.str.549 = private unnamed_addr constant [6 x i8] c"IdxGE\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"RowSetRead\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.552 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.553 = private unnamed_addr constant [11 x i8] c"RowSetTest\00", align 1
@.str.554 = private unnamed_addr constant [8 x i8] c"Program\00", align 1
@.str.555 = private unnamed_addr constant [9 x i8] c"FkIfZero\00", align 1
@.str.556 = private unnamed_addr constant [6 x i8] c"IfPos\00", align 1
@.str.557 = private unnamed_addr constant [10 x i8] c"IfNotZero\00", align 1
@.str.558 = private unnamed_addr constant [7 x i8] c"IsNull\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"NotNull\00", align 1
@.str.560 = private unnamed_addr constant [3 x i8] c"Ne\00", align 1
@.str.561 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@.str.562 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@.str.563 = private unnamed_addr constant [3 x i8] c"Le\00", align 1
@.str.564 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@.str.565 = private unnamed_addr constant [3 x i8] c"Ge\00", align 1
@.str.566 = private unnamed_addr constant [10 x i8] c"ElseNotEq\00", align 1
@.str.567 = private unnamed_addr constant [13 x i8] c"DecrJumpZero\00", align 1
@.str.568 = private unnamed_addr constant [11 x i8] c"IncrVacuum\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"VNext\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"PureFunc\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.573 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@.str.574 = private unnamed_addr constant [13 x i8] c"EndCoroutine\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"HaltIfNull\00", align 1
@.str.576 = private unnamed_addr constant [5 x i8] c"Halt\00", align 1
@.str.577 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.578 = private unnamed_addr constant [6 x i8] c"Int64\00", align 1
@.str.579 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.581 = private unnamed_addr constant [9 x i8] c"SoftNull\00", align 1
@.str.582 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"Variable\00", align 1
@.str.584 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.585 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.586 = private unnamed_addr constant [6 x i8] c"SCopy\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"IntCopy\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"ResultRow\00", align 1
@.str.589 = private unnamed_addr constant [8 x i8] c"CollSeq\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"AddImm\00", align 1
@.str.591 = private unnamed_addr constant [13 x i8] c"RealAffinity\00", align 1
@.str.592 = private unnamed_addr constant [5 x i8] c"Cast\00", align 1
@.str.593 = private unnamed_addr constant [12 x i8] c"Permutation\00", align 1
@.str.594 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.595 = private unnamed_addr constant [7 x i8] c"IsTrue\00", align 1
@.str.596 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.597 = private unnamed_addr constant [7 x i8] c"Column\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"Affinity\00", align 1
@.str.599 = private unnamed_addr constant [11 x i8] c"MakeRecord\00", align 1
@.str.600 = private unnamed_addr constant [6 x i8] c"Count\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"ReadCookie\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"SetCookie\00", align 1
@.str.603 = private unnamed_addr constant [10 x i8] c"ReopenIdx\00", align 1
@.str.604 = private unnamed_addr constant [9 x i8] c"OpenRead\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"OpenWrite\00", align 1
@.str.606 = private unnamed_addr constant [8 x i8] c"OpenDup\00", align 1
@.str.607 = private unnamed_addr constant [14 x i8] c"OpenAutoindex\00", align 1
@.str.608 = private unnamed_addr constant [14 x i8] c"OpenEphemeral\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@.str.610 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"ShiftLeft\00", align 1
@.str.612 = private unnamed_addr constant [11 x i8] c"ShiftRight\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.614 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"Remainder\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"Concat\00", align 1
@.str.619 = private unnamed_addr constant [11 x i8] c"SorterOpen\00", align 1
@.str.620 = private unnamed_addr constant [7 x i8] c"BitNot\00", align 1
@.str.621 = private unnamed_addr constant [13 x i8] c"SequenceTest\00", align 1
@.str.622 = private unnamed_addr constant [11 x i8] c"OpenPseudo\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"String8\00", align 1
@.str.624 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"ColumnsUsed\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"SeekHit\00", align 1
@.str.627 = private unnamed_addr constant [9 x i8] c"Sequence\00", align 1
@.str.628 = private unnamed_addr constant [9 x i8] c"NewRowid\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"ResetCount\00", align 1
@.str.632 = private unnamed_addr constant [14 x i8] c"SorterCompare\00", align 1
@.str.633 = private unnamed_addr constant [11 x i8] c"SorterData\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"RowData\00", align 1
@.str.635 = private unnamed_addr constant [6 x i8] c"Rowid\00", align 1
@.str.636 = private unnamed_addr constant [8 x i8] c"NullRow\00", align 1
@.str.637 = private unnamed_addr constant [8 x i8] c"SeekEnd\00", align 1
@.str.638 = private unnamed_addr constant [10 x i8] c"IdxInsert\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"SorterInsert\00", align 1
@.str.640 = private unnamed_addr constant [10 x i8] c"IdxDelete\00", align 1
@.str.641 = private unnamed_addr constant [13 x i8] c"DeferredSeek\00", align 1
@.str.642 = private unnamed_addr constant [9 x i8] c"IdxRowid\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"FinishSeek\00", align 1
@.str.644 = private unnamed_addr constant [8 x i8] c"Destroy\00", align 1
@.str.645 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.646 = private unnamed_addr constant [12 x i8] c"ResetSorter\00", align 1
@.str.647 = private unnamed_addr constant [12 x i8] c"CreateBtree\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"SqlExec\00", align 1
@.str.649 = private unnamed_addr constant [12 x i8] c"ParseSchema\00", align 1
@.str.650 = private unnamed_addr constant [13 x i8] c"LoadAnalysis\00", align 1
@.str.651 = private unnamed_addr constant [10 x i8] c"DropTable\00", align 1
@.str.652 = private unnamed_addr constant [10 x i8] c"DropIndex\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"DropTrigger\00", align 1
@.str.654 = private unnamed_addr constant [12 x i8] c"IntegrityCk\00", align 1
@.str.655 = private unnamed_addr constant [10 x i8] c"RowSetAdd\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@.str.657 = private unnamed_addr constant [10 x i8] c"FkCounter\00", align 1
@.str.658 = private unnamed_addr constant [5 x i8] c"Real\00", align 1
@.str.659 = private unnamed_addr constant [7 x i8] c"MemMax\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"OffsetLimit\00", align 1
@.str.661 = private unnamed_addr constant [11 x i8] c"AggInverse\00", align 1
@.str.662 = private unnamed_addr constant [8 x i8] c"AggStep\00", align 1
@.str.663 = private unnamed_addr constant [9 x i8] c"AggStep1\00", align 1
@.str.664 = private unnamed_addr constant [9 x i8] c"AggValue\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"AggFinal\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"Expire\00", align 1
@.str.667 = private unnamed_addr constant [11 x i8] c"CursorLock\00", align 1
@.str.668 = private unnamed_addr constant [13 x i8] c"CursorUnlock\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"TableLock\00", align 1
@.str.670 = private unnamed_addr constant [7 x i8] c"VBegin\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"VCreate\00", align 1
@.str.672 = private unnamed_addr constant [9 x i8] c"VDestroy\00", align 1
@.str.673 = private unnamed_addr constant [6 x i8] c"VOpen\00", align 1
@.str.674 = private unnamed_addr constant [8 x i8] c"VColumn\00", align 1
@.str.675 = private unnamed_addr constant [8 x i8] c"VRename\00", align 1
@.str.676 = private unnamed_addr constant [10 x i8] c"Pagecount\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"MaxPgcnt\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"Trace\00", align 1
@.str.679 = private unnamed_addr constant [11 x i8] c"CursorHint\00", align 1
@.str.680 = private unnamed_addr constant [11 x i8] c"ReleaseReg\00", align 1
@.str.681 = private unnamed_addr constant [5 x i8] c"Noop\00", align 1
@.str.682 = private unnamed_addr constant [8 x i8] c"Explain\00", align 1
@.str.683 = private unnamed_addr constant [10 x i8] c"Abortable\00", align 1
@sqlite3VdbeExec.azType = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0)], align 16
@.str.684 = private unnamed_addr constant [9 x i8] c"NOT NULL\00", align 1
@.str.685 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@.str.686 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"FOREIGN KEY\00", align 1
@.str.688 = private unnamed_addr constant [21 x i8] c"%s constraint failed\00", align 1
@.str.689 = private unnamed_addr constant [7 x i8] c"%z: %s\00", align 1
@.str.690 = private unnamed_addr constant [24 x i8] c"abort at %d in [%s]: %s\00", align 1
@sqlite3VdbeExec.aLTb = internal unnamed_addr constant [6 x i8] c"\01\00\00\01\01\00", align 1
@sqlite3VdbeExec.aEQb = internal unnamed_addr constant [6 x i8] c"\00\01\00\01\00\01", align 1
@sqlite3VdbeExec.aGTb = internal unnamed_addr constant [6 x i8] c"\01\00\01\00\00\01", align 1
@sqlite3VdbeExec.and_logic = internal unnamed_addr constant [9 x i8] c"\00\00\00\00\01\02\00\02\02", align 1
@sqlite3VdbeExec.or_logic = internal unnamed_addr constant [9 x i8] c"\00\01\02\01\01\01\02\01\02", align 1
@sqlite3VdbeExec.aFlag = internal unnamed_addr constant [2 x i16] [i16 16, i16 514], align 2
@.str.691 = private unnamed_addr constant [51 x i8] c"cannot open savepoint - SQL statements in progress\00", align 1
@.str.692 = private unnamed_addr constant [22 x i8] c"no such savepoint: %s\00", align 1
@.str.693 = private unnamed_addr constant [54 x i8] c"cannot release savepoint - SQL statements in progress\00", align 1
@.str.694 = private unnamed_addr constant [55 x i8] c"cannot commit transaction - SQL statements in progress\00", align 1
@.str.695 = private unnamed_addr constant [48 x i8] c"cannot start a transaction within a transaction\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"cannot rollback - no transaction is active\00", align 1
@.str.697 = private unnamed_addr constant [41 x i8] c"cannot commit - no transaction is active\00", align 1
@.str.698 = private unnamed_addr constant [28 x i8] c"database schema has changed\00", align 1
@.str.699 = private unnamed_addr constant [43 x i8] c"SELECT*FROM\22%w\22.%s WHERE %s ORDER BY rowid\00", align 1
@.str.700 = private unnamed_addr constant [37 x i8] c"too many levels of trigger recursion\00", align 1
@.str.701 = private unnamed_addr constant [52 x i8] c"cannot change %s wal mode from within a transaction\00", align 1
@.str.702 = private unnamed_addr constant [5 x i8] c"into\00", align 1
@.str.703 = private unnamed_addr constant [7 x i8] c"out of\00", align 1
@.str.704 = private unnamed_addr constant [29 x i8] c"database table is locked: %s\00", align 1
@.str.705 = private unnamed_addr constant [32 x i8] c"statement aborts at %d: [%s] %s\00", align 1
@sqlite3BtreeFakeValidCursor.fakeCursor = internal global i8 0, align 1
@.str.706 = private unnamed_addr constant [19 x i8] c"sqlite_temp_master\00", align 1
@.str.707 = private unnamed_addr constant [72 x i8] c"CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\00", align 1
@.str.708 = private unnamed_addr constant [24 x i8] c"unsupported file format\00", align 1
@.str.709 = private unnamed_addr constant [34 x i8] c"SELECT*FROM\22%w\22.%s ORDER BY rowid\00", align 1
@.str.710 = private unnamed_addr constant [8 x i8] c"create \00", align 1
@.str.711 = private unnamed_addr constant [17 x i8] c"invalid rootpage\00", align 1
@.str.712 = private unnamed_addr constant [13 x i8] c"orphan index\00", align 1
@.str.713 = private unnamed_addr constant [30 x i8] c"database schema is locked: %s\00", align 1
@.str.714 = private unnamed_addr constant [19 x i8] c"statement too long\00", align 1
@.str.715 = private unnamed_addr constant [41 x i8] c"SELECT tbl,idx,stat FROM %Q.sqlite_stat1\00", align 1
@__const.sqlite3DefaultRowEst.aVal = private unnamed_addr constant [5 x i16] [i16 33, i16 32, i16 30, i16 28, i16 26], align 2
@.str.716 = private unnamed_addr constant [16 x i8] c"Main freelist: \00", align 1
@.str.717 = private unnamed_addr constant [45 x i8] c"max rootpage (%d) disagrees with header (%d)\00", align 1
@.str.718 = private unnamed_addr constant [55 x i8] c"incremental_vacuum enabled with a max rootpage of zero\00", align 1
@.str.719 = private unnamed_addr constant [22 x i8] c"Page %d is never used\00", align 1
@.str.720 = private unnamed_addr constant [34 x i8] c"Pointer map page %d is referenced\00", align 1
@sqlite3JournalModename.azModeName = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.725, i32 0, i32 0)], align 16
@.str.721 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.722 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.723 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.724 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.725 = private unnamed_addr constant [4 x i8] c"wal\00", align 1
@.str.726 = private unnamed_addr constant [40 x i8] c"cannot VACUUM from within a transaction\00", align 1
@.str.727 = private unnamed_addr constant [43 x i8] c"cannot VACUUM - SQL statements in progress\00", align 1
@.str.728 = private unnamed_addr constant [18 x i8] c"non-text filename\00", align 1
@.str.729 = private unnamed_addr constant [23 x i8] c"ATTACH %Q AS vacuum_db\00", align 1
@.str.730 = private unnamed_addr constant [27 x i8] c"output file already exists\00", align 1
@.str.731 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.732 = private unnamed_addr constant [108 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\00", align 1
@.str.733 = private unnamed_addr constant [54 x i8] c"SELECT sql FROM \22%w\22.sqlite_master WHERE type='index'\00", align 1
@.str.734 = private unnamed_addr constant [151 x i8] c"SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\22%w\22.'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\00", align 1
@.str.735 = private unnamed_addr constant [130 x i8] c"INSERT INTO vacuum_db.sqlite_master SELECT*FROM \22%w\22.sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\00", align 1
@sqlite3RunVacuum.aCopy = internal unnamed_addr constant [10 x i8] c"\01\01\03\00\05\00\06\00\08\00", align 1
@sqlite3OpcodeProperty = internal unnamed_addr constant [176 x i8] calign 16
@sqlite3VdbeMakeReady.azColName = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.741, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.743, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.745, i32 0, i32 0)], align 16
@.str.736 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.737 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.738 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.739 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.740 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.741 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@.str.742 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@.str.743 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.744 = private unnamed_addr constant [8 x i8] c"notused\00", align 1
@.str.745 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.746 = private unnamed_addr constant [31 x i8] c"too many terms in %s BY clause\00", align 1
@.str.747 = private unnamed_addr constant [48 x i8] c"Expression tree is too large (maximum depth %d)\00", align 1
@.str.748 = private unnamed_addr constant [19 x i8] c"unsafe use of %s()\00", align 1
@.str.749 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.750 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.751 = private unnamed_addr constant [8 x i8] c"_ROWID_\00", align 1
@.str.752 = private unnamed_addr constant [6 x i8] c"ROWID\00", align 1
@.str.753 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.754 = private unnamed_addr constant [18 x i8] c"REUSE SUBQUERY %d\00", align 1
@.str.755 = private unnamed_addr constant [21 x i8] c"%sSCALAR SUBQUERY %d\00", align 1
@.str.756 = private unnamed_addr constant [12 x i8] c"CORRELATED \00", align 1
@sqlite3VdbeGetOp.dummy = internal global %struct.VdbeOp zeroinitializer, align 8
@sqlite3ExprCodeTarget.zAff = internal constant [8 x i8] c"B\00C\00D\00E\00", align 1
@.str.757 = private unnamed_addr constant [30 x i8] c"generated column loop on \22%s\22\00", align 1
@.str.758 = private unnamed_addr constant [26 x i8] c"misuse of aggregate: %s()\00", align 1
@.str.759 = private unnamed_addr constant [23 x i8] c"unknown function: %s()\00", align 1
@.str.760 = private unnamed_addr constant [30 x i8] c"%d columns assigned %d values\00", align 1
@.str.761 = private unnamed_addr constant [50 x i8] c"RAISE() may only be used within a trigger-program\00", align 1
@.str.762 = private unnamed_addr constant [44 x i8] c"sub-select returns %d columns - expected %d\00", align 1
@.str.763 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@sqlite3LogEst.a = internal unnamed_addr constant [8 x i16] [i16 0, i16 2, i16 3, i16 5, i16 6, i16 7, i16 8, i16 9], align 16
@.str.764 = private unnamed_addr constant [9 x i8] c":memory:\00", align 1
@.str.767 = private unnamed_addr constant [7 x i8] c"nolock\00", align 1
@.str.768 = private unnamed_addr constant [10 x i8] c"immutable\00", align 1
@.str.769 = private unnamed_addr constant [6 x i8] c"%s.%z\00", align 1
@.str.770 = private unnamed_addr constant [27 x i8] c"access to %z is prohibited\00", align 1
@.str.771 = private unnamed_addr constant [13 x i8] c"no such view\00", align 1
@.str.772 = private unnamed_addr constant [14 x i8] c"no such table\00", align 1
@.str.773 = private unnamed_addr constant [30 x i8] c"view %s is circularly defined\00", align 1
@.str.774 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.775 = private unnamed_addr constant [50 x i8] c"cannot create a TEMP index on non-TEMP table \22%s\22\00", align 1
@.str.776 = private unnamed_addr constant [28 x i8] c"table %s may not be indexed\00", align 1
@.str.777 = private unnamed_addr constant [25 x i8] c"views may not be indexed\00", align 1
@.str.778 = private unnamed_addr constant [34 x i8] c"there is already a table named %s\00", align 1
@.str.779 = private unnamed_addr constant [24 x i8] c"index %s already exists\00", align 1
@.str.780 = private unnamed_addr constant [23 x i8] c"sqlite_autoindex_%s_%d\00", align 1
@.str.781 = private unnamed_addr constant [61 x i8] c"expressions prohibited in PRIMARY KEY and UNIQUE constraints\00", align 1
@.str.782 = private unnamed_addr constant [42 x i8] c"conflicting ON CONFLICT clauses specified\00", align 1
@.str.783 = private unnamed_addr constant [20 x i8] c"CREATE%s INDEX %.*s\00", align 1
@.str.784 = private unnamed_addr constant [8 x i8] c" UNIQUE\00", align 1
@.str.785 = private unnamed_addr constant [48 x i8] c"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\00", align 1
@.str.786 = private unnamed_addr constant [27 x i8] c"name='%q' AND type='index'\00", align 1
@.str.787 = private unnamed_addr constant [28 x i8] c"unsupported use of NULLS %s\00", align 1
@.str.788 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.789 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.790 = private unnamed_addr constant [17 x i8] c"corrupt database\00", align 1
@.str.791 = private unnamed_addr constant [20 x i8] c"unknown database %T\00", align 1
@.str.792 = private unnamed_addr constant [46 x i8] c"%s %T cannot reference objects in database %s\00", align 1
@.str.793 = private unnamed_addr constant [24 x i8] c"%s cannot use variables\00", align 1
@.str.794 = private unnamed_addr constant [42 x i8] c"object name reserved for internal use: %s\00", align 1
@.str.795 = private unnamed_addr constant [70 x i8] c"unable to open a temporary database file for storing temporary tables\00", align 1
@.str.796 = private unnamed_addr constant [11 x i8] c"index '%q'\00", align 1
@.str.797 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.798 = private unnamed_addr constant [31 x i8] c"no such collation sequence: %s\00", align 1
@.str.799 = private unnamed_addr constant [45 x i8] c"foreign key mismatch - \22%w\22 referencing \22%w\22\00", align 1
@.str.800 = private unnamed_addr constant [9 x i8] c"%s.rowid\00", align 1
@.str.801 = private unnamed_addr constant [9 x i8] c"unopened\00", align 1
@.str.802 = private unnamed_addr constant [6 x i8] c"dylib\00", align 1
@.str.803 = private unnamed_addr constant [23 x i8] c"sqlite3_extension_init\00", align 1
@.str.804 = private unnamed_addr constant [35 x i8] c"unable to open shared library [%s]\00", align 1
@.str.806 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.807 = private unnamed_addr constant [6 x i8] c"_init\00", align 1
@.str.808 = private unnamed_addr constant [43 x i8] c"no entry point [%s] in shared library [%s]\00", align 1
@sqlite3Apis = external dso_local constant %struct.sqlite3_api_routines, align 8
@.str.809 = private unnamed_addr constant [32 x i8] c"error during initialization: %s\00", align 1
@sqlite3LogEstAdd.x = internal unnamed_addr constant [32 x i8] c"\0A\0A\09\09\08\08\07\07\07\06\06\06\05\05\05\04\04\04\04\03\03\03\03\03\03\02\02\02\02\02\02\02", align 16
@.str.810 = private unnamed_addr constant [46 x i8] c"all VALUES must have the same number of terms\00", align 1
@.str.811 = private unnamed_addr constant [82 x i8] c"SELECTs to the left and right of %s do not have the same number of result columns\00", align 1
@.str.812 = private unnamed_addr constant [36 x i8] c"too many FROM clause terms, max: %d\00", align 1
@.str.813 = private unnamed_addr constant [36 x i8] c"a JOIN clause is required before %s\00", align 1
@.str.814 = private unnamed_addr constant [3 x i8] c"ON\00", align 1
@.str.815 = private unnamed_addr constant [6 x i8] c"USING\00", align 1
@.str.816 = private unnamed_addr constant [8 x i8] c"%.*z:%u\00", align 1
@.str.817 = private unnamed_addr constant [12 x i8] c"subquery_%u\00", align 1
@.str.818 = private unnamed_addr constant [18 x i8] c"no such index: %s\00", align 1
@.str.819 = private unnamed_addr constant [40 x i8] c"expected %d columns for '%s' but got %d\00", align 1
@.str.820 = private unnamed_addr constant [14 x i8] c"CO-ROUTINE %u\00", align 1
@.str.821 = private unnamed_addr constant [15 x i8] c"MATERIALIZE %u\00", align 1
@.str.822 = private unnamed_addr constant [9 x i8] c"DISTINCT\00", align 1
@.str.823 = private unnamed_addr constant [9 x i8] c"GROUP BY\00", align 1
@.str.824 = private unnamed_addr constant [23 x i8] c"RIGHT PART OF ORDER BY\00", align 1
@.str.825 = private unnamed_addr constant [41 x i8] c"cannot INSERT into generated column \22%s\22\00", align 1
@.str.826 = private unnamed_addr constant [32 x i8] c"table %S has no column named %s\00", align 1
@.str.827 = private unnamed_addr constant [52 x i8] c"table %S has %d columns but %d values were supplied\00", align 1
@.str.828 = private unnamed_addr constant [25 x i8] c"%d values for %d columns\00", align 1
@.str.829 = private unnamed_addr constant [21 x i8] c"cannot UPSERT a view\00", align 1
@.str.830 = private unnamed_addr constant [14 x i8] c"rows inserted\00", align 1
@.str.831 = private unnamed_addr constant [29 x i8] c"table %s may not be modified\00", align 1
@.str.832 = private unnamed_addr constant [38 x i8] c"cannot modify %s because it is a view\00", align 1
@.str.833 = private unnamed_addr constant [71 x i8] c"ON CONFLICT clause does not match any PRIMARY KEY or UNIQUE constraint\00", align 1
@.str.834 = private unnamed_addr constant [13 x i8] c"rows deleted\00", align 1
@.str.835 = private unnamed_addr constant [36 x i8] c"cannot UPDATE generated column \22%s\22\00", align 1
@.str.836 = private unnamed_addr constant [19 x i8] c"no such column: %s\00", align 1
@.str.837 = private unnamed_addr constant [13 x i8] c"rows updated\00", align 1
@.str.838 = private unnamed_addr constant [47 x i8] c"USING ROWID SEARCH ON TABLE %s FOR IN-OPERATOR\00", align 1
@.str.839 = private unnamed_addr constant [31 x i8] c"USING INDEX %s FOR IN-OPERATOR\00", align 1
@.str.840 = private unnamed_addr constant [23 x i8] c"REUSE LIST SUBQUERY %d\00", align 1
@.str.841 = private unnamed_addr constant [19 x i8] c"%sLIST SUBQUERY %d\00", align 1
@.str.842 = private unnamed_addr constant [28 x i8] c"at most %d tables in a join\00", align 1
@.str.843 = private unnamed_addr constant [18 x i8] c"SCAN CONSTANT ROW\00", align 1
@.str.844 = private unnamed_addr constant [36 x i8] c"too many arguments on %s() - max %d\00", align 1
@.str.845 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1
@.str.846 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@.str.847 = private unnamed_addr constant [13 x i8] c" SUBQUERY %u\00", align 1
@.str.848 = private unnamed_addr constant [10 x i8] c" TABLE %s\00", align 1
@.str.849 = private unnamed_addr constant [7 x i8] c" AS %s\00", align 1
@.str.850 = private unnamed_addr constant [12 x i8] c"PRIMARY KEY\00", align 1
@.str.851 = private unnamed_addr constant [33 x i8] c"AUTOMATIC PARTIAL COVERING INDEX\00", align 1
@.str.852 = private unnamed_addr constant [25 x i8] c"AUTOMATIC COVERING INDEX\00", align 1
@.str.853 = private unnamed_addr constant [18 x i8] c"COVERING INDEX %s\00", align 1
@.str.854 = private unnamed_addr constant [9 x i8] c"INDEX %s\00", align 1
@.str.855 = private unnamed_addr constant [8 x i8] c" USING \00", align 1
@.str.856 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.857 = private unnamed_addr constant [14 x i8] c">? AND rowid<\00", align 1
@.str.858 = private unnamed_addr constant [38 x i8] c" USING INTEGER PRIMARY KEY (rowid%s?)\00", align 1
@__const.sqlite3WhereCodeOneLoopStart.aMoveOp = private unnamed_addr constant [4 x i8] c"\19\17\16\18", align 1
@sqlite3WhereCodeOneLoopStart.aStartOp = internal unnamed_addr constant [8 x i8] c"\00\00%!\19\16\18\17", align 1
@sqlite3WhereCodeOneLoopStart.aEndOp = internal unnamed_addr constant [4 x i8] c")'&(", align 1
@.str.859 = private unnamed_addr constant [15 x i8] c"MULTI-INDEX OR\00", align 1
@.str.860 = private unnamed_addr constant [9 x i8] c"INDEX %d\00", align 1
@sqlite3WhereCodeOneLoopStart.aStep = internal unnamed_addr constant [2 x i8] c"\05\04", align 1
@sqlite3WhereCodeOneLoopStart.aStart = internal unnamed_addr constant [2 x i8] c"%!", align 1
@.str.861 = private unnamed_addr constant [71 x i8] c"RANGE with offset PRECEDING/FOLLOWING requires one ORDER BY expression\00", align 1
@.str.862 = private unnamed_addr constant [63 x i8] c"FILTER clause may only be used with aggregate window functions\00", align 1
@__const.sqlite3WindowUpdate.aUp = private unnamed_addr constant [8 x %struct.WindowUpdate] [%struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @row_numberName, i32 0, i32 0), i32 76, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @dense_rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @rankName, i32 0, i32 0), i32 89, i32 90, i32 85 }, %struct.WindowUpdate { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @percent_rankName, i32 0, i32 0), i32 92, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @cume_distName, i32 0, i32 0), i32 92, i32 86, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ntileName, i32 0, i32 0), i32 76, i32 85, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @leadName, i32 0, i32 0), i32 76, i32 90, i32 90 }, %struct.WindowUpdate { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @lagName, i32 0, i32 0), i32 76, i32 90, i32 85 }], align 16
@.str.863 = private unnamed_addr constant [9 x i8] c"ROLLBACK\00", align 1
@.str.864 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.865 = private unnamed_addr constant [8 x i8] c"RELEASE\00", align 1
@.str.866 = private unnamed_addr constant [41 x i8] c"temporary table name must be unqualified\00", align 1
@sqlite3StartTable.aCode = internal unnamed_addr constant [4 x i8] c"\02\04\08\06", align 1
@.str.867 = private unnamed_addr constant [24 x i8] c"table %T already exists\00", align 1
@.str.868 = private unnamed_addr constant [35 x i8] c"there is already an index named %s\00", align 1
@.str.869 = private unnamed_addr constant [16 x i8] c"sqlite_sequence\00", align 1
@sqlite3StartTable.nullRow = internal constant [6 x i8] c"\06\00\00\00\00\00", align 1
@.str.870 = private unnamed_addr constant [50 x i8] c"AUTOINCREMENT not allowed on WITHOUT ROWID tables\00", align 1
@.str.871 = private unnamed_addr constant [32 x i8] c"PRIMARY KEY missing on table %s\00", align 1
@.str.872 = private unnamed_addr constant [44 x i8] c"must have at least one non-generated column\00", align 1
@.str.873 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.874 = private unnamed_addr constant [5 x i8] c"VIEW\00", align 1
@.str.875 = private unnamed_addr constant [15 x i8] c"CREATE %s %.*s\00", align 1
@.str.876 = private unnamed_addr constant [87 x i8] c"UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\00", align 1
@.str.877 = private unnamed_addr constant [42 x i8] c"CREATE TABLE %Q.sqlite_sequence(name,seq)\00", align 1
@.str.878 = private unnamed_addr constant [34 x i8] c"tbl_name='%q' AND type!='trigger'\00", align 1
@.str.879 = private unnamed_addr constant [23 x i8] c"too many columns on %s\00", align 1
@.str.880 = private unnamed_addr constant [26 x i8] c"duplicate column name: %s\00", align 1
@.str.881 = private unnamed_addr constant [45 x i8] c"default value of column [%s] is not constant\00", align 1
@.str.882 = private unnamed_addr constant [41 x i8] c"cannot use DEFAULT on a generated column\00", align 1
@.str.883 = private unnamed_addr constant [41 x i8] c"table \22%s\22 has more than one primary key\00", align 1
@.str.884 = private unnamed_addr constant [56 x i8] c"AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\00", align 1
@.str.885 = private unnamed_addr constant [63 x i8] c"foreign key on %s should reference only one column of table %T\00", align 1
@.str.886 = private unnamed_addr constant [94 x i8] c"number of columns in foreign key does not match the number of columns in the referenced table\00", align 1
@.str.887 = private unnamed_addr constant [46 x i8] c"unknown column \22%s\22 in foreign key definition\00", align 1
@.str.890 = private unnamed_addr constant [31 x i8] c"error in generated column \22%s\22\00", align 1
@.str.891 = private unnamed_addr constant [28 x i8] c"table %s may not be dropped\00", align 1
@.str.892 = private unnamed_addr constant [34 x i8] c"use DROP TABLE to delete table %s\00", align 1
@.str.893 = private unnamed_addr constant [32 x i8] c"use DROP VIEW to delete view %s\00", align 1
@.str.894 = private unnamed_addr constant [14 x i8] c"sqlite_stat%d\00", align 1
@.str.895 = private unnamed_addr constant [45 x i8] c"DELETE FROM %Q.sqlite_sequence WHERE name=%Q\00", align 1
@.str.896 = private unnamed_addr constant [56 x i8] c"DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\00", align 1
@.str.897 = private unnamed_addr constant [51 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\00", align 1
@.str.898 = private unnamed_addr constant [36 x i8] c"parameters are not allowed in views\00", align 1
@.str.899 = private unnamed_addr constant [34 x i8] c"too many terms in compound SELECT\00", align 1
@sqlite3JoinType.zKeyText = internal unnamed_addr constant [34 x i8] c"naturaleftouterightfullinnercross\00", align 16
@sqlite3JoinType.aKeyword = internal unnamed_addr constant [7 x %struct.anon.23] [%struct.anon.23 { i8 0, i8 7, i8 4 }, %struct.anon.23 { i8 6, i8 4, i8 40 }, %struct.anon.23 { i8 10, i8 5, i8 32 }, %struct.anon.23 { i8 14, i8 5, i8 48 }, %struct.anon.23 { i8 19, i8 4, i8 56 }, %struct.anon.23 { i8 23, i8 5, i8 1 }, %struct.anon.23 { i8 28, i8 5, i8 3 }], align 16
@.str.900 = private unnamed_addr constant [44 x i8] c"unknown or unsupported join type: %T %T%s%T\00", align 1
@.str.901 = private unnamed_addr constant [55 x i8] c"RIGHT and FULL OUTER JOINs are not currently supported\00", align 1
@.str.902 = private unnamed_addr constant [23 x i8] c"too many columns in %s\00", align 1
@.str.903 = private unnamed_addr constant [43 x i8] c"variable number must be between ?1 and ?%d\00", align 1
@.str.904 = private unnamed_addr constant [23 x i8] c"too many SQL variables\00", align 1
@.str.905 = private unnamed_addr constant [34 x i8] c"too many arguments on function %T\00", align 1
@.str.906 = private unnamed_addr constant [47 x i8] c"DISTINCT is not supported for window functions\00", align 1
@.str.907 = private unnamed_addr constant [38 x i8] c"syntax error after column name \22%.*s\22\00", align 1
@.str.908 = private unnamed_addr constant [18 x i8] c"no such index: %S\00", align 1
@.str.909 = private unnamed_addr constant [73 x i8] c"index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\00", align 1
@.str.910 = private unnamed_addr constant [49 x i8] c"DELETE FROM %Q.%s WHERE name=%Q AND type='index'\00", align 1
@.str.911 = private unnamed_addr constant [4 x i8] c"-%T\00", align 1
@.str.912 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.914 = private unnamed_addr constant [25 x i8] c"not a writable directory\00", align 1
@.str.915 = private unnamed_addr constant [30 x i8] c"failed to set lock proxy file\00", align 1
@.str.916 = private unnamed_addr constant [53 x i8] c"Safety level may not be changed inside a transaction\00", align 1
@.str.917 = private unnamed_addr constant [8 x i8] c"issisii\00", align 1
@.str.918 = private unnamed_addr constant [7 x i8] c"issisi\00", align 1
@.str.919 = private unnamed_addr constant [5 x i8] c"iisX\00", align 1
@.str.920 = private unnamed_addr constant [5 x i8] c"isiX\00", align 1
@.str.921 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.922 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@__const.sqlite3Pragma.azOrigin = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.921, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.922, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0)], align 16
@.str.923 = private unnamed_addr constant [6 x i8] c"isisi\00", align 1
@.str.924 = private unnamed_addr constant [4 x i8] c"iss\00", align 1
@.str.925 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.926 = private unnamed_addr constant [9 x i8] c"iissssss\00", align 1
@.str.927 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.928 = private unnamed_addr constant [4 x i8] c"siX\00", align 1
@.str.929 = private unnamed_addr constant [24 x i8] c"*** in database %s ***\0A\00", align 1
@.str.930 = private unnamed_addr constant [20 x i8] c"NULL value in %s.%s\00", align 1
@.str.931 = private unnamed_addr constant [30 x i8] c"CHECK constraint failed in %s\00", align 1
@.str.932 = private unnamed_addr constant [5 x i8] c"row \00", align 1
@.str.933 = private unnamed_addr constant [21 x i8] c" missing from index \00", align 1
@.str.934 = private unnamed_addr constant [27 x i8] c"non-unique entry in index \00", align 1
@.str.935 = private unnamed_addr constant [29 x i8] c"wrong # of entries in index \00", align 1
@.str.937 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@sqlite3Pragma.encnames = internal unnamed_addr constant [9 x %struct.EncName] [%struct.EncName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.938, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.939, i32 0, i32 0), i8 1 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.940, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.941, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.942, i32 0, i32 0), i8 2 }, %struct.EncName { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.943, i32 0, i32 0), i8 3 }, %struct.EncName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.944, i32 0, i32 0), i8 0 }, %struct.EncName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.945, i32 0, i32 0), i8 0 }, %struct.EncName zeroinitializer], align 16
@.str.938 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.939 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.940 = private unnamed_addr constant [9 x i8] c"UTF-16le\00", align 1
@.str.941 = private unnamed_addr constant [9 x i8] c"UTF-16be\00", align 1
@.str.942 = private unnamed_addr constant [8 x i8] c"UTF16le\00", align 1
@.str.943 = private unnamed_addr constant [8 x i8] c"UTF16be\00", align 1
@.str.944 = private unnamed_addr constant [7 x i8] c"UTF-16\00", align 1
@.str.945 = private unnamed_addr constant [6 x i8] c"UTF16\00", align 1
@.str.946 = private unnamed_addr constant [25 x i8] c"unsupported encoding: %s\00", align 1
@.str.947 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.948 = private unnamed_addr constant [18 x i8] c"ANALYZE \22%w\22.\22%w\22\00", align 1
@.str.949 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.950 = private unnamed_addr constant [64 x i8] c"INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\00", align 1
@.str.951 = private unnamed_addr constant [29 x i8] c"type='trigger' AND name='%q'\00", align 1
@.str.952 = private unnamed_addr constant [46 x i8] c"temporary trigger may not have qualified name\00", align 1
@.str.953 = private unnamed_addr constant [26 x i8] c"trigger %T already exists\00", align 1
@.str.954 = private unnamed_addr constant [38 x i8] c"cannot create trigger on system table\00", align 1
@.str.955 = private unnamed_addr constant [37 x i8] c"cannot create %s trigger on view: %S\00", align 1
@.str.956 = private unnamed_addr constant [7 x i8] c"BEFORE\00", align 1
@.str.957 = private unnamed_addr constant [6 x i8] c"AFTER\00", align 1
@.str.958 = private unnamed_addr constant [46 x i8] c"cannot create INSTEAD OF trigger on table: %S\00", align 1
@.str.959 = private unnamed_addr constant [20 x i8] c"no such trigger: %S\00", align 1
@sqlite3Attach.attach_func = external dso_local constant %struct.FuncDef, align 8
@.str.960 = private unnamed_addr constant [14 x i8] c"sqlite_attach\00", align 1
@sqlite3Detach.detach_func = external dso_local constant %struct.FuncDef, align 8
@.str.961 = private unnamed_addr constant [14 x i8] c"sqlite_detach\00", align 1
@.str.962 = private unnamed_addr constant [46 x i8] c"unable to identify the object to be reindexed\00", align 1
@.str.963 = private unnamed_addr constant [59 x i8] c"there is already another table or index with this name: %s\00", align 1
@.str.964 = private unnamed_addr constant [27 x i8] c"view %s may not be altered\00", align 1
@.str.965 = private unnamed_addr constant [173 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\00", align 1
@.str.966 = private unnamed_addr constant [294 x i8] c"UPDATE %Q.%s SET tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X'      AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\00", align 1
@.str.967 = private unnamed_addr constant [58 x i8] c"UPDATE \22%w\22.sqlite_sequence set name = %Q WHERE name = %Q\00", align 1
@.str.968 = private unnamed_addr constant [254 x i8] c"UPDATE sqlite_temp_master SET sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, 1), tbl_name = CASE WHEN tbl_name=%Q COLLATE nocase AND           sqlite_rename_test(%Q, sql, type, name, 1) THEN %Q ELSE tbl_name END WHERE type IN ('view', 'trigger')\00", align 1
@.str.969 = private unnamed_addr constant [32 x i8] c"Cannot add a PRIMARY KEY column\00", align 1
@.str.970 = private unnamed_addr constant [27 x i8] c"Cannot add a UNIQUE column\00", align 1
@.str.971 = private unnamed_addr constant [59 x i8] c"Cannot add a REFERENCES column with non-NULL default value\00", align 1
@.str.972 = private unnamed_addr constant [53 x i8] c"Cannot add a NOT NULL column with default value NULL\00", align 1
@.str.973 = private unnamed_addr constant [46 x i8] c"Cannot add a column with non-constant default\00", align 1
@.str.974 = private unnamed_addr constant [27 x i8] c"cannot add a STORED column\00", align 1
@.str.975 = private unnamed_addr constant [109 x i8] c"UPDATE \22%w\22.%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\00", align 1
@.str.976 = private unnamed_addr constant [30 x i8] c"Cannot add a column to a view\00", align 1
@.str.977 = private unnamed_addr constant [19 x i8] c"sqlite_altertab_%s\00", align 1
@.str.978 = private unnamed_addr constant [207 x i8] c"UPDATE \22%w\22.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'  AND (type != 'index' OR tbl_name = %Q) AND sql NOT LIKE 'create virtual%%'\00", align 1
@.str.979 = private unnamed_addr constant [120 x i8] c"UPDATE temp.%s SET sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, 1) WHERE type IN ('trigger', 'view')\00", align 1
@.str.980 = private unnamed_addr constant [30 x i8] c"duplicate WITH table name: %s\00", align 1
@.str.981 = private unnamed_addr constant [17 x i8] c"PARTITION clause\00", align 1
@.str.982 = private unnamed_addr constant [16 x i8] c"ORDER BY clause\00", align 1
@.str.983 = private unnamed_addr constant [20 x i8] c"frame specification\00", align 1
@.str.984 = private unnamed_addr constant [33 x i8] c"cannot override %s of window: %s\00", align 1
@.str.985 = private unnamed_addr constant [32 x i8] c"unsupported frame specification\00", align 1
@.str.986 = private unnamed_addr constant [27 x i8] c"unrecognized token: \22%.*s\22\00", align 1
@.str.987 = private unnamed_addr constant [11 x i8] c"%s in \22%s\22\00", align 1
@sqlite3RegisterBuiltinFunctions.aBuiltinFunc = external dso_local global [62 x %struct.FuncDef], align 16
@.str.988 = private unnamed_addr constant [20 x i8] c"implies_nonnull_row\00", align 1
@.str.989 = private unnamed_addr constant [13 x i8] c"expr_compare\00", align 1
@.str.990 = private unnamed_addr constant [18 x i8] c"expr_implies_expr\00", align 1
@.str.991 = private unnamed_addr constant [15 x i8] c"load_extension\00", align 1
@.str.992 = private unnamed_addr constant [26 x i8] c"sqlite_compileoption_used\00", align 1
@.str.993 = private unnamed_addr constant [25 x i8] c"sqlite_compileoption_get\00", align 1
@.str.994 = private unnamed_addr constant [9 x i8] c"unlikely\00", align 1
@.str.995 = private unnamed_addr constant [11 x i8] c"likelihood\00", align 1
@.str.996 = private unnamed_addr constant [7 x i8] c"likely\00", align 1
@.str.997 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.998 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.999 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.1000 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.1001 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.1002 = private unnamed_addr constant [6 x i8] c"instr\00", align 1
@.str.1003 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.1004 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.1005 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.1006 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.1007 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.1008 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.1009 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.1010 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.1011 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.1012 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.1013 = private unnamed_addr constant [11 x i8] c"randomblob\00", align 1
@.str.1014 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.1015 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.1016 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.1017 = private unnamed_addr constant [11 x i8] c"sqlite_log\00", align 1
@.str.1018 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.1019 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.1020 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.1021 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.1022 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.1023 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.1024 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.1025 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.1026 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.1027 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.1028 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.1029 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.1030 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.1031 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@sqlite3AlterFunctions.aAlterTableFuncs = external dso_local global [3 x %struct.FuncDef], align 16
@.str.1032 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.1033 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.1034 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@sqlite3WindowFunctions.aWindowFuncs = external dso_local global [15 x %struct.FuncDef], align 16
@sqlite3RegisterDateTimeFunctions_aDateTimeFuncs = external dso_local global [8 x %struct.FuncDef], align 16
@.str.1035 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.1036 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.1037 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1038 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.1039 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.1040 = private unnamed_addr constant [13 x i8] c"current_time\00", align 1
@.str.1041 = private unnamed_addr constant [18 x i8] c"current_timestamp\00", align 1
@.str.1042 = private unnamed_addr constant [13 x i8] c"current_date\00", align 1
@sqlite3MemSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_mem_methods, align 8
@.str.1043 = private unnamed_addr constant [38 x i8] c"failed to allocate %u bytes of memory\00", align 1
@.str.1044 = private unnamed_addr constant [36 x i8] c"failed memory resize %u to %u bytes\00", align 1
@.str.1045 = private unnamed_addr constant [8 x i8] c"hw.ncpu\00", align 1
@.str.1046 = private unnamed_addr constant [12 x i8] c"Sqlite_Heap\00", align 1
@sqlite3PCacheSetDefault_defaultMethods = external dso_local constant %struct.sqlite3_pcache_methods2, align 8
@.str.1047 = private unnamed_addr constant [68 x i8] c"unable to close due to unfinalized statements or unfinished backups\00", align 1
@sqlite3ErrStr.aMsg = internal unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1048, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1049, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1050, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1051, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1052, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1054, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1055, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1056, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1057, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1058, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1059, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1060, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1061, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1062, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1063, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1064, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1065, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1066, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1068, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1069, i32 0, i32 0)], align 16
@.str.1048 = private unnamed_addr constant [13 x i8] c"not an error\00", align 1
@.str.1049 = private unnamed_addr constant [16 x i8] c"SQL logic error\00", align 1
@.str.1050 = private unnamed_addr constant [25 x i8] c"access permission denied\00", align 1
@.str.1051 = private unnamed_addr constant [14 x i8] c"query aborted\00", align 1
@.str.1052 = private unnamed_addr constant [19 x i8] c"database is locked\00", align 1
@.str.1053 = private unnamed_addr constant [25 x i8] c"database table is locked\00", align 1
@.str.1054 = private unnamed_addr constant [37 x i8] c"attempt to write a readonly database\00", align 1
@.str.1055 = private unnamed_addr constant [12 x i8] c"interrupted\00", align 1
@.str.1056 = private unnamed_addr constant [15 x i8] c"disk I/O error\00", align 1
@.str.1057 = private unnamed_addr constant [33 x i8] c"database disk image is malformed\00", align 1
@.str.1058 = private unnamed_addr constant [18 x i8] c"unknown operation\00", align 1
@.str.1059 = private unnamed_addr constant [25 x i8] c"database or disk is full\00", align 1
@.str.1060 = private unnamed_addr constant [29 x i8] c"unable to open database file\00", align 1
@.str.1061 = private unnamed_addr constant [17 x i8] c"locking protocol\00", align 1
@.str.1062 = private unnamed_addr constant [18 x i8] c"constraint failed\00", align 1
@.str.1063 = private unnamed_addr constant [18 x i8] c"datatype mismatch\00", align 1
@.str.1064 = private unnamed_addr constant [34 x i8] c"bad parameter or other API misuse\00", align 1
@.str.1065 = private unnamed_addr constant [21 x i8] c"authorization denied\00", align 1
@.str.1066 = private unnamed_addr constant [26 x i8] c"column index out of range\00", align 1
@.str.1067 = private unnamed_addr constant [23 x i8] c"file is not a database\00", align 1
@.str.1068 = private unnamed_addr constant [21 x i8] c"notification message\00", align 1
@.str.1069 = private unnamed_addr constant [16 x i8] c"warning message\00", align 1
@.str.1070 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.1071 = private unnamed_addr constant [22 x i8] c"abort due to ROLLBACK\00", align 1
@.str.1072 = private unnamed_addr constant [22 x i8] c"another row available\00", align 1
@.str.1073 = private unnamed_addr constant [23 x i8] c"no more rows available\00", align 1
@.str.1074 = private unnamed_addr constant [63 x i8] c"unable to delete/modify user-function due to active statements\00", align 1
@.str.1075 = private unnamed_addr constant [51 x i8] c"unable to use function %s in the requested context\00", align 1
@.str.1076 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.1077 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.1078 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1079 = private unnamed_addr constant [28 x i8] c"invalid uri authority: %.*s\00", align 1
@.str.1080 = private unnamed_addr constant [4 x i8] c"vfs\00", align 1
@.str.1081 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@sqlite3ParseUri.aCacheMode = internal unnamed_addr constant [3 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1082, i32 0, i32 0), i32 131072 }, %struct.OpenMode { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1083, i32 0, i32 0), i32 262144 }, %struct.OpenMode zeroinitializer], align 16
@.str.1082 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.1083 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.1084 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@sqlite3ParseUri.aOpenMode = internal unnamed_addr constant [5 x %struct.OpenMode] [%struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1085, i32 0, i32 0), i32 1 }, %struct.OpenMode { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1086, i32 0, i32 0), i32 2 }, %struct.OpenMode { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1087, i32 0, i32 0), i32 6 }, %struct.OpenMode { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 128 }, %struct.OpenMode zeroinitializer], align 16
@.str.1085 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.1086 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.1087 = private unnamed_addr constant [4 x i8] c"rwc\00", align 1
@.str.1088 = private unnamed_addr constant [20 x i8] c"no such %s mode: %s\00", align 1
@.str.1089 = private unnamed_addr constant [24 x i8] c"%s mode not allowed: %s\00", align 1
@.str.1090 = private unnamed_addr constant [16 x i8] c"no such vfs: %s\00", align 1
@.str.1091 = private unnamed_addr constant [6 x i8] c"MATCH\00", align 1
@.str.1092 = private unnamed_addr constant [39 x i8] c"automatic extension loading failed: %s\00", align 1
@.str.1093 = private unnamed_addr constant [20 x i8] c"database corruption\00", align 1
@.str.1094 = private unnamed_addr constant [25 x i8] c"%s at line %d of [%.10s]\00", align 1
@.str.1095 = private unnamed_addr constant [7 x i8] c"misuse\00", align 1
@.str.1096 = private unnamed_addr constant [17 x i8] c"cannot open file\00", align 1
@sqlite3SavedPrng = internal unnamed_addr global %struct.sqlite3PrngType zeroinitializer, align 1
@sqlite3azCompileOpt = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1097, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1098, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1099, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1100, i32 0, i32 0)], align 16
@.str.1097 = private unnamed_addr constant [22 x i8] c"COMPILER=clang-11.0.0\00", align 1
@.str.1098 = private unnamed_addr constant [11 x i8] c"OMIT_TRACE\00", align 1
@.str.1099 = private unnamed_addr constant [18 x i8] c"OMIT_VIRTUALTABLE\00", align 1
@.str.1100 = private unnamed_addr constant [13 x i8] c"THREADSAFE=1\00", align 1
@switch.table.multiSelectOrderBy = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)], align 8
@switch.table.sqlite3Pragma.1201 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i64 0, i64 0)], align 8

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @my_assert(i1, i64, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @dbg() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRealify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @printTypeOf(i8*, i32, %struct.Vdbe*, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeIntegerAffinity(%struct.sqlite3_value*) #0

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3AtoF(i8* readonly %z, double* nocapture %pResult, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  store double 0.000000e+00, double* %pResult, align 8, !tbaa !6
  %cmp = icmp eq i32 %length, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i8 %enc to i32
  %cmp1 = icmp eq i8 %enc, 1
  br i1 %cmp1, label %if.end20, label %if.else

if.else:                                          ; preds = %if.end
  %and = and i32 %length, -2
  %sub = sub nsw i32 3, %conv
  %cmp5540 = icmp slt i32 %sub, %and
  br i1 %cmp5540, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %and to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %i.0541 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %z, i64 %indvars.iv
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp8 = icmp eq i8 %2, 0
  br i1 %cmp8, label %for.inc, label %for.end.loopexit.split.loop.exit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add i64 %indvars.iv, 2
  %add = add nsw i32 %i.0541, 2
  %cmp5 = icmp slt i64 %indvars.iv.next, %1
  br i1 %cmp5, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit, %for.inc, %if.else
  %i.0.lcssa563 = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit ], [ %add, %for.inc ]
  %4 = phi i32 [ 1, %if.else ], [ -100, %for.end.loopexit.split.loop.exit ], [ 1, %for.inc ]
  %xor = xor i32 %i.0.lcssa563, 1
  %and17 = and i32 %conv, 1
  %idx.ext18 = zext i32 %and17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %z, i64 %idx.ext18
  br label %if.end20

if.end20:                                         ; preds = %for.end, %if.end
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %if.end ]
  %eType.1 = phi i32 [ %4, %for.end ], [ 1, %if.end ]
  %incr.0 = phi i64 [ 2, %for.end ], [ 1, %if.end ]
  %z.addr.0 = phi i8* [ %add.ptr19, %for.end ], [ %z, %if.end ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %z, i64 %idx.ext.pn
  %cmp21538 = icmp ult i8* %z.addr.0, %zEnd.0
  br i1 %cmp21538, label %land.rhs23, label %cleanup

land.rhs23:                                       ; preds = %while.body, %if.end20
  %z.addr.1539 = phi i8* [ %add.ptr30, %while.body ], [ %z.addr.0, %if.end20 ]
  %5 = load i8, i8* %z.addr.1539, align 1, !tbaa !10
  %idxprom24 = zext i8 %5 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom24
  %6 = load i8, i8* %arrayidx25, align 1, !tbaa !10
  %7 = and i8 %6, 1
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.end34, label %while.body

while.body:                                       ; preds = %land.rhs23
  %add.ptr30 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  %cmp21 = icmp ult i8* %add.ptr30, %zEnd.0
  br i1 %cmp21, label %land.rhs23, label %cleanup

if.end34:                                         ; preds = %land.rhs23
  switch i8 %5, label %if.end49 [
    i8 45, label %if.then38
    i8 43, label %if.then45
  ]

if.then38:                                        ; preds = %if.end34
  %add.ptr40 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.then45:                                        ; preds = %if.end34
  %add.ptr47 = getelementptr inbounds i8, i8* %z.addr.1539, i64 %incr.0
  br label %if.end49

if.end49:                                         ; preds = %if.then45, %if.then38, %if.end34
  %sign.0 = phi i32 [ -1, %if.then38 ], [ 1, %if.then45 ], [ 1, %if.end34 ]
  %z.addr.2 = phi i8* [ %add.ptr40, %if.then38 ], [ %add.ptr47, %if.then45 ], [ %z.addr.1539, %if.end34 ]
  %cmp51529 = icmp ult i8* %z.addr.2, %zEnd.0
  br i1 %cmp51529, label %land.rhs53, label %if.then201

land.rhs53:                                       ; preds = %if.end85, %if.end49
  %z.addr.3533 = phi i8* [ %z.addr.5, %if.end85 ], [ %z.addr.2, %if.end49 ]
  %nDigit.0532 = phi i32 [ %inc, %if.end85 ], [ 0, %if.end49 ]
  %d.0531 = phi i32 [ %d.2, %if.end85 ], [ 0, %if.end49 ]
  %s.0530 = phi i64 [ %add64, %if.end85 ], [ 0, %if.end49 ]
  %8 = load i8, i8* %z.addr.3533, align 1, !tbaa !10
  %idxprom54 = zext i8 %8 to i64
  %9 = add nsw i64 %idxprom54, -48
  %tobool58 = icmp ult i64 %9, 10
  br i1 %tobool58, label %while.body60, label %if.end90

while.body60:                                     ; preds = %land.rhs53
  %mul = mul nsw i64 %s.0530, 10
  %conv61 = sext i8 %8 to i64
  %sub62 = add i64 %mul, -48
  %add64 = add i64 %sub62, %conv61
  %add.ptr66 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %inc = add nuw nsw i32 %nDigit.0532, 1
  %cmp67 = icmp sgt i64 %add64, 922337203685477578
  %cmp71522 = icmp ult i8* %add.ptr66, %zEnd.0
  %or.cond547 = and i1 %cmp67, %cmp71522
  br i1 %or.cond547, label %land.rhs73, label %if.end85

land.rhs73:                                       ; preds = %while.body80, %while.body60
  %z.addr.4524 = phi i8* [ %add.ptr82, %while.body80 ], [ %add.ptr66, %while.body60 ]
  %d.1523 = phi i32 [ %inc83, %while.body80 ], [ %d.0531, %while.body60 ]
  %10 = load i8, i8* %z.addr.4524, align 1, !tbaa !10
  %idxprom74 = zext i8 %10 to i64
  %11 = add nsw i64 %idxprom74, -48
  %tobool78 = icmp ult i64 %11, 10
  br i1 %tobool78, label %while.body80, label %if.end85

while.body80:                                     ; preds = %land.rhs73
  %add.ptr82 = getelementptr inbounds i8, i8* %z.addr.4524, i64 %incr.0
  %inc83 = add nsw i32 %d.1523, 1
  %cmp71 = icmp ult i8* %add.ptr82, %zEnd.0
  br i1 %cmp71, label %land.rhs73, label %if.end85

if.end85:                                         ; preds = %while.body80, %land.rhs73, %while.body60
  %d.2 = phi i32 [ %d.0531, %while.body60 ], [ %inc83, %while.body80 ], [ %d.1523, %land.rhs73 ]
  %z.addr.5 = phi i8* [ %add.ptr66, %while.body60 ], [ %add.ptr82, %while.body80 ], [ %z.addr.4524, %land.rhs73 ]
  %cmp51 = icmp ult i8* %z.addr.5, %zEnd.0
  br i1 %cmp51, label %land.rhs53, label %do_atof_calc

if.end90:                                         ; preds = %land.rhs53
  %cmp92 = icmp eq i8 %8, 46
  br i1 %cmp92, label %if.then94, label %if.end122

if.then94:                                        ; preds = %if.end90
  %inc97 = add nuw nsw i32 %eType.1, 1
  %z.addr.6508 = getelementptr inbounds i8, i8* %z.addr.3533, i64 %incr.0
  %cmp99509 = icmp ult i8* %z.addr.6508, %zEnd.0
  br i1 %cmp99509, label %land.rhs101, label %if.end122

land.rhs101:                                      ; preds = %if.end118, %if.then94
  %z.addr.6513 = phi i8* [ %z.addr.6, %if.end118 ], [ %z.addr.6508, %if.then94 ]
  %nDigit.1512 = phi i32 [ %nDigit.2, %if.end118 ], [ %nDigit.0532, %if.then94 ]
  %d.3511 = phi i32 [ %d.4, %if.end118 ], [ %d.0531, %if.then94 ]
  %s.1510 = phi i64 [ %s.2, %if.end118 ], [ %s.0530, %if.then94 ]
  %12 = load i8, i8* %z.addr.6513, align 1, !tbaa !10
  %idxprom102 = zext i8 %12 to i64
  %13 = add nsw i64 %idxprom102, -48
  %tobool106 = icmp ult i64 %13, 10
  br i1 %tobool106, label %while.body108, label %if.end122

while.body108:                                    ; preds = %land.rhs101
  %cmp109 = icmp slt i64 %s.1510, 922337203685477579
  br i1 %cmp109, label %if.then111, label %if.end118

if.then111:                                       ; preds = %while.body108
  %mul112 = mul nsw i64 %s.1510, 10
  %conv113 = sext i8 %12 to i64
  %sub114 = add i64 %mul112, -48
  %add116 = add i64 %sub114, %conv113
  %dec = add nsw i32 %d.3511, -1
  %inc117 = add nsw i32 %nDigit.1512, 1
  br label %if.end118

if.end118:                                        ; preds = %if.then111, %while.body108
  %s.2 = phi i64 [ %add116, %if.then111 ], [ %s.1510, %while.body108 ]
  %d.4 = phi i32 [ %dec, %if.then111 ], [ %d.3511, %while.body108 ]
  %nDigit.2 = phi i32 [ %inc117, %if.then111 ], [ %nDigit.1512, %while.body108 ]
  %z.addr.6 = getelementptr inbounds i8, i8* %z.addr.6513, i64 %incr.0
  %cmp99 = icmp ult i8* %z.addr.6, %zEnd.0
  br i1 %cmp99, label %land.rhs101, label %if.end122

if.end122:                                        ; preds = %if.end118, %land.rhs101, %if.then94, %if.end90
  %s.3 = phi i64 [ %s.0530, %if.end90 ], [ %s.0530, %if.then94 ], [ %s.2, %if.end118 ], [ %s.1510, %land.rhs101 ]
  %d.5 = phi i32 [ %d.0531, %if.end90 ], [ %d.0531, %if.then94 ], [ %d.4, %if.end118 ], [ %d.3511, %land.rhs101 ]
  %nDigit.3 = phi i32 [ %nDigit.0532, %if.end90 ], [ %nDigit.0532, %if.then94 ], [ %nDigit.2, %if.end118 ], [ %nDigit.1512, %land.rhs101 ]
  %eType.2 = phi i32 [ %eType.1, %if.end90 ], [ %inc97, %if.then94 ], [ %inc97, %land.rhs101 ], [ %inc97, %if.end118 ]
  %z.addr.7 = phi i8* [ %z.addr.3533, %if.end90 ], [ %z.addr.6508, %if.then94 ], [ %z.addr.6, %if.end118 ], [ %z.addr.6513, %land.rhs101 ]
  %cmp123 = icmp ult i8* %z.addr.7, %zEnd.0
  br i1 %cmp123, label %if.end126, label %do_atof_calc

if.end126:                                        ; preds = %if.end122
  %14 = load i8, i8* %z.addr.7, align 1, !tbaa !10
  switch i8 %14, label %if.end176 [
    i8 101, label %if.then133
    i8 69, label %if.then133
  ]

if.then133:                                       ; preds = %if.end126, %if.end126
  %add.ptr135 = getelementptr inbounds i8, i8* %z.addr.7, i64 %incr.0
  %inc136 = add nsw i32 %eType.2, 1
  %cmp137 = icmp ult i8* %add.ptr135, %zEnd.0
  br i1 %cmp137, label %if.end140, label %do_atof_calc

if.end140:                                        ; preds = %if.then133
  %15 = load i8, i8* %add.ptr135, align 1, !tbaa !10
  switch i8 %15, label %if.end155 [
    i8 45, label %if.then144
    i8 43, label %if.then151
  ]

if.then144:                                       ; preds = %if.end140
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.then151:                                       ; preds = %if.end140
  %add.ptr153 = getelementptr inbounds i8, i8* %add.ptr135, i64 %incr.0
  br label %if.end155

if.end155:                                        ; preds = %if.then151, %if.then144, %if.end140
  %esign.0 = phi i32 [ -1, %if.then144 ], [ 1, %if.then151 ], [ 1, %if.end140 ]
  %z.addr.8 = phi i8* [ %add.ptr146, %if.then144 ], [ %add.ptr153, %if.then151 ], [ %add.ptr135, %if.end140 ]
  %cmp157498 = icmp ult i8* %z.addr.8, %zEnd.0
  br i1 %cmp157498, label %land.rhs159.preheader, label %if.end176

land.rhs159.preheader:                            ; preds = %if.end155
  %16 = load i8, i8* %z.addr.8, align 1, !tbaa !10
  %idxprom160622 = zext i8 %16 to i64
  %17 = add nsw i64 %idxprom160622, -48
  %tobool164623 = icmp ult i64 %17, 10
  br i1 %tobool164623, label %while.body166, label %if.end176

land.rhs159:                                      ; preds = %while.body166
  %18 = load i8, i8* %add.ptr174, align 1, !tbaa !10
  %idxprom160 = zext i8 %18 to i64
  %19 = add nsw i64 %idxprom160, -48
  %tobool164 = icmp ult i64 %19, 10
  br i1 %tobool164, label %while.body166, label %if.end176

while.body166:                                    ; preds = %land.rhs159, %land.rhs159.preheader
  %20 = phi i8 [ %18, %land.rhs159 ], [ %16, %land.rhs159.preheader ]
  %e.0499625 = phi i32 [ %cond, %land.rhs159 ], [ 0, %land.rhs159.preheader ]
  %z.addr.9501624 = phi i8* [ %add.ptr174, %land.rhs159 ], [ %z.addr.8, %land.rhs159.preheader ]
  %cmp167 = icmp slt i32 %e.0499625, 10000
  %mul169 = mul nsw i32 %e.0499625, 10
  %conv170 = sext i8 %20 to i32
  %sub171 = add i32 %mul169, -48
  %add172 = add i32 %sub171, %conv170
  %cond = select i1 %cmp167, i32 %add172, i32 10000
  %add.ptr174 = getelementptr inbounds i8, i8* %z.addr.9501624, i64 %incr.0
  %cmp157 = icmp ult i8* %add.ptr174, %zEnd.0
  br i1 %cmp157, label %land.rhs159, label %if.end176

if.end176:                                        ; preds = %while.body166, %land.rhs159, %land.rhs159.preheader, %if.end155, %if.end126
  %esign.1 = phi i32 [ 1, %if.end126 ], [ %esign.0, %if.end155 ], [ %esign.0, %land.rhs159.preheader ], [ %esign.0, %while.body166 ], [ %esign.0, %land.rhs159 ]
  %e.1 = phi i32 [ 0, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ %cond, %while.body166 ], [ %cond, %land.rhs159 ]
  %eValid.1 = phi i32 [ 1, %if.end126 ], [ 0, %if.end155 ], [ 0, %land.rhs159.preheader ], [ 1, %while.body166 ], [ 1, %land.rhs159 ]
  %eType.3 = phi i32 [ %eType.2, %if.end126 ], [ %inc136, %if.end155 ], [ %inc136, %land.rhs159.preheader ], [ %inc136, %while.body166 ], [ %inc136, %land.rhs159 ]
  %z.addr.10 = phi i8* [ %z.addr.7, %if.end126 ], [ %z.addr.8, %if.end155 ], [ %z.addr.8, %land.rhs159.preheader ], [ %add.ptr174, %while.body166 ], [ %add.ptr174, %land.rhs159 ]
  %cmp178494 = icmp ult i8* %z.addr.10, %zEnd.0
  br i1 %cmp178494, label %land.rhs180, label %do_atof_calc

land.rhs180:                                      ; preds = %while.body187, %if.end176
  %z.addr.11495 = phi i8* [ %add.ptr189, %while.body187 ], [ %z.addr.10, %if.end176 ]
  %21 = load i8, i8* %z.addr.11495, align 1, !tbaa !10
  %idxprom181 = zext i8 %21 to i64
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !10
  %23 = and i8 %22, 1
  %tobool185 = icmp eq i8 %23, 0
  br i1 %tobool185, label %do_atof_calc, label %while.body187

while.body187:                                    ; preds = %land.rhs180
  %add.ptr189 = getelementptr inbounds i8, i8* %z.addr.11495, i64 %incr.0
  %cmp178 = icmp ult i8* %add.ptr189, %zEnd.0
  br i1 %cmp178, label %land.rhs180, label %do_atof_calc

do_atof_calc:                                     ; preds = %while.body187, %land.rhs180, %if.end176, %if.then133, %if.end122, %if.end85
  %s.4 = phi i64 [ %s.3, %if.end122 ], [ %s.3, %if.then133 ], [ %s.3, %if.end176 ], [ %s.3, %land.rhs180 ], [ %s.3, %while.body187 ], [ %add64, %if.end85 ]
  %d.6 = phi i32 [ %d.5, %if.end122 ], [ %d.5, %if.then133 ], [ %d.5, %if.end176 ], [ %d.5, %land.rhs180 ], [ %d.5, %while.body187 ], [ %d.2, %if.end85 ]
  %esign.2 = phi i32 [ 1, %if.end122 ], [ 1, %if.then133 ], [ %esign.1, %if.end176 ], [ %esign.1, %land.rhs180 ], [ %esign.1, %while.body187 ], [ 1, %if.end85 ]
  %e.2 = phi i32 [ 0, %if.end122 ], [ 0, %if.then133 ], [ %e.1, %if.end176 ], [ %e.1, %land.rhs180 ], [ %e.1, %while.body187 ], [ 0, %if.end85 ]
  %eValid.2 = phi i32 [ 1, %if.end122 ], [ 0, %if.then133 ], [ %eValid.1, %if.end176 ], [ %eValid.1, %land.rhs180 ], [ %eValid.1, %while.body187 ], [ 1, %if.end85 ]
  %nDigit.4 = phi i32 [ %nDigit.3, %if.end122 ], [ %nDigit.3, %if.then133 ], [ %nDigit.3, %if.end176 ], [ %nDigit.3, %land.rhs180 ], [ %nDigit.3, %while.body187 ], [ %inc, %if.end85 ]
  %eType.4 = phi i32 [ %eType.2, %if.end122 ], [ %inc136, %if.then133 ], [ %eType.3, %if.end176 ], [ %eType.3, %land.rhs180 ], [ %eType.3, %while.body187 ], [ %eType.1, %if.end85 ]
  %z.addr.12 = phi i8* [ %z.addr.7, %if.end122 ], [ %add.ptr135, %if.then133 ], [ %z.addr.10, %if.end176 ], [ %add.ptr189, %while.body187 ], [ %z.addr.11495, %land.rhs180 ], [ %z.addr.5, %if.end85 ]
  %mul191 = mul nsw i32 %e.2, %esign.2
  %add192 = add nsw i32 %mul191, %d.6
  %cmp193 = icmp slt i32 %add192, 0
  %mul196 = sub nsw i32 0, %add192
  %e.3 = select i1 %cmp193, i32 %mul196, i32 %add192
  %cmp199 = icmp eq i64 %s.4, 0
  br i1 %cmp199, label %if.then201, label %while.cond206.preheader

while.cond206.preheader:                          ; preds = %do_atof_calc
  %cmp207489 = icmp sgt i32 %e.3, 0
  br i1 %cmp207489, label %while.body209.lr.ph, label %while.end225

while.body209.lr.ph:                              ; preds = %while.cond206.preheader
  br i1 %cmp193, label %while.body209.us, label %while.body209

while.body209.us:                                 ; preds = %if.end222.us, %while.body209.lr.ph
  %e.4491.us = phi i32 [ %dec224.us, %if.end222.us ], [ %mul196, %while.body209.lr.ph ]
  %s.5490.us = phi i64 [ %div.us, %if.end222.us ], [ %s.4, %while.body209.lr.ph ]
  %rem.us = srem i64 %s.5490.us, 10
  %div.us = sdiv i64 %s.5490.us, 10
  %cmp219.us = icmp eq i64 %rem.us, 0
  br i1 %cmp219.us, label %if.end222.us, label %if.else237

if.end222.us:                                     ; preds = %while.body209.us
  %dec224.us = add nsw i32 %e.4491.us, -1
  %cmp207.us = icmp sgt i32 %e.4491.us, 1
  br i1 %cmp207.us, label %while.body209.us, label %while.end225

if.then201:                                       ; preds = %do_atof_calc, %if.end49
  %z.addr.12585 = phi i8* [ %z.addr.12, %do_atof_calc ], [ %z.addr.2, %if.end49 ]
  %eType.4583 = phi i32 [ %eType.4, %do_atof_calc ], [ %eType.1, %if.end49 ]
  %nDigit.4581 = phi i32 [ %nDigit.4, %do_atof_calc ], [ 0, %if.end49 ]
  %eValid.2579 = phi i32 [ %eValid.2, %do_atof_calc ], [ 1, %if.end49 ]
  %cmp202 = icmp slt i32 %sign.0, 0
  %cond204 = select i1 %cmp202, double -0.000000e+00, double 0.000000e+00
  br label %if.end286

while.body209:                                    ; preds = %if.end216, %while.body209.lr.ph
  %e.4491 = phi i32 [ %dec224, %if.end216 ], [ %add192, %while.body209.lr.ph ]
  %s.5490 = phi i64 [ %mul217, %if.end216 ], [ %s.4, %while.body209.lr.ph ]
  %cmp213 = icmp sgt i64 %s.5490, 922337203685477579
  br i1 %cmp213, label %if.else237, label %if.end216

if.end216:                                        ; preds = %while.body209
  %mul217 = mul nsw i64 %s.5490, 10
  %dec224 = add nsw i32 %e.4491, -1
  %cmp207 = icmp sgt i32 %e.4491, 1
  br i1 %cmp207, label %while.body209, label %while.end225

while.end225:                                     ; preds = %if.end216, %if.end222.us, %while.cond206.preheader
  %s.5.lcssa = phi i64 [ %s.4, %while.cond206.preheader ], [ %div.us, %if.end222.us ], [ %mul217, %if.end216 ]
  %e.4.lcssa = phi i32 [ %e.3, %while.cond206.preheader ], [ 0, %if.end222.us ], [ 0, %if.end216 ]
  %cmp226 = icmp slt i32 %sign.0, 0
  %sub229 = sub nsw i64 0, %s.5.lcssa
  %cond232 = select i1 %cmp226, i64 %sub229, i64 %s.5.lcssa
  %cmp233 = icmp eq i32 %e.4.lcssa, 0
  br i1 %cmp233, label %if.then235, label %if.else270

if.then235:                                       ; preds = %while.end225
  %conv236 = sitofp i64 %cond232 to double
  br label %if.end286

if.else237:                                       ; preds = %while.body209, %while.body209.us
  %s.5.lcssa483 = phi i64 [ %s.5490.us, %while.body209.us ], [ %s.5490, %while.body209 ]
  %e.4.lcssa481 = phi i32 [ %e.4491.us, %while.body209.us ], [ %e.4491, %while.body209 ]
  %cmp226472 = icmp slt i32 %sign.0, 0
  %sub229473 = sub nsw i64 0, %s.5.lcssa483
  %cond232474 = select i1 %cmp226472, i64 %sub229473, i64 %s.5.lcssa483
  %cmp238 = icmp sgt i32 %e.4.lcssa481, 307
  br i1 %cmp238, label %if.then240, label %if.else270

if.then240:                                       ; preds = %if.else237
  %cmp241 = icmp slt i32 %e.4.lcssa481, 342
  br i1 %cmp241, label %if.then243, label %if.else258

if.then243:                                       ; preds = %if.then240
  %sub244 = add nsw i32 %e.4.lcssa481, -308
  %and13.i = and i32 %sub244, 1
  %tobool14.i = icmp eq i32 %and13.i, 0
  %spec.select15.i = select i1 %tobool14.i, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i = ashr i32 %sub244, 1
  %cmp17.i = icmp eq i32 %shr16.i, 0
  br i1 %cmp17.i, label %sqlite3Pow10.exit, label %if.end2.i

if.end2.i:                                        ; preds = %if.end2.i, %if.then243
  %shr20.i = phi i32 [ %shr.i, %if.end2.i ], [ %shr16.i, %if.then243 ]
  %spec.select19.i = phi x86_fp80 [ %spec.select.i, %if.end2.i ], [ %spec.select15.i, %if.then243 ]
  %x.018.i = phi x86_fp80 [ %mul3.i, %if.end2.i ], [ 0xK4002A000000000000000, %if.then243 ]
  %mul3.i = fmul x86_fp80 %x.018.i, %x.018.i
  %and.i = and i32 %shr20.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %mul.i = fmul x86_fp80 %spec.select19.i, %mul3.i
  %spec.select.i = select i1 %tobool.i, x86_fp80 %spec.select19.i, x86_fp80 %mul.i
  %shr.i = ashr i32 %shr20.i, 1
  %cmp.i = icmp eq i32 %shr.i, 0
  br i1 %cmp.i, label %sqlite3Pow10.exit, label %if.end2.i

sqlite3Pow10.exit:                                ; preds = %if.end2.i, %if.then243
  %spec.select.lcssa.i = phi x86_fp80 [ %spec.select15.i, %if.then243 ], [ %spec.select.i, %if.end2.i ]
  %conv248 = sitofp i64 %cond232474 to x86_fp80
  br i1 %cmp193, label %if.then247, label %if.else252

if.then247:                                       ; preds = %sqlite3Pow10.exit
  %div249 = fdiv x86_fp80 %conv248, %spec.select.lcssa.i
  %conv250 = fptrunc x86_fp80 %div249 to double
  %div251 = fdiv double %conv250, 1.000000e+308
  br label %if.end286

if.else252:                                       ; preds = %sqlite3Pow10.exit
  %mul254 = fmul x86_fp80 %spec.select.lcssa.i, %conv248
  %conv255 = fptrunc x86_fp80 %mul254 to double
  %mul256 = fmul double %conv255, 1.000000e+308
  br label %if.end286

if.else258:                                       ; preds = %if.then240
  br i1 %cmp193, label %if.then261, label %if.else264

if.then261:                                       ; preds = %if.else258
  %conv262 = sitofp i64 %cond232474 to double
  %mul263 = fmul double %conv262, 0.000000e+00
  br label %if.end286

if.else264:                                       ; preds = %if.else258
  %conv265 = sitofp i64 %cond232474 to float
  %mul266 = fmul float %conv265, 0x7FF0000000000000
  %conv267 = fpext float %mul266 to double
  br label %if.end286

if.else270:                                       ; preds = %if.else237, %while.end225
  %e.4482 = phi i32 [ %e.4.lcssa481, %if.else237 ], [ %e.4.lcssa, %while.end225 ]
  %cond232476479 = phi i64 [ %cond232474, %if.else237 ], [ %cond232, %while.end225 ]
  %and13.i454 = and i32 %e.4482, 1
  %tobool14.i455 = icmp eq i32 %and13.i454, 0
  %spec.select15.i456 = select i1 %tobool14.i455, x86_fp80 0xK3FFF8000000000000000, x86_fp80 0xK4002A000000000000000
  %shr16.i457 = ashr i32 %e.4482, 1
  %cmp17.i458 = icmp eq i32 %shr16.i457, 0
  br i1 %cmp17.i458, label %sqlite3Pow10.exit471, label %if.end2.i469

if.end2.i469:                                     ; preds = %if.end2.i469, %if.else270
  %shr20.i459 = phi i32 [ %shr.i467, %if.end2.i469 ], [ %shr16.i457, %if.else270 ]
  %spec.select19.i460 = phi x86_fp80 [ %spec.select.i466, %if.end2.i469 ], [ %spec.select15.i456, %if.else270 ]
  %x.018.i461 = phi x86_fp80 [ %mul3.i462, %if.end2.i469 ], [ 0xK4002A000000000000000, %if.else270 ]
  %mul3.i462 = fmul x86_fp80 %x.018.i461, %x.018.i461
  %and.i463 = and i32 %shr20.i459, 1
  %tobool.i464 = icmp eq i32 %and.i463, 0
  %mul.i465 = fmul x86_fp80 %spec.select19.i460, %mul3.i462
  %spec.select.i466 = select i1 %tobool.i464, x86_fp80 %spec.select19.i460, x86_fp80 %mul.i465
  %shr.i467 = ashr i32 %shr20.i459, 1
  %cmp.i468 = icmp eq i32 %shr.i467, 0
  br i1 %cmp.i468, label %sqlite3Pow10.exit471, label %if.end2.i469

sqlite3Pow10.exit471:                             ; preds = %if.end2.i469, %if.else270
  %spec.select.lcssa.i470 = phi x86_fp80 [ %spec.select15.i456, %if.else270 ], [ %spec.select.i466, %if.end2.i469 ]
  %conv276 = sitofp i64 %cond232476479 to x86_fp80
  br i1 %cmp193, label %if.then275, label %if.else279

if.then275:                                       ; preds = %sqlite3Pow10.exit471
  %div277 = fdiv x86_fp80 %conv276, %spec.select.lcssa.i470
  br label %if.end283

if.else279:                                       ; preds = %sqlite3Pow10.exit471
  %mul281 = fmul x86_fp80 %spec.select.lcssa.i470, %conv276
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  %result.1.in = phi x86_fp80 [ %div277, %if.then275 ], [ %mul281, %if.else279 ]
  %result.1 = fptrunc x86_fp80 %result.1.in to double
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.else264, %if.then261, %if.else252, %if.then247, %if.then235, %if.then201
  %z.addr.12584 = phi i8* [ %z.addr.12585, %if.then201 ], [ %z.addr.12, %if.then235 ], [ %z.addr.12, %if.then261 ], [ %z.addr.12, %if.else264 ], [ %z.addr.12, %if.end283 ], [ %z.addr.12, %if.then247 ], [ %z.addr.12, %if.else252 ]
  %eType.4582 = phi i32 [ %eType.4583, %if.then201 ], [ %eType.4, %if.then235 ], [ %eType.4, %if.then261 ], [ %eType.4, %if.else264 ], [ %eType.4, %if.end283 ], [ %eType.4, %if.then247 ], [ %eType.4, %if.else252 ]
  %nDigit.4580 = phi i32 [ %nDigit.4581, %if.then201 ], [ %nDigit.4, %if.then235 ], [ %nDigit.4, %if.then261 ], [ %nDigit.4, %if.else264 ], [ %nDigit.4, %if.end283 ], [ %nDigit.4, %if.then247 ], [ %nDigit.4, %if.else252 ]
  %eValid.2578 = phi i32 [ %eValid.2579, %if.then201 ], [ %eValid.2, %if.then235 ], [ %eValid.2, %if.then261 ], [ %eValid.2, %if.else264 ], [ %eValid.2, %if.end283 ], [ %eValid.2, %if.then247 ], [ %eValid.2, %if.else252 ]
  %result.2 = phi double [ %cond204, %if.then201 ], [ %conv236, %if.then235 ], [ %mul263, %if.then261 ], [ %conv267, %if.else264 ], [ %result.1, %if.end283 ], [ %div251, %if.then247 ], [ %mul256, %if.else252 ]
  store double %result.2, double* %pResult, align 8, !tbaa !6
  %cmp287 = icmp eq i8* %z.addr.12584, %zEnd.0
  %cmp289 = icmp sgt i32 %nDigit.4580, 0
  %or.cond = and i1 %cmp289, %cmp287
  %tobool292 = icmp ne i32 %eValid.2578, 0
  %or.cond320 = and i1 %tobool292, %or.cond
  %cmp294 = icmp sgt i32 %eType.4582, 0
  %or.cond321 = and i1 %cmp294, %or.cond320
  br i1 %or.cond321, label %cleanup, label %if.else297

if.else297:                                       ; preds = %if.end286
  %cmp298 = icmp sgt i32 %eType.4582, 1
  br i1 %cmp298, label %land.lhs.true300, label %if.else309

land.lhs.true300:                                 ; preds = %if.else297
  %cmp301 = icmp eq i32 %eType.4582, 3
  %or.cond322 = or i1 %tobool292, %cmp301
  %or.cond323 = and i1 %cmp289, %or.cond322
  br i1 %or.cond323, label %cleanup, label %if.else309

if.else309:                                       ; preds = %land.lhs.true300, %if.else297
  br label %cleanup

cleanup:                                          ; preds = %if.else309, %land.lhs.true300, %if.end286, %while.body, %if.end20, %entry
  %retval.0 = phi i32 [ 0, %if.else309 ], [ 0, %entry ], [ %eType.4582, %if.end286 ], [ -1, %land.lhs.true300 ], [ 0, %if.end20 ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_randomness(i32, i8*) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemIntegerify(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3UnlinkAndDeleteTable(%struct.sqlite3*, i32, i8*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3ExpirePreparedStatements(%struct.sqlite3*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeUpdateMeta(%struct.Btree*, i32, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFreeCursor(%struct.Vdbe* nocapture readonly, %struct.VdbeCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemSetStr(%struct.sqlite3_value*, i8*, i32, i8 zeroext, void (i8*)*) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeGetMeta(%struct.Btree*, i32, i32*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemCast(%struct.sqlite3_value*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePrevious(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeEof(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorHasHint(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeClearCursor(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3VdbeIntValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3RowSetInsert(%struct.RowSet*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3RowSetTest(%struct.RowSet*, i32, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemSetRowSet(%struct.sqlite3_value*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFreeNN(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local void @sqlite3VdbeRecordUnpack(%struct.KeyInfo* nocapture readonly %pKeyInfo, i32 %nKey, i8* %pKey, %struct.UnpackedRecord* nocapture %p) unnamed_addr #4 {
entry:
  %v64.i71 = alloca i64, align 8
  %v64.i = alloca i64, align 8
  %aMem = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 1
  %0 = load %struct.sqlite3_value*, %struct.sqlite3_value** %aMem, align 8, !tbaa !11
  %default_rc = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 3
  store i8 0, i8* %default_rc, align 2, !tbaa !15
  %1 = load i8, i8* %pKey, align 1, !tbaa !10
  %cmp = icmp sgt i8 %1, -1
  %conv = zext i8 %1 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %incdec.ptr.i = getelementptr inbounds i8, i8* %pKey, i64 1
  %2 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !10
  %conv1.i = zext i8 %2 to i32
  %tobool.i = icmp slt i8 %2, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %cond.false
  %and2.i = shl nuw nsw i32 %conv, 7
  %shl.i = and i32 %and2.i, 16256
  %or.i = or i32 %shl.i, %conv1.i
  br label %cond.end

if.end.i:                                         ; preds = %cond.false
  %incdec.ptr3.i = getelementptr inbounds i8, i8* %pKey, i64 2
  %3 = load i8, i8* %incdec.ptr3.i, align 1, !tbaa !10
  %tobool8.i = icmp slt i8 %3, 0
  br i1 %tobool8.i, label %if.end14.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %conv5.i = zext i8 %3 to i32
  %shl4.i = shl nuw nsw i32 %conv, 14
  %or6.i = or i32 %shl4.i, %conv5.i
  %and10.i = and i32 %or6.i, 2080895
  %and11.i = shl nuw nsw i32 %conv1.i, 7
  %shl12.i = and i32 %and11.i, 16256
  %or13.i = or i32 %and10.i, %shl12.i
  br label %cond.end

if.end14.i:                                       ; preds = %if.end.i
  %4 = bitcast i64* %v64.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %call.i = call zeroext i8 @sqlite3GetVarint(i8* nonnull %pKey, i64* nonnull %v64.i) #5
  %5 = load i64, i64* %v64.i, align 8, !tbaa !16
  %6 = icmp ult i64 %5, 4294967295
  %storemerge43.i = select i1 %6, i64 %5, i64 4294967295
  %7 = trunc i64 %storemerge43.i to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %phitmp101 = zext i8 %call.i to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end14.i, %if.then9.i, %if.then.i, %entry
  %szHdr.1 = phi i32 [ %conv, %entry ], [ %7, %if.end14.i ], [ %or13.i, %if.then9.i ], [ %or.i, %if.then.i ]
  %cond = phi i32 [ 1, %entry ], [ %phitmp101, %if.end14.i ], [ 3, %if.then9.i ], [ 2, %if.then.i ]
  %8 = bitcast i64* %v64.i71 to i8*
  %enc = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 1
  %db = getelementptr inbounds %struct.KeyInfo, %struct.KeyInfo* %pKeyInfo, i64 0, i32 4
  %9 = bitcast %struct.sqlite3** %db to i64*
  %nField = getelementptr inbounds %struct.UnpackedRecord, %struct.UnpackedRecord* %p, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %cond.end22, %cond.end
  %d.0 = phi i32 [ %szHdr.1, %cond.end ], [ %add31, %cond.end22 ]
  %idx.0 = phi i32 [ %cond, %cond.end ], [ %add, %cond.end22 ]
  %u.0 = phi i16 [ 0, %cond.end ], [ %inc, %cond.end22 ]
  %pMem.0 = phi %struct.sqlite3_value* [ %0, %cond.end ], [ %incdec.ptr, %cond.end22 ]
  %cmp6 = icmp ult i32 %idx.0, %szHdr.1
  %cmp8 = icmp ule i32 %d.0, %nKey
  %10 = and i1 %cmp8, %cmp6
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom = zext i32 %idx.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %pKey, i64 %idxprom
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp11 = icmp sgt i8 %11, -1
  %conv10 = zext i8 %11 to i32
  br i1 %cmp11, label %cond.end22, label %cond.false17

cond.false17:                                     ; preds = %while.body
  %incdec.ptr.i73 = getelementptr inbounds i8, i8* %arrayidx, i64 1
  %12 = load i8, i8* %incdec.ptr.i73, align 1, !tbaa !10
  %conv1.i74 = zext i8 %12 to i32
  %tobool.i75 = icmp slt i8 %12, 0
  br i1 %tobool.i75, label %if.end.i82, label %if.then.i79

if.then.i79:                                      ; preds = %cond.false17
  %and2.i76 = shl nuw nsw i32 %conv10, 7
  %shl.i77 = and i32 %and2.i76, 16256
  %or.i78 = or i32 %shl.i77, %conv1.i74
  br label %cond.end22

if.end.i82:                                       ; preds = %cond.false17
  %incdec.ptr3.i80 = getelementptr inbounds i8, i8* %arrayidx, i64 2
  %13 = load i8, i8* %incdec.ptr3.i80, align 1, !tbaa !10
  %tobool8.i81 = icmp slt i8 %13, 0
  br i1 %tobool8.i81, label %if.end14.i93, label %if.then9.i90

if.then9.i90:                                     ; preds = %if.end.i82
  %conv5.i83 = zext i8 %13 to i32
  %shl4.i84 = shl nuw nsw i32 %conv10, 14
  %or6.i85 = or i32 %shl4.i84, %conv5.i83
  %and10.i86 = and i32 %or6.i85, 2080895
  %and11.i87 = shl nuw nsw i32 %conv1.i74, 7
  %shl12.i88 = and i32 %and11.i87, 16256
  %or13.i89 = or i32 %and10.i86, %shl12.i88
  br label %cond.end22

if.end14.i93:                                     ; preds = %if.end.i82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %call.i91 = call zeroext i8 @sqlite3GetVarint(i8* nonnull %arrayidx, i64* nonnull %v64.i71) #5
  %14 = load i64, i64* %v64.i71, align 8, !tbaa !16
  %15 = icmp ult i64 %14, 4294967295
  %storemerge43.i92 = select i1 %15, i64 %14, i64 4294967295
  %16 = trunc i64 %storemerge43.i92 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end14.i93, %if.then9.i90, %if.then.i79, %while.body
  %serial_type.1 = phi i32 [ %16, %if.end14.i93 ], [ %or13.i89, %if.then9.i90 ], [ %or.i78, %if.then.i79 ], [ %conv10, %while.body ]
  %cond23 = phi i8 [ %call.i91, %if.end14.i93 ], [ 3, %if.then9.i90 ], [ 2, %if.then.i79 ], [ 1, %while.body ]
  %conv25 = zext i8 %cond23 to i32
  %add = add i32 %idx.0, %conv25
  %17 = load i8, i8* %enc, align 4, !tbaa !18
  %enc26 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 2
  store i8 %17, i8* %enc26, align 2, !tbaa !21
  %18 = load i64, i64* %9, align 8, !tbaa !23
  %db27 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 9
  %19 = bitcast %struct.sqlite3** %db27 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !24
  %szMalloc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 7
  store i32 0, i32* %szMalloc, align 8, !tbaa !25
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 0, i32 5
  store i8* null, i8** %z, align 8, !tbaa !26
  %idxprom28 = zext i32 %d.0 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %pKey, i64 %idxprom28
  %call30 = call i32 @sqlite3VdbeSerialGet(i8* nonnull %arrayidx29, i32 %serial_type.1, %struct.sqlite3_value* %pMem.0)
  %add31 = add i32 %call30, %d.0
  %incdec.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.0, i64 1
  %inc = add nuw i16 %u.0, 1
  %20 = load i16, i16* %nField, align 8, !tbaa !27
  %cmp34 = icmp ult i16 %inc, %20
  br i1 %cmp34, label %while.cond, label %while.end

while.end:                                        ; preds = %cond.end22, %while.cond
  %d.1 = phi i32 [ %add31, %cond.end22 ], [ %d.0, %while.cond ]
  %u.1 = phi i16 [ %inc, %cond.end22 ], [ %u.0, %while.cond ]
  %pMem.1 = phi %struct.sqlite3_value* [ %incdec.ptr, %cond.end22 ], [ %pMem.0, %while.cond ]
  %cmp36 = icmp ule i32 %d.1, %nKey
  %tobool = icmp eq i16 %u.1, 0
  %or.cond = or i1 %cmp36, %tobool
  br i1 %or.cond, label %if.end40, label %if.then39

if.then39:                                        ; preds = %while.end
  %flags.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1, i32 1
  %21 = load i16, i16* %flags.i, align 8, !tbaa !28
  %22 = and i16 %21, 9216
  %cmp.i = icmp eq i16 %22, 0
  br i1 %cmp.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.then39
  %add.ptr = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem.1, i64 -1
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* nonnull %add.ptr) #5
  br label %if.end40

if.else.i:                                        ; preds = %if.then39
  store i16 1, i16* %flags.i, align 8, !tbaa !28
  br label %if.end40

if.end40:                                         ; preds = %if.else.i, %if.then.i96, %while.end
  store i16 %u.1, i16* %nField, align 8, !tbaa !27
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.UnpackedRecord* @sqlite3VdbeAllocUnpackedRecord(%struct.KeyInfo*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCreateTable(%struct.Btree*, i32*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3*, %struct.Btree** nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor*, %struct.UnpackedRecord*, i64, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeLast(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValidNN(%struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeInsert(%struct.BtCursor*, %struct.BtreePayload* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3*, %struct.VdbeCursor*, %struct.UnpackedRecord*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeIdxRowid(%struct.sqlite3*, %struct.BtCursor*, i64*) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeDelete(%struct.BtCursor*, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i64 @sqlite3BtreeIntegerKey(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeClearTable(%struct.Btree*, i32, i32*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeNumericType(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeError(%struct.Vdbe* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value*, i8, i8) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyNumericAffinity(%struct.sqlite3_value* nocapture %pRec, i32 %bTryForInt) local_unnamed_addr #4 {
entry:
  %rValue = alloca double, align 8
  %0 = bitcast double* %rValue to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %enc1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %1 = load i8, i8* %enc1, align 2, !tbaa !21
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %2 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %3 = load i32, i32* %n, align 4, !tbaa !29
  %call = call i32 @sqlite3AtoF(i8* %2, double* nonnull %rValue, i32 %3, i8 zeroext %1)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call, 1
  %4 = load double, double* %rValue, align 8, !tbaa !6
  %i = bitcast %struct.sqlite3_value* %pRec to i64*
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %conv.i = fptosi double %4 to i64
  %cmp.i.i = fcmp oeq double %4, 0.000000e+00
  br i1 %cmp.i.i, label %alsoAnInt.exit.thread, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %land.lhs.true
  %5 = bitcast double %4 to i64
  %conv.i.i = sitofp i64 %conv.i to double
  %6 = bitcast double %conv.i.i to i64
  %7 = icmp ne i64 %5, %6
  %conv.off.i = add i64 %conv.i, 2251799813685248
  %8 = icmp ugt i64 %conv.off.i, 4503599627370495
  %9 = or i1 %8, %7
  br i1 %9, label %alsoAnInt.exit, label %alsoAnInt.exit.thread

alsoAnInt.exit.thread:                            ; preds = %lor.rhs.i.i, %land.lhs.true
  store i64 %conv.i, i64* %i, align 8, !tbaa !16
  br label %if.then4

alsoAnInt.exit:                                   ; preds = %lor.rhs.i.i
  %10 = load i8*, i8** %z, align 8, !tbaa !26
  %11 = load i32, i32* %n, align 4, !tbaa !29
  %12 = load i8, i8* %enc1, align 2, !tbaa !21
  %call1.i = call i32 @sqlite3Atoi64(i8* %10, i64* %i, i32 %11, i8 zeroext %12) #5
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.then4, label %if.else

if.then4:                                         ; preds = %alsoAnInt.exit, %alsoAnInt.exit.thread
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %13 = load i16, i16* %flags, align 8, !tbaa !28
  %14 = or i16 %13, 4
  store i16 %14, i16* %flags, align 8, !tbaa !28
  br label %if.end14

if.else:                                          ; preds = %alsoAnInt.exit, %if.end
  %15 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  store double %4, double* %15, align 8, !tbaa !10
  %flags7 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %16 = load i16, i16* %flags7, align 8, !tbaa !28
  %17 = or i16 %16, 8
  store i16 %17, i16* %flags7, align 8, !tbaa !28
  %tobool11 = icmp eq i32 %bTryForInt, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.else
  %call.i = call i64 @doubleToInt64(double %4) #5
  %conv.i31 = sitofp i64 %call.i to double
  %cmp.i32 = fcmp oeq double %4, %conv.i31
  %18 = add i64 %call.i, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = and i1 %19, %cmp.i32
  br i1 %20, label %if.then.i33, label %if.end14

if.then.i33:                                      ; preds = %if.then12
  store i64 %call.i, i64* %i, align 8, !tbaa !10
  %21 = and i16 %16, 15936
  %22 = or i16 %21, 4
  store i16 %22, i16* %flags7, align 8, !tbaa !28
  br label %if.end14

if.end14:                                         ; preds = %if.then.i33, %if.then12, %if.else, %if.then4
  %23 = phi i16 [ %22, %if.then.i33 ], [ %17, %if.then12 ], [ %17, %if.else ], [ %14, %if.then4 ]
  %flags15 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %24 = and i16 %23, -3
  store i16 %24, i16* %flags15, align 8, !tbaa !28
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3IsNaN(double) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare double @sqlite3VdbeRealValue(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3MulInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3SubInt64(i64*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3AddInt64(i64*, i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define zeroext i16 @numericType(%struct.sqlite3_value* %pMem) local_unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 44
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %conv4 = trunc i32 %and to i16
  br label %return

if.end:                                           ; preds = %entry
  %and7 = and i32 %conv, 18
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %return, label %if.then9

if.then9:                                         ; preds = %if.end
  %call = call zeroext i16 @computeNumericType(%struct.sqlite3_value* nonnull %pMem)
  br label %return

return:                                           ; preds = %if.then9, %if.end, %if.then
  %retval.0 = phi i16 [ %conv4, %if.then ], [ %call, %if.then9 ], [ 0, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemMove(%struct.sqlite3_value*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @"#VDBE_EXEC_NAME"(%struct.Vdbe*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursorIsValid(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialPut(i8*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3PutVarint(i8*, i64) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VarintLen(i64) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @applyAffinity(%struct.sqlite3_value* %pRec, i8 signext %affinity, i8 zeroext %enc) local_unnamed_addr #4 {
entry:
  %acc.i = alloca %struct.sqlite3_str, align 8
  %cmp = icmp sgt i8 %affinity, 66
  br i1 %cmp, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv2 = zext i16 %0 to i32
  %and = and i32 %conv2, 4
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.then
  %and8 = and i32 %conv2, 8
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then5
  %and14 = and i32 %conv2, 2
  %tobool = icmp eq i32 %and14, 0
  br i1 %tobool, label %if.end41, label %if.then15

if.then15:                                        ; preds = %if.then11
  call void @applyNumericAffinity(%struct.sqlite3_value* nonnull %pRec, i32 1)
  br label %if.end41

if.else:                                          ; preds = %if.then5
  %r.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %1 = load double, double* %r.i, align 8, !tbaa !10
  %call.i = call i64 @doubleToInt64(double %1) #5
  %conv.i = sitofp i64 %call.i to double
  %cmp.i = fcmp oeq double %1, %conv.i
  %2 = add i64 %call.i, -9223372036854775807
  %3 = icmp ugt i64 %2, 1
  %4 = and i1 %3, %cmp.i
  br i1 %4, label %if.then.i, label %if.end41

if.then.i:                                        ; preds = %if.else
  %i.i = bitcast %struct.sqlite3_value* %pRec to i64*
  store i64 %call.i, i64* %i.i, align 8, !tbaa !10
  %5 = and i16 %0, 15936
  %6 = or i16 %5, 4
  store i16 %6, i16* %flags, align 8, !tbaa !28
  br label %if.end41

if.else18:                                        ; preds = %entry
  %cmp20 = icmp eq i8 %affinity, 66
  br i1 %cmp20, label %if.then22, label %if.end41

if.then22:                                        ; preds = %if.else18
  %flags23 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 1
  %7 = load i16, i16* %flags23, align 8, !tbaa !28
  %conv24 = zext i16 %7 to i32
  %and25 = and i32 %conv24, 2
  %cmp26 = icmp ne i32 %and25, 0
  %and31 = and i32 %conv24, 44
  %tobool32 = icmp eq i32 %and31, 0
  %or.cond = or i1 %cmp26, %tobool32
  br i1 %or.cond, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.then22
  %szMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 7
  %8 = load i32, i32* %szMalloc.i, align 8, !tbaa !25
  %cmp.i54 = icmp slt i32 %8, 32
  br i1 %cmp.i54, label %sqlite3VdbeMemClearAndResize.exit, label %sqlite3VdbeMemClearAndResize.exit.thread

sqlite3VdbeMemClearAndResize.exit.thread:         ; preds = %if.then33
  %zMalloc.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 6
  %9 = bitcast i8** %zMalloc.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !30
  %z.i57 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %11 = bitcast i8** %z.i57 to i64*
  store i64 %10, i64* %11, align 8, !tbaa !26
  %12 = and i16 %7, 45
  store i16 %12, i16* %flags23, align 8, !tbaa !28
  %13 = inttoptr i64 %10 to i8*
  br label %lor.lhs.false.i.i

sqlite3VdbeMemClearAndResize.exit:                ; preds = %if.then33
  %call.i55 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* nonnull %pRec, i32 32, i32 0) #5
  %tobool.i = icmp eq i32 %call.i55, 0
  br i1 %tobool.i, label %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, label %if.then.i51

sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge: ; preds = %sqlite3VdbeMemClearAndResize.exit
  %z.i.phi.trans.insert = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %.pre = load i8*, i8** %z.i.phi.trans.insert, align 8, !tbaa !26
  %.pre68 = load i16, i16* %flags23, align 8, !tbaa !28
  br label %lor.lhs.false.i.i

if.then.i51:                                      ; preds = %sqlite3VdbeMemClearAndResize.exit
  %enc1.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 0, i8* %enc1.i, align 2, !tbaa !21
  br label %if.end35

lor.lhs.false.i.i:                                ; preds = %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge, %sqlite3VdbeMemClearAndResize.exit.thread
  %14 = phi i16 [ %.pre68, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %12, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %15 = phi i8* [ %.pre, %sqlite3VdbeMemClearAndResize.exit.lor.lhs.false.i.i_crit_edge ], [ %13, %sqlite3VdbeMemClearAndResize.exit.thread ]
  %z.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %16 = bitcast %struct.sqlite3_str* %acc.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %zText.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 1
  store i8* %15, i8** %zText.i.i, align 8, !tbaa !31
  %db1.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 0
  store %struct.sqlite3* null, %struct.sqlite3** %db1.i.i, align 8, !tbaa !33
  %nAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 2
  store i32 32, i32* %nAlloc.i.i, align 8, !tbaa !34
  %mxAlloc.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 3
  %nChar.i.i = getelementptr inbounds %struct.sqlite3_str, %struct.sqlite3_str* %acc.i, i64 0, i32 4
  %17 = bitcast i32* %mxAlloc.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(10) %17, i8 0, i64 10, i1 false) #5
  %conv.i61 = zext i16 %14 to i32
  %and.i = and i32 %conv.i61, 4
  %tobool.i62 = icmp eq i32 %and.i, 0
  br i1 %tobool.i62, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %lor.lhs.false.i.i
  %i.i63 = bitcast %struct.sqlite3_value* %pRec to i64*
  %18 = load i64, i64* %i.i63, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 %18) #5
  br label %vdbeMemRenderNum.exit

if.else.i:                                        ; preds = %lor.lhs.false.i.i
  %and3.i = and i32 %conv.i61, 32
  %tobool4.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.i, label %if.else9.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.else.i
  %i7.i = bitcast %struct.sqlite3_value* %pRec to i64*
  %19 = load i64, i64* %i7.i, align 8, !tbaa !10
  %conv8.i = sitofp i64 %19 to double
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %conv8.i) #5
  br label %vdbeMemRenderNum.exit

if.else9.i:                                       ; preds = %if.else.i
  %r.i65 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 0, i32 0
  %20 = load double, double* %r.i65, align 8, !tbaa !10
  call void (%struct.sqlite3_str*, i8*, ...) @sqlite3_str_appendf(%struct.sqlite3_str* nonnull %acc.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0), double %20) #5
  br label %vdbeMemRenderNum.exit

vdbeMemRenderNum.exit:                            ; preds = %if.else9.i, %if.then5.i, %if.then.i64
  %21 = load i32, i32* %nChar.i.i, align 8, !tbaa !35
  %idxprom.i = zext i32 %21 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %15, i64 %idxprom.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  %22 = load i8*, i8** %z.i, align 8, !tbaa !26
  %call3.i = call i64 @strlen(i8* nonnull dereferenceable(1) %22) #5
  %23 = trunc i64 %call3.i to i32
  %conv.i52 = and i32 %23, 1073741823
  %n.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  store i32 %conv.i52, i32* %n.i, align 4, !tbaa !29
  %enc4.i = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  store i8 1, i8* %enc4.i, align 2, !tbaa !21
  %24 = load i16, i16* %flags23, align 8, !tbaa !28
  %25 = and i16 %24, -559
  %26 = or i16 %25, 514
  store i16 %26, i16* %flags23, align 8, !tbaa !28
  %cmp.i.i = icmp eq i8 %enc, 1
  br i1 %cmp.i.i, label %if.end35, label %if.end.i.i

if.end.i.i:                                       ; preds = %vdbeMemRenderNum.exit
  %call.i.i = call i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value* nonnull %pRec, i8 zeroext %enc) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end.i.i, %vdbeMemRenderNum.exit, %if.then.i51, %if.then22
  %27 = load i16, i16* %flags23, align 8, !tbaa !28
  %28 = and i16 %27, -45
  store i16 %28, i16* %flags23, align 8, !tbaa !28
  br label %if.end41

if.end41:                                         ; preds = %if.end35, %if.else18, %if.then.i, %if.else, %if.then15, %if.then11, %if.then
  ret void
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterInit(%struct.sqlite3*, i32, %struct.VdbeCursor*) #0

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3MemCompare(%struct.sqlite3_value* %pMem1, %struct.sqlite3_value* %pMem2, %struct.CollSeq* readonly %pColl) unnamed_addr #4 {
entry:
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 1
  %0 = load i16, i16* %flags, align 8, !tbaa !28
  %conv = zext i16 %0 to i32
  %flags1 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 1
  %1 = load i16, i16* %flags1, align 8, !tbaa !28
  %conv2 = zext i16 %1 to i32
  %or164 = or i16 %1, %0
  %or = zext i16 %or164 to i32
  %and = and i32 %or, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %and3 = and i32 %conv2, 1
  %and4 = and i32 %conv, 1
  %sub = sub nsw i32 %and3, %and4
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i32 %or, 44
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.end98, label %if.then7

if.then7:                                         ; preds = %if.end
  %and8165 = and i16 %1, %0
  %and8 = zext i16 %and8165 to i32
  %and9 = and i32 %and8, 36
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.end26, label %if.then11

if.then11:                                        ; preds = %if.then7
  %i = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %2 = load i64, i64* %i, align 8, !tbaa !10
  %i13 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %3 = load i64, i64* %i13, align 8, !tbaa !10
  %cmp14 = icmp slt i64 %2, %3
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.then11
  %cmp22 = icmp sgt i64 %2, %3
  %. = zext i1 %cmp22 to i32
  br label %cleanup

if.end26:                                         ; preds = %if.then7
  %and28 = and i32 %and8, 8
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end47, label %if.then31

if.then31:                                        ; preds = %if.end26
  %r = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %4 = load double, double* %r, align 8, !tbaa !10
  %r34 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %5 = load double, double* %r34, align 8, !tbaa !10
  %cmp35 = fcmp olt double %4, %5
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.then31
  %cmp43 = fcmp ogt double %4, %5
  %.166 = zext i1 %cmp43 to i32
  br label %cleanup

if.end47:                                         ; preds = %if.end26
  %and48 = and i32 %conv, 36
  %cmp49 = icmp eq i32 %and48, 0
  br i1 %cmp49, label %if.end81, label %if.then51

if.then51:                                        ; preds = %if.end47
  %and52 = and i32 %conv2, 8
  %cmp53 = icmp eq i32 %and52, 0
  br i1 %cmp53, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then51
  %i57 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %6 = load i64, i64* %i57, align 8, !tbaa !10
  %r59 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem2, i64 0, i32 0, i32 0
  %7 = load double, double* %r59, align 8, !tbaa !10
  %conv.i = sitofp i64 %6 to x86_fp80
  %conv1.i = fpext double %7 to x86_fp80
  %cmp.i = fcmp olt x86_fp80 %conv.i, %conv1.i
  %cmp4.i = fcmp ogt x86_fp80 %conv.i, %conv1.i
  %..i = zext i1 %cmp4.i to i32
  %retval.0.i = select i1 %cmp.i, i32 -1, i32 %..i
  br label %cleanup

if.else:                                          ; preds = %if.then51
  %and60 = and i32 %conv2, 36
  %cmp61 = icmp eq i32 %and60, 0
  br i1 %cmp61, label %cleanup, label %if.then63

if.then63:                                        ; preds = %if.else
  %i65 = bitcast %struct.sqlite3_value* %pMem1 to i64*
  %8 = load i64, i64* %i65, align 8, !tbaa !10
  %i67 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %9 = load i64, i64* %i67, align 8, !tbaa !10
  %cmp68 = icmp slt i64 %8, %9
  br i1 %cmp68, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.then63
  %cmp76 = icmp sgt i64 %8, %9
  %.167 = zext i1 %cmp76 to i32
  br label %cleanup

if.end81:                                         ; preds = %if.end47
  %and82 = and i32 %conv, 8
  %cmp83 = icmp eq i32 %and82, 0
  br i1 %cmp83, label %cleanup, label %if.then85

if.then85:                                        ; preds = %if.end81
  %and86 = and i32 %conv2, 36
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %cleanup, label %if.then89

if.then89:                                        ; preds = %if.then85
  %i91 = bitcast %struct.sqlite3_value* %pMem2 to i64*
  %10 = load i64, i64* %i91, align 8, !tbaa !10
  %r93 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem1, i64 0, i32 0, i32 0
  %11 = load double, double* %r93, align 8, !tbaa !10
  %conv.i168 = sitofp i64 %10 to x86_fp80
  %conv1.i169 = fpext double %11 to x86_fp80
  %cmp.i170 = fcmp olt x86_fp80 %conv.i168, %conv1.i169
  %cmp4.i171 = fcmp ogt x86_fp80 %conv.i168, %conv1.i169
  %..i172.neg = sext i1 %cmp4.i171 to i32
  %sub95 = select i1 %cmp.i170, i32 1, i32 %..i172.neg
  br label %cleanup

if.end98:                                         ; preds = %if.end
  %and99 = and i32 %or, 2
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.end116, label %if.then101

if.then101:                                       ; preds = %if.end98
  %and102 = and i32 %conv, 2
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cleanup, label %if.end106

if.end106:                                        ; preds = %if.then101
  %and107 = and i32 %conv2, 2
  %cmp108 = icmp eq i32 %and107, 0
  br i1 %cmp108, label %cleanup, label %if.end111

if.end111:                                        ; preds = %if.end106
  %tobool112 = icmp eq %struct.CollSeq* %pColl, null
  br i1 %tobool112, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end111
  %call114 = call i32 @vdbeCompareMemString(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2, %struct.CollSeq* nonnull %pColl, i8* null)
  br label %cleanup

if.end116:                                        ; preds = %if.end111, %if.end98
  %call117 = call i32 @sqlite3BlobCompare(%struct.sqlite3_value* nonnull %pMem1, %struct.sqlite3_value* nonnull %pMem2)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then113, %if.end106, %if.then101, %if.then89, %if.then85, %if.end81, %if.end71, %if.then63, %if.else, %if.then55, %if.end38, %if.then31, %if.end17, %if.then11, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %retval.0.i, %if.then55 ], [ %sub95, %if.then89 ], [ %call114, %if.then113 ], [ %call117, %if.end116 ], [ -1, %if.then11 ], [ %., %if.end17 ], [ -1, %if.then31 ], [ %.166, %if.end38 ], [ -1, %if.then63 ], [ %.167, %if.end71 ], [ -1, %if.else ], [ -1, %if.then85 ], [ 1, %if.end81 ], [ 1, %if.then101 ], [ -1, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterNext(%struct.sqlite3*, %struct.VdbeCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor*, %struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare %struct.BtCursor* @sqlite3BtreeFakeValidCursor() #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXSFuncPtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @callXInversePtr(i64, %struct.sqlite3_context*, i32, %struct.sqlite3_value**) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value*, %struct.FuncDef*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value*, i64) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRawNN(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemInit(%struct.sqlite3_value*, %struct.sqlite3*, i16) #0

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* returned) local_unnamed_addr #1

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeBeginStmt(%struct.Btree*, i32) #0

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeBeginTrans(%struct.Btree*, i32, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeHalt(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeNext(%struct.BtCursor*, i32) #3

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCloseStatement(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCheckFk(%struct.Vdbe*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor*, i32, i32, %struct.sqlite3_value*) #0

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value*, i32, i32) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define dso_local i32 @sqlite3VdbeSerialGet(i8* %buf, i32 %serial_type, %struct.sqlite3_value* %pMem) unnamed_addr #4 {
entry:
  switch i32 %serial_type, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 0, label %sw.bb1
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb15
    i32 4, label %sw.bb29
    i32 5, label %sw.bb48
    i32 6, label %sw.bb78
    i32 7, label %sw.bb78
    i32 8, label %sw.bb79
    i32 9, label %sw.bb79
  ]

sw.bb:                                            ; preds = %entry
  %flags = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 16385, i16* %flags, align 8, !tbaa !28
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 0, i32* %n, align 4, !tbaa !29
  %nZero = bitcast %struct.sqlite3_value* %pMem to i32*
  store i32 0, i32* %nZero, align 8, !tbaa !10
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  %flags2 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 1, i16* %flags2, align 8, !tbaa !28
  br label %return

sw.bb3:                                           ; preds = %entry
  %0 = load i8, i8* %buf, align 1, !tbaa !10
  %conv = sext i8 %0 to i64
  %i = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv, i64* %i, align 8, !tbaa !10
  %flags5 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags5, align 8, !tbaa !28
  br label %return

sw.bb6:                                           ; preds = %entry
  %1 = load i8, i8* %buf, align 1, !tbaa !10
  %conv8 = sext i8 %1 to i32
  %mul = shl nsw i32 %conv8, 8
  %arrayidx9 = getelementptr inbounds i8, i8* %buf, i64 1
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !10
  %conv10 = zext i8 %2 to i32
  %or = or i32 %mul, %conv10
  %conv11 = sext i32 %or to i64
  %i13 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv11, i64* %i13, align 8, !tbaa !10
  %flags14 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags14, align 8, !tbaa !28
  br label %return

sw.bb15:                                          ; preds = %entry
  %3 = load i8, i8* %buf, align 1, !tbaa !10
  %conv17 = sext i8 %3 to i32
  %mul18 = shl nsw i32 %conv17, 16
  %arrayidx19 = getelementptr inbounds i8, i8* %buf, i64 1
  %4 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %conv20 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv20, 8
  %or21 = or i32 %shl, %mul18
  %arrayidx22 = getelementptr inbounds i8, i8* %buf, i64 2
  %5 = load i8, i8* %arrayidx22, align 1, !tbaa !10
  %conv23 = zext i8 %5 to i32
  %or24 = or i32 %or21, %conv23
  %conv25 = sext i32 %or24 to i64
  %i27 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv25, i64* %i27, align 8, !tbaa !10
  %flags28 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags28, align 8, !tbaa !28
  br label %return

sw.bb29:                                          ; preds = %entry
  %6 = load i8, i8* %buf, align 1, !tbaa !10
  %conv31 = sext i8 %6 to i32
  %mul32 = shl nsw i32 %conv31, 24
  %arrayidx33 = getelementptr inbounds i8, i8* %buf, i64 1
  %7 = load i8, i8* %arrayidx33, align 1, !tbaa !10
  %conv34 = zext i8 %7 to i32
  %shl35 = shl nuw nsw i32 %conv34, 16
  %or36 = or i32 %shl35, %mul32
  %arrayidx37 = getelementptr inbounds i8, i8* %buf, i64 2
  %8 = load i8, i8* %arrayidx37, align 1, !tbaa !10
  %conv38 = zext i8 %8 to i32
  %shl39 = shl nuw nsw i32 %conv38, 8
  %or40 = or i32 %or36, %shl39
  %arrayidx41 = getelementptr inbounds i8, i8* %buf, i64 3
  %9 = load i8, i8* %arrayidx41, align 1, !tbaa !10
  %conv42 = zext i8 %9 to i32
  %or43 = or i32 %or40, %conv42
  %conv44 = sext i32 %or43 to i64
  %i46 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv44, i64* %i46, align 8, !tbaa !10
  %flags47 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags47, align 8, !tbaa !28
  br label %return

sw.bb48:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 2
  %10 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv50 = zext i8 %10 to i64
  %shl51 = shl nuw nsw i64 %conv50, 24
  %arrayidx53 = getelementptr inbounds i8, i8* %buf, i64 3
  %11 = load i8, i8* %arrayidx53, align 1, !tbaa !10
  %conv54 = zext i8 %11 to i64
  %shl55 = shl nuw nsw i64 %conv54, 16
  %or56 = or i64 %shl55, %shl51
  %arrayidx58 = getelementptr inbounds i8, i8* %buf, i64 4
  %12 = load i8, i8* %arrayidx58, align 1, !tbaa !10
  %conv59 = zext i8 %12 to i64
  %shl60 = shl nuw nsw i64 %conv59, 8
  %or61 = or i64 %or56, %shl60
  %arrayidx63 = getelementptr inbounds i8, i8* %buf, i64 5
  %13 = load i8, i8* %arrayidx63, align 1, !tbaa !10
  %conv64 = zext i8 %13 to i64
  %or65 = or i64 %or61, %conv64
  %14 = load i8, i8* %buf, align 1, !tbaa !10
  %conv68 = sext i8 %14 to i32
  %mul69 = shl nsw i32 %conv68, 8
  %arrayidx70 = getelementptr inbounds i8, i8* %buf, i64 1
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !10
  %conv71 = zext i8 %15 to i32
  %or72 = or i32 %mul69, %conv71
  %conv73 = sext i32 %or72 to i64
  %mul74 = shl nsw i64 %conv73, 32
  %add = or i64 %or65, %mul74
  %i76 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %add, i64* %i76, align 8, !tbaa !10
  %flags77 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags77, align 8, !tbaa !28
  br label %return

sw.bb78:                                          ; preds = %entry, %entry
  %16 = load i8, i8* %buf, align 1, !tbaa !10
  %conv.i = zext i8 %16 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 24
  %arrayidx1.i = getelementptr inbounds i8, i8* %buf, i64 1
  %17 = load i8, i8* %arrayidx1.i, align 1, !tbaa !10
  %conv2.i = zext i8 %17 to i64
  %shl3.i = shl nuw nsw i64 %conv2.i, 16
  %or.i = or i64 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr inbounds i8, i8* %buf, i64 2
  %18 = load i8, i8* %arrayidx4.i, align 1, !tbaa !10
  %conv5.i = zext i8 %18 to i64
  %shl6.i = shl nuw nsw i64 %conv5.i, 8
  %or7.i = or i64 %or.i, %shl6.i
  %arrayidx8.i = getelementptr inbounds i8, i8* %buf, i64 3
  %19 = load i8, i8* %arrayidx8.i, align 1, !tbaa !10
  %conv9.i = zext i8 %19 to i64
  %or10.i = or i64 %or7.i, %conv9.i
  %add.ptr.i = getelementptr inbounds i8, i8* %buf, i64 4
  %20 = load i8, i8* %add.ptr.i, align 1, !tbaa !10
  %conv13.i = zext i8 %20 to i64
  %shl14.i = shl nuw nsw i64 %conv13.i, 24
  %arrayidx16.i = getelementptr inbounds i8, i8* %buf, i64 5
  %21 = load i8, i8* %arrayidx16.i, align 1, !tbaa !10
  %conv17.i = zext i8 %21 to i64
  %shl18.i = shl nuw nsw i64 %conv17.i, 16
  %arrayidx21.i = getelementptr inbounds i8, i8* %buf, i64 6
  %22 = load i8, i8* %arrayidx21.i, align 1, !tbaa !10
  %conv22.i = zext i8 %22 to i64
  %shl23.i = shl nuw nsw i64 %conv22.i, 8
  %arrayidx26.i = getelementptr inbounds i8, i8* %buf, i64 7
  %23 = load i8, i8* %arrayidx26.i, align 1, !tbaa !10
  %conv27.i = zext i8 %23 to i64
  %shl29.i = shl nuw i64 %or10.i, 32
  %or19.i = or i64 %shl29.i, %shl14.i
  %or24.i = or i64 %or19.i, %shl18.i
  %or28.i = or i64 %or24.i, %shl23.i
  %add.i = or i64 %or28.i, %conv27.i
  %cmp.i = icmp eq i32 %serial_type, 6
  %i.i = bitcast %struct.sqlite3_value* %pMem to i64*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 8, !tbaa !10
  br label %serialGet.exit

if.else.i:                                        ; preds = %sw.bb78
  store i64 %add.i, i64* %i.i, align 1
  %and.i = and i64 %add.i, 9218868437227405312
  %cmp35.i = icmp eq i64 %and.i, 9218868437227405312
  %and37.i = and i64 %add.i, 4503599627370495
  %cmp38.i = icmp ne i64 %and37.i, 0
  %24 = and i1 %cmp35.i, %cmp38.i
  %conv40.i = select i1 %24, i16 1, i16 8
  br label %serialGet.exit

serialGet.exit:                                   ; preds = %if.else.i, %if.then.i
  %conv40.sink.i = phi i16 [ 4, %if.then.i ], [ %conv40.i, %if.else.i ]
  %25 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %conv40.sink.i, i16* %25, align 8
  br label %return

sw.bb79:                                          ; preds = %entry, %entry
  %sub = add nsw i32 %serial_type, -8
  %conv80 = zext i32 %sub to i64
  %i82 = bitcast %struct.sqlite3_value* %pMem to i64*
  store i64 %conv80, i64* %i82, align 8, !tbaa !10
  %flags83 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 4, i16* %flags83, align 8, !tbaa !28
  br label %return

sw.default:                                       ; preds = %entry
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 5
  store i8* %buf, i8** %z, align 8, !tbaa !26
  %sub84 = add i32 %serial_type, -12
  %div = lshr i32 %sub84, 1
  %n85 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 4
  store i32 %div, i32* %n85, align 4, !tbaa !29
  %and = and i32 %serial_type, 1
  %idxprom = zext i32 %and to i64
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* @sqlite3VdbeSerialGet.aFlag, i64 0, i64 %idxprom
  %26 = load i16, i16* %arrayidx86, align 2, !tbaa !36
  %flags87 = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pMem, i64 0, i32 1
  store i16 %26, i16* %flags87, align 8, !tbaa !28
  br label %return

return:                                           ; preds = %sw.default, %sw.bb79, %serialGet.exit, %sw.bb48, %sw.bb29, %sw.bb15, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ 0, %sw.bb79 ], [ 8, %serialGet.exit ], [ 6, %sw.bb48 ], [ 4, %sw.bb29 ], [ 3, %sw.bb15 ], [ 2, %sw.bb6 ], [ 1, %sw.bb3 ], [ 0, %sw.bb1 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemRelease(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSerialTypeLen(i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3VdbeOneByteSerialTypeLen(i8) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8 @sqlite3GetVarint32(i8*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i8* @sqlite3BtreePayloadFetch(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreePayloadSize(%struct.BtCursor*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3VdbeMemSetNull(%struct.sqlite3_value*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor**, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeFirst(%struct.BtCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor*, i32*) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare void @sqlite3BtreeCursorHintFlags(%struct.BtCursor*, i32) #0

; Function Attrs: norecurse nounwind nonlazybind uwtable willreturn
declare i32 @sqlite3BtreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) #0

; Function Attrs: nounwind ssp uwtable
declare %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* nocapture readonly, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare void @printProgress(i64, i32, i64)

declare void @printInt(i64, i64, i32, i64)

declare void @printDouble(double, i64, i32, i64)

declare void @printPtrAndValue(i64, i64, i64, i32, i64, i1)

define i32 @jittedFunction(%struct.Vdbe* %0, i8* %1, i32* %2, i8* %3, i8* %4) !dbg !37 {
  %6 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 19, !dbg !41
  %7 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6, align 8, !dbg !43
  %8 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 21, !dbg !44
  %9 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !45
  %10 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 23, !dbg !46
  %11 = load %struct.VdbeOp*, %struct.VdbeOp** %10, align 8, !dbg !47
  %12 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 0, !dbg !48
  %13 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !49
  br label %14, !dbg !50

14:                                               ; preds = %6539, %6468, %.critedge1, %6609, %5
  %15 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 10, !dbg !51
  %16 = load i32, i32* %15, align 4, !dbg !52
  switch i32 %16, label %17 [
    i32 0, label %18
    i32 1, label %23
    i32 2, label %23
    i32 3, label %32
    i32 4, label %50
    i32 5, label %77
    i32 6, label %82
    i32 7, label %99
    i32 8, label %116
    i32 9, label %133
    i32 10, label %150
    i32 11, label %173
    i32 12, label %429
    i32 13, label %471
    i32 14, label %727
    i32 15, label %769
    i32 16, label %1026
    i32 17, label %1081
    i32 18, label %1097
    i32 19, label %1163
    i32 20, label %1187
  ], !dbg !53

17:                                               ; preds = %14
  switch i32 %16, label %18 [
    i32 21, label %1444
    i32 22, label %1499
    i32 23, label %1756
    i32 24, label %2011
    i32 25, label %2268
    i32 26, label %2319
    i32 27, label %2849
    i32 28, label %2880
    i32 29, label %2892
    i32 30, label %2915
    i32 31, label %3035
    i32 32, label %3054
    i32 33, label %3310
    i32 34, label %3567
    i32 35, label %3679
    i32 36, label %3936
    i32 37, label %4193
    i32 38, label %4449
    i32 39, label %4456
    i32 40, label %4869
    i32 41, label %4885
    i32 42, label %4897
    i32 43, label %4908
    i32 44, label %4916
    i32 45, label %4940
    i32 46, label %4949
    i32 47, label %5204
    i32 48, label %5461
    i32 49, label %5529
    i32 50, label %5533
    i32 51, label %5538
    i32 52, label %5543
    i32 53, label %.critedge
    i32 54, label %5554
    i32 55, label %5811
    i32 56, label %5818
    i32 57, label %5902
    i32 58, label %5906
    i32 59, label %6161
    i32 60, label %6418
    i32 61, label %6436
    i32 62, label %6445
    i32 63, label %6616
    i32 64, label %6450
    i32 65, label %6468
    i32 66, label %6475
    i32 67, label %.critedge1
    i32 68, label %6488
    i32 69, label %6499
    i32 70, label %6506
    i32 71, label %6539
    i32 72, label %6546
    i32 73, label %6591
    i32 74, label %6609
    i32 75, label %6616
    i32 76, label %6618
    i32 77, label %6640
    i32 78, label %6663
    i32 79, label %23
  ], !dbg !53

18:                                               ; preds = %17, %14
  %19 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, i32 3, !dbg !54
  store i32 0, i32* %19, align 4, !dbg !57
  %20 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !58
  %21 = load i32, i32* %20, align 4, !dbg !59
  %22 = add i32 %21, 1, !dbg !60
  store i32 %22, i32* %20, align 4, !dbg !61
  br label %6618, !dbg !62

23:                                               ; preds = %6677, %17, %14, %14
  %24 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 5, i32 3, i32 -1, i8 1), !dbg !63
  %25 = ptrtoint %struct.VdbeCursor* %24 to i64, !dbg !66
  %26 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %24, i32 0, i32 13, !dbg !67
  %27 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 2, !dbg !68
  %28 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %27, i32 0, i32 6, !dbg !69
  %29 = bitcast %union.p4union* %28 to %struct.KeyInfo**, !dbg !70
  %30 = load %struct.KeyInfo*, %struct.KeyInfo** %29, align 8, !dbg !71
  store %struct.KeyInfo* %30, %struct.KeyInfo** %26, align 8, !dbg !72
  %31 = call i32 @sqlite3VdbeSorterInit(%struct.sqlite3* %13, i32 0, %struct.VdbeCursor* %24), !dbg !73
  br label %32, !dbg !74

32:                                               ; preds = %14, %23
  %33 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 3, !dbg !75
  %34 = call i8* @llvm.stacksave(), !dbg !78
  %35 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %33, i32 0, i32 4, !dbg !79
  %36 = load i32, i32* %35, align 4, !dbg !82
  %37 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %36, !dbg !83
  %38 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %37, i32 0, i32 1, !dbg !78
  %39 = load i16, i16* %38, align 2, !dbg !78
  %40 = and i16 %39, 9216, !dbg !78
  %41 = icmp ne i16 %40, 0, !dbg !78
  %42 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %41, label %43, label %45, !dbg !78

43:                                               ; preds = %32
  %44 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %37), !dbg !78
  store %struct.sqlite3_value* %44, %struct.sqlite3_value** %42, align 8, !dbg !78
  br label %46, !dbg !78

45:                                               ; preds = %32
  store i16 4, i16* %38, align 2, !dbg !78
  store %struct.sqlite3_value* %37, %struct.sqlite3_value** %42, align 8, !dbg !78
  br label %46, !dbg !78

46:                                               ; preds = %45, %43
  %47 = load %struct.sqlite3_value*, %struct.sqlite3_value** %42, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %34), !dbg !78
  %48 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %47, i32 0, i32 0, i32 0, !dbg !84
  %49 = bitcast double* %48 to i64*, !dbg !85
  store i64 0, i64* %49, align 4, !dbg !86
  br label %50, !dbg !74

50:                                               ; preds = %14, %46
  %51 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 4, !dbg !87
  %52 = call i8* @llvm.stacksave(), !dbg !90
  %53 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %51, i32 0, i32 4, !dbg !79
  %54 = load i32, i32* %53, align 4, !dbg !82
  %55 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %54, !dbg !83
  %56 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %55, i32 0, i32 1, !dbg !90
  %57 = load i16, i16* %56, align 2, !dbg !90
  %58 = and i16 %57, 9216, !dbg !90
  %59 = icmp ne i16 %58, 0, !dbg !90
  %60 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %59, label %61, label %63, !dbg !90

61:                                               ; preds = %50
  %62 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %55), !dbg !90
  store %struct.sqlite3_value* %62, %struct.sqlite3_value** %60, align 8, !dbg !90
  br label %64, !dbg !90

63:                                               ; preds = %50
  store i16 4, i16* %56, align 2, !dbg !90
  store %struct.sqlite3_value* %55, %struct.sqlite3_value** %60, align 8, !dbg !90
  br label %64, !dbg !90

64:                                               ; preds = %63, %61
  %65 = load %struct.sqlite3_value*, %struct.sqlite3_value** %60, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %52), !dbg !90
  %66 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %65, i32 0, i32 1, !dbg !91
  store i16 1, i16* %66, align 2, !dbg !92
  %67 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %65, i32 0, i32 4, !dbg !93
  store i32 0, i32* %67, align 4, !dbg !94
  %68 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %65, i32 1, !dbg !95
  %69 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %68, i32 0, i32 1, !dbg !96
  %70 = load i16, i16* %69, align 2, !dbg !96
  %71 = and i16 %70, 9216, !dbg !96
  %72 = icmp ne i16 %71, 0, !dbg !96
  br i1 %72, label %73, label %74, !dbg !96

73:                                               ; preds = %64
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %68), !dbg !96
  br label %75, !dbg !96

74:                                               ; preds = %64
  store i16 1, i16* %69, align 2, !dbg !96
  br label %75, !dbg !96

75:                                               ; preds = %74, %73
  store i16 1, i16* %69, align 2, !dbg !97
  %76 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %68, i32 0, i32 4, !dbg !98
  store i32 0, i32* %76, align 4, !dbg !99
  br label %77, !dbg !74

77:                                               ; preds = %14, %75
  %78 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !100
  %79 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %78, i32 0, i32 1, !dbg !103
  store i16 4, i16* %79, align 2, !dbg !104
  %80 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %78, i32 0, i32 0, i32 0, !dbg !105
  %81 = bitcast double* %80 to i64*, !dbg !106
  store i64 5, i64* %81, align 4, !dbg !107
  br label %6546, !dbg !108

82:                                               ; preds = %14
  %83 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %84 = getelementptr %struct.sqlite3, %struct.sqlite3* %83, i32 0, i32 4, !dbg !112
  %85 = load %struct.Db*, %struct.Db** %84, align 8, !dbg !113
  %86 = getelementptr %struct.Db, %struct.Db* %85, i32 0, i32 1, !dbg !114
  %87 = load %struct.Btree*, %struct.Btree** %86, align 8, !dbg !115
  %88 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 0, i32 13, i32 0, i8 0), !dbg !116
  %89 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 2, !dbg !117
  store i8 1, i8* %89, align 1, !dbg !118
  %90 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 5, !dbg !119
  %91 = load i8, i8* %90, align 1, !dbg !120
  %92 = or i8 %91, 4, !dbg !121
  store i8 %92, i8* %90, align 1, !dbg !122
  %93 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 15, !dbg !123
  store i32 2, i32* %93, align 4, !dbg !124
  %94 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 12, i32 0, !dbg !125
  %95 = load %struct.BtCursor*, %struct.BtCursor** %94, align 8, !dbg !126
  %96 = call i32 @sqlite3BtreeCursor(%struct.Btree* %87, i32 2, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %95), !dbg !127
  %97 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %97, align 8, !dbg !129
  %98 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %88, i32 0, i32 4, !dbg !130
  store i8 1, i8* %98, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %95, i32 0), !dbg !132
  br label %99, !dbg !74

99:                                               ; preds = %14, %82
  %100 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %101 = getelementptr %struct.sqlite3, %struct.sqlite3* %100, i32 0, i32 4, !dbg !112
  %102 = load %struct.Db*, %struct.Db** %101, align 8, !dbg !113
  %103 = getelementptr %struct.Db, %struct.Db* %102, i32 0, i32 1, !dbg !114
  %104 = load %struct.Btree*, %struct.Btree** %103, align 8, !dbg !115
  %105 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 1, i32 5, i32 0, i8 0), !dbg !116
  %106 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 2, !dbg !117
  store i8 1, i8* %106, align 1, !dbg !118
  %107 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 5, !dbg !119
  %108 = load i8, i8* %107, align 1, !dbg !120
  %109 = or i8 %108, 4, !dbg !121
  store i8 %109, i8* %107, align 1, !dbg !122
  %110 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 15, !dbg !123
  store i32 8, i32* %110, align 4, !dbg !124
  %111 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 12, i32 0, !dbg !125
  %112 = load %struct.BtCursor*, %struct.BtCursor** %111, align 8, !dbg !126
  %113 = call i32 @sqlite3BtreeCursor(%struct.Btree* %104, i32 8, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %112), !dbg !127
  %114 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %114, align 8, !dbg !129
  %115 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %105, i32 0, i32 4, !dbg !130
  store i8 1, i8* %115, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %112, i32 0), !dbg !132
  br label %116, !dbg !74

116:                                              ; preds = %14, %99
  %117 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %118 = getelementptr %struct.sqlite3, %struct.sqlite3* %117, i32 0, i32 4, !dbg !112
  %119 = load %struct.Db*, %struct.Db** %118, align 8, !dbg !113
  %120 = getelementptr %struct.Db, %struct.Db* %119, i32 0, i32 1, !dbg !114
  %121 = load %struct.Btree*, %struct.Btree** %120, align 8, !dbg !115
  %122 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 3, i32 6, i32 0, i8 0), !dbg !116
  %123 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 2, !dbg !117
  store i8 1, i8* %123, align 1, !dbg !118
  %124 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 5, !dbg !119
  %125 = load i8, i8* %124, align 1, !dbg !120
  %126 = or i8 %125, 4, !dbg !121
  store i8 %126, i8* %124, align 1, !dbg !122
  %127 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 15, !dbg !123
  store i32 6, i32* %127, align 4, !dbg !124
  %128 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 12, i32 0, !dbg !125
  %129 = load %struct.BtCursor*, %struct.BtCursor** %128, align 8, !dbg !126
  %130 = call i32 @sqlite3BtreeCursor(%struct.Btree* %121, i32 6, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %129), !dbg !127
  %131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %131, align 8, !dbg !129
  %132 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %122, i32 0, i32 4, !dbg !130
  store i8 1, i8* %132, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %129, i32 0), !dbg !132
  br label %133, !dbg !74

133:                                              ; preds = %14, %116
  %134 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !109
  %135 = getelementptr %struct.sqlite3, %struct.sqlite3* %134, i32 0, i32 4, !dbg !112
  %136 = load %struct.Db*, %struct.Db** %135, align 8, !dbg !113
  %137 = getelementptr %struct.Db, %struct.Db* %136, i32 0, i32 1, !dbg !114
  %138 = load %struct.Btree*, %struct.Btree** %137, align 8, !dbg !115
  %139 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 2, i32 5, i32 0, i8 0), !dbg !116
  %140 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 2, !dbg !117
  store i8 1, i8* %140, align 1, !dbg !118
  %141 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 5, !dbg !119
  %142 = load i8, i8* %141, align 1, !dbg !120
  %143 = or i8 %142, 4, !dbg !121
  store i8 %143, i8* %141, align 1, !dbg !122
  %144 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 15, !dbg !123
  store i32 4, i32* %144, align 4, !dbg !124
  %145 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 12, i32 0, !dbg !125
  %146 = load %struct.BtCursor*, %struct.BtCursor** %145, align 8, !dbg !126
  %147 = call i32 @sqlite3BtreeCursor(%struct.Btree* %138, i32 4, i32 0, %struct.KeyInfo* null, %struct.BtCursor* %146), !dbg !127
  %148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 13, !dbg !128
  store %struct.KeyInfo* null, %struct.KeyInfo** %148, align 8, !dbg !129
  %149 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %139, i32 0, i32 4, !dbg !130
  store i8 1, i8* %149, align 1, !dbg !131
  call void @sqlite3BtreeCursorHintFlags(%struct.BtCursor* %146, i32 0), !dbg !132
  br label %150, !dbg !74

150:                                              ; preds = %14, %133
  %151 = call i8* @llvm.stacksave(), !dbg !133
  %152 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %153 = load %struct.VdbeCursor*, %struct.VdbeCursor** %152, align 8, !dbg !137
  %154 = alloca i32, align 4, !dbg !138
  store i32 1, i32* %154, align 4, !dbg !139
  %155 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %153, i32 0, i32 0, !dbg !140
  %156 = load i8, i8* %155, align 1, !dbg !141
  %157 = icmp eq i8 %156, 1, !dbg !142
  %158 = alloca i32, align 4, !dbg !143
  store i32 0, i32* %158, align 4, !dbg !144
  br i1 %157, label %159, label %161, !dbg !145

159:                                              ; preds = %150
  %160 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %153, i32* %154), !dbg !146
  store i32 %160, i32* %158, align 4, !dbg !147
  br label %167, !dbg !148

161:                                              ; preds = %150
  %162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %153, i32 0, i32 12, i32 0, !dbg !149
  %163 = load %struct.BtCursor*, %struct.BtCursor** %162, align 8, !dbg !150
  %164 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %163, i32* %154), !dbg !151
  store i32 %164, i32* %158, align 4, !dbg !152
  %165 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %153, i32 0, i32 3, !dbg !153
  store i8 0, i8* %165, align 1, !dbg !154
  %166 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %153, i32 0, i32 9, !dbg !155
  store i32 0, i32* %166, align 4, !dbg !156
  br label %167, !dbg !157

167:                                              ; preds = %161, %159
  %168 = load i32, i32* %158, align 4, !dbg !158
  %169 = load i32, i32* %154, align 4, !dbg !159
  %170 = trunc i32 %169 to i8, !dbg !160
  %171 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %153, i32 0, i32 2, !dbg !161
  store i8 %170, i8* %171, align 1, !dbg !162
  call void @llvm.stackrestore(i8* %151), !dbg !163
  %172 = icmp ne i32 %169, 0, !dbg !164
  br i1 %172, label %4908, label %173, !dbg !165

173:                                              ; preds = %14, %4906, %167
  %174 = call i8* @llvm.stacksave(), !dbg !166
  %175 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %176 = load i8, i8* %175, align 1, !dbg !170
  %177 = alloca i32, align 4, !dbg !171
  store i32 0, i32* %177, align 4, !dbg !172
  %178 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %179 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !174
  store %struct.VdbeCursor* %179, %struct.VdbeCursor** %178, align 8, !dbg !175
  %180 = alloca i8*, align 8, !dbg !176
  %181 = alloca i32, align 4, !dbg !177
  %182 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %178, i32* %177), !dbg !178
  %183 = load %struct.VdbeCursor*, %struct.VdbeCursor** %178, align 8, !dbg !179
  %184 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !180
  %185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 16, !dbg !181
  %186 = load i16, i16* %185, align 2, !dbg !182
  %187 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 19, !dbg !183
  %188 = load i32*, i32** %187, align 8, !dbg !184
  %189 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 0, !dbg !185
  %190 = load i8, i8* %189, align 1, !dbg !186
  %191 = icmp ne i8 %190, 3, !dbg !187
  %192 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 2, !dbg !188
  %193 = load i8, i8* %192, align 1, !dbg !189
  %194 = icmp ne i8 %193, 0, !dbg !190
  %195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 14, !dbg !191
  %196 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 21, !dbg !192
  %197 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 22, !dbg !193
  %198 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 20, !dbg !194
  %199 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 17, !dbg !195
  %200 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 9, !dbg !196
  %201 = load i32, i32* %200, align 4, !dbg !197
  %202 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %203 = load i32, i32* %202, align 4, !dbg !199
  %204 = icmp ne i32 %201, %203, !dbg !200
  br i1 %204, label %205, label %247, !dbg !201

205:                                              ; preds = %173
  br i1 %194, label %227, label %222, !dbg !202

206:                                              ; preds = %222, %229
  %207 = load i32, i32* %202, align 4, !dbg !203
  store i32 %207, i32* %200, align 4, !dbg !204
  %208 = load i8*, i8** %198, align 8, !dbg !205
  %209 = load i8, i8* %208, align 1, !dbg !206
  %210 = icmp sgt i8 %209, -1, !dbg !209
  br i1 %210, label %211, label %213, !dbg !210

211:                                              ; preds = %206
  %212 = zext i8 %209 to i32, !dbg !211
  store i32 %212, i32* %188, align 4, !dbg !212
  store i32 1, i32* %195, align 4, !dbg !213
  br label %216, !dbg !214

213:                                              ; preds = %206
  %214 = call i8 @sqlite3GetVarint32(i8* %208, i32* %188), !dbg !215
  %215 = zext i8 %214 to i32, !dbg !216
  store i32 %215, i32* %195, align 4, !dbg !217
  br label %216, !dbg !218

216:                                              ; preds = %213, %211
  store i16 0, i16* %199, align 2, !dbg !219
  %217 = load i32, i32* %197, align 4, !dbg !220
  %218 = load i32, i32* %188, align 4, !dbg !221
  %219 = icmp ult i32 %217, %218, !dbg !222
  br i1 %219, label %221, label %220, !dbg !223

220:                                              ; preds = %216
  store i8* %208, i8** %180, align 8, !dbg !224
  br label %340, !dbg !225

221:                                              ; preds = %216
  store i8* null, i8** %198, align 8, !dbg !226
  store i32 0, i32* %197, align 4, !dbg !227
  br label %247, !dbg !228

222:                                              ; preds = %205
  %223 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 12, i32 0, !dbg !229
  %224 = load %struct.BtCursor*, %struct.BtCursor** %223, align 8, !dbg !230
  %225 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %224), !dbg !231
  store i32 %225, i32* %196, align 4, !dbg !232
  %226 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %224, i32* %197), !dbg !233
  store i8* %226, i8** %198, align 8, !dbg !234
  br label %206, !dbg !235

227:                                              ; preds = %205
  %228 = icmp eq i8 %190, 3, !dbg !236
  br i1 %228, label %229, label %240, !dbg !237

229:                                              ; preds = %227
  %230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 10, !dbg !238
  %231 = load i32, i32* %230, align 4, !dbg !239
  %232 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %231, !dbg !240
  %233 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %232, i32 0, i32 1, !dbg !241
  %234 = load i16, i16* %233, align 2, !dbg !242
  %235 = and i16 %234, 16, !dbg !243
  %236 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %232, i32 0, i32 4, !dbg !244
  %237 = load i32, i32* %236, align 4, !dbg !245
  store i32 %237, i32* %196, align 4, !dbg !246
  store i32 %237, i32* %197, align 4, !dbg !247
  %238 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %232, i32 0, i32 5, !dbg !248
  %239 = load i8*, i8** %238, align 8, !dbg !249
  store i8* %239, i8** %198, align 8, !dbg !250
  br label %206, !dbg !251

240:                                              ; preds = %227
  %241 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 1, !dbg !252
  %242 = load i16, i16* %241, align 2, !dbg !252
  %243 = and i16 %242, 9216, !dbg !252
  %244 = icmp ne i16 %243, 0, !dbg !252
  br i1 %244, label %245, label %246, !dbg !252

245:                                              ; preds = %240
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %184), !dbg !252
  br label %428, !dbg !252

246:                                              ; preds = %240
  store i16 1, i16* %241, align 2, !dbg !252
  br label %428, !dbg !252

247:                                              ; preds = %221, %173
  %248 = load i16, i16* %199, align 2, !dbg !253
  %249 = icmp ule i16 %248, 5, !dbg !254
  br i1 %249, label %332, label %329, !dbg !255

250:                                              ; preds = %329, %418
  %251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 1, !dbg !256
  %252 = load i16, i16* %251, align 2, !dbg !257
  %253 = and i16 9216, %252, !dbg !258
  %254 = icmp eq i16 0, %253, !dbg !259
  br i1 %254, label %255, label %259, !dbg !260

255:                                              ; preds = %250
  %256 = icmp ne i16 %253, 0, !dbg !261
  br i1 %256, label %257, label %258, !dbg !261

257:                                              ; preds = %255
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %184), !dbg !261
  br label %259, !dbg !261

258:                                              ; preds = %255
  store i16 1, i16* %251, align 2, !dbg !261
  br label %259, !dbg !261

259:                                              ; preds = %257, %258, %250
  %260 = load i32, i32* %181, align 4, !dbg !262
  %261 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 23, i32 5, !dbg !263
  %262 = load i32, i32* %261, align 4, !dbg !264
  %263 = load i32, i32* %197, align 4, !dbg !265
  %264 = getelementptr i32, i32* %188, i32 6, !dbg !266
  %265 = load i32, i32* %264, align 4, !dbg !267
  %266 = icmp sge i32 %263, %265, !dbg !268
  br i1 %266, label %267, label %307, !dbg !269

267:                                              ; preds = %259
  %268 = load i8*, i8** %198, align 8, !dbg !270
  %269 = ptrtoint i8* %268 to i64, !dbg !271
  %270 = getelementptr i32, i32* %188, i32 5, !dbg !272
  %271 = load i32, i32* %270, align 4, !dbg !273
  %272 = zext i32 %271 to i64, !dbg !274
  %273 = add i64 %269, %272, !dbg !275
  %274 = inttoptr i64 %273 to i8*, !dbg !276
  store i8* %274, i8** %180, align 8, !dbg !277
  %275 = load i32, i32* %181, align 4, !dbg !278
  %276 = icmp ult i32 %275, 12, !dbg !279
  br i1 %276, label %277, label %279, !dbg !280

277:                                              ; preds = %267
  %278 = call i32 @sqlite3VdbeSerialGet(i8* %274, i32 %275, %struct.sqlite3_value* %184), !dbg !281
  br label %428, !dbg !282

279:                                              ; preds = %267
  %280 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %280, align 2, !dbg !284
  %281 = getelementptr i16, i16* %280, i32 1, !dbg !285
  store i16 514, i16* %281, align 2, !dbg !286
  %282 = load i32, i32* %181, align 4, !dbg !287
  %283 = sub i32 %282, 12, !dbg !288
  %284 = lshr i32 %283, 1, !dbg !289
  %285 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 4, !dbg !290
  store i32 %284, i32* %285, align 4, !dbg !291
  %286 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 2, !dbg !292
  store i8 %176, i8* %286, align 1, !dbg !293
  %287 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 5, !dbg !294
  %288 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 7, !dbg !295
  %289 = load i32, i32* %288, align 4, !dbg !296
  %290 = add i32 %284, 2, !dbg !297
  %291 = icmp slt i32 %289, %290, !dbg !298
  br i1 %291, label %292, label %294, !dbg !299

292:                                              ; preds = %279
  store i16 1, i16* %251, align 2, !dbg !300
  %293 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %184, i32 %290, i32 0), !dbg !301
  br label %297, !dbg !302

294:                                              ; preds = %279
  %295 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 6, !dbg !303
  %296 = load i8*, i8** %295, align 8, !dbg !304
  store i8* %296, i8** %287, align 8, !dbg !305
  br label %297, !dbg !306

297:                                              ; preds = %294, %292
  %298 = zext i32 %284 to i64, !dbg !307
  %299 = load i8*, i8** %287, align 8, !dbg !308
  %300 = load i8*, i8** %180, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %299, i8* %300, i64 %298, i1 false), !dbg !310
  %301 = getelementptr i8, i8* %299, i32 %284, !dbg !311
  store i8 0, i8* %301, align 1, !dbg !312
  %302 = add i32 %284, 1, !dbg !313
  %303 = getelementptr i8, i8* %299, i32 %302, !dbg !314
  store i8 0, i8* %303, align 1, !dbg !315
  %304 = and i32 %282, 1, !dbg !316
  %305 = getelementptr i16, i16* %280, i32 %304, !dbg !317
  %306 = load i16, i16* %305, align 2, !dbg !318
  store i16 %306, i16* %251, align 2, !dbg !319
  br label %428, !dbg !320

307:                                              ; preds = %259
  %308 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 2, !dbg !321
  store i8 %176, i8* %308, align 1, !dbg !322
  %309 = load i32, i32* %181, align 4, !dbg !323
  %310 = and i32 %309, 1, !dbg !324
  %311 = icmp eq i32 %310, 0, !dbg !325
  %312 = icmp sge i32 %309, 12, !dbg !326
  %313 = and i1 %312, %311, !dbg !327
  %314 = call i32 @sqlite3VdbeSerialTypeLen(i32 %309), !dbg !328
  %315 = icmp eq i32 %314, 0, !dbg !329
  br i1 %315, label %327, label %316, !dbg !330

316:                                              ; preds = %307
  %317 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 12, i32 0, !dbg !331
  %318 = load %struct.BtCursor*, %struct.BtCursor** %317, align 8, !dbg !332
  %319 = getelementptr i32, i32* %188, i32 5, !dbg !333
  %320 = load i32, i32* %319, align 4, !dbg !334
  %321 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %318, i32 %320, i32 %314, %struct.sqlite3_value* %184), !dbg !335
  %322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 5, !dbg !336
  %323 = load i8*, i8** %322, align 8, !dbg !337
  %324 = call i32 @sqlite3VdbeSerialGet(i8* %323, i32 %309, %struct.sqlite3_value* %184), !dbg !338
  %325 = load i16, i16* %251, align 2, !dbg !339
  %326 = and i16 %325, -4097, !dbg !340
  store i16 %326, i16* %251, align 2, !dbg !341
  br label %428, !dbg !342

327:                                              ; preds = %307
  %328 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %309, %struct.sqlite3_value* %184), !dbg !343
  br label %428, !dbg !344

329:                                              ; preds = %247
  %330 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 23, i32 5, !dbg !345
  %331 = load i32, i32* %330, align 4, !dbg !346
  store i32 %331, i32* %181, align 4, !dbg !347
  br label %250, !dbg !348

332:                                              ; preds = %247
  %333 = load i32, i32* %195, align 4, !dbg !349
  %334 = load i32, i32* %188, align 4, !dbg !350
  %335 = icmp ult i32 %333, %334, !dbg !351
  br i1 %335, label %336, label %417, !dbg !352

336:                                              ; preds = %332
  %337 = load i8*, i8** %198, align 8, !dbg !353
  %338 = icmp eq i8* %337, null, !dbg !354
  br i1 %338, label %340, label %339, !dbg !355

339:                                              ; preds = %336
  store i8* %337, i8** %180, align 8, !dbg !356
  br label %340, !dbg !357

340:                                              ; preds = %339, %336, %220
  %341 = alloca i32, align 4, !dbg !358
  %342 = load i16, i16* %199, align 2, !dbg !359
  %343 = zext i16 %342 to i32, !dbg !360
  store i32 %343, i32* %341, align 4, !dbg !361
  %344 = alloca i64, align 8, !dbg !362
  %345 = getelementptr i32, i32* %188, i32 %343, !dbg !363
  %346 = load i32, i32* %345, align 4, !dbg !364
  %347 = zext i32 %346 to i64, !dbg !365
  store i64 %347, i64* %344, align 4, !dbg !366
  %348 = load i8*, i8** %180, align 8, !dbg !367
  %349 = load i32, i32* %195, align 4, !dbg !368
  %350 = alloca i8*, align 8, !dbg !369
  %351 = getelementptr i8, i8* %348, i32 %349, !dbg !370
  store i8* %351, i8** %350, align 8, !dbg !371
  %352 = load i32, i32* %188, align 4, !dbg !372
  %353 = getelementptr i8, i8* %348, i32 %352, !dbg !373
  br label %354, !dbg !374

354:                                              ; preds = %361, %340
  %355 = load i32, i32* %341, align 4, !dbg !375
  %356 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %183, i32 0, i32 23, i32 %355, !dbg !376
  %357 = load i8*, i8** %350, align 8, !dbg !377
  %358 = load i8, i8* %357, align 1, !dbg !378
  %359 = zext i8 %358 to i32, !dbg !379
  store i32 %359, i32* %181, align 4, !dbg !380
  store i32 %359, i32* %356, align 4, !dbg !381
  %360 = icmp sgt i8 %358, -1, !dbg !382
  br i1 %360, label %384, label %375, !dbg !383

361:                                              ; preds = %375, %384
  %362 = load i32, i32* %341, align 4, !dbg !384
  %363 = add i32 %362, 1, !dbg !385
  store i32 %363, i32* %341, align 4, !dbg !386
  %364 = load i64, i64* %344, align 4, !dbg !387
  %365 = and i64 4294967295, %364, !dbg !388
  %366 = trunc i64 %365 to i32, !dbg !389
  %367 = getelementptr i32, i32* %188, i32 %363, !dbg !390
  store i32 %366, i32* %367, align 4, !dbg !391
  %368 = load i32, i32* %341, align 4, !dbg !392
  %369 = icmp sle i32 %368, 5, !dbg !393
  %370 = load i8*, i8** %350, align 8, !dbg !394
  %371 = ptrtoint i8* %370 to i64, !dbg !395
  %372 = ptrtoint i8* %353 to i64, !dbg !396
  %373 = icmp ult i64 %371, %372, !dbg !397
  %374 = and i1 %369, %373, !dbg !398
  br i1 %374, label %354, label %393, !dbg !399

375:                                              ; preds = %354
  %376 = load i8*, i8** %350, align 8, !dbg !400
  %377 = call i8 @sqlite3GetVarint32(i8* %376, i32* %181), !dbg !401
  %378 = getelementptr i8, i8* %376, i8 %377, !dbg !402
  store i8* %378, i8** %350, align 8, !dbg !403
  %379 = load i32, i32* %181, align 4, !dbg !404
  store i32 %379, i32* %356, align 4, !dbg !405
  %380 = load i64, i64* %344, align 4, !dbg !406
  %381 = call i32 @sqlite3VdbeSerialTypeLen(i32 %379), !dbg !407
  %382 = zext i32 %381 to i64, !dbg !408
  %383 = add i64 %380, %382, !dbg !409
  store i64 %383, i64* %344, align 4, !dbg !410
  br label %361, !dbg !411

384:                                              ; preds = %354
  %385 = getelementptr i8, i8* %357, i32 1, !dbg !412
  store i8* %385, i8** %350, align 8, !dbg !413
  %386 = load i32, i32* %181, align 4, !dbg !414
  %387 = trunc i32 %386 to i8, !dbg !415
  %388 = getelementptr i8, i8* %4, i8 %387, !dbg !416
  %389 = load i8, i8* %388, align 1, !dbg !417
  %390 = zext i8 %389 to i64, !dbg !418
  %391 = load i64, i64* %344, align 4, !dbg !419
  %392 = add i64 %391, %390, !dbg !420
  store i64 %392, i64* %344, align 4, !dbg !421
  br label %361, !dbg !422

393:                                              ; preds = %361
  %394 = load i64, i64* %344, align 4, !dbg !423
  %395 = load i32, i32* %196, align 4, !dbg !424
  %396 = zext i32 %395 to i64, !dbg !425
  %397 = icmp uge i64 %371, %372, !dbg !426
  %398 = icmp ugt i64 %371, %372, !dbg !427
  %399 = icmp ne i64 %394, %396, !dbg !428
  %400 = icmp ugt i64 %394, %396, !dbg !429
  %401 = or i1 %398, %399, !dbg !430
  %402 = and i1 %397, %401, !dbg !431
  %403 = or i1 %402, %400, !dbg !432
  br i1 %403, label %404, label %408, !dbg !433

404:                                              ; preds = %393
  %405 = load i32, i32* %188, align 4, !dbg !434
  %406 = icmp eq i32 %405, 0, !dbg !435
  br i1 %406, label %407, label %408, !dbg !436

407:                                              ; preds = %404
  store i32 0, i32* %341, align 4, !dbg !437
  store i8* %353, i8** %350, align 8, !dbg !438
  br label %408, !dbg !439

408:                                              ; preds = %407, %404, %393
  %409 = load i32, i32* %341, align 4, !dbg !440
  %410 = trunc i32 %409 to i16, !dbg !441
  store i16 %410, i16* %199, align 2, !dbg !442
  %411 = load i8*, i8** %350, align 8, !dbg !443
  %412 = ptrtoint i8* %411 to i64, !dbg !444
  %413 = load i8*, i8** %180, align 8, !dbg !445
  %414 = ptrtoint i8* %413 to i64, !dbg !446
  %415 = sub i64 %412, %414, !dbg !447
  %416 = trunc i64 %415 to i32, !dbg !448
  store i32 %416, i32* %195, align 4, !dbg !449
  br label %418, !dbg !450

417:                                              ; preds = %332
  store i32 0, i32* %181, align 4, !dbg !451
  br label %418, !dbg !452

418:                                              ; preds = %408, %417
  %419 = load i16, i16* %199, align 2, !dbg !453
  %420 = icmp sle i16 %419, 5, !dbg !454
  br i1 %420, label %421, label %250, !dbg !455

421:                                              ; preds = %418
  %422 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %184, i32 0, i32 1, !dbg !456
  %423 = load i16, i16* %422, align 2, !dbg !456
  %424 = and i16 %423, 9216, !dbg !456
  %425 = icmp ne i16 %424, 0, !dbg !456
  br i1 %425, label %426, label %427, !dbg !456

426:                                              ; preds = %421
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %184), !dbg !456
  br label %428, !dbg !456

427:                                              ; preds = %421
  store i16 1, i16* %422, align 2, !dbg !456
  br label %428, !dbg !456

428:                                              ; preds = %426, %427, %297, %277, %316, %327, %245, %246
  call void @llvm.stackrestore(i8* %174), !dbg !457
  br label %429, !dbg !74

429:                                              ; preds = %14, %428
  %430 = call i8* @llvm.stacksave(), !dbg !458
  %431 = alloca i32, align 8, !dbg !461
  %432 = alloca i64, align 8, !dbg !462
  %433 = alloca i32, align 8, !dbg !463
  %434 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 13, !dbg !464
  %435 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %434, i32 0, i32 1, !dbg !465
  %436 = load i16, i16* %435, align 2, !dbg !466
  %437 = and i16 %436, 36, !dbg !467
  %438 = icmp eq i16 %437, 0, !dbg !468
  br i1 %438, label %439, label %450, !dbg !469

439:                                              ; preds = %429
  %440 = alloca %struct.sqlite3_value, align 8, !dbg !470
  %441 = load %struct.sqlite3_value, %struct.sqlite3_value* %434, align 8, !dbg !471
  store %struct.sqlite3_value %441, %struct.sqlite3_value* %440, align 8, !dbg !471
  call void @applyAffinity(%struct.sqlite3_value* %440, i8 67, i8 1), !dbg !472
  %442 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %440, i32 0, i32 1, !dbg !473
  %443 = load i16, i16* %442, align 2, !dbg !474
  %444 = and i16 %443, 4, !dbg !475
  %445 = icmp eq i16 %444, 0, !dbg !476
  br i1 %445, label %4897, label %446, !dbg !477

446:                                              ; preds = %439
  %447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %440, i32 0, i32 0, !dbg !478
  %448 = bitcast %union.MemValue* %447 to i64*, !dbg !479
  %449 = load i64, i64* %448, align 4, !dbg !480
  store i64 %449, i64* %432, align 4, !dbg !481
  br label %454, !dbg !482

450:                                              ; preds = %429
  %451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %434, i32 0, i32 0, !dbg !483
  %452 = bitcast %union.MemValue* %451 to i64*, !dbg !484
  %453 = load i64, i64* %452, align 4, !dbg !485
  store i64 %453, i64* %432, align 4, !dbg !486
  br label %454, !dbg !487

454:                                              ; preds = %450, %446
  %455 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !488
  %456 = load %struct.VdbeCursor*, %struct.VdbeCursor** %455, align 8, !dbg !489
  %457 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 12, i32 0, !dbg !490
  %458 = load %struct.BtCursor*, %struct.BtCursor** %457, align 8, !dbg !491
  store i32 0, i32* %431, align 4, !dbg !492
  %459 = load i64, i64* %432, align 4, !dbg !493
  %460 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %458, %struct.UnpackedRecord* null, i64 %459, i32 0, i32* %431), !dbg !494
  store i32 %460, i32* %433, align 4, !dbg !495
  %461 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 18, !dbg !496
  store i64 %459, i64* %461, align 4, !dbg !497
  %462 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 2, !dbg !498
  store i8 0, i8* %462, align 1, !dbg !499
  %463 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 9, !dbg !500
  store i32 0, i32* %463, align 4, !dbg !501
  %464 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 3, !dbg !502
  store i8 0, i8* %464, align 1, !dbg !503
  %465 = load i32, i32* %431, align 4, !dbg !504
  %466 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %456, i32 0, i32 10, !dbg !505
  store i32 %465, i32* %466, align 4, !dbg !506
  %467 = icmp ne i32 %465, 0, !dbg !507
  br i1 %467, label %468, label %469, !dbg !508

468:                                              ; preds = %454
  call void @llvm.stackrestore(i8* %430), !dbg !509
  br label %4897, !dbg !510

469:                                              ; preds = %454
  %470 = load i32, i32* %433, align 4, !dbg !511
  call void @llvm.stackrestore(i8* %430), !dbg !512
  br label %471, !dbg !513

471:                                              ; preds = %14, %469
  %472 = call i8* @llvm.stacksave(), !dbg !166
  %473 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %474 = load i8, i8* %473, align 1, !dbg !170
  %475 = alloca i32, align 4, !dbg !171
  store i32 0, i32* %475, align 4, !dbg !172
  %476 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %477 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !174
  store %struct.VdbeCursor* %477, %struct.VdbeCursor** %476, align 8, !dbg !175
  %478 = alloca i8*, align 8, !dbg !176
  %479 = alloca i32, align 4, !dbg !177
  %480 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %476, i32* %475), !dbg !178
  %481 = load %struct.VdbeCursor*, %struct.VdbeCursor** %476, align 8, !dbg !179
  %482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !180
  %483 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 16, !dbg !181
  %484 = load i16, i16* %483, align 2, !dbg !182
  %485 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 19, !dbg !183
  %486 = load i32*, i32** %485, align 8, !dbg !184
  %487 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 0, !dbg !185
  %488 = load i8, i8* %487, align 1, !dbg !186
  %489 = icmp ne i8 %488, 3, !dbg !187
  %490 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 2, !dbg !188
  %491 = load i8, i8* %490, align 1, !dbg !189
  %492 = icmp ne i8 %491, 0, !dbg !190
  %493 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 14, !dbg !191
  %494 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 21, !dbg !192
  %495 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 22, !dbg !193
  %496 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 20, !dbg !194
  %497 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 17, !dbg !195
  %498 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 9, !dbg !196
  %499 = load i32, i32* %498, align 4, !dbg !197
  %500 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %501 = load i32, i32* %500, align 4, !dbg !199
  %502 = icmp ne i32 %499, %501, !dbg !200
  br i1 %502, label %503, label %545, !dbg !201

503:                                              ; preds = %471
  br i1 %492, label %525, label %520, !dbg !202

504:                                              ; preds = %520, %527
  %505 = load i32, i32* %500, align 4, !dbg !203
  store i32 %505, i32* %498, align 4, !dbg !204
  %506 = load i8*, i8** %496, align 8, !dbg !205
  %507 = load i8, i8* %506, align 1, !dbg !206
  %508 = icmp sgt i8 %507, -1, !dbg !209
  br i1 %508, label %509, label %511, !dbg !210

509:                                              ; preds = %504
  %510 = zext i8 %507 to i32, !dbg !211
  store i32 %510, i32* %486, align 4, !dbg !212
  store i32 1, i32* %493, align 4, !dbg !213
  br label %514, !dbg !214

511:                                              ; preds = %504
  %512 = call i8 @sqlite3GetVarint32(i8* %506, i32* %486), !dbg !215
  %513 = zext i8 %512 to i32, !dbg !216
  store i32 %513, i32* %493, align 4, !dbg !217
  br label %514, !dbg !218

514:                                              ; preds = %511, %509
  store i16 0, i16* %497, align 2, !dbg !219
  %515 = load i32, i32* %495, align 4, !dbg !220
  %516 = load i32, i32* %486, align 4, !dbg !221
  %517 = icmp ult i32 %515, %516, !dbg !222
  br i1 %517, label %519, label %518, !dbg !223

518:                                              ; preds = %514
  store i8* %506, i8** %478, align 8, !dbg !224
  br label %638, !dbg !225

519:                                              ; preds = %514
  store i8* null, i8** %496, align 8, !dbg !226
  store i32 0, i32* %495, align 4, !dbg !227
  br label %545, !dbg !228

520:                                              ; preds = %503
  %521 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 12, i32 0, !dbg !229
  %522 = load %struct.BtCursor*, %struct.BtCursor** %521, align 8, !dbg !230
  %523 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %522), !dbg !231
  store i32 %523, i32* %494, align 4, !dbg !232
  %524 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %522, i32* %495), !dbg !233
  store i8* %524, i8** %496, align 8, !dbg !234
  br label %504, !dbg !235

525:                                              ; preds = %503
  %526 = icmp eq i8 %488, 3, !dbg !236
  br i1 %526, label %527, label %538, !dbg !237

527:                                              ; preds = %525
  %528 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 10, !dbg !238
  %529 = load i32, i32* %528, align 4, !dbg !239
  %530 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %529, !dbg !240
  %531 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %530, i32 0, i32 1, !dbg !241
  %532 = load i16, i16* %531, align 2, !dbg !242
  %533 = and i16 %532, 16, !dbg !243
  %534 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %530, i32 0, i32 4, !dbg !244
  %535 = load i32, i32* %534, align 4, !dbg !245
  store i32 %535, i32* %494, align 4, !dbg !246
  store i32 %535, i32* %495, align 4, !dbg !247
  %536 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %530, i32 0, i32 5, !dbg !248
  %537 = load i8*, i8** %536, align 8, !dbg !249
  store i8* %537, i8** %496, align 8, !dbg !250
  br label %504, !dbg !251

538:                                              ; preds = %525
  %539 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 1, !dbg !252
  %540 = load i16, i16* %539, align 2, !dbg !252
  %541 = and i16 %540, 9216, !dbg !252
  %542 = icmp ne i16 %541, 0, !dbg !252
  br i1 %542, label %543, label %544, !dbg !252

543:                                              ; preds = %538
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %482), !dbg !252
  br label %726, !dbg !252

544:                                              ; preds = %538
  store i16 1, i16* %539, align 2, !dbg !252
  br label %726, !dbg !252

545:                                              ; preds = %519, %471
  %546 = load i16, i16* %497, align 2, !dbg !253
  %547 = icmp ule i16 %546, 4, !dbg !254
  br i1 %547, label %630, label %627, !dbg !255

548:                                              ; preds = %627, %716
  %549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 1, !dbg !256
  %550 = load i16, i16* %549, align 2, !dbg !257
  %551 = and i16 9216, %550, !dbg !258
  %552 = icmp eq i16 0, %551, !dbg !259
  br i1 %552, label %553, label %557, !dbg !260

553:                                              ; preds = %548
  %554 = icmp ne i16 %551, 0, !dbg !261
  br i1 %554, label %555, label %556, !dbg !261

555:                                              ; preds = %553
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %482), !dbg !261
  br label %557, !dbg !261

556:                                              ; preds = %553
  store i16 1, i16* %549, align 2, !dbg !261
  br label %557, !dbg !261

557:                                              ; preds = %555, %556, %548
  %558 = load i32, i32* %479, align 4, !dbg !262
  %559 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 23, i32 4, !dbg !263
  %560 = load i32, i32* %559, align 4, !dbg !264
  %561 = load i32, i32* %495, align 4, !dbg !265
  %562 = getelementptr i32, i32* %486, i32 5, !dbg !266
  %563 = load i32, i32* %562, align 4, !dbg !267
  %564 = icmp sge i32 %561, %563, !dbg !268
  br i1 %564, label %565, label %605, !dbg !269

565:                                              ; preds = %557
  %566 = load i8*, i8** %496, align 8, !dbg !270
  %567 = ptrtoint i8* %566 to i64, !dbg !271
  %568 = getelementptr i32, i32* %486, i32 4, !dbg !272
  %569 = load i32, i32* %568, align 4, !dbg !273
  %570 = zext i32 %569 to i64, !dbg !274
  %571 = add i64 %567, %570, !dbg !275
  %572 = inttoptr i64 %571 to i8*, !dbg !276
  store i8* %572, i8** %478, align 8, !dbg !277
  %573 = load i32, i32* %479, align 4, !dbg !278
  %574 = icmp ult i32 %573, 12, !dbg !279
  br i1 %574, label %575, label %577, !dbg !280

575:                                              ; preds = %565
  %576 = call i32 @sqlite3VdbeSerialGet(i8* %572, i32 %573, %struct.sqlite3_value* %482), !dbg !281
  br label %726, !dbg !282

577:                                              ; preds = %565
  %578 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %578, align 2, !dbg !284
  %579 = getelementptr i16, i16* %578, i32 1, !dbg !285
  store i16 514, i16* %579, align 2, !dbg !286
  %580 = load i32, i32* %479, align 4, !dbg !287
  %581 = sub i32 %580, 12, !dbg !288
  %582 = lshr i32 %581, 1, !dbg !289
  %583 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 4, !dbg !290
  store i32 %582, i32* %583, align 4, !dbg !291
  %584 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 2, !dbg !292
  store i8 %474, i8* %584, align 1, !dbg !293
  %585 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 5, !dbg !294
  %586 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 7, !dbg !295
  %587 = load i32, i32* %586, align 4, !dbg !296
  %588 = add i32 %582, 2, !dbg !297
  %589 = icmp slt i32 %587, %588, !dbg !298
  br i1 %589, label %590, label %592, !dbg !299

590:                                              ; preds = %577
  store i16 1, i16* %549, align 2, !dbg !300
  %591 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %482, i32 %588, i32 0), !dbg !301
  br label %595, !dbg !302

592:                                              ; preds = %577
  %593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 6, !dbg !303
  %594 = load i8*, i8** %593, align 8, !dbg !304
  store i8* %594, i8** %585, align 8, !dbg !305
  br label %595, !dbg !306

595:                                              ; preds = %592, %590
  %596 = zext i32 %582 to i64, !dbg !307
  %597 = load i8*, i8** %585, align 8, !dbg !308
  %598 = load i8*, i8** %478, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %597, i8* %598, i64 %596, i1 false), !dbg !310
  %599 = getelementptr i8, i8* %597, i32 %582, !dbg !311
  store i8 0, i8* %599, align 1, !dbg !312
  %600 = add i32 %582, 1, !dbg !313
  %601 = getelementptr i8, i8* %597, i32 %600, !dbg !314
  store i8 0, i8* %601, align 1, !dbg !315
  %602 = and i32 %580, 1, !dbg !316
  %603 = getelementptr i16, i16* %578, i32 %602, !dbg !317
  %604 = load i16, i16* %603, align 2, !dbg !318
  store i16 %604, i16* %549, align 2, !dbg !319
  br label %726, !dbg !320

605:                                              ; preds = %557
  %606 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 2, !dbg !321
  store i8 %474, i8* %606, align 1, !dbg !322
  %607 = load i32, i32* %479, align 4, !dbg !323
  %608 = and i32 %607, 1, !dbg !324
  %609 = icmp eq i32 %608, 0, !dbg !325
  %610 = icmp sge i32 %607, 12, !dbg !326
  %611 = and i1 %610, %609, !dbg !327
  %612 = call i32 @sqlite3VdbeSerialTypeLen(i32 %607), !dbg !328
  %613 = icmp eq i32 %612, 0, !dbg !329
  br i1 %613, label %625, label %614, !dbg !330

614:                                              ; preds = %605
  %615 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 12, i32 0, !dbg !331
  %616 = load %struct.BtCursor*, %struct.BtCursor** %615, align 8, !dbg !332
  %617 = getelementptr i32, i32* %486, i32 4, !dbg !333
  %618 = load i32, i32* %617, align 4, !dbg !334
  %619 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %616, i32 %618, i32 %612, %struct.sqlite3_value* %482), !dbg !335
  %620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 5, !dbg !336
  %621 = load i8*, i8** %620, align 8, !dbg !337
  %622 = call i32 @sqlite3VdbeSerialGet(i8* %621, i32 %607, %struct.sqlite3_value* %482), !dbg !338
  %623 = load i16, i16* %549, align 2, !dbg !339
  %624 = and i16 %623, -4097, !dbg !340
  store i16 %624, i16* %549, align 2, !dbg !341
  br label %726, !dbg !342

625:                                              ; preds = %605
  %626 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %607, %struct.sqlite3_value* %482), !dbg !343
  br label %726, !dbg !344

627:                                              ; preds = %545
  %628 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 23, i32 4, !dbg !345
  %629 = load i32, i32* %628, align 4, !dbg !346
  store i32 %629, i32* %479, align 4, !dbg !347
  br label %548, !dbg !348

630:                                              ; preds = %545
  %631 = load i32, i32* %493, align 4, !dbg !349
  %632 = load i32, i32* %486, align 4, !dbg !350
  %633 = icmp ult i32 %631, %632, !dbg !351
  br i1 %633, label %634, label %715, !dbg !352

634:                                              ; preds = %630
  %635 = load i8*, i8** %496, align 8, !dbg !353
  %636 = icmp eq i8* %635, null, !dbg !354
  br i1 %636, label %638, label %637, !dbg !355

637:                                              ; preds = %634
  store i8* %635, i8** %478, align 8, !dbg !356
  br label %638, !dbg !357

638:                                              ; preds = %637, %634, %518
  %639 = alloca i32, align 4, !dbg !358
  %640 = load i16, i16* %497, align 2, !dbg !359
  %641 = zext i16 %640 to i32, !dbg !360
  store i32 %641, i32* %639, align 4, !dbg !361
  %642 = alloca i64, align 8, !dbg !362
  %643 = getelementptr i32, i32* %486, i32 %641, !dbg !363
  %644 = load i32, i32* %643, align 4, !dbg !364
  %645 = zext i32 %644 to i64, !dbg !365
  store i64 %645, i64* %642, align 4, !dbg !366
  %646 = load i8*, i8** %478, align 8, !dbg !367
  %647 = load i32, i32* %493, align 4, !dbg !368
  %648 = alloca i8*, align 8, !dbg !369
  %649 = getelementptr i8, i8* %646, i32 %647, !dbg !370
  store i8* %649, i8** %648, align 8, !dbg !371
  %650 = load i32, i32* %486, align 4, !dbg !372
  %651 = getelementptr i8, i8* %646, i32 %650, !dbg !373
  br label %652, !dbg !374

652:                                              ; preds = %659, %638
  %653 = load i32, i32* %639, align 4, !dbg !375
  %654 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %481, i32 0, i32 23, i32 %653, !dbg !376
  %655 = load i8*, i8** %648, align 8, !dbg !377
  %656 = load i8, i8* %655, align 1, !dbg !378
  %657 = zext i8 %656 to i32, !dbg !379
  store i32 %657, i32* %479, align 4, !dbg !380
  store i32 %657, i32* %654, align 4, !dbg !381
  %658 = icmp sgt i8 %656, -1, !dbg !382
  br i1 %658, label %682, label %673, !dbg !383

659:                                              ; preds = %673, %682
  %660 = load i32, i32* %639, align 4, !dbg !384
  %661 = add i32 %660, 1, !dbg !385
  store i32 %661, i32* %639, align 4, !dbg !386
  %662 = load i64, i64* %642, align 4, !dbg !387
  %663 = and i64 4294967295, %662, !dbg !388
  %664 = trunc i64 %663 to i32, !dbg !389
  %665 = getelementptr i32, i32* %486, i32 %661, !dbg !390
  store i32 %664, i32* %665, align 4, !dbg !391
  %666 = load i32, i32* %639, align 4, !dbg !392
  %667 = icmp sle i32 %666, 4, !dbg !393
  %668 = load i8*, i8** %648, align 8, !dbg !394
  %669 = ptrtoint i8* %668 to i64, !dbg !395
  %670 = ptrtoint i8* %651 to i64, !dbg !396
  %671 = icmp ult i64 %669, %670, !dbg !397
  %672 = and i1 %667, %671, !dbg !398
  br i1 %672, label %652, label %691, !dbg !399

673:                                              ; preds = %652
  %674 = load i8*, i8** %648, align 8, !dbg !400
  %675 = call i8 @sqlite3GetVarint32(i8* %674, i32* %479), !dbg !401
  %676 = getelementptr i8, i8* %674, i8 %675, !dbg !402
  store i8* %676, i8** %648, align 8, !dbg !403
  %677 = load i32, i32* %479, align 4, !dbg !404
  store i32 %677, i32* %654, align 4, !dbg !405
  %678 = load i64, i64* %642, align 4, !dbg !406
  %679 = call i32 @sqlite3VdbeSerialTypeLen(i32 %677), !dbg !407
  %680 = zext i32 %679 to i64, !dbg !408
  %681 = add i64 %678, %680, !dbg !409
  store i64 %681, i64* %642, align 4, !dbg !410
  br label %659, !dbg !411

682:                                              ; preds = %652
  %683 = getelementptr i8, i8* %655, i32 1, !dbg !412
  store i8* %683, i8** %648, align 8, !dbg !413
  %684 = load i32, i32* %479, align 4, !dbg !414
  %685 = trunc i32 %684 to i8, !dbg !415
  %686 = getelementptr i8, i8* %4, i8 %685, !dbg !416
  %687 = load i8, i8* %686, align 1, !dbg !417
  %688 = zext i8 %687 to i64, !dbg !418
  %689 = load i64, i64* %642, align 4, !dbg !419
  %690 = add i64 %689, %688, !dbg !420
  store i64 %690, i64* %642, align 4, !dbg !421
  br label %659, !dbg !422

691:                                              ; preds = %659
  %692 = load i64, i64* %642, align 4, !dbg !423
  %693 = load i32, i32* %494, align 4, !dbg !424
  %694 = zext i32 %693 to i64, !dbg !425
  %695 = icmp uge i64 %669, %670, !dbg !426
  %696 = icmp ugt i64 %669, %670, !dbg !427
  %697 = icmp ne i64 %692, %694, !dbg !428
  %698 = icmp ugt i64 %692, %694, !dbg !429
  %699 = or i1 %696, %697, !dbg !430
  %700 = and i1 %695, %699, !dbg !431
  %701 = or i1 %700, %698, !dbg !432
  br i1 %701, label %702, label %706, !dbg !433

702:                                              ; preds = %691
  %703 = load i32, i32* %486, align 4, !dbg !434
  %704 = icmp eq i32 %703, 0, !dbg !435
  br i1 %704, label %705, label %706, !dbg !436

705:                                              ; preds = %702
  store i32 0, i32* %639, align 4, !dbg !437
  store i8* %651, i8** %648, align 8, !dbg !438
  br label %706, !dbg !439

706:                                              ; preds = %705, %702, %691
  %707 = load i32, i32* %639, align 4, !dbg !440
  %708 = trunc i32 %707 to i16, !dbg !441
  store i16 %708, i16* %497, align 2, !dbg !442
  %709 = load i8*, i8** %648, align 8, !dbg !443
  %710 = ptrtoint i8* %709 to i64, !dbg !444
  %711 = load i8*, i8** %478, align 8, !dbg !445
  %712 = ptrtoint i8* %711 to i64, !dbg !446
  %713 = sub i64 %710, %712, !dbg !447
  %714 = trunc i64 %713 to i32, !dbg !448
  store i32 %714, i32* %493, align 4, !dbg !449
  br label %716, !dbg !450

715:                                              ; preds = %630
  store i32 0, i32* %479, align 4, !dbg !451
  br label %716, !dbg !452

716:                                              ; preds = %706, %715
  %717 = load i16, i16* %497, align 2, !dbg !453
  %718 = icmp sle i16 %717, 4, !dbg !454
  br i1 %718, label %719, label %548, !dbg !455

719:                                              ; preds = %716
  %720 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %482, i32 0, i32 1, !dbg !456
  %721 = load i16, i16* %720, align 2, !dbg !456
  %722 = and i16 %721, 9216, !dbg !456
  %723 = icmp ne i16 %722, 0, !dbg !456
  br i1 %723, label %724, label %725, !dbg !456

724:                                              ; preds = %719
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %482), !dbg !456
  br label %726, !dbg !456

725:                                              ; preds = %719
  store i16 1, i16* %720, align 2, !dbg !456
  br label %726, !dbg !456

726:                                              ; preds = %724, %725, %595, %575, %614, %625, %543, %544
  call void @llvm.stackrestore(i8* %472), !dbg !457
  br label %727, !dbg !74

727:                                              ; preds = %14, %726
  %728 = call i8* @llvm.stacksave(), !dbg !458
  %729 = alloca i32, align 8, !dbg !461
  %730 = alloca i64, align 8, !dbg !462
  %731 = alloca i32, align 8, !dbg !463
  %732 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 14, !dbg !464
  %733 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %732, i32 0, i32 1, !dbg !465
  %734 = load i16, i16* %733, align 2, !dbg !466
  %735 = and i16 %734, 36, !dbg !467
  %736 = icmp eq i16 %735, 0, !dbg !468
  br i1 %736, label %737, label %748, !dbg !469

737:                                              ; preds = %727
  %738 = alloca %struct.sqlite3_value, align 8, !dbg !470
  %739 = load %struct.sqlite3_value, %struct.sqlite3_value* %732, align 8, !dbg !471
  store %struct.sqlite3_value %739, %struct.sqlite3_value* %738, align 8, !dbg !471
  call void @applyAffinity(%struct.sqlite3_value* %738, i8 67, i8 1), !dbg !472
  %740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %738, i32 0, i32 1, !dbg !473
  %741 = load i16, i16* %740, align 2, !dbg !474
  %742 = and i16 %741, 4, !dbg !475
  %743 = icmp eq i16 %742, 0, !dbg !476
  br i1 %743, label %4897, label %744, !dbg !477

744:                                              ; preds = %737
  %745 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %738, i32 0, i32 0, !dbg !478
  %746 = bitcast %union.MemValue* %745 to i64*, !dbg !479
  %747 = load i64, i64* %746, align 4, !dbg !480
  store i64 %747, i64* %730, align 4, !dbg !481
  br label %752, !dbg !482

748:                                              ; preds = %727
  %749 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %732, i32 0, i32 0, !dbg !483
  %750 = bitcast %union.MemValue* %749 to i64*, !dbg !484
  %751 = load i64, i64* %750, align 4, !dbg !485
  store i64 %751, i64* %730, align 4, !dbg !486
  br label %752, !dbg !487

752:                                              ; preds = %748, %744
  %753 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !488
  %754 = load %struct.VdbeCursor*, %struct.VdbeCursor** %753, align 8, !dbg !489
  %755 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 12, i32 0, !dbg !490
  %756 = load %struct.BtCursor*, %struct.BtCursor** %755, align 8, !dbg !491
  store i32 0, i32* %729, align 4, !dbg !492
  %757 = load i64, i64* %730, align 4, !dbg !493
  %758 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %756, %struct.UnpackedRecord* null, i64 %757, i32 0, i32* %729), !dbg !494
  store i32 %758, i32* %731, align 4, !dbg !495
  %759 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 18, !dbg !496
  store i64 %757, i64* %759, align 4, !dbg !497
  %760 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 2, !dbg !498
  store i8 0, i8* %760, align 1, !dbg !499
  %761 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 9, !dbg !500
  store i32 0, i32* %761, align 4, !dbg !501
  %762 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 3, !dbg !502
  store i8 0, i8* %762, align 1, !dbg !503
  %763 = load i32, i32* %729, align 4, !dbg !504
  %764 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %754, i32 0, i32 10, !dbg !505
  store i32 %763, i32* %764, align 4, !dbg !506
  %765 = icmp ne i32 %763, 0, !dbg !507
  br i1 %765, label %766, label %767, !dbg !508

766:                                              ; preds = %752
  call void @llvm.stackrestore(i8* %728), !dbg !509
  br label %4897, !dbg !510

767:                                              ; preds = %752
  %768 = load i32, i32* %731, align 4, !dbg !511
  call void @llvm.stackrestore(i8* %728), !dbg !512
  br label %769, !dbg !513

769:                                              ; preds = %14, %767
  %770 = call i8* @llvm.stacksave(), !dbg !166
  %771 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %772 = load i8, i8* %771, align 1, !dbg !170
  %773 = alloca i32, align 4, !dbg !171
  store i32 3, i32* %773, align 4, !dbg !172
  %774 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 3, !dbg !514
  %775 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %776 = load %struct.VdbeCursor*, %struct.VdbeCursor** %774, align 8, !dbg !174
  store %struct.VdbeCursor* %776, %struct.VdbeCursor** %775, align 8, !dbg !175
  %777 = alloca i8*, align 8, !dbg !176
  %778 = alloca i32, align 4, !dbg !177
  %779 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %775, i32* %773), !dbg !178
  %780 = load %struct.VdbeCursor*, %struct.VdbeCursor** %775, align 8, !dbg !179
  %781 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !180
  %782 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 16, !dbg !181
  %783 = load i16, i16* %782, align 2, !dbg !182
  %784 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 19, !dbg !183
  %785 = load i32*, i32** %784, align 8, !dbg !184
  %786 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 0, !dbg !185
  %787 = load i8, i8* %786, align 1, !dbg !186
  %788 = icmp ne i8 %787, 3, !dbg !187
  %789 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 2, !dbg !188
  %790 = load i8, i8* %789, align 1, !dbg !189
  %791 = icmp ne i8 %790, 0, !dbg !190
  %792 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 14, !dbg !191
  %793 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 21, !dbg !192
  %794 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 22, !dbg !193
  %795 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 20, !dbg !194
  %796 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 17, !dbg !195
  %797 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 9, !dbg !196
  %798 = load i32, i32* %797, align 4, !dbg !197
  %799 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %800 = load i32, i32* %799, align 4, !dbg !199
  %801 = icmp ne i32 %798, %800, !dbg !200
  br i1 %801, label %802, label %844, !dbg !201

802:                                              ; preds = %769
  br i1 %791, label %824, label %819, !dbg !202

803:                                              ; preds = %819, %826
  %804 = load i32, i32* %799, align 4, !dbg !203
  store i32 %804, i32* %797, align 4, !dbg !204
  %805 = load i8*, i8** %795, align 8, !dbg !205
  %806 = load i8, i8* %805, align 1, !dbg !206
  %807 = icmp sgt i8 %806, -1, !dbg !209
  br i1 %807, label %808, label %810, !dbg !210

808:                                              ; preds = %803
  %809 = zext i8 %806 to i32, !dbg !211
  store i32 %809, i32* %785, align 4, !dbg !212
  store i32 1, i32* %792, align 4, !dbg !213
  br label %813, !dbg !214

810:                                              ; preds = %803
  %811 = call i8 @sqlite3GetVarint32(i8* %805, i32* %785), !dbg !215
  %812 = zext i8 %811 to i32, !dbg !216
  store i32 %812, i32* %792, align 4, !dbg !217
  br label %813, !dbg !218

813:                                              ; preds = %810, %808
  store i16 0, i16* %796, align 2, !dbg !219
  %814 = load i32, i32* %794, align 4, !dbg !220
  %815 = load i32, i32* %785, align 4, !dbg !221
  %816 = icmp ult i32 %814, %815, !dbg !222
  br i1 %816, label %818, label %817, !dbg !223

817:                                              ; preds = %813
  store i8* %805, i8** %777, align 8, !dbg !224
  br label %937, !dbg !225

818:                                              ; preds = %813
  store i8* null, i8** %795, align 8, !dbg !226
  store i32 0, i32* %794, align 4, !dbg !227
  br label %844, !dbg !228

819:                                              ; preds = %802
  %820 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 12, i32 0, !dbg !229
  %821 = load %struct.BtCursor*, %struct.BtCursor** %820, align 8, !dbg !230
  %822 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %821), !dbg !231
  store i32 %822, i32* %793, align 4, !dbg !232
  %823 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %821, i32* %794), !dbg !233
  store i8* %823, i8** %795, align 8, !dbg !234
  br label %803, !dbg !235

824:                                              ; preds = %802
  %825 = icmp eq i8 %787, 3, !dbg !236
  br i1 %825, label %826, label %837, !dbg !237

826:                                              ; preds = %824
  %827 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 10, !dbg !238
  %828 = load i32, i32* %827, align 4, !dbg !239
  %829 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %828, !dbg !240
  %830 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %829, i32 0, i32 1, !dbg !241
  %831 = load i16, i16* %830, align 2, !dbg !242
  %832 = and i16 %831, 16, !dbg !243
  %833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %829, i32 0, i32 4, !dbg !244
  %834 = load i32, i32* %833, align 4, !dbg !245
  store i32 %834, i32* %793, align 4, !dbg !246
  store i32 %834, i32* %794, align 4, !dbg !247
  %835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %829, i32 0, i32 5, !dbg !248
  %836 = load i8*, i8** %835, align 8, !dbg !249
  store i8* %836, i8** %795, align 8, !dbg !250
  br label %803, !dbg !251

837:                                              ; preds = %824
  %838 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 1, !dbg !252
  %839 = load i16, i16* %838, align 2, !dbg !252
  %840 = and i16 %839, 9216, !dbg !252
  %841 = icmp ne i16 %840, 0, !dbg !252
  br i1 %841, label %842, label %843, !dbg !252

842:                                              ; preds = %837
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %781), !dbg !252
  br label %1025, !dbg !252

843:                                              ; preds = %837
  store i16 1, i16* %838, align 2, !dbg !252
  br label %1025, !dbg !252

844:                                              ; preds = %818, %769
  %845 = load i16, i16* %796, align 2, !dbg !253
  %846 = icmp ule i16 %845, 5, !dbg !254
  br i1 %846, label %929, label %926, !dbg !255

847:                                              ; preds = %926, %1015
  %848 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 1, !dbg !256
  %849 = load i16, i16* %848, align 2, !dbg !257
  %850 = and i16 9216, %849, !dbg !258
  %851 = icmp eq i16 0, %850, !dbg !259
  br i1 %851, label %852, label %856, !dbg !260

852:                                              ; preds = %847
  %853 = icmp ne i16 %850, 0, !dbg !261
  br i1 %853, label %854, label %855, !dbg !261

854:                                              ; preds = %852
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %781), !dbg !261
  br label %856, !dbg !261

855:                                              ; preds = %852
  store i16 1, i16* %848, align 2, !dbg !261
  br label %856, !dbg !261

856:                                              ; preds = %854, %855, %847
  %857 = load i32, i32* %778, align 4, !dbg !262
  %858 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 23, i32 5, !dbg !263
  %859 = load i32, i32* %858, align 4, !dbg !264
  %860 = load i32, i32* %794, align 4, !dbg !265
  %861 = getelementptr i32, i32* %785, i32 6, !dbg !266
  %862 = load i32, i32* %861, align 4, !dbg !267
  %863 = icmp sge i32 %860, %862, !dbg !268
  br i1 %863, label %864, label %904, !dbg !269

864:                                              ; preds = %856
  %865 = load i8*, i8** %795, align 8, !dbg !270
  %866 = ptrtoint i8* %865 to i64, !dbg !271
  %867 = getelementptr i32, i32* %785, i32 5, !dbg !272
  %868 = load i32, i32* %867, align 4, !dbg !273
  %869 = zext i32 %868 to i64, !dbg !274
  %870 = add i64 %866, %869, !dbg !275
  %871 = inttoptr i64 %870 to i8*, !dbg !276
  store i8* %871, i8** %777, align 8, !dbg !277
  %872 = load i32, i32* %778, align 4, !dbg !278
  %873 = icmp ult i32 %872, 12, !dbg !279
  br i1 %873, label %874, label %876, !dbg !280

874:                                              ; preds = %864
  %875 = call i32 @sqlite3VdbeSerialGet(i8* %871, i32 %872, %struct.sqlite3_value* %781), !dbg !281
  br label %1025, !dbg !282

876:                                              ; preds = %864
  %877 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %877, align 2, !dbg !284
  %878 = getelementptr i16, i16* %877, i32 1, !dbg !285
  store i16 514, i16* %878, align 2, !dbg !286
  %879 = load i32, i32* %778, align 4, !dbg !287
  %880 = sub i32 %879, 12, !dbg !288
  %881 = lshr i32 %880, 1, !dbg !289
  %882 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 4, !dbg !290
  store i32 %881, i32* %882, align 4, !dbg !291
  %883 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 2, !dbg !292
  store i8 %772, i8* %883, align 1, !dbg !293
  %884 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 5, !dbg !294
  %885 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 7, !dbg !295
  %886 = load i32, i32* %885, align 4, !dbg !296
  %887 = add i32 %881, 2, !dbg !297
  %888 = icmp slt i32 %886, %887, !dbg !298
  br i1 %888, label %889, label %891, !dbg !299

889:                                              ; preds = %876
  store i16 1, i16* %848, align 2, !dbg !300
  %890 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %781, i32 %887, i32 0), !dbg !301
  br label %894, !dbg !302

891:                                              ; preds = %876
  %892 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 6, !dbg !303
  %893 = load i8*, i8** %892, align 8, !dbg !304
  store i8* %893, i8** %884, align 8, !dbg !305
  br label %894, !dbg !306

894:                                              ; preds = %891, %889
  %895 = zext i32 %881 to i64, !dbg !307
  %896 = load i8*, i8** %884, align 8, !dbg !308
  %897 = load i8*, i8** %777, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %896, i8* %897, i64 %895, i1 false), !dbg !310
  %898 = getelementptr i8, i8* %896, i32 %881, !dbg !311
  store i8 0, i8* %898, align 1, !dbg !312
  %899 = add i32 %881, 1, !dbg !313
  %900 = getelementptr i8, i8* %896, i32 %899, !dbg !314
  store i8 0, i8* %900, align 1, !dbg !315
  %901 = and i32 %879, 1, !dbg !316
  %902 = getelementptr i16, i16* %877, i32 %901, !dbg !317
  %903 = load i16, i16* %902, align 2, !dbg !318
  store i16 %903, i16* %848, align 2, !dbg !319
  br label %1025, !dbg !320

904:                                              ; preds = %856
  %905 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 2, !dbg !321
  store i8 %772, i8* %905, align 1, !dbg !322
  %906 = load i32, i32* %778, align 4, !dbg !323
  %907 = and i32 %906, 1, !dbg !324
  %908 = icmp eq i32 %907, 0, !dbg !325
  %909 = icmp sge i32 %906, 12, !dbg !326
  %910 = and i1 %909, %908, !dbg !327
  %911 = call i32 @sqlite3VdbeSerialTypeLen(i32 %906), !dbg !328
  %912 = icmp eq i32 %911, 0, !dbg !329
  br i1 %912, label %924, label %913, !dbg !330

913:                                              ; preds = %904
  %914 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 12, i32 0, !dbg !331
  %915 = load %struct.BtCursor*, %struct.BtCursor** %914, align 8, !dbg !332
  %916 = getelementptr i32, i32* %785, i32 5, !dbg !333
  %917 = load i32, i32* %916, align 4, !dbg !334
  %918 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %915, i32 %917, i32 %911, %struct.sqlite3_value* %781), !dbg !335
  %919 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 5, !dbg !336
  %920 = load i8*, i8** %919, align 8, !dbg !337
  %921 = call i32 @sqlite3VdbeSerialGet(i8* %920, i32 %906, %struct.sqlite3_value* %781), !dbg !338
  %922 = load i16, i16* %848, align 2, !dbg !339
  %923 = and i16 %922, -4097, !dbg !340
  store i16 %923, i16* %848, align 2, !dbg !341
  br label %1025, !dbg !342

924:                                              ; preds = %904
  %925 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %906, %struct.sqlite3_value* %781), !dbg !343
  br label %1025, !dbg !344

926:                                              ; preds = %844
  %927 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 23, i32 5, !dbg !345
  %928 = load i32, i32* %927, align 4, !dbg !346
  store i32 %928, i32* %778, align 4, !dbg !347
  br label %847, !dbg !348

929:                                              ; preds = %844
  %930 = load i32, i32* %792, align 4, !dbg !349
  %931 = load i32, i32* %785, align 4, !dbg !350
  %932 = icmp ult i32 %930, %931, !dbg !351
  br i1 %932, label %933, label %1014, !dbg !352

933:                                              ; preds = %929
  %934 = load i8*, i8** %795, align 8, !dbg !353
  %935 = icmp eq i8* %934, null, !dbg !354
  br i1 %935, label %937, label %936, !dbg !355

936:                                              ; preds = %933
  store i8* %934, i8** %777, align 8, !dbg !356
  br label %937, !dbg !357

937:                                              ; preds = %936, %933, %817
  %938 = alloca i32, align 4, !dbg !358
  %939 = load i16, i16* %796, align 2, !dbg !359
  %940 = zext i16 %939 to i32, !dbg !360
  store i32 %940, i32* %938, align 4, !dbg !361
  %941 = alloca i64, align 8, !dbg !362
  %942 = getelementptr i32, i32* %785, i32 %940, !dbg !363
  %943 = load i32, i32* %942, align 4, !dbg !364
  %944 = zext i32 %943 to i64, !dbg !365
  store i64 %944, i64* %941, align 4, !dbg !366
  %945 = load i8*, i8** %777, align 8, !dbg !367
  %946 = load i32, i32* %792, align 4, !dbg !368
  %947 = alloca i8*, align 8, !dbg !369
  %948 = getelementptr i8, i8* %945, i32 %946, !dbg !370
  store i8* %948, i8** %947, align 8, !dbg !371
  %949 = load i32, i32* %785, align 4, !dbg !372
  %950 = getelementptr i8, i8* %945, i32 %949, !dbg !373
  br label %951, !dbg !374

951:                                              ; preds = %958, %937
  %952 = load i32, i32* %938, align 4, !dbg !375
  %953 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %780, i32 0, i32 23, i32 %952, !dbg !376
  %954 = load i8*, i8** %947, align 8, !dbg !377
  %955 = load i8, i8* %954, align 1, !dbg !378
  %956 = zext i8 %955 to i32, !dbg !379
  store i32 %956, i32* %778, align 4, !dbg !380
  store i32 %956, i32* %953, align 4, !dbg !381
  %957 = icmp sgt i8 %955, -1, !dbg !382
  br i1 %957, label %981, label %972, !dbg !383

958:                                              ; preds = %972, %981
  %959 = load i32, i32* %938, align 4, !dbg !384
  %960 = add i32 %959, 1, !dbg !385
  store i32 %960, i32* %938, align 4, !dbg !386
  %961 = load i64, i64* %941, align 4, !dbg !387
  %962 = and i64 4294967295, %961, !dbg !388
  %963 = trunc i64 %962 to i32, !dbg !389
  %964 = getelementptr i32, i32* %785, i32 %960, !dbg !390
  store i32 %963, i32* %964, align 4, !dbg !391
  %965 = load i32, i32* %938, align 4, !dbg !392
  %966 = icmp sle i32 %965, 5, !dbg !393
  %967 = load i8*, i8** %947, align 8, !dbg !394
  %968 = ptrtoint i8* %967 to i64, !dbg !395
  %969 = ptrtoint i8* %950 to i64, !dbg !396
  %970 = icmp ult i64 %968, %969, !dbg !397
  %971 = and i1 %966, %970, !dbg !398
  br i1 %971, label %951, label %990, !dbg !399

972:                                              ; preds = %951
  %973 = load i8*, i8** %947, align 8, !dbg !400
  %974 = call i8 @sqlite3GetVarint32(i8* %973, i32* %778), !dbg !401
  %975 = getelementptr i8, i8* %973, i8 %974, !dbg !402
  store i8* %975, i8** %947, align 8, !dbg !403
  %976 = load i32, i32* %778, align 4, !dbg !404
  store i32 %976, i32* %953, align 4, !dbg !405
  %977 = load i64, i64* %941, align 4, !dbg !406
  %978 = call i32 @sqlite3VdbeSerialTypeLen(i32 %976), !dbg !407
  %979 = zext i32 %978 to i64, !dbg !408
  %980 = add i64 %977, %979, !dbg !409
  store i64 %980, i64* %941, align 4, !dbg !410
  br label %958, !dbg !411

981:                                              ; preds = %951
  %982 = getelementptr i8, i8* %954, i32 1, !dbg !412
  store i8* %982, i8** %947, align 8, !dbg !413
  %983 = load i32, i32* %778, align 4, !dbg !414
  %984 = trunc i32 %983 to i8, !dbg !415
  %985 = getelementptr i8, i8* %4, i8 %984, !dbg !416
  %986 = load i8, i8* %985, align 1, !dbg !417
  %987 = zext i8 %986 to i64, !dbg !418
  %988 = load i64, i64* %941, align 4, !dbg !419
  %989 = add i64 %988, %987, !dbg !420
  store i64 %989, i64* %941, align 4, !dbg !421
  br label %958, !dbg !422

990:                                              ; preds = %958
  %991 = load i64, i64* %941, align 4, !dbg !423
  %992 = load i32, i32* %793, align 4, !dbg !424
  %993 = zext i32 %992 to i64, !dbg !425
  %994 = icmp uge i64 %968, %969, !dbg !426
  %995 = icmp ugt i64 %968, %969, !dbg !427
  %996 = icmp ne i64 %991, %993, !dbg !428
  %997 = icmp ugt i64 %991, %993, !dbg !429
  %998 = or i1 %995, %996, !dbg !430
  %999 = and i1 %994, %998, !dbg !431
  %1000 = or i1 %999, %997, !dbg !432
  br i1 %1000, label %1001, label %1005, !dbg !433

1001:                                             ; preds = %990
  %1002 = load i32, i32* %785, align 4, !dbg !434
  %1003 = icmp eq i32 %1002, 0, !dbg !435
  br i1 %1003, label %1004, label %1005, !dbg !436

1004:                                             ; preds = %1001
  store i32 0, i32* %938, align 4, !dbg !437
  store i8* %950, i8** %947, align 8, !dbg !438
  br label %1005, !dbg !439

1005:                                             ; preds = %1004, %1001, %990
  %1006 = load i32, i32* %938, align 4, !dbg !440
  %1007 = trunc i32 %1006 to i16, !dbg !441
  store i16 %1007, i16* %796, align 2, !dbg !442
  %1008 = load i8*, i8** %947, align 8, !dbg !443
  %1009 = ptrtoint i8* %1008 to i64, !dbg !444
  %1010 = load i8*, i8** %777, align 8, !dbg !445
  %1011 = ptrtoint i8* %1010 to i64, !dbg !446
  %1012 = sub i64 %1009, %1011, !dbg !447
  %1013 = trunc i64 %1012 to i32, !dbg !448
  store i32 %1013, i32* %792, align 4, !dbg !449
  br label %1015, !dbg !450

1014:                                             ; preds = %929
  store i32 0, i32* %778, align 4, !dbg !451
  br label %1015, !dbg !452

1015:                                             ; preds = %1005, %1014
  %1016 = load i16, i16* %796, align 2, !dbg !453
  %1017 = icmp sle i16 %1016, 5, !dbg !454
  br i1 %1017, label %1018, label %847, !dbg !455

1018:                                             ; preds = %1015
  %1019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %781, i32 0, i32 1, !dbg !456
  %1020 = load i16, i16* %1019, align 2, !dbg !456
  %1021 = and i16 %1020, 9216, !dbg !456
  %1022 = icmp ne i16 %1021, 0, !dbg !456
  br i1 %1022, label %1023, label %1024, !dbg !456

1023:                                             ; preds = %1018
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %781), !dbg !456
  br label %1025, !dbg !456

1024:                                             ; preds = %1018
  store i16 1, i16* %1019, align 2, !dbg !456
  br label %1025, !dbg !456

1025:                                             ; preds = %1023, %1024, %894, %874, %913, %924, %842, %843
  call void @llvm.stackrestore(i8* %770), !dbg !457
  br label %1026, !dbg !74

1026:                                             ; preds = %14, %1025
  %1027 = call i8* @llvm.stacksave(), !dbg !515
  %1028 = alloca i32, align 8, !dbg !518
  %1029 = alloca i32, align 8, !dbg !519
  %1030 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 16, !dbg !520
  %1031 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !521
  %1032 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1030, i32 0, i32 1, !dbg !522
  %1033 = load i16, i16* %1032, align 2, !dbg !523
  %1034 = alloca i16, align 8, !dbg !524
  store i16 %1033, i16* %1034, align 2, !dbg !525
  %1035 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1031, i32 0, i32 1, !dbg !526
  %1036 = load i16, i16* %1035, align 2, !dbg !527
  %1037 = alloca i16, align 8, !dbg !528
  store i16 %1036, i16* %1037, align 2, !dbg !529
  %1038 = or i16 %1033, %1036, !dbg !530
  %1039 = and i16 %1038, 1, !dbg !531
  %1040 = icmp ne i16 %1039, 0, !dbg !532
  br i1 %1040, label %1041, label %1042, !dbg !533

1041:                                             ; preds = %1026
  call void @llvm.stackrestore(i8* %1027), !dbg !534
  br label %4897, !dbg !535

1042:                                             ; preds = %1026
  %1043 = and i16 %1033, 2, !dbg !536
  %1044 = and i16 %1033, 44, !dbg !537
  %1045 = icmp eq i16 %1043, 0, !dbg !538
  %1046 = icmp ne i16 %1044, 0, !dbg !539
  %1047 = and i16 %1036, 2, !dbg !540
  %1048 = and i16 %1036, 44, !dbg !541
  %1049 = icmp eq i16 %1047, 0, !dbg !542
  %1050 = icmp ne i16 %1048, 0, !dbg !543
  %1051 = and i1 %1045, %1046, !dbg !544
  br i1 %1051, label %1052, label %1058, !dbg !545

1052:                                             ; preds = %1042
  %1053 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1030, i8 1, i8 1), !dbg !546
  %1054 = load i16, i16* %1032, align 2, !dbg !547
  %1055 = and i16 %1054, 15936, !dbg !547
  %1056 = and i16 %1033, -15937, !dbg !548
  %1057 = or i16 %1055, %1056, !dbg !549
  store i16 %1057, i16* %1034, align 2, !dbg !550
  br label %1058, !dbg !551

1058:                                             ; preds = %1052, %1042
  %1059 = and i1 %1049, %1050, !dbg !552
  br i1 %1059, label %1060, label %1066, !dbg !553

1060:                                             ; preds = %1058
  %1061 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1031, i8 1, i8 1), !dbg !554
  %1062 = load i16, i16* %1035, align 2, !dbg !555
  %1063 = and i16 %1062, 15936, !dbg !555
  %1064 = and i16 %1036, -15937, !dbg !556
  %1065 = or i16 %1063, %1064, !dbg !557
  store i16 %1065, i16* %1037, align 2, !dbg !558
  br label %1066, !dbg !559

1066:                                             ; preds = %1060, %1058
  %1067 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 16, !dbg !560
  %1068 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1067, i32 0, i32 6, !dbg !561
  %1069 = bitcast %union.p4union* %1068 to %struct.CollSeq**, !dbg !562
  %1070 = load %struct.CollSeq*, %struct.CollSeq** %1069, align 8, !dbg !563
  %1071 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %1031, %struct.sqlite3_value* %1030, %struct.CollSeq* %1070), !dbg !564
  store i32 %1071, i32* %1028, align 4, !dbg !565
  %1072 = icmp slt i32 %1071, 0, !dbg !566
  br i1 %1072, label %1073, label %1074, !dbg !567

1073:                                             ; preds = %1066
  store i32 1, i32* %1029, align 4, !dbg !568
  br label %1078, !dbg !569

1074:                                             ; preds = %1066
  %1075 = icmp eq i32 %1071, 0, !dbg !570
  br i1 %1075, label %1076, label %1077, !dbg !571

1076:                                             ; preds = %1074
  store i32 0, i32* %1029, align 4, !dbg !572
  br label %1078, !dbg !573

1077:                                             ; preds = %1074
  store i32 1, i32* %1029, align 4, !dbg !574
  br label %1078, !dbg !575

1078:                                             ; preds = %1077, %1076, %1073
  store i16 %1036, i16* %1037, align 2, !dbg !576
  store i16 %1033, i16* %1034, align 2, !dbg !577
  %1079 = load i32, i32* %1029, align 4, !dbg !578
  %1080 = icmp ne i32 %1079, 0, !dbg !579
  call void @llvm.stackrestore(i8* %1027), !dbg !580
  br i1 %1080, label %4897, label %1081, !dbg !581

1081:                                             ; preds = %14, %1078
  %1082 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 43, !dbg !582
  %1083 = load %struct.VdbeFrame*, %struct.VdbeFrame** %1082, align 8, !dbg !585
  %1084 = ptrtoint %struct.VdbeFrame* %1083 to i64, !dbg !586
  %1085 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 0, i32 3, !dbg !587
  %1086 = load i32, i32* %1085, align 4, !dbg !588
  %1087 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 17, i32 3, !dbg !589
  %1088 = icmp ne i64 %1084, 0, !dbg !590
  br i1 %1088, label %1089, label %1093, !dbg !591

1089:                                             ; preds = %1081
  %1090 = getelementptr %struct.VdbeFrame, %struct.VdbeFrame* %1083, i32 0, i32 6, !dbg !592
  %1091 = load i8*, i8** %1090, align 8, !dbg !593
  %1092 = getelementptr i8, i8* %1091, i32 2, !dbg !594
  br label %2892, !dbg !595

1093:                                             ; preds = %1081
  %1094 = load i32, i32* %1087, align 4, !dbg !596
  %1095 = icmp eq i32 %1094, %1086, !dbg !597
  br i1 %1095, label %2892, label %1096, !dbg !598

1096:                                             ; preds = %1093
  store i32 %1086, i32* %1087, align 4, !dbg !599
  br label %1097, !dbg !600

1097:                                             ; preds = %14, %1096
  %1098 = call i8* @llvm.stacksave(), !dbg !601
  %1099 = alloca %struct.VdbeCursor*, align 8, !dbg !604
  %1100 = alloca i32, align 8, !dbg !605
  %1101 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !606
  %1102 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1101, align 8, !dbg !607
  store %struct.VdbeCursor* %1102, %struct.VdbeCursor** %1099, align 8, !dbg !608
  %1103 = icmp ne %struct.VdbeCursor* %1102, null, !dbg !609
  br i1 %1103, label %1104, label %1114, !dbg !610

1104:                                             ; preds = %1097
  %1105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1102, i32 0, i32 6, !dbg !611
  %1106 = load %struct.Btree*, %struct.Btree** %1105, align 8, !dbg !612
  %1107 = icmp ne %struct.Btree* %1106, null, !dbg !613
  br i1 %1107, label %1108, label %1114, !dbg !614

1108:                                             ; preds = %1104
  %1109 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1102, i32 0, i32 7, !dbg !615
  store i64 0, i64* %1109, align 4, !dbg !616
  %1110 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1102, i32 0, i32 9, !dbg !617
  store i32 0, i32* %1110, align 4, !dbg !618
  %1111 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1102, i32 0, i32 15, !dbg !619
  %1112 = load i32, i32* %1111, align 4, !dbg !620
  %1113 = call i32 @sqlite3BtreeClearTable(%struct.Btree* %1106, i32 %1112, i32* null), !dbg !621
  store i32 %1113, i32* %1100, align 4, !dbg !622
  br label %1159, !dbg !623

1114:                                             ; preds = %1104, %1097
  %1115 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 6, i32 4, i32 -1, i8 0), !dbg !624
  store %struct.VdbeCursor* %1115, %struct.VdbeCursor** %1099, align 8, !dbg !625
  %1116 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 5, !dbg !626
  %1117 = load i8, i8* %1116, align 1, !dbg !627
  %1118 = or i8 %1117, 1, !dbg !628
  store i8 %1118, i8* %1116, align 1, !dbg !629
  %1119 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 0, !dbg !630
  %1120 = load %struct.sqlite3_vfs*, %struct.sqlite3_vfs** %1119, align 8, !dbg !631
  %1121 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 6, !dbg !632
  %1122 = call i32 @sqlite3BtreeOpen(%struct.sqlite3_vfs* %1120, i8* null, %struct.sqlite3* %13, %struct.Btree** %1121, i32 5, i32 1054), !dbg !633
  store i32 %1122, i32* %1100, align 4, !dbg !634
  %1123 = icmp eq i32 %1122, 0, !dbg !635
  br i1 %1123, label %1124, label %1127, !dbg !636

1124:                                             ; preds = %1114
  %1125 = load %struct.Btree*, %struct.Btree** %1121, align 8, !dbg !637
  %1126 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %1125, i32 1, i32* null), !dbg !638
  store i32 %1126, i32* %1100, align 4, !dbg !639
  br label %1127, !dbg !640

1127:                                             ; preds = %1124, %1114
  %1128 = load i32, i32* %1100, align 4, !dbg !641
  %1129 = icmp eq i32 %1128, 0, !dbg !642
  br i1 %1129, label %1130, label %1154, !dbg !643

1130:                                             ; preds = %1127
  %1131 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 18, !dbg !644
  %1132 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1131, i32 0, i32 6, !dbg !645
  %1133 = bitcast %union.p4union* %1132 to %struct.KeyInfo**, !dbg !646
  %1134 = load %struct.KeyInfo*, %struct.KeyInfo** %1133, align 8, !dbg !647
  %1135 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 13, !dbg !648
  store %struct.KeyInfo* %1134, %struct.KeyInfo** %1135, align 8, !dbg !649
  %1136 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 15, !dbg !650
  %1137 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 12, i32 0, !dbg !651
  %1138 = icmp ne %struct.KeyInfo* %1134, null, !dbg !652
  br i1 %1138, label %1139, label %1149, !dbg !653

1139:                                             ; preds = %1130
  %1140 = load %struct.Btree*, %struct.Btree** %1121, align 8, !dbg !654
  %1141 = call i32 @sqlite3BtreeCreateTable(%struct.Btree* %1140, i32* %1136, i32 2), !dbg !655
  store i32 %1141, i32* %1100, align 4, !dbg !656
  %1142 = icmp eq i32 %1141, 0, !dbg !657
  br i1 %1142, label %1143, label %1147, !dbg !658

1143:                                             ; preds = %1139
  %1144 = load %struct.BtCursor*, %struct.BtCursor** %1137, align 8, !dbg !659
  %1145 = load i32, i32* %1136, align 4, !dbg !660
  %1146 = call i32 @sqlite3BtreeCursor(%struct.Btree* %1140, i32 %1145, i32 4, %struct.KeyInfo* %1134, %struct.BtCursor* %1144), !dbg !661
  store i32 %1146, i32* %1100, align 4, !dbg !662
  br label %1147, !dbg !663

1147:                                             ; preds = %1143, %1139
  %1148 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 4, !dbg !664
  store i8 0, i8* %1148, align 1, !dbg !665
  br label %1154, !dbg !666

1149:                                             ; preds = %1130
  store i32 1, i32* %1136, align 4, !dbg !667
  %1150 = load %struct.BtCursor*, %struct.BtCursor** %1137, align 8, !dbg !668
  %1151 = load %struct.Btree*, %struct.Btree** %1121, align 8, !dbg !669
  %1152 = call i32 @sqlite3BtreeCursor(%struct.Btree* %1151, i32 1, i32 4, %struct.KeyInfo* null, %struct.BtCursor* %1150), !dbg !670
  store i32 %1152, i32* %1100, align 4, !dbg !671
  %1153 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1115, i32 0, i32 4, !dbg !672
  store i8 1, i8* %1153, align 1, !dbg !673
  br label %1154, !dbg !674

1154:                                             ; preds = %1147, %1149, %1127
  %1155 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1099, align 8, !dbg !675
  %1156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1155, i32 0, i32 5, !dbg !676
  %1157 = load i8, i8* %1156, align 1, !dbg !677
  %1158 = or i8 %1157, 1, !dbg !678
  store i8 %1158, i8* %1156, align 1, !dbg !679
  br label %1159, !dbg !680

1159:                                             ; preds = %1154, %1108
  %1160 = load i32, i32* %1100, align 4, !dbg !681
  %1161 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1099, align 8, !dbg !682
  %1162 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1161, i32 0, i32 2, !dbg !683
  store i8 1, i8* %1162, align 1, !dbg !684
  call void @llvm.stackrestore(i8* %1098), !dbg !685
  br label %1163, !dbg !74

1163:                                             ; preds = %14, %1159
  %1164 = call i8* @llvm.stacksave(), !dbg !133
  %1165 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %1166 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %1165, i32 2, !dbg !686
  %1167 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1166, align 8, !dbg !137
  %1168 = alloca i32, align 4, !dbg !138
  store i32 1, i32* %1168, align 4, !dbg !139
  %1169 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1167, i32 0, i32 0, !dbg !140
  %1170 = load i8, i8* %1169, align 1, !dbg !141
  %1171 = icmp eq i8 %1170, 1, !dbg !142
  %1172 = alloca i32, align 4, !dbg !143
  store i32 0, i32* %1172, align 4, !dbg !144
  br i1 %1171, label %1173, label %1175, !dbg !145

1173:                                             ; preds = %1163
  %1174 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %1167, i32* %1168), !dbg !146
  store i32 %1174, i32* %1172, align 4, !dbg !147
  br label %1181, !dbg !148

1175:                                             ; preds = %1163
  %1176 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1167, i32 0, i32 12, i32 0, !dbg !149
  %1177 = load %struct.BtCursor*, %struct.BtCursor** %1176, align 8, !dbg !150
  %1178 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %1177, i32* %1168), !dbg !151
  store i32 %1178, i32* %1172, align 4, !dbg !152
  %1179 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1167, i32 0, i32 3, !dbg !153
  store i8 0, i8* %1179, align 1, !dbg !154
  %1180 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1167, i32 0, i32 9, !dbg !155
  store i32 0, i32* %1180, align 4, !dbg !156
  br label %1181, !dbg !157

1181:                                             ; preds = %1175, %1173
  %1182 = load i32, i32* %1172, align 4, !dbg !158
  %1183 = load i32, i32* %1168, align 4, !dbg !159
  %1184 = trunc i32 %1183 to i8, !dbg !160
  %1185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1167, i32 0, i32 2, !dbg !161
  store i8 %1184, i8* %1185, align 1, !dbg !162
  call void @llvm.stackrestore(i8* %1164), !dbg !163
  %1186 = icmp ne i32 %1183, 0, !dbg !164
  br i1 %1186, label %2892, label %1187, !dbg !165

1187:                                             ; preds = %14, %2890, %1181
  %1188 = call i8* @llvm.stacksave(), !dbg !166
  %1189 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %1190 = load i8, i8* %1189, align 1, !dbg !170
  %1191 = alloca i32, align 4, !dbg !171
  store i32 2, i32* %1191, align 4, !dbg !172
  %1192 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !514
  %1193 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %1194 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1192, align 8, !dbg !174
  store %struct.VdbeCursor* %1194, %struct.VdbeCursor** %1193, align 8, !dbg !175
  %1195 = alloca i8*, align 8, !dbg !176
  %1196 = alloca i32, align 4, !dbg !177
  %1197 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1193, i32* %1191), !dbg !178
  %1198 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1193, align 8, !dbg !179
  %1199 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !180
  %1200 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 16, !dbg !181
  %1201 = load i16, i16* %1200, align 2, !dbg !182
  %1202 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 19, !dbg !183
  %1203 = load i32*, i32** %1202, align 8, !dbg !184
  %1204 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 0, !dbg !185
  %1205 = load i8, i8* %1204, align 1, !dbg !186
  %1206 = icmp ne i8 %1205, 3, !dbg !187
  %1207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 2, !dbg !188
  %1208 = load i8, i8* %1207, align 1, !dbg !189
  %1209 = icmp ne i8 %1208, 0, !dbg !190
  %1210 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 14, !dbg !191
  %1211 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 21, !dbg !192
  %1212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 22, !dbg !193
  %1213 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 20, !dbg !194
  %1214 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 17, !dbg !195
  %1215 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 9, !dbg !196
  %1216 = load i32, i32* %1215, align 4, !dbg !197
  %1217 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %1218 = load i32, i32* %1217, align 4, !dbg !199
  %1219 = icmp ne i32 %1216, %1218, !dbg !200
  br i1 %1219, label %1220, label %1262, !dbg !201

1220:                                             ; preds = %1187
  br i1 %1209, label %1242, label %1237, !dbg !202

1221:                                             ; preds = %1237, %1244
  %1222 = load i32, i32* %1217, align 4, !dbg !203
  store i32 %1222, i32* %1215, align 4, !dbg !204
  %1223 = load i8*, i8** %1213, align 8, !dbg !205
  %1224 = load i8, i8* %1223, align 1, !dbg !206
  %1225 = icmp sgt i8 %1224, -1, !dbg !209
  br i1 %1225, label %1226, label %1228, !dbg !210

1226:                                             ; preds = %1221
  %1227 = zext i8 %1224 to i32, !dbg !211
  store i32 %1227, i32* %1203, align 4, !dbg !212
  store i32 1, i32* %1210, align 4, !dbg !213
  br label %1231, !dbg !214

1228:                                             ; preds = %1221
  %1229 = call i8 @sqlite3GetVarint32(i8* %1223, i32* %1203), !dbg !215
  %1230 = zext i8 %1229 to i32, !dbg !216
  store i32 %1230, i32* %1210, align 4, !dbg !217
  br label %1231, !dbg !218

1231:                                             ; preds = %1228, %1226
  store i16 0, i16* %1214, align 2, !dbg !219
  %1232 = load i32, i32* %1212, align 4, !dbg !220
  %1233 = load i32, i32* %1203, align 4, !dbg !221
  %1234 = icmp ult i32 %1232, %1233, !dbg !222
  br i1 %1234, label %1236, label %1235, !dbg !223

1235:                                             ; preds = %1231
  store i8* %1223, i8** %1195, align 8, !dbg !224
  br label %1355, !dbg !225

1236:                                             ; preds = %1231
  store i8* null, i8** %1213, align 8, !dbg !226
  store i32 0, i32* %1212, align 4, !dbg !227
  br label %1262, !dbg !228

1237:                                             ; preds = %1220
  %1238 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 12, i32 0, !dbg !229
  %1239 = load %struct.BtCursor*, %struct.BtCursor** %1238, align 8, !dbg !230
  %1240 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1239), !dbg !231
  store i32 %1240, i32* %1211, align 4, !dbg !232
  %1241 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1239, i32* %1212), !dbg !233
  store i8* %1241, i8** %1213, align 8, !dbg !234
  br label %1221, !dbg !235

1242:                                             ; preds = %1220
  %1243 = icmp eq i8 %1205, 3, !dbg !236
  br i1 %1243, label %1244, label %1255, !dbg !237

1244:                                             ; preds = %1242
  %1245 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 10, !dbg !238
  %1246 = load i32, i32* %1245, align 4, !dbg !239
  %1247 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1246, !dbg !240
  %1248 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 1, !dbg !241
  %1249 = load i16, i16* %1248, align 2, !dbg !242
  %1250 = and i16 %1249, 16, !dbg !243
  %1251 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 4, !dbg !244
  %1252 = load i32, i32* %1251, align 4, !dbg !245
  store i32 %1252, i32* %1211, align 4, !dbg !246
  store i32 %1252, i32* %1212, align 4, !dbg !247
  %1253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1247, i32 0, i32 5, !dbg !248
  %1254 = load i8*, i8** %1253, align 8, !dbg !249
  store i8* %1254, i8** %1213, align 8, !dbg !250
  br label %1221, !dbg !251

1255:                                             ; preds = %1242
  %1256 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !252
  %1257 = load i16, i16* %1256, align 2, !dbg !252
  %1258 = and i16 %1257, 9216, !dbg !252
  %1259 = icmp ne i16 %1258, 0, !dbg !252
  br i1 %1259, label %1260, label %1261, !dbg !252

1260:                                             ; preds = %1255
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !252
  br label %1443, !dbg !252

1261:                                             ; preds = %1255
  store i16 1, i16* %1256, align 2, !dbg !252
  br label %1443, !dbg !252

1262:                                             ; preds = %1236, %1187
  %1263 = load i16, i16* %1214, align 2, !dbg !253
  %1264 = icmp ule i16 %1263, 3, !dbg !254
  br i1 %1264, label %1347, label %1344, !dbg !255

1265:                                             ; preds = %1344, %1433
  %1266 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !256
  %1267 = load i16, i16* %1266, align 2, !dbg !257
  %1268 = and i16 9216, %1267, !dbg !258
  %1269 = icmp eq i16 0, %1268, !dbg !259
  br i1 %1269, label %1270, label %1274, !dbg !260

1270:                                             ; preds = %1265
  %1271 = icmp ne i16 %1268, 0, !dbg !261
  br i1 %1271, label %1272, label %1273, !dbg !261

1272:                                             ; preds = %1270
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !261
  br label %1274, !dbg !261

1273:                                             ; preds = %1270
  store i16 1, i16* %1266, align 2, !dbg !261
  br label %1274, !dbg !261

1274:                                             ; preds = %1272, %1273, %1265
  %1275 = load i32, i32* %1196, align 4, !dbg !262
  %1276 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 3, !dbg !263
  %1277 = load i32, i32* %1276, align 4, !dbg !264
  %1278 = load i32, i32* %1212, align 4, !dbg !265
  %1279 = getelementptr i32, i32* %1203, i32 4, !dbg !266
  %1280 = load i32, i32* %1279, align 4, !dbg !267
  %1281 = icmp sge i32 %1278, %1280, !dbg !268
  br i1 %1281, label %1282, label %1322, !dbg !269

1282:                                             ; preds = %1274
  %1283 = load i8*, i8** %1213, align 8, !dbg !270
  %1284 = ptrtoint i8* %1283 to i64, !dbg !271
  %1285 = getelementptr i32, i32* %1203, i32 3, !dbg !272
  %1286 = load i32, i32* %1285, align 4, !dbg !273
  %1287 = zext i32 %1286 to i64, !dbg !274
  %1288 = add i64 %1284, %1287, !dbg !275
  %1289 = inttoptr i64 %1288 to i8*, !dbg !276
  store i8* %1289, i8** %1195, align 8, !dbg !277
  %1290 = load i32, i32* %1196, align 4, !dbg !278
  %1291 = icmp ult i32 %1290, 12, !dbg !279
  br i1 %1291, label %1292, label %1294, !dbg !280

1292:                                             ; preds = %1282
  %1293 = call i32 @sqlite3VdbeSerialGet(i8* %1289, i32 %1290, %struct.sqlite3_value* %1199), !dbg !281
  br label %1443, !dbg !282

1294:                                             ; preds = %1282
  %1295 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %1295, align 2, !dbg !284
  %1296 = getelementptr i16, i16* %1295, i32 1, !dbg !285
  store i16 514, i16* %1296, align 2, !dbg !286
  %1297 = load i32, i32* %1196, align 4, !dbg !287
  %1298 = sub i32 %1297, 12, !dbg !288
  %1299 = lshr i32 %1298, 1, !dbg !289
  %1300 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 4, !dbg !290
  store i32 %1299, i32* %1300, align 4, !dbg !291
  %1301 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 2, !dbg !292
  store i8 %1190, i8* %1301, align 1, !dbg !293
  %1302 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 5, !dbg !294
  %1303 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 7, !dbg !295
  %1304 = load i32, i32* %1303, align 4, !dbg !296
  %1305 = add i32 %1299, 2, !dbg !297
  %1306 = icmp slt i32 %1304, %1305, !dbg !298
  br i1 %1306, label %1307, label %1309, !dbg !299

1307:                                             ; preds = %1294
  store i16 1, i16* %1266, align 2, !dbg !300
  %1308 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1199, i32 %1305, i32 0), !dbg !301
  br label %1312, !dbg !302

1309:                                             ; preds = %1294
  %1310 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 6, !dbg !303
  %1311 = load i8*, i8** %1310, align 8, !dbg !304
  store i8* %1311, i8** %1302, align 8, !dbg !305
  br label %1312, !dbg !306

1312:                                             ; preds = %1309, %1307
  %1313 = zext i32 %1299 to i64, !dbg !307
  %1314 = load i8*, i8** %1302, align 8, !dbg !308
  %1315 = load i8*, i8** %1195, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1314, i8* %1315, i64 %1313, i1 false), !dbg !310
  %1316 = getelementptr i8, i8* %1314, i32 %1299, !dbg !311
  store i8 0, i8* %1316, align 1, !dbg !312
  %1317 = add i32 %1299, 1, !dbg !313
  %1318 = getelementptr i8, i8* %1314, i32 %1317, !dbg !314
  store i8 0, i8* %1318, align 1, !dbg !315
  %1319 = and i32 %1297, 1, !dbg !316
  %1320 = getelementptr i16, i16* %1295, i32 %1319, !dbg !317
  %1321 = load i16, i16* %1320, align 2, !dbg !318
  store i16 %1321, i16* %1266, align 2, !dbg !319
  br label %1443, !dbg !320

1322:                                             ; preds = %1274
  %1323 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 2, !dbg !321
  store i8 %1190, i8* %1323, align 1, !dbg !322
  %1324 = load i32, i32* %1196, align 4, !dbg !323
  %1325 = and i32 %1324, 1, !dbg !324
  %1326 = icmp eq i32 %1325, 0, !dbg !325
  %1327 = icmp sge i32 %1324, 12, !dbg !326
  %1328 = and i1 %1327, %1326, !dbg !327
  %1329 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1324), !dbg !328
  %1330 = icmp eq i32 %1329, 0, !dbg !329
  br i1 %1330, label %1342, label %1331, !dbg !330

1331:                                             ; preds = %1322
  %1332 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 12, i32 0, !dbg !331
  %1333 = load %struct.BtCursor*, %struct.BtCursor** %1332, align 8, !dbg !332
  %1334 = getelementptr i32, i32* %1203, i32 3, !dbg !333
  %1335 = load i32, i32* %1334, align 4, !dbg !334
  %1336 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1333, i32 %1335, i32 %1329, %struct.sqlite3_value* %1199), !dbg !335
  %1337 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 5, !dbg !336
  %1338 = load i8*, i8** %1337, align 8, !dbg !337
  %1339 = call i32 @sqlite3VdbeSerialGet(i8* %1338, i32 %1324, %struct.sqlite3_value* %1199), !dbg !338
  %1340 = load i16, i16* %1266, align 2, !dbg !339
  %1341 = and i16 %1340, -4097, !dbg !340
  store i16 %1341, i16* %1266, align 2, !dbg !341
  br label %1443, !dbg !342

1342:                                             ; preds = %1322
  %1343 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1324, %struct.sqlite3_value* %1199), !dbg !343
  br label %1443, !dbg !344

1344:                                             ; preds = %1262
  %1345 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 3, !dbg !345
  %1346 = load i32, i32* %1345, align 4, !dbg !346
  store i32 %1346, i32* %1196, align 4, !dbg !347
  br label %1265, !dbg !348

1347:                                             ; preds = %1262
  %1348 = load i32, i32* %1210, align 4, !dbg !349
  %1349 = load i32, i32* %1203, align 4, !dbg !350
  %1350 = icmp ult i32 %1348, %1349, !dbg !351
  br i1 %1350, label %1351, label %1432, !dbg !352

1351:                                             ; preds = %1347
  %1352 = load i8*, i8** %1213, align 8, !dbg !353
  %1353 = icmp eq i8* %1352, null, !dbg !354
  br i1 %1353, label %1355, label %1354, !dbg !355

1354:                                             ; preds = %1351
  store i8* %1352, i8** %1195, align 8, !dbg !356
  br label %1355, !dbg !357

1355:                                             ; preds = %1354, %1351, %1235
  %1356 = alloca i32, align 4, !dbg !358
  %1357 = load i16, i16* %1214, align 2, !dbg !359
  %1358 = zext i16 %1357 to i32, !dbg !360
  store i32 %1358, i32* %1356, align 4, !dbg !361
  %1359 = alloca i64, align 8, !dbg !362
  %1360 = getelementptr i32, i32* %1203, i32 %1358, !dbg !363
  %1361 = load i32, i32* %1360, align 4, !dbg !364
  %1362 = zext i32 %1361 to i64, !dbg !365
  store i64 %1362, i64* %1359, align 4, !dbg !366
  %1363 = load i8*, i8** %1195, align 8, !dbg !367
  %1364 = load i32, i32* %1210, align 4, !dbg !368
  %1365 = alloca i8*, align 8, !dbg !369
  %1366 = getelementptr i8, i8* %1363, i32 %1364, !dbg !370
  store i8* %1366, i8** %1365, align 8, !dbg !371
  %1367 = load i32, i32* %1203, align 4, !dbg !372
  %1368 = getelementptr i8, i8* %1363, i32 %1367, !dbg !373
  br label %1369, !dbg !374

1369:                                             ; preds = %1376, %1355
  %1370 = load i32, i32* %1356, align 4, !dbg !375
  %1371 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1198, i32 0, i32 23, i32 %1370, !dbg !376
  %1372 = load i8*, i8** %1365, align 8, !dbg !377
  %1373 = load i8, i8* %1372, align 1, !dbg !378
  %1374 = zext i8 %1373 to i32, !dbg !379
  store i32 %1374, i32* %1196, align 4, !dbg !380
  store i32 %1374, i32* %1371, align 4, !dbg !381
  %1375 = icmp sgt i8 %1373, -1, !dbg !382
  br i1 %1375, label %1399, label %1390, !dbg !383

1376:                                             ; preds = %1390, %1399
  %1377 = load i32, i32* %1356, align 4, !dbg !384
  %1378 = add i32 %1377, 1, !dbg !385
  store i32 %1378, i32* %1356, align 4, !dbg !386
  %1379 = load i64, i64* %1359, align 4, !dbg !387
  %1380 = and i64 4294967295, %1379, !dbg !388
  %1381 = trunc i64 %1380 to i32, !dbg !389
  %1382 = getelementptr i32, i32* %1203, i32 %1378, !dbg !390
  store i32 %1381, i32* %1382, align 4, !dbg !391
  %1383 = load i32, i32* %1356, align 4, !dbg !392
  %1384 = icmp sle i32 %1383, 3, !dbg !393
  %1385 = load i8*, i8** %1365, align 8, !dbg !394
  %1386 = ptrtoint i8* %1385 to i64, !dbg !395
  %1387 = ptrtoint i8* %1368 to i64, !dbg !396
  %1388 = icmp ult i64 %1386, %1387, !dbg !397
  %1389 = and i1 %1384, %1388, !dbg !398
  br i1 %1389, label %1369, label %1408, !dbg !399

1390:                                             ; preds = %1369
  %1391 = load i8*, i8** %1365, align 8, !dbg !400
  %1392 = call i8 @sqlite3GetVarint32(i8* %1391, i32* %1196), !dbg !401
  %1393 = getelementptr i8, i8* %1391, i8 %1392, !dbg !402
  store i8* %1393, i8** %1365, align 8, !dbg !403
  %1394 = load i32, i32* %1196, align 4, !dbg !404
  store i32 %1394, i32* %1371, align 4, !dbg !405
  %1395 = load i64, i64* %1359, align 4, !dbg !406
  %1396 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1394), !dbg !407
  %1397 = zext i32 %1396 to i64, !dbg !408
  %1398 = add i64 %1395, %1397, !dbg !409
  store i64 %1398, i64* %1359, align 4, !dbg !410
  br label %1376, !dbg !411

1399:                                             ; preds = %1369
  %1400 = getelementptr i8, i8* %1372, i32 1, !dbg !412
  store i8* %1400, i8** %1365, align 8, !dbg !413
  %1401 = load i32, i32* %1196, align 4, !dbg !414
  %1402 = trunc i32 %1401 to i8, !dbg !415
  %1403 = getelementptr i8, i8* %4, i8 %1402, !dbg !416
  %1404 = load i8, i8* %1403, align 1, !dbg !417
  %1405 = zext i8 %1404 to i64, !dbg !418
  %1406 = load i64, i64* %1359, align 4, !dbg !419
  %1407 = add i64 %1406, %1405, !dbg !420
  store i64 %1407, i64* %1359, align 4, !dbg !421
  br label %1376, !dbg !422

1408:                                             ; preds = %1376
  %1409 = load i64, i64* %1359, align 4, !dbg !423
  %1410 = load i32, i32* %1211, align 4, !dbg !424
  %1411 = zext i32 %1410 to i64, !dbg !425
  %1412 = icmp uge i64 %1386, %1387, !dbg !426
  %1413 = icmp ugt i64 %1386, %1387, !dbg !427
  %1414 = icmp ne i64 %1409, %1411, !dbg !428
  %1415 = icmp ugt i64 %1409, %1411, !dbg !429
  %1416 = or i1 %1413, %1414, !dbg !430
  %1417 = and i1 %1412, %1416, !dbg !431
  %1418 = or i1 %1417, %1415, !dbg !432
  br i1 %1418, label %1419, label %1423, !dbg !433

1419:                                             ; preds = %1408
  %1420 = load i32, i32* %1203, align 4, !dbg !434
  %1421 = icmp eq i32 %1420, 0, !dbg !435
  br i1 %1421, label %1422, label %1423, !dbg !436

1422:                                             ; preds = %1419
  store i32 0, i32* %1356, align 4, !dbg !437
  store i8* %1368, i8** %1365, align 8, !dbg !438
  br label %1423, !dbg !439

1423:                                             ; preds = %1422, %1419, %1408
  %1424 = load i32, i32* %1356, align 4, !dbg !440
  %1425 = trunc i32 %1424 to i16, !dbg !441
  store i16 %1425, i16* %1214, align 2, !dbg !442
  %1426 = load i8*, i8** %1365, align 8, !dbg !443
  %1427 = ptrtoint i8* %1426 to i64, !dbg !444
  %1428 = load i8*, i8** %1195, align 8, !dbg !445
  %1429 = ptrtoint i8* %1428 to i64, !dbg !446
  %1430 = sub i64 %1427, %1429, !dbg !447
  %1431 = trunc i64 %1430 to i32, !dbg !448
  store i32 %1431, i32* %1210, align 4, !dbg !449
  br label %1433, !dbg !450

1432:                                             ; preds = %1347
  store i32 0, i32* %1196, align 4, !dbg !451
  br label %1433, !dbg !452

1433:                                             ; preds = %1423, %1432
  %1434 = load i16, i16* %1214, align 2, !dbg !453
  %1435 = icmp sle i16 %1434, 3, !dbg !454
  br i1 %1435, label %1436, label %1265, !dbg !455

1436:                                             ; preds = %1433
  %1437 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1199, i32 0, i32 1, !dbg !456
  %1438 = load i16, i16* %1437, align 2, !dbg !456
  %1439 = and i16 %1438, 9216, !dbg !456
  %1440 = icmp ne i16 %1439, 0, !dbg !456
  br i1 %1440, label %1441, label %1442, !dbg !456

1441:                                             ; preds = %1436
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1199), !dbg !456
  br label %1443, !dbg !456

1442:                                             ; preds = %1436
  store i16 1, i16* %1437, align 2, !dbg !456
  br label %1443, !dbg !456

1443:                                             ; preds = %1441, %1442, %1312, %1292, %1331, %1342, %1260, %1261
  call void @llvm.stackrestore(i8* %1188), !dbg !457
  br label %1444, !dbg !74

1444:                                             ; preds = %17, %1443
  %1445 = call i8* @llvm.stacksave(), !dbg !515
  %1446 = alloca i32, align 8, !dbg !518
  %1447 = alloca i32, align 8, !dbg !519
  %1448 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 17, !dbg !520
  %1449 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !521
  %1450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1448, i32 0, i32 1, !dbg !522
  %1451 = load i16, i16* %1450, align 2, !dbg !523
  %1452 = alloca i16, align 8, !dbg !524
  store i16 %1451, i16* %1452, align 2, !dbg !525
  %1453 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1449, i32 0, i32 1, !dbg !526
  %1454 = load i16, i16* %1453, align 2, !dbg !527
  %1455 = alloca i16, align 8, !dbg !528
  store i16 %1454, i16* %1455, align 2, !dbg !529
  %1456 = or i16 %1451, %1454, !dbg !530
  %1457 = and i16 %1456, 1, !dbg !531
  %1458 = icmp ne i16 %1457, 0, !dbg !532
  br i1 %1458, label %1459, label %1460, !dbg !533

1459:                                             ; preds = %1444
  call void @llvm.stackrestore(i8* %1445), !dbg !534
  br label %2880, !dbg !535

1460:                                             ; preds = %1444
  %1461 = and i16 %1451, 2, !dbg !536
  %1462 = and i16 %1451, 44, !dbg !537
  %1463 = icmp eq i16 %1461, 0, !dbg !538
  %1464 = icmp ne i16 %1462, 0, !dbg !539
  %1465 = and i16 %1454, 2, !dbg !540
  %1466 = and i16 %1454, 44, !dbg !541
  %1467 = icmp eq i16 %1465, 0, !dbg !542
  %1468 = icmp ne i16 %1466, 0, !dbg !543
  %1469 = and i1 %1463, %1464, !dbg !544
  br i1 %1469, label %1470, label %1476, !dbg !545

1470:                                             ; preds = %1460
  %1471 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1448, i8 1, i8 1), !dbg !546
  %1472 = load i16, i16* %1450, align 2, !dbg !547
  %1473 = and i16 %1472, 15936, !dbg !547
  %1474 = and i16 %1451, -15937, !dbg !548
  %1475 = or i16 %1473, %1474, !dbg !549
  store i16 %1475, i16* %1452, align 2, !dbg !550
  br label %1476, !dbg !551

1476:                                             ; preds = %1470, %1460
  %1477 = and i1 %1467, %1468, !dbg !552
  br i1 %1477, label %1478, label %1484, !dbg !553

1478:                                             ; preds = %1476
  %1479 = call i32 @sqlite3VdbeMemStringify(%struct.sqlite3_value* %1449, i8 1, i8 1), !dbg !554
  %1480 = load i16, i16* %1453, align 2, !dbg !555
  %1481 = and i16 %1480, 15936, !dbg !555
  %1482 = and i16 %1454, -15937, !dbg !556
  %1483 = or i16 %1481, %1482, !dbg !557
  store i16 %1483, i16* %1455, align 2, !dbg !558
  br label %1484, !dbg !559

1484:                                             ; preds = %1478, %1476
  %1485 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 21, !dbg !560
  %1486 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %1485, i32 0, i32 6, !dbg !561
  %1487 = bitcast %union.p4union* %1486 to %struct.CollSeq**, !dbg !562
  %1488 = load %struct.CollSeq*, %struct.CollSeq** %1487, align 8, !dbg !563
  %1489 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %1449, %struct.sqlite3_value* %1448, %struct.CollSeq* %1488), !dbg !564
  store i32 %1489, i32* %1446, align 4, !dbg !565
  %1490 = icmp slt i32 %1489, 0, !dbg !566
  br i1 %1490, label %1491, label %1492, !dbg !567

1491:                                             ; preds = %1484
  store i32 1, i32* %1447, align 4, !dbg !568
  br label %1496, !dbg !569

1492:                                             ; preds = %1484
  %1493 = icmp eq i32 %1489, 0, !dbg !570
  br i1 %1493, label %1494, label %1495, !dbg !571

1494:                                             ; preds = %1492
  store i32 0, i32* %1447, align 4, !dbg !572
  br label %1496, !dbg !573

1495:                                             ; preds = %1492
  store i32 1, i32* %1447, align 4, !dbg !574
  br label %1496, !dbg !575

1496:                                             ; preds = %1495, %1494, %1491
  store i16 %1454, i16* %1455, align 2, !dbg !576
  store i16 %1451, i16* %1452, align 2, !dbg !577
  %1497 = load i32, i32* %1447, align 4, !dbg !578
  %1498 = icmp ne i32 %1497, 0, !dbg !579
  call void @llvm.stackrestore(i8* %1445), !dbg !580
  br i1 %1498, label %2880, label %1499, !dbg !581

1499:                                             ; preds = %17, %1496
  %1500 = call i8* @llvm.stacksave(), !dbg !166
  %1501 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %1502 = load i8, i8* %1501, align 1, !dbg !170
  %1503 = alloca i32, align 4, !dbg !171
  store i32 2, i32* %1503, align 4, !dbg !172
  %1504 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !514
  %1505 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %1506 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1504, align 8, !dbg !174
  store %struct.VdbeCursor* %1506, %struct.VdbeCursor** %1505, align 8, !dbg !175
  %1507 = alloca i8*, align 8, !dbg !176
  %1508 = alloca i32, align 4, !dbg !177
  %1509 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1505, i32* %1503), !dbg !178
  %1510 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1505, align 8, !dbg !179
  %1511 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !180
  %1512 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 16, !dbg !181
  %1513 = load i16, i16* %1512, align 2, !dbg !182
  %1514 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 19, !dbg !183
  %1515 = load i32*, i32** %1514, align 8, !dbg !184
  %1516 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 0, !dbg !185
  %1517 = load i8, i8* %1516, align 1, !dbg !186
  %1518 = icmp ne i8 %1517, 3, !dbg !187
  %1519 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 2, !dbg !188
  %1520 = load i8, i8* %1519, align 1, !dbg !189
  %1521 = icmp ne i8 %1520, 0, !dbg !190
  %1522 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 14, !dbg !191
  %1523 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 21, !dbg !192
  %1524 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 22, !dbg !193
  %1525 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 20, !dbg !194
  %1526 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 17, !dbg !195
  %1527 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 9, !dbg !196
  %1528 = load i32, i32* %1527, align 4, !dbg !197
  %1529 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %1530 = load i32, i32* %1529, align 4, !dbg !199
  %1531 = icmp ne i32 %1528, %1530, !dbg !200
  br i1 %1531, label %1532, label %1574, !dbg !201

1532:                                             ; preds = %1499
  br i1 %1521, label %1554, label %1549, !dbg !202

1533:                                             ; preds = %1549, %1556
  %1534 = load i32, i32* %1529, align 4, !dbg !203
  store i32 %1534, i32* %1527, align 4, !dbg !204
  %1535 = load i8*, i8** %1525, align 8, !dbg !205
  %1536 = load i8, i8* %1535, align 1, !dbg !206
  %1537 = icmp sgt i8 %1536, -1, !dbg !209
  br i1 %1537, label %1538, label %1540, !dbg !210

1538:                                             ; preds = %1533
  %1539 = zext i8 %1536 to i32, !dbg !211
  store i32 %1539, i32* %1515, align 4, !dbg !212
  store i32 1, i32* %1522, align 4, !dbg !213
  br label %1543, !dbg !214

1540:                                             ; preds = %1533
  %1541 = call i8 @sqlite3GetVarint32(i8* %1535, i32* %1515), !dbg !215
  %1542 = zext i8 %1541 to i32, !dbg !216
  store i32 %1542, i32* %1522, align 4, !dbg !217
  br label %1543, !dbg !218

1543:                                             ; preds = %1540, %1538
  store i16 0, i16* %1526, align 2, !dbg !219
  %1544 = load i32, i32* %1524, align 4, !dbg !220
  %1545 = load i32, i32* %1515, align 4, !dbg !221
  %1546 = icmp ult i32 %1544, %1545, !dbg !222
  br i1 %1546, label %1548, label %1547, !dbg !223

1547:                                             ; preds = %1543
  store i8* %1535, i8** %1507, align 8, !dbg !224
  br label %1667, !dbg !225

1548:                                             ; preds = %1543
  store i8* null, i8** %1525, align 8, !dbg !226
  store i32 0, i32* %1524, align 4, !dbg !227
  br label %1574, !dbg !228

1549:                                             ; preds = %1532
  %1550 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 12, i32 0, !dbg !229
  %1551 = load %struct.BtCursor*, %struct.BtCursor** %1550, align 8, !dbg !230
  %1552 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1551), !dbg !231
  store i32 %1552, i32* %1523, align 4, !dbg !232
  %1553 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1551, i32* %1524), !dbg !233
  store i8* %1553, i8** %1525, align 8, !dbg !234
  br label %1533, !dbg !235

1554:                                             ; preds = %1532
  %1555 = icmp eq i8 %1517, 3, !dbg !236
  br i1 %1555, label %1556, label %1567, !dbg !237

1556:                                             ; preds = %1554
  %1557 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 10, !dbg !238
  %1558 = load i32, i32* %1557, align 4, !dbg !239
  %1559 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1558, !dbg !240
  %1560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1559, i32 0, i32 1, !dbg !241
  %1561 = load i16, i16* %1560, align 2, !dbg !242
  %1562 = and i16 %1561, 16, !dbg !243
  %1563 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1559, i32 0, i32 4, !dbg !244
  %1564 = load i32, i32* %1563, align 4, !dbg !245
  store i32 %1564, i32* %1523, align 4, !dbg !246
  store i32 %1564, i32* %1524, align 4, !dbg !247
  %1565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1559, i32 0, i32 5, !dbg !248
  %1566 = load i8*, i8** %1565, align 8, !dbg !249
  store i8* %1566, i8** %1525, align 8, !dbg !250
  br label %1533, !dbg !251

1567:                                             ; preds = %1554
  %1568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 1, !dbg !252
  %1569 = load i16, i16* %1568, align 2, !dbg !252
  %1570 = and i16 %1569, 9216, !dbg !252
  %1571 = icmp ne i16 %1570, 0, !dbg !252
  br i1 %1571, label %1572, label %1573, !dbg !252

1572:                                             ; preds = %1567
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1511), !dbg !252
  br label %1755, !dbg !252

1573:                                             ; preds = %1567
  store i16 1, i16* %1568, align 2, !dbg !252
  br label %1755, !dbg !252

1574:                                             ; preds = %1548, %1499
  %1575 = load i16, i16* %1526, align 2, !dbg !253
  %1576 = icmp ule i16 %1575, 3, !dbg !254
  br i1 %1576, label %1659, label %1656, !dbg !255

1577:                                             ; preds = %1656, %1745
  %1578 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 1, !dbg !256
  %1579 = load i16, i16* %1578, align 2, !dbg !257
  %1580 = and i16 9216, %1579, !dbg !258
  %1581 = icmp eq i16 0, %1580, !dbg !259
  br i1 %1581, label %1582, label %1586, !dbg !260

1582:                                             ; preds = %1577
  %1583 = icmp ne i16 %1580, 0, !dbg !261
  br i1 %1583, label %1584, label %1585, !dbg !261

1584:                                             ; preds = %1582
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1511), !dbg !261
  br label %1586, !dbg !261

1585:                                             ; preds = %1582
  store i16 1, i16* %1578, align 2, !dbg !261
  br label %1586, !dbg !261

1586:                                             ; preds = %1584, %1585, %1577
  %1587 = load i32, i32* %1508, align 4, !dbg !262
  %1588 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 23, i32 3, !dbg !263
  %1589 = load i32, i32* %1588, align 4, !dbg !264
  %1590 = load i32, i32* %1524, align 4, !dbg !265
  %1591 = getelementptr i32, i32* %1515, i32 4, !dbg !266
  %1592 = load i32, i32* %1591, align 4, !dbg !267
  %1593 = icmp sge i32 %1590, %1592, !dbg !268
  br i1 %1593, label %1594, label %1634, !dbg !269

1594:                                             ; preds = %1586
  %1595 = load i8*, i8** %1525, align 8, !dbg !270
  %1596 = ptrtoint i8* %1595 to i64, !dbg !271
  %1597 = getelementptr i32, i32* %1515, i32 3, !dbg !272
  %1598 = load i32, i32* %1597, align 4, !dbg !273
  %1599 = zext i32 %1598 to i64, !dbg !274
  %1600 = add i64 %1596, %1599, !dbg !275
  %1601 = inttoptr i64 %1600 to i8*, !dbg !276
  store i8* %1601, i8** %1507, align 8, !dbg !277
  %1602 = load i32, i32* %1508, align 4, !dbg !278
  %1603 = icmp ult i32 %1602, 12, !dbg !279
  br i1 %1603, label %1604, label %1606, !dbg !280

1604:                                             ; preds = %1594
  %1605 = call i32 @sqlite3VdbeSerialGet(i8* %1601, i32 %1602, %struct.sqlite3_value* %1511), !dbg !281
  br label %1755, !dbg !282

1606:                                             ; preds = %1594
  %1607 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %1607, align 2, !dbg !284
  %1608 = getelementptr i16, i16* %1607, i32 1, !dbg !285
  store i16 514, i16* %1608, align 2, !dbg !286
  %1609 = load i32, i32* %1508, align 4, !dbg !287
  %1610 = sub i32 %1609, 12, !dbg !288
  %1611 = lshr i32 %1610, 1, !dbg !289
  %1612 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 4, !dbg !290
  store i32 %1611, i32* %1612, align 4, !dbg !291
  %1613 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 2, !dbg !292
  store i8 %1502, i8* %1613, align 1, !dbg !293
  %1614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 5, !dbg !294
  %1615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 7, !dbg !295
  %1616 = load i32, i32* %1615, align 4, !dbg !296
  %1617 = add i32 %1611, 2, !dbg !297
  %1618 = icmp slt i32 %1616, %1617, !dbg !298
  br i1 %1618, label %1619, label %1621, !dbg !299

1619:                                             ; preds = %1606
  store i16 1, i16* %1578, align 2, !dbg !300
  %1620 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1511, i32 %1617, i32 0), !dbg !301
  br label %1624, !dbg !302

1621:                                             ; preds = %1606
  %1622 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 6, !dbg !303
  %1623 = load i8*, i8** %1622, align 8, !dbg !304
  store i8* %1623, i8** %1614, align 8, !dbg !305
  br label %1624, !dbg !306

1624:                                             ; preds = %1621, %1619
  %1625 = zext i32 %1611 to i64, !dbg !307
  %1626 = load i8*, i8** %1614, align 8, !dbg !308
  %1627 = load i8*, i8** %1507, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1626, i8* %1627, i64 %1625, i1 false), !dbg !310
  %1628 = getelementptr i8, i8* %1626, i32 %1611, !dbg !311
  store i8 0, i8* %1628, align 1, !dbg !312
  %1629 = add i32 %1611, 1, !dbg !313
  %1630 = getelementptr i8, i8* %1626, i32 %1629, !dbg !314
  store i8 0, i8* %1630, align 1, !dbg !315
  %1631 = and i32 %1609, 1, !dbg !316
  %1632 = getelementptr i16, i16* %1607, i32 %1631, !dbg !317
  %1633 = load i16, i16* %1632, align 2, !dbg !318
  store i16 %1633, i16* %1578, align 2, !dbg !319
  br label %1755, !dbg !320

1634:                                             ; preds = %1586
  %1635 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 2, !dbg !321
  store i8 %1502, i8* %1635, align 1, !dbg !322
  %1636 = load i32, i32* %1508, align 4, !dbg !323
  %1637 = and i32 %1636, 1, !dbg !324
  %1638 = icmp eq i32 %1637, 0, !dbg !325
  %1639 = icmp sge i32 %1636, 12, !dbg !326
  %1640 = and i1 %1639, %1638, !dbg !327
  %1641 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1636), !dbg !328
  %1642 = icmp eq i32 %1641, 0, !dbg !329
  br i1 %1642, label %1654, label %1643, !dbg !330

1643:                                             ; preds = %1634
  %1644 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 12, i32 0, !dbg !331
  %1645 = load %struct.BtCursor*, %struct.BtCursor** %1644, align 8, !dbg !332
  %1646 = getelementptr i32, i32* %1515, i32 3, !dbg !333
  %1647 = load i32, i32* %1646, align 4, !dbg !334
  %1648 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1645, i32 %1647, i32 %1641, %struct.sqlite3_value* %1511), !dbg !335
  %1649 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 5, !dbg !336
  %1650 = load i8*, i8** %1649, align 8, !dbg !337
  %1651 = call i32 @sqlite3VdbeSerialGet(i8* %1650, i32 %1636, %struct.sqlite3_value* %1511), !dbg !338
  %1652 = load i16, i16* %1578, align 2, !dbg !339
  %1653 = and i16 %1652, -4097, !dbg !340
  store i16 %1653, i16* %1578, align 2, !dbg !341
  br label %1755, !dbg !342

1654:                                             ; preds = %1634
  %1655 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1636, %struct.sqlite3_value* %1511), !dbg !343
  br label %1755, !dbg !344

1656:                                             ; preds = %1574
  %1657 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 23, i32 3, !dbg !345
  %1658 = load i32, i32* %1657, align 4, !dbg !346
  store i32 %1658, i32* %1508, align 4, !dbg !347
  br label %1577, !dbg !348

1659:                                             ; preds = %1574
  %1660 = load i32, i32* %1522, align 4, !dbg !349
  %1661 = load i32, i32* %1515, align 4, !dbg !350
  %1662 = icmp ult i32 %1660, %1661, !dbg !351
  br i1 %1662, label %1663, label %1744, !dbg !352

1663:                                             ; preds = %1659
  %1664 = load i8*, i8** %1525, align 8, !dbg !353
  %1665 = icmp eq i8* %1664, null, !dbg !354
  br i1 %1665, label %1667, label %1666, !dbg !355

1666:                                             ; preds = %1663
  store i8* %1664, i8** %1507, align 8, !dbg !356
  br label %1667, !dbg !357

1667:                                             ; preds = %1666, %1663, %1547
  %1668 = alloca i32, align 4, !dbg !358
  %1669 = load i16, i16* %1526, align 2, !dbg !359
  %1670 = zext i16 %1669 to i32, !dbg !360
  store i32 %1670, i32* %1668, align 4, !dbg !361
  %1671 = alloca i64, align 8, !dbg !362
  %1672 = getelementptr i32, i32* %1515, i32 %1670, !dbg !363
  %1673 = load i32, i32* %1672, align 4, !dbg !364
  %1674 = zext i32 %1673 to i64, !dbg !365
  store i64 %1674, i64* %1671, align 4, !dbg !366
  %1675 = load i8*, i8** %1507, align 8, !dbg !367
  %1676 = load i32, i32* %1522, align 4, !dbg !368
  %1677 = alloca i8*, align 8, !dbg !369
  %1678 = getelementptr i8, i8* %1675, i32 %1676, !dbg !370
  store i8* %1678, i8** %1677, align 8, !dbg !371
  %1679 = load i32, i32* %1515, align 4, !dbg !372
  %1680 = getelementptr i8, i8* %1675, i32 %1679, !dbg !373
  br label %1681, !dbg !374

1681:                                             ; preds = %1688, %1667
  %1682 = load i32, i32* %1668, align 4, !dbg !375
  %1683 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1510, i32 0, i32 23, i32 %1682, !dbg !376
  %1684 = load i8*, i8** %1677, align 8, !dbg !377
  %1685 = load i8, i8* %1684, align 1, !dbg !378
  %1686 = zext i8 %1685 to i32, !dbg !379
  store i32 %1686, i32* %1508, align 4, !dbg !380
  store i32 %1686, i32* %1683, align 4, !dbg !381
  %1687 = icmp sgt i8 %1685, -1, !dbg !382
  br i1 %1687, label %1711, label %1702, !dbg !383

1688:                                             ; preds = %1702, %1711
  %1689 = load i32, i32* %1668, align 4, !dbg !384
  %1690 = add i32 %1689, 1, !dbg !385
  store i32 %1690, i32* %1668, align 4, !dbg !386
  %1691 = load i64, i64* %1671, align 4, !dbg !387
  %1692 = and i64 4294967295, %1691, !dbg !388
  %1693 = trunc i64 %1692 to i32, !dbg !389
  %1694 = getelementptr i32, i32* %1515, i32 %1690, !dbg !390
  store i32 %1693, i32* %1694, align 4, !dbg !391
  %1695 = load i32, i32* %1668, align 4, !dbg !392
  %1696 = icmp sle i32 %1695, 3, !dbg !393
  %1697 = load i8*, i8** %1677, align 8, !dbg !394
  %1698 = ptrtoint i8* %1697 to i64, !dbg !395
  %1699 = ptrtoint i8* %1680 to i64, !dbg !396
  %1700 = icmp ult i64 %1698, %1699, !dbg !397
  %1701 = and i1 %1696, %1700, !dbg !398
  br i1 %1701, label %1681, label %1720, !dbg !399

1702:                                             ; preds = %1681
  %1703 = load i8*, i8** %1677, align 8, !dbg !400
  %1704 = call i8 @sqlite3GetVarint32(i8* %1703, i32* %1508), !dbg !401
  %1705 = getelementptr i8, i8* %1703, i8 %1704, !dbg !402
  store i8* %1705, i8** %1677, align 8, !dbg !403
  %1706 = load i32, i32* %1508, align 4, !dbg !404
  store i32 %1706, i32* %1683, align 4, !dbg !405
  %1707 = load i64, i64* %1671, align 4, !dbg !406
  %1708 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1706), !dbg !407
  %1709 = zext i32 %1708 to i64, !dbg !408
  %1710 = add i64 %1707, %1709, !dbg !409
  store i64 %1710, i64* %1671, align 4, !dbg !410
  br label %1688, !dbg !411

1711:                                             ; preds = %1681
  %1712 = getelementptr i8, i8* %1684, i32 1, !dbg !412
  store i8* %1712, i8** %1677, align 8, !dbg !413
  %1713 = load i32, i32* %1508, align 4, !dbg !414
  %1714 = trunc i32 %1713 to i8, !dbg !415
  %1715 = getelementptr i8, i8* %4, i8 %1714, !dbg !416
  %1716 = load i8, i8* %1715, align 1, !dbg !417
  %1717 = zext i8 %1716 to i64, !dbg !418
  %1718 = load i64, i64* %1671, align 4, !dbg !419
  %1719 = add i64 %1718, %1717, !dbg !420
  store i64 %1719, i64* %1671, align 4, !dbg !421
  br label %1688, !dbg !422

1720:                                             ; preds = %1688
  %1721 = load i64, i64* %1671, align 4, !dbg !423
  %1722 = load i32, i32* %1523, align 4, !dbg !424
  %1723 = zext i32 %1722 to i64, !dbg !425
  %1724 = icmp uge i64 %1698, %1699, !dbg !426
  %1725 = icmp ugt i64 %1698, %1699, !dbg !427
  %1726 = icmp ne i64 %1721, %1723, !dbg !428
  %1727 = icmp ugt i64 %1721, %1723, !dbg !429
  %1728 = or i1 %1725, %1726, !dbg !430
  %1729 = and i1 %1724, %1728, !dbg !431
  %1730 = or i1 %1729, %1727, !dbg !432
  br i1 %1730, label %1731, label %1735, !dbg !433

1731:                                             ; preds = %1720
  %1732 = load i32, i32* %1515, align 4, !dbg !434
  %1733 = icmp eq i32 %1732, 0, !dbg !435
  br i1 %1733, label %1734, label %1735, !dbg !436

1734:                                             ; preds = %1731
  store i32 0, i32* %1668, align 4, !dbg !437
  store i8* %1680, i8** %1677, align 8, !dbg !438
  br label %1735, !dbg !439

1735:                                             ; preds = %1734, %1731, %1720
  %1736 = load i32, i32* %1668, align 4, !dbg !440
  %1737 = trunc i32 %1736 to i16, !dbg !441
  store i16 %1737, i16* %1526, align 2, !dbg !442
  %1738 = load i8*, i8** %1677, align 8, !dbg !443
  %1739 = ptrtoint i8* %1738 to i64, !dbg !444
  %1740 = load i8*, i8** %1507, align 8, !dbg !445
  %1741 = ptrtoint i8* %1740 to i64, !dbg !446
  %1742 = sub i64 %1739, %1741, !dbg !447
  %1743 = trunc i64 %1742 to i32, !dbg !448
  store i32 %1743, i32* %1522, align 4, !dbg !449
  br label %1745, !dbg !450

1744:                                             ; preds = %1659
  store i32 0, i32* %1508, align 4, !dbg !451
  br label %1745, !dbg !452

1745:                                             ; preds = %1735, %1744
  %1746 = load i16, i16* %1526, align 2, !dbg !453
  %1747 = icmp sle i16 %1746, 3, !dbg !454
  br i1 %1747, label %1748, label %1577, !dbg !455

1748:                                             ; preds = %1745
  %1749 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1511, i32 0, i32 1, !dbg !456
  %1750 = load i16, i16* %1749, align 2, !dbg !456
  %1751 = and i16 %1750, 9216, !dbg !456
  %1752 = icmp ne i16 %1751, 0, !dbg !456
  br i1 %1752, label %1753, label %1754, !dbg !456

1753:                                             ; preds = %1748
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1511), !dbg !456
  br label %1755, !dbg !456

1754:                                             ; preds = %1748
  store i16 1, i16* %1749, align 2, !dbg !456
  br label %1755, !dbg !456

1755:                                             ; preds = %1753, %1754, %1624, %1604, %1643, %1654, %1572, %1573
  call void @llvm.stackrestore(i8* %1500), !dbg !457
  br label %1756, !dbg !74

1756:                                             ; preds = %17, %1755
  %1757 = call i8* @llvm.stacksave(), !dbg !166
  %1758 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %1759 = load i8, i8* %1758, align 1, !dbg !170
  %1760 = alloca i32, align 4, !dbg !171
  store i32 2, i32* %1760, align 4, !dbg !172
  %1761 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !514
  %1762 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %1763 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1761, align 8, !dbg !174
  store %struct.VdbeCursor* %1763, %struct.VdbeCursor** %1762, align 8, !dbg !175
  %1764 = alloca i8*, align 8, !dbg !176
  %1765 = alloca i32, align 4, !dbg !177
  %1766 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %1762, i32* %1760), !dbg !178
  %1767 = load %struct.VdbeCursor*, %struct.VdbeCursor** %1762, align 8, !dbg !179
  %1768 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !180
  %1769 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 16, !dbg !181
  %1770 = load i16, i16* %1769, align 2, !dbg !182
  %1771 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 19, !dbg !183
  %1772 = load i32*, i32** %1771, align 8, !dbg !184
  %1773 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 0, !dbg !185
  %1774 = load i8, i8* %1773, align 1, !dbg !186
  %1775 = icmp ne i8 %1774, 3, !dbg !187
  %1776 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 2, !dbg !188
  %1777 = load i8, i8* %1776, align 1, !dbg !189
  %1778 = icmp ne i8 %1777, 0, !dbg !190
  %1779 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 14, !dbg !191
  %1780 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 21, !dbg !192
  %1781 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 22, !dbg !193
  %1782 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 20, !dbg !194
  %1783 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 17, !dbg !195
  %1784 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 9, !dbg !196
  %1785 = load i32, i32* %1784, align 4, !dbg !197
  %1786 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %1787 = load i32, i32* %1786, align 4, !dbg !199
  %1788 = icmp ne i32 %1785, %1787, !dbg !200
  br i1 %1788, label %1789, label %1831, !dbg !201

1789:                                             ; preds = %1756
  br i1 %1778, label %1811, label %1806, !dbg !202

1790:                                             ; preds = %1806, %1813
  %1791 = load i32, i32* %1786, align 4, !dbg !203
  store i32 %1791, i32* %1784, align 4, !dbg !204
  %1792 = load i8*, i8** %1782, align 8, !dbg !205
  %1793 = load i8, i8* %1792, align 1, !dbg !206
  %1794 = icmp sgt i8 %1793, -1, !dbg !209
  br i1 %1794, label %1795, label %1797, !dbg !210

1795:                                             ; preds = %1790
  %1796 = zext i8 %1793 to i32, !dbg !211
  store i32 %1796, i32* %1772, align 4, !dbg !212
  store i32 1, i32* %1779, align 4, !dbg !213
  br label %1800, !dbg !214

1797:                                             ; preds = %1790
  %1798 = call i8 @sqlite3GetVarint32(i8* %1792, i32* %1772), !dbg !215
  %1799 = zext i8 %1798 to i32, !dbg !216
  store i32 %1799, i32* %1779, align 4, !dbg !217
  br label %1800, !dbg !218

1800:                                             ; preds = %1797, %1795
  store i16 0, i16* %1783, align 2, !dbg !219
  %1801 = load i32, i32* %1781, align 4, !dbg !220
  %1802 = load i32, i32* %1772, align 4, !dbg !221
  %1803 = icmp ult i32 %1801, %1802, !dbg !222
  br i1 %1803, label %1805, label %1804, !dbg !223

1804:                                             ; preds = %1800
  store i8* %1792, i8** %1764, align 8, !dbg !224
  br label %1922, !dbg !225

1805:                                             ; preds = %1800
  store i8* null, i8** %1782, align 8, !dbg !226
  store i32 0, i32* %1781, align 4, !dbg !227
  br label %1831, !dbg !228

1806:                                             ; preds = %1789
  %1807 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 12, i32 0, !dbg !229
  %1808 = load %struct.BtCursor*, %struct.BtCursor** %1807, align 8, !dbg !230
  %1809 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %1808), !dbg !231
  store i32 %1809, i32* %1780, align 4, !dbg !232
  %1810 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %1808, i32* %1781), !dbg !233
  store i8* %1810, i8** %1782, align 8, !dbg !234
  br label %1790, !dbg !235

1811:                                             ; preds = %1789
  %1812 = icmp eq i8 %1774, 3, !dbg !236
  br i1 %1812, label %1813, label %1824, !dbg !237

1813:                                             ; preds = %1811
  %1814 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 10, !dbg !238
  %1815 = load i32, i32* %1814, align 4, !dbg !239
  %1816 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %1815, !dbg !240
  %1817 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1816, i32 0, i32 1, !dbg !241
  %1818 = load i16, i16* %1817, align 2, !dbg !242
  %1819 = and i16 %1818, 16, !dbg !243
  %1820 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1816, i32 0, i32 4, !dbg !244
  %1821 = load i32, i32* %1820, align 4, !dbg !245
  store i32 %1821, i32* %1780, align 4, !dbg !246
  store i32 %1821, i32* %1781, align 4, !dbg !247
  %1822 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1816, i32 0, i32 5, !dbg !248
  %1823 = load i8*, i8** %1822, align 8, !dbg !249
  store i8* %1823, i8** %1782, align 8, !dbg !250
  br label %1790, !dbg !251

1824:                                             ; preds = %1811
  %1825 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 1, !dbg !252
  %1826 = load i16, i16* %1825, align 2, !dbg !252
  %1827 = and i16 %1826, 9216, !dbg !252
  %1828 = icmp ne i16 %1827, 0, !dbg !252
  br i1 %1828, label %1829, label %1830, !dbg !252

1829:                                             ; preds = %1824
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1768), !dbg !252
  br label %2010, !dbg !252

1830:                                             ; preds = %1824
  store i16 1, i16* %1825, align 2, !dbg !252
  br label %2010, !dbg !252

1831:                                             ; preds = %1805, %1756
  %1832 = load i16, i16* %1783, align 2, !dbg !253
  %1833 = icmp ule i16 %1832, 0, !dbg !254
  br i1 %1833, label %1914, label %1911, !dbg !255

1834:                                             ; preds = %1911, %2000
  %1835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 1, !dbg !256
  %1836 = load i16, i16* %1835, align 2, !dbg !257
  %1837 = and i16 9216, %1836, !dbg !258
  %1838 = icmp eq i16 0, %1837, !dbg !259
  br i1 %1838, label %1839, label %1843, !dbg !260

1839:                                             ; preds = %1834
  %1840 = icmp ne i16 %1837, 0, !dbg !261
  br i1 %1840, label %1841, label %1842, !dbg !261

1841:                                             ; preds = %1839
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1768), !dbg !261
  br label %1843, !dbg !261

1842:                                             ; preds = %1839
  store i16 1, i16* %1835, align 2, !dbg !261
  br label %1843, !dbg !261

1843:                                             ; preds = %1841, %1842, %1834
  %1844 = load i32, i32* %1765, align 4, !dbg !262
  %1845 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 23, i32 0, !dbg !263
  %1846 = load i32, i32* %1845, align 4, !dbg !264
  %1847 = load i32, i32* %1781, align 4, !dbg !265
  %1848 = getelementptr i32, i32* %1772, i32 1, !dbg !266
  %1849 = load i32, i32* %1848, align 4, !dbg !267
  %1850 = icmp sge i32 %1847, %1849, !dbg !268
  br i1 %1850, label %1851, label %1890, !dbg !269

1851:                                             ; preds = %1843
  %1852 = load i8*, i8** %1782, align 8, !dbg !270
  %1853 = ptrtoint i8* %1852 to i64, !dbg !271
  %1854 = load i32, i32* %1772, align 4, !dbg !273
  %1855 = zext i32 %1854 to i64, !dbg !274
  %1856 = add i64 %1853, %1855, !dbg !275
  %1857 = inttoptr i64 %1856 to i8*, !dbg !276
  store i8* %1857, i8** %1764, align 8, !dbg !277
  %1858 = load i32, i32* %1765, align 4, !dbg !278
  %1859 = icmp ult i32 %1858, 12, !dbg !279
  br i1 %1859, label %1860, label %1862, !dbg !280

1860:                                             ; preds = %1851
  %1861 = call i32 @sqlite3VdbeSerialGet(i8* %1857, i32 %1858, %struct.sqlite3_value* %1768), !dbg !281
  br label %2010, !dbg !282

1862:                                             ; preds = %1851
  %1863 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %1863, align 2, !dbg !284
  %1864 = getelementptr i16, i16* %1863, i32 1, !dbg !285
  store i16 514, i16* %1864, align 2, !dbg !286
  %1865 = load i32, i32* %1765, align 4, !dbg !287
  %1866 = sub i32 %1865, 12, !dbg !288
  %1867 = lshr i32 %1866, 1, !dbg !289
  %1868 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 4, !dbg !290
  store i32 %1867, i32* %1868, align 4, !dbg !291
  %1869 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 2, !dbg !292
  store i8 %1759, i8* %1869, align 1, !dbg !293
  %1870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 5, !dbg !294
  %1871 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 7, !dbg !295
  %1872 = load i32, i32* %1871, align 4, !dbg !296
  %1873 = add i32 %1867, 2, !dbg !297
  %1874 = icmp slt i32 %1872, %1873, !dbg !298
  br i1 %1874, label %1875, label %1877, !dbg !299

1875:                                             ; preds = %1862
  store i16 1, i16* %1835, align 2, !dbg !300
  %1876 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %1768, i32 %1873, i32 0), !dbg !301
  br label %1880, !dbg !302

1877:                                             ; preds = %1862
  %1878 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 6, !dbg !303
  %1879 = load i8*, i8** %1878, align 8, !dbg !304
  store i8* %1879, i8** %1870, align 8, !dbg !305
  br label %1880, !dbg !306

1880:                                             ; preds = %1877, %1875
  %1881 = zext i32 %1867 to i64, !dbg !307
  %1882 = load i8*, i8** %1870, align 8, !dbg !308
  %1883 = load i8*, i8** %1764, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1882, i8* %1883, i64 %1881, i1 false), !dbg !310
  %1884 = getelementptr i8, i8* %1882, i32 %1867, !dbg !311
  store i8 0, i8* %1884, align 1, !dbg !312
  %1885 = add i32 %1867, 1, !dbg !313
  %1886 = getelementptr i8, i8* %1882, i32 %1885, !dbg !314
  store i8 0, i8* %1886, align 1, !dbg !315
  %1887 = and i32 %1865, 1, !dbg !316
  %1888 = getelementptr i16, i16* %1863, i32 %1887, !dbg !317
  %1889 = load i16, i16* %1888, align 2, !dbg !318
  store i16 %1889, i16* %1835, align 2, !dbg !319
  br label %2010, !dbg !320

1890:                                             ; preds = %1843
  %1891 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 2, !dbg !321
  store i8 %1759, i8* %1891, align 1, !dbg !322
  %1892 = load i32, i32* %1765, align 4, !dbg !323
  %1893 = and i32 %1892, 1, !dbg !324
  %1894 = icmp eq i32 %1893, 0, !dbg !325
  %1895 = icmp sge i32 %1892, 12, !dbg !326
  %1896 = and i1 %1895, %1894, !dbg !327
  %1897 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1892), !dbg !328
  %1898 = icmp eq i32 %1897, 0, !dbg !329
  br i1 %1898, label %1909, label %1899, !dbg !330

1899:                                             ; preds = %1890
  %1900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 12, i32 0, !dbg !331
  %1901 = load %struct.BtCursor*, %struct.BtCursor** %1900, align 8, !dbg !332
  %1902 = load i32, i32* %1772, align 4, !dbg !334
  %1903 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %1901, i32 %1902, i32 %1897, %struct.sqlite3_value* %1768), !dbg !335
  %1904 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 5, !dbg !336
  %1905 = load i8*, i8** %1904, align 8, !dbg !337
  %1906 = call i32 @sqlite3VdbeSerialGet(i8* %1905, i32 %1892, %struct.sqlite3_value* %1768), !dbg !338
  %1907 = load i16, i16* %1835, align 2, !dbg !339
  %1908 = and i16 %1907, -4097, !dbg !340
  store i16 %1908, i16* %1835, align 2, !dbg !341
  br label %2010, !dbg !342

1909:                                             ; preds = %1890
  %1910 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %1892, %struct.sqlite3_value* %1768), !dbg !343
  br label %2010, !dbg !344

1911:                                             ; preds = %1831
  %1912 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 23, i32 0, !dbg !345
  %1913 = load i32, i32* %1912, align 4, !dbg !346
  store i32 %1913, i32* %1765, align 4, !dbg !347
  br label %1834, !dbg !348

1914:                                             ; preds = %1831
  %1915 = load i32, i32* %1779, align 4, !dbg !349
  %1916 = load i32, i32* %1772, align 4, !dbg !350
  %1917 = icmp ult i32 %1915, %1916, !dbg !351
  br i1 %1917, label %1918, label %1999, !dbg !352

1918:                                             ; preds = %1914
  %1919 = load i8*, i8** %1782, align 8, !dbg !353
  %1920 = icmp eq i8* %1919, null, !dbg !354
  br i1 %1920, label %1922, label %1921, !dbg !355

1921:                                             ; preds = %1918
  store i8* %1919, i8** %1764, align 8, !dbg !356
  br label %1922, !dbg !357

1922:                                             ; preds = %1921, %1918, %1804
  %1923 = alloca i32, align 4, !dbg !358
  %1924 = load i16, i16* %1783, align 2, !dbg !359
  %1925 = zext i16 %1924 to i32, !dbg !360
  store i32 %1925, i32* %1923, align 4, !dbg !361
  %1926 = alloca i64, align 8, !dbg !362
  %1927 = getelementptr i32, i32* %1772, i32 %1925, !dbg !363
  %1928 = load i32, i32* %1927, align 4, !dbg !364
  %1929 = zext i32 %1928 to i64, !dbg !365
  store i64 %1929, i64* %1926, align 4, !dbg !366
  %1930 = load i8*, i8** %1764, align 8, !dbg !367
  %1931 = load i32, i32* %1779, align 4, !dbg !368
  %1932 = alloca i8*, align 8, !dbg !369
  %1933 = getelementptr i8, i8* %1930, i32 %1931, !dbg !370
  store i8* %1933, i8** %1932, align 8, !dbg !371
  %1934 = load i32, i32* %1772, align 4, !dbg !372
  %1935 = getelementptr i8, i8* %1930, i32 %1934, !dbg !373
  br label %1936, !dbg !374

1936:                                             ; preds = %1943, %1922
  %1937 = load i32, i32* %1923, align 4, !dbg !375
  %1938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %1767, i32 0, i32 23, i32 %1937, !dbg !376
  %1939 = load i8*, i8** %1932, align 8, !dbg !377
  %1940 = load i8, i8* %1939, align 1, !dbg !378
  %1941 = zext i8 %1940 to i32, !dbg !379
  store i32 %1941, i32* %1765, align 4, !dbg !380
  store i32 %1941, i32* %1938, align 4, !dbg !381
  %1942 = icmp sgt i8 %1940, -1, !dbg !382
  br i1 %1942, label %1966, label %1957, !dbg !383

1943:                                             ; preds = %1957, %1966
  %1944 = load i32, i32* %1923, align 4, !dbg !384
  %1945 = add i32 %1944, 1, !dbg !385
  store i32 %1945, i32* %1923, align 4, !dbg !386
  %1946 = load i64, i64* %1926, align 4, !dbg !387
  %1947 = and i64 4294967295, %1946, !dbg !388
  %1948 = trunc i64 %1947 to i32, !dbg !389
  %1949 = getelementptr i32, i32* %1772, i32 %1945, !dbg !390
  store i32 %1948, i32* %1949, align 4, !dbg !391
  %1950 = load i32, i32* %1923, align 4, !dbg !392
  %1951 = icmp sle i32 %1950, 0, !dbg !393
  %1952 = load i8*, i8** %1932, align 8, !dbg !394
  %1953 = ptrtoint i8* %1952 to i64, !dbg !395
  %1954 = ptrtoint i8* %1935 to i64, !dbg !396
  %1955 = icmp ult i64 %1953, %1954, !dbg !397
  %1956 = and i1 %1951, %1955, !dbg !398
  br i1 %1956, label %1936, label %1975, !dbg !399

1957:                                             ; preds = %1936
  %1958 = load i8*, i8** %1932, align 8, !dbg !400
  %1959 = call i8 @sqlite3GetVarint32(i8* %1958, i32* %1765), !dbg !401
  %1960 = getelementptr i8, i8* %1958, i8 %1959, !dbg !402
  store i8* %1960, i8** %1932, align 8, !dbg !403
  %1961 = load i32, i32* %1765, align 4, !dbg !404
  store i32 %1961, i32* %1938, align 4, !dbg !405
  %1962 = load i64, i64* %1926, align 4, !dbg !406
  %1963 = call i32 @sqlite3VdbeSerialTypeLen(i32 %1961), !dbg !407
  %1964 = zext i32 %1963 to i64, !dbg !408
  %1965 = add i64 %1962, %1964, !dbg !409
  store i64 %1965, i64* %1926, align 4, !dbg !410
  br label %1943, !dbg !411

1966:                                             ; preds = %1936
  %1967 = getelementptr i8, i8* %1939, i32 1, !dbg !412
  store i8* %1967, i8** %1932, align 8, !dbg !413
  %1968 = load i32, i32* %1765, align 4, !dbg !414
  %1969 = trunc i32 %1968 to i8, !dbg !415
  %1970 = getelementptr i8, i8* %4, i8 %1969, !dbg !416
  %1971 = load i8, i8* %1970, align 1, !dbg !417
  %1972 = zext i8 %1971 to i64, !dbg !418
  %1973 = load i64, i64* %1926, align 4, !dbg !419
  %1974 = add i64 %1973, %1972, !dbg !420
  store i64 %1974, i64* %1926, align 4, !dbg !421
  br label %1943, !dbg !422

1975:                                             ; preds = %1943
  %1976 = load i64, i64* %1926, align 4, !dbg !423
  %1977 = load i32, i32* %1780, align 4, !dbg !424
  %1978 = zext i32 %1977 to i64, !dbg !425
  %1979 = icmp uge i64 %1953, %1954, !dbg !426
  %1980 = icmp ugt i64 %1953, %1954, !dbg !427
  %1981 = icmp ne i64 %1976, %1978, !dbg !428
  %1982 = icmp ugt i64 %1976, %1978, !dbg !429
  %1983 = or i1 %1980, %1981, !dbg !430
  %1984 = and i1 %1979, %1983, !dbg !431
  %1985 = or i1 %1984, %1982, !dbg !432
  br i1 %1985, label %1986, label %1990, !dbg !433

1986:                                             ; preds = %1975
  %1987 = load i32, i32* %1772, align 4, !dbg !434
  %1988 = icmp eq i32 %1987, 0, !dbg !435
  br i1 %1988, label %1989, label %1990, !dbg !436

1989:                                             ; preds = %1986
  store i32 0, i32* %1923, align 4, !dbg !437
  store i8* %1935, i8** %1932, align 8, !dbg !438
  br label %1990, !dbg !439

1990:                                             ; preds = %1989, %1986, %1975
  %1991 = load i32, i32* %1923, align 4, !dbg !440
  %1992 = trunc i32 %1991 to i16, !dbg !441
  store i16 %1992, i16* %1783, align 2, !dbg !442
  %1993 = load i8*, i8** %1932, align 8, !dbg !443
  %1994 = ptrtoint i8* %1993 to i64, !dbg !444
  %1995 = load i8*, i8** %1764, align 8, !dbg !445
  %1996 = ptrtoint i8* %1995 to i64, !dbg !446
  %1997 = sub i64 %1994, %1996, !dbg !447
  %1998 = trunc i64 %1997 to i32, !dbg !448
  store i32 %1998, i32* %1779, align 4, !dbg !449
  br label %2000, !dbg !450

1999:                                             ; preds = %1914
  store i32 0, i32* %1765, align 4, !dbg !451
  br label %2000, !dbg !452

2000:                                             ; preds = %1990, %1999
  %2001 = load i16, i16* %1783, align 2, !dbg !453
  %2002 = icmp sle i16 %2001, 0, !dbg !454
  br i1 %2002, label %2003, label %1834, !dbg !455

2003:                                             ; preds = %2000
  %2004 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %1768, i32 0, i32 1, !dbg !456
  %2005 = load i16, i16* %2004, align 2, !dbg !456
  %2006 = and i16 %2005, 9216, !dbg !456
  %2007 = icmp ne i16 %2006, 0, !dbg !456
  br i1 %2007, label %2008, label %2009, !dbg !456

2008:                                             ; preds = %2003
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %1768), !dbg !456
  br label %2010, !dbg !456

2009:                                             ; preds = %2003
  store i16 1, i16* %2004, align 2, !dbg !456
  br label %2010, !dbg !456

2010:                                             ; preds = %2008, %2009, %1880, %1860, %1899, %1909, %1829, %1830
  call void @llvm.stackrestore(i8* %1757), !dbg !457
  br label %2011, !dbg !74

2011:                                             ; preds = %17, %2010
  %2012 = call i8* @llvm.stacksave(), !dbg !166
  %2013 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %2014 = load i8, i8* %2013, align 1, !dbg !170
  %2015 = alloca i32, align 4, !dbg !171
  store i32 2, i32* %2015, align 4, !dbg !172
  %2016 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !514
  %2017 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %2018 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2016, align 8, !dbg !174
  store %struct.VdbeCursor* %2018, %struct.VdbeCursor** %2017, align 8, !dbg !175
  %2019 = alloca i8*, align 8, !dbg !176
  %2020 = alloca i32, align 4, !dbg !177
  %2021 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %2017, i32* %2015), !dbg !178
  %2022 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2017, align 8, !dbg !179
  %2023 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !180
  %2024 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 16, !dbg !181
  %2025 = load i16, i16* %2024, align 2, !dbg !182
  %2026 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 19, !dbg !183
  %2027 = load i32*, i32** %2026, align 8, !dbg !184
  %2028 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 0, !dbg !185
  %2029 = load i8, i8* %2028, align 1, !dbg !186
  %2030 = icmp ne i8 %2029, 3, !dbg !187
  %2031 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 2, !dbg !188
  %2032 = load i8, i8* %2031, align 1, !dbg !189
  %2033 = icmp ne i8 %2032, 0, !dbg !190
  %2034 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 14, !dbg !191
  %2035 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 21, !dbg !192
  %2036 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 22, !dbg !193
  %2037 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 20, !dbg !194
  %2038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 17, !dbg !195
  %2039 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 9, !dbg !196
  %2040 = load i32, i32* %2039, align 4, !dbg !197
  %2041 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %2042 = load i32, i32* %2041, align 4, !dbg !199
  %2043 = icmp ne i32 %2040, %2042, !dbg !200
  br i1 %2043, label %2044, label %2086, !dbg !201

2044:                                             ; preds = %2011
  br i1 %2033, label %2066, label %2061, !dbg !202

2045:                                             ; preds = %2061, %2068
  %2046 = load i32, i32* %2041, align 4, !dbg !203
  store i32 %2046, i32* %2039, align 4, !dbg !204
  %2047 = load i8*, i8** %2037, align 8, !dbg !205
  %2048 = load i8, i8* %2047, align 1, !dbg !206
  %2049 = icmp sgt i8 %2048, -1, !dbg !209
  br i1 %2049, label %2050, label %2052, !dbg !210

2050:                                             ; preds = %2045
  %2051 = zext i8 %2048 to i32, !dbg !211
  store i32 %2051, i32* %2027, align 4, !dbg !212
  store i32 1, i32* %2034, align 4, !dbg !213
  br label %2055, !dbg !214

2052:                                             ; preds = %2045
  %2053 = call i8 @sqlite3GetVarint32(i8* %2047, i32* %2027), !dbg !215
  %2054 = zext i8 %2053 to i32, !dbg !216
  store i32 %2054, i32* %2034, align 4, !dbg !217
  br label %2055, !dbg !218

2055:                                             ; preds = %2052, %2050
  store i16 0, i16* %2038, align 2, !dbg !219
  %2056 = load i32, i32* %2036, align 4, !dbg !220
  %2057 = load i32, i32* %2027, align 4, !dbg !221
  %2058 = icmp ult i32 %2056, %2057, !dbg !222
  br i1 %2058, label %2060, label %2059, !dbg !223

2059:                                             ; preds = %2055
  store i8* %2047, i8** %2019, align 8, !dbg !224
  br label %2179, !dbg !225

2060:                                             ; preds = %2055
  store i8* null, i8** %2037, align 8, !dbg !226
  store i32 0, i32* %2036, align 4, !dbg !227
  br label %2086, !dbg !228

2061:                                             ; preds = %2044
  %2062 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 12, i32 0, !dbg !229
  %2063 = load %struct.BtCursor*, %struct.BtCursor** %2062, align 8, !dbg !230
  %2064 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %2063), !dbg !231
  store i32 %2064, i32* %2035, align 4, !dbg !232
  %2065 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %2063, i32* %2036), !dbg !233
  store i8* %2065, i8** %2037, align 8, !dbg !234
  br label %2045, !dbg !235

2066:                                             ; preds = %2044
  %2067 = icmp eq i8 %2029, 3, !dbg !236
  br i1 %2067, label %2068, label %2079, !dbg !237

2068:                                             ; preds = %2066
  %2069 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 10, !dbg !238
  %2070 = load i32, i32* %2069, align 4, !dbg !239
  %2071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2070, !dbg !240
  %2072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2071, i32 0, i32 1, !dbg !241
  %2073 = load i16, i16* %2072, align 2, !dbg !242
  %2074 = and i16 %2073, 16, !dbg !243
  %2075 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2071, i32 0, i32 4, !dbg !244
  %2076 = load i32, i32* %2075, align 4, !dbg !245
  store i32 %2076, i32* %2035, align 4, !dbg !246
  store i32 %2076, i32* %2036, align 4, !dbg !247
  %2077 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2071, i32 0, i32 5, !dbg !248
  %2078 = load i8*, i8** %2077, align 8, !dbg !249
  store i8* %2078, i8** %2037, align 8, !dbg !250
  br label %2045, !dbg !251

2079:                                             ; preds = %2066
  %2080 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 1, !dbg !252
  %2081 = load i16, i16* %2080, align 2, !dbg !252
  %2082 = and i16 %2081, 9216, !dbg !252
  %2083 = icmp ne i16 %2082, 0, !dbg !252
  br i1 %2083, label %2084, label %2085, !dbg !252

2084:                                             ; preds = %2079
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2023), !dbg !252
  br label %2267, !dbg !252

2085:                                             ; preds = %2079
  store i16 1, i16* %2080, align 2, !dbg !252
  br label %2267, !dbg !252

2086:                                             ; preds = %2060, %2011
  %2087 = load i16, i16* %2038, align 2, !dbg !253
  %2088 = icmp ule i16 %2087, 4, !dbg !254
  br i1 %2088, label %2171, label %2168, !dbg !255

2089:                                             ; preds = %2168, %2257
  %2090 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 1, !dbg !256
  %2091 = load i16, i16* %2090, align 2, !dbg !257
  %2092 = and i16 9216, %2091, !dbg !258
  %2093 = icmp eq i16 0, %2092, !dbg !259
  br i1 %2093, label %2094, label %2098, !dbg !260

2094:                                             ; preds = %2089
  %2095 = icmp ne i16 %2092, 0, !dbg !261
  br i1 %2095, label %2096, label %2097, !dbg !261

2096:                                             ; preds = %2094
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2023), !dbg !261
  br label %2098, !dbg !261

2097:                                             ; preds = %2094
  store i16 1, i16* %2090, align 2, !dbg !261
  br label %2098, !dbg !261

2098:                                             ; preds = %2096, %2097, %2089
  %2099 = load i32, i32* %2020, align 4, !dbg !262
  %2100 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 23, i32 4, !dbg !263
  %2101 = load i32, i32* %2100, align 4, !dbg !264
  %2102 = load i32, i32* %2036, align 4, !dbg !265
  %2103 = getelementptr i32, i32* %2027, i32 5, !dbg !266
  %2104 = load i32, i32* %2103, align 4, !dbg !267
  %2105 = icmp sge i32 %2102, %2104, !dbg !268
  br i1 %2105, label %2106, label %2146, !dbg !269

2106:                                             ; preds = %2098
  %2107 = load i8*, i8** %2037, align 8, !dbg !270
  %2108 = ptrtoint i8* %2107 to i64, !dbg !271
  %2109 = getelementptr i32, i32* %2027, i32 4, !dbg !272
  %2110 = load i32, i32* %2109, align 4, !dbg !273
  %2111 = zext i32 %2110 to i64, !dbg !274
  %2112 = add i64 %2108, %2111, !dbg !275
  %2113 = inttoptr i64 %2112 to i8*, !dbg !276
  store i8* %2113, i8** %2019, align 8, !dbg !277
  %2114 = load i32, i32* %2020, align 4, !dbg !278
  %2115 = icmp ult i32 %2114, 12, !dbg !279
  br i1 %2115, label %2116, label %2118, !dbg !280

2116:                                             ; preds = %2106
  %2117 = call i32 @sqlite3VdbeSerialGet(i8* %2113, i32 %2114, %struct.sqlite3_value* %2023), !dbg !281
  br label %2267, !dbg !282

2118:                                             ; preds = %2106
  %2119 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %2119, align 2, !dbg !284
  %2120 = getelementptr i16, i16* %2119, i32 1, !dbg !285
  store i16 514, i16* %2120, align 2, !dbg !286
  %2121 = load i32, i32* %2020, align 4, !dbg !287
  %2122 = sub i32 %2121, 12, !dbg !288
  %2123 = lshr i32 %2122, 1, !dbg !289
  %2124 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 4, !dbg !290
  store i32 %2123, i32* %2124, align 4, !dbg !291
  %2125 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 2, !dbg !292
  store i8 %2014, i8* %2125, align 1, !dbg !293
  %2126 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 5, !dbg !294
  %2127 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 7, !dbg !295
  %2128 = load i32, i32* %2127, align 4, !dbg !296
  %2129 = add i32 %2123, 2, !dbg !297
  %2130 = icmp slt i32 %2128, %2129, !dbg !298
  br i1 %2130, label %2131, label %2133, !dbg !299

2131:                                             ; preds = %2118
  store i16 1, i16* %2090, align 2, !dbg !300
  %2132 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %2023, i32 %2129, i32 0), !dbg !301
  br label %2136, !dbg !302

2133:                                             ; preds = %2118
  %2134 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 6, !dbg !303
  %2135 = load i8*, i8** %2134, align 8, !dbg !304
  store i8* %2135, i8** %2126, align 8, !dbg !305
  br label %2136, !dbg !306

2136:                                             ; preds = %2133, %2131
  %2137 = zext i32 %2123 to i64, !dbg !307
  %2138 = load i8*, i8** %2126, align 8, !dbg !308
  %2139 = load i8*, i8** %2019, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2138, i8* %2139, i64 %2137, i1 false), !dbg !310
  %2140 = getelementptr i8, i8* %2138, i32 %2123, !dbg !311
  store i8 0, i8* %2140, align 1, !dbg !312
  %2141 = add i32 %2123, 1, !dbg !313
  %2142 = getelementptr i8, i8* %2138, i32 %2141, !dbg !314
  store i8 0, i8* %2142, align 1, !dbg !315
  %2143 = and i32 %2121, 1, !dbg !316
  %2144 = getelementptr i16, i16* %2119, i32 %2143, !dbg !317
  %2145 = load i16, i16* %2144, align 2, !dbg !318
  store i16 %2145, i16* %2090, align 2, !dbg !319
  br label %2267, !dbg !320

2146:                                             ; preds = %2098
  %2147 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 2, !dbg !321
  store i8 %2014, i8* %2147, align 1, !dbg !322
  %2148 = load i32, i32* %2020, align 4, !dbg !323
  %2149 = and i32 %2148, 1, !dbg !324
  %2150 = icmp eq i32 %2149, 0, !dbg !325
  %2151 = icmp sge i32 %2148, 12, !dbg !326
  %2152 = and i1 %2151, %2150, !dbg !327
  %2153 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2148), !dbg !328
  %2154 = icmp eq i32 %2153, 0, !dbg !329
  br i1 %2154, label %2166, label %2155, !dbg !330

2155:                                             ; preds = %2146
  %2156 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 12, i32 0, !dbg !331
  %2157 = load %struct.BtCursor*, %struct.BtCursor** %2156, align 8, !dbg !332
  %2158 = getelementptr i32, i32* %2027, i32 4, !dbg !333
  %2159 = load i32, i32* %2158, align 4, !dbg !334
  %2160 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %2157, i32 %2159, i32 %2153, %struct.sqlite3_value* %2023), !dbg !335
  %2161 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 5, !dbg !336
  %2162 = load i8*, i8** %2161, align 8, !dbg !337
  %2163 = call i32 @sqlite3VdbeSerialGet(i8* %2162, i32 %2148, %struct.sqlite3_value* %2023), !dbg !338
  %2164 = load i16, i16* %2090, align 2, !dbg !339
  %2165 = and i16 %2164, -4097, !dbg !340
  store i16 %2165, i16* %2090, align 2, !dbg !341
  br label %2267, !dbg !342

2166:                                             ; preds = %2146
  %2167 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %2148, %struct.sqlite3_value* %2023), !dbg !343
  br label %2267, !dbg !344

2168:                                             ; preds = %2086
  %2169 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 23, i32 4, !dbg !345
  %2170 = load i32, i32* %2169, align 4, !dbg !346
  store i32 %2170, i32* %2020, align 4, !dbg !347
  br label %2089, !dbg !348

2171:                                             ; preds = %2086
  %2172 = load i32, i32* %2034, align 4, !dbg !349
  %2173 = load i32, i32* %2027, align 4, !dbg !350
  %2174 = icmp ult i32 %2172, %2173, !dbg !351
  br i1 %2174, label %2175, label %2256, !dbg !352

2175:                                             ; preds = %2171
  %2176 = load i8*, i8** %2037, align 8, !dbg !353
  %2177 = icmp eq i8* %2176, null, !dbg !354
  br i1 %2177, label %2179, label %2178, !dbg !355

2178:                                             ; preds = %2175
  store i8* %2176, i8** %2019, align 8, !dbg !356
  br label %2179, !dbg !357

2179:                                             ; preds = %2178, %2175, %2059
  %2180 = alloca i32, align 4, !dbg !358
  %2181 = load i16, i16* %2038, align 2, !dbg !359
  %2182 = zext i16 %2181 to i32, !dbg !360
  store i32 %2182, i32* %2180, align 4, !dbg !361
  %2183 = alloca i64, align 8, !dbg !362
  %2184 = getelementptr i32, i32* %2027, i32 %2182, !dbg !363
  %2185 = load i32, i32* %2184, align 4, !dbg !364
  %2186 = zext i32 %2185 to i64, !dbg !365
  store i64 %2186, i64* %2183, align 4, !dbg !366
  %2187 = load i8*, i8** %2019, align 8, !dbg !367
  %2188 = load i32, i32* %2034, align 4, !dbg !368
  %2189 = alloca i8*, align 8, !dbg !369
  %2190 = getelementptr i8, i8* %2187, i32 %2188, !dbg !370
  store i8* %2190, i8** %2189, align 8, !dbg !371
  %2191 = load i32, i32* %2027, align 4, !dbg !372
  %2192 = getelementptr i8, i8* %2187, i32 %2191, !dbg !373
  br label %2193, !dbg !374

2193:                                             ; preds = %2200, %2179
  %2194 = load i32, i32* %2180, align 4, !dbg !375
  %2195 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2022, i32 0, i32 23, i32 %2194, !dbg !376
  %2196 = load i8*, i8** %2189, align 8, !dbg !377
  %2197 = load i8, i8* %2196, align 1, !dbg !378
  %2198 = zext i8 %2197 to i32, !dbg !379
  store i32 %2198, i32* %2020, align 4, !dbg !380
  store i32 %2198, i32* %2195, align 4, !dbg !381
  %2199 = icmp sgt i8 %2197, -1, !dbg !382
  br i1 %2199, label %2223, label %2214, !dbg !383

2200:                                             ; preds = %2214, %2223
  %2201 = load i32, i32* %2180, align 4, !dbg !384
  %2202 = add i32 %2201, 1, !dbg !385
  store i32 %2202, i32* %2180, align 4, !dbg !386
  %2203 = load i64, i64* %2183, align 4, !dbg !387
  %2204 = and i64 4294967295, %2203, !dbg !388
  %2205 = trunc i64 %2204 to i32, !dbg !389
  %2206 = getelementptr i32, i32* %2027, i32 %2202, !dbg !390
  store i32 %2205, i32* %2206, align 4, !dbg !391
  %2207 = load i32, i32* %2180, align 4, !dbg !392
  %2208 = icmp sle i32 %2207, 4, !dbg !393
  %2209 = load i8*, i8** %2189, align 8, !dbg !394
  %2210 = ptrtoint i8* %2209 to i64, !dbg !395
  %2211 = ptrtoint i8* %2192 to i64, !dbg !396
  %2212 = icmp ult i64 %2210, %2211, !dbg !397
  %2213 = and i1 %2208, %2212, !dbg !398
  br i1 %2213, label %2193, label %2232, !dbg !399

2214:                                             ; preds = %2193
  %2215 = load i8*, i8** %2189, align 8, !dbg !400
  %2216 = call i8 @sqlite3GetVarint32(i8* %2215, i32* %2020), !dbg !401
  %2217 = getelementptr i8, i8* %2215, i8 %2216, !dbg !402
  store i8* %2217, i8** %2189, align 8, !dbg !403
  %2218 = load i32, i32* %2020, align 4, !dbg !404
  store i32 %2218, i32* %2195, align 4, !dbg !405
  %2219 = load i64, i64* %2183, align 4, !dbg !406
  %2220 = call i32 @sqlite3VdbeSerialTypeLen(i32 %2218), !dbg !407
  %2221 = zext i32 %2220 to i64, !dbg !408
  %2222 = add i64 %2219, %2221, !dbg !409
  store i64 %2222, i64* %2183, align 4, !dbg !410
  br label %2200, !dbg !411

2223:                                             ; preds = %2193
  %2224 = getelementptr i8, i8* %2196, i32 1, !dbg !412
  store i8* %2224, i8** %2189, align 8, !dbg !413
  %2225 = load i32, i32* %2020, align 4, !dbg !414
  %2226 = trunc i32 %2225 to i8, !dbg !415
  %2227 = getelementptr i8, i8* %4, i8 %2226, !dbg !416
  %2228 = load i8, i8* %2227, align 1, !dbg !417
  %2229 = zext i8 %2228 to i64, !dbg !418
  %2230 = load i64, i64* %2183, align 4, !dbg !419
  %2231 = add i64 %2230, %2229, !dbg !420
  store i64 %2231, i64* %2183, align 4, !dbg !421
  br label %2200, !dbg !422

2232:                                             ; preds = %2200
  %2233 = load i64, i64* %2183, align 4, !dbg !423
  %2234 = load i32, i32* %2035, align 4, !dbg !424
  %2235 = zext i32 %2234 to i64, !dbg !425
  %2236 = icmp uge i64 %2210, %2211, !dbg !426
  %2237 = icmp ugt i64 %2210, %2211, !dbg !427
  %2238 = icmp ne i64 %2233, %2235, !dbg !428
  %2239 = icmp ugt i64 %2233, %2235, !dbg !429
  %2240 = or i1 %2237, %2238, !dbg !430
  %2241 = and i1 %2236, %2240, !dbg !431
  %2242 = or i1 %2241, %2239, !dbg !432
  br i1 %2242, label %2243, label %2247, !dbg !433

2243:                                             ; preds = %2232
  %2244 = load i32, i32* %2027, align 4, !dbg !434
  %2245 = icmp eq i32 %2244, 0, !dbg !435
  br i1 %2245, label %2246, label %2247, !dbg !436

2246:                                             ; preds = %2243
  store i32 0, i32* %2180, align 4, !dbg !437
  store i8* %2192, i8** %2189, align 8, !dbg !438
  br label %2247, !dbg !439

2247:                                             ; preds = %2246, %2243, %2232
  %2248 = load i32, i32* %2180, align 4, !dbg !440
  %2249 = trunc i32 %2248 to i16, !dbg !441
  store i16 %2249, i16* %2038, align 2, !dbg !442
  %2250 = load i8*, i8** %2189, align 8, !dbg !443
  %2251 = ptrtoint i8* %2250 to i64, !dbg !444
  %2252 = load i8*, i8** %2019, align 8, !dbg !445
  %2253 = ptrtoint i8* %2252 to i64, !dbg !446
  %2254 = sub i64 %2251, %2253, !dbg !447
  %2255 = trunc i64 %2254 to i32, !dbg !448
  store i32 %2255, i32* %2034, align 4, !dbg !449
  br label %2257, !dbg !450

2256:                                             ; preds = %2171
  store i32 0, i32* %2020, align 4, !dbg !451
  br label %2257, !dbg !452

2257:                                             ; preds = %2247, %2256
  %2258 = load i16, i16* %2038, align 2, !dbg !453
  %2259 = icmp sle i16 %2258, 4, !dbg !454
  br i1 %2259, label %2260, label %2089, !dbg !455

2260:                                             ; preds = %2257
  %2261 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2023, i32 0, i32 1, !dbg !456
  %2262 = load i16, i16* %2261, align 2, !dbg !456
  %2263 = and i16 %2262, 9216, !dbg !456
  %2264 = icmp ne i16 %2263, 0, !dbg !456
  br i1 %2264, label %2265, label %2266, !dbg !456

2265:                                             ; preds = %2260
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %2023), !dbg !456
  br label %2267, !dbg !456

2266:                                             ; preds = %2260
  store i16 1, i16* %2261, align 2, !dbg !456
  br label %2267, !dbg !456

2267:                                             ; preds = %2265, %2266, %2136, %2116, %2155, %2166, %2084, %2085
  call void @llvm.stackrestore(i8* %2012), !dbg !457
  br label %2268, !dbg !74

2268:                                             ; preds = %17, %2267
  %2269 = call i8* @llvm.stacksave(), !dbg !687
  %2270 = alloca i64, align 8, !dbg !690
  %2271 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 25, !dbg !691
  %2272 = call i8* @llvm.stacksave(), !dbg !692
  %2273 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2271, i32 0, i32 4, !dbg !79
  %2274 = load i32, i32* %2273, align 4, !dbg !82
  %2275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2274, !dbg !83
  %2276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2275, i32 0, i32 1, !dbg !692
  %2277 = load i16, i16* %2276, align 2, !dbg !692
  %2278 = and i16 %2277, 9216, !dbg !692
  %2279 = icmp ne i16 %2278, 0, !dbg !692
  %2280 = alloca %struct.sqlite3_value*, align 8, !dbg !692
  br i1 %2279, label %2281, label %2283, !dbg !692

2281:                                             ; preds = %2268
  %2282 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %2275), !dbg !692
  store %struct.sqlite3_value* %2282, %struct.sqlite3_value** %2280, align 8, !dbg !692
  br label %2284, !dbg !692

2283:                                             ; preds = %2268
  store i16 4, i16* %2276, align 2, !dbg !692
  store %struct.sqlite3_value* %2275, %struct.sqlite3_value** %2280, align 8, !dbg !692
  br label %2284, !dbg !692

2284:                                             ; preds = %2283, %2281
  %2285 = load %struct.sqlite3_value*, %struct.sqlite3_value** %2280, align 8, !dbg !692
  call void @llvm.stackrestore(i8* %2272), !dbg !692
  %2286 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !693
  %2287 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2286, align 8, !dbg !694
  %2288 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2287, i32 0, i32 2, !dbg !695
  %2289 = load i8, i8* %2288, align 1, !dbg !696
  %2290 = icmp ne i8 %2289, 0, !dbg !697
  br i1 %2290, label %2291, label %2293, !dbg !698

2291:                                             ; preds = %2284
  %2292 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2285, i32 0, i32 1, !dbg !699
  store i16 1, i16* %2292, align 2, !dbg !700
  br label %2318, !dbg !701

2293:                                             ; preds = %2284
  %2294 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2287, i32 0, i32 3, !dbg !702
  %2295 = load i8, i8* %2294, align 1, !dbg !703
  %2296 = icmp ne i8 %2295, 0, !dbg !704
  br i1 %2296, label %2297, label %2300, !dbg !705

2297:                                             ; preds = %2293
  %2298 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2287, i32 0, i32 18, !dbg !706
  %2299 = load i64, i64* %2298, align 4, !dbg !707
  store i64 %2299, i64* %2270, align 4, !dbg !708
  br label %2314, !dbg !709

2300:                                             ; preds = %2293
  %2301 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2287, i32 0, i32 0, !dbg !710
  %2302 = load i8, i8* %2301, align 1, !dbg !711
  %2303 = icmp eq i8 %2302, 2, !dbg !712
  br i1 %2303, label %2314, label %2304, !dbg !713

2304:                                             ; preds = %2300
  %2305 = call i32 @sqlite3VdbeCursorRestore(%struct.VdbeCursor* %2287), !dbg !714
  %2306 = load i8, i8* %2288, align 1, !dbg !715
  %2307 = icmp ne i8 %2306, 0, !dbg !716
  br i1 %2307, label %2308, label %2310, !dbg !717

2308:                                             ; preds = %2304
  %2309 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2285, i32 0, i32 1, !dbg !718
  store i16 1, i16* %2309, align 2, !dbg !719
  br label %2318, !dbg !720

2310:                                             ; preds = %2304
  %2311 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2287, i32 0, i32 12, i32 0, !dbg !721
  %2312 = load %struct.BtCursor*, %struct.BtCursor** %2311, align 8, !dbg !722
  %2313 = call i64 @sqlite3BtreeIntegerKey(%struct.BtCursor* %2312), !dbg !723
  store i64 %2313, i64* %2270, align 4, !dbg !724
  br label %2314, !dbg !725

2314:                                             ; preds = %2300, %2310, %2297
  %2315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2285, i32 0, i32 0, i32 0, !dbg !726
  %2316 = bitcast double* %2315 to i64*, !dbg !727
  %2317 = load i64, i64* %2270, align 4, !dbg !728
  store i64 %2317, i64* %2316, align 4, !dbg !729
  br label %2318, !dbg !730

2318:                                             ; preds = %2308, %2314, %2291
  call void @llvm.stackrestore(i8* %2269), !dbg !731
  br label %2319, !dbg !74

2319:                                             ; preds = %17, %2318
  %2320 = call i8* @llvm.stacksave(), !dbg !732
  %2321 = alloca i64, align 8, !dbg !735
  store i64 0, i64* %2321, align 4, !dbg !736
  %2322 = alloca i32, align 8, !dbg !737
  store i32 0, i32* %2322, align 4, !dbg !738
  %2323 = alloca i64, align 8, !dbg !739
  store i64 0, i64* %2323, align 4, !dbg !740
  %2324 = alloca i8*, align 8, !dbg !741
  %2325 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 26, !dbg !742
  %2326 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2325, i32 0, i32 6, !dbg !743
  %2327 = bitcast %union.p4union* %2326 to i8**, !dbg !744
  %2328 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !745
  %2329 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2328, i32 3, !dbg !746
  %2330 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !747
  %2331 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 0, i32 1, !dbg !748
  %2332 = load i16, i16* %2331, align 2, !dbg !749
  %2333 = and i16 %2332, 1, !dbg !750
  %2334 = icmp ne i16 %2333, 0, !dbg !750
  %2335 = and i16 %2332, 36, !dbg !751
  %2336 = icmp ne i16 %2335, 0, !dbg !751
  %2337 = and i16 %2332, 8, !dbg !752
  %2338 = icmp ne i16 %2337, 0, !dbg !752
  %2339 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 0, i32 8, !dbg !753
  br i1 %2334, label %2340, label %2348, !dbg !754

2340:                                             ; preds = %2319
  %2341 = and i16 %2332, 16384, !dbg !755
  %2342 = icmp ne i16 %2341, 0, !dbg !755
  br i1 %2342, label %2343, label %2344, !dbg !756

2343:                                             ; preds = %2340
  store i32 10, i32* %2339, align 4, !dbg !757
  br label %2345, !dbg !758

2344:                                             ; preds = %2340
  store i32 0, i32* %2339, align 4, !dbg !759
  br label %2345, !dbg !760

2345:                                             ; preds = %2344, %2343
  %2346 = load i32, i32* %2322, align 4, !dbg !761
  %2347 = add i32 %2346, 1, !dbg !761
  store i32 %2347, i32* %2322, align 4, !dbg !761
  br label %2438, !dbg !762

2348:                                             ; preds = %2319
  br i1 %2336, label %2349, label %2393, !dbg !763

2349:                                             ; preds = %2348
  %2350 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 0, i32 0, !dbg !764
  %2351 = bitcast %union.MemValue* %2350 to i64*, !dbg !765
  %2352 = load i64, i64* %2351, align 4, !dbg !766
  %2353 = alloca i64, align 8, !dbg !767
  %2354 = icmp slt i64 %2352, 0, !dbg !768
  br i1 %2354, label %2355, label %2357, !dbg !769

2355:                                             ; preds = %2349
  %2356 = xor i64 %2352, -1, !dbg !770
  store i64 %2356, i64* %2353, align 4, !dbg !771
  br label %2358, !dbg !772

2357:                                             ; preds = %2349
  store i64 %2352, i64* %2353, align 4, !dbg !773
  br label %2358, !dbg !774

2358:                                             ; preds = %2357, %2355
  %2359 = load i32, i32* %2322, align 4, !dbg !775
  %2360 = add i32 %2359, 1, !dbg !775
  store i32 %2360, i32* %2322, align 4, !dbg !775
  %2361 = load i64, i64* %2353, align 4, !dbg !776
  %2362 = icmp slt i64 %2361, 127, !dbg !777
  %2363 = icmp slt i64 %2361, 32767, !dbg !778
  %2364 = icmp slt i64 %2361, 8388607, !dbg !779
  %2365 = icmp slt i64 %2361, 2147483647, !dbg !780
  br i1 %2362, label %2366, label %2375, !dbg !781

2366:                                             ; preds = %2358
  %2367 = and i64 %2352, 1, !dbg !782
  %2368 = icmp eq i64 %2367, %2352, !dbg !783
  br i1 %2368, label %2369, label %2372, !dbg !784

2369:                                             ; preds = %2366
  %2370 = trunc i64 %2361 to i32, !dbg !785
  %2371 = add i32 %2370, 8, !dbg !786
  store i32 %2371, i32* %2339, align 4, !dbg !787
  br label %2438, !dbg !788

2372:                                             ; preds = %2366
  %2373 = load i64, i64* %2321, align 4, !dbg !789
  %2374 = add i64 %2373, 1, !dbg !789
  store i64 %2374, i64* %2321, align 4, !dbg !789
  store i32 1, i32* %2339, align 4, !dbg !790
  br label %2438, !dbg !791

2375:                                             ; preds = %2358
  %2376 = load i64, i64* %2321, align 4, !dbg !792
  br i1 %2363, label %2377, label %2379, !dbg !793

2377:                                             ; preds = %2375
  %2378 = add i64 %2376, 2, !dbg !794
  store i64 %2378, i64* %2321, align 4, !dbg !794
  store i32 2, i32* %2339, align 4, !dbg !795
  br label %2438, !dbg !796

2379:                                             ; preds = %2375
  br i1 %2364, label %2380, label %2382, !dbg !797

2380:                                             ; preds = %2379
  %2381 = add i64 %2376, 3, !dbg !798
  store i64 %2381, i64* %2321, align 4, !dbg !798
  store i32 3, i32* %2339, align 4, !dbg !799
  br label %2438, !dbg !800

2382:                                             ; preds = %2379
  br i1 %2365, label %2383, label %2385, !dbg !801

2383:                                             ; preds = %2382
  %2384 = add i64 %2376, 4, !dbg !802
  store i64 %2384, i64* %2321, align 4, !dbg !802
  store i32 4, i32* %2339, align 4, !dbg !803
  br label %2438, !dbg !804

2385:                                             ; preds = %2382
  %2386 = add i64 %2376, 8, !dbg !805
  store i64 %2386, i64* %2321, align 4, !dbg !805
  %2387 = and i16 %2332, 32, !dbg !806
  %2388 = icmp ne i16 %2387, 0, !dbg !806
  br i1 %2388, label %2389, label %2392, !dbg !807

2389:                                             ; preds = %2385
  %2390 = and i16 %2332, -33, !dbg !808
  %2391 = or i16 %2390, 8, !dbg !809
  store i16 %2391, i16* %2331, align 2, !dbg !810
  store i32 7, i32* %2339, align 4, !dbg !811
  br label %2438, !dbg !812

2392:                                             ; preds = %2385
  store i32 6, i32* %2339, align 4, !dbg !813
  br label %2438, !dbg !814

2393:                                             ; preds = %2348
  br i1 %2338, label %2394, label %2399, !dbg !815

2394:                                             ; preds = %2393
  %2395 = load i32, i32* %2322, align 4, !dbg !816
  %2396 = add i32 %2395, 1, !dbg !816
  store i32 %2396, i32* %2322, align 4, !dbg !816
  %2397 = load i64, i64* %2321, align 4, !dbg !817
  %2398 = add i64 %2397, 8, !dbg !817
  store i64 %2398, i64* %2321, align 4, !dbg !817
  store i32 7, i32* %2339, align 4, !dbg !818
  br label %2438, !dbg !819

2399:                                             ; preds = %2393
  %2400 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 0, i32 4, !dbg !820
  %2401 = load i32, i32* %2400, align 4, !dbg !821
  %2402 = alloca i32, align 8, !dbg !822
  store i32 %2401, i32* %2402, align 4, !dbg !823
  %2403 = alloca i32, align 8, !dbg !824
  %2404 = add i32 %2401, %2401, !dbg !825
  %2405 = add i32 %2404, 12, !dbg !826
  %2406 = and i16 %2332, 2, !dbg !827
  %2407 = icmp ne i16 %2406, 0, !dbg !828
  %2408 = zext i1 %2407 to i32, !dbg !829
  %2409 = add i32 %2405, %2408, !dbg !830
  store i32 %2409, i32* %2403, align 4, !dbg !831
  %2410 = and i16 %2332, 16384, !dbg !832
  %2411 = icmp ne i16 %2410, 0, !dbg !833
  br i1 %2411, label %2412, label %2428, !dbg !834

2412:                                             ; preds = %2399
  %2413 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 0, i32 0, !dbg !835
  %2414 = bitcast %union.MemValue* %2413 to i32*, !dbg !836
  %2415 = load i32, i32* %2414, align 4, !dbg !837
  %2416 = add i32 %2415, %2415, !dbg !838
  %2417 = add i32 %2409, %2416, !dbg !839
  store i32 %2417, i32* %2403, align 4, !dbg !839
  %2418 = load i64, i64* %2321, align 4, !dbg !840
  %2419 = icmp ne i64 %2418, 0, !dbg !840
  br i1 %2419, label %2424, label %2420, !dbg !841

2420:                                             ; preds = %2412
  %2421 = zext i32 %2415 to i64, !dbg !842
  %2422 = load i64, i64* %2323, align 4, !dbg !843
  %2423 = add i64 %2422, %2421, !dbg !843
  store i64 %2423, i64* %2323, align 4, !dbg !843
  br label %2428, !dbg !844

2424:                                             ; preds = %2412
  %2425 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2329), !dbg !845
  %2426 = load i32, i32* %2402, align 4, !dbg !846
  %2427 = add i32 %2426, %2415, !dbg !846
  store i32 %2427, i32* %2402, align 4, !dbg !846
  br label %2428, !dbg !847

2428:                                             ; preds = %2420, %2424, %2399
  %2429 = load i32, i32* %2402, align 4, !dbg !848
  %2430 = zext i32 %2429 to i64, !dbg !849
  %2431 = load i64, i64* %2321, align 4, !dbg !850
  %2432 = add i64 %2431, %2430, !dbg !850
  store i64 %2432, i64* %2321, align 4, !dbg !850
  %2433 = load i32, i32* %2403, align 4, !dbg !851
  %2434 = zext i32 %2433 to i64, !dbg !852
  %2435 = call i32 @sqlite3VarintLen(i64 %2434), !dbg !853
  %2436 = load i32, i32* %2322, align 4, !dbg !854
  %2437 = add i32 %2436, %2435, !dbg !854
  store i32 %2437, i32* %2322, align 4, !dbg !854
  store i32 %2433, i32* %2339, align 4, !dbg !855
  br label %2438, !dbg !856

2438:                                             ; preds = %2377, %2380, %2383, %2389, %2392, %2372, %2369, %2428, %2394, %2345
  %2439 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2329, i32 -1, !dbg !857
  %2440 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 0, i32 1, !dbg !748
  %2441 = load i16, i16* %2440, align 2, !dbg !749
  %2442 = and i16 %2441, 1, !dbg !750
  %2443 = icmp ne i16 %2442, 0, !dbg !750
  %2444 = and i16 %2441, 36, !dbg !751
  %2445 = icmp ne i16 %2444, 0, !dbg !751
  %2446 = and i16 %2441, 8, !dbg !752
  %2447 = icmp ne i16 %2446, 0, !dbg !752
  %2448 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 0, i32 8, !dbg !753
  br i1 %2443, label %2449, label %2457, !dbg !754

2449:                                             ; preds = %2438
  %2450 = and i16 %2441, 16384, !dbg !755
  %2451 = icmp ne i16 %2450, 0, !dbg !755
  br i1 %2451, label %2452, label %2453, !dbg !756

2452:                                             ; preds = %2449
  store i32 10, i32* %2448, align 4, !dbg !757
  br label %2454, !dbg !758

2453:                                             ; preds = %2449
  store i32 0, i32* %2448, align 4, !dbg !759
  br label %2454, !dbg !760

2454:                                             ; preds = %2453, %2452
  %2455 = load i32, i32* %2322, align 4, !dbg !761
  %2456 = add i32 %2455, 1, !dbg !761
  store i32 %2456, i32* %2322, align 4, !dbg !761
  br label %2547, !dbg !762

2457:                                             ; preds = %2438
  br i1 %2445, label %2458, label %2502, !dbg !763

2458:                                             ; preds = %2457
  %2459 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 0, i32 0, !dbg !764
  %2460 = bitcast %union.MemValue* %2459 to i64*, !dbg !765
  %2461 = load i64, i64* %2460, align 4, !dbg !766
  %2462 = alloca i64, align 8, !dbg !767
  %2463 = icmp slt i64 %2461, 0, !dbg !768
  br i1 %2463, label %2464, label %2466, !dbg !769

2464:                                             ; preds = %2458
  %2465 = xor i64 %2461, -1, !dbg !770
  store i64 %2465, i64* %2462, align 4, !dbg !771
  br label %2467, !dbg !772

2466:                                             ; preds = %2458
  store i64 %2461, i64* %2462, align 4, !dbg !773
  br label %2467, !dbg !774

2467:                                             ; preds = %2466, %2464
  %2468 = load i32, i32* %2322, align 4, !dbg !775
  %2469 = add i32 %2468, 1, !dbg !775
  store i32 %2469, i32* %2322, align 4, !dbg !775
  %2470 = load i64, i64* %2462, align 4, !dbg !776
  %2471 = icmp slt i64 %2470, 127, !dbg !777
  %2472 = icmp slt i64 %2470, 32767, !dbg !778
  %2473 = icmp slt i64 %2470, 8388607, !dbg !779
  %2474 = icmp slt i64 %2470, 2147483647, !dbg !780
  br i1 %2471, label %2475, label %2484, !dbg !781

2475:                                             ; preds = %2467
  %2476 = and i64 %2461, 1, !dbg !782
  %2477 = icmp eq i64 %2476, %2461, !dbg !783
  br i1 %2477, label %2478, label %2481, !dbg !784

2478:                                             ; preds = %2475
  %2479 = trunc i64 %2470 to i32, !dbg !785
  %2480 = add i32 %2479, 8, !dbg !786
  store i32 %2480, i32* %2448, align 4, !dbg !787
  br label %2547, !dbg !788

2481:                                             ; preds = %2475
  %2482 = load i64, i64* %2321, align 4, !dbg !789
  %2483 = add i64 %2482, 1, !dbg !789
  store i64 %2483, i64* %2321, align 4, !dbg !789
  store i32 1, i32* %2448, align 4, !dbg !790
  br label %2547, !dbg !791

2484:                                             ; preds = %2467
  %2485 = load i64, i64* %2321, align 4, !dbg !792
  br i1 %2472, label %2486, label %2488, !dbg !793

2486:                                             ; preds = %2484
  %2487 = add i64 %2485, 2, !dbg !794
  store i64 %2487, i64* %2321, align 4, !dbg !794
  store i32 2, i32* %2448, align 4, !dbg !795
  br label %2547, !dbg !796

2488:                                             ; preds = %2484
  br i1 %2473, label %2489, label %2491, !dbg !797

2489:                                             ; preds = %2488
  %2490 = add i64 %2485, 3, !dbg !798
  store i64 %2490, i64* %2321, align 4, !dbg !798
  store i32 3, i32* %2448, align 4, !dbg !799
  br label %2547, !dbg !800

2491:                                             ; preds = %2488
  br i1 %2474, label %2492, label %2494, !dbg !801

2492:                                             ; preds = %2491
  %2493 = add i64 %2485, 4, !dbg !802
  store i64 %2493, i64* %2321, align 4, !dbg !802
  store i32 4, i32* %2448, align 4, !dbg !803
  br label %2547, !dbg !804

2494:                                             ; preds = %2491
  %2495 = add i64 %2485, 8, !dbg !805
  store i64 %2495, i64* %2321, align 4, !dbg !805
  %2496 = and i16 %2441, 32, !dbg !806
  %2497 = icmp ne i16 %2496, 0, !dbg !806
  br i1 %2497, label %2498, label %2501, !dbg !807

2498:                                             ; preds = %2494
  %2499 = and i16 %2441, -33, !dbg !808
  %2500 = or i16 %2499, 8, !dbg !809
  store i16 %2500, i16* %2440, align 2, !dbg !810
  store i32 7, i32* %2448, align 4, !dbg !811
  br label %2547, !dbg !812

2501:                                             ; preds = %2494
  store i32 6, i32* %2448, align 4, !dbg !813
  br label %2547, !dbg !814

2502:                                             ; preds = %2457
  br i1 %2447, label %2503, label %2508, !dbg !815

2503:                                             ; preds = %2502
  %2504 = load i32, i32* %2322, align 4, !dbg !816
  %2505 = add i32 %2504, 1, !dbg !816
  store i32 %2505, i32* %2322, align 4, !dbg !816
  %2506 = load i64, i64* %2321, align 4, !dbg !817
  %2507 = add i64 %2506, 8, !dbg !817
  store i64 %2507, i64* %2321, align 4, !dbg !817
  store i32 7, i32* %2448, align 4, !dbg !818
  br label %2547, !dbg !819

2508:                                             ; preds = %2502
  %2509 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 0, i32 4, !dbg !820
  %2510 = load i32, i32* %2509, align 4, !dbg !821
  %2511 = alloca i32, align 8, !dbg !822
  store i32 %2510, i32* %2511, align 4, !dbg !823
  %2512 = alloca i32, align 8, !dbg !824
  %2513 = add i32 %2510, %2510, !dbg !825
  %2514 = add i32 %2513, 12, !dbg !826
  %2515 = and i16 %2441, 2, !dbg !827
  %2516 = icmp ne i16 %2515, 0, !dbg !828
  %2517 = zext i1 %2516 to i32, !dbg !829
  %2518 = add i32 %2514, %2517, !dbg !830
  store i32 %2518, i32* %2512, align 4, !dbg !831
  %2519 = and i16 %2441, 16384, !dbg !832
  %2520 = icmp ne i16 %2519, 0, !dbg !833
  br i1 %2520, label %2521, label %2537, !dbg !834

2521:                                             ; preds = %2508
  %2522 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 0, i32 0, !dbg !835
  %2523 = bitcast %union.MemValue* %2522 to i32*, !dbg !836
  %2524 = load i32, i32* %2523, align 4, !dbg !837
  %2525 = add i32 %2524, %2524, !dbg !838
  %2526 = add i32 %2518, %2525, !dbg !839
  store i32 %2526, i32* %2512, align 4, !dbg !839
  %2527 = load i64, i64* %2321, align 4, !dbg !840
  %2528 = icmp ne i64 %2527, 0, !dbg !840
  br i1 %2528, label %2533, label %2529, !dbg !841

2529:                                             ; preds = %2521
  %2530 = zext i32 %2524 to i64, !dbg !842
  %2531 = load i64, i64* %2323, align 4, !dbg !843
  %2532 = add i64 %2531, %2530, !dbg !843
  store i64 %2532, i64* %2323, align 4, !dbg !843
  br label %2537, !dbg !844

2533:                                             ; preds = %2521
  %2534 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2439), !dbg !845
  %2535 = load i32, i32* %2511, align 4, !dbg !846
  %2536 = add i32 %2535, %2524, !dbg !846
  store i32 %2536, i32* %2511, align 4, !dbg !846
  br label %2537, !dbg !847

2537:                                             ; preds = %2529, %2533, %2508
  %2538 = load i32, i32* %2511, align 4, !dbg !848
  %2539 = zext i32 %2538 to i64, !dbg !849
  %2540 = load i64, i64* %2321, align 4, !dbg !850
  %2541 = add i64 %2540, %2539, !dbg !850
  store i64 %2541, i64* %2321, align 4, !dbg !850
  %2542 = load i32, i32* %2512, align 4, !dbg !851
  %2543 = zext i32 %2542 to i64, !dbg !852
  %2544 = call i32 @sqlite3VarintLen(i64 %2543), !dbg !853
  %2545 = load i32, i32* %2322, align 4, !dbg !854
  %2546 = add i32 %2545, %2544, !dbg !854
  store i32 %2546, i32* %2322, align 4, !dbg !854
  store i32 %2542, i32* %2448, align 4, !dbg !855
  br label %2547, !dbg !856

2547:                                             ; preds = %2486, %2489, %2492, %2498, %2501, %2481, %2478, %2537, %2503, %2454
  %2548 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2439, i32 -1, !dbg !857
  %2549 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 1, !dbg !748
  %2550 = load i16, i16* %2549, align 2, !dbg !749
  %2551 = and i16 %2550, 1, !dbg !750
  %2552 = icmp ne i16 %2551, 0, !dbg !750
  %2553 = and i16 %2550, 36, !dbg !751
  %2554 = icmp ne i16 %2553, 0, !dbg !751
  %2555 = and i16 %2550, 8, !dbg !752
  %2556 = icmp ne i16 %2555, 0, !dbg !752
  %2557 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 8, !dbg !753
  br i1 %2552, label %2558, label %2566, !dbg !754

2558:                                             ; preds = %2547
  %2559 = and i16 %2550, 16384, !dbg !755
  %2560 = icmp ne i16 %2559, 0, !dbg !755
  br i1 %2560, label %2561, label %2562, !dbg !756

2561:                                             ; preds = %2558
  store i32 10, i32* %2557, align 4, !dbg !757
  br label %2563, !dbg !758

2562:                                             ; preds = %2558
  store i32 0, i32* %2557, align 4, !dbg !759
  br label %2563, !dbg !760

2563:                                             ; preds = %2562, %2561
  %2564 = load i32, i32* %2322, align 4, !dbg !761
  %2565 = add i32 %2564, 1, !dbg !761
  store i32 %2565, i32* %2322, align 4, !dbg !761
  br label %2656, !dbg !762

2566:                                             ; preds = %2547
  br i1 %2554, label %2567, label %2611, !dbg !763

2567:                                             ; preds = %2566
  %2568 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 0, !dbg !764
  %2569 = bitcast %union.MemValue* %2568 to i64*, !dbg !765
  %2570 = load i64, i64* %2569, align 4, !dbg !766
  %2571 = alloca i64, align 8, !dbg !767
  %2572 = icmp slt i64 %2570, 0, !dbg !768
  br i1 %2572, label %2573, label %2575, !dbg !769

2573:                                             ; preds = %2567
  %2574 = xor i64 %2570, -1, !dbg !770
  store i64 %2574, i64* %2571, align 4, !dbg !771
  br label %2576, !dbg !772

2575:                                             ; preds = %2567
  store i64 %2570, i64* %2571, align 4, !dbg !773
  br label %2576, !dbg !774

2576:                                             ; preds = %2575, %2573
  %2577 = load i32, i32* %2322, align 4, !dbg !775
  %2578 = add i32 %2577, 1, !dbg !775
  store i32 %2578, i32* %2322, align 4, !dbg !775
  %2579 = load i64, i64* %2571, align 4, !dbg !776
  %2580 = icmp slt i64 %2579, 127, !dbg !777
  %2581 = icmp slt i64 %2579, 32767, !dbg !778
  %2582 = icmp slt i64 %2579, 8388607, !dbg !779
  %2583 = icmp slt i64 %2579, 2147483647, !dbg !780
  br i1 %2580, label %2584, label %2593, !dbg !781

2584:                                             ; preds = %2576
  %2585 = and i64 %2570, 1, !dbg !782
  %2586 = icmp eq i64 %2585, %2570, !dbg !783
  br i1 %2586, label %2587, label %2590, !dbg !784

2587:                                             ; preds = %2584
  %2588 = trunc i64 %2579 to i32, !dbg !785
  %2589 = add i32 %2588, 8, !dbg !786
  store i32 %2589, i32* %2557, align 4, !dbg !787
  br label %2656, !dbg !788

2590:                                             ; preds = %2584
  %2591 = load i64, i64* %2321, align 4, !dbg !789
  %2592 = add i64 %2591, 1, !dbg !789
  store i64 %2592, i64* %2321, align 4, !dbg !789
  store i32 1, i32* %2557, align 4, !dbg !790
  br label %2656, !dbg !791

2593:                                             ; preds = %2576
  %2594 = load i64, i64* %2321, align 4, !dbg !792
  br i1 %2581, label %2595, label %2597, !dbg !793

2595:                                             ; preds = %2593
  %2596 = add i64 %2594, 2, !dbg !794
  store i64 %2596, i64* %2321, align 4, !dbg !794
  store i32 2, i32* %2557, align 4, !dbg !795
  br label %2656, !dbg !796

2597:                                             ; preds = %2593
  br i1 %2582, label %2598, label %2600, !dbg !797

2598:                                             ; preds = %2597
  %2599 = add i64 %2594, 3, !dbg !798
  store i64 %2599, i64* %2321, align 4, !dbg !798
  store i32 3, i32* %2557, align 4, !dbg !799
  br label %2656, !dbg !800

2600:                                             ; preds = %2597
  br i1 %2583, label %2601, label %2603, !dbg !801

2601:                                             ; preds = %2600
  %2602 = add i64 %2594, 4, !dbg !802
  store i64 %2602, i64* %2321, align 4, !dbg !802
  store i32 4, i32* %2557, align 4, !dbg !803
  br label %2656, !dbg !804

2603:                                             ; preds = %2600
  %2604 = add i64 %2594, 8, !dbg !805
  store i64 %2604, i64* %2321, align 4, !dbg !805
  %2605 = and i16 %2550, 32, !dbg !806
  %2606 = icmp ne i16 %2605, 0, !dbg !806
  br i1 %2606, label %2607, label %2610, !dbg !807

2607:                                             ; preds = %2603
  %2608 = and i16 %2550, -33, !dbg !808
  %2609 = or i16 %2608, 8, !dbg !809
  store i16 %2609, i16* %2549, align 2, !dbg !810
  store i32 7, i32* %2557, align 4, !dbg !811
  br label %2656, !dbg !812

2610:                                             ; preds = %2603
  store i32 6, i32* %2557, align 4, !dbg !813
  br label %2656, !dbg !814

2611:                                             ; preds = %2566
  br i1 %2556, label %2612, label %2617, !dbg !815

2612:                                             ; preds = %2611
  %2613 = load i32, i32* %2322, align 4, !dbg !816
  %2614 = add i32 %2613, 1, !dbg !816
  store i32 %2614, i32* %2322, align 4, !dbg !816
  %2615 = load i64, i64* %2321, align 4, !dbg !817
  %2616 = add i64 %2615, 8, !dbg !817
  store i64 %2616, i64* %2321, align 4, !dbg !817
  store i32 7, i32* %2557, align 4, !dbg !818
  br label %2656, !dbg !819

2617:                                             ; preds = %2611
  %2618 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 4, !dbg !820
  %2619 = load i32, i32* %2618, align 4, !dbg !821
  %2620 = alloca i32, align 8, !dbg !822
  store i32 %2619, i32* %2620, align 4, !dbg !823
  %2621 = alloca i32, align 8, !dbg !824
  %2622 = add i32 %2619, %2619, !dbg !825
  %2623 = add i32 %2622, 12, !dbg !826
  %2624 = and i16 %2550, 2, !dbg !827
  %2625 = icmp ne i16 %2624, 0, !dbg !828
  %2626 = zext i1 %2625 to i32, !dbg !829
  %2627 = add i32 %2623, %2626, !dbg !830
  store i32 %2627, i32* %2621, align 4, !dbg !831
  %2628 = and i16 %2550, 16384, !dbg !832
  %2629 = icmp ne i16 %2628, 0, !dbg !833
  br i1 %2629, label %2630, label %2646, !dbg !834

2630:                                             ; preds = %2617
  %2631 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 0, i32 0, !dbg !835
  %2632 = bitcast %union.MemValue* %2631 to i32*, !dbg !836
  %2633 = load i32, i32* %2632, align 4, !dbg !837
  %2634 = add i32 %2633, %2633, !dbg !838
  %2635 = add i32 %2627, %2634, !dbg !839
  store i32 %2635, i32* %2621, align 4, !dbg !839
  %2636 = load i64, i64* %2321, align 4, !dbg !840
  %2637 = icmp ne i64 %2636, 0, !dbg !840
  br i1 %2637, label %2642, label %2638, !dbg !841

2638:                                             ; preds = %2630
  %2639 = zext i32 %2633 to i64, !dbg !842
  %2640 = load i64, i64* %2323, align 4, !dbg !843
  %2641 = add i64 %2640, %2639, !dbg !843
  store i64 %2641, i64* %2323, align 4, !dbg !843
  br label %2646, !dbg !844

2642:                                             ; preds = %2630
  %2643 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2548), !dbg !845
  %2644 = load i32, i32* %2620, align 4, !dbg !846
  %2645 = add i32 %2644, %2633, !dbg !846
  store i32 %2645, i32* %2620, align 4, !dbg !846
  br label %2646, !dbg !847

2646:                                             ; preds = %2638, %2642, %2617
  %2647 = load i32, i32* %2620, align 4, !dbg !848
  %2648 = zext i32 %2647 to i64, !dbg !849
  %2649 = load i64, i64* %2321, align 4, !dbg !850
  %2650 = add i64 %2649, %2648, !dbg !850
  store i64 %2650, i64* %2321, align 4, !dbg !850
  %2651 = load i32, i32* %2621, align 4, !dbg !851
  %2652 = zext i32 %2651 to i64, !dbg !852
  %2653 = call i32 @sqlite3VarintLen(i64 %2652), !dbg !853
  %2654 = load i32, i32* %2322, align 4, !dbg !854
  %2655 = add i32 %2654, %2653, !dbg !854
  store i32 %2655, i32* %2322, align 4, !dbg !854
  store i32 %2651, i32* %2557, align 4, !dbg !855
  br label %2656, !dbg !856

2656:                                             ; preds = %2595, %2598, %2601, %2607, %2610, %2590, %2587, %2646, %2612, %2563
  %2657 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2548, i32 -1, !dbg !857
  %2658 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2657, i32 0, i32 1, !dbg !748
  %2659 = load i16, i16* %2658, align 2, !dbg !749
  %2660 = and i16 %2659, 1, !dbg !750
  %2661 = icmp ne i16 %2660, 0, !dbg !750
  %2662 = and i16 %2659, 36, !dbg !751
  %2663 = icmp ne i16 %2662, 0, !dbg !751
  %2664 = and i16 %2659, 8, !dbg !752
  %2665 = icmp ne i16 %2664, 0, !dbg !752
  %2666 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2657, i32 0, i32 8, !dbg !753
  br i1 %2661, label %2667, label %2675, !dbg !754

2667:                                             ; preds = %2656
  %2668 = and i16 %2659, 16384, !dbg !755
  %2669 = icmp ne i16 %2668, 0, !dbg !755
  br i1 %2669, label %2670, label %2671, !dbg !756

2670:                                             ; preds = %2667
  store i32 10, i32* %2666, align 4, !dbg !757
  br label %2672, !dbg !758

2671:                                             ; preds = %2667
  store i32 0, i32* %2666, align 4, !dbg !759
  br label %2672, !dbg !760

2672:                                             ; preds = %2671, %2670
  %2673 = load i32, i32* %2322, align 4, !dbg !761
  %2674 = add i32 %2673, 1, !dbg !761
  store i32 %2674, i32* %2322, align 4, !dbg !761
  br label %2765, !dbg !762

2675:                                             ; preds = %2656
  br i1 %2663, label %2676, label %2720, !dbg !763

2676:                                             ; preds = %2675
  %2677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2657, i32 0, i32 0, !dbg !764
  %2678 = bitcast %union.MemValue* %2677 to i64*, !dbg !765
  %2679 = load i64, i64* %2678, align 4, !dbg !766
  %2680 = alloca i64, align 8, !dbg !767
  %2681 = icmp slt i64 %2679, 0, !dbg !768
  br i1 %2681, label %2682, label %2684, !dbg !769

2682:                                             ; preds = %2676
  %2683 = xor i64 %2679, -1, !dbg !770
  store i64 %2683, i64* %2680, align 4, !dbg !771
  br label %2685, !dbg !772

2684:                                             ; preds = %2676
  store i64 %2679, i64* %2680, align 4, !dbg !773
  br label %2685, !dbg !774

2685:                                             ; preds = %2684, %2682
  %2686 = load i32, i32* %2322, align 4, !dbg !775
  %2687 = add i32 %2686, 1, !dbg !775
  store i32 %2687, i32* %2322, align 4, !dbg !775
  %2688 = load i64, i64* %2680, align 4, !dbg !776
  %2689 = icmp slt i64 %2688, 127, !dbg !777
  %2690 = icmp slt i64 %2688, 32767, !dbg !778
  %2691 = icmp slt i64 %2688, 8388607, !dbg !779
  %2692 = icmp slt i64 %2688, 2147483647, !dbg !780
  br i1 %2689, label %2693, label %2702, !dbg !781

2693:                                             ; preds = %2685
  %2694 = and i64 %2679, 1, !dbg !782
  %2695 = icmp eq i64 %2694, %2679, !dbg !783
  br i1 %2695, label %2696, label %2699, !dbg !784

2696:                                             ; preds = %2693
  %2697 = trunc i64 %2688 to i32, !dbg !785
  %2698 = add i32 %2697, 8, !dbg !786
  store i32 %2698, i32* %2666, align 4, !dbg !787
  br label %2765, !dbg !788

2699:                                             ; preds = %2693
  %2700 = load i64, i64* %2321, align 4, !dbg !789
  %2701 = add i64 %2700, 1, !dbg !789
  store i64 %2701, i64* %2321, align 4, !dbg !789
  store i32 1, i32* %2666, align 4, !dbg !790
  br label %2765, !dbg !791

2702:                                             ; preds = %2685
  %2703 = load i64, i64* %2321, align 4, !dbg !792
  br i1 %2690, label %2704, label %2706, !dbg !793

2704:                                             ; preds = %2702
  %2705 = add i64 %2703, 2, !dbg !794
  store i64 %2705, i64* %2321, align 4, !dbg !794
  store i32 2, i32* %2666, align 4, !dbg !795
  br label %2765, !dbg !796

2706:                                             ; preds = %2702
  br i1 %2691, label %2707, label %2709, !dbg !797

2707:                                             ; preds = %2706
  %2708 = add i64 %2703, 3, !dbg !798
  store i64 %2708, i64* %2321, align 4, !dbg !798
  store i32 3, i32* %2666, align 4, !dbg !799
  br label %2765, !dbg !800

2709:                                             ; preds = %2706
  br i1 %2692, label %2710, label %2712, !dbg !801

2710:                                             ; preds = %2709
  %2711 = add i64 %2703, 4, !dbg !802
  store i64 %2711, i64* %2321, align 4, !dbg !802
  store i32 4, i32* %2666, align 4, !dbg !803
  br label %2765, !dbg !804

2712:                                             ; preds = %2709
  %2713 = add i64 %2703, 8, !dbg !805
  store i64 %2713, i64* %2321, align 4, !dbg !805
  %2714 = and i16 %2659, 32, !dbg !806
  %2715 = icmp ne i16 %2714, 0, !dbg !806
  br i1 %2715, label %2716, label %2719, !dbg !807

2716:                                             ; preds = %2712
  %2717 = and i16 %2659, -33, !dbg !808
  %2718 = or i16 %2717, 8, !dbg !809
  store i16 %2718, i16* %2658, align 2, !dbg !810
  store i32 7, i32* %2666, align 4, !dbg !811
  br label %2765, !dbg !812

2719:                                             ; preds = %2712
  store i32 6, i32* %2666, align 4, !dbg !813
  br label %2765, !dbg !814

2720:                                             ; preds = %2675
  br i1 %2665, label %2721, label %2726, !dbg !815

2721:                                             ; preds = %2720
  %2722 = load i32, i32* %2322, align 4, !dbg !816
  %2723 = add i32 %2722, 1, !dbg !816
  store i32 %2723, i32* %2322, align 4, !dbg !816
  %2724 = load i64, i64* %2321, align 4, !dbg !817
  %2725 = add i64 %2724, 8, !dbg !817
  store i64 %2725, i64* %2321, align 4, !dbg !817
  store i32 7, i32* %2666, align 4, !dbg !818
  br label %2765, !dbg !819

2726:                                             ; preds = %2720
  %2727 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2657, i32 0, i32 4, !dbg !820
  %2728 = load i32, i32* %2727, align 4, !dbg !821
  %2729 = alloca i32, align 8, !dbg !822
  store i32 %2728, i32* %2729, align 4, !dbg !823
  %2730 = alloca i32, align 8, !dbg !824
  %2731 = add i32 %2728, %2728, !dbg !825
  %2732 = add i32 %2731, 12, !dbg !826
  %2733 = and i16 %2659, 2, !dbg !827
  %2734 = icmp ne i16 %2733, 0, !dbg !828
  %2735 = zext i1 %2734 to i32, !dbg !829
  %2736 = add i32 %2732, %2735, !dbg !830
  store i32 %2736, i32* %2730, align 4, !dbg !831
  %2737 = and i16 %2659, 16384, !dbg !832
  %2738 = icmp ne i16 %2737, 0, !dbg !833
  br i1 %2738, label %2739, label %2755, !dbg !834

2739:                                             ; preds = %2726
  %2740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2657, i32 0, i32 0, !dbg !835
  %2741 = bitcast %union.MemValue* %2740 to i32*, !dbg !836
  %2742 = load i32, i32* %2741, align 4, !dbg !837
  %2743 = add i32 %2742, %2742, !dbg !838
  %2744 = add i32 %2736, %2743, !dbg !839
  store i32 %2744, i32* %2730, align 4, !dbg !839
  %2745 = load i64, i64* %2321, align 4, !dbg !840
  %2746 = icmp ne i64 %2745, 0, !dbg !840
  br i1 %2746, label %2751, label %2747, !dbg !841

2747:                                             ; preds = %2739
  %2748 = zext i32 %2742 to i64, !dbg !842
  %2749 = load i64, i64* %2323, align 4, !dbg !843
  %2750 = add i64 %2749, %2748, !dbg !843
  store i64 %2750, i64* %2323, align 4, !dbg !843
  br label %2755, !dbg !844

2751:                                             ; preds = %2739
  %2752 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2657), !dbg !845
  %2753 = load i32, i32* %2729, align 4, !dbg !846
  %2754 = add i32 %2753, %2742, !dbg !846
  store i32 %2754, i32* %2729, align 4, !dbg !846
  br label %2755, !dbg !847

2755:                                             ; preds = %2747, %2751, %2726
  %2756 = load i32, i32* %2729, align 4, !dbg !848
  %2757 = zext i32 %2756 to i64, !dbg !849
  %2758 = load i64, i64* %2321, align 4, !dbg !850
  %2759 = add i64 %2758, %2757, !dbg !850
  store i64 %2759, i64* %2321, align 4, !dbg !850
  %2760 = load i32, i32* %2730, align 4, !dbg !851
  %2761 = zext i32 %2760 to i64, !dbg !852
  %2762 = call i32 @sqlite3VarintLen(i64 %2761), !dbg !853
  %2763 = load i32, i32* %2322, align 4, !dbg !854
  %2764 = add i32 %2763, %2762, !dbg !854
  store i32 %2764, i32* %2322, align 4, !dbg !854
  store i32 %2760, i32* %2666, align 4, !dbg !855
  br label %2765, !dbg !856

2765:                                             ; preds = %2704, %2707, %2710, %2716, %2719, %2699, %2696, %2755, %2721, %2672
  %2766 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 5, !dbg !858
  %2767 = load i32, i32* %2322, align 4, !dbg !859
  %2768 = zext i32 %2767 to i64, !dbg !860
  %2769 = icmp slt i32 %2767, 126, !dbg !861
  br i1 %2769, label %2770, label %2772, !dbg !862

2770:                                             ; preds = %2765
  %2771 = add i32 %2767, 1, !dbg !863
  store i32 %2771, i32* %2322, align 4, !dbg !863
  br label %2781, !dbg !864

2772:                                             ; preds = %2765
  %2773 = call i32 @sqlite3VarintLen(i64 %2768), !dbg !865
  %2774 = load i32, i32* %2322, align 4, !dbg !866
  %2775 = add i32 %2774, %2773, !dbg !866
  store i32 %2775, i32* %2322, align 4, !dbg !866
  %2776 = call i32 @sqlite3VarintLen(i64 %2768), !dbg !867
  %2777 = icmp slt i32 %2773, %2776, !dbg !868
  br i1 %2777, label %2778, label %2781, !dbg !869

2778:                                             ; preds = %2772
  %2779 = load i32, i32* %2322, align 4, !dbg !870
  %2780 = add i32 %2779, 1, !dbg !870
  store i32 %2780, i32* %2322, align 4, !dbg !870
  br label %2781, !dbg !871

2781:                                             ; preds = %2778, %2772, %2770
  %2782 = load i32, i32* %2322, align 4, !dbg !872
  %2783 = zext i32 %2782 to i64, !dbg !872
  %2784 = load i64, i64* %2321, align 4, !dbg !873
  %2785 = add i64 %2783, %2784, !dbg !873
  %2786 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 7, !dbg !874
  %2787 = load i32, i32* %2786, align 4, !dbg !875
  %2788 = zext i32 %2787 to i64, !dbg !876
  %2789 = load i64, i64* %2323, align 4, !dbg !877
  %2790 = add i64 %2785, %2789, !dbg !878
  %2791 = icmp sle i64 %2790, %2788, !dbg !879
  br i1 %2791, label %2792, label %2795, !dbg !880

2792:                                             ; preds = %2781
  %2793 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 6, !dbg !881
  %2794 = load i8*, i8** %2793, align 8, !dbg !882
  store i8* %2794, i8** %2766, align 8, !dbg !883
  br label %2798, !dbg !884

2795:                                             ; preds = %2781
  %2796 = trunc i64 %2785 to i32, !dbg !885
  %2797 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %2330, i32 %2796), !dbg !886
  br label %2798, !dbg !887

2798:                                             ; preds = %2795, %2792
  %2799 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 4, !dbg !888
  %2800 = trunc i64 %2785 to i32, !dbg !889
  store i32 %2800, i32* %2799, align 4, !dbg !890
  %2801 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 1, !dbg !891
  store i16 16, i16* %2801, align 2, !dbg !892
  %2802 = load i64, i64* %2323, align 4, !dbg !893
  %2803 = icmp ne i64 %2802, 0, !dbg !894
  br i1 %2803, label %2804, label %2810, !dbg !895

2804:                                             ; preds = %2798
  %2805 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2330, i32 0, i32 0, i32 0, !dbg !896
  %2806 = bitcast double* %2805 to i32*, !dbg !897
  %2807 = trunc i64 %2802 to i32, !dbg !898
  store i32 %2807, i32* %2806, align 4, !dbg !899
  %2808 = load i16, i16* %2801, align 2, !dbg !900
  %2809 = or i16 %2808, 16384, !dbg !901
  store i16 %2809, i16* %2801, align 2, !dbg !902
  br label %2810, !dbg !903

2810:                                             ; preds = %2804, %2798
  %2811 = alloca i8*, align 8, !dbg !904
  %2812 = load i8*, i8** %2766, align 8, !dbg !905
  store i8* %2812, i8** %2811, align 8, !dbg !906
  %2813 = load i32, i32* %2322, align 4, !dbg !907
  %2814 = zext i32 %2813 to i64, !dbg !908
  %2815 = getelementptr i8, i8* %2812, i32 %2813, !dbg !909
  store i8* %2815, i8** %2324, align 8, !dbg !910
  %2816 = call i32 @sqlite3PutVarint(i8* %2812, i64 %2814), !dbg !911
  %2817 = getelementptr i8, i8* %2812, i32 %2816, !dbg !912
  store i8* %2817, i8** %2811, align 8, !dbg !913
  %2818 = load i8*, i8** %2324, align 8, !dbg !914
  %2819 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2328, i32 0, i32 8, !dbg !915
  %2820 = load i32, i32* %2819, align 4, !dbg !916
  %2821 = zext i32 %2820 to i64, !dbg !917
  %2822 = call i32 @sqlite3PutVarint(i8* %2817, i64 %2821), !dbg !918
  %2823 = getelementptr i8, i8* %2817, i32 %2822, !dbg !919
  store i8* %2823, i8** %2811, align 8, !dbg !920
  %2824 = call i32 @sqlite3VdbeSerialPut(i8* %2818, %struct.sqlite3_value* %2328, i32 %2820), !dbg !921
  %2825 = getelementptr i8, i8* %2818, i32 %2824, !dbg !922
  %2826 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2328, i32 1, !dbg !923
  %2827 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2826, i32 0, i32 8, !dbg !915
  %2828 = load i32, i32* %2827, align 4, !dbg !916
  %2829 = zext i32 %2828 to i64, !dbg !917
  %2830 = call i32 @sqlite3PutVarint(i8* %2823, i64 %2829), !dbg !918
  %2831 = getelementptr i8, i8* %2823, i32 %2830, !dbg !919
  store i8* %2831, i8** %2811, align 8, !dbg !920
  %2832 = call i32 @sqlite3VdbeSerialPut(i8* %2825, %struct.sqlite3_value* %2826, i32 %2828), !dbg !921
  %2833 = getelementptr i8, i8* %2825, i32 %2832, !dbg !922
  %2834 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2826, i32 1, !dbg !923
  %2835 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2834, i32 0, i32 8, !dbg !915
  %2836 = load i32, i32* %2835, align 4, !dbg !916
  %2837 = zext i32 %2836 to i64, !dbg !917
  %2838 = call i32 @sqlite3PutVarint(i8* %2831, i64 %2837), !dbg !918
  %2839 = getelementptr i8, i8* %2831, i32 %2838, !dbg !919
  store i8* %2839, i8** %2811, align 8, !dbg !920
  %2840 = call i32 @sqlite3VdbeSerialPut(i8* %2833, %struct.sqlite3_value* %2834, i32 %2836), !dbg !921
  %2841 = getelementptr i8, i8* %2833, i32 %2840, !dbg !922
  %2842 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2834, i32 1, !dbg !923
  %2843 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2842, i32 0, i32 8, !dbg !915
  %2844 = load i32, i32* %2843, align 4, !dbg !916
  %2845 = zext i32 %2844 to i64, !dbg !917
  %2846 = call i32 @sqlite3PutVarint(i8* %2839, i64 %2845), !dbg !918
  %2847 = getelementptr i8, i8* %2839, i32 %2846, !dbg !919
  store i8* %2847, i8** %2811, align 8, !dbg !920
  %2848 = call i32 @sqlite3VdbeSerialPut(i8* %2841, %struct.sqlite3_value* %2842, i32 %2844), !dbg !921
  call void @llvm.stackrestore(i8* %2320), !dbg !924
  br label %2849, !dbg !74

2849:                                             ; preds = %17, %2810
  %2850 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !925
  %2851 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2850, align 8, !dbg !928
  %2852 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !929
  %2853 = call i8* @llvm.stacksave(), !dbg !930
  %2854 = alloca i32, align 8, !dbg !931
  store i32 0, i32* %2854, align 4, !dbg !930
  %2855 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 1, !dbg !930
  %2856 = load i16, i16* %2855, align 2, !dbg !930
  %2857 = and i16 %2856, 16384, !dbg !930
  %2858 = icmp ne i16 %2857, 0, !dbg !930
  br i1 %2858, label %2859, label %2861, !dbg !930

2859:                                             ; preds = %2849
  %2860 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %2852), !dbg !930
  store i32 %2860, i32* %2854, align 4, !dbg !930
  br label %2861, !dbg !931

2861:                                             ; preds = %2859, %2849
  call void @llvm.stackrestore(i8* %2853), !dbg !930
  %2862 = load i32, i32* %2854, align 4, !dbg !930
  %2863 = call i8* @llvm.stacksave(), !dbg !932
  %2864 = alloca %struct.BtreePayload, align 8, !dbg !933
  %2865 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %2864, i32 0, i32 1, !dbg !934
  %2866 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 4, !dbg !935
  %2867 = load i32, i32* %2866, align 4, !dbg !936
  %2868 = zext i32 %2867 to i64, !dbg !937
  store i64 %2868, i64* %2865, align 4, !dbg !938
  %2869 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %2864, i32 0, i32 0, !dbg !939
  %2870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2852, i32 0, i32 5, !dbg !940
  %2871 = load i8*, i8** %2870, align 8, !dbg !941
  store i8* %2871, i8** %2869, align 8, !dbg !942
  %2872 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %2864, i32 0, i32 3, !dbg !943
  store %struct.sqlite3_value* %7, %struct.sqlite3_value** %2872, align 8, !dbg !944
  %2873 = getelementptr %struct.BtreePayload, %struct.BtreePayload* %2864, i32 0, i32 4, !dbg !945
  store i16 0, i16* %2873, align 2, !dbg !946
  %2874 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2851, i32 0, i32 12, i32 0, !dbg !947
  %2875 = load %struct.BtCursor*, %struct.BtCursor** %2874, align 8, !dbg !948
  %2876 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2851, i32 0, i32 10, !dbg !949
  %2877 = load i32, i32* %2876, align 4, !dbg !949
  %2878 = call i32 @sqlite3BtreeInsert(%struct.BtCursor* %2875, %struct.BtreePayload* %2864, i32 0, i32 %2877), !dbg !950
  %2879 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2851, i32 0, i32 9, !dbg !951
  store i32 0, i32* %2879, align 4, !dbg !952
  call void @llvm.stackrestore(i8* %2863), !dbg !953
  br label %2880, !dbg !74

2880:                                             ; preds = %17, %2861, %1496, %1459
  %2881 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 2, !dbg !954
  %2882 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2881, align 8, !dbg !957
  %2883 = ptrtoint %struct.VdbeCursor* %2882 to i64, !dbg !958
  %2884 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2882, i32 0, i32 12, i32 0, !dbg !959
  %2885 = load %struct.BtCursor*, %struct.BtCursor** %2884, align 8, !dbg !960
  %2886 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %2885, i32 0), !dbg !961
  %2887 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2882, i32 0, i32 2, !dbg !962
  %2888 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2882, i32 0, i32 9, !dbg !963
  store i32 0, i32* %2888, align 4, !dbg !964
  %2889 = icmp eq i32 %2886, 0, !dbg !965
  br i1 %2889, label %2890, label %2891, !dbg !966

2890:                                             ; preds = %2880
  store i8 0, i8* %2887, align 1, !dbg !967
  br label %1187, !dbg !968

2891:                                             ; preds = %2880
  store i8 1, i8* %2887, align 1, !dbg !969
  br label %2892, !dbg !970

2892:                                             ; preds = %17, %1089, %1093, %2891, %1181
  %2893 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 29, !dbg !971
  %2894 = call i8* @llvm.stacksave(), !dbg !974
  %2895 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2893, i32 0, i32 4, !dbg !79
  %2896 = load i32, i32* %2895, align 4, !dbg !82
  %2897 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %2896, !dbg !83
  %2898 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2897, i32 0, i32 1, !dbg !974
  %2899 = load i16, i16* %2898, align 2, !dbg !974
  %2900 = and i16 %2899, 9216, !dbg !974
  %2901 = icmp ne i16 %2900, 0, !dbg !974
  %2902 = alloca %struct.sqlite3_value*, align 8, !dbg !974
  br i1 %2901, label %2903, label %2905, !dbg !974

2903:                                             ; preds = %2892
  %2904 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %2897), !dbg !974
  store %struct.sqlite3_value* %2904, %struct.sqlite3_value** %2902, align 8, !dbg !974
  br label %2906, !dbg !974

2905:                                             ; preds = %2892
  store i16 4, i16* %2898, align 2, !dbg !974
  store %struct.sqlite3_value* %2897, %struct.sqlite3_value** %2902, align 8, !dbg !974
  br label %2906, !dbg !974

2906:                                             ; preds = %2905, %2903
  %2907 = load %struct.sqlite3_value*, %struct.sqlite3_value** %2902, align 8, !dbg !974
  call void @llvm.stackrestore(i8* %2894), !dbg !974
  %2908 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2907, i32 0, i32 1, !dbg !975
  %2909 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2907, i32 0, i32 2, !dbg !976
  %2910 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2907, i32 0, i32 4, !dbg !977
  %2911 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2907, i32 0, i32 5, !dbg !978
  store i16 2562, i16* %2908, align 2, !dbg !979
  %2912 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %2893, i32 0, i32 6, !dbg !980
  %2913 = bitcast %union.p4union* %2912 to i8**, !dbg !981
  %2914 = load i8*, i8** %2913, align 8, !dbg !982
  store i8* %2914, i8** %2911, align 8, !dbg !983
  store i32 7, i32* %2910, align 4, !dbg !984
  store i8 1, i8* %2909, align 1, !dbg !985
  br label %2915, !dbg !74

2915:                                             ; preds = %17, %2906
  %2916 = call i8* @llvm.stacksave(), !dbg !986
  %2917 = alloca i32, align 8, !dbg !989
  store i32 0, i32* %2917, align 4, !dbg !990
  %2918 = alloca i32, align 8, !dbg !991
  store i32 0, i32* %2918, align 4, !dbg !992
  %2919 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !993
  %2920 = load %struct.VdbeCursor*, %struct.VdbeCursor** %2919, align 8, !dbg !994
  %2921 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 12, i32 0, !dbg !995
  %2922 = load %struct.BtCursor*, %struct.BtCursor** %2921, align 8, !dbg !996
  %2923 = alloca i32, align 8, !dbg !997
  store i32 24, i32* %2923, align 4, !dbg !998
  %2924 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 2, !dbg !999
  store i8 0, i8* %2924, align 1, !dbg !1000
  %2925 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 3, !dbg !1001
  store i8 0, i8* %2925, align 1, !dbg !1002
  %2926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 9, !dbg !1003
  store i32 0, i32* %2926, align 4, !dbg !1004
  %2927 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 4, !dbg !1005
  %2928 = load i8, i8* %2927, align 1, !dbg !1006
  %2929 = icmp ne i8 %2928, 0, !dbg !1007
  br i1 %2929, label %2930, label %2993, !dbg !1008

2930:                                             ; preds = %2915
  %2931 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !1009
  %2932 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 1, !dbg !1010
  %2933 = load i16, i16* %2932, align 2, !dbg !1011
  %2934 = and i16 %2933, 46, !dbg !1012
  %2935 = icmp eq i16 %2934, 2, !dbg !1013
  br i1 %2935, label %2936, label %2961, !dbg !1014

2936:                                             ; preds = %2930
  %2937 = call i8* @llvm.stacksave(), !dbg !1015
  %2938 = alloca double, align 8, !dbg !1016
  %2939 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 0, i32 0, !dbg !1015
  %2940 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 2, !dbg !1015
  %2941 = load i8, i8* %2940, align 1, !dbg !1015
  %2942 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 5, !dbg !1015
  %2943 = load i8*, i8** %2942, align 8, !dbg !1015
  %2944 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 4, !dbg !1015
  %2945 = load i32, i32* %2944, align 4, !dbg !1015
  %2946 = call i32 @sqlite3AtoF(i8* %2943, double* %2938, i32 %2945, i8 %2941), !dbg !1015
  %2947 = icmp sle i32 %2946, 0, !dbg !1015
  br i1 %2947, label %2960, label %2948, !dbg !1015

2948:                                             ; preds = %2936
  %2949 = icmp eq i32 %2946, 1, !dbg !1015
  %2950 = load double, double* %2938, align 8, !dbg !1015
  br i1 %2949, label %2951, label %2954, !dbg !1015

2951:                                             ; preds = %2948
  %2952 = load i16, i16* %2932, align 2, !dbg !1015
  %2953 = or i16 %2952, 4, !dbg !1015
  store i16 %2953, i16* %2932, align 2, !dbg !1015
  br label %2957, !dbg !1015

2954:                                             ; preds = %2948
  store double %2950, double* %2939, align 8, !dbg !1015
  %2955 = load i16, i16* %2932, align 2, !dbg !1015
  %2956 = or i16 %2955, 8, !dbg !1015
  store i16 %2956, i16* %2932, align 2, !dbg !1015
  br label %2957, !dbg !1015

2957:                                             ; preds = %2954, %2951
  %2958 = load i16, i16* %2932, align 2, !dbg !1015
  %2959 = and i16 %2958, -3, !dbg !1015
  store i16 %2959, i16* %2932, align 2, !dbg !1015
  br label %2960, !dbg !1015

2960:                                             ; preds = %2957, %2936
  call void @llvm.stackrestore(i8* %2937), !dbg !1015
  br label %2961, !dbg !1019

2961:                                             ; preds = %2960, %2930
  %2962 = call i64 @sqlite3VdbeIntValue(%struct.sqlite3_value* %2931), !dbg !1020
  %2963 = load i16, i16* %2932, align 2, !dbg !1021
  store i16 %2933, i16* %2932, align 2, !dbg !1022
  %2964 = and i16 %2963, 36, !dbg !1023
  %2965 = icmp eq i16 %2964, 0, !dbg !1024
  br i1 %2965, label %2966, label %2989, !dbg !1025

2966:                                             ; preds = %2961
  %2967 = and i16 %2963, 8, !dbg !1026
  %2968 = icmp eq i16 %2967, 0, !dbg !1027
  br i1 %2968, label %2969, label %2970, !dbg !1028

2969:                                             ; preds = %2966
  br label %4897, !dbg !1029

2970:                                             ; preds = %2966
  %2971 = sitofp i64 %2962 to double, !dbg !1030
  %2972 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %2931, i32 0, i32 0, i32 0, !dbg !1031
  %2973 = load double, double* %2972, align 8, !dbg !1032
  %2974 = fcmp olt double %2973, %2971, !dbg !1033
  br i1 %2974, label %2975, label %2981, !dbg !1034

2975:                                             ; preds = %2970
  %2976 = load i32, i32* %2923, align 4, !dbg !1035
  %2977 = and i32 %2976, 1, !dbg !1036
  %2978 = icmp eq i32 %2977, 1, !dbg !1037
  br i1 %2978, label %2979, label %2981, !dbg !1038

2979:                                             ; preds = %2975
  %2980 = sub i32 %2976, -1, !dbg !1039
  store i32 %2980, i32* %2923, align 4, !dbg !1040
  br label %2981, !dbg !1041

2981:                                             ; preds = %2975, %2979, %2970
  %2982 = fcmp ogt double %2973, %2971, !dbg !1042
  br i1 %2982, label %2983, label %2989, !dbg !1043

2983:                                             ; preds = %2981
  %2984 = load i32, i32* %2923, align 4, !dbg !1044
  %2985 = and i32 %2984, 1, !dbg !1045
  %2986 = icmp eq i32 %2985, 0, !dbg !1046
  br i1 %2986, label %2987, label %2989, !dbg !1047

2987:                                             ; preds = %2983
  %2988 = add i32 %2984, 1, !dbg !1048
  store i32 %2988, i32* %2923, align 4, !dbg !1049
  br label %2989, !dbg !1050

2989:                                             ; preds = %2983, %2987, %2981, %2961
  %2990 = load %struct.BtCursor*, %struct.BtCursor** %2921, align 8, !dbg !1051
  %2991 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %2990, %struct.UnpackedRecord* null, i64 %2962, i32 0, i32* %2917), !dbg !1052
  %2992 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 18, !dbg !1053
  store i64 %2962, i64* %2992, align 4, !dbg !1054
  br label %3016, !dbg !1055

2993:                                             ; preds = %2915
  %2994 = load %struct.BtCursor*, %struct.BtCursor** %2921, align 8, !dbg !1056
  %2995 = getelementptr %struct.BtCursor, %struct.BtCursor* %2994, i32 0, i32 3, !dbg !1057
  %2996 = load i8, i8* %2995, align 1, !dbg !1058
  %2997 = and i8 %2996, 2, !dbg !1059
  %2998 = icmp ne i8 %2997, 0, !dbg !1060
  br i1 %2998, label %2999, label %3000, !dbg !1061

2999:                                             ; preds = %2993
  store i32 1, i32* %2918, align 4, !dbg !1062
  br label %3000, !dbg !1063

3000:                                             ; preds = %2999, %2993
  %3001 = alloca %struct.UnpackedRecord, align 8, !dbg !1064
  %3002 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3001, i32 0, i32 0, !dbg !1065
  %3003 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %2920, i32 0, i32 13, !dbg !1066
  %3004 = load %struct.KeyInfo*, %struct.KeyInfo** %3003, align 8, !dbg !1067
  store %struct.KeyInfo* %3004, %struct.KeyInfo** %3002, align 8, !dbg !1068
  %3005 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3001, i32 0, i32 2, !dbg !1069
  store i16 1, i16* %3005, align 2, !dbg !1070
  %3006 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3001, i32 0, i32 3, !dbg !1071
  store i8 1, i8* %3006, align 1, !dbg !1072
  %3007 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3001, i32 0, i32 1, !dbg !1073
  %3008 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !1074
  store %struct.sqlite3_value* %3008, %struct.sqlite3_value** %3007, align 8, !dbg !1075
  %3009 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3001, i32 0, i32 7, !dbg !1076
  store i8 0, i8* %3009, align 1, !dbg !1077
  %3010 = call i32 @sqlite3BtreeMovetoUnpacked(%struct.BtCursor* %2994, %struct.UnpackedRecord* %3001, i64 0, i32 0, i32* %2917), !dbg !1078
  %3011 = load i32, i32* %2918, align 4, !dbg !1079
  %3012 = icmp ne i32 %3011, 0, !dbg !1080
  %3013 = load i8, i8* %3009, align 1, !dbg !1081
  %3014 = icmp eq i8 %3013, 0, !dbg !1082
  %3015 = and i1 %3012, %3014, !dbg !1083
  br i1 %3015, label %3029, label %3016, !dbg !1084

3016:                                             ; preds = %3000, %2989
  %3017 = load i32, i32* %2917, align 4, !dbg !1085
  %3018 = icmp eq i32 %3017, 0, !dbg !1086
  %3019 = load i32, i32* %2923, align 4, !dbg !1087
  %3020 = icmp slt i32 %3017, 0, !dbg !1088
  %3021 = icmp eq i32 %3019, 25, !dbg !1089
  %3022 = and i1 %3018, %3021, !dbg !1090
  %3023 = or i1 %3020, %3022, !dbg !1091
  store i32 0, i32* %2917, align 4, !dbg !1092
  br i1 %3023, label %3024, label %3029, !dbg !1093

3024:                                             ; preds = %3016
  %3025 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %2922, i32 0), !dbg !1094
  %3026 = icmp eq i32 %3025, 0, !dbg !1095
  %3027 = icmp eq i32 %3025, 101, !dbg !1096
  br i1 %3027, label %3028, label %3029, !dbg !1097

3028:                                             ; preds = %3024
  store i32 1, i32* %2917, align 4, !dbg !1098
  br label %3029, !dbg !1099

3029:                                             ; preds = %3000, %3028, %3024, %3016
  %3030 = load i32, i32* %2917, align 4, !dbg !1100
  %3031 = icmp ne i32 %3030, 0, !dbg !1101
  br i1 %3031, label %4897, label %3032, !dbg !1102

3032:                                             ; preds = %3029
  %3033 = load i32, i32* %2918, align 4, !dbg !1103
  %3034 = icmp ne i32 %3033, 0, !dbg !1104
  call void @llvm.stackrestore(i8* %2916), !dbg !1105
  br i1 %3034, label %3054, label %3035, !dbg !1106

3035:                                             ; preds = %17, %4895, %3032
  %3036 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !1107
  %3037 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3036, align 8, !dbg !1110
  %3038 = call i8* @llvm.stacksave(), !dbg !1111
  %3039 = alloca %struct.UnpackedRecord, align 8, !dbg !1112
  %3040 = alloca i32, align 8, !dbg !1113
  %3041 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3039, i32 0, i32 0, !dbg !1114
  %3042 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3037, i32 0, i32 13, !dbg !1115
  %3043 = load %struct.KeyInfo*, %struct.KeyInfo** %3042, align 8, !dbg !1116
  store %struct.KeyInfo* %3043, %struct.KeyInfo** %3041, align 8, !dbg !1117
  %3044 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3039, i32 0, i32 2, !dbg !1118
  store i16 1, i16* %3044, align 2, !dbg !1119
  %3045 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3039, i32 0, i32 3, !dbg !1120
  store i8 -1, i8* %3045, align 1, !dbg !1121
  %3046 = getelementptr %struct.UnpackedRecord, %struct.UnpackedRecord* %3039, i32 0, i32 1, !dbg !1122
  %3047 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 22, !dbg !1123
  store %struct.sqlite3_value* %3047, %struct.sqlite3_value** %3046, align 8, !dbg !1124
  %3048 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1125
  %3049 = call i32 @sqlite3VdbeIdxKeyCompare(%struct.sqlite3* %3048, %struct.VdbeCursor* %3037, %struct.UnpackedRecord* %3039, i32* %3040), !dbg !1126
  %3050 = load i32, i32* %3040, align 4, !dbg !1127
  %3051 = add i32 %3050, 1, !dbg !1127
  store i32 %3051, i32* %3040, align 4, !dbg !1127
  call void @llvm.stackrestore(i8* %3038), !dbg !1128
  %3052 = load i32, i32* %3040, align 4, !dbg !1129
  %3053 = icmp sgt i32 %3052, 0, !dbg !1130
  br i1 %3053, label %4897, label %3054, !dbg !1131

3054:                                             ; preds = %17, %3035, %3032
  %3055 = call i8* @llvm.stacksave(), !dbg !166
  %3056 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %3057 = load i8, i8* %3056, align 1, !dbg !170
  %3058 = alloca i32, align 4, !dbg !171
  store i32 0, i32* %3058, align 4, !dbg !172
  %3059 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %3060 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !174
  store %struct.VdbeCursor* %3060, %struct.VdbeCursor** %3059, align 8, !dbg !175
  %3061 = alloca i8*, align 8, !dbg !176
  %3062 = alloca i32, align 4, !dbg !177
  %3063 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3059, i32* %3058), !dbg !178
  %3064 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3059, align 8, !dbg !179
  %3065 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !180
  %3066 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 16, !dbg !181
  %3067 = load i16, i16* %3066, align 2, !dbg !182
  %3068 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 19, !dbg !183
  %3069 = load i32*, i32** %3068, align 8, !dbg !184
  %3070 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 0, !dbg !185
  %3071 = load i8, i8* %3070, align 1, !dbg !186
  %3072 = icmp ne i8 %3071, 3, !dbg !187
  %3073 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 2, !dbg !188
  %3074 = load i8, i8* %3073, align 1, !dbg !189
  %3075 = icmp ne i8 %3074, 0, !dbg !190
  %3076 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 14, !dbg !191
  %3077 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 21, !dbg !192
  %3078 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 22, !dbg !193
  %3079 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 20, !dbg !194
  %3080 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 17, !dbg !195
  %3081 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 9, !dbg !196
  %3082 = load i32, i32* %3081, align 4, !dbg !197
  %3083 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %3084 = load i32, i32* %3083, align 4, !dbg !199
  %3085 = icmp ne i32 %3082, %3084, !dbg !200
  br i1 %3085, label %3086, label %3128, !dbg !201

3086:                                             ; preds = %3054
  br i1 %3075, label %3108, label %3103, !dbg !202

3087:                                             ; preds = %3103, %3110
  %3088 = load i32, i32* %3083, align 4, !dbg !203
  store i32 %3088, i32* %3081, align 4, !dbg !204
  %3089 = load i8*, i8** %3079, align 8, !dbg !205
  %3090 = load i8, i8* %3089, align 1, !dbg !206
  %3091 = icmp sgt i8 %3090, -1, !dbg !209
  br i1 %3091, label %3092, label %3094, !dbg !210

3092:                                             ; preds = %3087
  %3093 = zext i8 %3090 to i32, !dbg !211
  store i32 %3093, i32* %3069, align 4, !dbg !212
  store i32 1, i32* %3076, align 4, !dbg !213
  br label %3097, !dbg !214

3094:                                             ; preds = %3087
  %3095 = call i8 @sqlite3GetVarint32(i8* %3089, i32* %3069), !dbg !215
  %3096 = zext i8 %3095 to i32, !dbg !216
  store i32 %3096, i32* %3076, align 4, !dbg !217
  br label %3097, !dbg !218

3097:                                             ; preds = %3094, %3092
  store i16 0, i16* %3080, align 2, !dbg !219
  %3098 = load i32, i32* %3078, align 4, !dbg !220
  %3099 = load i32, i32* %3069, align 4, !dbg !221
  %3100 = icmp ult i32 %3098, %3099, !dbg !222
  br i1 %3100, label %3102, label %3101, !dbg !223

3101:                                             ; preds = %3097
  store i8* %3089, i8** %3061, align 8, !dbg !224
  br label %3221, !dbg !225

3102:                                             ; preds = %3097
  store i8* null, i8** %3079, align 8, !dbg !226
  store i32 0, i32* %3078, align 4, !dbg !227
  br label %3128, !dbg !228

3103:                                             ; preds = %3086
  %3104 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 12, i32 0, !dbg !229
  %3105 = load %struct.BtCursor*, %struct.BtCursor** %3104, align 8, !dbg !230
  %3106 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3105), !dbg !231
  store i32 %3106, i32* %3077, align 4, !dbg !232
  %3107 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3105, i32* %3078), !dbg !233
  store i8* %3107, i8** %3079, align 8, !dbg !234
  br label %3087, !dbg !235

3108:                                             ; preds = %3086
  %3109 = icmp eq i8 %3071, 3, !dbg !236
  br i1 %3109, label %3110, label %3121, !dbg !237

3110:                                             ; preds = %3108
  %3111 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 10, !dbg !238
  %3112 = load i32, i32* %3111, align 4, !dbg !239
  %3113 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3112, !dbg !240
  %3114 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3113, i32 0, i32 1, !dbg !241
  %3115 = load i16, i16* %3114, align 2, !dbg !242
  %3116 = and i16 %3115, 16, !dbg !243
  %3117 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3113, i32 0, i32 4, !dbg !244
  %3118 = load i32, i32* %3117, align 4, !dbg !245
  store i32 %3118, i32* %3077, align 4, !dbg !246
  store i32 %3118, i32* %3078, align 4, !dbg !247
  %3119 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3113, i32 0, i32 5, !dbg !248
  %3120 = load i8*, i8** %3119, align 8, !dbg !249
  store i8* %3120, i8** %3079, align 8, !dbg !250
  br label %3087, !dbg !251

3121:                                             ; preds = %3108
  %3122 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 1, !dbg !252
  %3123 = load i16, i16* %3122, align 2, !dbg !252
  %3124 = and i16 %3123, 9216, !dbg !252
  %3125 = icmp ne i16 %3124, 0, !dbg !252
  br i1 %3125, label %3126, label %3127, !dbg !252

3126:                                             ; preds = %3121
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3065), !dbg !252
  br label %3309, !dbg !252

3127:                                             ; preds = %3121
  store i16 1, i16* %3122, align 2, !dbg !252
  br label %3309, !dbg !252

3128:                                             ; preds = %3102, %3054
  %3129 = load i16, i16* %3080, align 2, !dbg !253
  %3130 = icmp ule i16 %3129, 3, !dbg !254
  br i1 %3130, label %3213, label %3210, !dbg !255

3131:                                             ; preds = %3210, %3299
  %3132 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 1, !dbg !256
  %3133 = load i16, i16* %3132, align 2, !dbg !257
  %3134 = and i16 9216, %3133, !dbg !258
  %3135 = icmp eq i16 0, %3134, !dbg !259
  br i1 %3135, label %3136, label %3140, !dbg !260

3136:                                             ; preds = %3131
  %3137 = icmp ne i16 %3134, 0, !dbg !261
  br i1 %3137, label %3138, label %3139, !dbg !261

3138:                                             ; preds = %3136
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3065), !dbg !261
  br label %3140, !dbg !261

3139:                                             ; preds = %3136
  store i16 1, i16* %3132, align 2, !dbg !261
  br label %3140, !dbg !261

3140:                                             ; preds = %3138, %3139, %3131
  %3141 = load i32, i32* %3062, align 4, !dbg !262
  %3142 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 23, i32 3, !dbg !263
  %3143 = load i32, i32* %3142, align 4, !dbg !264
  %3144 = load i32, i32* %3078, align 4, !dbg !265
  %3145 = getelementptr i32, i32* %3069, i32 4, !dbg !266
  %3146 = load i32, i32* %3145, align 4, !dbg !267
  %3147 = icmp sge i32 %3144, %3146, !dbg !268
  br i1 %3147, label %3148, label %3188, !dbg !269

3148:                                             ; preds = %3140
  %3149 = load i8*, i8** %3079, align 8, !dbg !270
  %3150 = ptrtoint i8* %3149 to i64, !dbg !271
  %3151 = getelementptr i32, i32* %3069, i32 3, !dbg !272
  %3152 = load i32, i32* %3151, align 4, !dbg !273
  %3153 = zext i32 %3152 to i64, !dbg !274
  %3154 = add i64 %3150, %3153, !dbg !275
  %3155 = inttoptr i64 %3154 to i8*, !dbg !276
  store i8* %3155, i8** %3061, align 8, !dbg !277
  %3156 = load i32, i32* %3062, align 4, !dbg !278
  %3157 = icmp ult i32 %3156, 12, !dbg !279
  br i1 %3157, label %3158, label %3160, !dbg !280

3158:                                             ; preds = %3148
  %3159 = call i32 @sqlite3VdbeSerialGet(i8* %3155, i32 %3156, %struct.sqlite3_value* %3065), !dbg !281
  br label %3309, !dbg !282

3160:                                             ; preds = %3148
  %3161 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %3161, align 2, !dbg !284
  %3162 = getelementptr i16, i16* %3161, i32 1, !dbg !285
  store i16 514, i16* %3162, align 2, !dbg !286
  %3163 = load i32, i32* %3062, align 4, !dbg !287
  %3164 = sub i32 %3163, 12, !dbg !288
  %3165 = lshr i32 %3164, 1, !dbg !289
  %3166 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 4, !dbg !290
  store i32 %3165, i32* %3166, align 4, !dbg !291
  %3167 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 2, !dbg !292
  store i8 %3057, i8* %3167, align 1, !dbg !293
  %3168 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 5, !dbg !294
  %3169 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 7, !dbg !295
  %3170 = load i32, i32* %3169, align 4, !dbg !296
  %3171 = add i32 %3165, 2, !dbg !297
  %3172 = icmp slt i32 %3170, %3171, !dbg !298
  br i1 %3172, label %3173, label %3175, !dbg !299

3173:                                             ; preds = %3160
  store i16 1, i16* %3132, align 2, !dbg !300
  %3174 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3065, i32 %3171, i32 0), !dbg !301
  br label %3178, !dbg !302

3175:                                             ; preds = %3160
  %3176 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 6, !dbg !303
  %3177 = load i8*, i8** %3176, align 8, !dbg !304
  store i8* %3177, i8** %3168, align 8, !dbg !305
  br label %3178, !dbg !306

3178:                                             ; preds = %3175, %3173
  %3179 = zext i32 %3165 to i64, !dbg !307
  %3180 = load i8*, i8** %3168, align 8, !dbg !308
  %3181 = load i8*, i8** %3061, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3180, i8* %3181, i64 %3179, i1 false), !dbg !310
  %3182 = getelementptr i8, i8* %3180, i32 %3165, !dbg !311
  store i8 0, i8* %3182, align 1, !dbg !312
  %3183 = add i32 %3165, 1, !dbg !313
  %3184 = getelementptr i8, i8* %3180, i32 %3183, !dbg !314
  store i8 0, i8* %3184, align 1, !dbg !315
  %3185 = and i32 %3163, 1, !dbg !316
  %3186 = getelementptr i16, i16* %3161, i32 %3185, !dbg !317
  %3187 = load i16, i16* %3186, align 2, !dbg !318
  store i16 %3187, i16* %3132, align 2, !dbg !319
  br label %3309, !dbg !320

3188:                                             ; preds = %3140
  %3189 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 2, !dbg !321
  store i8 %3057, i8* %3189, align 1, !dbg !322
  %3190 = load i32, i32* %3062, align 4, !dbg !323
  %3191 = and i32 %3190, 1, !dbg !324
  %3192 = icmp eq i32 %3191, 0, !dbg !325
  %3193 = icmp sge i32 %3190, 12, !dbg !326
  %3194 = and i1 %3193, %3192, !dbg !327
  %3195 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3190), !dbg !328
  %3196 = icmp eq i32 %3195, 0, !dbg !329
  br i1 %3196, label %3208, label %3197, !dbg !330

3197:                                             ; preds = %3188
  %3198 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 12, i32 0, !dbg !331
  %3199 = load %struct.BtCursor*, %struct.BtCursor** %3198, align 8, !dbg !332
  %3200 = getelementptr i32, i32* %3069, i32 3, !dbg !333
  %3201 = load i32, i32* %3200, align 4, !dbg !334
  %3202 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3199, i32 %3201, i32 %3195, %struct.sqlite3_value* %3065), !dbg !335
  %3203 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 5, !dbg !336
  %3204 = load i8*, i8** %3203, align 8, !dbg !337
  %3205 = call i32 @sqlite3VdbeSerialGet(i8* %3204, i32 %3190, %struct.sqlite3_value* %3065), !dbg !338
  %3206 = load i16, i16* %3132, align 2, !dbg !339
  %3207 = and i16 %3206, -4097, !dbg !340
  store i16 %3207, i16* %3132, align 2, !dbg !341
  br label %3309, !dbg !342

3208:                                             ; preds = %3188
  %3209 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3190, %struct.sqlite3_value* %3065), !dbg !343
  br label %3309, !dbg !344

3210:                                             ; preds = %3128
  %3211 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 23, i32 3, !dbg !345
  %3212 = load i32, i32* %3211, align 4, !dbg !346
  store i32 %3212, i32* %3062, align 4, !dbg !347
  br label %3131, !dbg !348

3213:                                             ; preds = %3128
  %3214 = load i32, i32* %3076, align 4, !dbg !349
  %3215 = load i32, i32* %3069, align 4, !dbg !350
  %3216 = icmp ult i32 %3214, %3215, !dbg !351
  br i1 %3216, label %3217, label %3298, !dbg !352

3217:                                             ; preds = %3213
  %3218 = load i8*, i8** %3079, align 8, !dbg !353
  %3219 = icmp eq i8* %3218, null, !dbg !354
  br i1 %3219, label %3221, label %3220, !dbg !355

3220:                                             ; preds = %3217
  store i8* %3218, i8** %3061, align 8, !dbg !356
  br label %3221, !dbg !357

3221:                                             ; preds = %3220, %3217, %3101
  %3222 = alloca i32, align 4, !dbg !358
  %3223 = load i16, i16* %3080, align 2, !dbg !359
  %3224 = zext i16 %3223 to i32, !dbg !360
  store i32 %3224, i32* %3222, align 4, !dbg !361
  %3225 = alloca i64, align 8, !dbg !362
  %3226 = getelementptr i32, i32* %3069, i32 %3224, !dbg !363
  %3227 = load i32, i32* %3226, align 4, !dbg !364
  %3228 = zext i32 %3227 to i64, !dbg !365
  store i64 %3228, i64* %3225, align 4, !dbg !366
  %3229 = load i8*, i8** %3061, align 8, !dbg !367
  %3230 = load i32, i32* %3076, align 4, !dbg !368
  %3231 = alloca i8*, align 8, !dbg !369
  %3232 = getelementptr i8, i8* %3229, i32 %3230, !dbg !370
  store i8* %3232, i8** %3231, align 8, !dbg !371
  %3233 = load i32, i32* %3069, align 4, !dbg !372
  %3234 = getelementptr i8, i8* %3229, i32 %3233, !dbg !373
  br label %3235, !dbg !374

3235:                                             ; preds = %3242, %3221
  %3236 = load i32, i32* %3222, align 4, !dbg !375
  %3237 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3064, i32 0, i32 23, i32 %3236, !dbg !376
  %3238 = load i8*, i8** %3231, align 8, !dbg !377
  %3239 = load i8, i8* %3238, align 1, !dbg !378
  %3240 = zext i8 %3239 to i32, !dbg !379
  store i32 %3240, i32* %3062, align 4, !dbg !380
  store i32 %3240, i32* %3237, align 4, !dbg !381
  %3241 = icmp sgt i8 %3239, -1, !dbg !382
  br i1 %3241, label %3265, label %3256, !dbg !383

3242:                                             ; preds = %3256, %3265
  %3243 = load i32, i32* %3222, align 4, !dbg !384
  %3244 = add i32 %3243, 1, !dbg !385
  store i32 %3244, i32* %3222, align 4, !dbg !386
  %3245 = load i64, i64* %3225, align 4, !dbg !387
  %3246 = and i64 4294967295, %3245, !dbg !388
  %3247 = trunc i64 %3246 to i32, !dbg !389
  %3248 = getelementptr i32, i32* %3069, i32 %3244, !dbg !390
  store i32 %3247, i32* %3248, align 4, !dbg !391
  %3249 = load i32, i32* %3222, align 4, !dbg !392
  %3250 = icmp sle i32 %3249, 3, !dbg !393
  %3251 = load i8*, i8** %3231, align 8, !dbg !394
  %3252 = ptrtoint i8* %3251 to i64, !dbg !395
  %3253 = ptrtoint i8* %3234 to i64, !dbg !396
  %3254 = icmp ult i64 %3252, %3253, !dbg !397
  %3255 = and i1 %3250, %3254, !dbg !398
  br i1 %3255, label %3235, label %3274, !dbg !399

3256:                                             ; preds = %3235
  %3257 = load i8*, i8** %3231, align 8, !dbg !400
  %3258 = call i8 @sqlite3GetVarint32(i8* %3257, i32* %3062), !dbg !401
  %3259 = getelementptr i8, i8* %3257, i8 %3258, !dbg !402
  store i8* %3259, i8** %3231, align 8, !dbg !403
  %3260 = load i32, i32* %3062, align 4, !dbg !404
  store i32 %3260, i32* %3237, align 4, !dbg !405
  %3261 = load i64, i64* %3225, align 4, !dbg !406
  %3262 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3260), !dbg !407
  %3263 = zext i32 %3262 to i64, !dbg !408
  %3264 = add i64 %3261, %3263, !dbg !409
  store i64 %3264, i64* %3225, align 4, !dbg !410
  br label %3242, !dbg !411

3265:                                             ; preds = %3235
  %3266 = getelementptr i8, i8* %3238, i32 1, !dbg !412
  store i8* %3266, i8** %3231, align 8, !dbg !413
  %3267 = load i32, i32* %3062, align 4, !dbg !414
  %3268 = trunc i32 %3267 to i8, !dbg !415
  %3269 = getelementptr i8, i8* %4, i8 %3268, !dbg !416
  %3270 = load i8, i8* %3269, align 1, !dbg !417
  %3271 = zext i8 %3270 to i64, !dbg !418
  %3272 = load i64, i64* %3225, align 4, !dbg !419
  %3273 = add i64 %3272, %3271, !dbg !420
  store i64 %3273, i64* %3225, align 4, !dbg !421
  br label %3242, !dbg !422

3274:                                             ; preds = %3242
  %3275 = load i64, i64* %3225, align 4, !dbg !423
  %3276 = load i32, i32* %3077, align 4, !dbg !424
  %3277 = zext i32 %3276 to i64, !dbg !425
  %3278 = icmp uge i64 %3252, %3253, !dbg !426
  %3279 = icmp ugt i64 %3252, %3253, !dbg !427
  %3280 = icmp ne i64 %3275, %3277, !dbg !428
  %3281 = icmp ugt i64 %3275, %3277, !dbg !429
  %3282 = or i1 %3279, %3280, !dbg !430
  %3283 = and i1 %3278, %3282, !dbg !431
  %3284 = or i1 %3283, %3281, !dbg !432
  br i1 %3284, label %3285, label %3289, !dbg !433

3285:                                             ; preds = %3274
  %3286 = load i32, i32* %3069, align 4, !dbg !434
  %3287 = icmp eq i32 %3286, 0, !dbg !435
  br i1 %3287, label %3288, label %3289, !dbg !436

3288:                                             ; preds = %3285
  store i32 0, i32* %3222, align 4, !dbg !437
  store i8* %3234, i8** %3231, align 8, !dbg !438
  br label %3289, !dbg !439

3289:                                             ; preds = %3288, %3285, %3274
  %3290 = load i32, i32* %3222, align 4, !dbg !440
  %3291 = trunc i32 %3290 to i16, !dbg !441
  store i16 %3291, i16* %3080, align 2, !dbg !442
  %3292 = load i8*, i8** %3231, align 8, !dbg !443
  %3293 = ptrtoint i8* %3292 to i64, !dbg !444
  %3294 = load i8*, i8** %3061, align 8, !dbg !445
  %3295 = ptrtoint i8* %3294 to i64, !dbg !446
  %3296 = sub i64 %3293, %3295, !dbg !447
  %3297 = trunc i64 %3296 to i32, !dbg !448
  store i32 %3297, i32* %3076, align 4, !dbg !449
  br label %3299, !dbg !450

3298:                                             ; preds = %3213
  store i32 0, i32* %3062, align 4, !dbg !451
  br label %3299, !dbg !452

3299:                                             ; preds = %3289, %3298
  %3300 = load i16, i16* %3080, align 2, !dbg !453
  %3301 = icmp sle i16 %3300, 3, !dbg !454
  br i1 %3301, label %3302, label %3131, !dbg !455

3302:                                             ; preds = %3299
  %3303 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3065, i32 0, i32 1, !dbg !456
  %3304 = load i16, i16* %3303, align 2, !dbg !456
  %3305 = and i16 %3304, 9216, !dbg !456
  %3306 = icmp ne i16 %3305, 0, !dbg !456
  br i1 %3306, label %3307, label %3308, !dbg !456

3307:                                             ; preds = %3302
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3065), !dbg !456
  br label %3309, !dbg !456

3308:                                             ; preds = %3302
  store i16 1, i16* %3303, align 2, !dbg !456
  br label %3309, !dbg !456

3309:                                             ; preds = %3307, %3308, %3178, %3158, %3197, %3208, %3126, %3127
  call void @llvm.stackrestore(i8* %3055), !dbg !457
  br label %3310, !dbg !74

3310:                                             ; preds = %17, %3309
  %3311 = call i8* @llvm.stacksave(), !dbg !166
  %3312 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %3313 = load i8, i8* %3312, align 1, !dbg !170
  %3314 = alloca i32, align 4, !dbg !171
  store i32 6, i32* %3314, align 4, !dbg !172
  %3315 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !514
  %3316 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %3317 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3315, align 8, !dbg !174
  store %struct.VdbeCursor* %3317, %struct.VdbeCursor** %3316, align 8, !dbg !175
  %3318 = alloca i8*, align 8, !dbg !176
  %3319 = alloca i32, align 4, !dbg !177
  %3320 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3316, i32* %3314), !dbg !178
  %3321 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3316, align 8, !dbg !179
  %3322 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !180
  %3323 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 16, !dbg !181
  %3324 = load i16, i16* %3323, align 2, !dbg !182
  %3325 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 19, !dbg !183
  %3326 = load i32*, i32** %3325, align 8, !dbg !184
  %3327 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 0, !dbg !185
  %3328 = load i8, i8* %3327, align 1, !dbg !186
  %3329 = icmp ne i8 %3328, 3, !dbg !187
  %3330 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 2, !dbg !188
  %3331 = load i8, i8* %3330, align 1, !dbg !189
  %3332 = icmp ne i8 %3331, 0, !dbg !190
  %3333 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 14, !dbg !191
  %3334 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 21, !dbg !192
  %3335 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 22, !dbg !193
  %3336 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 20, !dbg !194
  %3337 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 17, !dbg !195
  %3338 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 9, !dbg !196
  %3339 = load i32, i32* %3338, align 4, !dbg !197
  %3340 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %3341 = load i32, i32* %3340, align 4, !dbg !199
  %3342 = icmp ne i32 %3339, %3341, !dbg !200
  br i1 %3342, label %3343, label %3385, !dbg !201

3343:                                             ; preds = %3310
  br i1 %3332, label %3365, label %3360, !dbg !202

3344:                                             ; preds = %3360, %3367
  %3345 = load i32, i32* %3340, align 4, !dbg !203
  store i32 %3345, i32* %3338, align 4, !dbg !204
  %3346 = load i8*, i8** %3336, align 8, !dbg !205
  %3347 = load i8, i8* %3346, align 1, !dbg !206
  %3348 = icmp sgt i8 %3347, -1, !dbg !209
  br i1 %3348, label %3349, label %3351, !dbg !210

3349:                                             ; preds = %3344
  %3350 = zext i8 %3347 to i32, !dbg !211
  store i32 %3350, i32* %3326, align 4, !dbg !212
  store i32 1, i32* %3333, align 4, !dbg !213
  br label %3354, !dbg !214

3351:                                             ; preds = %3344
  %3352 = call i8 @sqlite3GetVarint32(i8* %3346, i32* %3326), !dbg !215
  %3353 = zext i8 %3352 to i32, !dbg !216
  store i32 %3353, i32* %3333, align 4, !dbg !217
  br label %3354, !dbg !218

3354:                                             ; preds = %3351, %3349
  store i16 0, i16* %3337, align 2, !dbg !219
  %3355 = load i32, i32* %3335, align 4, !dbg !220
  %3356 = load i32, i32* %3326, align 4, !dbg !221
  %3357 = icmp ult i32 %3355, %3356, !dbg !222
  br i1 %3357, label %3359, label %3358, !dbg !223

3358:                                             ; preds = %3354
  store i8* %3346, i8** %3318, align 8, !dbg !224
  br label %3478, !dbg !225

3359:                                             ; preds = %3354
  store i8* null, i8** %3336, align 8, !dbg !226
  store i32 0, i32* %3335, align 4, !dbg !227
  br label %3385, !dbg !228

3360:                                             ; preds = %3343
  %3361 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 12, i32 0, !dbg !229
  %3362 = load %struct.BtCursor*, %struct.BtCursor** %3361, align 8, !dbg !230
  %3363 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3362), !dbg !231
  store i32 %3363, i32* %3334, align 4, !dbg !232
  %3364 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3362, i32* %3335), !dbg !233
  store i8* %3364, i8** %3336, align 8, !dbg !234
  br label %3344, !dbg !235

3365:                                             ; preds = %3343
  %3366 = icmp eq i8 %3328, 3, !dbg !236
  br i1 %3366, label %3367, label %3378, !dbg !237

3367:                                             ; preds = %3365
  %3368 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 10, !dbg !238
  %3369 = load i32, i32* %3368, align 4, !dbg !239
  %3370 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3369, !dbg !240
  %3371 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3370, i32 0, i32 1, !dbg !241
  %3372 = load i16, i16* %3371, align 2, !dbg !242
  %3373 = and i16 %3372, 16, !dbg !243
  %3374 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3370, i32 0, i32 4, !dbg !244
  %3375 = load i32, i32* %3374, align 4, !dbg !245
  store i32 %3375, i32* %3334, align 4, !dbg !246
  store i32 %3375, i32* %3335, align 4, !dbg !247
  %3376 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3370, i32 0, i32 5, !dbg !248
  %3377 = load i8*, i8** %3376, align 8, !dbg !249
  store i8* %3377, i8** %3336, align 8, !dbg !250
  br label %3344, !dbg !251

3378:                                             ; preds = %3365
  %3379 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 1, !dbg !252
  %3380 = load i16, i16* %3379, align 2, !dbg !252
  %3381 = and i16 %3380, 9216, !dbg !252
  %3382 = icmp ne i16 %3381, 0, !dbg !252
  br i1 %3382, label %3383, label %3384, !dbg !252

3383:                                             ; preds = %3378
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3322), !dbg !252
  br label %3566, !dbg !252

3384:                                             ; preds = %3378
  store i16 1, i16* %3379, align 2, !dbg !252
  br label %3566, !dbg !252

3385:                                             ; preds = %3359, %3310
  %3386 = load i16, i16* %3337, align 2, !dbg !253
  %3387 = icmp ule i16 %3386, 1, !dbg !254
  br i1 %3387, label %3470, label %3467, !dbg !255

3388:                                             ; preds = %3467, %3556
  %3389 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 1, !dbg !256
  %3390 = load i16, i16* %3389, align 2, !dbg !257
  %3391 = and i16 9216, %3390, !dbg !258
  %3392 = icmp eq i16 0, %3391, !dbg !259
  br i1 %3392, label %3393, label %3397, !dbg !260

3393:                                             ; preds = %3388
  %3394 = icmp ne i16 %3391, 0, !dbg !261
  br i1 %3394, label %3395, label %3396, !dbg !261

3395:                                             ; preds = %3393
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3322), !dbg !261
  br label %3397, !dbg !261

3396:                                             ; preds = %3393
  store i16 1, i16* %3389, align 2, !dbg !261
  br label %3397, !dbg !261

3397:                                             ; preds = %3395, %3396, %3388
  %3398 = load i32, i32* %3319, align 4, !dbg !262
  %3399 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 23, i32 1, !dbg !263
  %3400 = load i32, i32* %3399, align 4, !dbg !264
  %3401 = load i32, i32* %3335, align 4, !dbg !265
  %3402 = getelementptr i32, i32* %3326, i32 2, !dbg !266
  %3403 = load i32, i32* %3402, align 4, !dbg !267
  %3404 = icmp sge i32 %3401, %3403, !dbg !268
  br i1 %3404, label %3405, label %3445, !dbg !269

3405:                                             ; preds = %3397
  %3406 = load i8*, i8** %3336, align 8, !dbg !270
  %3407 = ptrtoint i8* %3406 to i64, !dbg !271
  %3408 = getelementptr i32, i32* %3326, i32 1, !dbg !272
  %3409 = load i32, i32* %3408, align 4, !dbg !273
  %3410 = zext i32 %3409 to i64, !dbg !274
  %3411 = add i64 %3407, %3410, !dbg !275
  %3412 = inttoptr i64 %3411 to i8*, !dbg !276
  store i8* %3412, i8** %3318, align 8, !dbg !277
  %3413 = load i32, i32* %3319, align 4, !dbg !278
  %3414 = icmp ult i32 %3413, 12, !dbg !279
  br i1 %3414, label %3415, label %3417, !dbg !280

3415:                                             ; preds = %3405
  %3416 = call i32 @sqlite3VdbeSerialGet(i8* %3412, i32 %3413, %struct.sqlite3_value* %3322), !dbg !281
  br label %3566, !dbg !282

3417:                                             ; preds = %3405
  %3418 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %3418, align 2, !dbg !284
  %3419 = getelementptr i16, i16* %3418, i32 1, !dbg !285
  store i16 514, i16* %3419, align 2, !dbg !286
  %3420 = load i32, i32* %3319, align 4, !dbg !287
  %3421 = sub i32 %3420, 12, !dbg !288
  %3422 = lshr i32 %3421, 1, !dbg !289
  %3423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 4, !dbg !290
  store i32 %3422, i32* %3423, align 4, !dbg !291
  %3424 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 2, !dbg !292
  store i8 %3313, i8* %3424, align 1, !dbg !293
  %3425 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 5, !dbg !294
  %3426 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 7, !dbg !295
  %3427 = load i32, i32* %3426, align 4, !dbg !296
  %3428 = add i32 %3422, 2, !dbg !297
  %3429 = icmp slt i32 %3427, %3428, !dbg !298
  br i1 %3429, label %3430, label %3432, !dbg !299

3430:                                             ; preds = %3417
  store i16 1, i16* %3389, align 2, !dbg !300
  %3431 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3322, i32 %3428, i32 0), !dbg !301
  br label %3435, !dbg !302

3432:                                             ; preds = %3417
  %3433 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 6, !dbg !303
  %3434 = load i8*, i8** %3433, align 8, !dbg !304
  store i8* %3434, i8** %3425, align 8, !dbg !305
  br label %3435, !dbg !306

3435:                                             ; preds = %3432, %3430
  %3436 = zext i32 %3422 to i64, !dbg !307
  %3437 = load i8*, i8** %3425, align 8, !dbg !308
  %3438 = load i8*, i8** %3318, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3437, i8* %3438, i64 %3436, i1 false), !dbg !310
  %3439 = getelementptr i8, i8* %3437, i32 %3422, !dbg !311
  store i8 0, i8* %3439, align 1, !dbg !312
  %3440 = add i32 %3422, 1, !dbg !313
  %3441 = getelementptr i8, i8* %3437, i32 %3440, !dbg !314
  store i8 0, i8* %3441, align 1, !dbg !315
  %3442 = and i32 %3420, 1, !dbg !316
  %3443 = getelementptr i16, i16* %3418, i32 %3442, !dbg !317
  %3444 = load i16, i16* %3443, align 2, !dbg !318
  store i16 %3444, i16* %3389, align 2, !dbg !319
  br label %3566, !dbg !320

3445:                                             ; preds = %3397
  %3446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 2, !dbg !321
  store i8 %3313, i8* %3446, align 1, !dbg !322
  %3447 = load i32, i32* %3319, align 4, !dbg !323
  %3448 = and i32 %3447, 1, !dbg !324
  %3449 = icmp eq i32 %3448, 0, !dbg !325
  %3450 = icmp sge i32 %3447, 12, !dbg !326
  %3451 = and i1 %3450, %3449, !dbg !327
  %3452 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3447), !dbg !328
  %3453 = icmp eq i32 %3452, 0, !dbg !329
  br i1 %3453, label %3465, label %3454, !dbg !330

3454:                                             ; preds = %3445
  %3455 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 12, i32 0, !dbg !331
  %3456 = load %struct.BtCursor*, %struct.BtCursor** %3455, align 8, !dbg !332
  %3457 = getelementptr i32, i32* %3326, i32 1, !dbg !333
  %3458 = load i32, i32* %3457, align 4, !dbg !334
  %3459 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3456, i32 %3458, i32 %3452, %struct.sqlite3_value* %3322), !dbg !335
  %3460 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 5, !dbg !336
  %3461 = load i8*, i8** %3460, align 8, !dbg !337
  %3462 = call i32 @sqlite3VdbeSerialGet(i8* %3461, i32 %3447, %struct.sqlite3_value* %3322), !dbg !338
  %3463 = load i16, i16* %3389, align 2, !dbg !339
  %3464 = and i16 %3463, -4097, !dbg !340
  store i16 %3464, i16* %3389, align 2, !dbg !341
  br label %3566, !dbg !342

3465:                                             ; preds = %3445
  %3466 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3447, %struct.sqlite3_value* %3322), !dbg !343
  br label %3566, !dbg !344

3467:                                             ; preds = %3385
  %3468 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 23, i32 1, !dbg !345
  %3469 = load i32, i32* %3468, align 4, !dbg !346
  store i32 %3469, i32* %3319, align 4, !dbg !347
  br label %3388, !dbg !348

3470:                                             ; preds = %3385
  %3471 = load i32, i32* %3333, align 4, !dbg !349
  %3472 = load i32, i32* %3326, align 4, !dbg !350
  %3473 = icmp ult i32 %3471, %3472, !dbg !351
  br i1 %3473, label %3474, label %3555, !dbg !352

3474:                                             ; preds = %3470
  %3475 = load i8*, i8** %3336, align 8, !dbg !353
  %3476 = icmp eq i8* %3475, null, !dbg !354
  br i1 %3476, label %3478, label %3477, !dbg !355

3477:                                             ; preds = %3474
  store i8* %3475, i8** %3318, align 8, !dbg !356
  br label %3478, !dbg !357

3478:                                             ; preds = %3477, %3474, %3358
  %3479 = alloca i32, align 4, !dbg !358
  %3480 = load i16, i16* %3337, align 2, !dbg !359
  %3481 = zext i16 %3480 to i32, !dbg !360
  store i32 %3481, i32* %3479, align 4, !dbg !361
  %3482 = alloca i64, align 8, !dbg !362
  %3483 = getelementptr i32, i32* %3326, i32 %3481, !dbg !363
  %3484 = load i32, i32* %3483, align 4, !dbg !364
  %3485 = zext i32 %3484 to i64, !dbg !365
  store i64 %3485, i64* %3482, align 4, !dbg !366
  %3486 = load i8*, i8** %3318, align 8, !dbg !367
  %3487 = load i32, i32* %3333, align 4, !dbg !368
  %3488 = alloca i8*, align 8, !dbg !369
  %3489 = getelementptr i8, i8* %3486, i32 %3487, !dbg !370
  store i8* %3489, i8** %3488, align 8, !dbg !371
  %3490 = load i32, i32* %3326, align 4, !dbg !372
  %3491 = getelementptr i8, i8* %3486, i32 %3490, !dbg !373
  br label %3492, !dbg !374

3492:                                             ; preds = %3499, %3478
  %3493 = load i32, i32* %3479, align 4, !dbg !375
  %3494 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3321, i32 0, i32 23, i32 %3493, !dbg !376
  %3495 = load i8*, i8** %3488, align 8, !dbg !377
  %3496 = load i8, i8* %3495, align 1, !dbg !378
  %3497 = zext i8 %3496 to i32, !dbg !379
  store i32 %3497, i32* %3319, align 4, !dbg !380
  store i32 %3497, i32* %3494, align 4, !dbg !381
  %3498 = icmp sgt i8 %3496, -1, !dbg !382
  br i1 %3498, label %3522, label %3513, !dbg !383

3499:                                             ; preds = %3513, %3522
  %3500 = load i32, i32* %3479, align 4, !dbg !384
  %3501 = add i32 %3500, 1, !dbg !385
  store i32 %3501, i32* %3479, align 4, !dbg !386
  %3502 = load i64, i64* %3482, align 4, !dbg !387
  %3503 = and i64 4294967295, %3502, !dbg !388
  %3504 = trunc i64 %3503 to i32, !dbg !389
  %3505 = getelementptr i32, i32* %3326, i32 %3501, !dbg !390
  store i32 %3504, i32* %3505, align 4, !dbg !391
  %3506 = load i32, i32* %3479, align 4, !dbg !392
  %3507 = icmp sle i32 %3506, 1, !dbg !393
  %3508 = load i8*, i8** %3488, align 8, !dbg !394
  %3509 = ptrtoint i8* %3508 to i64, !dbg !395
  %3510 = ptrtoint i8* %3491 to i64, !dbg !396
  %3511 = icmp ult i64 %3509, %3510, !dbg !397
  %3512 = and i1 %3507, %3511, !dbg !398
  br i1 %3512, label %3492, label %3531, !dbg !399

3513:                                             ; preds = %3492
  %3514 = load i8*, i8** %3488, align 8, !dbg !400
  %3515 = call i8 @sqlite3GetVarint32(i8* %3514, i32* %3319), !dbg !401
  %3516 = getelementptr i8, i8* %3514, i8 %3515, !dbg !402
  store i8* %3516, i8** %3488, align 8, !dbg !403
  %3517 = load i32, i32* %3319, align 4, !dbg !404
  store i32 %3517, i32* %3494, align 4, !dbg !405
  %3518 = load i64, i64* %3482, align 4, !dbg !406
  %3519 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3517), !dbg !407
  %3520 = zext i32 %3519 to i64, !dbg !408
  %3521 = add i64 %3518, %3520, !dbg !409
  store i64 %3521, i64* %3482, align 4, !dbg !410
  br label %3499, !dbg !411

3522:                                             ; preds = %3492
  %3523 = getelementptr i8, i8* %3495, i32 1, !dbg !412
  store i8* %3523, i8** %3488, align 8, !dbg !413
  %3524 = load i32, i32* %3319, align 4, !dbg !414
  %3525 = trunc i32 %3524 to i8, !dbg !415
  %3526 = getelementptr i8, i8* %4, i8 %3525, !dbg !416
  %3527 = load i8, i8* %3526, align 1, !dbg !417
  %3528 = zext i8 %3527 to i64, !dbg !418
  %3529 = load i64, i64* %3482, align 4, !dbg !419
  %3530 = add i64 %3529, %3528, !dbg !420
  store i64 %3530, i64* %3482, align 4, !dbg !421
  br label %3499, !dbg !422

3531:                                             ; preds = %3499
  %3532 = load i64, i64* %3482, align 4, !dbg !423
  %3533 = load i32, i32* %3334, align 4, !dbg !424
  %3534 = zext i32 %3533 to i64, !dbg !425
  %3535 = icmp uge i64 %3509, %3510, !dbg !426
  %3536 = icmp ugt i64 %3509, %3510, !dbg !427
  %3537 = icmp ne i64 %3532, %3534, !dbg !428
  %3538 = icmp ugt i64 %3532, %3534, !dbg !429
  %3539 = or i1 %3536, %3537, !dbg !430
  %3540 = and i1 %3535, %3539, !dbg !431
  %3541 = or i1 %3540, %3538, !dbg !432
  br i1 %3541, label %3542, label %3546, !dbg !433

3542:                                             ; preds = %3531
  %3543 = load i32, i32* %3326, align 4, !dbg !434
  %3544 = icmp eq i32 %3543, 0, !dbg !435
  br i1 %3544, label %3545, label %3546, !dbg !436

3545:                                             ; preds = %3542
  store i32 0, i32* %3479, align 4, !dbg !437
  store i8* %3491, i8** %3488, align 8, !dbg !438
  br label %3546, !dbg !439

3546:                                             ; preds = %3545, %3542, %3531
  %3547 = load i32, i32* %3479, align 4, !dbg !440
  %3548 = trunc i32 %3547 to i16, !dbg !441
  store i16 %3548, i16* %3337, align 2, !dbg !442
  %3549 = load i8*, i8** %3488, align 8, !dbg !443
  %3550 = ptrtoint i8* %3549 to i64, !dbg !444
  %3551 = load i8*, i8** %3318, align 8, !dbg !445
  %3552 = ptrtoint i8* %3551 to i64, !dbg !446
  %3553 = sub i64 %3550, %3552, !dbg !447
  %3554 = trunc i64 %3553 to i32, !dbg !448
  store i32 %3554, i32* %3333, align 4, !dbg !449
  br label %3556, !dbg !450

3555:                                             ; preds = %3470
  store i32 0, i32* %3319, align 4, !dbg !451
  br label %3556, !dbg !452

3556:                                             ; preds = %3546, %3555
  %3557 = load i16, i16* %3337, align 2, !dbg !453
  %3558 = icmp sle i16 %3557, 1, !dbg !454
  br i1 %3558, label %3559, label %3388, !dbg !455

3559:                                             ; preds = %3556
  %3560 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3322, i32 0, i32 1, !dbg !456
  %3561 = load i16, i16* %3560, align 2, !dbg !456
  %3562 = and i16 %3561, 9216, !dbg !456
  %3563 = icmp ne i16 %3562, 0, !dbg !456
  br i1 %3563, label %3564, label %3565, !dbg !456

3564:                                             ; preds = %3559
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3322), !dbg !456
  br label %3566, !dbg !456

3565:                                             ; preds = %3559
  store i16 1, i16* %3560, align 2, !dbg !456
  br label %3566, !dbg !456

3566:                                             ; preds = %3564, %3565, %3435, %3415, %3454, %3465, %3383, %3384
  call void @llvm.stackrestore(i8* %3311), !dbg !457
  br label %3567, !dbg !74

3567:                                             ; preds = %17, %3566
  %3568 = call i8* @llvm.stacksave(), !dbg !515
  %3569 = alloca i32, align 8, !dbg !518
  %3570 = alloca i32, align 8, !dbg !519
  %3571 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !520
  %3572 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !521
  %3573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 1, !dbg !522
  %3574 = load i16, i16* %3573, align 2, !dbg !523
  %3575 = alloca i16, align 8, !dbg !524
  store i16 %3574, i16* %3575, align 2, !dbg !525
  %3576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 1, !dbg !526
  %3577 = load i16, i16* %3576, align 2, !dbg !527
  %3578 = alloca i16, align 8, !dbg !528
  store i16 %3577, i16* %3578, align 2, !dbg !529
  %3579 = or i16 %3574, %3577, !dbg !530
  %3580 = and i16 %3579, 1, !dbg !531
  %3581 = icmp ne i16 %3580, 0, !dbg !532
  br i1 %3581, label %3582, label %3583, !dbg !533

3582:                                             ; preds = %3567
  call void @llvm.stackrestore(i8* %3568), !dbg !534
  br label %4885, !dbg !535

3583:                                             ; preds = %3567
  %3584 = and i16 %3579, 2, !dbg !1132
  %3585 = icmp ne i16 %3584, 0, !dbg !1133
  br i1 %3585, label %3586, label %3643, !dbg !1134

3586:                                             ; preds = %3583
  %3587 = and i16 %3574, 46, !dbg !1135
  %3588 = icmp eq i16 %3587, 2, !dbg !1136
  br i1 %3588, label %3589, label %3615, !dbg !1137

3589:                                             ; preds = %3586
  %3590 = call i8* @llvm.stacksave(), !dbg !1138
  %3591 = alloca double, align 8, !dbg !1016
  %3592 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 0, i32 0, !dbg !1138
  %3593 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 2, !dbg !1138
  %3594 = load i8, i8* %3593, align 1, !dbg !1138
  %3595 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 5, !dbg !1138
  %3596 = load i8*, i8** %3595, align 8, !dbg !1138
  %3597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 4, !dbg !1138
  %3598 = load i32, i32* %3597, align 4, !dbg !1138
  %3599 = call i32 @sqlite3AtoF(i8* %3596, double* %3591, i32 %3598, i8 %3594), !dbg !1138
  %3600 = icmp sle i32 %3599, 0, !dbg !1138
  br i1 %3600, label %3613, label %3601, !dbg !1138

3601:                                             ; preds = %3589
  %3602 = icmp eq i32 %3599, 1, !dbg !1138
  %3603 = load double, double* %3591, align 8, !dbg !1138
  br i1 %3602, label %3604, label %3607, !dbg !1138

3604:                                             ; preds = %3601
  %3605 = load i16, i16* %3573, align 2, !dbg !1138
  %3606 = or i16 %3605, 4, !dbg !1138
  store i16 %3606, i16* %3573, align 2, !dbg !1138
  br label %3610, !dbg !1138

3607:                                             ; preds = %3601
  store double %3603, double* %3592, align 8, !dbg !1138
  %3608 = load i16, i16* %3573, align 2, !dbg !1138
  %3609 = or i16 %3608, 8, !dbg !1138
  store i16 %3609, i16* %3573, align 2, !dbg !1138
  br label %3610, !dbg !1138

3610:                                             ; preds = %3607, %3604
  %3611 = load i16, i16* %3573, align 2, !dbg !1138
  %3612 = and i16 %3611, -3, !dbg !1138
  store i16 %3612, i16* %3573, align 2, !dbg !1138
  br label %3613, !dbg !1138

3613:                                             ; preds = %3610, %3589
  call void @llvm.stackrestore(i8* %3590), !dbg !1138
  %3614 = load i16, i16* %3576, align 2, !dbg !1139
  store i16 %3614, i16* %3578, align 2, !dbg !1140
  br label %3615, !dbg !1141

3615:                                             ; preds = %3613, %3586
  %3616 = and i16 %3577, 46, !dbg !1142
  %3617 = icmp eq i16 %3616, 2, !dbg !1143
  br i1 %3617, label %3618, label %3643, !dbg !1144

3618:                                             ; preds = %3615
  %3619 = call i8* @llvm.stacksave(), !dbg !1145
  %3620 = alloca double, align 8, !dbg !1016
  %3621 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 0, i32 0, !dbg !1145
  %3622 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 2, !dbg !1145
  %3623 = load i8, i8* %3622, align 1, !dbg !1145
  %3624 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 5, !dbg !1145
  %3625 = load i8*, i8** %3624, align 8, !dbg !1145
  %3626 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 4, !dbg !1145
  %3627 = load i32, i32* %3626, align 4, !dbg !1145
  %3628 = call i32 @sqlite3AtoF(i8* %3625, double* %3620, i32 %3627, i8 %3623), !dbg !1145
  %3629 = icmp sle i32 %3628, 0, !dbg !1145
  br i1 %3629, label %3642, label %3630, !dbg !1145

3630:                                             ; preds = %3618
  %3631 = icmp eq i32 %3628, 1, !dbg !1145
  %3632 = load double, double* %3620, align 8, !dbg !1145
  br i1 %3631, label %3633, label %3636, !dbg !1145

3633:                                             ; preds = %3630
  %3634 = load i16, i16* %3576, align 2, !dbg !1145
  %3635 = or i16 %3634, 4, !dbg !1145
  store i16 %3635, i16* %3576, align 2, !dbg !1145
  br label %3639, !dbg !1145

3636:                                             ; preds = %3630
  store double %3632, double* %3621, align 8, !dbg !1145
  %3637 = load i16, i16* %3576, align 2, !dbg !1145
  %3638 = or i16 %3637, 8, !dbg !1145
  store i16 %3638, i16* %3576, align 2, !dbg !1145
  br label %3639, !dbg !1145

3639:                                             ; preds = %3636, %3633
  %3640 = load i16, i16* %3576, align 2, !dbg !1145
  %3641 = and i16 %3640, -3, !dbg !1145
  store i16 %3641, i16* %3576, align 2, !dbg !1145
  br label %3642, !dbg !1145

3642:                                             ; preds = %3639, %3618
  call void @llvm.stackrestore(i8* %3619), !dbg !1145
  br label %3643, !dbg !1146

3643:                                             ; preds = %3615, %3642, %3583
  %3644 = load i16, i16* %3573, align 2, !dbg !1147
  %3645 = load i16, i16* %3576, align 2, !dbg !1148
  %3646 = and i16 %3644, %3645, !dbg !1149
  %3647 = and i16 %3646, 4, !dbg !1150
  %3648 = icmp ne i16 %3647, 0, !dbg !1151
  br i1 %3648, label %3649, label %3662, !dbg !1152

3649:                                             ; preds = %3643
  %3650 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3571, i32 0, i32 0, !dbg !1153
  %3651 = bitcast %union.MemValue* %3650 to i64*, !dbg !1154
  %3652 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3572, i32 0, i32 0, !dbg !1155
  %3653 = bitcast %union.MemValue* %3652 to i64*, !dbg !1156
  %3654 = load i64, i64* %3651, align 4, !dbg !1157
  %3655 = load i64, i64* %3653, align 4, !dbg !1158
  %3656 = icmp sgt i64 %3655, %3654, !dbg !1159
  br i1 %3656, label %3657, label %3658, !dbg !1160

3657:                                             ; preds = %3649
  store i32 1, i32* %3569, align 4, !dbg !1161
  br label %3668, !dbg !1162

3658:                                             ; preds = %3649
  %3659 = icmp slt i64 %3655, %3654, !dbg !1163
  br i1 %3659, label %3660, label %3661, !dbg !1164

3660:                                             ; preds = %3658
  store i32 -1, i32* %3569, align 4, !dbg !1165
  br label %3668, !dbg !1166

3661:                                             ; preds = %3658
  store i32 0, i32* %3569, align 4, !dbg !1167
  br label %3668, !dbg !1168

3662:                                             ; preds = %3643
  %3663 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 34, !dbg !560
  %3664 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %3663, i32 0, i32 6, !dbg !561
  %3665 = bitcast %union.p4union* %3664 to %struct.CollSeq**, !dbg !562
  %3666 = load %struct.CollSeq*, %struct.CollSeq** %3665, align 8, !dbg !563
  %3667 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %3572, %struct.sqlite3_value* %3571, %struct.CollSeq* %3666), !dbg !564
  store i32 %3667, i32* %3569, align 4, !dbg !565
  br label %3668, !dbg !1169

3668:                                             ; preds = %3660, %3661, %3662, %3657
  %3669 = load i32, i32* %3569, align 4, !dbg !1170
  %3670 = icmp slt i32 %3669, 0, !dbg !566
  br i1 %3670, label %3671, label %3672, !dbg !567

3671:                                             ; preds = %3668
  store i32 1, i32* %3570, align 4, !dbg !568
  br label %3676, !dbg !569

3672:                                             ; preds = %3668
  %3673 = icmp eq i32 %3669, 0, !dbg !570
  br i1 %3673, label %3674, label %3675, !dbg !571

3674:                                             ; preds = %3672
  store i32 0, i32* %3570, align 4, !dbg !572
  br label %3676, !dbg !573

3675:                                             ; preds = %3672
  store i32 1, i32* %3570, align 4, !dbg !574
  br label %3676, !dbg !575

3676:                                             ; preds = %3675, %3674, %3671
  store i16 %3577, i16* %3578, align 2, !dbg !576
  store i16 %3574, i16* %3575, align 2, !dbg !577
  %3677 = load i32, i32* %3570, align 4, !dbg !578
  %3678 = icmp ne i32 %3677, 0, !dbg !579
  call void @llvm.stackrestore(i8* %3568), !dbg !580
  br i1 %3678, label %4885, label %3679, !dbg !581

3679:                                             ; preds = %17, %3676
  %3680 = call i8* @llvm.stacksave(), !dbg !166
  %3681 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %3682 = load i8, i8* %3681, align 1, !dbg !170
  %3683 = alloca i32, align 4, !dbg !171
  store i32 1, i32* %3683, align 4, !dbg !172
  %3684 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 1, !dbg !514
  %3685 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %3686 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3684, align 8, !dbg !174
  store %struct.VdbeCursor* %3686, %struct.VdbeCursor** %3685, align 8, !dbg !175
  %3687 = alloca i8*, align 8, !dbg !176
  %3688 = alloca i32, align 4, !dbg !177
  %3689 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3685, i32* %3683), !dbg !178
  %3690 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3685, align 8, !dbg !179
  %3691 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !180
  %3692 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 16, !dbg !181
  %3693 = load i16, i16* %3692, align 2, !dbg !182
  %3694 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 19, !dbg !183
  %3695 = load i32*, i32** %3694, align 8, !dbg !184
  %3696 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 0, !dbg !185
  %3697 = load i8, i8* %3696, align 1, !dbg !186
  %3698 = icmp ne i8 %3697, 3, !dbg !187
  %3699 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 2, !dbg !188
  %3700 = load i8, i8* %3699, align 1, !dbg !189
  %3701 = icmp ne i8 %3700, 0, !dbg !190
  %3702 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 14, !dbg !191
  %3703 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 21, !dbg !192
  %3704 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 22, !dbg !193
  %3705 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 20, !dbg !194
  %3706 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 17, !dbg !195
  %3707 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 9, !dbg !196
  %3708 = load i32, i32* %3707, align 4, !dbg !197
  %3709 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %3710 = load i32, i32* %3709, align 4, !dbg !199
  %3711 = icmp ne i32 %3708, %3710, !dbg !200
  br i1 %3711, label %3712, label %3754, !dbg !201

3712:                                             ; preds = %3679
  br i1 %3701, label %3734, label %3729, !dbg !202

3713:                                             ; preds = %3729, %3736
  %3714 = load i32, i32* %3709, align 4, !dbg !203
  store i32 %3714, i32* %3707, align 4, !dbg !204
  %3715 = load i8*, i8** %3705, align 8, !dbg !205
  %3716 = load i8, i8* %3715, align 1, !dbg !206
  %3717 = icmp sgt i8 %3716, -1, !dbg !209
  br i1 %3717, label %3718, label %3720, !dbg !210

3718:                                             ; preds = %3713
  %3719 = zext i8 %3716 to i32, !dbg !211
  store i32 %3719, i32* %3695, align 4, !dbg !212
  store i32 1, i32* %3702, align 4, !dbg !213
  br label %3723, !dbg !214

3720:                                             ; preds = %3713
  %3721 = call i8 @sqlite3GetVarint32(i8* %3715, i32* %3695), !dbg !215
  %3722 = zext i8 %3721 to i32, !dbg !216
  store i32 %3722, i32* %3702, align 4, !dbg !217
  br label %3723, !dbg !218

3723:                                             ; preds = %3720, %3718
  store i16 0, i16* %3706, align 2, !dbg !219
  %3724 = load i32, i32* %3704, align 4, !dbg !220
  %3725 = load i32, i32* %3695, align 4, !dbg !221
  %3726 = icmp ult i32 %3724, %3725, !dbg !222
  br i1 %3726, label %3728, label %3727, !dbg !223

3727:                                             ; preds = %3723
  store i8* %3715, i8** %3687, align 8, !dbg !224
  br label %3847, !dbg !225

3728:                                             ; preds = %3723
  store i8* null, i8** %3705, align 8, !dbg !226
  store i32 0, i32* %3704, align 4, !dbg !227
  br label %3754, !dbg !228

3729:                                             ; preds = %3712
  %3730 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 12, i32 0, !dbg !229
  %3731 = load %struct.BtCursor*, %struct.BtCursor** %3730, align 8, !dbg !230
  %3732 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3731), !dbg !231
  store i32 %3732, i32* %3703, align 4, !dbg !232
  %3733 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3731, i32* %3704), !dbg !233
  store i8* %3733, i8** %3705, align 8, !dbg !234
  br label %3713, !dbg !235

3734:                                             ; preds = %3712
  %3735 = icmp eq i8 %3697, 3, !dbg !236
  br i1 %3735, label %3736, label %3747, !dbg !237

3736:                                             ; preds = %3734
  %3737 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 10, !dbg !238
  %3738 = load i32, i32* %3737, align 4, !dbg !239
  %3739 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3738, !dbg !240
  %3740 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3739, i32 0, i32 1, !dbg !241
  %3741 = load i16, i16* %3740, align 2, !dbg !242
  %3742 = and i16 %3741, 16, !dbg !243
  %3743 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3739, i32 0, i32 4, !dbg !244
  %3744 = load i32, i32* %3743, align 4, !dbg !245
  store i32 %3744, i32* %3703, align 4, !dbg !246
  store i32 %3744, i32* %3704, align 4, !dbg !247
  %3745 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3739, i32 0, i32 5, !dbg !248
  %3746 = load i8*, i8** %3745, align 8, !dbg !249
  store i8* %3746, i8** %3705, align 8, !dbg !250
  br label %3713, !dbg !251

3747:                                             ; preds = %3734
  %3748 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 1, !dbg !252
  %3749 = load i16, i16* %3748, align 2, !dbg !252
  %3750 = and i16 %3749, 9216, !dbg !252
  %3751 = icmp ne i16 %3750, 0, !dbg !252
  br i1 %3751, label %3752, label %3753, !dbg !252

3752:                                             ; preds = %3747
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3691), !dbg !252
  br label %3935, !dbg !252

3753:                                             ; preds = %3747
  store i16 1, i16* %3748, align 2, !dbg !252
  br label %3935, !dbg !252

3754:                                             ; preds = %3728, %3679
  %3755 = load i16, i16* %3706, align 2, !dbg !253
  %3756 = icmp ule i16 %3755, 4, !dbg !254
  br i1 %3756, label %3839, label %3836, !dbg !255

3757:                                             ; preds = %3836, %3925
  %3758 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 1, !dbg !256
  %3759 = load i16, i16* %3758, align 2, !dbg !257
  %3760 = and i16 9216, %3759, !dbg !258
  %3761 = icmp eq i16 0, %3760, !dbg !259
  br i1 %3761, label %3762, label %3766, !dbg !260

3762:                                             ; preds = %3757
  %3763 = icmp ne i16 %3760, 0, !dbg !261
  br i1 %3763, label %3764, label %3765, !dbg !261

3764:                                             ; preds = %3762
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3691), !dbg !261
  br label %3766, !dbg !261

3765:                                             ; preds = %3762
  store i16 1, i16* %3758, align 2, !dbg !261
  br label %3766, !dbg !261

3766:                                             ; preds = %3764, %3765, %3757
  %3767 = load i32, i32* %3688, align 4, !dbg !262
  %3768 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 23, i32 4, !dbg !263
  %3769 = load i32, i32* %3768, align 4, !dbg !264
  %3770 = load i32, i32* %3704, align 4, !dbg !265
  %3771 = getelementptr i32, i32* %3695, i32 5, !dbg !266
  %3772 = load i32, i32* %3771, align 4, !dbg !267
  %3773 = icmp sge i32 %3770, %3772, !dbg !268
  br i1 %3773, label %3774, label %3814, !dbg !269

3774:                                             ; preds = %3766
  %3775 = load i8*, i8** %3705, align 8, !dbg !270
  %3776 = ptrtoint i8* %3775 to i64, !dbg !271
  %3777 = getelementptr i32, i32* %3695, i32 4, !dbg !272
  %3778 = load i32, i32* %3777, align 4, !dbg !273
  %3779 = zext i32 %3778 to i64, !dbg !274
  %3780 = add i64 %3776, %3779, !dbg !275
  %3781 = inttoptr i64 %3780 to i8*, !dbg !276
  store i8* %3781, i8** %3687, align 8, !dbg !277
  %3782 = load i32, i32* %3688, align 4, !dbg !278
  %3783 = icmp ult i32 %3782, 12, !dbg !279
  br i1 %3783, label %3784, label %3786, !dbg !280

3784:                                             ; preds = %3774
  %3785 = call i32 @sqlite3VdbeSerialGet(i8* %3781, i32 %3782, %struct.sqlite3_value* %3691), !dbg !281
  br label %3935, !dbg !282

3786:                                             ; preds = %3774
  %3787 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %3787, align 2, !dbg !284
  %3788 = getelementptr i16, i16* %3787, i32 1, !dbg !285
  store i16 514, i16* %3788, align 2, !dbg !286
  %3789 = load i32, i32* %3688, align 4, !dbg !287
  %3790 = sub i32 %3789, 12, !dbg !288
  %3791 = lshr i32 %3790, 1, !dbg !289
  %3792 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 4, !dbg !290
  store i32 %3791, i32* %3792, align 4, !dbg !291
  %3793 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 2, !dbg !292
  store i8 %3682, i8* %3793, align 1, !dbg !293
  %3794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 5, !dbg !294
  %3795 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 7, !dbg !295
  %3796 = load i32, i32* %3795, align 4, !dbg !296
  %3797 = add i32 %3791, 2, !dbg !297
  %3798 = icmp slt i32 %3796, %3797, !dbg !298
  br i1 %3798, label %3799, label %3801, !dbg !299

3799:                                             ; preds = %3786
  store i16 1, i16* %3758, align 2, !dbg !300
  %3800 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3691, i32 %3797, i32 0), !dbg !301
  br label %3804, !dbg !302

3801:                                             ; preds = %3786
  %3802 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 6, !dbg !303
  %3803 = load i8*, i8** %3802, align 8, !dbg !304
  store i8* %3803, i8** %3794, align 8, !dbg !305
  br label %3804, !dbg !306

3804:                                             ; preds = %3801, %3799
  %3805 = zext i32 %3791 to i64, !dbg !307
  %3806 = load i8*, i8** %3794, align 8, !dbg !308
  %3807 = load i8*, i8** %3687, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3806, i8* %3807, i64 %3805, i1 false), !dbg !310
  %3808 = getelementptr i8, i8* %3806, i32 %3791, !dbg !311
  store i8 0, i8* %3808, align 1, !dbg !312
  %3809 = add i32 %3791, 1, !dbg !313
  %3810 = getelementptr i8, i8* %3806, i32 %3809, !dbg !314
  store i8 0, i8* %3810, align 1, !dbg !315
  %3811 = and i32 %3789, 1, !dbg !316
  %3812 = getelementptr i16, i16* %3787, i32 %3811, !dbg !317
  %3813 = load i16, i16* %3812, align 2, !dbg !318
  store i16 %3813, i16* %3758, align 2, !dbg !319
  br label %3935, !dbg !320

3814:                                             ; preds = %3766
  %3815 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 2, !dbg !321
  store i8 %3682, i8* %3815, align 1, !dbg !322
  %3816 = load i32, i32* %3688, align 4, !dbg !323
  %3817 = and i32 %3816, 1, !dbg !324
  %3818 = icmp eq i32 %3817, 0, !dbg !325
  %3819 = icmp sge i32 %3816, 12, !dbg !326
  %3820 = and i1 %3819, %3818, !dbg !327
  %3821 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3816), !dbg !328
  %3822 = icmp eq i32 %3821, 0, !dbg !329
  br i1 %3822, label %3834, label %3823, !dbg !330

3823:                                             ; preds = %3814
  %3824 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 12, i32 0, !dbg !331
  %3825 = load %struct.BtCursor*, %struct.BtCursor** %3824, align 8, !dbg !332
  %3826 = getelementptr i32, i32* %3695, i32 4, !dbg !333
  %3827 = load i32, i32* %3826, align 4, !dbg !334
  %3828 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %3825, i32 %3827, i32 %3821, %struct.sqlite3_value* %3691), !dbg !335
  %3829 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 5, !dbg !336
  %3830 = load i8*, i8** %3829, align 8, !dbg !337
  %3831 = call i32 @sqlite3VdbeSerialGet(i8* %3830, i32 %3816, %struct.sqlite3_value* %3691), !dbg !338
  %3832 = load i16, i16* %3758, align 2, !dbg !339
  %3833 = and i16 %3832, -4097, !dbg !340
  store i16 %3833, i16* %3758, align 2, !dbg !341
  br label %3935, !dbg !342

3834:                                             ; preds = %3814
  %3835 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %3816, %struct.sqlite3_value* %3691), !dbg !343
  br label %3935, !dbg !344

3836:                                             ; preds = %3754
  %3837 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 23, i32 4, !dbg !345
  %3838 = load i32, i32* %3837, align 4, !dbg !346
  store i32 %3838, i32* %3688, align 4, !dbg !347
  br label %3757, !dbg !348

3839:                                             ; preds = %3754
  %3840 = load i32, i32* %3702, align 4, !dbg !349
  %3841 = load i32, i32* %3695, align 4, !dbg !350
  %3842 = icmp ult i32 %3840, %3841, !dbg !351
  br i1 %3842, label %3843, label %3924, !dbg !352

3843:                                             ; preds = %3839
  %3844 = load i8*, i8** %3705, align 8, !dbg !353
  %3845 = icmp eq i8* %3844, null, !dbg !354
  br i1 %3845, label %3847, label %3846, !dbg !355

3846:                                             ; preds = %3843
  store i8* %3844, i8** %3687, align 8, !dbg !356
  br label %3847, !dbg !357

3847:                                             ; preds = %3846, %3843, %3727
  %3848 = alloca i32, align 4, !dbg !358
  %3849 = load i16, i16* %3706, align 2, !dbg !359
  %3850 = zext i16 %3849 to i32, !dbg !360
  store i32 %3850, i32* %3848, align 4, !dbg !361
  %3851 = alloca i64, align 8, !dbg !362
  %3852 = getelementptr i32, i32* %3695, i32 %3850, !dbg !363
  %3853 = load i32, i32* %3852, align 4, !dbg !364
  %3854 = zext i32 %3853 to i64, !dbg !365
  store i64 %3854, i64* %3851, align 4, !dbg !366
  %3855 = load i8*, i8** %3687, align 8, !dbg !367
  %3856 = load i32, i32* %3702, align 4, !dbg !368
  %3857 = alloca i8*, align 8, !dbg !369
  %3858 = getelementptr i8, i8* %3855, i32 %3856, !dbg !370
  store i8* %3858, i8** %3857, align 8, !dbg !371
  %3859 = load i32, i32* %3695, align 4, !dbg !372
  %3860 = getelementptr i8, i8* %3855, i32 %3859, !dbg !373
  br label %3861, !dbg !374

3861:                                             ; preds = %3868, %3847
  %3862 = load i32, i32* %3848, align 4, !dbg !375
  %3863 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3690, i32 0, i32 23, i32 %3862, !dbg !376
  %3864 = load i8*, i8** %3857, align 8, !dbg !377
  %3865 = load i8, i8* %3864, align 1, !dbg !378
  %3866 = zext i8 %3865 to i32, !dbg !379
  store i32 %3866, i32* %3688, align 4, !dbg !380
  store i32 %3866, i32* %3863, align 4, !dbg !381
  %3867 = icmp sgt i8 %3865, -1, !dbg !382
  br i1 %3867, label %3891, label %3882, !dbg !383

3868:                                             ; preds = %3882, %3891
  %3869 = load i32, i32* %3848, align 4, !dbg !384
  %3870 = add i32 %3869, 1, !dbg !385
  store i32 %3870, i32* %3848, align 4, !dbg !386
  %3871 = load i64, i64* %3851, align 4, !dbg !387
  %3872 = and i64 4294967295, %3871, !dbg !388
  %3873 = trunc i64 %3872 to i32, !dbg !389
  %3874 = getelementptr i32, i32* %3695, i32 %3870, !dbg !390
  store i32 %3873, i32* %3874, align 4, !dbg !391
  %3875 = load i32, i32* %3848, align 4, !dbg !392
  %3876 = icmp sle i32 %3875, 4, !dbg !393
  %3877 = load i8*, i8** %3857, align 8, !dbg !394
  %3878 = ptrtoint i8* %3877 to i64, !dbg !395
  %3879 = ptrtoint i8* %3860 to i64, !dbg !396
  %3880 = icmp ult i64 %3878, %3879, !dbg !397
  %3881 = and i1 %3876, %3880, !dbg !398
  br i1 %3881, label %3861, label %3900, !dbg !399

3882:                                             ; preds = %3861
  %3883 = load i8*, i8** %3857, align 8, !dbg !400
  %3884 = call i8 @sqlite3GetVarint32(i8* %3883, i32* %3688), !dbg !401
  %3885 = getelementptr i8, i8* %3883, i8 %3884, !dbg !402
  store i8* %3885, i8** %3857, align 8, !dbg !403
  %3886 = load i32, i32* %3688, align 4, !dbg !404
  store i32 %3886, i32* %3863, align 4, !dbg !405
  %3887 = load i64, i64* %3851, align 4, !dbg !406
  %3888 = call i32 @sqlite3VdbeSerialTypeLen(i32 %3886), !dbg !407
  %3889 = zext i32 %3888 to i64, !dbg !408
  %3890 = add i64 %3887, %3889, !dbg !409
  store i64 %3890, i64* %3851, align 4, !dbg !410
  br label %3868, !dbg !411

3891:                                             ; preds = %3861
  %3892 = getelementptr i8, i8* %3864, i32 1, !dbg !412
  store i8* %3892, i8** %3857, align 8, !dbg !413
  %3893 = load i32, i32* %3688, align 4, !dbg !414
  %3894 = trunc i32 %3893 to i8, !dbg !415
  %3895 = getelementptr i8, i8* %4, i8 %3894, !dbg !416
  %3896 = load i8, i8* %3895, align 1, !dbg !417
  %3897 = zext i8 %3896 to i64, !dbg !418
  %3898 = load i64, i64* %3851, align 4, !dbg !419
  %3899 = add i64 %3898, %3897, !dbg !420
  store i64 %3899, i64* %3851, align 4, !dbg !421
  br label %3868, !dbg !422

3900:                                             ; preds = %3868
  %3901 = load i64, i64* %3851, align 4, !dbg !423
  %3902 = load i32, i32* %3703, align 4, !dbg !424
  %3903 = zext i32 %3902 to i64, !dbg !425
  %3904 = icmp uge i64 %3878, %3879, !dbg !426
  %3905 = icmp ugt i64 %3878, %3879, !dbg !427
  %3906 = icmp ne i64 %3901, %3903, !dbg !428
  %3907 = icmp ugt i64 %3901, %3903, !dbg !429
  %3908 = or i1 %3905, %3906, !dbg !430
  %3909 = and i1 %3904, %3908, !dbg !431
  %3910 = or i1 %3909, %3907, !dbg !432
  br i1 %3910, label %3911, label %3915, !dbg !433

3911:                                             ; preds = %3900
  %3912 = load i32, i32* %3695, align 4, !dbg !434
  %3913 = icmp eq i32 %3912, 0, !dbg !435
  br i1 %3913, label %3914, label %3915, !dbg !436

3914:                                             ; preds = %3911
  store i32 0, i32* %3848, align 4, !dbg !437
  store i8* %3860, i8** %3857, align 8, !dbg !438
  br label %3915, !dbg !439

3915:                                             ; preds = %3914, %3911, %3900
  %3916 = load i32, i32* %3848, align 4, !dbg !440
  %3917 = trunc i32 %3916 to i16, !dbg !441
  store i16 %3917, i16* %3706, align 2, !dbg !442
  %3918 = load i8*, i8** %3857, align 8, !dbg !443
  %3919 = ptrtoint i8* %3918 to i64, !dbg !444
  %3920 = load i8*, i8** %3687, align 8, !dbg !445
  %3921 = ptrtoint i8* %3920 to i64, !dbg !446
  %3922 = sub i64 %3919, %3921, !dbg !447
  %3923 = trunc i64 %3922 to i32, !dbg !448
  store i32 %3923, i32* %3702, align 4, !dbg !449
  br label %3925, !dbg !450

3924:                                             ; preds = %3839
  store i32 0, i32* %3688, align 4, !dbg !451
  br label %3925, !dbg !452

3925:                                             ; preds = %3915, %3924
  %3926 = load i16, i16* %3706, align 2, !dbg !453
  %3927 = icmp sle i16 %3926, 4, !dbg !454
  br i1 %3927, label %3928, label %3757, !dbg !455

3928:                                             ; preds = %3925
  %3929 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3691, i32 0, i32 1, !dbg !456
  %3930 = load i16, i16* %3929, align 2, !dbg !456
  %3931 = and i16 %3930, 9216, !dbg !456
  %3932 = icmp ne i16 %3931, 0, !dbg !456
  br i1 %3932, label %3933, label %3934, !dbg !456

3933:                                             ; preds = %3928
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3691), !dbg !456
  br label %3935, !dbg !456

3934:                                             ; preds = %3928
  store i16 1, i16* %3929, align 2, !dbg !456
  br label %3935, !dbg !456

3935:                                             ; preds = %3933, %3934, %3804, %3784, %3823, %3834, %3752, %3753
  call void @llvm.stackrestore(i8* %3680), !dbg !457
  br label %3936, !dbg !74

3936:                                             ; preds = %17, %3935
  %3937 = call i8* @llvm.stacksave(), !dbg !166
  %3938 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %3939 = load i8, i8* %3938, align 1, !dbg !170
  %3940 = alloca i32, align 4, !dbg !171
  store i32 6, i32* %3940, align 4, !dbg !172
  %3941 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !514
  %3942 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %3943 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3941, align 8, !dbg !174
  store %struct.VdbeCursor* %3943, %struct.VdbeCursor** %3942, align 8, !dbg !175
  %3944 = alloca i8*, align 8, !dbg !176
  %3945 = alloca i32, align 4, !dbg !177
  %3946 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %3942, i32* %3940), !dbg !178
  %3947 = load %struct.VdbeCursor*, %struct.VdbeCursor** %3942, align 8, !dbg !179
  %3948 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 19, !dbg !180
  %3949 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 16, !dbg !181
  %3950 = load i16, i16* %3949, align 2, !dbg !182
  %3951 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 19, !dbg !183
  %3952 = load i32*, i32** %3951, align 8, !dbg !184
  %3953 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 0, !dbg !185
  %3954 = load i8, i8* %3953, align 1, !dbg !186
  %3955 = icmp ne i8 %3954, 3, !dbg !187
  %3956 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 2, !dbg !188
  %3957 = load i8, i8* %3956, align 1, !dbg !189
  %3958 = icmp ne i8 %3957, 0, !dbg !190
  %3959 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 14, !dbg !191
  %3960 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 21, !dbg !192
  %3961 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 22, !dbg !193
  %3962 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 20, !dbg !194
  %3963 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 17, !dbg !195
  %3964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 9, !dbg !196
  %3965 = load i32, i32* %3964, align 4, !dbg !197
  %3966 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %3967 = load i32, i32* %3966, align 4, !dbg !199
  %3968 = icmp ne i32 %3965, %3967, !dbg !200
  br i1 %3968, label %3969, label %4011, !dbg !201

3969:                                             ; preds = %3936
  br i1 %3958, label %3991, label %3986, !dbg !202

3970:                                             ; preds = %3986, %3993
  %3971 = load i32, i32* %3966, align 4, !dbg !203
  store i32 %3971, i32* %3964, align 4, !dbg !204
  %3972 = load i8*, i8** %3962, align 8, !dbg !205
  %3973 = load i8, i8* %3972, align 1, !dbg !206
  %3974 = icmp sgt i8 %3973, -1, !dbg !209
  br i1 %3974, label %3975, label %3977, !dbg !210

3975:                                             ; preds = %3970
  %3976 = zext i8 %3973 to i32, !dbg !211
  store i32 %3976, i32* %3952, align 4, !dbg !212
  store i32 1, i32* %3959, align 4, !dbg !213
  br label %3980, !dbg !214

3977:                                             ; preds = %3970
  %3978 = call i8 @sqlite3GetVarint32(i8* %3972, i32* %3952), !dbg !215
  %3979 = zext i8 %3978 to i32, !dbg !216
  store i32 %3979, i32* %3959, align 4, !dbg !217
  br label %3980, !dbg !218

3980:                                             ; preds = %3977, %3975
  store i16 0, i16* %3963, align 2, !dbg !219
  %3981 = load i32, i32* %3961, align 4, !dbg !220
  %3982 = load i32, i32* %3952, align 4, !dbg !221
  %3983 = icmp ult i32 %3981, %3982, !dbg !222
  br i1 %3983, label %3985, label %3984, !dbg !223

3984:                                             ; preds = %3980
  store i8* %3972, i8** %3944, align 8, !dbg !224
  br label %4104, !dbg !225

3985:                                             ; preds = %3980
  store i8* null, i8** %3962, align 8, !dbg !226
  store i32 0, i32* %3961, align 4, !dbg !227
  br label %4011, !dbg !228

3986:                                             ; preds = %3969
  %3987 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 12, i32 0, !dbg !229
  %3988 = load %struct.BtCursor*, %struct.BtCursor** %3987, align 8, !dbg !230
  %3989 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %3988), !dbg !231
  store i32 %3989, i32* %3960, align 4, !dbg !232
  %3990 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %3988, i32* %3961), !dbg !233
  store i8* %3990, i8** %3962, align 8, !dbg !234
  br label %3970, !dbg !235

3991:                                             ; preds = %3969
  %3992 = icmp eq i8 %3954, 3, !dbg !236
  br i1 %3992, label %3993, label %4004, !dbg !237

3993:                                             ; preds = %3991
  %3994 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 10, !dbg !238
  %3995 = load i32, i32* %3994, align 4, !dbg !239
  %3996 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %3995, !dbg !240
  %3997 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3996, i32 0, i32 1, !dbg !241
  %3998 = load i16, i16* %3997, align 2, !dbg !242
  %3999 = and i16 %3998, 16, !dbg !243
  %4000 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3996, i32 0, i32 4, !dbg !244
  %4001 = load i32, i32* %4000, align 4, !dbg !245
  store i32 %4001, i32* %3960, align 4, !dbg !246
  store i32 %4001, i32* %3961, align 4, !dbg !247
  %4002 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3996, i32 0, i32 5, !dbg !248
  %4003 = load i8*, i8** %4002, align 8, !dbg !249
  store i8* %4003, i8** %3962, align 8, !dbg !250
  br label %3970, !dbg !251

4004:                                             ; preds = %3991
  %4005 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 1, !dbg !252
  %4006 = load i16, i16* %4005, align 2, !dbg !252
  %4007 = and i16 %4006, 9216, !dbg !252
  %4008 = icmp ne i16 %4007, 0, !dbg !252
  br i1 %4008, label %4009, label %4010, !dbg !252

4009:                                             ; preds = %4004
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3948), !dbg !252
  br label %4192, !dbg !252

4010:                                             ; preds = %4004
  store i16 1, i16* %4005, align 2, !dbg !252
  br label %4192, !dbg !252

4011:                                             ; preds = %3985, %3936
  %4012 = load i16, i16* %3963, align 2, !dbg !253
  %4013 = icmp ule i16 %4012, 2, !dbg !254
  br i1 %4013, label %4096, label %4093, !dbg !255

4014:                                             ; preds = %4093, %4182
  %4015 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 1, !dbg !256
  %4016 = load i16, i16* %4015, align 2, !dbg !257
  %4017 = and i16 9216, %4016, !dbg !258
  %4018 = icmp eq i16 0, %4017, !dbg !259
  br i1 %4018, label %4019, label %4023, !dbg !260

4019:                                             ; preds = %4014
  %4020 = icmp ne i16 %4017, 0, !dbg !261
  br i1 %4020, label %4021, label %4022, !dbg !261

4021:                                             ; preds = %4019
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3948), !dbg !261
  br label %4023, !dbg !261

4022:                                             ; preds = %4019
  store i16 1, i16* %4015, align 2, !dbg !261
  br label %4023, !dbg !261

4023:                                             ; preds = %4021, %4022, %4014
  %4024 = load i32, i32* %3945, align 4, !dbg !262
  %4025 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 23, i32 2, !dbg !263
  %4026 = load i32, i32* %4025, align 4, !dbg !264
  %4027 = load i32, i32* %3961, align 4, !dbg !265
  %4028 = getelementptr i32, i32* %3952, i32 3, !dbg !266
  %4029 = load i32, i32* %4028, align 4, !dbg !267
  %4030 = icmp sge i32 %4027, %4029, !dbg !268
  br i1 %4030, label %4031, label %4071, !dbg !269

4031:                                             ; preds = %4023
  %4032 = load i8*, i8** %3962, align 8, !dbg !270
  %4033 = ptrtoint i8* %4032 to i64, !dbg !271
  %4034 = getelementptr i32, i32* %3952, i32 2, !dbg !272
  %4035 = load i32, i32* %4034, align 4, !dbg !273
  %4036 = zext i32 %4035 to i64, !dbg !274
  %4037 = add i64 %4033, %4036, !dbg !275
  %4038 = inttoptr i64 %4037 to i8*, !dbg !276
  store i8* %4038, i8** %3944, align 8, !dbg !277
  %4039 = load i32, i32* %3945, align 4, !dbg !278
  %4040 = icmp ult i32 %4039, 12, !dbg !279
  br i1 %4040, label %4041, label %4043, !dbg !280

4041:                                             ; preds = %4031
  %4042 = call i32 @sqlite3VdbeSerialGet(i8* %4038, i32 %4039, %struct.sqlite3_value* %3948), !dbg !281
  br label %4192, !dbg !282

4043:                                             ; preds = %4031
  %4044 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %4044, align 2, !dbg !284
  %4045 = getelementptr i16, i16* %4044, i32 1, !dbg !285
  store i16 514, i16* %4045, align 2, !dbg !286
  %4046 = load i32, i32* %3945, align 4, !dbg !287
  %4047 = sub i32 %4046, 12, !dbg !288
  %4048 = lshr i32 %4047, 1, !dbg !289
  %4049 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 4, !dbg !290
  store i32 %4048, i32* %4049, align 4, !dbg !291
  %4050 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 2, !dbg !292
  store i8 %3939, i8* %4050, align 1, !dbg !293
  %4051 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 5, !dbg !294
  %4052 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 7, !dbg !295
  %4053 = load i32, i32* %4052, align 4, !dbg !296
  %4054 = add i32 %4048, 2, !dbg !297
  %4055 = icmp slt i32 %4053, %4054, !dbg !298
  br i1 %4055, label %4056, label %4058, !dbg !299

4056:                                             ; preds = %4043
  store i16 1, i16* %4015, align 2, !dbg !300
  %4057 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %3948, i32 %4054, i32 0), !dbg !301
  br label %4061, !dbg !302

4058:                                             ; preds = %4043
  %4059 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 6, !dbg !303
  %4060 = load i8*, i8** %4059, align 8, !dbg !304
  store i8* %4060, i8** %4051, align 8, !dbg !305
  br label %4061, !dbg !306

4061:                                             ; preds = %4058, %4056
  %4062 = zext i32 %4048 to i64, !dbg !307
  %4063 = load i8*, i8** %4051, align 8, !dbg !308
  %4064 = load i8*, i8** %3944, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4063, i8* %4064, i64 %4062, i1 false), !dbg !310
  %4065 = getelementptr i8, i8* %4063, i32 %4048, !dbg !311
  store i8 0, i8* %4065, align 1, !dbg !312
  %4066 = add i32 %4048, 1, !dbg !313
  %4067 = getelementptr i8, i8* %4063, i32 %4066, !dbg !314
  store i8 0, i8* %4067, align 1, !dbg !315
  %4068 = and i32 %4046, 1, !dbg !316
  %4069 = getelementptr i16, i16* %4044, i32 %4068, !dbg !317
  %4070 = load i16, i16* %4069, align 2, !dbg !318
  store i16 %4070, i16* %4015, align 2, !dbg !319
  br label %4192, !dbg !320

4071:                                             ; preds = %4023
  %4072 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 2, !dbg !321
  store i8 %3939, i8* %4072, align 1, !dbg !322
  %4073 = load i32, i32* %3945, align 4, !dbg !323
  %4074 = and i32 %4073, 1, !dbg !324
  %4075 = icmp eq i32 %4074, 0, !dbg !325
  %4076 = icmp sge i32 %4073, 12, !dbg !326
  %4077 = and i1 %4076, %4075, !dbg !327
  %4078 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4073), !dbg !328
  %4079 = icmp eq i32 %4078, 0, !dbg !329
  br i1 %4079, label %4091, label %4080, !dbg !330

4080:                                             ; preds = %4071
  %4081 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 12, i32 0, !dbg !331
  %4082 = load %struct.BtCursor*, %struct.BtCursor** %4081, align 8, !dbg !332
  %4083 = getelementptr i32, i32* %3952, i32 2, !dbg !333
  %4084 = load i32, i32* %4083, align 4, !dbg !334
  %4085 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4082, i32 %4084, i32 %4078, %struct.sqlite3_value* %3948), !dbg !335
  %4086 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 5, !dbg !336
  %4087 = load i8*, i8** %4086, align 8, !dbg !337
  %4088 = call i32 @sqlite3VdbeSerialGet(i8* %4087, i32 %4073, %struct.sqlite3_value* %3948), !dbg !338
  %4089 = load i16, i16* %4015, align 2, !dbg !339
  %4090 = and i16 %4089, -4097, !dbg !340
  store i16 %4090, i16* %4015, align 2, !dbg !341
  br label %4192, !dbg !342

4091:                                             ; preds = %4071
  %4092 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4073, %struct.sqlite3_value* %3948), !dbg !343
  br label %4192, !dbg !344

4093:                                             ; preds = %4011
  %4094 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 23, i32 2, !dbg !345
  %4095 = load i32, i32* %4094, align 4, !dbg !346
  store i32 %4095, i32* %3945, align 4, !dbg !347
  br label %4014, !dbg !348

4096:                                             ; preds = %4011
  %4097 = load i32, i32* %3959, align 4, !dbg !349
  %4098 = load i32, i32* %3952, align 4, !dbg !350
  %4099 = icmp ult i32 %4097, %4098, !dbg !351
  br i1 %4099, label %4100, label %4181, !dbg !352

4100:                                             ; preds = %4096
  %4101 = load i8*, i8** %3962, align 8, !dbg !353
  %4102 = icmp eq i8* %4101, null, !dbg !354
  br i1 %4102, label %4104, label %4103, !dbg !355

4103:                                             ; preds = %4100
  store i8* %4101, i8** %3944, align 8, !dbg !356
  br label %4104, !dbg !357

4104:                                             ; preds = %4103, %4100, %3984
  %4105 = alloca i32, align 4, !dbg !358
  %4106 = load i16, i16* %3963, align 2, !dbg !359
  %4107 = zext i16 %4106 to i32, !dbg !360
  store i32 %4107, i32* %4105, align 4, !dbg !361
  %4108 = alloca i64, align 8, !dbg !362
  %4109 = getelementptr i32, i32* %3952, i32 %4107, !dbg !363
  %4110 = load i32, i32* %4109, align 4, !dbg !364
  %4111 = zext i32 %4110 to i64, !dbg !365
  store i64 %4111, i64* %4108, align 4, !dbg !366
  %4112 = load i8*, i8** %3944, align 8, !dbg !367
  %4113 = load i32, i32* %3959, align 4, !dbg !368
  %4114 = alloca i8*, align 8, !dbg !369
  %4115 = getelementptr i8, i8* %4112, i32 %4113, !dbg !370
  store i8* %4115, i8** %4114, align 8, !dbg !371
  %4116 = load i32, i32* %3952, align 4, !dbg !372
  %4117 = getelementptr i8, i8* %4112, i32 %4116, !dbg !373
  br label %4118, !dbg !374

4118:                                             ; preds = %4125, %4104
  %4119 = load i32, i32* %4105, align 4, !dbg !375
  %4120 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %3947, i32 0, i32 23, i32 %4119, !dbg !376
  %4121 = load i8*, i8** %4114, align 8, !dbg !377
  %4122 = load i8, i8* %4121, align 1, !dbg !378
  %4123 = zext i8 %4122 to i32, !dbg !379
  store i32 %4123, i32* %3945, align 4, !dbg !380
  store i32 %4123, i32* %4120, align 4, !dbg !381
  %4124 = icmp sgt i8 %4122, -1, !dbg !382
  br i1 %4124, label %4148, label %4139, !dbg !383

4125:                                             ; preds = %4139, %4148
  %4126 = load i32, i32* %4105, align 4, !dbg !384
  %4127 = add i32 %4126, 1, !dbg !385
  store i32 %4127, i32* %4105, align 4, !dbg !386
  %4128 = load i64, i64* %4108, align 4, !dbg !387
  %4129 = and i64 4294967295, %4128, !dbg !388
  %4130 = trunc i64 %4129 to i32, !dbg !389
  %4131 = getelementptr i32, i32* %3952, i32 %4127, !dbg !390
  store i32 %4130, i32* %4131, align 4, !dbg !391
  %4132 = load i32, i32* %4105, align 4, !dbg !392
  %4133 = icmp sle i32 %4132, 2, !dbg !393
  %4134 = load i8*, i8** %4114, align 8, !dbg !394
  %4135 = ptrtoint i8* %4134 to i64, !dbg !395
  %4136 = ptrtoint i8* %4117 to i64, !dbg !396
  %4137 = icmp ult i64 %4135, %4136, !dbg !397
  %4138 = and i1 %4133, %4137, !dbg !398
  br i1 %4138, label %4118, label %4157, !dbg !399

4139:                                             ; preds = %4118
  %4140 = load i8*, i8** %4114, align 8, !dbg !400
  %4141 = call i8 @sqlite3GetVarint32(i8* %4140, i32* %3945), !dbg !401
  %4142 = getelementptr i8, i8* %4140, i8 %4141, !dbg !402
  store i8* %4142, i8** %4114, align 8, !dbg !403
  %4143 = load i32, i32* %3945, align 4, !dbg !404
  store i32 %4143, i32* %4120, align 4, !dbg !405
  %4144 = load i64, i64* %4108, align 4, !dbg !406
  %4145 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4143), !dbg !407
  %4146 = zext i32 %4145 to i64, !dbg !408
  %4147 = add i64 %4144, %4146, !dbg !409
  store i64 %4147, i64* %4108, align 4, !dbg !410
  br label %4125, !dbg !411

4148:                                             ; preds = %4118
  %4149 = getelementptr i8, i8* %4121, i32 1, !dbg !412
  store i8* %4149, i8** %4114, align 8, !dbg !413
  %4150 = load i32, i32* %3945, align 4, !dbg !414
  %4151 = trunc i32 %4150 to i8, !dbg !415
  %4152 = getelementptr i8, i8* %4, i8 %4151, !dbg !416
  %4153 = load i8, i8* %4152, align 1, !dbg !417
  %4154 = zext i8 %4153 to i64, !dbg !418
  %4155 = load i64, i64* %4108, align 4, !dbg !419
  %4156 = add i64 %4155, %4154, !dbg !420
  store i64 %4156, i64* %4108, align 4, !dbg !421
  br label %4125, !dbg !422

4157:                                             ; preds = %4125
  %4158 = load i64, i64* %4108, align 4, !dbg !423
  %4159 = load i32, i32* %3960, align 4, !dbg !424
  %4160 = zext i32 %4159 to i64, !dbg !425
  %4161 = icmp uge i64 %4135, %4136, !dbg !426
  %4162 = icmp ugt i64 %4135, %4136, !dbg !427
  %4163 = icmp ne i64 %4158, %4160, !dbg !428
  %4164 = icmp ugt i64 %4158, %4160, !dbg !429
  %4165 = or i1 %4162, %4163, !dbg !430
  %4166 = and i1 %4161, %4165, !dbg !431
  %4167 = or i1 %4166, %4164, !dbg !432
  br i1 %4167, label %4168, label %4172, !dbg !433

4168:                                             ; preds = %4157
  %4169 = load i32, i32* %3952, align 4, !dbg !434
  %4170 = icmp eq i32 %4169, 0, !dbg !435
  br i1 %4170, label %4171, label %4172, !dbg !436

4171:                                             ; preds = %4168
  store i32 0, i32* %4105, align 4, !dbg !437
  store i8* %4117, i8** %4114, align 8, !dbg !438
  br label %4172, !dbg !439

4172:                                             ; preds = %4171, %4168, %4157
  %4173 = load i32, i32* %4105, align 4, !dbg !440
  %4174 = trunc i32 %4173 to i16, !dbg !441
  store i16 %4174, i16* %3963, align 2, !dbg !442
  %4175 = load i8*, i8** %4114, align 8, !dbg !443
  %4176 = ptrtoint i8* %4175 to i64, !dbg !444
  %4177 = load i8*, i8** %3944, align 8, !dbg !445
  %4178 = ptrtoint i8* %4177 to i64, !dbg !446
  %4179 = sub i64 %4176, %4178, !dbg !447
  %4180 = trunc i64 %4179 to i32, !dbg !448
  store i32 %4180, i32* %3959, align 4, !dbg !449
  br label %4182, !dbg !450

4181:                                             ; preds = %4096
  store i32 0, i32* %3945, align 4, !dbg !451
  br label %4182, !dbg !452

4182:                                             ; preds = %4172, %4181
  %4183 = load i16, i16* %3963, align 2, !dbg !453
  %4184 = icmp sle i16 %4183, 2, !dbg !454
  br i1 %4184, label %4185, label %4014, !dbg !455

4185:                                             ; preds = %4182
  %4186 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %3948, i32 0, i32 1, !dbg !456
  %4187 = load i16, i16* %4186, align 2, !dbg !456
  %4188 = and i16 %4187, 9216, !dbg !456
  %4189 = icmp ne i16 %4188, 0, !dbg !456
  br i1 %4189, label %4190, label %4191, !dbg !456

4190:                                             ; preds = %4185
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %3948), !dbg !456
  br label %4192, !dbg !456

4191:                                             ; preds = %4185
  store i16 1, i16* %4186, align 2, !dbg !456
  br label %4192, !dbg !456

4192:                                             ; preds = %4190, %4191, %4061, %4041, %4080, %4091, %4009, %4010
  call void @llvm.stackrestore(i8* %3937), !dbg !457
  br label %4193, !dbg !74

4193:                                             ; preds = %17, %4192
  %4194 = call i8* @llvm.stacksave(), !dbg !166
  %4195 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %4196 = load i8, i8* %4195, align 1, !dbg !170
  %4197 = alloca i32, align 4, !dbg !171
  store i32 0, i32* %4197, align 4, !dbg !172
  %4198 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %4199 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !174
  store %struct.VdbeCursor* %4199, %struct.VdbeCursor** %4198, align 8, !dbg !175
  %4200 = alloca i8*, align 8, !dbg !176
  %4201 = alloca i32, align 4, !dbg !177
  %4202 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4198, i32* %4197), !dbg !178
  %4203 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4198, align 8, !dbg !179
  %4204 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !180
  %4205 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 16, !dbg !181
  %4206 = load i16, i16* %4205, align 2, !dbg !182
  %4207 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 19, !dbg !183
  %4208 = load i32*, i32** %4207, align 8, !dbg !184
  %4209 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 0, !dbg !185
  %4210 = load i8, i8* %4209, align 1, !dbg !186
  %4211 = icmp ne i8 %4210, 3, !dbg !187
  %4212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 2, !dbg !188
  %4213 = load i8, i8* %4212, align 1, !dbg !189
  %4214 = icmp ne i8 %4213, 0, !dbg !190
  %4215 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 14, !dbg !191
  %4216 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 21, !dbg !192
  %4217 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 22, !dbg !193
  %4218 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 20, !dbg !194
  %4219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 17, !dbg !195
  %4220 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 9, !dbg !196
  %4221 = load i32, i32* %4220, align 4, !dbg !197
  %4222 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %4223 = load i32, i32* %4222, align 4, !dbg !199
  %4224 = icmp ne i32 %4221, %4223, !dbg !200
  br i1 %4224, label %4225, label %4267, !dbg !201

4225:                                             ; preds = %4193
  br i1 %4214, label %4247, label %4242, !dbg !202

4226:                                             ; preds = %4242, %4249
  %4227 = load i32, i32* %4222, align 4, !dbg !203
  store i32 %4227, i32* %4220, align 4, !dbg !204
  %4228 = load i8*, i8** %4218, align 8, !dbg !205
  %4229 = load i8, i8* %4228, align 1, !dbg !206
  %4230 = icmp sgt i8 %4229, -1, !dbg !209
  br i1 %4230, label %4231, label %4233, !dbg !210

4231:                                             ; preds = %4226
  %4232 = zext i8 %4229 to i32, !dbg !211
  store i32 %4232, i32* %4208, align 4, !dbg !212
  store i32 1, i32* %4215, align 4, !dbg !213
  br label %4236, !dbg !214

4233:                                             ; preds = %4226
  %4234 = call i8 @sqlite3GetVarint32(i8* %4228, i32* %4208), !dbg !215
  %4235 = zext i8 %4234 to i32, !dbg !216
  store i32 %4235, i32* %4215, align 4, !dbg !217
  br label %4236, !dbg !218

4236:                                             ; preds = %4233, %4231
  store i16 0, i16* %4219, align 2, !dbg !219
  %4237 = load i32, i32* %4217, align 4, !dbg !220
  %4238 = load i32, i32* %4208, align 4, !dbg !221
  %4239 = icmp ult i32 %4237, %4238, !dbg !222
  br i1 %4239, label %4241, label %4240, !dbg !223

4240:                                             ; preds = %4236
  store i8* %4228, i8** %4200, align 8, !dbg !224
  br label %4360, !dbg !225

4241:                                             ; preds = %4236
  store i8* null, i8** %4218, align 8, !dbg !226
  store i32 0, i32* %4217, align 4, !dbg !227
  br label %4267, !dbg !228

4242:                                             ; preds = %4225
  %4243 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 12, i32 0, !dbg !229
  %4244 = load %struct.BtCursor*, %struct.BtCursor** %4243, align 8, !dbg !230
  %4245 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %4244), !dbg !231
  store i32 %4245, i32* %4216, align 4, !dbg !232
  %4246 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %4244, i32* %4217), !dbg !233
  store i8* %4246, i8** %4218, align 8, !dbg !234
  br label %4226, !dbg !235

4247:                                             ; preds = %4225
  %4248 = icmp eq i8 %4210, 3, !dbg !236
  br i1 %4248, label %4249, label %4260, !dbg !237

4249:                                             ; preds = %4247
  %4250 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 10, !dbg !238
  %4251 = load i32, i32* %4250, align 4, !dbg !239
  %4252 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %4251, !dbg !240
  %4253 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4252, i32 0, i32 1, !dbg !241
  %4254 = load i16, i16* %4253, align 2, !dbg !242
  %4255 = and i16 %4254, 16, !dbg !243
  %4256 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4252, i32 0, i32 4, !dbg !244
  %4257 = load i32, i32* %4256, align 4, !dbg !245
  store i32 %4257, i32* %4216, align 4, !dbg !246
  store i32 %4257, i32* %4217, align 4, !dbg !247
  %4258 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4252, i32 0, i32 5, !dbg !248
  %4259 = load i8*, i8** %4258, align 8, !dbg !249
  store i8* %4259, i8** %4218, align 8, !dbg !250
  br label %4226, !dbg !251

4260:                                             ; preds = %4247
  %4261 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 1, !dbg !252
  %4262 = load i16, i16* %4261, align 2, !dbg !252
  %4263 = and i16 %4262, 9216, !dbg !252
  %4264 = icmp ne i16 %4263, 0, !dbg !252
  br i1 %4264, label %4265, label %4266, !dbg !252

4265:                                             ; preds = %4260
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4204), !dbg !252
  br label %4448, !dbg !252

4266:                                             ; preds = %4260
  store i16 1, i16* %4261, align 2, !dbg !252
  br label %4448, !dbg !252

4267:                                             ; preds = %4241, %4193
  %4268 = load i16, i16* %4219, align 2, !dbg !253
  %4269 = icmp ule i16 %4268, 12, !dbg !254
  br i1 %4269, label %4352, label %4349, !dbg !255

4270:                                             ; preds = %4349, %4438
  %4271 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 1, !dbg !256
  %4272 = load i16, i16* %4271, align 2, !dbg !257
  %4273 = and i16 9216, %4272, !dbg !258
  %4274 = icmp eq i16 0, %4273, !dbg !259
  br i1 %4274, label %4275, label %4279, !dbg !260

4275:                                             ; preds = %4270
  %4276 = icmp ne i16 %4273, 0, !dbg !261
  br i1 %4276, label %4277, label %4278, !dbg !261

4277:                                             ; preds = %4275
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4204), !dbg !261
  br label %4279, !dbg !261

4278:                                             ; preds = %4275
  store i16 1, i16* %4271, align 2, !dbg !261
  br label %4279, !dbg !261

4279:                                             ; preds = %4277, %4278, %4270
  %4280 = load i32, i32* %4201, align 4, !dbg !262
  %4281 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 23, i32 12, !dbg !263
  %4282 = load i32, i32* %4281, align 4, !dbg !264
  %4283 = load i32, i32* %4217, align 4, !dbg !265
  %4284 = getelementptr i32, i32* %4208, i32 13, !dbg !266
  %4285 = load i32, i32* %4284, align 4, !dbg !267
  %4286 = icmp sge i32 %4283, %4285, !dbg !268
  br i1 %4286, label %4287, label %4327, !dbg !269

4287:                                             ; preds = %4279
  %4288 = load i8*, i8** %4218, align 8, !dbg !270
  %4289 = ptrtoint i8* %4288 to i64, !dbg !271
  %4290 = getelementptr i32, i32* %4208, i32 12, !dbg !272
  %4291 = load i32, i32* %4290, align 4, !dbg !273
  %4292 = zext i32 %4291 to i64, !dbg !274
  %4293 = add i64 %4289, %4292, !dbg !275
  %4294 = inttoptr i64 %4293 to i8*, !dbg !276
  store i8* %4294, i8** %4200, align 8, !dbg !277
  %4295 = load i32, i32* %4201, align 4, !dbg !278
  %4296 = icmp ult i32 %4295, 12, !dbg !279
  br i1 %4296, label %4297, label %4299, !dbg !280

4297:                                             ; preds = %4287
  %4298 = call i32 @sqlite3VdbeSerialGet(i8* %4294, i32 %4295, %struct.sqlite3_value* %4204), !dbg !281
  br label %4448, !dbg !282

4299:                                             ; preds = %4287
  %4300 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %4300, align 2, !dbg !284
  %4301 = getelementptr i16, i16* %4300, i32 1, !dbg !285
  store i16 514, i16* %4301, align 2, !dbg !286
  %4302 = load i32, i32* %4201, align 4, !dbg !287
  %4303 = sub i32 %4302, 12, !dbg !288
  %4304 = lshr i32 %4303, 1, !dbg !289
  %4305 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 4, !dbg !290
  store i32 %4304, i32* %4305, align 4, !dbg !291
  %4306 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 2, !dbg !292
  store i8 %4196, i8* %4306, align 1, !dbg !293
  %4307 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 5, !dbg !294
  %4308 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 7, !dbg !295
  %4309 = load i32, i32* %4308, align 4, !dbg !296
  %4310 = add i32 %4304, 2, !dbg !297
  %4311 = icmp slt i32 %4309, %4310, !dbg !298
  br i1 %4311, label %4312, label %4314, !dbg !299

4312:                                             ; preds = %4299
  store i16 1, i16* %4271, align 2, !dbg !300
  %4313 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4204, i32 %4310, i32 0), !dbg !301
  br label %4317, !dbg !302

4314:                                             ; preds = %4299
  %4315 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 6, !dbg !303
  %4316 = load i8*, i8** %4315, align 8, !dbg !304
  store i8* %4316, i8** %4307, align 8, !dbg !305
  br label %4317, !dbg !306

4317:                                             ; preds = %4314, %4312
  %4318 = zext i32 %4304 to i64, !dbg !307
  %4319 = load i8*, i8** %4307, align 8, !dbg !308
  %4320 = load i8*, i8** %4200, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4319, i8* %4320, i64 %4318, i1 false), !dbg !310
  %4321 = getelementptr i8, i8* %4319, i32 %4304, !dbg !311
  store i8 0, i8* %4321, align 1, !dbg !312
  %4322 = add i32 %4304, 1, !dbg !313
  %4323 = getelementptr i8, i8* %4319, i32 %4322, !dbg !314
  store i8 0, i8* %4323, align 1, !dbg !315
  %4324 = and i32 %4302, 1, !dbg !316
  %4325 = getelementptr i16, i16* %4300, i32 %4324, !dbg !317
  %4326 = load i16, i16* %4325, align 2, !dbg !318
  store i16 %4326, i16* %4271, align 2, !dbg !319
  br label %4448, !dbg !320

4327:                                             ; preds = %4279
  %4328 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 2, !dbg !321
  store i8 %4196, i8* %4328, align 1, !dbg !322
  %4329 = load i32, i32* %4201, align 4, !dbg !323
  %4330 = and i32 %4329, 1, !dbg !324
  %4331 = icmp eq i32 %4330, 0, !dbg !325
  %4332 = icmp sge i32 %4329, 12, !dbg !326
  %4333 = and i1 %4332, %4331, !dbg !327
  %4334 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4329), !dbg !328
  %4335 = icmp eq i32 %4334, 0, !dbg !329
  br i1 %4335, label %4347, label %4336, !dbg !330

4336:                                             ; preds = %4327
  %4337 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 12, i32 0, !dbg !331
  %4338 = load %struct.BtCursor*, %struct.BtCursor** %4337, align 8, !dbg !332
  %4339 = getelementptr i32, i32* %4208, i32 12, !dbg !333
  %4340 = load i32, i32* %4339, align 4, !dbg !334
  %4341 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %4338, i32 %4340, i32 %4334, %struct.sqlite3_value* %4204), !dbg !335
  %4342 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 5, !dbg !336
  %4343 = load i8*, i8** %4342, align 8, !dbg !337
  %4344 = call i32 @sqlite3VdbeSerialGet(i8* %4343, i32 %4329, %struct.sqlite3_value* %4204), !dbg !338
  %4345 = load i16, i16* %4271, align 2, !dbg !339
  %4346 = and i16 %4345, -4097, !dbg !340
  store i16 %4346, i16* %4271, align 2, !dbg !341
  br label %4448, !dbg !342

4347:                                             ; preds = %4327
  %4348 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %4329, %struct.sqlite3_value* %4204), !dbg !343
  br label %4448, !dbg !344

4349:                                             ; preds = %4267
  %4350 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 23, i32 12, !dbg !345
  %4351 = load i32, i32* %4350, align 4, !dbg !346
  store i32 %4351, i32* %4201, align 4, !dbg !347
  br label %4270, !dbg !348

4352:                                             ; preds = %4267
  %4353 = load i32, i32* %4215, align 4, !dbg !349
  %4354 = load i32, i32* %4208, align 4, !dbg !350
  %4355 = icmp ult i32 %4353, %4354, !dbg !351
  br i1 %4355, label %4356, label %4437, !dbg !352

4356:                                             ; preds = %4352
  %4357 = load i8*, i8** %4218, align 8, !dbg !353
  %4358 = icmp eq i8* %4357, null, !dbg !354
  br i1 %4358, label %4360, label %4359, !dbg !355

4359:                                             ; preds = %4356
  store i8* %4357, i8** %4200, align 8, !dbg !356
  br label %4360, !dbg !357

4360:                                             ; preds = %4359, %4356, %4240
  %4361 = alloca i32, align 4, !dbg !358
  %4362 = load i16, i16* %4219, align 2, !dbg !359
  %4363 = zext i16 %4362 to i32, !dbg !360
  store i32 %4363, i32* %4361, align 4, !dbg !361
  %4364 = alloca i64, align 8, !dbg !362
  %4365 = getelementptr i32, i32* %4208, i32 %4363, !dbg !363
  %4366 = load i32, i32* %4365, align 4, !dbg !364
  %4367 = zext i32 %4366 to i64, !dbg !365
  store i64 %4367, i64* %4364, align 4, !dbg !366
  %4368 = load i8*, i8** %4200, align 8, !dbg !367
  %4369 = load i32, i32* %4215, align 4, !dbg !368
  %4370 = alloca i8*, align 8, !dbg !369
  %4371 = getelementptr i8, i8* %4368, i32 %4369, !dbg !370
  store i8* %4371, i8** %4370, align 8, !dbg !371
  %4372 = load i32, i32* %4208, align 4, !dbg !372
  %4373 = getelementptr i8, i8* %4368, i32 %4372, !dbg !373
  br label %4374, !dbg !374

4374:                                             ; preds = %4381, %4360
  %4375 = load i32, i32* %4361, align 4, !dbg !375
  %4376 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4203, i32 0, i32 23, i32 %4375, !dbg !376
  %4377 = load i8*, i8** %4370, align 8, !dbg !377
  %4378 = load i8, i8* %4377, align 1, !dbg !378
  %4379 = zext i8 %4378 to i32, !dbg !379
  store i32 %4379, i32* %4201, align 4, !dbg !380
  store i32 %4379, i32* %4376, align 4, !dbg !381
  %4380 = icmp sgt i8 %4378, -1, !dbg !382
  br i1 %4380, label %4404, label %4395, !dbg !383

4381:                                             ; preds = %4395, %4404
  %4382 = load i32, i32* %4361, align 4, !dbg !384
  %4383 = add i32 %4382, 1, !dbg !385
  store i32 %4383, i32* %4361, align 4, !dbg !386
  %4384 = load i64, i64* %4364, align 4, !dbg !387
  %4385 = and i64 4294967295, %4384, !dbg !388
  %4386 = trunc i64 %4385 to i32, !dbg !389
  %4387 = getelementptr i32, i32* %4208, i32 %4383, !dbg !390
  store i32 %4386, i32* %4387, align 4, !dbg !391
  %4388 = load i32, i32* %4361, align 4, !dbg !392
  %4389 = icmp sle i32 %4388, 12, !dbg !393
  %4390 = load i8*, i8** %4370, align 8, !dbg !394
  %4391 = ptrtoint i8* %4390 to i64, !dbg !395
  %4392 = ptrtoint i8* %4373 to i64, !dbg !396
  %4393 = icmp ult i64 %4391, %4392, !dbg !397
  %4394 = and i1 %4389, %4393, !dbg !398
  br i1 %4394, label %4374, label %4413, !dbg !399

4395:                                             ; preds = %4374
  %4396 = load i8*, i8** %4370, align 8, !dbg !400
  %4397 = call i8 @sqlite3GetVarint32(i8* %4396, i32* %4201), !dbg !401
  %4398 = getelementptr i8, i8* %4396, i8 %4397, !dbg !402
  store i8* %4398, i8** %4370, align 8, !dbg !403
  %4399 = load i32, i32* %4201, align 4, !dbg !404
  store i32 %4399, i32* %4376, align 4, !dbg !405
  %4400 = load i64, i64* %4364, align 4, !dbg !406
  %4401 = call i32 @sqlite3VdbeSerialTypeLen(i32 %4399), !dbg !407
  %4402 = zext i32 %4401 to i64, !dbg !408
  %4403 = add i64 %4400, %4402, !dbg !409
  store i64 %4403, i64* %4364, align 4, !dbg !410
  br label %4381, !dbg !411

4404:                                             ; preds = %4374
  %4405 = getelementptr i8, i8* %4377, i32 1, !dbg !412
  store i8* %4405, i8** %4370, align 8, !dbg !413
  %4406 = load i32, i32* %4201, align 4, !dbg !414
  %4407 = trunc i32 %4406 to i8, !dbg !415
  %4408 = getelementptr i8, i8* %4, i8 %4407, !dbg !416
  %4409 = load i8, i8* %4408, align 1, !dbg !417
  %4410 = zext i8 %4409 to i64, !dbg !418
  %4411 = load i64, i64* %4364, align 4, !dbg !419
  %4412 = add i64 %4411, %4410, !dbg !420
  store i64 %4412, i64* %4364, align 4, !dbg !421
  br label %4381, !dbg !422

4413:                                             ; preds = %4381
  %4414 = load i64, i64* %4364, align 4, !dbg !423
  %4415 = load i32, i32* %4216, align 4, !dbg !424
  %4416 = zext i32 %4415 to i64, !dbg !425
  %4417 = icmp uge i64 %4391, %4392, !dbg !426
  %4418 = icmp ugt i64 %4391, %4392, !dbg !427
  %4419 = icmp ne i64 %4414, %4416, !dbg !428
  %4420 = icmp ugt i64 %4414, %4416, !dbg !429
  %4421 = or i1 %4418, %4419, !dbg !430
  %4422 = and i1 %4417, %4421, !dbg !431
  %4423 = or i1 %4422, %4420, !dbg !432
  br i1 %4423, label %4424, label %4428, !dbg !433

4424:                                             ; preds = %4413
  %4425 = load i32, i32* %4208, align 4, !dbg !434
  %4426 = icmp eq i32 %4425, 0, !dbg !435
  br i1 %4426, label %4427, label %4428, !dbg !436

4427:                                             ; preds = %4424
  store i32 0, i32* %4361, align 4, !dbg !437
  store i8* %4373, i8** %4370, align 8, !dbg !438
  br label %4428, !dbg !439

4428:                                             ; preds = %4427, %4424, %4413
  %4429 = load i32, i32* %4361, align 4, !dbg !440
  %4430 = trunc i32 %4429 to i16, !dbg !441
  store i16 %4430, i16* %4219, align 2, !dbg !442
  %4431 = load i8*, i8** %4370, align 8, !dbg !443
  %4432 = ptrtoint i8* %4431 to i64, !dbg !444
  %4433 = load i8*, i8** %4200, align 8, !dbg !445
  %4434 = ptrtoint i8* %4433 to i64, !dbg !446
  %4435 = sub i64 %4432, %4434, !dbg !447
  %4436 = trunc i64 %4435 to i32, !dbg !448
  store i32 %4436, i32* %4215, align 4, !dbg !449
  br label %4438, !dbg !450

4437:                                             ; preds = %4352
  store i32 0, i32* %4201, align 4, !dbg !451
  br label %4438, !dbg !452

4438:                                             ; preds = %4428, %4437
  %4439 = load i16, i16* %4219, align 2, !dbg !453
  %4440 = icmp sle i16 %4439, 12, !dbg !454
  br i1 %4440, label %4441, label %4270, !dbg !455

4441:                                             ; preds = %4438
  %4442 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4204, i32 0, i32 1, !dbg !456
  %4443 = load i16, i16* %4442, align 2, !dbg !456
  %4444 = and i16 %4443, 9216, !dbg !456
  %4445 = icmp ne i16 %4444, 0, !dbg !456
  br i1 %4445, label %4446, label %4447, !dbg !456

4446:                                             ; preds = %4441
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4204), !dbg !456
  br label %4448, !dbg !456

4447:                                             ; preds = %4441
  store i16 1, i16* %4442, align 2, !dbg !456
  br label %4448, !dbg !456

4448:                                             ; preds = %4446, %4447, %4317, %4297, %4336, %4347, %4265, %4266
  call void @llvm.stackrestore(i8* %4194), !dbg !457
  br label %4449, !dbg !74

4449:                                             ; preds = %17, %4448
  %4450 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 20, !dbg !1171
  %4451 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4450, i32 0, i32 1, !dbg !1174
  %4452 = load i16, i16* %4451, align 2, !dbg !1175
  %4453 = and i16 %4452, 36, !dbg !1176
  %4454 = icmp ne i16 %4453, 0, !dbg !1177
  br i1 %4454, label %4455, label %4456, !dbg !1178

4455:                                             ; preds = %4449
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %4450), !dbg !1179
  br label %4456, !dbg !1180

4456:                                             ; preds = %4455, %4449, %17
  %4457 = call i8* @llvm.stacksave(), !dbg !732
  %4458 = alloca i64, align 8, !dbg !735
  store i64 0, i64* %4458, align 4, !dbg !736
  %4459 = alloca i32, align 8, !dbg !737
  store i32 0, i32* %4459, align 4, !dbg !738
  %4460 = alloca i64, align 8, !dbg !739
  store i64 0, i64* %4460, align 4, !dbg !740
  %4461 = alloca i8*, align 8, !dbg !741
  %4462 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 39, !dbg !742
  %4463 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %4462, i32 0, i32 6, !dbg !743
  %4464 = bitcast %union.p4union* %4463 to i8**, !dbg !744
  %4465 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 18, !dbg !745
  %4466 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4465, i32 2, !dbg !746
  %4467 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !747
  %4468 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 0, i32 1, !dbg !748
  %4469 = load i16, i16* %4468, align 2, !dbg !749
  %4470 = and i16 %4469, 1, !dbg !750
  %4471 = icmp ne i16 %4470, 0, !dbg !750
  %4472 = and i16 %4469, 36, !dbg !751
  %4473 = icmp ne i16 %4472, 0, !dbg !751
  %4474 = and i16 %4469, 8, !dbg !752
  %4475 = icmp ne i16 %4474, 0, !dbg !752
  %4476 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 0, i32 8, !dbg !753
  br i1 %4471, label %4477, label %4485, !dbg !754

4477:                                             ; preds = %4456
  %4478 = and i16 %4469, 16384, !dbg !755
  %4479 = icmp ne i16 %4478, 0, !dbg !755
  br i1 %4479, label %4480, label %4481, !dbg !756

4480:                                             ; preds = %4477
  store i32 10, i32* %4476, align 4, !dbg !757
  br label %4482, !dbg !758

4481:                                             ; preds = %4477
  store i32 0, i32* %4476, align 4, !dbg !759
  br label %4482, !dbg !760

4482:                                             ; preds = %4481, %4480
  %4483 = load i32, i32* %4459, align 4, !dbg !761
  %4484 = add i32 %4483, 1, !dbg !761
  store i32 %4484, i32* %4459, align 4, !dbg !761
  br label %4575, !dbg !762

4485:                                             ; preds = %4456
  br i1 %4473, label %4486, label %4530, !dbg !763

4486:                                             ; preds = %4485
  %4487 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 0, i32 0, !dbg !764
  %4488 = bitcast %union.MemValue* %4487 to i64*, !dbg !765
  %4489 = load i64, i64* %4488, align 4, !dbg !766
  %4490 = alloca i64, align 8, !dbg !767
  %4491 = icmp slt i64 %4489, 0, !dbg !768
  br i1 %4491, label %4492, label %4494, !dbg !769

4492:                                             ; preds = %4486
  %4493 = xor i64 %4489, -1, !dbg !770
  store i64 %4493, i64* %4490, align 4, !dbg !771
  br label %4495, !dbg !772

4494:                                             ; preds = %4486
  store i64 %4489, i64* %4490, align 4, !dbg !773
  br label %4495, !dbg !774

4495:                                             ; preds = %4494, %4492
  %4496 = load i32, i32* %4459, align 4, !dbg !775
  %4497 = add i32 %4496, 1, !dbg !775
  store i32 %4497, i32* %4459, align 4, !dbg !775
  %4498 = load i64, i64* %4490, align 4, !dbg !776
  %4499 = icmp slt i64 %4498, 127, !dbg !777
  %4500 = icmp slt i64 %4498, 32767, !dbg !778
  %4501 = icmp slt i64 %4498, 8388607, !dbg !779
  %4502 = icmp slt i64 %4498, 2147483647, !dbg !780
  br i1 %4499, label %4503, label %4512, !dbg !781

4503:                                             ; preds = %4495
  %4504 = and i64 %4489, 1, !dbg !782
  %4505 = icmp eq i64 %4504, %4489, !dbg !783
  br i1 %4505, label %4506, label %4509, !dbg !784

4506:                                             ; preds = %4503
  %4507 = trunc i64 %4498 to i32, !dbg !785
  %4508 = add i32 %4507, 8, !dbg !786
  store i32 %4508, i32* %4476, align 4, !dbg !787
  br label %4575, !dbg !788

4509:                                             ; preds = %4503
  %4510 = load i64, i64* %4458, align 4, !dbg !789
  %4511 = add i64 %4510, 1, !dbg !789
  store i64 %4511, i64* %4458, align 4, !dbg !789
  store i32 1, i32* %4476, align 4, !dbg !790
  br label %4575, !dbg !791

4512:                                             ; preds = %4495
  %4513 = load i64, i64* %4458, align 4, !dbg !792
  br i1 %4500, label %4514, label %4516, !dbg !793

4514:                                             ; preds = %4512
  %4515 = add i64 %4513, 2, !dbg !794
  store i64 %4515, i64* %4458, align 4, !dbg !794
  store i32 2, i32* %4476, align 4, !dbg !795
  br label %4575, !dbg !796

4516:                                             ; preds = %4512
  br i1 %4501, label %4517, label %4519, !dbg !797

4517:                                             ; preds = %4516
  %4518 = add i64 %4513, 3, !dbg !798
  store i64 %4518, i64* %4458, align 4, !dbg !798
  store i32 3, i32* %4476, align 4, !dbg !799
  br label %4575, !dbg !800

4519:                                             ; preds = %4516
  br i1 %4502, label %4520, label %4522, !dbg !801

4520:                                             ; preds = %4519
  %4521 = add i64 %4513, 4, !dbg !802
  store i64 %4521, i64* %4458, align 4, !dbg !802
  store i32 4, i32* %4476, align 4, !dbg !803
  br label %4575, !dbg !804

4522:                                             ; preds = %4519
  %4523 = add i64 %4513, 8, !dbg !805
  store i64 %4523, i64* %4458, align 4, !dbg !805
  %4524 = and i16 %4469, 32, !dbg !806
  %4525 = icmp ne i16 %4524, 0, !dbg !806
  br i1 %4525, label %4526, label %4529, !dbg !807

4526:                                             ; preds = %4522
  %4527 = and i16 %4469, -33, !dbg !808
  %4528 = or i16 %4527, 8, !dbg !809
  store i16 %4528, i16* %4468, align 2, !dbg !810
  store i32 7, i32* %4476, align 4, !dbg !811
  br label %4575, !dbg !812

4529:                                             ; preds = %4522
  store i32 6, i32* %4476, align 4, !dbg !813
  br label %4575, !dbg !814

4530:                                             ; preds = %4485
  br i1 %4475, label %4531, label %4536, !dbg !815

4531:                                             ; preds = %4530
  %4532 = load i32, i32* %4459, align 4, !dbg !816
  %4533 = add i32 %4532, 1, !dbg !816
  store i32 %4533, i32* %4459, align 4, !dbg !816
  %4534 = load i64, i64* %4458, align 4, !dbg !817
  %4535 = add i64 %4534, 8, !dbg !817
  store i64 %4535, i64* %4458, align 4, !dbg !817
  store i32 7, i32* %4476, align 4, !dbg !818
  br label %4575, !dbg !819

4536:                                             ; preds = %4530
  %4537 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 0, i32 4, !dbg !820
  %4538 = load i32, i32* %4537, align 4, !dbg !821
  %4539 = alloca i32, align 8, !dbg !822
  store i32 %4538, i32* %4539, align 4, !dbg !823
  %4540 = alloca i32, align 8, !dbg !824
  %4541 = add i32 %4538, %4538, !dbg !825
  %4542 = add i32 %4541, 12, !dbg !826
  %4543 = and i16 %4469, 2, !dbg !827
  %4544 = icmp ne i16 %4543, 0, !dbg !828
  %4545 = zext i1 %4544 to i32, !dbg !829
  %4546 = add i32 %4542, %4545, !dbg !830
  store i32 %4546, i32* %4540, align 4, !dbg !831
  %4547 = and i16 %4469, 16384, !dbg !832
  %4548 = icmp ne i16 %4547, 0, !dbg !833
  br i1 %4548, label %4549, label %4565, !dbg !834

4549:                                             ; preds = %4536
  %4550 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 0, i32 0, !dbg !835
  %4551 = bitcast %union.MemValue* %4550 to i32*, !dbg !836
  %4552 = load i32, i32* %4551, align 4, !dbg !837
  %4553 = add i32 %4552, %4552, !dbg !838
  %4554 = add i32 %4546, %4553, !dbg !839
  store i32 %4554, i32* %4540, align 4, !dbg !839
  %4555 = load i64, i64* %4458, align 4, !dbg !840
  %4556 = icmp ne i64 %4555, 0, !dbg !840
  br i1 %4556, label %4561, label %4557, !dbg !841

4557:                                             ; preds = %4549
  %4558 = zext i32 %4552 to i64, !dbg !842
  %4559 = load i64, i64* %4460, align 4, !dbg !843
  %4560 = add i64 %4559, %4558, !dbg !843
  store i64 %4560, i64* %4460, align 4, !dbg !843
  br label %4565, !dbg !844

4561:                                             ; preds = %4549
  %4562 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %4466), !dbg !845
  %4563 = load i32, i32* %4539, align 4, !dbg !846
  %4564 = add i32 %4563, %4552, !dbg !846
  store i32 %4564, i32* %4539, align 4, !dbg !846
  br label %4565, !dbg !847

4565:                                             ; preds = %4557, %4561, %4536
  %4566 = load i32, i32* %4539, align 4, !dbg !848
  %4567 = zext i32 %4566 to i64, !dbg !849
  %4568 = load i64, i64* %4458, align 4, !dbg !850
  %4569 = add i64 %4568, %4567, !dbg !850
  store i64 %4569, i64* %4458, align 4, !dbg !850
  %4570 = load i32, i32* %4540, align 4, !dbg !851
  %4571 = zext i32 %4570 to i64, !dbg !852
  %4572 = call i32 @sqlite3VarintLen(i64 %4571), !dbg !853
  %4573 = load i32, i32* %4459, align 4, !dbg !854
  %4574 = add i32 %4573, %4572, !dbg !854
  store i32 %4574, i32* %4459, align 4, !dbg !854
  store i32 %4570, i32* %4476, align 4, !dbg !855
  br label %4575, !dbg !856

4575:                                             ; preds = %4514, %4517, %4520, %4526, %4529, %4509, %4506, %4565, %4531, %4482
  %4576 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4466, i32 -1, !dbg !857
  %4577 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 0, i32 1, !dbg !748
  %4578 = load i16, i16* %4577, align 2, !dbg !749
  %4579 = and i16 %4578, 1, !dbg !750
  %4580 = icmp ne i16 %4579, 0, !dbg !750
  %4581 = and i16 %4578, 36, !dbg !751
  %4582 = icmp ne i16 %4581, 0, !dbg !751
  %4583 = and i16 %4578, 8, !dbg !752
  %4584 = icmp ne i16 %4583, 0, !dbg !752
  %4585 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 0, i32 8, !dbg !753
  br i1 %4580, label %4586, label %4594, !dbg !754

4586:                                             ; preds = %4575
  %4587 = and i16 %4578, 16384, !dbg !755
  %4588 = icmp ne i16 %4587, 0, !dbg !755
  br i1 %4588, label %4589, label %4590, !dbg !756

4589:                                             ; preds = %4586
  store i32 10, i32* %4585, align 4, !dbg !757
  br label %4591, !dbg !758

4590:                                             ; preds = %4586
  store i32 0, i32* %4585, align 4, !dbg !759
  br label %4591, !dbg !760

4591:                                             ; preds = %4590, %4589
  %4592 = load i32, i32* %4459, align 4, !dbg !761
  %4593 = add i32 %4592, 1, !dbg !761
  store i32 %4593, i32* %4459, align 4, !dbg !761
  br label %4684, !dbg !762

4594:                                             ; preds = %4575
  br i1 %4582, label %4595, label %4639, !dbg !763

4595:                                             ; preds = %4594
  %4596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 0, i32 0, !dbg !764
  %4597 = bitcast %union.MemValue* %4596 to i64*, !dbg !765
  %4598 = load i64, i64* %4597, align 4, !dbg !766
  %4599 = alloca i64, align 8, !dbg !767
  %4600 = icmp slt i64 %4598, 0, !dbg !768
  br i1 %4600, label %4601, label %4603, !dbg !769

4601:                                             ; preds = %4595
  %4602 = xor i64 %4598, -1, !dbg !770
  store i64 %4602, i64* %4599, align 4, !dbg !771
  br label %4604, !dbg !772

4603:                                             ; preds = %4595
  store i64 %4598, i64* %4599, align 4, !dbg !773
  br label %4604, !dbg !774

4604:                                             ; preds = %4603, %4601
  %4605 = load i32, i32* %4459, align 4, !dbg !775
  %4606 = add i32 %4605, 1, !dbg !775
  store i32 %4606, i32* %4459, align 4, !dbg !775
  %4607 = load i64, i64* %4599, align 4, !dbg !776
  %4608 = icmp slt i64 %4607, 127, !dbg !777
  %4609 = icmp slt i64 %4607, 32767, !dbg !778
  %4610 = icmp slt i64 %4607, 8388607, !dbg !779
  %4611 = icmp slt i64 %4607, 2147483647, !dbg !780
  br i1 %4608, label %4612, label %4621, !dbg !781

4612:                                             ; preds = %4604
  %4613 = and i64 %4598, 1, !dbg !782
  %4614 = icmp eq i64 %4613, %4598, !dbg !783
  br i1 %4614, label %4615, label %4618, !dbg !784

4615:                                             ; preds = %4612
  %4616 = trunc i64 %4607 to i32, !dbg !785
  %4617 = add i32 %4616, 8, !dbg !786
  store i32 %4617, i32* %4585, align 4, !dbg !787
  br label %4684, !dbg !788

4618:                                             ; preds = %4612
  %4619 = load i64, i64* %4458, align 4, !dbg !789
  %4620 = add i64 %4619, 1, !dbg !789
  store i64 %4620, i64* %4458, align 4, !dbg !789
  store i32 1, i32* %4585, align 4, !dbg !790
  br label %4684, !dbg !791

4621:                                             ; preds = %4604
  %4622 = load i64, i64* %4458, align 4, !dbg !792
  br i1 %4609, label %4623, label %4625, !dbg !793

4623:                                             ; preds = %4621
  %4624 = add i64 %4622, 2, !dbg !794
  store i64 %4624, i64* %4458, align 4, !dbg !794
  store i32 2, i32* %4585, align 4, !dbg !795
  br label %4684, !dbg !796

4625:                                             ; preds = %4621
  br i1 %4610, label %4626, label %4628, !dbg !797

4626:                                             ; preds = %4625
  %4627 = add i64 %4622, 3, !dbg !798
  store i64 %4627, i64* %4458, align 4, !dbg !798
  store i32 3, i32* %4585, align 4, !dbg !799
  br label %4684, !dbg !800

4628:                                             ; preds = %4625
  br i1 %4611, label %4629, label %4631, !dbg !801

4629:                                             ; preds = %4628
  %4630 = add i64 %4622, 4, !dbg !802
  store i64 %4630, i64* %4458, align 4, !dbg !802
  store i32 4, i32* %4585, align 4, !dbg !803
  br label %4684, !dbg !804

4631:                                             ; preds = %4628
  %4632 = add i64 %4622, 8, !dbg !805
  store i64 %4632, i64* %4458, align 4, !dbg !805
  %4633 = and i16 %4578, 32, !dbg !806
  %4634 = icmp ne i16 %4633, 0, !dbg !806
  br i1 %4634, label %4635, label %4638, !dbg !807

4635:                                             ; preds = %4631
  %4636 = and i16 %4578, -33, !dbg !808
  %4637 = or i16 %4636, 8, !dbg !809
  store i16 %4637, i16* %4577, align 2, !dbg !810
  store i32 7, i32* %4585, align 4, !dbg !811
  br label %4684, !dbg !812

4638:                                             ; preds = %4631
  store i32 6, i32* %4585, align 4, !dbg !813
  br label %4684, !dbg !814

4639:                                             ; preds = %4594
  br i1 %4584, label %4640, label %4645, !dbg !815

4640:                                             ; preds = %4639
  %4641 = load i32, i32* %4459, align 4, !dbg !816
  %4642 = add i32 %4641, 1, !dbg !816
  store i32 %4642, i32* %4459, align 4, !dbg !816
  %4643 = load i64, i64* %4458, align 4, !dbg !817
  %4644 = add i64 %4643, 8, !dbg !817
  store i64 %4644, i64* %4458, align 4, !dbg !817
  store i32 7, i32* %4585, align 4, !dbg !818
  br label %4684, !dbg !819

4645:                                             ; preds = %4639
  %4646 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 0, i32 4, !dbg !820
  %4647 = load i32, i32* %4646, align 4, !dbg !821
  %4648 = alloca i32, align 8, !dbg !822
  store i32 %4647, i32* %4648, align 4, !dbg !823
  %4649 = alloca i32, align 8, !dbg !824
  %4650 = add i32 %4647, %4647, !dbg !825
  %4651 = add i32 %4650, 12, !dbg !826
  %4652 = and i16 %4578, 2, !dbg !827
  %4653 = icmp ne i16 %4652, 0, !dbg !828
  %4654 = zext i1 %4653 to i32, !dbg !829
  %4655 = add i32 %4651, %4654, !dbg !830
  store i32 %4655, i32* %4649, align 4, !dbg !831
  %4656 = and i16 %4578, 16384, !dbg !832
  %4657 = icmp ne i16 %4656, 0, !dbg !833
  br i1 %4657, label %4658, label %4674, !dbg !834

4658:                                             ; preds = %4645
  %4659 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 0, i32 0, !dbg !835
  %4660 = bitcast %union.MemValue* %4659 to i32*, !dbg !836
  %4661 = load i32, i32* %4660, align 4, !dbg !837
  %4662 = add i32 %4661, %4661, !dbg !838
  %4663 = add i32 %4655, %4662, !dbg !839
  store i32 %4663, i32* %4649, align 4, !dbg !839
  %4664 = load i64, i64* %4458, align 4, !dbg !840
  %4665 = icmp ne i64 %4664, 0, !dbg !840
  br i1 %4665, label %4670, label %4666, !dbg !841

4666:                                             ; preds = %4658
  %4667 = zext i32 %4661 to i64, !dbg !842
  %4668 = load i64, i64* %4460, align 4, !dbg !843
  %4669 = add i64 %4668, %4667, !dbg !843
  store i64 %4669, i64* %4460, align 4, !dbg !843
  br label %4674, !dbg !844

4670:                                             ; preds = %4658
  %4671 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %4576), !dbg !845
  %4672 = load i32, i32* %4648, align 4, !dbg !846
  %4673 = add i32 %4672, %4661, !dbg !846
  store i32 %4673, i32* %4648, align 4, !dbg !846
  br label %4674, !dbg !847

4674:                                             ; preds = %4666, %4670, %4645
  %4675 = load i32, i32* %4648, align 4, !dbg !848
  %4676 = zext i32 %4675 to i64, !dbg !849
  %4677 = load i64, i64* %4458, align 4, !dbg !850
  %4678 = add i64 %4677, %4676, !dbg !850
  store i64 %4678, i64* %4458, align 4, !dbg !850
  %4679 = load i32, i32* %4649, align 4, !dbg !851
  %4680 = zext i32 %4679 to i64, !dbg !852
  %4681 = call i32 @sqlite3VarintLen(i64 %4680), !dbg !853
  %4682 = load i32, i32* %4459, align 4, !dbg !854
  %4683 = add i32 %4682, %4681, !dbg !854
  store i32 %4683, i32* %4459, align 4, !dbg !854
  store i32 %4679, i32* %4585, align 4, !dbg !855
  br label %4684, !dbg !856

4684:                                             ; preds = %4623, %4626, %4629, %4635, %4638, %4618, %4615, %4674, %4640, %4591
  %4685 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4576, i32 -1, !dbg !857
  %4686 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4685, i32 0, i32 1, !dbg !748
  %4687 = load i16, i16* %4686, align 2, !dbg !749
  %4688 = and i16 %4687, 1, !dbg !750
  %4689 = icmp ne i16 %4688, 0, !dbg !750
  %4690 = and i16 %4687, 36, !dbg !751
  %4691 = icmp ne i16 %4690, 0, !dbg !751
  %4692 = and i16 %4687, 8, !dbg !752
  %4693 = icmp ne i16 %4692, 0, !dbg !752
  %4694 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4685, i32 0, i32 8, !dbg !753
  br i1 %4689, label %4695, label %4703, !dbg !754

4695:                                             ; preds = %4684
  %4696 = and i16 %4687, 16384, !dbg !755
  %4697 = icmp ne i16 %4696, 0, !dbg !755
  br i1 %4697, label %4698, label %4699, !dbg !756

4698:                                             ; preds = %4695
  store i32 10, i32* %4694, align 4, !dbg !757
  br label %4700, !dbg !758

4699:                                             ; preds = %4695
  store i32 0, i32* %4694, align 4, !dbg !759
  br label %4700, !dbg !760

4700:                                             ; preds = %4699, %4698
  %4701 = load i32, i32* %4459, align 4, !dbg !761
  %4702 = add i32 %4701, 1, !dbg !761
  store i32 %4702, i32* %4459, align 4, !dbg !761
  br label %4793, !dbg !762

4703:                                             ; preds = %4684
  br i1 %4691, label %4704, label %4748, !dbg !763

4704:                                             ; preds = %4703
  %4705 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4685, i32 0, i32 0, !dbg !764
  %4706 = bitcast %union.MemValue* %4705 to i64*, !dbg !765
  %4707 = load i64, i64* %4706, align 4, !dbg !766
  %4708 = alloca i64, align 8, !dbg !767
  %4709 = icmp slt i64 %4707, 0, !dbg !768
  br i1 %4709, label %4710, label %4712, !dbg !769

4710:                                             ; preds = %4704
  %4711 = xor i64 %4707, -1, !dbg !770
  store i64 %4711, i64* %4708, align 4, !dbg !771
  br label %4713, !dbg !772

4712:                                             ; preds = %4704
  store i64 %4707, i64* %4708, align 4, !dbg !773
  br label %4713, !dbg !774

4713:                                             ; preds = %4712, %4710
  %4714 = load i32, i32* %4459, align 4, !dbg !775
  %4715 = add i32 %4714, 1, !dbg !775
  store i32 %4715, i32* %4459, align 4, !dbg !775
  %4716 = load i64, i64* %4708, align 4, !dbg !776
  %4717 = icmp slt i64 %4716, 127, !dbg !777
  %4718 = icmp slt i64 %4716, 32767, !dbg !778
  %4719 = icmp slt i64 %4716, 8388607, !dbg !779
  %4720 = icmp slt i64 %4716, 2147483647, !dbg !780
  br i1 %4717, label %4721, label %4730, !dbg !781

4721:                                             ; preds = %4713
  %4722 = and i64 %4707, 1, !dbg !782
  %4723 = icmp eq i64 %4722, %4707, !dbg !783
  br i1 %4723, label %4724, label %4727, !dbg !784

4724:                                             ; preds = %4721
  %4725 = trunc i64 %4716 to i32, !dbg !785
  %4726 = add i32 %4725, 8, !dbg !786
  store i32 %4726, i32* %4694, align 4, !dbg !787
  br label %4793, !dbg !788

4727:                                             ; preds = %4721
  %4728 = load i64, i64* %4458, align 4, !dbg !789
  %4729 = add i64 %4728, 1, !dbg !789
  store i64 %4729, i64* %4458, align 4, !dbg !789
  store i32 1, i32* %4694, align 4, !dbg !790
  br label %4793, !dbg !791

4730:                                             ; preds = %4713
  %4731 = load i64, i64* %4458, align 4, !dbg !792
  br i1 %4718, label %4732, label %4734, !dbg !793

4732:                                             ; preds = %4730
  %4733 = add i64 %4731, 2, !dbg !794
  store i64 %4733, i64* %4458, align 4, !dbg !794
  store i32 2, i32* %4694, align 4, !dbg !795
  br label %4793, !dbg !796

4734:                                             ; preds = %4730
  br i1 %4719, label %4735, label %4737, !dbg !797

4735:                                             ; preds = %4734
  %4736 = add i64 %4731, 3, !dbg !798
  store i64 %4736, i64* %4458, align 4, !dbg !798
  store i32 3, i32* %4694, align 4, !dbg !799
  br label %4793, !dbg !800

4737:                                             ; preds = %4734
  br i1 %4720, label %4738, label %4740, !dbg !801

4738:                                             ; preds = %4737
  %4739 = add i64 %4731, 4, !dbg !802
  store i64 %4739, i64* %4458, align 4, !dbg !802
  store i32 4, i32* %4694, align 4, !dbg !803
  br label %4793, !dbg !804

4740:                                             ; preds = %4737
  %4741 = add i64 %4731, 8, !dbg !805
  store i64 %4741, i64* %4458, align 4, !dbg !805
  %4742 = and i16 %4687, 32, !dbg !806
  %4743 = icmp ne i16 %4742, 0, !dbg !806
  br i1 %4743, label %4744, label %4747, !dbg !807

4744:                                             ; preds = %4740
  %4745 = and i16 %4687, -33, !dbg !808
  %4746 = or i16 %4745, 8, !dbg !809
  store i16 %4746, i16* %4686, align 2, !dbg !810
  store i32 7, i32* %4694, align 4, !dbg !811
  br label %4793, !dbg !812

4747:                                             ; preds = %4740
  store i32 6, i32* %4694, align 4, !dbg !813
  br label %4793, !dbg !814

4748:                                             ; preds = %4703
  br i1 %4693, label %4749, label %4754, !dbg !815

4749:                                             ; preds = %4748
  %4750 = load i32, i32* %4459, align 4, !dbg !816
  %4751 = add i32 %4750, 1, !dbg !816
  store i32 %4751, i32* %4459, align 4, !dbg !816
  %4752 = load i64, i64* %4458, align 4, !dbg !817
  %4753 = add i64 %4752, 8, !dbg !817
  store i64 %4753, i64* %4458, align 4, !dbg !817
  store i32 7, i32* %4694, align 4, !dbg !818
  br label %4793, !dbg !819

4754:                                             ; preds = %4748
  %4755 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4685, i32 0, i32 4, !dbg !820
  %4756 = load i32, i32* %4755, align 4, !dbg !821
  %4757 = alloca i32, align 8, !dbg !822
  store i32 %4756, i32* %4757, align 4, !dbg !823
  %4758 = alloca i32, align 8, !dbg !824
  %4759 = add i32 %4756, %4756, !dbg !825
  %4760 = add i32 %4759, 12, !dbg !826
  %4761 = and i16 %4687, 2, !dbg !827
  %4762 = icmp ne i16 %4761, 0, !dbg !828
  %4763 = zext i1 %4762 to i32, !dbg !829
  %4764 = add i32 %4760, %4763, !dbg !830
  store i32 %4764, i32* %4758, align 4, !dbg !831
  %4765 = and i16 %4687, 16384, !dbg !832
  %4766 = icmp ne i16 %4765, 0, !dbg !833
  br i1 %4766, label %4767, label %4783, !dbg !834

4767:                                             ; preds = %4754
  %4768 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4685, i32 0, i32 0, !dbg !835
  %4769 = bitcast %union.MemValue* %4768 to i32*, !dbg !836
  %4770 = load i32, i32* %4769, align 4, !dbg !837
  %4771 = add i32 %4770, %4770, !dbg !838
  %4772 = add i32 %4764, %4771, !dbg !839
  store i32 %4772, i32* %4758, align 4, !dbg !839
  %4773 = load i64, i64* %4458, align 4, !dbg !840
  %4774 = icmp ne i64 %4773, 0, !dbg !840
  br i1 %4774, label %4779, label %4775, !dbg !841

4775:                                             ; preds = %4767
  %4776 = zext i32 %4770 to i64, !dbg !842
  %4777 = load i64, i64* %4460, align 4, !dbg !843
  %4778 = add i64 %4777, %4776, !dbg !843
  store i64 %4778, i64* %4460, align 4, !dbg !843
  br label %4783, !dbg !844

4779:                                             ; preds = %4767
  %4780 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %4685), !dbg !845
  %4781 = load i32, i32* %4757, align 4, !dbg !846
  %4782 = add i32 %4781, %4770, !dbg !846
  store i32 %4782, i32* %4757, align 4, !dbg !846
  br label %4783, !dbg !847

4783:                                             ; preds = %4775, %4779, %4754
  %4784 = load i32, i32* %4757, align 4, !dbg !848
  %4785 = zext i32 %4784 to i64, !dbg !849
  %4786 = load i64, i64* %4458, align 4, !dbg !850
  %4787 = add i64 %4786, %4785, !dbg !850
  store i64 %4787, i64* %4458, align 4, !dbg !850
  %4788 = load i32, i32* %4758, align 4, !dbg !851
  %4789 = zext i32 %4788 to i64, !dbg !852
  %4790 = call i32 @sqlite3VarintLen(i64 %4789), !dbg !853
  %4791 = load i32, i32* %4459, align 4, !dbg !854
  %4792 = add i32 %4791, %4790, !dbg !854
  store i32 %4792, i32* %4459, align 4, !dbg !854
  store i32 %4788, i32* %4694, align 4, !dbg !855
  br label %4793, !dbg !856

4793:                                             ; preds = %4732, %4735, %4738, %4744, %4747, %4727, %4724, %4783, %4749, %4700
  %4794 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 5, !dbg !858
  %4795 = load i32, i32* %4459, align 4, !dbg !859
  %4796 = zext i32 %4795 to i64, !dbg !860
  %4797 = icmp slt i32 %4795, 126, !dbg !861
  br i1 %4797, label %4798, label %4800, !dbg !862

4798:                                             ; preds = %4793
  %4799 = add i32 %4795, 1, !dbg !863
  store i32 %4799, i32* %4459, align 4, !dbg !863
  br label %4809, !dbg !864

4800:                                             ; preds = %4793
  %4801 = call i32 @sqlite3VarintLen(i64 %4796), !dbg !865
  %4802 = load i32, i32* %4459, align 4, !dbg !866
  %4803 = add i32 %4802, %4801, !dbg !866
  store i32 %4803, i32* %4459, align 4, !dbg !866
  %4804 = call i32 @sqlite3VarintLen(i64 %4796), !dbg !867
  %4805 = icmp slt i32 %4801, %4804, !dbg !868
  br i1 %4805, label %4806, label %4809, !dbg !869

4806:                                             ; preds = %4800
  %4807 = load i32, i32* %4459, align 4, !dbg !870
  %4808 = add i32 %4807, 1, !dbg !870
  store i32 %4808, i32* %4459, align 4, !dbg !870
  br label %4809, !dbg !871

4809:                                             ; preds = %4806, %4800, %4798
  %4810 = load i32, i32* %4459, align 4, !dbg !872
  %4811 = zext i32 %4810 to i64, !dbg !872
  %4812 = load i64, i64* %4458, align 4, !dbg !873
  %4813 = add i64 %4811, %4812, !dbg !873
  %4814 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 7, !dbg !874
  %4815 = load i32, i32* %4814, align 4, !dbg !875
  %4816 = zext i32 %4815 to i64, !dbg !876
  %4817 = load i64, i64* %4460, align 4, !dbg !877
  %4818 = add i64 %4813, %4817, !dbg !878
  %4819 = icmp sle i64 %4818, %4816, !dbg !879
  br i1 %4819, label %4820, label %4823, !dbg !880

4820:                                             ; preds = %4809
  %4821 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 6, !dbg !881
  %4822 = load i8*, i8** %4821, align 8, !dbg !882
  store i8* %4822, i8** %4794, align 8, !dbg !883
  br label %4826, !dbg !884

4823:                                             ; preds = %4809
  %4824 = trunc i64 %4813 to i32, !dbg !885
  %4825 = call i32 @sqlite3VdbeMemClearAndResize(%struct.sqlite3_value* %4467, i32 %4824), !dbg !886
  br label %4826, !dbg !887

4826:                                             ; preds = %4823, %4820
  %4827 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 4, !dbg !888
  %4828 = trunc i64 %4813 to i32, !dbg !889
  store i32 %4828, i32* %4827, align 4, !dbg !890
  %4829 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 1, !dbg !891
  store i16 16, i16* %4829, align 2, !dbg !892
  %4830 = load i64, i64* %4460, align 4, !dbg !893
  %4831 = icmp ne i64 %4830, 0, !dbg !894
  br i1 %4831, label %4832, label %4838, !dbg !895

4832:                                             ; preds = %4826
  %4833 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4467, i32 0, i32 0, i32 0, !dbg !896
  %4834 = bitcast double* %4833 to i32*, !dbg !897
  %4835 = trunc i64 %4830 to i32, !dbg !898
  store i32 %4835, i32* %4834, align 4, !dbg !899
  %4836 = load i16, i16* %4829, align 2, !dbg !900
  %4837 = or i16 %4836, 16384, !dbg !901
  store i16 %4837, i16* %4829, align 2, !dbg !902
  br label %4838, !dbg !903

4838:                                             ; preds = %4832, %4826
  %4839 = alloca i8*, align 8, !dbg !904
  %4840 = load i8*, i8** %4794, align 8, !dbg !905
  store i8* %4840, i8** %4839, align 8, !dbg !906
  %4841 = load i32, i32* %4459, align 4, !dbg !907
  %4842 = zext i32 %4841 to i64, !dbg !908
  %4843 = getelementptr i8, i8* %4840, i32 %4841, !dbg !909
  store i8* %4843, i8** %4461, align 8, !dbg !910
  %4844 = call i32 @sqlite3PutVarint(i8* %4840, i64 %4842), !dbg !911
  %4845 = getelementptr i8, i8* %4840, i32 %4844, !dbg !912
  store i8* %4845, i8** %4839, align 8, !dbg !913
  %4846 = load i8*, i8** %4461, align 8, !dbg !914
  %4847 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4465, i32 0, i32 8, !dbg !915
  %4848 = load i32, i32* %4847, align 4, !dbg !916
  %4849 = zext i32 %4848 to i64, !dbg !917
  %4850 = call i32 @sqlite3PutVarint(i8* %4845, i64 %4849), !dbg !918
  %4851 = getelementptr i8, i8* %4845, i32 %4850, !dbg !919
  store i8* %4851, i8** %4839, align 8, !dbg !920
  %4852 = call i32 @sqlite3VdbeSerialPut(i8* %4846, %struct.sqlite3_value* %4465, i32 %4848), !dbg !921
  %4853 = getelementptr i8, i8* %4846, i32 %4852, !dbg !922
  %4854 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4465, i32 1, !dbg !923
  %4855 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4854, i32 0, i32 8, !dbg !915
  %4856 = load i32, i32* %4855, align 4, !dbg !916
  %4857 = zext i32 %4856 to i64, !dbg !917
  %4858 = call i32 @sqlite3PutVarint(i8* %4851, i64 %4857), !dbg !918
  %4859 = getelementptr i8, i8* %4851, i32 %4858, !dbg !919
  store i8* %4859, i8** %4839, align 8, !dbg !920
  %4860 = call i32 @sqlite3VdbeSerialPut(i8* %4853, %struct.sqlite3_value* %4854, i32 %4856), !dbg !921
  %4861 = getelementptr i8, i8* %4853, i32 %4860, !dbg !922
  %4862 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4854, i32 1, !dbg !923
  %4863 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4862, i32 0, i32 8, !dbg !915
  %4864 = load i32, i32* %4863, align 4, !dbg !916
  %4865 = zext i32 %4864 to i64, !dbg !917
  %4866 = call i32 @sqlite3PutVarint(i8* %4859, i64 %4865), !dbg !918
  %4867 = getelementptr i8, i8* %4859, i32 %4866, !dbg !919
  store i8* %4867, i8** %4839, align 8, !dbg !920
  %4868 = call i32 @sqlite3VdbeSerialPut(i8* %4861, %struct.sqlite3_value* %4862, i32 %4864), !dbg !921
  call void @llvm.stackrestore(i8* %4457), !dbg !924
  br label %4869, !dbg !74

4869:                                             ; preds = %17, %4838
  %4870 = call i8* @llvm.stacksave(), !dbg !1181
  %4871 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !1184
  %4872 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4871, align 8, !dbg !1185
  %4873 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1186
  %4874 = call i8* @llvm.stacksave(), !dbg !1187
  %4875 = alloca i32, align 8, !dbg !1188
  store i32 0, i32* %4875, align 4, !dbg !1187
  %4876 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4873, i32 0, i32 1, !dbg !1187
  %4877 = load i16, i16* %4876, align 2, !dbg !1187
  %4878 = and i16 %4877, 16384, !dbg !1187
  %4879 = icmp ne i16 %4878, 0, !dbg !1187
  br i1 %4879, label %4880, label %4882, !dbg !1187

4880:                                             ; preds = %4869
  %4881 = call i32 @sqlite3VdbeMemExpandBlob(%struct.sqlite3_value* %4873), !dbg !1187
  store i32 %4881, i32* %4875, align 4, !dbg !1187
  br label %4882, !dbg !1188

4882:                                             ; preds = %4880, %4869
  call void @llvm.stackrestore(i8* %4874), !dbg !1187
  %4883 = load i32, i32* %4875, align 4, !dbg !1187
  %4884 = call i32 @sqlite3VdbeSorterWrite(%struct.VdbeCursor* %4872, %struct.sqlite3_value* %4873), !dbg !1189
  call void @llvm.stackrestore(i8* %4870), !dbg !1190
  br label %4885, !dbg !74

4885:                                             ; preds = %17, %4882, %3676, %3582
  %4886 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 6, !dbg !954
  %4887 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4886, align 8, !dbg !957
  %4888 = ptrtoint %struct.VdbeCursor* %4887 to i64, !dbg !958
  %4889 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4887, i32 0, i32 12, i32 0, !dbg !959
  %4890 = load %struct.BtCursor*, %struct.BtCursor** %4889, align 8, !dbg !960
  %4891 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %4890, i32 0), !dbg !961
  %4892 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4887, i32 0, i32 2, !dbg !962
  %4893 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4887, i32 0, i32 9, !dbg !963
  store i32 0, i32* %4893, align 4, !dbg !964
  %4894 = icmp eq i32 %4891, 0, !dbg !965
  br i1 %4894, label %4895, label %4896, !dbg !966

4895:                                             ; preds = %4885
  store i8 0, i8* %4892, align 1, !dbg !967
  br label %3035, !dbg !968

4896:                                             ; preds = %4885
  store i8 1, i8* %4892, align 1, !dbg !969
  br label %4897, !dbg !970

4897:                                             ; preds = %17, %2969, %4896, %3035, %3029, %1078, %1041, %766, %737, %468, %439
  %4898 = load %struct.VdbeCursor*, %struct.VdbeCursor** %9, align 8, !dbg !957
  %4899 = ptrtoint %struct.VdbeCursor* %4898 to i64, !dbg !958
  %4900 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4898, i32 0, i32 12, i32 0, !dbg !959
  %4901 = load %struct.BtCursor*, %struct.BtCursor** %4900, align 8, !dbg !960
  %4902 = call i32 @sqlite3BtreeNext(%struct.BtCursor* %4901, i32 0), !dbg !961
  %4903 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4898, i32 0, i32 2, !dbg !962
  %4904 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4898, i32 0, i32 9, !dbg !963
  store i32 0, i32* %4904, align 4, !dbg !964
  %4905 = icmp eq i32 %4902, 0, !dbg !965
  br i1 %4905, label %4906, label %4907, !dbg !966

4906:                                             ; preds = %4897
  store i8 0, i8* %4903, align 1, !dbg !967
  br label %173, !dbg !968

4907:                                             ; preds = %4897
  store i8 1, i8* %4903, align 1, !dbg !969
  br label %4908, !dbg !970

4908:                                             ; preds = %17, %4907, %167
  %4909 = call %struct.VdbeCursor* @allocateCursor(%struct.Vdbe* %0, i32 7, i32 3, i32 -1, i8 3), !dbg !1191
  %4910 = ptrtoint %struct.VdbeCursor* %4909 to i64, !dbg !1194
  %4911 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4909, i32 0, i32 2, !dbg !1195
  store i8 1, i8* %4911, align 1, !dbg !1196
  %4912 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4909, i32 0, i32 10, !dbg !1197
  store i32 23, i32* %4912, align 4, !dbg !1198
  %4913 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4909, i32 0, i32 4, !dbg !1199
  store i8 1, i8* %4913, align 1, !dbg !1200
  %4914 = call %struct.BtCursor* @sqlite3BtreeFakeValidCursor(), !dbg !1201
  %4915 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4909, i32 0, i32 12, i32 0, !dbg !1202
  store %struct.BtCursor* %4914, %struct.BtCursor** %4915, align 8, !dbg !1203
  br label %4916, !dbg !74

4916:                                             ; preds = %17, %4908
  %4917 = call i8* @llvm.stacksave(), !dbg !133
  %4918 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !136
  %4919 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %4918, i32 5, !dbg !686
  %4920 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4919, align 8, !dbg !137
  %4921 = alloca i32, align 4, !dbg !138
  store i32 1, i32* %4921, align 4, !dbg !139
  %4922 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4920, i32 0, i32 0, !dbg !140
  %4923 = load i8, i8* %4922, align 1, !dbg !141
  %4924 = icmp eq i8 %4923, 1, !dbg !142
  %4925 = alloca i32, align 4, !dbg !143
  store i32 0, i32* %4925, align 4, !dbg !144
  br i1 %4924, label %4926, label %4928, !dbg !145

4926:                                             ; preds = %4916
  %4927 = call i32 @sqlite3VdbeSorterRewind(%struct.VdbeCursor* %4920, i32* %4921), !dbg !146
  store i32 %4927, i32* %4925, align 4, !dbg !147
  br label %4934, !dbg !148

4928:                                             ; preds = %4916
  %4929 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4920, i32 0, i32 12, i32 0, !dbg !149
  %4930 = load %struct.BtCursor*, %struct.BtCursor** %4929, align 8, !dbg !150
  %4931 = call i32 @sqlite3BtreeFirst(%struct.BtCursor* %4930, i32* %4921), !dbg !151
  store i32 %4931, i32* %4925, align 4, !dbg !152
  %4932 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4920, i32 0, i32 3, !dbg !153
  store i8 0, i8* %4932, align 1, !dbg !154
  %4933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4920, i32 0, i32 9, !dbg !155
  store i32 0, i32* %4933, align 4, !dbg !156
  br label %4934, !dbg !157

4934:                                             ; preds = %4928, %4926
  %4935 = load i32, i32* %4925, align 4, !dbg !158
  %4936 = load i32, i32* %4921, align 4, !dbg !159
  %4937 = trunc i32 %4936 to i8, !dbg !160
  %4938 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4920, i32 0, i32 2, !dbg !161
  store i8 %4937, i8* %4938, align 1, !dbg !162
  call void @llvm.stackrestore(i8* %4917), !dbg !163
  %4939 = icmp ne i32 %4936, 0, !dbg !164
  br i1 %4939, label %6616, label %4940, !dbg !165

4940:                                             ; preds = %17, %6443, %4934
  %4941 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 23, !dbg !1204
  %4942 = load %struct.VdbeCursor**, %struct.VdbeCursor*** %8, align 8, !dbg !1207
  %4943 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %4942, i32 5, !dbg !1208
  %4944 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4943, align 8, !dbg !1209
  %4945 = call i32 @sqlite3VdbeSorterRowkey(%struct.VdbeCursor* %4944, %struct.sqlite3_value* %4941), !dbg !1210
  %4946 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %4942, i32 7, !dbg !1211
  %4947 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4946, align 8, !dbg !1212
  %4948 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4947, i32 0, i32 9, !dbg !1213
  store i32 0, i32* %4948, align 4, !dbg !1214
  br label %4949, !dbg !74

4949:                                             ; preds = %17, %4940
  %4950 = call i8* @llvm.stacksave(), !dbg !166
  %4951 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %4952 = load i8, i8* %4951, align 1, !dbg !170
  %4953 = alloca i32, align 4, !dbg !171
  store i32 7, i32* %4953, align 4, !dbg !172
  %4954 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !514
  %4955 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %4956 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4954, align 8, !dbg !174
  store %struct.VdbeCursor* %4956, %struct.VdbeCursor** %4955, align 8, !dbg !175
  %4957 = alloca i8*, align 8, !dbg !176
  %4958 = alloca i32, align 4, !dbg !177
  %4959 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %4955, i32* %4953), !dbg !178
  %4960 = load %struct.VdbeCursor*, %struct.VdbeCursor** %4955, align 8, !dbg !179
  %4961 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !180
  %4962 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 16, !dbg !181
  %4963 = load i16, i16* %4962, align 2, !dbg !182
  %4964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 19, !dbg !183
  %4965 = load i32*, i32** %4964, align 8, !dbg !184
  %4966 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 0, !dbg !185
  %4967 = load i8, i8* %4966, align 1, !dbg !186
  %4968 = icmp ne i8 %4967, 3, !dbg !187
  %4969 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 2, !dbg !188
  %4970 = load i8, i8* %4969, align 1, !dbg !189
  %4971 = icmp ne i8 %4970, 0, !dbg !190
  %4972 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 14, !dbg !191
  %4973 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 21, !dbg !192
  %4974 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 22, !dbg !193
  %4975 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 20, !dbg !194
  %4976 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 17, !dbg !195
  %4977 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 9, !dbg !196
  %4978 = load i32, i32* %4977, align 4, !dbg !197
  %4979 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %4980 = load i32, i32* %4979, align 4, !dbg !199
  %4981 = icmp ne i32 %4978, %4980, !dbg !200
  br i1 %4981, label %4982, label %5024, !dbg !201

4982:                                             ; preds = %4949
  br i1 %4971, label %5004, label %4999, !dbg !202

4983:                                             ; preds = %4999, %5006
  %4984 = load i32, i32* %4979, align 4, !dbg !203
  store i32 %4984, i32* %4977, align 4, !dbg !204
  %4985 = load i8*, i8** %4975, align 8, !dbg !205
  %4986 = load i8, i8* %4985, align 1, !dbg !206
  %4987 = icmp sgt i8 %4986, -1, !dbg !209
  br i1 %4987, label %4988, label %4990, !dbg !210

4988:                                             ; preds = %4983
  %4989 = zext i8 %4986 to i32, !dbg !211
  store i32 %4989, i32* %4965, align 4, !dbg !212
  store i32 1, i32* %4972, align 4, !dbg !213
  br label %4993, !dbg !214

4990:                                             ; preds = %4983
  %4991 = call i8 @sqlite3GetVarint32(i8* %4985, i32* %4965), !dbg !215
  %4992 = zext i8 %4991 to i32, !dbg !216
  store i32 %4992, i32* %4972, align 4, !dbg !217
  br label %4993, !dbg !218

4993:                                             ; preds = %4990, %4988
  store i16 0, i16* %4976, align 2, !dbg !219
  %4994 = load i32, i32* %4974, align 4, !dbg !220
  %4995 = load i32, i32* %4965, align 4, !dbg !221
  %4996 = icmp ult i32 %4994, %4995, !dbg !222
  br i1 %4996, label %4998, label %4997, !dbg !223

4997:                                             ; preds = %4993
  store i8* %4985, i8** %4957, align 8, !dbg !224
  br label %5115, !dbg !225

4998:                                             ; preds = %4993
  store i8* null, i8** %4975, align 8, !dbg !226
  store i32 0, i32* %4974, align 4, !dbg !227
  br label %5024, !dbg !228

4999:                                             ; preds = %4982
  %5000 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 12, i32 0, !dbg !229
  %5001 = load %struct.BtCursor*, %struct.BtCursor** %5000, align 8, !dbg !230
  %5002 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5001), !dbg !231
  store i32 %5002, i32* %4973, align 4, !dbg !232
  %5003 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5001, i32* %4974), !dbg !233
  store i8* %5003, i8** %4975, align 8, !dbg !234
  br label %4983, !dbg !235

5004:                                             ; preds = %4982
  %5005 = icmp eq i8 %4967, 3, !dbg !236
  br i1 %5005, label %5006, label %5017, !dbg !237

5006:                                             ; preds = %5004
  %5007 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 10, !dbg !238
  %5008 = load i32, i32* %5007, align 4, !dbg !239
  %5009 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5008, !dbg !240
  %5010 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5009, i32 0, i32 1, !dbg !241
  %5011 = load i16, i16* %5010, align 2, !dbg !242
  %5012 = and i16 %5011, 16, !dbg !243
  %5013 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5009, i32 0, i32 4, !dbg !244
  %5014 = load i32, i32* %5013, align 4, !dbg !245
  store i32 %5014, i32* %4973, align 4, !dbg !246
  store i32 %5014, i32* %4974, align 4, !dbg !247
  %5015 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5009, i32 0, i32 5, !dbg !248
  %5016 = load i8*, i8** %5015, align 8, !dbg !249
  store i8* %5016, i8** %4975, align 8, !dbg !250
  br label %4983, !dbg !251

5017:                                             ; preds = %5004
  %5018 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 1, !dbg !252
  %5019 = load i16, i16* %5018, align 2, !dbg !252
  %5020 = and i16 %5019, 9216, !dbg !252
  %5021 = icmp ne i16 %5020, 0, !dbg !252
  br i1 %5021, label %5022, label %5023, !dbg !252

5022:                                             ; preds = %5017
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4961), !dbg !252
  br label %5203, !dbg !252

5023:                                             ; preds = %5017
  store i16 1, i16* %5018, align 2, !dbg !252
  br label %5203, !dbg !252

5024:                                             ; preds = %4998, %4949
  %5025 = load i16, i16* %4976, align 2, !dbg !253
  %5026 = icmp ule i16 %5025, 0, !dbg !254
  br i1 %5026, label %5107, label %5104, !dbg !255

5027:                                             ; preds = %5104, %5193
  %5028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 1, !dbg !256
  %5029 = load i16, i16* %5028, align 2, !dbg !257
  %5030 = and i16 9216, %5029, !dbg !258
  %5031 = icmp eq i16 0, %5030, !dbg !259
  br i1 %5031, label %5032, label %5036, !dbg !260

5032:                                             ; preds = %5027
  %5033 = icmp ne i16 %5030, 0, !dbg !261
  br i1 %5033, label %5034, label %5035, !dbg !261

5034:                                             ; preds = %5032
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4961), !dbg !261
  br label %5036, !dbg !261

5035:                                             ; preds = %5032
  store i16 1, i16* %5028, align 2, !dbg !261
  br label %5036, !dbg !261

5036:                                             ; preds = %5034, %5035, %5027
  %5037 = load i32, i32* %4958, align 4, !dbg !262
  %5038 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 23, i32 0, !dbg !263
  %5039 = load i32, i32* %5038, align 4, !dbg !264
  %5040 = load i32, i32* %4974, align 4, !dbg !265
  %5041 = getelementptr i32, i32* %4965, i32 1, !dbg !266
  %5042 = load i32, i32* %5041, align 4, !dbg !267
  %5043 = icmp sge i32 %5040, %5042, !dbg !268
  br i1 %5043, label %5044, label %5083, !dbg !269

5044:                                             ; preds = %5036
  %5045 = load i8*, i8** %4975, align 8, !dbg !270
  %5046 = ptrtoint i8* %5045 to i64, !dbg !271
  %5047 = load i32, i32* %4965, align 4, !dbg !273
  %5048 = zext i32 %5047 to i64, !dbg !274
  %5049 = add i64 %5046, %5048, !dbg !275
  %5050 = inttoptr i64 %5049 to i8*, !dbg !276
  store i8* %5050, i8** %4957, align 8, !dbg !277
  %5051 = load i32, i32* %4958, align 4, !dbg !278
  %5052 = icmp ult i32 %5051, 12, !dbg !279
  br i1 %5052, label %5053, label %5055, !dbg !280

5053:                                             ; preds = %5044
  %5054 = call i32 @sqlite3VdbeSerialGet(i8* %5050, i32 %5051, %struct.sqlite3_value* %4961), !dbg !281
  br label %5203, !dbg !282

5055:                                             ; preds = %5044
  %5056 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %5056, align 2, !dbg !284
  %5057 = getelementptr i16, i16* %5056, i32 1, !dbg !285
  store i16 514, i16* %5057, align 2, !dbg !286
  %5058 = load i32, i32* %4958, align 4, !dbg !287
  %5059 = sub i32 %5058, 12, !dbg !288
  %5060 = lshr i32 %5059, 1, !dbg !289
  %5061 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 4, !dbg !290
  store i32 %5060, i32* %5061, align 4, !dbg !291
  %5062 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 2, !dbg !292
  store i8 %4952, i8* %5062, align 1, !dbg !293
  %5063 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 5, !dbg !294
  %5064 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 7, !dbg !295
  %5065 = load i32, i32* %5064, align 4, !dbg !296
  %5066 = add i32 %5060, 2, !dbg !297
  %5067 = icmp slt i32 %5065, %5066, !dbg !298
  br i1 %5067, label %5068, label %5070, !dbg !299

5068:                                             ; preds = %5055
  store i16 1, i16* %5028, align 2, !dbg !300
  %5069 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %4961, i32 %5066, i32 0), !dbg !301
  br label %5073, !dbg !302

5070:                                             ; preds = %5055
  %5071 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 6, !dbg !303
  %5072 = load i8*, i8** %5071, align 8, !dbg !304
  store i8* %5072, i8** %5063, align 8, !dbg !305
  br label %5073, !dbg !306

5073:                                             ; preds = %5070, %5068
  %5074 = zext i32 %5060 to i64, !dbg !307
  %5075 = load i8*, i8** %5063, align 8, !dbg !308
  %5076 = load i8*, i8** %4957, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5075, i8* %5076, i64 %5074, i1 false), !dbg !310
  %5077 = getelementptr i8, i8* %5075, i32 %5060, !dbg !311
  store i8 0, i8* %5077, align 1, !dbg !312
  %5078 = add i32 %5060, 1, !dbg !313
  %5079 = getelementptr i8, i8* %5075, i32 %5078, !dbg !314
  store i8 0, i8* %5079, align 1, !dbg !315
  %5080 = and i32 %5058, 1, !dbg !316
  %5081 = getelementptr i16, i16* %5056, i32 %5080, !dbg !317
  %5082 = load i16, i16* %5081, align 2, !dbg !318
  store i16 %5082, i16* %5028, align 2, !dbg !319
  br label %5203, !dbg !320

5083:                                             ; preds = %5036
  %5084 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 2, !dbg !321
  store i8 %4952, i8* %5084, align 1, !dbg !322
  %5085 = load i32, i32* %4958, align 4, !dbg !323
  %5086 = and i32 %5085, 1, !dbg !324
  %5087 = icmp eq i32 %5086, 0, !dbg !325
  %5088 = icmp sge i32 %5085, 12, !dbg !326
  %5089 = and i1 %5088, %5087, !dbg !327
  %5090 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5085), !dbg !328
  %5091 = icmp eq i32 %5090, 0, !dbg !329
  br i1 %5091, label %5102, label %5092, !dbg !330

5092:                                             ; preds = %5083
  %5093 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 12, i32 0, !dbg !331
  %5094 = load %struct.BtCursor*, %struct.BtCursor** %5093, align 8, !dbg !332
  %5095 = load i32, i32* %4965, align 4, !dbg !334
  %5096 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5094, i32 %5095, i32 %5090, %struct.sqlite3_value* %4961), !dbg !335
  %5097 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 5, !dbg !336
  %5098 = load i8*, i8** %5097, align 8, !dbg !337
  %5099 = call i32 @sqlite3VdbeSerialGet(i8* %5098, i32 %5085, %struct.sqlite3_value* %4961), !dbg !338
  %5100 = load i16, i16* %5028, align 2, !dbg !339
  %5101 = and i16 %5100, -4097, !dbg !340
  store i16 %5101, i16* %5028, align 2, !dbg !341
  br label %5203, !dbg !342

5102:                                             ; preds = %5083
  %5103 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5085, %struct.sqlite3_value* %4961), !dbg !343
  br label %5203, !dbg !344

5104:                                             ; preds = %5024
  %5105 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 23, i32 0, !dbg !345
  %5106 = load i32, i32* %5105, align 4, !dbg !346
  store i32 %5106, i32* %4958, align 4, !dbg !347
  br label %5027, !dbg !348

5107:                                             ; preds = %5024
  %5108 = load i32, i32* %4972, align 4, !dbg !349
  %5109 = load i32, i32* %4965, align 4, !dbg !350
  %5110 = icmp ult i32 %5108, %5109, !dbg !351
  br i1 %5110, label %5111, label %5192, !dbg !352

5111:                                             ; preds = %5107
  %5112 = load i8*, i8** %4975, align 8, !dbg !353
  %5113 = icmp eq i8* %5112, null, !dbg !354
  br i1 %5113, label %5115, label %5114, !dbg !355

5114:                                             ; preds = %5111
  store i8* %5112, i8** %4957, align 8, !dbg !356
  br label %5115, !dbg !357

5115:                                             ; preds = %5114, %5111, %4997
  %5116 = alloca i32, align 4, !dbg !358
  %5117 = load i16, i16* %4976, align 2, !dbg !359
  %5118 = zext i16 %5117 to i32, !dbg !360
  store i32 %5118, i32* %5116, align 4, !dbg !361
  %5119 = alloca i64, align 8, !dbg !362
  %5120 = getelementptr i32, i32* %4965, i32 %5118, !dbg !363
  %5121 = load i32, i32* %5120, align 4, !dbg !364
  %5122 = zext i32 %5121 to i64, !dbg !365
  store i64 %5122, i64* %5119, align 4, !dbg !366
  %5123 = load i8*, i8** %4957, align 8, !dbg !367
  %5124 = load i32, i32* %4972, align 4, !dbg !368
  %5125 = alloca i8*, align 8, !dbg !369
  %5126 = getelementptr i8, i8* %5123, i32 %5124, !dbg !370
  store i8* %5126, i8** %5125, align 8, !dbg !371
  %5127 = load i32, i32* %4965, align 4, !dbg !372
  %5128 = getelementptr i8, i8* %5123, i32 %5127, !dbg !373
  br label %5129, !dbg !374

5129:                                             ; preds = %5136, %5115
  %5130 = load i32, i32* %5116, align 4, !dbg !375
  %5131 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %4960, i32 0, i32 23, i32 %5130, !dbg !376
  %5132 = load i8*, i8** %5125, align 8, !dbg !377
  %5133 = load i8, i8* %5132, align 1, !dbg !378
  %5134 = zext i8 %5133 to i32, !dbg !379
  store i32 %5134, i32* %4958, align 4, !dbg !380
  store i32 %5134, i32* %5131, align 4, !dbg !381
  %5135 = icmp sgt i8 %5133, -1, !dbg !382
  br i1 %5135, label %5159, label %5150, !dbg !383

5136:                                             ; preds = %5150, %5159
  %5137 = load i32, i32* %5116, align 4, !dbg !384
  %5138 = add i32 %5137, 1, !dbg !385
  store i32 %5138, i32* %5116, align 4, !dbg !386
  %5139 = load i64, i64* %5119, align 4, !dbg !387
  %5140 = and i64 4294967295, %5139, !dbg !388
  %5141 = trunc i64 %5140 to i32, !dbg !389
  %5142 = getelementptr i32, i32* %4965, i32 %5138, !dbg !390
  store i32 %5141, i32* %5142, align 4, !dbg !391
  %5143 = load i32, i32* %5116, align 4, !dbg !392
  %5144 = icmp sle i32 %5143, 0, !dbg !393
  %5145 = load i8*, i8** %5125, align 8, !dbg !394
  %5146 = ptrtoint i8* %5145 to i64, !dbg !395
  %5147 = ptrtoint i8* %5128 to i64, !dbg !396
  %5148 = icmp ult i64 %5146, %5147, !dbg !397
  %5149 = and i1 %5144, %5148, !dbg !398
  br i1 %5149, label %5129, label %5168, !dbg !399

5150:                                             ; preds = %5129
  %5151 = load i8*, i8** %5125, align 8, !dbg !400
  %5152 = call i8 @sqlite3GetVarint32(i8* %5151, i32* %4958), !dbg !401
  %5153 = getelementptr i8, i8* %5151, i8 %5152, !dbg !402
  store i8* %5153, i8** %5125, align 8, !dbg !403
  %5154 = load i32, i32* %4958, align 4, !dbg !404
  store i32 %5154, i32* %5131, align 4, !dbg !405
  %5155 = load i64, i64* %5119, align 4, !dbg !406
  %5156 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5154), !dbg !407
  %5157 = zext i32 %5156 to i64, !dbg !408
  %5158 = add i64 %5155, %5157, !dbg !409
  store i64 %5158, i64* %5119, align 4, !dbg !410
  br label %5136, !dbg !411

5159:                                             ; preds = %5129
  %5160 = getelementptr i8, i8* %5132, i32 1, !dbg !412
  store i8* %5160, i8** %5125, align 8, !dbg !413
  %5161 = load i32, i32* %4958, align 4, !dbg !414
  %5162 = trunc i32 %5161 to i8, !dbg !415
  %5163 = getelementptr i8, i8* %4, i8 %5162, !dbg !416
  %5164 = load i8, i8* %5163, align 1, !dbg !417
  %5165 = zext i8 %5164 to i64, !dbg !418
  %5166 = load i64, i64* %5119, align 4, !dbg !419
  %5167 = add i64 %5166, %5165, !dbg !420
  store i64 %5167, i64* %5119, align 4, !dbg !421
  br label %5136, !dbg !422

5168:                                             ; preds = %5136
  %5169 = load i64, i64* %5119, align 4, !dbg !423
  %5170 = load i32, i32* %4973, align 4, !dbg !424
  %5171 = zext i32 %5170 to i64, !dbg !425
  %5172 = icmp uge i64 %5146, %5147, !dbg !426
  %5173 = icmp ugt i64 %5146, %5147, !dbg !427
  %5174 = icmp ne i64 %5169, %5171, !dbg !428
  %5175 = icmp ugt i64 %5169, %5171, !dbg !429
  %5176 = or i1 %5173, %5174, !dbg !430
  %5177 = and i1 %5172, %5176, !dbg !431
  %5178 = or i1 %5177, %5175, !dbg !432
  br i1 %5178, label %5179, label %5183, !dbg !433

5179:                                             ; preds = %5168
  %5180 = load i32, i32* %4965, align 4, !dbg !434
  %5181 = icmp eq i32 %5180, 0, !dbg !435
  br i1 %5181, label %5182, label %5183, !dbg !436

5182:                                             ; preds = %5179
  store i32 0, i32* %5116, align 4, !dbg !437
  store i8* %5128, i8** %5125, align 8, !dbg !438
  br label %5183, !dbg !439

5183:                                             ; preds = %5182, %5179, %5168
  %5184 = load i32, i32* %5116, align 4, !dbg !440
  %5185 = trunc i32 %5184 to i16, !dbg !441
  store i16 %5185, i16* %4976, align 2, !dbg !442
  %5186 = load i8*, i8** %5125, align 8, !dbg !443
  %5187 = ptrtoint i8* %5186 to i64, !dbg !444
  %5188 = load i8*, i8** %4957, align 8, !dbg !445
  %5189 = ptrtoint i8* %5188 to i64, !dbg !446
  %5190 = sub i64 %5187, %5189, !dbg !447
  %5191 = trunc i64 %5190 to i32, !dbg !448
  store i32 %5191, i32* %4972, align 4, !dbg !449
  br label %5193, !dbg !450

5192:                                             ; preds = %5107
  store i32 0, i32* %4958, align 4, !dbg !451
  br label %5193, !dbg !452

5193:                                             ; preds = %5183, %5192
  %5194 = load i16, i16* %4976, align 2, !dbg !453
  %5195 = icmp sle i16 %5194, 0, !dbg !454
  br i1 %5195, label %5196, label %5027, !dbg !455

5196:                                             ; preds = %5193
  %5197 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %4961, i32 0, i32 1, !dbg !456
  %5198 = load i16, i16* %5197, align 2, !dbg !456
  %5199 = and i16 %5198, 9216, !dbg !456
  %5200 = icmp ne i16 %5199, 0, !dbg !456
  br i1 %5200, label %5201, label %5202, !dbg !456

5201:                                             ; preds = %5196
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %4961), !dbg !456
  br label %5203, !dbg !456

5202:                                             ; preds = %5196
  store i16 1, i16* %5197, align 2, !dbg !456
  br label %5203, !dbg !456

5203:                                             ; preds = %5201, %5202, %5073, %5053, %5092, %5102, %5022, %5023
  call void @llvm.stackrestore(i8* %4950), !dbg !457
  br label %5204, !dbg !74

5204:                                             ; preds = %17, %5203
  %5205 = call i8* @llvm.stacksave(), !dbg !166
  %5206 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %5207 = load i8, i8* %5206, align 1, !dbg !170
  %5208 = alloca i32, align 4, !dbg !171
  store i32 7, i32* %5208, align 4, !dbg !172
  %5209 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !514
  %5210 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %5211 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5209, align 8, !dbg !174
  store %struct.VdbeCursor* %5211, %struct.VdbeCursor** %5210, align 8, !dbg !175
  %5212 = alloca i8*, align 8, !dbg !176
  %5213 = alloca i32, align 4, !dbg !177
  %5214 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5210, i32* %5208), !dbg !178
  %5215 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5210, align 8, !dbg !179
  %5216 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !180
  %5217 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 16, !dbg !181
  %5218 = load i16, i16* %5217, align 2, !dbg !182
  %5219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 19, !dbg !183
  %5220 = load i32*, i32** %5219, align 8, !dbg !184
  %5221 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 0, !dbg !185
  %5222 = load i8, i8* %5221, align 1, !dbg !186
  %5223 = icmp ne i8 %5222, 3, !dbg !187
  %5224 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 2, !dbg !188
  %5225 = load i8, i8* %5224, align 1, !dbg !189
  %5226 = icmp ne i8 %5225, 0, !dbg !190
  %5227 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 14, !dbg !191
  %5228 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 21, !dbg !192
  %5229 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 22, !dbg !193
  %5230 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 20, !dbg !194
  %5231 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 17, !dbg !195
  %5232 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 9, !dbg !196
  %5233 = load i32, i32* %5232, align 4, !dbg !197
  %5234 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %5235 = load i32, i32* %5234, align 4, !dbg !199
  %5236 = icmp ne i32 %5233, %5235, !dbg !200
  br i1 %5236, label %5237, label %5279, !dbg !201

5237:                                             ; preds = %5204
  br i1 %5226, label %5259, label %5254, !dbg !202

5238:                                             ; preds = %5254, %5261
  %5239 = load i32, i32* %5234, align 4, !dbg !203
  store i32 %5239, i32* %5232, align 4, !dbg !204
  %5240 = load i8*, i8** %5230, align 8, !dbg !205
  %5241 = load i8, i8* %5240, align 1, !dbg !206
  %5242 = icmp sgt i8 %5241, -1, !dbg !209
  br i1 %5242, label %5243, label %5245, !dbg !210

5243:                                             ; preds = %5238
  %5244 = zext i8 %5241 to i32, !dbg !211
  store i32 %5244, i32* %5220, align 4, !dbg !212
  store i32 1, i32* %5227, align 4, !dbg !213
  br label %5248, !dbg !214

5245:                                             ; preds = %5238
  %5246 = call i8 @sqlite3GetVarint32(i8* %5240, i32* %5220), !dbg !215
  %5247 = zext i8 %5246 to i32, !dbg !216
  store i32 %5247, i32* %5227, align 4, !dbg !217
  br label %5248, !dbg !218

5248:                                             ; preds = %5245, %5243
  store i16 0, i16* %5231, align 2, !dbg !219
  %5249 = load i32, i32* %5229, align 4, !dbg !220
  %5250 = load i32, i32* %5220, align 4, !dbg !221
  %5251 = icmp ult i32 %5249, %5250, !dbg !222
  br i1 %5251, label %5253, label %5252, !dbg !223

5252:                                             ; preds = %5248
  store i8* %5240, i8** %5212, align 8, !dbg !224
  br label %5372, !dbg !225

5253:                                             ; preds = %5248
  store i8* null, i8** %5230, align 8, !dbg !226
  store i32 0, i32* %5229, align 4, !dbg !227
  br label %5279, !dbg !228

5254:                                             ; preds = %5237
  %5255 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 12, i32 0, !dbg !229
  %5256 = load %struct.BtCursor*, %struct.BtCursor** %5255, align 8, !dbg !230
  %5257 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5256), !dbg !231
  store i32 %5257, i32* %5228, align 4, !dbg !232
  %5258 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5256, i32* %5229), !dbg !233
  store i8* %5258, i8** %5230, align 8, !dbg !234
  br label %5238, !dbg !235

5259:                                             ; preds = %5237
  %5260 = icmp eq i8 %5222, 3, !dbg !236
  br i1 %5260, label %5261, label %5272, !dbg !237

5261:                                             ; preds = %5259
  %5262 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 10, !dbg !238
  %5263 = load i32, i32* %5262, align 4, !dbg !239
  %5264 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5263, !dbg !240
  %5265 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5264, i32 0, i32 1, !dbg !241
  %5266 = load i16, i16* %5265, align 2, !dbg !242
  %5267 = and i16 %5266, 16, !dbg !243
  %5268 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5264, i32 0, i32 4, !dbg !244
  %5269 = load i32, i32* %5268, align 4, !dbg !245
  store i32 %5269, i32* %5228, align 4, !dbg !246
  store i32 %5269, i32* %5229, align 4, !dbg !247
  %5270 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5264, i32 0, i32 5, !dbg !248
  %5271 = load i8*, i8** %5270, align 8, !dbg !249
  store i8* %5271, i8** %5230, align 8, !dbg !250
  br label %5238, !dbg !251

5272:                                             ; preds = %5259
  %5273 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 1, !dbg !252
  %5274 = load i16, i16* %5273, align 2, !dbg !252
  %5275 = and i16 %5274, 9216, !dbg !252
  %5276 = icmp ne i16 %5275, 0, !dbg !252
  br i1 %5276, label %5277, label %5278, !dbg !252

5277:                                             ; preds = %5272
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5216), !dbg !252
  br label %5460, !dbg !252

5278:                                             ; preds = %5272
  store i16 1, i16* %5273, align 2, !dbg !252
  br label %5460, !dbg !252

5279:                                             ; preds = %5253, %5204
  %5280 = load i16, i16* %5231, align 2, !dbg !253
  %5281 = icmp ule i16 %5280, 1, !dbg !254
  br i1 %5281, label %5364, label %5361, !dbg !255

5282:                                             ; preds = %5361, %5450
  %5283 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 1, !dbg !256
  %5284 = load i16, i16* %5283, align 2, !dbg !257
  %5285 = and i16 9216, %5284, !dbg !258
  %5286 = icmp eq i16 0, %5285, !dbg !259
  br i1 %5286, label %5287, label %5291, !dbg !260

5287:                                             ; preds = %5282
  %5288 = icmp ne i16 %5285, 0, !dbg !261
  br i1 %5288, label %5289, label %5290, !dbg !261

5289:                                             ; preds = %5287
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5216), !dbg !261
  br label %5291, !dbg !261

5290:                                             ; preds = %5287
  store i16 1, i16* %5283, align 2, !dbg !261
  br label %5291, !dbg !261

5291:                                             ; preds = %5289, %5290, %5282
  %5292 = load i32, i32* %5213, align 4, !dbg !262
  %5293 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 23, i32 1, !dbg !263
  %5294 = load i32, i32* %5293, align 4, !dbg !264
  %5295 = load i32, i32* %5229, align 4, !dbg !265
  %5296 = getelementptr i32, i32* %5220, i32 2, !dbg !266
  %5297 = load i32, i32* %5296, align 4, !dbg !267
  %5298 = icmp sge i32 %5295, %5297, !dbg !268
  br i1 %5298, label %5299, label %5339, !dbg !269

5299:                                             ; preds = %5291
  %5300 = load i8*, i8** %5230, align 8, !dbg !270
  %5301 = ptrtoint i8* %5300 to i64, !dbg !271
  %5302 = getelementptr i32, i32* %5220, i32 1, !dbg !272
  %5303 = load i32, i32* %5302, align 4, !dbg !273
  %5304 = zext i32 %5303 to i64, !dbg !274
  %5305 = add i64 %5301, %5304, !dbg !275
  %5306 = inttoptr i64 %5305 to i8*, !dbg !276
  store i8* %5306, i8** %5212, align 8, !dbg !277
  %5307 = load i32, i32* %5213, align 4, !dbg !278
  %5308 = icmp ult i32 %5307, 12, !dbg !279
  br i1 %5308, label %5309, label %5311, !dbg !280

5309:                                             ; preds = %5299
  %5310 = call i32 @sqlite3VdbeSerialGet(i8* %5306, i32 %5307, %struct.sqlite3_value* %5216), !dbg !281
  br label %5460, !dbg !282

5311:                                             ; preds = %5299
  %5312 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %5312, align 2, !dbg !284
  %5313 = getelementptr i16, i16* %5312, i32 1, !dbg !285
  store i16 514, i16* %5313, align 2, !dbg !286
  %5314 = load i32, i32* %5213, align 4, !dbg !287
  %5315 = sub i32 %5314, 12, !dbg !288
  %5316 = lshr i32 %5315, 1, !dbg !289
  %5317 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 4, !dbg !290
  store i32 %5316, i32* %5317, align 4, !dbg !291
  %5318 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 2, !dbg !292
  store i8 %5207, i8* %5318, align 1, !dbg !293
  %5319 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 5, !dbg !294
  %5320 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 7, !dbg !295
  %5321 = load i32, i32* %5320, align 4, !dbg !296
  %5322 = add i32 %5316, 2, !dbg !297
  %5323 = icmp slt i32 %5321, %5322, !dbg !298
  br i1 %5323, label %5324, label %5326, !dbg !299

5324:                                             ; preds = %5311
  store i16 1, i16* %5283, align 2, !dbg !300
  %5325 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5216, i32 %5322, i32 0), !dbg !301
  br label %5329, !dbg !302

5326:                                             ; preds = %5311
  %5327 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 6, !dbg !303
  %5328 = load i8*, i8** %5327, align 8, !dbg !304
  store i8* %5328, i8** %5319, align 8, !dbg !305
  br label %5329, !dbg !306

5329:                                             ; preds = %5326, %5324
  %5330 = zext i32 %5316 to i64, !dbg !307
  %5331 = load i8*, i8** %5319, align 8, !dbg !308
  %5332 = load i8*, i8** %5212, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5331, i8* %5332, i64 %5330, i1 false), !dbg !310
  %5333 = getelementptr i8, i8* %5331, i32 %5316, !dbg !311
  store i8 0, i8* %5333, align 1, !dbg !312
  %5334 = add i32 %5316, 1, !dbg !313
  %5335 = getelementptr i8, i8* %5331, i32 %5334, !dbg !314
  store i8 0, i8* %5335, align 1, !dbg !315
  %5336 = and i32 %5314, 1, !dbg !316
  %5337 = getelementptr i16, i16* %5312, i32 %5336, !dbg !317
  %5338 = load i16, i16* %5337, align 2, !dbg !318
  store i16 %5338, i16* %5283, align 2, !dbg !319
  br label %5460, !dbg !320

5339:                                             ; preds = %5291
  %5340 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 2, !dbg !321
  store i8 %5207, i8* %5340, align 1, !dbg !322
  %5341 = load i32, i32* %5213, align 4, !dbg !323
  %5342 = and i32 %5341, 1, !dbg !324
  %5343 = icmp eq i32 %5342, 0, !dbg !325
  %5344 = icmp sge i32 %5341, 12, !dbg !326
  %5345 = and i1 %5344, %5343, !dbg !327
  %5346 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5341), !dbg !328
  %5347 = icmp eq i32 %5346, 0, !dbg !329
  br i1 %5347, label %5359, label %5348, !dbg !330

5348:                                             ; preds = %5339
  %5349 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 12, i32 0, !dbg !331
  %5350 = load %struct.BtCursor*, %struct.BtCursor** %5349, align 8, !dbg !332
  %5351 = getelementptr i32, i32* %5220, i32 1, !dbg !333
  %5352 = load i32, i32* %5351, align 4, !dbg !334
  %5353 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5350, i32 %5352, i32 %5346, %struct.sqlite3_value* %5216), !dbg !335
  %5354 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 5, !dbg !336
  %5355 = load i8*, i8** %5354, align 8, !dbg !337
  %5356 = call i32 @sqlite3VdbeSerialGet(i8* %5355, i32 %5341, %struct.sqlite3_value* %5216), !dbg !338
  %5357 = load i16, i16* %5283, align 2, !dbg !339
  %5358 = and i16 %5357, -4097, !dbg !340
  store i16 %5358, i16* %5283, align 2, !dbg !341
  br label %5460, !dbg !342

5359:                                             ; preds = %5339
  %5360 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5341, %struct.sqlite3_value* %5216), !dbg !343
  br label %5460, !dbg !344

5361:                                             ; preds = %5279
  %5362 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 23, i32 1, !dbg !345
  %5363 = load i32, i32* %5362, align 4, !dbg !346
  store i32 %5363, i32* %5213, align 4, !dbg !347
  br label %5282, !dbg !348

5364:                                             ; preds = %5279
  %5365 = load i32, i32* %5227, align 4, !dbg !349
  %5366 = load i32, i32* %5220, align 4, !dbg !350
  %5367 = icmp ult i32 %5365, %5366, !dbg !351
  br i1 %5367, label %5368, label %5449, !dbg !352

5368:                                             ; preds = %5364
  %5369 = load i8*, i8** %5230, align 8, !dbg !353
  %5370 = icmp eq i8* %5369, null, !dbg !354
  br i1 %5370, label %5372, label %5371, !dbg !355

5371:                                             ; preds = %5368
  store i8* %5369, i8** %5212, align 8, !dbg !356
  br label %5372, !dbg !357

5372:                                             ; preds = %5371, %5368, %5252
  %5373 = alloca i32, align 4, !dbg !358
  %5374 = load i16, i16* %5231, align 2, !dbg !359
  %5375 = zext i16 %5374 to i32, !dbg !360
  store i32 %5375, i32* %5373, align 4, !dbg !361
  %5376 = alloca i64, align 8, !dbg !362
  %5377 = getelementptr i32, i32* %5220, i32 %5375, !dbg !363
  %5378 = load i32, i32* %5377, align 4, !dbg !364
  %5379 = zext i32 %5378 to i64, !dbg !365
  store i64 %5379, i64* %5376, align 4, !dbg !366
  %5380 = load i8*, i8** %5212, align 8, !dbg !367
  %5381 = load i32, i32* %5227, align 4, !dbg !368
  %5382 = alloca i8*, align 8, !dbg !369
  %5383 = getelementptr i8, i8* %5380, i32 %5381, !dbg !370
  store i8* %5383, i8** %5382, align 8, !dbg !371
  %5384 = load i32, i32* %5220, align 4, !dbg !372
  %5385 = getelementptr i8, i8* %5380, i32 %5384, !dbg !373
  br label %5386, !dbg !374

5386:                                             ; preds = %5393, %5372
  %5387 = load i32, i32* %5373, align 4, !dbg !375
  %5388 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5215, i32 0, i32 23, i32 %5387, !dbg !376
  %5389 = load i8*, i8** %5382, align 8, !dbg !377
  %5390 = load i8, i8* %5389, align 1, !dbg !378
  %5391 = zext i8 %5390 to i32, !dbg !379
  store i32 %5391, i32* %5213, align 4, !dbg !380
  store i32 %5391, i32* %5388, align 4, !dbg !381
  %5392 = icmp sgt i8 %5390, -1, !dbg !382
  br i1 %5392, label %5416, label %5407, !dbg !383

5393:                                             ; preds = %5407, %5416
  %5394 = load i32, i32* %5373, align 4, !dbg !384
  %5395 = add i32 %5394, 1, !dbg !385
  store i32 %5395, i32* %5373, align 4, !dbg !386
  %5396 = load i64, i64* %5376, align 4, !dbg !387
  %5397 = and i64 4294967295, %5396, !dbg !388
  %5398 = trunc i64 %5397 to i32, !dbg !389
  %5399 = getelementptr i32, i32* %5220, i32 %5395, !dbg !390
  store i32 %5398, i32* %5399, align 4, !dbg !391
  %5400 = load i32, i32* %5373, align 4, !dbg !392
  %5401 = icmp sle i32 %5400, 1, !dbg !393
  %5402 = load i8*, i8** %5382, align 8, !dbg !394
  %5403 = ptrtoint i8* %5402 to i64, !dbg !395
  %5404 = ptrtoint i8* %5385 to i64, !dbg !396
  %5405 = icmp ult i64 %5403, %5404, !dbg !397
  %5406 = and i1 %5401, %5405, !dbg !398
  br i1 %5406, label %5386, label %5425, !dbg !399

5407:                                             ; preds = %5386
  %5408 = load i8*, i8** %5382, align 8, !dbg !400
  %5409 = call i8 @sqlite3GetVarint32(i8* %5408, i32* %5213), !dbg !401
  %5410 = getelementptr i8, i8* %5408, i8 %5409, !dbg !402
  store i8* %5410, i8** %5382, align 8, !dbg !403
  %5411 = load i32, i32* %5213, align 4, !dbg !404
  store i32 %5411, i32* %5388, align 4, !dbg !405
  %5412 = load i64, i64* %5376, align 4, !dbg !406
  %5413 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5411), !dbg !407
  %5414 = zext i32 %5413 to i64, !dbg !408
  %5415 = add i64 %5412, %5414, !dbg !409
  store i64 %5415, i64* %5376, align 4, !dbg !410
  br label %5393, !dbg !411

5416:                                             ; preds = %5386
  %5417 = getelementptr i8, i8* %5389, i32 1, !dbg !412
  store i8* %5417, i8** %5382, align 8, !dbg !413
  %5418 = load i32, i32* %5213, align 4, !dbg !414
  %5419 = trunc i32 %5418 to i8, !dbg !415
  %5420 = getelementptr i8, i8* %4, i8 %5419, !dbg !416
  %5421 = load i8, i8* %5420, align 1, !dbg !417
  %5422 = zext i8 %5421 to i64, !dbg !418
  %5423 = load i64, i64* %5376, align 4, !dbg !419
  %5424 = add i64 %5423, %5422, !dbg !420
  store i64 %5424, i64* %5376, align 4, !dbg !421
  br label %5393, !dbg !422

5425:                                             ; preds = %5393
  %5426 = load i64, i64* %5376, align 4, !dbg !423
  %5427 = load i32, i32* %5228, align 4, !dbg !424
  %5428 = zext i32 %5427 to i64, !dbg !425
  %5429 = icmp uge i64 %5403, %5404, !dbg !426
  %5430 = icmp ugt i64 %5403, %5404, !dbg !427
  %5431 = icmp ne i64 %5426, %5428, !dbg !428
  %5432 = icmp ugt i64 %5426, %5428, !dbg !429
  %5433 = or i1 %5430, %5431, !dbg !430
  %5434 = and i1 %5429, %5433, !dbg !431
  %5435 = or i1 %5434, %5432, !dbg !432
  br i1 %5435, label %5436, label %5440, !dbg !433

5436:                                             ; preds = %5425
  %5437 = load i32, i32* %5220, align 4, !dbg !434
  %5438 = icmp eq i32 %5437, 0, !dbg !435
  br i1 %5438, label %5439, label %5440, !dbg !436

5439:                                             ; preds = %5436
  store i32 0, i32* %5373, align 4, !dbg !437
  store i8* %5385, i8** %5382, align 8, !dbg !438
  br label %5440, !dbg !439

5440:                                             ; preds = %5439, %5436, %5425
  %5441 = load i32, i32* %5373, align 4, !dbg !440
  %5442 = trunc i32 %5441 to i16, !dbg !441
  store i16 %5442, i16* %5231, align 2, !dbg !442
  %5443 = load i8*, i8** %5382, align 8, !dbg !443
  %5444 = ptrtoint i8* %5443 to i64, !dbg !444
  %5445 = load i8*, i8** %5212, align 8, !dbg !445
  %5446 = ptrtoint i8* %5445 to i64, !dbg !446
  %5447 = sub i64 %5444, %5446, !dbg !447
  %5448 = trunc i64 %5447 to i32, !dbg !448
  store i32 %5448, i32* %5227, align 4, !dbg !449
  br label %5450, !dbg !450

5449:                                             ; preds = %5364
  store i32 0, i32* %5213, align 4, !dbg !451
  br label %5450, !dbg !452

5450:                                             ; preds = %5440, %5449
  %5451 = load i16, i16* %5231, align 2, !dbg !453
  %5452 = icmp sle i16 %5451, 1, !dbg !454
  br i1 %5452, label %5453, label %5282, !dbg !455

5453:                                             ; preds = %5450
  %5454 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5216, i32 0, i32 1, !dbg !456
  %5455 = load i16, i16* %5454, align 2, !dbg !456
  %5456 = and i16 %5455, 9216, !dbg !456
  %5457 = icmp ne i16 %5456, 0, !dbg !456
  br i1 %5457, label %5458, label %5459, !dbg !456

5458:                                             ; preds = %5453
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5216), !dbg !456
  br label %5460, !dbg !456

5459:                                             ; preds = %5453
  store i16 1, i16* %5454, align 2, !dbg !456
  br label %5460, !dbg !456

5460:                                             ; preds = %5458, %5459, %5329, %5309, %5348, %5359, %5277, %5278
  call void @llvm.stackrestore(i8* %5205), !dbg !457
  br label %5461, !dbg !74

5461:                                             ; preds = %17, %5460
  %5462 = call i8* @llvm.stacksave(), !dbg !1215
  %5463 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 48, !dbg !1218
  %5464 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5463, i32 0, i32 6, !dbg !1219
  %5465 = bitcast %union.p4union* %5464 to %struct.KeyInfo**, !dbg !1220
  %5466 = load %struct.KeyInfo*, %struct.KeyInfo** %5465, align 8, !dbg !1221
  %5467 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %5466, i32 0, i32 6, i32 0, !dbg !1222
  %5468 = alloca i32*, align 8, !dbg !1223
  store i32* null, i32** %5468, align 8, !dbg !1224
  %5469 = getelementptr %struct.KeyInfo, %struct.KeyInfo* %5466, i32 0, i32 5, !dbg !1225
  %5470 = load i8*, i8** %5469, align 8, !dbg !1226
  %5471 = load %struct.CollSeq*, %struct.CollSeq** %5467, align 8, !dbg !1227
  %5472 = load i8, i8* %5470, align 1, !dbg !1228
  %5473 = and i8 %5472, 1, !dbg !1229
  %5474 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1230
  %5475 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !1231
  %5476 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5474, %struct.sqlite3_value* %5475, %struct.CollSeq* %5471), !dbg !1232
  store i32 %5476, i32* %2, align 4, !dbg !1233
  %5477 = icmp ne i32 %5476, 0, !dbg !1234
  br i1 %5477, label %5478, label %5498, !dbg !1235

5478:                                             ; preds = %5461
  %5479 = and i8 %5472, 2, !dbg !1236
  %5480 = icmp ne i8 %5479, 0, !dbg !1237
  br i1 %5480, label %5481, label %5493, !dbg !1238

5481:                                             ; preds = %5478
  %5482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, i32 1, !dbg !1239
  %5483 = load i16, i16* %5482, align 2, !dbg !1240
  %5484 = and i16 %5483, 1, !dbg !1241
  %5485 = icmp ne i16 %5484, 0, !dbg !1242
  %5486 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, i32 1, !dbg !1243
  %5487 = load i16, i16* %5486, align 2, !dbg !1244
  %5488 = and i16 %5487, 1, !dbg !1245
  %5489 = icmp ne i16 %5488, 0, !dbg !1246
  %5490 = or i1 %5485, %5489, !dbg !1247
  br i1 %5490, label %5491, label %5493, !dbg !1248

5491:                                             ; preds = %5481
  %5492 = sub i32 0, %5476, !dbg !1249
  store i32 %5492, i32* %2, align 4, !dbg !1250
  br label %5493, !dbg !1251

5493:                                             ; preds = %5481, %5491, %5478
  %5494 = icmp ne i8 %5473, 0, !dbg !1252
  br i1 %5494, label %5495, label %5528, !dbg !1253

5495:                                             ; preds = %5493
  %5496 = load i32, i32* %2, align 4, !dbg !1254
  %5497 = sub i32 0, %5496, !dbg !1255
  store i32 %5497, i32* %2, align 4, !dbg !1256
  br label %5528, !dbg !1257

5498:                                             ; preds = %5461
  %5499 = getelementptr %struct.CollSeq*, %struct.CollSeq** %5467, i32 1, !dbg !1258
  %5500 = load %struct.CollSeq*, %struct.CollSeq** %5499, align 8, !dbg !1227
  %5501 = getelementptr i8, i8* %5470, i32 1, !dbg !1259
  %5502 = load i8, i8* %5501, align 1, !dbg !1228
  %5503 = and i8 %5502, 1, !dbg !1229
  %5504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, !dbg !1230
  %5505 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, !dbg !1231
  %5506 = call i32 @sqlite3MemCompare(%struct.sqlite3_value* %5504, %struct.sqlite3_value* %5505, %struct.CollSeq* %5500), !dbg !1232
  store i32 %5506, i32* %2, align 4, !dbg !1233
  %5507 = icmp ne i32 %5506, 0, !dbg !1234
  br i1 %5507, label %5508, label %5528, !dbg !1235

5508:                                             ; preds = %5498
  %5509 = and i8 %5502, 2, !dbg !1236
  %5510 = icmp ne i8 %5509, 0, !dbg !1237
  br i1 %5510, label %5511, label %5523, !dbg !1238

5511:                                             ; preds = %5508
  %5512 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 10, i32 1, !dbg !1239
  %5513 = load i16, i16* %5512, align 2, !dbg !1240
  %5514 = and i16 %5513, 1, !dbg !1241
  %5515 = icmp ne i16 %5514, 0, !dbg !1242
  %5516 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 12, i32 1, !dbg !1243
  %5517 = load i16, i16* %5516, align 2, !dbg !1244
  %5518 = and i16 %5517, 1, !dbg !1245
  %5519 = icmp ne i16 %5518, 0, !dbg !1246
  %5520 = or i1 %5515, %5519, !dbg !1247
  br i1 %5520, label %5521, label %5523, !dbg !1248

5521:                                             ; preds = %5511
  %5522 = sub i32 0, %5506, !dbg !1249
  store i32 %5522, i32* %2, align 4, !dbg !1250
  br label %5523, !dbg !1251

5523:                                             ; preds = %5511, %5521, %5508
  %5524 = icmp ne i8 %5503, 0, !dbg !1252
  br i1 %5524, label %5525, label %5528, !dbg !1253

5525:                                             ; preds = %5523
  %5526 = load i32, i32* %2, align 4, !dbg !1254
  %5527 = sub i32 0, %5526, !dbg !1255
  store i32 %5527, i32* %2, align 4, !dbg !1256
  br label %5528, !dbg !1257

5528:                                             ; preds = %5495, %5493, %5525, %5523, %5498
  call void @llvm.stackrestore(i8* %5462), !dbg !1260
  br label %5529, !dbg !74

5529:                                             ; preds = %17, %5528
  %5530 = load i32, i32* %2, align 4, !dbg !1261
  %5531 = icmp slt i32 %5530, 0, !dbg !1264
  %5532 = icmp sgt i32 %5530, 0, !dbg !1265
  %or.cond = or i1 %5531, %5532, !dbg !1266
  br i1 %or.cond, label %5533, label %5554, !dbg !1266

5533:                                             ; preds = %17, %5529
  %5534 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 11, !dbg !1267
  %5535 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 9, !dbg !1270
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %5535, %struct.sqlite3_value* %5534), !dbg !1271
  %5536 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5534, i32 1, !dbg !1272
  %5537 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5535, i32 1, !dbg !1273
  call void @sqlite3VdbeMemMove(%struct.sqlite3_value* %5537, %struct.sqlite3_value* %5536), !dbg !1271
  br label %5538, !dbg !74

5538:                                             ; preds = %17, %5533
  %5539 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !100
  %5540 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5539, i32 0, i32 1, !dbg !103
  store i16 4, i16* %5540, align 2, !dbg !104
  %5541 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5539, i32 0, i32 0, i32 0, !dbg !105
  %5542 = bitcast double* %5541 to i64*, !dbg !106
  store i64 51, i64* %5542, align 4, !dbg !107
  br label %6475, !dbg !108

5543:                                             ; preds = %17
  %5544 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 6, !dbg !1274
  %5545 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5544, i32 0, i32 0, i32 0, !dbg !1277
  %5546 = bitcast double* %5545 to i64*, !dbg !1278
  %5547 = load i64, i64* %5546, align 4, !dbg !1279
  %5548 = icmp sgt i64 %5547, 0, !dbg !1280
  br i1 %5548, label %5549, label %.critedge, !dbg !1281

5549:                                             ; preds = %5543
  br label %6616, !dbg !1282

.critedge:                                        ; preds = %5543, %17
  %5550 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !100
  %5551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5550, i32 0, i32 1, !dbg !103
  store i16 4, i16* %5551, align 2, !dbg !104
  %5552 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5550, i32 0, i32 0, i32 0, !dbg !105
  %5553 = bitcast double* %5552 to i64*, !dbg !106
  store i64 53, i64* %5553, align 4, !dbg !107
  br label %6546, !dbg !108

5554:                                             ; preds = %5529, %17
  %5555 = call i8* @llvm.stacksave(), !dbg !166
  %5556 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %5557 = load i8, i8* %5556, align 1, !dbg !170
  %5558 = alloca i32, align 4, !dbg !171
  store i32 7, i32* %5558, align 4, !dbg !172
  %5559 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !514
  %5560 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %5561 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5559, align 8, !dbg !174
  store %struct.VdbeCursor* %5561, %struct.VdbeCursor** %5560, align 8, !dbg !175
  %5562 = alloca i8*, align 8, !dbg !176
  %5563 = alloca i32, align 4, !dbg !177
  %5564 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5560, i32* %5558), !dbg !178
  %5565 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5560, align 8, !dbg !179
  %5566 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !180
  %5567 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 16, !dbg !181
  %5568 = load i16, i16* %5567, align 2, !dbg !182
  %5569 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 19, !dbg !183
  %5570 = load i32*, i32** %5569, align 8, !dbg !184
  %5571 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 0, !dbg !185
  %5572 = load i8, i8* %5571, align 1, !dbg !186
  %5573 = icmp ne i8 %5572, 3, !dbg !187
  %5574 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 2, !dbg !188
  %5575 = load i8, i8* %5574, align 1, !dbg !189
  %5576 = icmp ne i8 %5575, 0, !dbg !190
  %5577 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 14, !dbg !191
  %5578 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 21, !dbg !192
  %5579 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 22, !dbg !193
  %5580 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 20, !dbg !194
  %5581 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 17, !dbg !195
  %5582 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 9, !dbg !196
  %5583 = load i32, i32* %5582, align 4, !dbg !197
  %5584 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %5585 = load i32, i32* %5584, align 4, !dbg !199
  %5586 = icmp ne i32 %5583, %5585, !dbg !200
  br i1 %5586, label %5587, label %5629, !dbg !201

5587:                                             ; preds = %5554
  br i1 %5576, label %5609, label %5604, !dbg !202

5588:                                             ; preds = %5604, %5611
  %5589 = load i32, i32* %5584, align 4, !dbg !203
  store i32 %5589, i32* %5582, align 4, !dbg !204
  %5590 = load i8*, i8** %5580, align 8, !dbg !205
  %5591 = load i8, i8* %5590, align 1, !dbg !206
  %5592 = icmp sgt i8 %5591, -1, !dbg !209
  br i1 %5592, label %5593, label %5595, !dbg !210

5593:                                             ; preds = %5588
  %5594 = zext i8 %5591 to i32, !dbg !211
  store i32 %5594, i32* %5570, align 4, !dbg !212
  store i32 1, i32* %5577, align 4, !dbg !213
  br label %5598, !dbg !214

5595:                                             ; preds = %5588
  %5596 = call i8 @sqlite3GetVarint32(i8* %5590, i32* %5570), !dbg !215
  %5597 = zext i8 %5596 to i32, !dbg !216
  store i32 %5597, i32* %5577, align 4, !dbg !217
  br label %5598, !dbg !218

5598:                                             ; preds = %5595, %5593
  store i16 0, i16* %5581, align 2, !dbg !219
  %5599 = load i32, i32* %5579, align 4, !dbg !220
  %5600 = load i32, i32* %5570, align 4, !dbg !221
  %5601 = icmp ult i32 %5599, %5600, !dbg !222
  br i1 %5601, label %5603, label %5602, !dbg !223

5602:                                             ; preds = %5598
  store i8* %5590, i8** %5562, align 8, !dbg !224
  br label %5722, !dbg !225

5603:                                             ; preds = %5598
  store i8* null, i8** %5580, align 8, !dbg !226
  store i32 0, i32* %5579, align 4, !dbg !227
  br label %5629, !dbg !228

5604:                                             ; preds = %5587
  %5605 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 12, i32 0, !dbg !229
  %5606 = load %struct.BtCursor*, %struct.BtCursor** %5605, align 8, !dbg !230
  %5607 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5606), !dbg !231
  store i32 %5607, i32* %5578, align 4, !dbg !232
  %5608 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5606, i32* %5579), !dbg !233
  store i8* %5608, i8** %5580, align 8, !dbg !234
  br label %5588, !dbg !235

5609:                                             ; preds = %5587
  %5610 = icmp eq i8 %5572, 3, !dbg !236
  br i1 %5610, label %5611, label %5622, !dbg !237

5611:                                             ; preds = %5609
  %5612 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 10, !dbg !238
  %5613 = load i32, i32* %5612, align 4, !dbg !239
  %5614 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5613, !dbg !240
  %5615 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5614, i32 0, i32 1, !dbg !241
  %5616 = load i16, i16* %5615, align 2, !dbg !242
  %5617 = and i16 %5616, 16, !dbg !243
  %5618 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5614, i32 0, i32 4, !dbg !244
  %5619 = load i32, i32* %5618, align 4, !dbg !245
  store i32 %5619, i32* %5578, align 4, !dbg !246
  store i32 %5619, i32* %5579, align 4, !dbg !247
  %5620 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5614, i32 0, i32 5, !dbg !248
  %5621 = load i8*, i8** %5620, align 8, !dbg !249
  store i8* %5621, i8** %5580, align 8, !dbg !250
  br label %5588, !dbg !251

5622:                                             ; preds = %5609
  %5623 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 1, !dbg !252
  %5624 = load i16, i16* %5623, align 2, !dbg !252
  %5625 = and i16 %5624, 9216, !dbg !252
  %5626 = icmp ne i16 %5625, 0, !dbg !252
  br i1 %5626, label %5627, label %5628, !dbg !252

5627:                                             ; preds = %5622
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5566), !dbg !252
  br label %5810, !dbg !252

5628:                                             ; preds = %5622
  store i16 1, i16* %5623, align 2, !dbg !252
  br label %5810, !dbg !252

5629:                                             ; preds = %5603, %5554
  %5630 = load i16, i16* %5581, align 2, !dbg !253
  %5631 = icmp ule i16 %5630, 2, !dbg !254
  br i1 %5631, label %5714, label %5711, !dbg !255

5632:                                             ; preds = %5711, %5800
  %5633 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 1, !dbg !256
  %5634 = load i16, i16* %5633, align 2, !dbg !257
  %5635 = and i16 9216, %5634, !dbg !258
  %5636 = icmp eq i16 0, %5635, !dbg !259
  br i1 %5636, label %5637, label %5641, !dbg !260

5637:                                             ; preds = %5632
  %5638 = icmp ne i16 %5635, 0, !dbg !261
  br i1 %5638, label %5639, label %5640, !dbg !261

5639:                                             ; preds = %5637
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5566), !dbg !261
  br label %5641, !dbg !261

5640:                                             ; preds = %5637
  store i16 1, i16* %5633, align 2, !dbg !261
  br label %5641, !dbg !261

5641:                                             ; preds = %5639, %5640, %5632
  %5642 = load i32, i32* %5563, align 4, !dbg !262
  %5643 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 23, i32 2, !dbg !263
  %5644 = load i32, i32* %5643, align 4, !dbg !264
  %5645 = load i32, i32* %5579, align 4, !dbg !265
  %5646 = getelementptr i32, i32* %5570, i32 3, !dbg !266
  %5647 = load i32, i32* %5646, align 4, !dbg !267
  %5648 = icmp sge i32 %5645, %5647, !dbg !268
  br i1 %5648, label %5649, label %5689, !dbg !269

5649:                                             ; preds = %5641
  %5650 = load i8*, i8** %5580, align 8, !dbg !270
  %5651 = ptrtoint i8* %5650 to i64, !dbg !271
  %5652 = getelementptr i32, i32* %5570, i32 2, !dbg !272
  %5653 = load i32, i32* %5652, align 4, !dbg !273
  %5654 = zext i32 %5653 to i64, !dbg !274
  %5655 = add i64 %5651, %5654, !dbg !275
  %5656 = inttoptr i64 %5655 to i8*, !dbg !276
  store i8* %5656, i8** %5562, align 8, !dbg !277
  %5657 = load i32, i32* %5563, align 4, !dbg !278
  %5658 = icmp ult i32 %5657, 12, !dbg !279
  br i1 %5658, label %5659, label %5661, !dbg !280

5659:                                             ; preds = %5649
  %5660 = call i32 @sqlite3VdbeSerialGet(i8* %5656, i32 %5657, %struct.sqlite3_value* %5566), !dbg !281
  br label %5810, !dbg !282

5661:                                             ; preds = %5649
  %5662 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %5662, align 2, !dbg !284
  %5663 = getelementptr i16, i16* %5662, i32 1, !dbg !285
  store i16 514, i16* %5663, align 2, !dbg !286
  %5664 = load i32, i32* %5563, align 4, !dbg !287
  %5665 = sub i32 %5664, 12, !dbg !288
  %5666 = lshr i32 %5665, 1, !dbg !289
  %5667 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 4, !dbg !290
  store i32 %5666, i32* %5667, align 4, !dbg !291
  %5668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 2, !dbg !292
  store i8 %5557, i8* %5668, align 1, !dbg !293
  %5669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 5, !dbg !294
  %5670 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 7, !dbg !295
  %5671 = load i32, i32* %5670, align 4, !dbg !296
  %5672 = add i32 %5666, 2, !dbg !297
  %5673 = icmp slt i32 %5671, %5672, !dbg !298
  br i1 %5673, label %5674, label %5676, !dbg !299

5674:                                             ; preds = %5661
  store i16 1, i16* %5633, align 2, !dbg !300
  %5675 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5566, i32 %5672, i32 0), !dbg !301
  br label %5679, !dbg !302

5676:                                             ; preds = %5661
  %5677 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 6, !dbg !303
  %5678 = load i8*, i8** %5677, align 8, !dbg !304
  store i8* %5678, i8** %5669, align 8, !dbg !305
  br label %5679, !dbg !306

5679:                                             ; preds = %5676, %5674
  %5680 = zext i32 %5666 to i64, !dbg !307
  %5681 = load i8*, i8** %5669, align 8, !dbg !308
  %5682 = load i8*, i8** %5562, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5681, i8* %5682, i64 %5680, i1 false), !dbg !310
  %5683 = getelementptr i8, i8* %5681, i32 %5666, !dbg !311
  store i8 0, i8* %5683, align 1, !dbg !312
  %5684 = add i32 %5666, 1, !dbg !313
  %5685 = getelementptr i8, i8* %5681, i32 %5684, !dbg !314
  store i8 0, i8* %5685, align 1, !dbg !315
  %5686 = and i32 %5664, 1, !dbg !316
  %5687 = getelementptr i16, i16* %5662, i32 %5686, !dbg !317
  %5688 = load i16, i16* %5687, align 2, !dbg !318
  store i16 %5688, i16* %5633, align 2, !dbg !319
  br label %5810, !dbg !320

5689:                                             ; preds = %5641
  %5690 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 2, !dbg !321
  store i8 %5557, i8* %5690, align 1, !dbg !322
  %5691 = load i32, i32* %5563, align 4, !dbg !323
  %5692 = and i32 %5691, 1, !dbg !324
  %5693 = icmp eq i32 %5692, 0, !dbg !325
  %5694 = icmp sge i32 %5691, 12, !dbg !326
  %5695 = and i1 %5694, %5693, !dbg !327
  %5696 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5691), !dbg !328
  %5697 = icmp eq i32 %5696, 0, !dbg !329
  br i1 %5697, label %5709, label %5698, !dbg !330

5698:                                             ; preds = %5689
  %5699 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 12, i32 0, !dbg !331
  %5700 = load %struct.BtCursor*, %struct.BtCursor** %5699, align 8, !dbg !332
  %5701 = getelementptr i32, i32* %5570, i32 2, !dbg !333
  %5702 = load i32, i32* %5701, align 4, !dbg !334
  %5703 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %5700, i32 %5702, i32 %5696, %struct.sqlite3_value* %5566), !dbg !335
  %5704 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 5, !dbg !336
  %5705 = load i8*, i8** %5704, align 8, !dbg !337
  %5706 = call i32 @sqlite3VdbeSerialGet(i8* %5705, i32 %5691, %struct.sqlite3_value* %5566), !dbg !338
  %5707 = load i16, i16* %5633, align 2, !dbg !339
  %5708 = and i16 %5707, -4097, !dbg !340
  store i16 %5708, i16* %5633, align 2, !dbg !341
  br label %5810, !dbg !342

5709:                                             ; preds = %5689
  %5710 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %5691, %struct.sqlite3_value* %5566), !dbg !343
  br label %5810, !dbg !344

5711:                                             ; preds = %5629
  %5712 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 23, i32 2, !dbg !345
  %5713 = load i32, i32* %5712, align 4, !dbg !346
  store i32 %5713, i32* %5563, align 4, !dbg !347
  br label %5632, !dbg !348

5714:                                             ; preds = %5629
  %5715 = load i32, i32* %5577, align 4, !dbg !349
  %5716 = load i32, i32* %5570, align 4, !dbg !350
  %5717 = icmp ult i32 %5715, %5716, !dbg !351
  br i1 %5717, label %5718, label %5799, !dbg !352

5718:                                             ; preds = %5714
  %5719 = load i8*, i8** %5580, align 8, !dbg !353
  %5720 = icmp eq i8* %5719, null, !dbg !354
  br i1 %5720, label %5722, label %5721, !dbg !355

5721:                                             ; preds = %5718
  store i8* %5719, i8** %5562, align 8, !dbg !356
  br label %5722, !dbg !357

5722:                                             ; preds = %5721, %5718, %5602
  %5723 = alloca i32, align 4, !dbg !358
  %5724 = load i16, i16* %5581, align 2, !dbg !359
  %5725 = zext i16 %5724 to i32, !dbg !360
  store i32 %5725, i32* %5723, align 4, !dbg !361
  %5726 = alloca i64, align 8, !dbg !362
  %5727 = getelementptr i32, i32* %5570, i32 %5725, !dbg !363
  %5728 = load i32, i32* %5727, align 4, !dbg !364
  %5729 = zext i32 %5728 to i64, !dbg !365
  store i64 %5729, i64* %5726, align 4, !dbg !366
  %5730 = load i8*, i8** %5562, align 8, !dbg !367
  %5731 = load i32, i32* %5577, align 4, !dbg !368
  %5732 = alloca i8*, align 8, !dbg !369
  %5733 = getelementptr i8, i8* %5730, i32 %5731, !dbg !370
  store i8* %5733, i8** %5732, align 8, !dbg !371
  %5734 = load i32, i32* %5570, align 4, !dbg !372
  %5735 = getelementptr i8, i8* %5730, i32 %5734, !dbg !373
  br label %5736, !dbg !374

5736:                                             ; preds = %5743, %5722
  %5737 = load i32, i32* %5723, align 4, !dbg !375
  %5738 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5565, i32 0, i32 23, i32 %5737, !dbg !376
  %5739 = load i8*, i8** %5732, align 8, !dbg !377
  %5740 = load i8, i8* %5739, align 1, !dbg !378
  %5741 = zext i8 %5740 to i32, !dbg !379
  store i32 %5741, i32* %5563, align 4, !dbg !380
  store i32 %5741, i32* %5738, align 4, !dbg !381
  %5742 = icmp sgt i8 %5740, -1, !dbg !382
  br i1 %5742, label %5766, label %5757, !dbg !383

5743:                                             ; preds = %5757, %5766
  %5744 = load i32, i32* %5723, align 4, !dbg !384
  %5745 = add i32 %5744, 1, !dbg !385
  store i32 %5745, i32* %5723, align 4, !dbg !386
  %5746 = load i64, i64* %5726, align 4, !dbg !387
  %5747 = and i64 4294967295, %5746, !dbg !388
  %5748 = trunc i64 %5747 to i32, !dbg !389
  %5749 = getelementptr i32, i32* %5570, i32 %5745, !dbg !390
  store i32 %5748, i32* %5749, align 4, !dbg !391
  %5750 = load i32, i32* %5723, align 4, !dbg !392
  %5751 = icmp sle i32 %5750, 2, !dbg !393
  %5752 = load i8*, i8** %5732, align 8, !dbg !394
  %5753 = ptrtoint i8* %5752 to i64, !dbg !395
  %5754 = ptrtoint i8* %5735 to i64, !dbg !396
  %5755 = icmp ult i64 %5753, %5754, !dbg !397
  %5756 = and i1 %5751, %5755, !dbg !398
  br i1 %5756, label %5736, label %5775, !dbg !399

5757:                                             ; preds = %5736
  %5758 = load i8*, i8** %5732, align 8, !dbg !400
  %5759 = call i8 @sqlite3GetVarint32(i8* %5758, i32* %5563), !dbg !401
  %5760 = getelementptr i8, i8* %5758, i8 %5759, !dbg !402
  store i8* %5760, i8** %5732, align 8, !dbg !403
  %5761 = load i32, i32* %5563, align 4, !dbg !404
  store i32 %5761, i32* %5738, align 4, !dbg !405
  %5762 = load i64, i64* %5726, align 4, !dbg !406
  %5763 = call i32 @sqlite3VdbeSerialTypeLen(i32 %5761), !dbg !407
  %5764 = zext i32 %5763 to i64, !dbg !408
  %5765 = add i64 %5762, %5764, !dbg !409
  store i64 %5765, i64* %5726, align 4, !dbg !410
  br label %5743, !dbg !411

5766:                                             ; preds = %5736
  %5767 = getelementptr i8, i8* %5739, i32 1, !dbg !412
  store i8* %5767, i8** %5732, align 8, !dbg !413
  %5768 = load i32, i32* %5563, align 4, !dbg !414
  %5769 = trunc i32 %5768 to i8, !dbg !415
  %5770 = getelementptr i8, i8* %4, i8 %5769, !dbg !416
  %5771 = load i8, i8* %5770, align 1, !dbg !417
  %5772 = zext i8 %5771 to i64, !dbg !418
  %5773 = load i64, i64* %5726, align 4, !dbg !419
  %5774 = add i64 %5773, %5772, !dbg !420
  store i64 %5774, i64* %5726, align 4, !dbg !421
  br label %5743, !dbg !422

5775:                                             ; preds = %5743
  %5776 = load i64, i64* %5726, align 4, !dbg !423
  %5777 = load i32, i32* %5578, align 4, !dbg !424
  %5778 = zext i32 %5777 to i64, !dbg !425
  %5779 = icmp uge i64 %5753, %5754, !dbg !426
  %5780 = icmp ugt i64 %5753, %5754, !dbg !427
  %5781 = icmp ne i64 %5776, %5778, !dbg !428
  %5782 = icmp ugt i64 %5776, %5778, !dbg !429
  %5783 = or i1 %5780, %5781, !dbg !430
  %5784 = and i1 %5779, %5783, !dbg !431
  %5785 = or i1 %5784, %5782, !dbg !432
  br i1 %5785, label %5786, label %5790, !dbg !433

5786:                                             ; preds = %5775
  %5787 = load i32, i32* %5570, align 4, !dbg !434
  %5788 = icmp eq i32 %5787, 0, !dbg !435
  br i1 %5788, label %5789, label %5790, !dbg !436

5789:                                             ; preds = %5786
  store i32 0, i32* %5723, align 4, !dbg !437
  store i8* %5735, i8** %5732, align 8, !dbg !438
  br label %5790, !dbg !439

5790:                                             ; preds = %5789, %5786, %5775
  %5791 = load i32, i32* %5723, align 4, !dbg !440
  %5792 = trunc i32 %5791 to i16, !dbg !441
  store i16 %5792, i16* %5581, align 2, !dbg !442
  %5793 = load i8*, i8** %5732, align 8, !dbg !443
  %5794 = ptrtoint i8* %5793 to i64, !dbg !444
  %5795 = load i8*, i8** %5562, align 8, !dbg !445
  %5796 = ptrtoint i8* %5795 to i64, !dbg !446
  %5797 = sub i64 %5794, %5796, !dbg !447
  %5798 = trunc i64 %5797 to i32, !dbg !448
  store i32 %5798, i32* %5577, align 4, !dbg !449
  br label %5800, !dbg !450

5799:                                             ; preds = %5714
  store i32 0, i32* %5563, align 4, !dbg !451
  br label %5800, !dbg !452

5800:                                             ; preds = %5790, %5799
  %5801 = load i16, i16* %5581, align 2, !dbg !453
  %5802 = icmp sle i16 %5801, 2, !dbg !454
  br i1 %5802, label %5803, label %5632, !dbg !455

5803:                                             ; preds = %5800
  %5804 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5566, i32 0, i32 1, !dbg !456
  %5805 = load i16, i16* %5804, align 2, !dbg !456
  %5806 = and i16 %5805, 9216, !dbg !456
  %5807 = icmp ne i16 %5806, 0, !dbg !456
  br i1 %5807, label %5808, label %5809, !dbg !456

5808:                                             ; preds = %5803
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5566), !dbg !456
  br label %5810, !dbg !456

5809:                                             ; preds = %5803
  store i16 1, i16* %5804, align 2, !dbg !456
  br label %5810, !dbg !456

5810:                                             ; preds = %5808, %5809, %5679, %5659, %5698, %5709, %5627, %5628
  call void @llvm.stackrestore(i8* %5555), !dbg !457
  br label %5811, !dbg !74

5811:                                             ; preds = %17, %5810
  %5812 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !1171
  %5813 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5812, i32 0, i32 1, !dbg !1174
  %5814 = load i16, i16* %5813, align 2, !dbg !1175
  %5815 = and i16 %5814, 36, !dbg !1176
  %5816 = icmp ne i16 %5815, 0, !dbg !1177
  br i1 %5816, label %5817, label %5818, !dbg !1178

5817:                                             ; preds = %5811
  call void @sqlite3VdbeMemRealify(%struct.sqlite3_value* %5812), !dbg !1179
  br label %5818, !dbg !1180

5818:                                             ; preds = %5817, %5811, %17
  %5819 = call i8* @llvm.stacksave(), !dbg !1283
  %5820 = alloca i32, align 8, !dbg !1286
  store i32 0, i32* %5820, align 4, !dbg !1287
  %5821 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 56, i32 1, !dbg !1288
  %5822 = load i8, i8* %5821, align 1, !dbg !1289
  %5823 = icmp eq i8 %5822, -8, !dbg !1290
  br i1 %5823, label %5824, label %5846, !dbg !1291

5824:                                             ; preds = %5818
  %5825 = alloca %struct.sqlite3_context*, align 8, !dbg !1292
  %5826 = call i8* @sqlite3DbMallocRawNN(%struct.sqlite3* %13, i64 112), !dbg !1293
  %5827 = bitcast i8* %5826 to %struct.sqlite3_context*, !dbg !1294
  store %struct.sqlite3_context* %5827, %struct.sqlite3_context** %5825, align 8, !dbg !1295
  %5828 = ptrtoint %struct.sqlite3_context* %5827 to i64, !dbg !1296
  %5829 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 0, !dbg !1297
  %5830 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 1, !dbg !1298
  %5831 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 2, !dbg !1299
  %5832 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 3, !dbg !1300
  %5833 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 4, !dbg !1301
  %5834 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 5, !dbg !1302
  %5835 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 6, !dbg !1303
  %5836 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 7, !dbg !1304
  %5837 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5827, i32 0, i32 8, !dbg !1305
  %5838 = bitcast [1 x %struct.sqlite3_value*]* %5837 to %struct.sqlite3_value**, !dbg !1306
  %5839 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 56, i32 6, i32 0, !dbg !1307
  %5840 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %5838, i32 1, !dbg !1308
  %5841 = bitcast %struct.sqlite3_value** %5840 to %struct.sqlite3_value*, !dbg !1309
  call void @sqlite3VdbeMemInit(%struct.sqlite3_value* %5841, %struct.sqlite3* %13, i16 1), !dbg !1310
  store %struct.sqlite3_value* null, %struct.sqlite3_value** %5831, align 8, !dbg !1311
  store %struct.sqlite3_value* %5841, %struct.sqlite3_value** %5829, align 8, !dbg !1312
  %5842 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 56, !dbg !1313
  %5843 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %5842, i32 0, i32 6, !dbg !1314
  %5844 = bitcast %union.p4union* %5843 to %struct.FuncDef**, !dbg !1315
  %5845 = load %struct.FuncDef*, %struct.FuncDef** %5844, align 8, !dbg !1316
  store %struct.FuncDef* %5845, %struct.FuncDef** %5830, align 8, !dbg !1317
  store i32 56, i32* %5833, align 4, !dbg !1318
  store %struct.Vdbe* %0, %struct.Vdbe** %5832, align 8, !dbg !1319
  store i8 0, i8* %5835, align 1, !dbg !1320
  store i32 0, i32* %5834, align 4, !dbg !1321
  store i8 1, i8* %5836, align 1, !dbg !1322
  store i8 -16, i8* %5821, align 1, !dbg !1323
  store i8* %5826, i8** %5839, align 8, !dbg !1324
  br label %5846, !dbg !1325

5846:                                             ; preds = %5824, %5818
  %5847 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 56, i32 6, i32 0, !dbg !1326
  %5848 = bitcast i8** %5847 to %struct.sqlite3_context**, !dbg !1327
  %5849 = load %struct.sqlite3_context*, %struct.sqlite3_context** %5848, align 8, !dbg !1328
  %5850 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 0, !dbg !1329
  %5851 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 1, !dbg !1330
  %5852 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 5, !dbg !1331
  %5853 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 6, !dbg !1332
  %5854 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 7, !dbg !1333
  %5855 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 8, !dbg !1334
  %5856 = bitcast [1 x %struct.sqlite3_value*]* %5855 to %struct.sqlite3_value**, !dbg !1335
  %5857 = alloca i32, align 8, !dbg !1336
  %5858 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1337
  %5859 = getelementptr %struct.sqlite3_context, %struct.sqlite3_context* %5849, i32 0, i32 2, !dbg !1338
  %5860 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5859, align 8, !dbg !1339
  %5861 = icmp ne %struct.sqlite3_value* %5860, %5858, !dbg !1340
  br i1 %5861, label %5862, label %5875, !dbg !1341

5862:                                             ; preds = %5846
  store %struct.sqlite3_value* %5858, %struct.sqlite3_value** %5859, align 8, !dbg !1342
  %5863 = load i8, i8* %5854, align 1, !dbg !1343
  %5864 = zext i8 %5863 to i32, !dbg !1344
  %5865 = add i32 %5864, -1, !dbg !1345
  %5866 = alloca i32, align 8, !dbg !1346
  store i32 %5865, i32* %5866, align 4, !dbg !1347
  br label %5872, !dbg !1348

5867:                                             ; preds = %5872
  %5868 = getelementptr %struct.sqlite3_value*, %struct.sqlite3_value** %5856, i32 %5873, !dbg !1349
  %5869 = add i32 %5873, 15, !dbg !1350
  %5870 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5869, !dbg !1351
  store %struct.sqlite3_value* %5870, %struct.sqlite3_value** %5868, align 8, !dbg !1352
  %5871 = add i32 %5873, -1, !dbg !1353
  store i32 %5871, i32* %5866, align 4, !dbg !1354
  br label %5872, !dbg !1355

5872:                                             ; preds = %5867, %5862
  %5873 = load i32, i32* %5866, align 4, !dbg !1356
  %5874 = icmp sge i32 %5873, 0, !dbg !1357
  br i1 %5874, label %5867, label %5875, !dbg !1358

5875:                                             ; preds = %5872, %5846
  %5876 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5858, i32 0, i32 4, !dbg !1359
  %5877 = load i32, i32* %5876, align 4, !dbg !1360
  %5878 = add i32 %5877, 1, !dbg !1361
  store i32 %5878, i32* %5876, align 4, !dbg !1362
  %5879 = load %struct.FuncDef*, %struct.FuncDef** %5851, align 8, !dbg !1363
  %5880 = load i8, i8* %5854, align 1, !dbg !1364
  %5881 = zext i8 %5880 to i32, !dbg !1365
  %5882 = getelementptr %struct.FuncDef, %struct.FuncDef* %5879, i32 0, i32 4, !dbg !1366
  %5883 = load void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)** %5882, align 8, !dbg !1367
  call void %5883(%struct.sqlite3_context* %5849, i32 %5881, %struct.sqlite3_value** %5856), !dbg !1368
  %5884 = load i32, i32* %5852, align 4, !dbg !1369
  %5885 = icmp ne i32 %5884, 0, !dbg !1370
  br i1 %5885, label %5886, label %5901, !dbg !1371

5886:                                             ; preds = %5875
  %5887 = icmp sgt i32 %5884, 0, !dbg !1372
  br i1 %5887, label %5888, label %5892, !dbg !1373

5888:                                             ; preds = %5886
  %5889 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5850, align 8, !dbg !1374
  %5890 = call i8* @sqlite3_value_text(%struct.sqlite3_value* %5889), !dbg !1375
  call void (%struct.Vdbe*, i8*, ...) @sqlite3VdbeError(%struct.Vdbe* %0, i8* %3, i8* %5890), !dbg !1376
  %5891 = load i32, i32* %5852, align 4, !dbg !1377
  store i32 %5891, i32* %5820, align 4, !dbg !1378
  br label %5892, !dbg !1379

5892:                                             ; preds = %5888, %5886
  %5893 = load i8, i8* %5853, align 1, !dbg !1380
  %5894 = icmp ne i8 %5893, 0, !dbg !1381
  br i1 %5894, label %5895, label %5897, !dbg !1382

5895:                                             ; preds = %5892
  store i32 15, i32* %5857, align 4, !dbg !1383
  %5896 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 15, !dbg !1384
  call void @sqlite3VdbeMemSetInt64(%struct.sqlite3_value* %5896, i64 1), !dbg !1385
  store i8 0, i8* %5853, align 1, !dbg !1386
  br label %5897, !dbg !1387

5897:                                             ; preds = %5895, %5892
  %5898 = load %struct.sqlite3_value*, %struct.sqlite3_value** %5850, align 8, !dbg !1388
  call void @sqlite3VdbeMemRelease(%struct.sqlite3_value* %5898), !dbg !1389
  %5899 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5898, i32 0, i32 1, !dbg !1390
  store i16 1, i16* %5899, align 2, !dbg !1391
  store i32 0, i32* %5852, align 4, !dbg !1392
  %5900 = load i32, i32* %5820, align 4, !dbg !1393
  br label %5901, !dbg !1394

5901:                                             ; preds = %5875, %5897
  call void @llvm.stackrestore(i8* %5819), !dbg !1395
  br label %5902, !dbg !74

5902:                                             ; preds = %17, %5901
  %5903 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 5, !dbg !1396
  %5904 = call i32 @sqlite3VdbeBooleanValue(%struct.sqlite3_value* %5903, i32 0), !dbg !1399
  %5905 = icmp ne i32 %5904, 0, !dbg !1400
  br i1 %5905, label %6418, label %5906, !dbg !1401

5906:                                             ; preds = %17, %5902
  %5907 = call i8* @llvm.stacksave(), !dbg !166
  %5908 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %5909 = load i8, i8* %5908, align 1, !dbg !170
  %5910 = alloca i32, align 4, !dbg !171
  store i32 7, i32* %5910, align 4, !dbg !172
  %5911 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !514
  %5912 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %5913 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5911, align 8, !dbg !174
  store %struct.VdbeCursor* %5913, %struct.VdbeCursor** %5912, align 8, !dbg !175
  %5914 = alloca i8*, align 8, !dbg !176
  %5915 = alloca i32, align 4, !dbg !177
  %5916 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %5912, i32* %5910), !dbg !178
  %5917 = load %struct.VdbeCursor*, %struct.VdbeCursor** %5912, align 8, !dbg !179
  %5918 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !180
  %5919 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 16, !dbg !181
  %5920 = load i16, i16* %5919, align 2, !dbg !182
  %5921 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 19, !dbg !183
  %5922 = load i32*, i32** %5921, align 8, !dbg !184
  %5923 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 0, !dbg !185
  %5924 = load i8, i8* %5923, align 1, !dbg !186
  %5925 = icmp ne i8 %5924, 3, !dbg !187
  %5926 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 2, !dbg !188
  %5927 = load i8, i8* %5926, align 1, !dbg !189
  %5928 = icmp ne i8 %5927, 0, !dbg !190
  %5929 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 14, !dbg !191
  %5930 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 21, !dbg !192
  %5931 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 22, !dbg !193
  %5932 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 20, !dbg !194
  %5933 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 17, !dbg !195
  %5934 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 9, !dbg !196
  %5935 = load i32, i32* %5934, align 4, !dbg !197
  %5936 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %5937 = load i32, i32* %5936, align 4, !dbg !199
  %5938 = icmp ne i32 %5935, %5937, !dbg !200
  br i1 %5938, label %5939, label %5981, !dbg !201

5939:                                             ; preds = %5906
  br i1 %5928, label %5961, label %5956, !dbg !202

5940:                                             ; preds = %5956, %5963
  %5941 = load i32, i32* %5936, align 4, !dbg !203
  store i32 %5941, i32* %5934, align 4, !dbg !204
  %5942 = load i8*, i8** %5932, align 8, !dbg !205
  %5943 = load i8, i8* %5942, align 1, !dbg !206
  %5944 = icmp sgt i8 %5943, -1, !dbg !209
  br i1 %5944, label %5945, label %5947, !dbg !210

5945:                                             ; preds = %5940
  %5946 = zext i8 %5943 to i32, !dbg !211
  store i32 %5946, i32* %5922, align 4, !dbg !212
  store i32 1, i32* %5929, align 4, !dbg !213
  br label %5950, !dbg !214

5947:                                             ; preds = %5940
  %5948 = call i8 @sqlite3GetVarint32(i8* %5942, i32* %5922), !dbg !215
  %5949 = zext i8 %5948 to i32, !dbg !216
  store i32 %5949, i32* %5929, align 4, !dbg !217
  br label %5950, !dbg !218

5950:                                             ; preds = %5947, %5945
  store i16 0, i16* %5933, align 2, !dbg !219
  %5951 = load i32, i32* %5931, align 4, !dbg !220
  %5952 = load i32, i32* %5922, align 4, !dbg !221
  %5953 = icmp ult i32 %5951, %5952, !dbg !222
  br i1 %5953, label %5955, label %5954, !dbg !223

5954:                                             ; preds = %5950
  store i8* %5942, i8** %5914, align 8, !dbg !224
  br label %6072, !dbg !225

5955:                                             ; preds = %5950
  store i8* null, i8** %5932, align 8, !dbg !226
  store i32 0, i32* %5931, align 4, !dbg !227
  br label %5981, !dbg !228

5956:                                             ; preds = %5939
  %5957 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 12, i32 0, !dbg !229
  %5958 = load %struct.BtCursor*, %struct.BtCursor** %5957, align 8, !dbg !230
  %5959 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %5958), !dbg !231
  store i32 %5959, i32* %5930, align 4, !dbg !232
  %5960 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %5958, i32* %5931), !dbg !233
  store i8* %5960, i8** %5932, align 8, !dbg !234
  br label %5940, !dbg !235

5961:                                             ; preds = %5939
  %5962 = icmp eq i8 %5924, 3, !dbg !236
  br i1 %5962, label %5963, label %5974, !dbg !237

5963:                                             ; preds = %5961
  %5964 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 10, !dbg !238
  %5965 = load i32, i32* %5964, align 4, !dbg !239
  %5966 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %5965, !dbg !240
  %5967 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5966, i32 0, i32 1, !dbg !241
  %5968 = load i16, i16* %5967, align 2, !dbg !242
  %5969 = and i16 %5968, 16, !dbg !243
  %5970 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5966, i32 0, i32 4, !dbg !244
  %5971 = load i32, i32* %5970, align 4, !dbg !245
  store i32 %5971, i32* %5930, align 4, !dbg !246
  store i32 %5971, i32* %5931, align 4, !dbg !247
  %5972 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5966, i32 0, i32 5, !dbg !248
  %5973 = load i8*, i8** %5972, align 8, !dbg !249
  store i8* %5973, i8** %5932, align 8, !dbg !250
  br label %5940, !dbg !251

5974:                                             ; preds = %5961
  %5975 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 1, !dbg !252
  %5976 = load i16, i16* %5975, align 2, !dbg !252
  %5977 = and i16 %5976, 9216, !dbg !252
  %5978 = icmp ne i16 %5977, 0, !dbg !252
  br i1 %5978, label %5979, label %5980, !dbg !252

5979:                                             ; preds = %5974
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5918), !dbg !252
  br label %6160, !dbg !252

5980:                                             ; preds = %5974
  store i16 1, i16* %5975, align 2, !dbg !252
  br label %6160, !dbg !252

5981:                                             ; preds = %5955, %5906
  %5982 = load i16, i16* %5933, align 2, !dbg !253
  %5983 = icmp ule i16 %5982, 0, !dbg !254
  br i1 %5983, label %6064, label %6061, !dbg !255

5984:                                             ; preds = %6061, %6150
  %5985 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 1, !dbg !256
  %5986 = load i16, i16* %5985, align 2, !dbg !257
  %5987 = and i16 9216, %5986, !dbg !258
  %5988 = icmp eq i16 0, %5987, !dbg !259
  br i1 %5988, label %5989, label %5993, !dbg !260

5989:                                             ; preds = %5984
  %5990 = icmp ne i16 %5987, 0, !dbg !261
  br i1 %5990, label %5991, label %5992, !dbg !261

5991:                                             ; preds = %5989
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5918), !dbg !261
  br label %5993, !dbg !261

5992:                                             ; preds = %5989
  store i16 1, i16* %5985, align 2, !dbg !261
  br label %5993, !dbg !261

5993:                                             ; preds = %5991, %5992, %5984
  %5994 = load i32, i32* %5915, align 4, !dbg !262
  %5995 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 23, i32 0, !dbg !263
  %5996 = load i32, i32* %5995, align 4, !dbg !264
  %5997 = load i32, i32* %5931, align 4, !dbg !265
  %5998 = getelementptr i32, i32* %5922, i32 1, !dbg !266
  %5999 = load i32, i32* %5998, align 4, !dbg !267
  %6000 = icmp sge i32 %5997, %5999, !dbg !268
  br i1 %6000, label %6001, label %6040, !dbg !269

6001:                                             ; preds = %5993
  %6002 = load i8*, i8** %5932, align 8, !dbg !270
  %6003 = ptrtoint i8* %6002 to i64, !dbg !271
  %6004 = load i32, i32* %5922, align 4, !dbg !273
  %6005 = zext i32 %6004 to i64, !dbg !274
  %6006 = add i64 %6003, %6005, !dbg !275
  %6007 = inttoptr i64 %6006 to i8*, !dbg !276
  store i8* %6007, i8** %5914, align 8, !dbg !277
  %6008 = load i32, i32* %5915, align 4, !dbg !278
  %6009 = icmp ult i32 %6008, 12, !dbg !279
  br i1 %6009, label %6010, label %6012, !dbg !280

6010:                                             ; preds = %6001
  %6011 = call i32 @sqlite3VdbeSerialGet(i8* %6007, i32 %6008, %struct.sqlite3_value* %5918), !dbg !281
  br label %6160, !dbg !282

6012:                                             ; preds = %6001
  %6013 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %6013, align 2, !dbg !284
  %6014 = getelementptr i16, i16* %6013, i32 1, !dbg !285
  store i16 514, i16* %6014, align 2, !dbg !286
  %6015 = load i32, i32* %5915, align 4, !dbg !287
  %6016 = sub i32 %6015, 12, !dbg !288
  %6017 = lshr i32 %6016, 1, !dbg !289
  %6018 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 4, !dbg !290
  store i32 %6017, i32* %6018, align 4, !dbg !291
  %6019 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 2, !dbg !292
  store i8 %5909, i8* %6019, align 1, !dbg !293
  %6020 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 5, !dbg !294
  %6021 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 7, !dbg !295
  %6022 = load i32, i32* %6021, align 4, !dbg !296
  %6023 = add i32 %6017, 2, !dbg !297
  %6024 = icmp slt i32 %6022, %6023, !dbg !298
  br i1 %6024, label %6025, label %6027, !dbg !299

6025:                                             ; preds = %6012
  store i16 1, i16* %5985, align 2, !dbg !300
  %6026 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %5918, i32 %6023, i32 0), !dbg !301
  br label %6030, !dbg !302

6027:                                             ; preds = %6012
  %6028 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 6, !dbg !303
  %6029 = load i8*, i8** %6028, align 8, !dbg !304
  store i8* %6029, i8** %6020, align 8, !dbg !305
  br label %6030, !dbg !306

6030:                                             ; preds = %6027, %6025
  %6031 = zext i32 %6017 to i64, !dbg !307
  %6032 = load i8*, i8** %6020, align 8, !dbg !308
  %6033 = load i8*, i8** %5914, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6032, i8* %6033, i64 %6031, i1 false), !dbg !310
  %6034 = getelementptr i8, i8* %6032, i32 %6017, !dbg !311
  store i8 0, i8* %6034, align 1, !dbg !312
  %6035 = add i32 %6017, 1, !dbg !313
  %6036 = getelementptr i8, i8* %6032, i32 %6035, !dbg !314
  store i8 0, i8* %6036, align 1, !dbg !315
  %6037 = and i32 %6015, 1, !dbg !316
  %6038 = getelementptr i16, i16* %6013, i32 %6037, !dbg !317
  %6039 = load i16, i16* %6038, align 2, !dbg !318
  store i16 %6039, i16* %5985, align 2, !dbg !319
  br label %6160, !dbg !320

6040:                                             ; preds = %5993
  %6041 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 2, !dbg !321
  store i8 %5909, i8* %6041, align 1, !dbg !322
  %6042 = load i32, i32* %5915, align 4, !dbg !323
  %6043 = and i32 %6042, 1, !dbg !324
  %6044 = icmp eq i32 %6043, 0, !dbg !325
  %6045 = icmp sge i32 %6042, 12, !dbg !326
  %6046 = and i1 %6045, %6044, !dbg !327
  %6047 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6042), !dbg !328
  %6048 = icmp eq i32 %6047, 0, !dbg !329
  br i1 %6048, label %6059, label %6049, !dbg !330

6049:                                             ; preds = %6040
  %6050 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 12, i32 0, !dbg !331
  %6051 = load %struct.BtCursor*, %struct.BtCursor** %6050, align 8, !dbg !332
  %6052 = load i32, i32* %5922, align 4, !dbg !334
  %6053 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6051, i32 %6052, i32 %6047, %struct.sqlite3_value* %5918), !dbg !335
  %6054 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 5, !dbg !336
  %6055 = load i8*, i8** %6054, align 8, !dbg !337
  %6056 = call i32 @sqlite3VdbeSerialGet(i8* %6055, i32 %6042, %struct.sqlite3_value* %5918), !dbg !338
  %6057 = load i16, i16* %5985, align 2, !dbg !339
  %6058 = and i16 %6057, -4097, !dbg !340
  store i16 %6058, i16* %5985, align 2, !dbg !341
  br label %6160, !dbg !342

6059:                                             ; preds = %6040
  %6060 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6042, %struct.sqlite3_value* %5918), !dbg !343
  br label %6160, !dbg !344

6061:                                             ; preds = %5981
  %6062 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 23, i32 0, !dbg !345
  %6063 = load i32, i32* %6062, align 4, !dbg !346
  store i32 %6063, i32* %5915, align 4, !dbg !347
  br label %5984, !dbg !348

6064:                                             ; preds = %5981
  %6065 = load i32, i32* %5929, align 4, !dbg !349
  %6066 = load i32, i32* %5922, align 4, !dbg !350
  %6067 = icmp ult i32 %6065, %6066, !dbg !351
  br i1 %6067, label %6068, label %6149, !dbg !352

6068:                                             ; preds = %6064
  %6069 = load i8*, i8** %5932, align 8, !dbg !353
  %6070 = icmp eq i8* %6069, null, !dbg !354
  br i1 %6070, label %6072, label %6071, !dbg !355

6071:                                             ; preds = %6068
  store i8* %6069, i8** %5914, align 8, !dbg !356
  br label %6072, !dbg !357

6072:                                             ; preds = %6071, %6068, %5954
  %6073 = alloca i32, align 4, !dbg !358
  %6074 = load i16, i16* %5933, align 2, !dbg !359
  %6075 = zext i16 %6074 to i32, !dbg !360
  store i32 %6075, i32* %6073, align 4, !dbg !361
  %6076 = alloca i64, align 8, !dbg !362
  %6077 = getelementptr i32, i32* %5922, i32 %6075, !dbg !363
  %6078 = load i32, i32* %6077, align 4, !dbg !364
  %6079 = zext i32 %6078 to i64, !dbg !365
  store i64 %6079, i64* %6076, align 4, !dbg !366
  %6080 = load i8*, i8** %5914, align 8, !dbg !367
  %6081 = load i32, i32* %5929, align 4, !dbg !368
  %6082 = alloca i8*, align 8, !dbg !369
  %6083 = getelementptr i8, i8* %6080, i32 %6081, !dbg !370
  store i8* %6083, i8** %6082, align 8, !dbg !371
  %6084 = load i32, i32* %5922, align 4, !dbg !372
  %6085 = getelementptr i8, i8* %6080, i32 %6084, !dbg !373
  br label %6086, !dbg !374

6086:                                             ; preds = %6093, %6072
  %6087 = load i32, i32* %6073, align 4, !dbg !375
  %6088 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %5917, i32 0, i32 23, i32 %6087, !dbg !376
  %6089 = load i8*, i8** %6082, align 8, !dbg !377
  %6090 = load i8, i8* %6089, align 1, !dbg !378
  %6091 = zext i8 %6090 to i32, !dbg !379
  store i32 %6091, i32* %5915, align 4, !dbg !380
  store i32 %6091, i32* %6088, align 4, !dbg !381
  %6092 = icmp sgt i8 %6090, -1, !dbg !382
  br i1 %6092, label %6116, label %6107, !dbg !383

6093:                                             ; preds = %6107, %6116
  %6094 = load i32, i32* %6073, align 4, !dbg !384
  %6095 = add i32 %6094, 1, !dbg !385
  store i32 %6095, i32* %6073, align 4, !dbg !386
  %6096 = load i64, i64* %6076, align 4, !dbg !387
  %6097 = and i64 4294967295, %6096, !dbg !388
  %6098 = trunc i64 %6097 to i32, !dbg !389
  %6099 = getelementptr i32, i32* %5922, i32 %6095, !dbg !390
  store i32 %6098, i32* %6099, align 4, !dbg !391
  %6100 = load i32, i32* %6073, align 4, !dbg !392
  %6101 = icmp sle i32 %6100, 0, !dbg !393
  %6102 = load i8*, i8** %6082, align 8, !dbg !394
  %6103 = ptrtoint i8* %6102 to i64, !dbg !395
  %6104 = ptrtoint i8* %6085 to i64, !dbg !396
  %6105 = icmp ult i64 %6103, %6104, !dbg !397
  %6106 = and i1 %6101, %6105, !dbg !398
  br i1 %6106, label %6086, label %6125, !dbg !399

6107:                                             ; preds = %6086
  %6108 = load i8*, i8** %6082, align 8, !dbg !400
  %6109 = call i8 @sqlite3GetVarint32(i8* %6108, i32* %5915), !dbg !401
  %6110 = getelementptr i8, i8* %6108, i8 %6109, !dbg !402
  store i8* %6110, i8** %6082, align 8, !dbg !403
  %6111 = load i32, i32* %5915, align 4, !dbg !404
  store i32 %6111, i32* %6088, align 4, !dbg !405
  %6112 = load i64, i64* %6076, align 4, !dbg !406
  %6113 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6111), !dbg !407
  %6114 = zext i32 %6113 to i64, !dbg !408
  %6115 = add i64 %6112, %6114, !dbg !409
  store i64 %6115, i64* %6076, align 4, !dbg !410
  br label %6093, !dbg !411

6116:                                             ; preds = %6086
  %6117 = getelementptr i8, i8* %6089, i32 1, !dbg !412
  store i8* %6117, i8** %6082, align 8, !dbg !413
  %6118 = load i32, i32* %5915, align 4, !dbg !414
  %6119 = trunc i32 %6118 to i8, !dbg !415
  %6120 = getelementptr i8, i8* %4, i8 %6119, !dbg !416
  %6121 = load i8, i8* %6120, align 1, !dbg !417
  %6122 = zext i8 %6121 to i64, !dbg !418
  %6123 = load i64, i64* %6076, align 4, !dbg !419
  %6124 = add i64 %6123, %6122, !dbg !420
  store i64 %6124, i64* %6076, align 4, !dbg !421
  br label %6093, !dbg !422

6125:                                             ; preds = %6093
  %6126 = load i64, i64* %6076, align 4, !dbg !423
  %6127 = load i32, i32* %5930, align 4, !dbg !424
  %6128 = zext i32 %6127 to i64, !dbg !425
  %6129 = icmp uge i64 %6103, %6104, !dbg !426
  %6130 = icmp ugt i64 %6103, %6104, !dbg !427
  %6131 = icmp ne i64 %6126, %6128, !dbg !428
  %6132 = icmp ugt i64 %6126, %6128, !dbg !429
  %6133 = or i1 %6130, %6131, !dbg !430
  %6134 = and i1 %6129, %6133, !dbg !431
  %6135 = or i1 %6134, %6132, !dbg !432
  br i1 %6135, label %6136, label %6140, !dbg !433

6136:                                             ; preds = %6125
  %6137 = load i32, i32* %5922, align 4, !dbg !434
  %6138 = icmp eq i32 %6137, 0, !dbg !435
  br i1 %6138, label %6139, label %6140, !dbg !436

6139:                                             ; preds = %6136
  store i32 0, i32* %6073, align 4, !dbg !437
  store i8* %6085, i8** %6082, align 8, !dbg !438
  br label %6140, !dbg !439

6140:                                             ; preds = %6139, %6136, %6125
  %6141 = load i32, i32* %6073, align 4, !dbg !440
  %6142 = trunc i32 %6141 to i16, !dbg !441
  store i16 %6142, i16* %5933, align 2, !dbg !442
  %6143 = load i8*, i8** %6082, align 8, !dbg !443
  %6144 = ptrtoint i8* %6143 to i64, !dbg !444
  %6145 = load i8*, i8** %5914, align 8, !dbg !445
  %6146 = ptrtoint i8* %6145 to i64, !dbg !446
  %6147 = sub i64 %6144, %6146, !dbg !447
  %6148 = trunc i64 %6147 to i32, !dbg !448
  store i32 %6148, i32* %5929, align 4, !dbg !449
  br label %6150, !dbg !450

6149:                                             ; preds = %6064
  store i32 0, i32* %5915, align 4, !dbg !451
  br label %6150, !dbg !452

6150:                                             ; preds = %6140, %6149
  %6151 = load i16, i16* %5933, align 2, !dbg !453
  %6152 = icmp sle i16 %6151, 0, !dbg !454
  br i1 %6152, label %6153, label %5984, !dbg !455

6153:                                             ; preds = %6150
  %6154 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %5918, i32 0, i32 1, !dbg !456
  %6155 = load i16, i16* %6154, align 2, !dbg !456
  %6156 = and i16 %6155, 9216, !dbg !456
  %6157 = icmp ne i16 %6156, 0, !dbg !456
  br i1 %6157, label %6158, label %6159, !dbg !456

6158:                                             ; preds = %6153
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %5918), !dbg !456
  br label %6160, !dbg !456

6159:                                             ; preds = %6153
  store i16 1, i16* %6154, align 2, !dbg !456
  br label %6160, !dbg !456

6160:                                             ; preds = %6158, %6159, %6030, %6010, %6049, %6059, %5979, %5980
  call void @llvm.stackrestore(i8* %5907), !dbg !457
  br label %6161, !dbg !74

6161:                                             ; preds = %17, %6160
  %6162 = call i8* @llvm.stacksave(), !dbg !166
  %6163 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 16, !dbg !169
  %6164 = load i8, i8* %6163, align 1, !dbg !170
  %6165 = alloca i32, align 4, !dbg !171
  store i32 7, i32* %6165, align 4, !dbg !172
  %6166 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 7, !dbg !514
  %6167 = alloca %struct.VdbeCursor*, align 8, !dbg !173
  %6168 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6166, align 8, !dbg !174
  store %struct.VdbeCursor* %6168, %struct.VdbeCursor** %6167, align 8, !dbg !175
  %6169 = alloca i8*, align 8, !dbg !176
  %6170 = alloca i32, align 4, !dbg !177
  %6171 = call i32 @sqlite3VdbeCursorMoveto(%struct.VdbeCursor** %6167, i32* %6165), !dbg !178
  %6172 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6167, align 8, !dbg !179
  %6173 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !180
  %6174 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 16, !dbg !181
  %6175 = load i16, i16* %6174, align 2, !dbg !182
  %6176 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 19, !dbg !183
  %6177 = load i32*, i32** %6176, align 8, !dbg !184
  %6178 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 0, !dbg !185
  %6179 = load i8, i8* %6178, align 1, !dbg !186
  %6180 = icmp ne i8 %6179, 3, !dbg !187
  %6181 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 2, !dbg !188
  %6182 = load i8, i8* %6181, align 1, !dbg !189
  %6183 = icmp ne i8 %6182, 0, !dbg !190
  %6184 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 14, !dbg !191
  %6185 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 21, !dbg !192
  %6186 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 22, !dbg !193
  %6187 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 20, !dbg !194
  %6188 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 17, !dbg !195
  %6189 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 9, !dbg !196
  %6190 = load i32, i32* %6189, align 4, !dbg !197
  %6191 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !198
  %6192 = load i32, i32* %6191, align 4, !dbg !199
  %6193 = icmp ne i32 %6190, %6192, !dbg !200
  br i1 %6193, label %6194, label %6236, !dbg !201

6194:                                             ; preds = %6161
  br i1 %6183, label %6216, label %6211, !dbg !202

6195:                                             ; preds = %6211, %6218
  %6196 = load i32, i32* %6191, align 4, !dbg !203
  store i32 %6196, i32* %6189, align 4, !dbg !204
  %6197 = load i8*, i8** %6187, align 8, !dbg !205
  %6198 = load i8, i8* %6197, align 1, !dbg !206
  %6199 = icmp sgt i8 %6198, -1, !dbg !209
  br i1 %6199, label %6200, label %6202, !dbg !210

6200:                                             ; preds = %6195
  %6201 = zext i8 %6198 to i32, !dbg !211
  store i32 %6201, i32* %6177, align 4, !dbg !212
  store i32 1, i32* %6184, align 4, !dbg !213
  br label %6205, !dbg !214

6202:                                             ; preds = %6195
  %6203 = call i8 @sqlite3GetVarint32(i8* %6197, i32* %6177), !dbg !215
  %6204 = zext i8 %6203 to i32, !dbg !216
  store i32 %6204, i32* %6184, align 4, !dbg !217
  br label %6205, !dbg !218

6205:                                             ; preds = %6202, %6200
  store i16 0, i16* %6188, align 2, !dbg !219
  %6206 = load i32, i32* %6186, align 4, !dbg !220
  %6207 = load i32, i32* %6177, align 4, !dbg !221
  %6208 = icmp ult i32 %6206, %6207, !dbg !222
  br i1 %6208, label %6210, label %6209, !dbg !223

6209:                                             ; preds = %6205
  store i8* %6197, i8** %6169, align 8, !dbg !224
  br label %6329, !dbg !225

6210:                                             ; preds = %6205
  store i8* null, i8** %6187, align 8, !dbg !226
  store i32 0, i32* %6186, align 4, !dbg !227
  br label %6236, !dbg !228

6211:                                             ; preds = %6194
  %6212 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 12, i32 0, !dbg !229
  %6213 = load %struct.BtCursor*, %struct.BtCursor** %6212, align 8, !dbg !230
  %6214 = call i32 @sqlite3BtreePayloadSize(%struct.BtCursor* %6213), !dbg !231
  store i32 %6214, i32* %6185, align 4, !dbg !232
  %6215 = call i8* @sqlite3BtreePayloadFetch(%struct.BtCursor* %6213, i32* %6186), !dbg !233
  store i8* %6215, i8** %6187, align 8, !dbg !234
  br label %6195, !dbg !235

6216:                                             ; preds = %6194
  %6217 = icmp eq i8 %6179, 3, !dbg !236
  br i1 %6217, label %6218, label %6229, !dbg !237

6218:                                             ; preds = %6216
  %6219 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 10, !dbg !238
  %6220 = load i32, i32* %6219, align 4, !dbg !239
  %6221 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6220, !dbg !240
  %6222 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6221, i32 0, i32 1, !dbg !241
  %6223 = load i16, i16* %6222, align 2, !dbg !242
  %6224 = and i16 %6223, 16, !dbg !243
  %6225 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6221, i32 0, i32 4, !dbg !244
  %6226 = load i32, i32* %6225, align 4, !dbg !245
  store i32 %6226, i32* %6185, align 4, !dbg !246
  store i32 %6226, i32* %6186, align 4, !dbg !247
  %6227 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6221, i32 0, i32 5, !dbg !248
  %6228 = load i8*, i8** %6227, align 8, !dbg !249
  store i8* %6228, i8** %6187, align 8, !dbg !250
  br label %6195, !dbg !251

6229:                                             ; preds = %6216
  %6230 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 1, !dbg !252
  %6231 = load i16, i16* %6230, align 2, !dbg !252
  %6232 = and i16 %6231, 9216, !dbg !252
  %6233 = icmp ne i16 %6232, 0, !dbg !252
  br i1 %6233, label %6234, label %6235, !dbg !252

6234:                                             ; preds = %6229
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6173), !dbg !252
  br label %6417, !dbg !252

6235:                                             ; preds = %6229
  store i16 1, i16* %6230, align 2, !dbg !252
  br label %6417, !dbg !252

6236:                                             ; preds = %6210, %6161
  %6237 = load i16, i16* %6188, align 2, !dbg !253
  %6238 = icmp ule i16 %6237, 1, !dbg !254
  br i1 %6238, label %6321, label %6318, !dbg !255

6239:                                             ; preds = %6318, %6407
  %6240 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 1, !dbg !256
  %6241 = load i16, i16* %6240, align 2, !dbg !257
  %6242 = and i16 9216, %6241, !dbg !258
  %6243 = icmp eq i16 0, %6242, !dbg !259
  br i1 %6243, label %6244, label %6248, !dbg !260

6244:                                             ; preds = %6239
  %6245 = icmp ne i16 %6242, 0, !dbg !261
  br i1 %6245, label %6246, label %6247, !dbg !261

6246:                                             ; preds = %6244
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6173), !dbg !261
  br label %6248, !dbg !261

6247:                                             ; preds = %6244
  store i16 1, i16* %6240, align 2, !dbg !261
  br label %6248, !dbg !261

6248:                                             ; preds = %6246, %6247, %6239
  %6249 = load i32, i32* %6170, align 4, !dbg !262
  %6250 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 23, i32 1, !dbg !263
  %6251 = load i32, i32* %6250, align 4, !dbg !264
  %6252 = load i32, i32* %6186, align 4, !dbg !265
  %6253 = getelementptr i32, i32* %6177, i32 2, !dbg !266
  %6254 = load i32, i32* %6253, align 4, !dbg !267
  %6255 = icmp sge i32 %6252, %6254, !dbg !268
  br i1 %6255, label %6256, label %6296, !dbg !269

6256:                                             ; preds = %6248
  %6257 = load i8*, i8** %6187, align 8, !dbg !270
  %6258 = ptrtoint i8* %6257 to i64, !dbg !271
  %6259 = getelementptr i32, i32* %6177, i32 1, !dbg !272
  %6260 = load i32, i32* %6259, align 4, !dbg !273
  %6261 = zext i32 %6260 to i64, !dbg !274
  %6262 = add i64 %6258, %6261, !dbg !275
  %6263 = inttoptr i64 %6262 to i8*, !dbg !276
  store i8* %6263, i8** %6169, align 8, !dbg !277
  %6264 = load i32, i32* %6170, align 4, !dbg !278
  %6265 = icmp ult i32 %6264, 12, !dbg !279
  br i1 %6265, label %6266, label %6268, !dbg !280

6266:                                             ; preds = %6256
  %6267 = call i32 @sqlite3VdbeSerialGet(i8* %6263, i32 %6264, %struct.sqlite3_value* %6173), !dbg !281
  br label %6417, !dbg !282

6268:                                             ; preds = %6256
  %6269 = alloca i16, i32 2, align 2, !dbg !283
  store i16 16, i16* %6269, align 2, !dbg !284
  %6270 = getelementptr i16, i16* %6269, i32 1, !dbg !285
  store i16 514, i16* %6270, align 2, !dbg !286
  %6271 = load i32, i32* %6170, align 4, !dbg !287
  %6272 = sub i32 %6271, 12, !dbg !288
  %6273 = lshr i32 %6272, 1, !dbg !289
  %6274 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 4, !dbg !290
  store i32 %6273, i32* %6274, align 4, !dbg !291
  %6275 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 2, !dbg !292
  store i8 %6164, i8* %6275, align 1, !dbg !293
  %6276 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 5, !dbg !294
  %6277 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 7, !dbg !295
  %6278 = load i32, i32* %6277, align 4, !dbg !296
  %6279 = add i32 %6273, 2, !dbg !297
  %6280 = icmp slt i32 %6278, %6279, !dbg !298
  br i1 %6280, label %6281, label %6283, !dbg !299

6281:                                             ; preds = %6268
  store i16 1, i16* %6240, align 2, !dbg !300
  %6282 = call i32 @sqlite3VdbeMemGrow(%struct.sqlite3_value* %6173, i32 %6279, i32 0), !dbg !301
  br label %6286, !dbg !302

6283:                                             ; preds = %6268
  %6284 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 6, !dbg !303
  %6285 = load i8*, i8** %6284, align 8, !dbg !304
  store i8* %6285, i8** %6276, align 8, !dbg !305
  br label %6286, !dbg !306

6286:                                             ; preds = %6283, %6281
  %6287 = zext i32 %6273 to i64, !dbg !307
  %6288 = load i8*, i8** %6276, align 8, !dbg !308
  %6289 = load i8*, i8** %6169, align 8, !dbg !309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6288, i8* %6289, i64 %6287, i1 false), !dbg !310
  %6290 = getelementptr i8, i8* %6288, i32 %6273, !dbg !311
  store i8 0, i8* %6290, align 1, !dbg !312
  %6291 = add i32 %6273, 1, !dbg !313
  %6292 = getelementptr i8, i8* %6288, i32 %6291, !dbg !314
  store i8 0, i8* %6292, align 1, !dbg !315
  %6293 = and i32 %6271, 1, !dbg !316
  %6294 = getelementptr i16, i16* %6269, i32 %6293, !dbg !317
  %6295 = load i16, i16* %6294, align 2, !dbg !318
  store i16 %6295, i16* %6240, align 2, !dbg !319
  br label %6417, !dbg !320

6296:                                             ; preds = %6248
  %6297 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 2, !dbg !321
  store i8 %6164, i8* %6297, align 1, !dbg !322
  %6298 = load i32, i32* %6170, align 4, !dbg !323
  %6299 = and i32 %6298, 1, !dbg !324
  %6300 = icmp eq i32 %6299, 0, !dbg !325
  %6301 = icmp sge i32 %6298, 12, !dbg !326
  %6302 = and i1 %6301, %6300, !dbg !327
  %6303 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6298), !dbg !328
  %6304 = icmp eq i32 %6303, 0, !dbg !329
  br i1 %6304, label %6316, label %6305, !dbg !330

6305:                                             ; preds = %6296
  %6306 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 12, i32 0, !dbg !331
  %6307 = load %struct.BtCursor*, %struct.BtCursor** %6306, align 8, !dbg !332
  %6308 = getelementptr i32, i32* %6177, i32 1, !dbg !333
  %6309 = load i32, i32* %6308, align 4, !dbg !334
  %6310 = call i32 @sqlite3VdbeMemFromBtree(%struct.BtCursor* %6307, i32 %6309, i32 %6303, %struct.sqlite3_value* %6173), !dbg !335
  %6311 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 5, !dbg !336
  %6312 = load i8*, i8** %6311, align 8, !dbg !337
  %6313 = call i32 @sqlite3VdbeSerialGet(i8* %6312, i32 %6298, %struct.sqlite3_value* %6173), !dbg !338
  %6314 = load i16, i16* %6240, align 2, !dbg !339
  %6315 = and i16 %6314, -4097, !dbg !340
  store i16 %6315, i16* %6240, align 2, !dbg !341
  br label %6417, !dbg !342

6316:                                             ; preds = %6296
  %6317 = call i32 @sqlite3VdbeSerialGet(i8* %1, i32 %6298, %struct.sqlite3_value* %6173), !dbg !343
  br label %6417, !dbg !344

6318:                                             ; preds = %6236
  %6319 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 23, i32 1, !dbg !345
  %6320 = load i32, i32* %6319, align 4, !dbg !346
  store i32 %6320, i32* %6170, align 4, !dbg !347
  br label %6239, !dbg !348

6321:                                             ; preds = %6236
  %6322 = load i32, i32* %6184, align 4, !dbg !349
  %6323 = load i32, i32* %6177, align 4, !dbg !350
  %6324 = icmp ult i32 %6322, %6323, !dbg !351
  br i1 %6324, label %6325, label %6406, !dbg !352

6325:                                             ; preds = %6321
  %6326 = load i8*, i8** %6187, align 8, !dbg !353
  %6327 = icmp eq i8* %6326, null, !dbg !354
  br i1 %6327, label %6329, label %6328, !dbg !355

6328:                                             ; preds = %6325
  store i8* %6326, i8** %6169, align 8, !dbg !356
  br label %6329, !dbg !357

6329:                                             ; preds = %6328, %6325, %6209
  %6330 = alloca i32, align 4, !dbg !358
  %6331 = load i16, i16* %6188, align 2, !dbg !359
  %6332 = zext i16 %6331 to i32, !dbg !360
  store i32 %6332, i32* %6330, align 4, !dbg !361
  %6333 = alloca i64, align 8, !dbg !362
  %6334 = getelementptr i32, i32* %6177, i32 %6332, !dbg !363
  %6335 = load i32, i32* %6334, align 4, !dbg !364
  %6336 = zext i32 %6335 to i64, !dbg !365
  store i64 %6336, i64* %6333, align 4, !dbg !366
  %6337 = load i8*, i8** %6169, align 8, !dbg !367
  %6338 = load i32, i32* %6184, align 4, !dbg !368
  %6339 = alloca i8*, align 8, !dbg !369
  %6340 = getelementptr i8, i8* %6337, i32 %6338, !dbg !370
  store i8* %6340, i8** %6339, align 8, !dbg !371
  %6341 = load i32, i32* %6177, align 4, !dbg !372
  %6342 = getelementptr i8, i8* %6337, i32 %6341, !dbg !373
  br label %6343, !dbg !374

6343:                                             ; preds = %6350, %6329
  %6344 = load i32, i32* %6330, align 4, !dbg !375
  %6345 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6172, i32 0, i32 23, i32 %6344, !dbg !376
  %6346 = load i8*, i8** %6339, align 8, !dbg !377
  %6347 = load i8, i8* %6346, align 1, !dbg !378
  %6348 = zext i8 %6347 to i32, !dbg !379
  store i32 %6348, i32* %6170, align 4, !dbg !380
  store i32 %6348, i32* %6345, align 4, !dbg !381
  %6349 = icmp sgt i8 %6347, -1, !dbg !382
  br i1 %6349, label %6373, label %6364, !dbg !383

6350:                                             ; preds = %6364, %6373
  %6351 = load i32, i32* %6330, align 4, !dbg !384
  %6352 = add i32 %6351, 1, !dbg !385
  store i32 %6352, i32* %6330, align 4, !dbg !386
  %6353 = load i64, i64* %6333, align 4, !dbg !387
  %6354 = and i64 4294967295, %6353, !dbg !388
  %6355 = trunc i64 %6354 to i32, !dbg !389
  %6356 = getelementptr i32, i32* %6177, i32 %6352, !dbg !390
  store i32 %6355, i32* %6356, align 4, !dbg !391
  %6357 = load i32, i32* %6330, align 4, !dbg !392
  %6358 = icmp sle i32 %6357, 1, !dbg !393
  %6359 = load i8*, i8** %6339, align 8, !dbg !394
  %6360 = ptrtoint i8* %6359 to i64, !dbg !395
  %6361 = ptrtoint i8* %6342 to i64, !dbg !396
  %6362 = icmp ult i64 %6360, %6361, !dbg !397
  %6363 = and i1 %6358, %6362, !dbg !398
  br i1 %6363, label %6343, label %6382, !dbg !399

6364:                                             ; preds = %6343
  %6365 = load i8*, i8** %6339, align 8, !dbg !400
  %6366 = call i8 @sqlite3GetVarint32(i8* %6365, i32* %6170), !dbg !401
  %6367 = getelementptr i8, i8* %6365, i8 %6366, !dbg !402
  store i8* %6367, i8** %6339, align 8, !dbg !403
  %6368 = load i32, i32* %6170, align 4, !dbg !404
  store i32 %6368, i32* %6345, align 4, !dbg !405
  %6369 = load i64, i64* %6333, align 4, !dbg !406
  %6370 = call i32 @sqlite3VdbeSerialTypeLen(i32 %6368), !dbg !407
  %6371 = zext i32 %6370 to i64, !dbg !408
  %6372 = add i64 %6369, %6371, !dbg !409
  store i64 %6372, i64* %6333, align 4, !dbg !410
  br label %6350, !dbg !411

6373:                                             ; preds = %6343
  %6374 = getelementptr i8, i8* %6346, i32 1, !dbg !412
  store i8* %6374, i8** %6339, align 8, !dbg !413
  %6375 = load i32, i32* %6170, align 4, !dbg !414
  %6376 = trunc i32 %6375 to i8, !dbg !415
  %6377 = getelementptr i8, i8* %4, i8 %6376, !dbg !416
  %6378 = load i8, i8* %6377, align 1, !dbg !417
  %6379 = zext i8 %6378 to i64, !dbg !418
  %6380 = load i64, i64* %6333, align 4, !dbg !419
  %6381 = add i64 %6380, %6379, !dbg !420
  store i64 %6381, i64* %6333, align 4, !dbg !421
  br label %6350, !dbg !422

6382:                                             ; preds = %6350
  %6383 = load i64, i64* %6333, align 4, !dbg !423
  %6384 = load i32, i32* %6185, align 4, !dbg !424
  %6385 = zext i32 %6384 to i64, !dbg !425
  %6386 = icmp uge i64 %6360, %6361, !dbg !426
  %6387 = icmp ugt i64 %6360, %6361, !dbg !427
  %6388 = icmp ne i64 %6383, %6385, !dbg !428
  %6389 = icmp ugt i64 %6383, %6385, !dbg !429
  %6390 = or i1 %6387, %6388, !dbg !430
  %6391 = and i1 %6386, %6390, !dbg !431
  %6392 = or i1 %6391, %6389, !dbg !432
  br i1 %6392, label %6393, label %6397, !dbg !433

6393:                                             ; preds = %6382
  %6394 = load i32, i32* %6177, align 4, !dbg !434
  %6395 = icmp eq i32 %6394, 0, !dbg !435
  br i1 %6395, label %6396, label %6397, !dbg !436

6396:                                             ; preds = %6393
  store i32 0, i32* %6330, align 4, !dbg !437
  store i8* %6342, i8** %6339, align 8, !dbg !438
  br label %6397, !dbg !439

6397:                                             ; preds = %6396, %6393, %6382
  %6398 = load i32, i32* %6330, align 4, !dbg !440
  %6399 = trunc i32 %6398 to i16, !dbg !441
  store i16 %6399, i16* %6188, align 2, !dbg !442
  %6400 = load i8*, i8** %6339, align 8, !dbg !443
  %6401 = ptrtoint i8* %6400 to i64, !dbg !444
  %6402 = load i8*, i8** %6169, align 8, !dbg !445
  %6403 = ptrtoint i8* %6402 to i64, !dbg !446
  %6404 = sub i64 %6401, %6403, !dbg !447
  %6405 = trunc i64 %6404 to i32, !dbg !448
  store i32 %6405, i32* %6184, align 4, !dbg !449
  br label %6407, !dbg !450

6406:                                             ; preds = %6321
  store i32 0, i32* %6170, align 4, !dbg !451
  br label %6407, !dbg !452

6407:                                             ; preds = %6397, %6406
  %6408 = load i16, i16* %6188, align 2, !dbg !453
  %6409 = icmp sle i16 %6408, 1, !dbg !454
  br i1 %6409, label %6410, label %6239, !dbg !455

6410:                                             ; preds = %6407
  %6411 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6173, i32 0, i32 1, !dbg !456
  %6412 = load i16, i16* %6411, align 2, !dbg !456
  %6413 = and i16 %6412, 9216, !dbg !456
  %6414 = icmp ne i16 %6413, 0, !dbg !456
  br i1 %6414, label %6415, label %6416, !dbg !456

6415:                                             ; preds = %6410
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6173), !dbg !456
  br label %6417, !dbg !456

6416:                                             ; preds = %6410
  store i16 1, i16* %6411, align 2, !dbg !456
  br label %6417, !dbg !456

6417:                                             ; preds = %6415, %6416, %6286, %6266, %6305, %6316, %6234, %6235
  call void @llvm.stackrestore(i8* %6162), !dbg !457
  br label %6418, !dbg !74

6418:                                             ; preds = %17, %6417, %5902
  %6419 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 60, !dbg !75
  %6420 = call i8* @llvm.stacksave(), !dbg !78
  %6421 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6419, i32 0, i32 4, !dbg !79
  %6422 = load i32, i32* %6421, align 4, !dbg !82
  %6423 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6422, !dbg !83
  %6424 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6423, i32 0, i32 1, !dbg !78
  %6425 = load i16, i16* %6424, align 2, !dbg !78
  %6426 = and i16 %6425, 9216, !dbg !78
  %6427 = icmp ne i16 %6426, 0, !dbg !78
  %6428 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %6427, label %6429, label %6431, !dbg !78

6429:                                             ; preds = %6418
  %6430 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6423), !dbg !78
  store %struct.sqlite3_value* %6430, %struct.sqlite3_value** %6428, align 8, !dbg !78
  br label %6432, !dbg !78

6431:                                             ; preds = %6418
  store i16 4, i16* %6424, align 2, !dbg !78
  store %struct.sqlite3_value* %6423, %struct.sqlite3_value** %6428, align 8, !dbg !78
  br label %6432, !dbg !78

6432:                                             ; preds = %6431, %6429
  %6433 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6428, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %6420), !dbg !78
  %6434 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6433, i32 0, i32 0, i32 0, !dbg !84
  %6435 = bitcast double* %6434 to i64*, !dbg !85
  store i64 1, i64* %6435, align 4, !dbg !86
  br label %6436, !dbg !74

6436:                                             ; preds = %17, %6432
  %6437 = getelementptr %struct.VdbeCursor*, %struct.VdbeCursor** %9, i32 5, !dbg !1402
  %6438 = load %struct.VdbeCursor*, %struct.VdbeCursor** %6437, align 8, !dbg !1405
  %6439 = call i32 @sqlite3VdbeSorterNext(%struct.sqlite3* %13, %struct.VdbeCursor* %6438), !dbg !1406
  %6440 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6438, i32 0, i32 9, !dbg !1407
  store i32 0, i32* %6440, align 4, !dbg !1408
  %6441 = getelementptr %struct.VdbeCursor, %struct.VdbeCursor* %6438, i32 0, i32 2, !dbg !1409
  %6442 = icmp eq i32 %6439, 0, !dbg !1410
  br i1 %6442, label %6443, label %6444, !dbg !1411

6443:                                             ; preds = %6436
  store i8 0, i8* %6441, align 1, !dbg !1412
  br label %4940, !dbg !1413

6444:                                             ; preds = %6436
  store i8 1, i8* %6441, align 1, !dbg !1414
  br label %6445, !dbg !1415

6445:                                             ; preds = %17, %6444
  %6446 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !100
  %6447 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6446, i32 0, i32 1, !dbg !103
  store i16 4, i16* %6447, align 2, !dbg !104
  %6448 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6446, i32 0, i32 0, i32 0, !dbg !105
  %6449 = bitcast double* %6448 to i64*, !dbg !106
  store i64 62, i64* %6449, align 4, !dbg !107
  br label %6475, !dbg !108

6450:                                             ; preds = %17
  %6451 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 64, !dbg !75
  %6452 = call i8* @llvm.stacksave(), !dbg !78
  %6453 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6451, i32 0, i32 4, !dbg !79
  %6454 = load i32, i32* %6453, align 4, !dbg !82
  %6455 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6454, !dbg !83
  %6456 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6455, i32 0, i32 1, !dbg !78
  %6457 = load i16, i16* %6456, align 2, !dbg !78
  %6458 = and i16 %6457, 9216, !dbg !78
  %6459 = icmp ne i16 %6458, 0, !dbg !78
  %6460 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %6459, label %6461, label %6463, !dbg !78

6461:                                             ; preds = %6450
  %6462 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6455), !dbg !78
  store %struct.sqlite3_value* %6462, %struct.sqlite3_value** %6460, align 8, !dbg !78
  br label %6464, !dbg !78

6463:                                             ; preds = %6450
  store i16 4, i16* %6456, align 2, !dbg !78
  store %struct.sqlite3_value* %6455, %struct.sqlite3_value** %6460, align 8, !dbg !78
  br label %6464, !dbg !78

6464:                                             ; preds = %6463, %6461
  %6465 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6460, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %6452), !dbg !78
  %6466 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6465, i32 0, i32 0, i32 0, !dbg !84
  %6467 = bitcast double* %6466 to i64*, !dbg !85
  store i64 1, i64* %6467, align 4, !dbg !86
  br label %6468, !dbg !74

6468:                                             ; preds = %17, %6464
  %6469 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1416
  %6470 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6469, i32 0, i32 0, i32 0, !dbg !1419
  %6471 = bitcast double* %6470 to i64*, !dbg !1420
  %6472 = load i64, i64* %6471, align 4, !dbg !1421
  %6473 = add i64 %6472, 1, !dbg !1422
  %6474 = trunc i64 %6473 to i32, !dbg !1423
  store i32 %6474, i32* %15, align 4, !dbg !1424
  br label %14, !dbg !1425

6475:                                             ; preds = %17, %6445, %5538
  %6476 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 5, !dbg !1274
  %6477 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6476, i32 0, i32 0, i32 0, !dbg !1277
  %6478 = bitcast double* %6477 to i64*, !dbg !1278
  %6479 = load i64, i64* %6478, align 4, !dbg !1279
  %6480 = icmp sgt i64 %6479, 0, !dbg !1280
  br i1 %6480, label %6481, label %.critedge1, !dbg !1281

6481:                                             ; preds = %6475
  br label %6488, !dbg !1282

.critedge1:                                       ; preds = %6475, %17
  %6482 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1416
  %6483 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6482, i32 0, i32 0, i32 0, !dbg !1419
  %6484 = bitcast double* %6483 to i64*, !dbg !1420
  %6485 = load i64, i64* %6484, align 4, !dbg !1421
  %6486 = add i64 %6485, 1, !dbg !1422
  %6487 = trunc i64 %6486 to i32, !dbg !1423
  store i32 %6487, i32* %15, align 4, !dbg !1424
  br label %14, !dbg !1425

6488:                                             ; preds = %6481, %17
  %6489 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 68, !dbg !1426
  %6490 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6489, i32 0, i32 6, !dbg !1429
  %6491 = bitcast %union.p4union* %6490 to %struct.FuncDef**, !dbg !1430
  %6492 = load %struct.FuncDef*, %struct.FuncDef** %6491, align 8, !dbg !1431
  %6493 = call i8* @llvm.stacksave(), !dbg !1432
  %6494 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1433
  %6495 = alloca i32, align 8, !dbg !1434
  %6496 = call i32 @sqlite3VdbeMemFinalize(%struct.sqlite3_value* %6494, %struct.FuncDef* %6492), !dbg !1435
  store i32 %6496, i32* %6495, align 4, !dbg !1436
  %6497 = call i32 @sqlite3VdbeChangeEncoding(%struct.sqlite3_value* %6494, i32 1), !dbg !1437
  %6498 = call i32 @sqlite3VdbeMemTooBig(%struct.sqlite3_value* %6494), !dbg !1438
  call void @llvm.stackrestore(i8* %6493), !dbg !1439
  br label %6499, !dbg !74

6499:                                             ; preds = %17, %6488
  %6500 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 1, !dbg !1440
  %6501 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1443
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %6501, %struct.sqlite3_value* %6500, i32 4096), !dbg !1444
  %6502 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 2, !dbg !1440
  %6503 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 25, !dbg !1443
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %6503, %struct.sqlite3_value* %6502, i32 4096), !dbg !1444
  %6504 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 3, !dbg !1440
  %6505 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 26, !dbg !1443
  call void @sqlite3VdbeMemShallowCopy(%struct.sqlite3_value* %6505, %struct.sqlite3_value* %6504, i32 4096), !dbg !1444
  br label %6506, !dbg !74

6506:                                             ; preds = %17, %6499
  %6507 = call i8* @llvm.stacksave(), !dbg !1445
  %6508 = call i32 @sqlite3VdbeCheckFk(%struct.Vdbe* %0, i32 0), !dbg !1448
  %6509 = call i32 @sqlite3VdbeCloseStatement(%struct.Vdbe* %0, i32 1), !dbg !1449
  %6510 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 9, !dbg !1450
  %6511 = load i32, i32* %6510, align 4, !dbg !1451
  %6512 = add i32 %6511, 2, !dbg !1452
  %6513 = or i32 %6512, 1, !dbg !1453
  store i32 %6513, i32* %6510, align 4, !dbg !1454
  %6514 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 24, !dbg !1455
  %6515 = getelementptr %struct.Vdbe, %struct.Vdbe* %0, i32 0, i32 27, !dbg !1456
  store %struct.sqlite3_value* %6514, %struct.sqlite3_value** %6515, align 8, !dbg !1457
  %6516 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6514, i32 1, !dbg !1458
  %6517 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6516, i32 0, i32 1, !dbg !1459
  %6518 = load i16, i16* %6517, align 2, !dbg !1460
  %6519 = and i16 %6518, 4096, !dbg !1461
  %6520 = icmp ne i16 %6519, 0, !dbg !1462
  br i1 %6520, label %6521, label %6523, !dbg !1463

6521:                                             ; preds = %6506
  %6522 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %6516), !dbg !1464
  br label %6523, !dbg !1465

6523:                                             ; preds = %6521, %6506
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %6516), !dbg !1466
  %6524 = load i16, i16* %6517, align 2, !dbg !1460
  %6525 = and i16 %6524, 4096, !dbg !1461
  %6526 = icmp ne i16 %6525, 0, !dbg !1462
  br i1 %6526, label %6527, label %6529, !dbg !1463

6527:                                             ; preds = %6523
  %6528 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %6516), !dbg !1464
  br label %6529, !dbg !1465

6529:                                             ; preds = %6527, %6523
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %6516), !dbg !1466
  %6530 = load i16, i16* %6517, align 2, !dbg !1460
  %6531 = and i16 %6530, 4096, !dbg !1461
  %6532 = icmp ne i16 %6531, 0, !dbg !1462
  br i1 %6532, label %6533, label %6535, !dbg !1463

6533:                                             ; preds = %6529
  %6534 = call i32 @sqlite3VdbeMemMakeWriteable(%struct.sqlite3_value* %6516), !dbg !1464
  br label %6535, !dbg !1465

6535:                                             ; preds = %6533, %6529
  call void @sqlite3VdbeMemNulTerminate(%struct.sqlite3_value* %6516), !dbg !1466
  %6536 = load %struct.sqlite3*, %struct.sqlite3** %12, align 8, !dbg !1467
  %6537 = getelementptr %struct.sqlite3, %struct.sqlite3* %6536, i32 0, i32 19, !dbg !1468
  %6538 = load i8, i8* %6537, align 1, !dbg !1469
  store i32 71, i32* %15, align 4, !dbg !1470
  call void @llvm.stackrestore(i8* %6507), !dbg !1471
  ret i32 100, !dbg !1472

6539:                                             ; preds = %17
  %6540 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 7, !dbg !1416
  %6541 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6540, i32 0, i32 0, i32 0, !dbg !1419
  %6542 = bitcast double* %6541 to i64*, !dbg !1420
  %6543 = load i64, i64* %6542, align 4, !dbg !1421
  %6544 = add i64 %6543, 1, !dbg !1422
  %6545 = trunc i64 %6544 to i32, !dbg !1423
  store i32 %6545, i32* %15, align 4, !dbg !1424
  br label %14, !dbg !1425

6546:                                             ; preds = %17, %.critedge, %77
  %6547 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 72, !dbg !87
  %6548 = call i8* @llvm.stacksave(), !dbg !90
  %6549 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6547, i32 0, i32 4, !dbg !79
  %6550 = load i32, i32* %6549, align 4, !dbg !82
  %6551 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6550, !dbg !83
  %6552 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6551, i32 0, i32 1, !dbg !90
  %6553 = load i16, i16* %6552, align 2, !dbg !90
  %6554 = and i16 %6553, 9216, !dbg !90
  %6555 = icmp ne i16 %6554, 0, !dbg !90
  %6556 = alloca %struct.sqlite3_value*, align 8, !dbg !90
  br i1 %6555, label %6557, label %6559, !dbg !90

6557:                                             ; preds = %6546
  %6558 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6551), !dbg !90
  store %struct.sqlite3_value* %6558, %struct.sqlite3_value** %6556, align 8, !dbg !90
  br label %6560, !dbg !90

6559:                                             ; preds = %6546
  store i16 4, i16* %6552, align 2, !dbg !90
  store %struct.sqlite3_value* %6551, %struct.sqlite3_value** %6556, align 8, !dbg !90
  br label %6560, !dbg !90

6560:                                             ; preds = %6559, %6557
  %6561 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6556, align 8, !dbg !90
  call void @llvm.stackrestore(i8* %6548), !dbg !90
  %6562 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6561, i32 0, i32 1, !dbg !91
  store i16 1, i16* %6562, align 2, !dbg !92
  %6563 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6561, i32 0, i32 4, !dbg !93
  store i32 0, i32* %6563, align 4, !dbg !94
  %6564 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6561, i32 1, !dbg !95
  %6565 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6564, i32 0, i32 1, !dbg !96
  %6566 = load i16, i16* %6565, align 2, !dbg !96
  %6567 = and i16 %6566, 9216, !dbg !96
  %6568 = icmp ne i16 %6567, 0, !dbg !96
  br i1 %6568, label %6569, label %6570, !dbg !96

6569:                                             ; preds = %6560
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6564), !dbg !96
  br label %6571, !dbg !96

6570:                                             ; preds = %6560
  store i16 1, i16* %6565, align 2, !dbg !96
  br label %6571, !dbg !96

6571:                                             ; preds = %6570, %6569
  store i16 1, i16* %6565, align 2, !dbg !97
  %6572 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6564, i32 0, i32 4, !dbg !98
  store i32 0, i32* %6572, align 4, !dbg !99
  %6573 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6564, i32 1, !dbg !95
  %6574 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6573, i32 0, i32 1, !dbg !96
  %6575 = load i16, i16* %6574, align 2, !dbg !96
  %6576 = and i16 %6575, 9216, !dbg !96
  %6577 = icmp ne i16 %6576, 0, !dbg !96
  br i1 %6577, label %6578, label %6579, !dbg !96

6578:                                             ; preds = %6571
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6573), !dbg !96
  br label %6580, !dbg !96

6579:                                             ; preds = %6571
  store i16 1, i16* %6574, align 2, !dbg !96
  br label %6580, !dbg !96

6580:                                             ; preds = %6579, %6578
  store i16 1, i16* %6574, align 2, !dbg !97
  %6581 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6573, i32 0, i32 4, !dbg !98
  store i32 0, i32* %6581, align 4, !dbg !99
  %6582 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6573, i32 1, !dbg !95
  %6583 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6582, i32 0, i32 1, !dbg !96
  %6584 = load i16, i16* %6583, align 2, !dbg !96
  %6585 = and i16 %6584, 9216, !dbg !96
  %6586 = icmp ne i16 %6585, 0, !dbg !96
  br i1 %6586, label %6587, label %6588, !dbg !96

6587:                                             ; preds = %6580
  call void @vdbeMemClearExternAndSetNull(%struct.sqlite3_value* %6582), !dbg !96
  br label %6589, !dbg !96

6588:                                             ; preds = %6580
  store i16 1, i16* %6583, align 2, !dbg !96
  br label %6589, !dbg !96

6589:                                             ; preds = %6588, %6587
  store i16 1, i16* %6583, align 2, !dbg !97
  %6590 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6582, i32 0, i32 4, !dbg !98
  store i32 0, i32* %6590, align 4, !dbg !99
  br label %6591, !dbg !74

6591:                                             ; preds = %17, %6589
  %6592 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 73, !dbg !75
  %6593 = call i8* @llvm.stacksave(), !dbg !78
  %6594 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6592, i32 0, i32 4, !dbg !79
  %6595 = load i32, i32* %6594, align 4, !dbg !82
  %6596 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6595, !dbg !83
  %6597 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6596, i32 0, i32 1, !dbg !78
  %6598 = load i16, i16* %6597, align 2, !dbg !78
  %6599 = and i16 %6598, 9216, !dbg !78
  %6600 = icmp ne i16 %6599, 0, !dbg !78
  %6601 = alloca %struct.sqlite3_value*, align 8, !dbg !78
  br i1 %6600, label %6602, label %6604, !dbg !78

6602:                                             ; preds = %6591
  %6603 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6596), !dbg !78
  store %struct.sqlite3_value* %6603, %struct.sqlite3_value** %6601, align 8, !dbg !78
  br label %6605, !dbg !78

6604:                                             ; preds = %6591
  store i16 4, i16* %6597, align 2, !dbg !78
  store %struct.sqlite3_value* %6596, %struct.sqlite3_value** %6601, align 8, !dbg !78
  br label %6605, !dbg !78

6605:                                             ; preds = %6604, %6602
  %6606 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6601, align 8, !dbg !78
  call void @llvm.stackrestore(i8* %6593), !dbg !78
  %6607 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6606, i32 0, i32 0, i32 0, !dbg !84
  %6608 = bitcast double* %6607 to i64*, !dbg !85
  store i64 0, i64* %6608, align 4, !dbg !86
  br label %6609, !dbg !74

6609:                                             ; preds = %17, %6605
  %6610 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 8, !dbg !1416
  %6611 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6610, i32 0, i32 0, i32 0, !dbg !1419
  %6612 = bitcast double* %6611 to i64*, !dbg !1420
  %6613 = load i64, i64* %6612, align 4, !dbg !1421
  %6614 = add i64 %6613, 1, !dbg !1422
  %6615 = trunc i64 %6614 to i32, !dbg !1423
  store i32 %6615, i32* %15, align 4, !dbg !1424
  br label %14, !dbg !1425

6616:                                             ; preds = %5549, %17, %17, %4934
  %6617 = call i32 @sqlite3VdbeHalt(%struct.Vdbe* %0), !dbg !1473
  ret i32 101, !dbg !1476

6618:                                             ; preds = %17, %18
  %6619 = call i8* @llvm.stacksave(), !dbg !1477
  %6620 = getelementptr %struct.sqlite3, %struct.sqlite3* %13, i32 0, i32 4, !dbg !1480
  %6621 = load %struct.Db*, %struct.Db** %6620, align 8, !dbg !1481
  %6622 = getelementptr %struct.Db, %struct.Db* %6621, i32 0, i32 1, !dbg !1482
  %6623 = load %struct.Btree*, %struct.Btree** %6622, align 8, !dbg !1483
  %6624 = ptrtoint %struct.Btree* %6623 to i64, !dbg !1484
  %6625 = alloca i32, align 8, !dbg !1485
  %6626 = alloca i32, align 8, !dbg !1486
  %6627 = icmp ne i64 %6624, 0, !dbg !1487
  br i1 %6627, label %6628, label %6630, !dbg !1488

6628:                                             ; preds = %6618
  %6629 = call i32 @sqlite3BtreeBeginTrans(%struct.Btree* %6623, i32 0, i32* %6625), !dbg !1489
  store i32 %6629, i32* %6626, align 4, !dbg !1490
  br label %6630, !dbg !1491

6630:                                             ; preds = %6628, %6618
  %6631 = load i32, i32* %6625, align 4, !dbg !1492
  %6632 = icmp ne i32 %6631, 5, !dbg !1493
  %6633 = getelementptr %struct.Db, %struct.Db* %6621, i32 0, i32 4, !dbg !1494
  %6634 = load %struct.Schema*, %struct.Schema** %6633, align 8, !dbg !1495
  %6635 = getelementptr %struct.Schema, %struct.Schema* %6634, i32 0, i32 1, !dbg !1496
  %6636 = load i32, i32* %6635, align 4, !dbg !1497
  %6637 = icmp ne i32 %6636, 0, !dbg !1498
  %6638 = or i1 %6637, %6632, !dbg !1499
  %6639 = load i32, i32* %6626, align 4, !dbg !1500
  call void @llvm.stackrestore(i8* %6619), !dbg !1501
  br label %6640, !dbg !74

6640:                                             ; preds = %17, %6630
  %6641 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 77, !dbg !971
  %6642 = call i8* @llvm.stacksave(), !dbg !974
  %6643 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6641, i32 0, i32 4, !dbg !79
  %6644 = load i32, i32* %6643, align 4, !dbg !82
  %6645 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6644, !dbg !83
  %6646 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6645, i32 0, i32 1, !dbg !974
  %6647 = load i16, i16* %6646, align 2, !dbg !974
  %6648 = and i16 %6647, 9216, !dbg !974
  %6649 = icmp ne i16 %6648, 0, !dbg !974
  %6650 = alloca %struct.sqlite3_value*, align 8, !dbg !974
  br i1 %6649, label %6651, label %6653, !dbg !974

6651:                                             ; preds = %6640
  %6652 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6645), !dbg !974
  store %struct.sqlite3_value* %6652, %struct.sqlite3_value** %6650, align 8, !dbg !974
  br label %6654, !dbg !974

6653:                                             ; preds = %6640
  store i16 4, i16* %6646, align 2, !dbg !974
  store %struct.sqlite3_value* %6645, %struct.sqlite3_value** %6650, align 8, !dbg !974
  br label %6654, !dbg !974

6654:                                             ; preds = %6653, %6651
  %6655 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6650, align 8, !dbg !974
  call void @llvm.stackrestore(i8* %6642), !dbg !974
  %6656 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6655, i32 0, i32 1, !dbg !975
  %6657 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6655, i32 0, i32 2, !dbg !976
  %6658 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6655, i32 0, i32 4, !dbg !977
  %6659 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6655, i32 0, i32 5, !dbg !978
  store i16 2562, i16* %6656, align 2, !dbg !979
  %6660 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6641, i32 0, i32 6, !dbg !980
  %6661 = bitcast %union.p4union* %6660 to i8**, !dbg !981
  %6662 = load i8*, i8** %6661, align 8, !dbg !982
  store i8* %6662, i8** %6659, align 8, !dbg !983
  store i32 7, i32* %6658, align 4, !dbg !984
  store i8 1, i8* %6657, align 1, !dbg !985
  br label %6663, !dbg !74

6663:                                             ; preds = %17, %6654
  %6664 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %11, i32 78, !dbg !971
  %6665 = call i8* @llvm.stacksave(), !dbg !974
  %6666 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6664, i32 0, i32 4, !dbg !79
  %6667 = load i32, i32* %6666, align 4, !dbg !82
  %6668 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %7, i32 %6667, !dbg !83
  %6669 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6668, i32 0, i32 1, !dbg !974
  %6670 = load i16, i16* %6669, align 2, !dbg !974
  %6671 = and i16 %6670, 9216, !dbg !974
  %6672 = icmp ne i16 %6671, 0, !dbg !974
  %6673 = alloca %struct.sqlite3_value*, align 8, !dbg !974
  br i1 %6672, label %6674, label %6676, !dbg !974

6674:                                             ; preds = %6663
  %6675 = call %struct.sqlite3_value* @out2PrereleaseWithClear(%struct.sqlite3_value* %6668), !dbg !974
  store %struct.sqlite3_value* %6675, %struct.sqlite3_value** %6673, align 8, !dbg !974
  br label %6677, !dbg !974

6676:                                             ; preds = %6663
  store i16 4, i16* %6669, align 2, !dbg !974
  store %struct.sqlite3_value* %6668, %struct.sqlite3_value** %6673, align 8, !dbg !974
  br label %6677, !dbg !974

6677:                                             ; preds = %6676, %6674
  %6678 = load %struct.sqlite3_value*, %struct.sqlite3_value** %6673, align 8, !dbg !974
  call void @llvm.stackrestore(i8* %6665), !dbg !974
  %6679 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 1, !dbg !975
  %6680 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 2, !dbg !976
  %6681 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 4, !dbg !977
  %6682 = getelementptr %struct.sqlite3_value, %struct.sqlite3_value* %6678, i32 0, i32 5, !dbg !978
  store i16 2562, i16* %6679, align 2, !dbg !979
  %6683 = getelementptr %struct.VdbeOp, %struct.VdbeOp* %6664, i32 0, i32 6, !dbg !980
  %6684 = bitcast %union.p4union* %6683 to i8**, !dbg !981
  %6685 = load i8*, i8** %6684, align 8, !dbg !982
  store i8* %6685, i8** %6682, align 8, !dbg !983
  store i32 7, i32* %6681, align 4, !dbg !984
  store i8 1, i8* %6680, align 1, !dbg !985
  br label %23, !dbg !74
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status64(i32, i64* nocapture, i64* nocapture, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_enter(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_leave(%struct.sqlite3_mutex*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_status(i32, i32* nocapture, i32* nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @countLookasideSlots(%struct.LookasideSlot* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_status(%struct.sqlite3*, i32, i32* nocapture, i32*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_msize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeClearObject(%struct.sqlite3*, %struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DbFree(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getDigits(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
declare i32 @parseTimezone(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseHhMmSs(i8* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @datetimeError(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeJD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @parseYyyyMmDd(i8* nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDateTimeToCurrent(%struct.sqlite3_context* nocapture readonly, %struct.DateTime* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @setRawDateNumber(%struct.DateTime* nocapture, double) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @parseDateOrTime(%struct.sqlite3_context* nocapture, i8* readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @validJulianDay(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeHMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @computeYMD_HMS(%struct.DateTime*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @clearYMD_HMS_TZ(%struct.DateTime* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare i32 @osLocaltime(i64*, %struct.tm* nocapture) local_unnamed_addr #3

declare %struct.tm* @localtime(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i64 @localtimeOffset(%struct.DateTime* nocapture readonly, %struct.sqlite3_context* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @parseModifier(%struct.sqlite3_context* nocapture, i8* readonly, i32, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stricmp(i8* readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_strnicmp(i8* readonly, i8* readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDate(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly, %struct.DateTime*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_type(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_value_double(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @juliandayFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_double(%struct.sqlite3_context* nocapture readonly, double) #3

; Function Attrs: nounwind ssp uwtable
declare void @datetimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_snprintf(i32, i8* returned, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @timeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @strftimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_context_db_handle(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_toobig(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_nomem(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MallocSize(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cdateFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ctimestampFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_vfs* @sqlite3_vfs_find(i8* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_initialize() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vfsUnlink(%struct.sqlite3_vfs* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_register(%struct.sqlite3_vfs*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_vfs_unregister(%struct.sqlite3_vfs* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_mutex_alloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_mutex_free(%struct.sqlite3_mutex*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_mutex_try(%struct.sqlite3_mutex*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexEnd() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_mutex* @noopMutexAlloc(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexFree(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexEnter(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @noopMutexTry(%struct.sqlite3_mutex* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopMutexLeave(%struct.sqlite3_mutex* nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexInit() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @pthreadMutexEnd() #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_mutex* @pthreadMutexAlloc(i32) #3

declare i32 @pthread_mutexattr_init(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @pthread_mutexattr_settype(%struct._opaque_pthread_mutexattr_t*, i32) local_unnamed_addr #12

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

declare i32 @"\01_pthread_mutexattr_destroy"(%struct._opaque_pthread_mutexattr_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexFree(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexEnter(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @pthreadMutexTry(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_trylock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @pthreadMutexLeave(%struct.sqlite3_mutex*) #3

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_release_memory(i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_memory_alarm(void (i8*, i64, i32)* nocapture readnone, i8* nocapture readnone, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_soft_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_used() #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_soft_heap_limit(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_hard_heap_limit64(i64) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_memory_highwater(i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @mallocWithAlarm(i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_malloc64(i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isLookaside(%struct.sqlite3* nocapture readonly, i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @lookasideMallocSize(%struct.sqlite3* nocapture readonly, i8* readnone) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @measureAllocationSize(%struct.sqlite3* readonly, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3Realloc(i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_realloc64(i8*, i64) #3

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbMallocRawFinish(%struct.sqlite3*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3OomFault(%struct.sqlite3*) unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @dbReallocFinish(%struct.sqlite3*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @apiOomError(%struct.sqlite3*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare signext i8 @et_getdigit(x86_fp80* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @setStrAccumError(%struct.sqlite3_str* nocapture, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_reset(%struct.sqlite3_str* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @getIntArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_value_int64(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare double @getDoubleArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @getTextArg(%struct.PrintfArguments* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @printfTempBuf(%struct.sqlite3_str*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbMallocRaw(%struct.sqlite3*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_vappendf(%struct.sqlite3_str*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_append(%struct.sqlite3_str*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendchar(%struct.sqlite3_str*, i32, i8 signext) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendall(%struct.sqlite3_str*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3StrAccumEnlarge(%struct.sqlite3_str*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @enlargeAndAppend(%struct.sqlite3_str*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @strAccumFinishRealloc(%struct.sqlite3_str* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_str_finish(%struct.sqlite3_str*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_errcode(%struct.sqlite3_str* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_str_length(%struct.sqlite3_str* readonly) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @sqlite3_str_value(%struct.sqlite3_str* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_str* @sqlite3_str_new(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vmprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_mprintf(i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_vsnprintf(i32, i8* returned, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind ssp uwtable
declare void @renderLogMsg(i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_log(i32, i8*, ...) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_str_appendf(%struct.sqlite3_str*, i8*, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @compare2pow63(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable writeonly
declare i32 @putVarint64(i8* nocapture, i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
declare void @logBadConnection(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @strHash(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @insertElement(%struct.Hash* nocapture, %struct._ht*, %struct.HashElem*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @rehash(%struct.Hash* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.HashElem* @findElementWithHash(%struct.Hash* nocapture readonly, i8* nocapture readonly, i32*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @removeElementGivenHash(%struct.Hash* nocapture, %struct.HashElem*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @posixOpen(i8*, i32, i32) #3

declare i32 @"\01_open"(i8*, i32, ...) local_unnamed_addr #12

declare i32 @"\01_close"(i32) #12

; Function Attrs: nofree nounwind
declare i32 @access(i8* nocapture readonly, i32) #9

declare i8* @getcwd(i8*, i64) #12

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #12

declare i32 @"\01_fstat$INODE64"(i32, %struct.stat*) #12

declare i32 @ftruncate(i32, i64) #12

declare i32 @"\01_fcntl"(i32, i32, ...) #12

declare i64 @"\01_read"(i32, i8*, i64) #12

declare i64 @"\01_pread"(i32, i8*, i64, i64) #12

declare i64 @"\01_write"(i32, i8*, i64) #12

declare i64 @"\01_pwrite"(i32, i8*, i64, i64) #12

declare i32 @"\01_fchmod"(i32, i16 zeroext) #12

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) #9

; Function Attrs: nounwind ssp uwtable
declare i32 @openDirectory(i8*, i32* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i16 zeroext) #9

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) #9

declare i32 @fchown(i32, i32, i32) #12

declare i32 @geteuid() #12

declare i8* @"\01_mmap"(i8*, i64, i32, i32, i32, i64) #12

declare i32 @"\01_munmap"(i8*, i64) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetpagesize() #3

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) #9

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #12

; Function Attrs: nounwind ssp uwtable
declare i32 @robustFchown(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @unixSetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly, void ()*) #8

; Function Attrs: nounwind readonly ssp uwtable
declare void ()* @unixGetSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @unixNextSystemCall(%struct.sqlite3_vfs* nocapture readnone, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_open(i8*, i32, i16 zeroext) local_unnamed_addr #3

declare i32* @__error() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixEnterMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixLeaveMutex() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqliteErrorFromPosixError(i32, i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLogErrorAtLine(i32 returned, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @robust_close(%struct.unixFile* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @storeLastErrno(%struct.unixFile* nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @closePendingFds(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseInodeInfo(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findInodeInfo(%struct.unixFile* nocapture, %struct.unixInodeInfo** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @fileHasMoved(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @verifyDbFile(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileLock(%struct.unixFile* nocapture readonly, %struct.flock*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPendingFd(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @posixUnlock(%struct.sqlite3_file*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @closeUnixFile(%struct.sqlite3_file*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixUnmapfile(%struct.unixFile* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixClose(%struct.sqlite3_file*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @nolockCheckReservedLock(%struct.sqlite3_file* nocapture readnone, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockLock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @nolockUnlock(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @nolockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockCheckReservedLock(%struct.sqlite3_file* nocapture readonly, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nofree nounwind
declare i32 @utimes(i8* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @dotlockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @robust_flock(i32, i32) local_unnamed_addr #3

declare i32 @flock(i32, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @flockCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockLock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockUnlock(%struct.sqlite3_file* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flockClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpSetLock(i8*, %struct.unixFile* nocapture, i64, i64, i32) local_unnamed_addr #3

declare i32 @fsctl(i8*, i64, i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpCheckReservedLock(%struct.sqlite3_file* nocapture, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpLock(%struct.sqlite3_file* nocapture, i32) #3

declare i64 @random() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @afpUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @afpClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @nfsUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndRead(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWriteFd(i32, i64, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @seekAndWrite(%struct.unixFile* nocapture, i64, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixWrite(%struct.sqlite3_file* nocapture, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @full_fsync(i32, i32, i32) local_unnamed_addr #3

declare i32 @"\01_fsync"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSync(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileSize(%struct.sqlite3_file* nocapture, i64* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fcntlSizeHint(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixMapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @unixModeBit(%struct.unixFile* nocapture, i8 zeroext, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFileControl(%struct.sqlite3_file*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetTempname(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyFileControl(%struct.sqlite3_file*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDeviceCharacteristics(%struct.unixFile* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixSectorSize(%struct.sqlite3_file* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @unixDeviceCharacteristics(%struct.sqlite3_file* nocapture) #15

declare i64 @sysconf(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmSystemLock(%struct.unixFile* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmRegionPerMap() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmPurge(%struct.unixFile* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixLockSharedMemory(%struct.unixFile* nocapture readonly, %struct.unixShmNode* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpenSharedMemory(%struct.unixFile*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_uri_boolean(i8* readonly, i8* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmMap(%struct.sqlite3_file*, i32, i32, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmLock(%struct.sqlite3_file* nocapture readonly, i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixShmBarrier(%struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixShmUnmap(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @unixRemapfile(%struct.unixFile* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFetch(%struct.sqlite3_file* nocapture, i64, i32, i8** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixUnfetch(%struct.sqlite3_file* nocapture, i64, i8* readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @posixIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nolockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @dotlockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @flockIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @afpIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyClose(%struct.sqlite3_file*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyLock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyUnlock(%struct.sqlite3_file*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCheckReservedLock(%struct.sqlite3_file*, i32*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @proxyIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_io_methods* @nfsIoFinderImpl(i8* nocapture readnone, %struct.unixFile* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_io_methods* @autolockIoFinderImpl(i8*, %struct.unixFile* nocapture readonly) #3

declare i32 @"\01_statfs$INODE64"(i8*, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInUnixFile(%struct.sqlite3_vfs*, i32, %struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

declare void @srandomdev() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i8* @unixTempFileDir() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare %struct.UnixUnusedFd* @findReusableFd(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getFileMode(i8*, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findCreateFileMode(i8*, i32, i16* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_parameter(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @unixOpen(%struct.sqlite3_vfs*, i8*, %struct.sqlite3_file*, i32, i32*) #3

declare i32 @getpid() local_unnamed_addr #12

declare i32 @"\01_fstatfs$INODE64"(i32, %struct.statfs*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTransformUnixFile(%struct.unixFile* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixDelete(%struct.sqlite3_vfs* nocapture readnone, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixAccess(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i32* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @mkFullPathname(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixFullPathname(%struct.sqlite3_vfs* nocapture readnone, i8*, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @unixDlOpen(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i8* @dlopen(i8*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlError(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i8* @dlerror() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void ()* @unixDlSym(%struct.sqlite3_vfs* nocapture readnone, i8*, i8*) #3

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare void @unixDlClose(%struct.sqlite3_vfs* nocapture readnone, i8*) #3

declare i32 @dlclose(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixRandomness(%struct.sqlite3_vfs* nocapture readnone, i32, i8*) #3

declare i64 @time(i64*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixSleep(%struct.sqlite3_vfs* nocapture readnone, i32) #3

declare i32 @"\01_sleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTimeInt64(%struct.sqlite3_vfs* nocapture readnone, i64* nocapture) #3

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @unixCurrentTime(%struct.sqlite3_vfs* nocapture readnone, double* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @unixGetLastError(%struct.sqlite3_vfs* nocapture readnone, i32, i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetLockPath(i8* nocapture readonly, i8*, i64) local_unnamed_addr #3

declare i64 @"\01_confstr"(i32, i8*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateLockPath(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateUnixFile(i8*, %struct.unixFile** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyGetHostID(i8*, i32*) local_unnamed_addr #3

declare i32 @gethostuuid(i8*, %struct.timespec*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyBreakConchLock(%struct.unixFile* readonly, i8* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @__strlcpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyConchLock(%struct.unixFile*, i8* nocapture readonly, i32) local_unnamed_addr #3

declare i32 @"\01_usleep"(i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyTakeConch(%struct.unixFile*) local_unnamed_addr #3

declare i32 @futimes(i32, %struct.timeval*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3DbStrDup(%struct.sqlite3*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyReleaseConch(%struct.unixFile* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @proxyCreateConchPathname(i8*, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @switchLockProxyPath(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @proxyGetDbPathForUnixFile(%struct.unixFile* nocapture readonly, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_os_init() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_os_end() local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcacheManageDirtyList(%struct.PgHdr*, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcacheUnpin(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @numberOfCachePages(%struct.PCache* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree noinline nounwind ssp uwtable
declare %struct.PgHdr* @pcacheFetchFinishWithInit(%struct.PCache*, i32, %struct.sqlite3_pcache_page*) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheMergeDirtyList(%struct.PgHdr*, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr* @pcacheSortDirtyList(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1InitBulk(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pcache1Alloc(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1AllocPage(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1FreePage(%struct.PgHdr1*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1UnderMemoryPressure(%struct.PCache1* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pcache1ResizeHash(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1PinPage(%struct.PgHdr1* returned) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1RemoveFromHash(%struct.PgHdr1*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1EnforceMaxPage(%struct.PCache1* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1TruncateUnsafe(%struct.PCache1* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pcache1Init(i8* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable writeonly
declare void @pcache1Shutdown(i8* nocapture readnone) #20

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache* @pcache1Create(i32, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Destroy(%struct.sqlite3_pcache*) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Cachesize(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Shrink(%struct.sqlite3_pcache* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pcache1Pagecount(%struct.sqlite3_pcache* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchStage2(%struct.PCache1*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.PgHdr1* @pcache1FetchNoMutex(%struct.sqlite3_pcache*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_pcache_page* @pcache1Fetch(%struct.sqlite3_pcache*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Unpin(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pcache1Rekey(%struct.sqlite3_pcache* nocapture, %struct.sqlite3_pcache_page*, i32, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @pcache1Truncate(%struct.sqlite3_pcache* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryAlloc(%struct.RowSet* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntryMerge(%struct.RowSetEntry*, %struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetEntrySort(%struct.RowSetEntry*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @rowSetTreeToList(%struct.RowSetEntry*, %struct.RowSetEntry** nocapture, %struct.RowSetEntry** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetNDeepTree(%struct.RowSetEntry**, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare %struct.RowSetEntry* @rowSetListToTree(%struct.RowSetEntry*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setGetterMethod(%struct.Pager* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @getPageError(%struct.Pager* nocapture readonly, i32, %struct.PgHdr** nocapture, i32) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageMMap(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getPageNormal(%struct.Pager*, i32, %struct.PgHdr** nocapture, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @subjRequiresPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @read32bits(%struct.sqlite3_file*, i64, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @write32bits(%struct.sqlite3_file*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUnlockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerLockDb(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @jrnlBufferSize(%struct.Pager* nocapture readnone) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @readMasterJournal(%struct.sqlite3_file*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @journalHdrOffset(%struct.Pager* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @zeroJournalHdr(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeJournalHdr(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readJournalHdr(%struct.Pager* nocapture, i32, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetPagesize(%struct.Pager* nocapture, i32* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @writeMasterJournal(%struct.Pager* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_reset(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releaseAllSavepoints(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BitvecDestroy(%struct.Bitvec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addToSavepointBitvecs(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BitvecSet(%struct.Bitvec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pager_unlock(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @pager_error(%struct.Pager* nocapture, i32 returned) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pagerFlushOnCommit(%struct.Pager* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_end_transaction(%struct.Pager*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_truncate(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockAndRollback(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerRollback(%struct.Pager*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @pager_cksum(%struct.Pager* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback_one_page(%struct.Pager*, i64* nocapture, %struct.Bitvec*, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3PcacheRelease(%struct.PgHdr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_delmaster(%struct.Pager* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setSectorSize(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_playback(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readDbPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalFindFrame(%struct.Wal* nocapture, i32, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @pager_write_changecounter(%struct.PgHdr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerUndoCallback(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerRollbackWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerWalFrames(%struct.Pager* nocapture, %struct.PgHdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerBeginReadTransaction(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPagecount(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWalIfPresent(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerPlaybackSavepoint(%struct.Pager*, %struct.PagerSavepoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFixMaplimit(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpentemp(%struct.Pager* nocapture readonly, %struct.sqlite3_file*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_wait_on_lock(%struct.Pager* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerSyncHotJournal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerAcquireMapPage(%struct.Pager*, i32, i8*, %struct.PgHdr** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerReleaseMapPage(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerFreeMapHdrs(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @databaseIsUnmoved(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @syncJournal(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write_pagelist(%struct.Pager*, %struct.PgHdr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @openSubJournal(%struct.Pager* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPage(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @subjournalPageIfRequired(%struct.PgHdr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerStress(i8*, %struct.PgHdr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @hasHotJournal(%struct.Pager* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pagerUnlockIfUnused(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_open_journal(%struct.Pager*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerAddPageToRollbackJournal(%struct.PgHdr* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_write(%struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerWriteLargeSector(%struct.PgHdr* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pager_incr_changecounter(%struct.Pager*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @pagerOpenSavepoint(%struct.Pager* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerExclusiveLock(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pagerOpenWal(%struct.Pager* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walIndexPageRealloc(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexPage(%struct.Wal* nocapture, i32, i32** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull %struct.WalCkptInfo* @walCkptInfo(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WalIndexHdr* @walIndexHdr(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare void @walChecksumBytes(i32, i8* readonly, i32, i32* readonly, i32* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walShmBarrier(%struct.Wal* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexWriteHdr(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @walEncodeFrame(%struct.Wal*, i32, i32, i8* readonly, i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @walDecodeFrame(%struct.Wal* nocapture, i32* nocapture, i32* nocapture, i8* readonly, i8* readonly) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockShared(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walLockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walUnlockExclusive(%struct.Wal* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walHash(i32) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walNextHash(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @walHashGet(%struct.Wal* nocapture, i32, %struct.WalHashLoc* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @walFramePage(i32) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walFramePgno(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @walCleanupHash(%struct.Wal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexAppend(%struct.Wal* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexRecover(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIndexClose(%struct.Wal* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @walIteratorNext(%struct.WalIterator* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare void @walMerge(i32* nocapture readonly, i16*, i32, i16** nocapture, i32* nocapture, i16*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @walMergesort(i32* nocapture readonly, i16*, i16*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walIteratorFree(%struct.WalIterator*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIteratorInit(%struct.Wal* nocapture, i32, %struct.WalIterator** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBusyLock(%struct.Wal* nocapture readonly, i32 (i8*)*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @walPagesize(%struct.Wal* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @walRestartHdr(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @walLimitSize(%struct.Wal* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexTryHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walIndexReadHdr(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walBeginShmUnreliable(%struct.Wal*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walTryBeginRead(%struct.Wal*, i32* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRestartLog(%struct.Wal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteToLog(%struct.WalWriter* nocapture readonly, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walWriteOneFrame(%struct.WalWriter* nocapture readonly, %struct.PgHdr* nocapture readonly, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @walRewriteChecksums(%struct.Wal*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @lockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @unlockBtreeMutex(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLockCarefully(%struct.Btree* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeEnterAll(%struct.sqlite3* nocapture) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @btreeLeaveAll(%struct.sqlite3* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_enable_shared_cache(i32) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @querySharedCacheTableLock(%struct.Btree* readonly, i32, i8 zeroext) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @setSharedCacheTableLock(%struct.Btree*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @clearAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @downgradeAllSharedCacheTableLocks(%struct.Btree* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateAllOverflowCache(%struct.BtShared* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @invalidateIncrblobCursors(%struct.Btree* nocapture, i32, i64, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeSetHasContent(%struct.BtShared* nocapture, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreeGetHasContent(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @btreeClearHasContent(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeReleaseAllCursorPages(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageNotNull(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorKey(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @saveAllCursors(%struct.BtShared* nocapture readonly, i32, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @saveCursorsOnList(%struct.BtCursor*, i32, %struct.BtCursor* readnone) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeMoveto(%struct.BtCursor*, i8*, i64, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeRestoreCursorPosition(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @ptrmapPageno(%struct.BtShared* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPut(%struct.BtShared* nocapture readonly, i32, i8 zeroext, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @ptrmapGet(%struct.BtShared* nocapture readonly, i32, i8* nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind ssp uwtable
declare void @btreeParseCellAdjustSizeForOverflow(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) local_unnamed_addr #21

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly, %struct.CellInfo* nocapture) #15

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local zeroext i8 @sqlite3GetVarint(i8* nocapture readonly %p, i64* nocapture %v) unnamed_addr #2 {
entry:
  %0 = load i8, i8* %p, align 1, !tbaa !10
  %cmp = icmp sgt i8 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv2 = zext i8 %0 to i64
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds i8, i8* %p, i64 1
  %1 = load i8, i8* %arrayidx3, align 1, !tbaa !10
  %cmp5 = icmp sgt i8 %1, -1
  %conv9 = zext i8 %0 to i32
  br i1 %cmp5, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.end
  %and = shl nuw nsw i32 %conv9, 7
  %shl = and i32 %and, 16256
  %conv11 = zext i8 %1 to i32
  %or = or i32 %shl, %conv11
  %conv12 = zext i32 %or to i64
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %shl16 = shl nuw nsw i32 %conv9, 14
  %conv18 = zext i8 %1 to i32
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 2
  %2 = load i8, i8* %add.ptr, align 1, !tbaa !10
  %conv19 = zext i8 %2 to i32
  %or20 = or i32 %shl16, %conv19
  %tobool = icmp slt i8 %2, 0
  %and29 = and i32 %or20, 2080895
  br i1 %tobool, label %if.end28, label %if.then22

if.then22:                                        ; preds = %if.end13
  %and24 = shl nuw nsw i32 %conv18, 7
  %shl25 = and i32 %and24, 16256
  %or26 = or i32 %and29, %shl25
  %conv27 = zext i32 %or26 to i64
  br label %cleanup

if.end28:                                         ; preds = %if.end13
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 3
  %shl30 = shl nuw nsw i32 %conv18, 14
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !10
  %conv31 = zext i8 %3 to i32
  %or32 = or i32 %shl30, %conv31
  %tobool34 = icmp slt i8 %3, 0
  %and41 = and i32 %or32, 2080895
  br i1 %tobool34, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end28
  %shl37 = shl nuw nsw i32 %and29, 7
  %or38 = or i32 %and41, %shl37
  %conv39 = zext i32 %or38 to i64
  br label %cleanup

if.end40:                                         ; preds = %if.end28
  %incdec.ptr42 = getelementptr inbounds i8, i8* %p, i64 4
  %shl43 = shl i32 %and29, 14
  %4 = load i8, i8* %incdec.ptr42, align 1, !tbaa !10
  %conv44 = zext i8 %4 to i32
  %or45 = or i32 %shl43, %conv44
  %tobool47 = icmp slt i8 %4, 0
  br i1 %tobool47, label %if.end55, label %if.then48

if.then48:                                        ; preds = %if.end40
  %shl49 = shl nuw nsw i32 %and41, 7
  %or50 = or i32 %or45, %shl49
  %shr = lshr i32 %and29, 18
  %conv51 = zext i32 %shr to i64
  %shl52 = shl nuw nsw i64 %conv51, 32
  %conv53 = zext i32 %or50 to i64
  %or54 = or i64 %shl52, %conv53
  br label %cleanup

if.end55:                                         ; preds = %if.end40
  %shl56 = shl nuw nsw i32 %and29, 7
  %or57 = or i32 %and41, %shl56
  %incdec.ptr58 = getelementptr inbounds i8, i8* %p, i64 5
  %shl59 = shl i32 %and41, 14
  %5 = load i8, i8* %incdec.ptr58, align 1, !tbaa !10
  %conv60 = zext i8 %5 to i32
  %or61 = or i32 %shl59, %conv60
  %tobool63 = icmp slt i8 %5, 0
  br i1 %tobool63, label %if.end73, label %if.then64

if.then64:                                        ; preds = %if.end55
  %and65 = shl i32 %or45, 7
  %shl66 = and i32 %and65, 266354560
  %or67 = or i32 %or61, %shl66
  %shr68 = lshr i32 %or57, 18
  %conv69 = zext i32 %shr68 to i64
  %shl70 = shl nuw nsw i64 %conv69, 32
  %conv71 = zext i32 %or67 to i64
  %or72 = or i64 %shl70, %conv71
  br label %cleanup

if.end73:                                         ; preds = %if.end55
  %incdec.ptr74 = getelementptr inbounds i8, i8* %p, i64 6
  %shl75 = shl i32 %or45, 14
  %6 = load i8, i8* %incdec.ptr74, align 1, !tbaa !10
  %conv76 = zext i8 %6 to i32
  %or77 = or i32 %shl75, %conv76
  %tobool79 = icmp slt i8 %6, 0
  br i1 %tobool79, label %if.end90, label %if.then80

if.then80:                                        ; preds = %if.end73
  %and81 = and i32 %or77, -266354561
  %and82 = shl i32 %or61, 7
  %shl83 = and i32 %and82, 266354560
  %or84 = or i32 %and81, %shl83
  %shr85 = lshr i32 %or57, 11
  %conv86 = zext i32 %shr85 to i64
  %shl87 = shl nuw nsw i64 %conv86, 32
  %conv88 = zext i32 %or84 to i64
  %or89 = or i64 %shl87, %conv88
  br label %cleanup

if.end90:                                         ; preds = %if.end73
  %and91 = and i32 %or77, 2080895
  %incdec.ptr92 = getelementptr inbounds i8, i8* %p, i64 7
  %shl93 = shl i32 %or61, 14
  %7 = load i8, i8* %incdec.ptr92, align 1, !tbaa !10
  %conv94 = zext i8 %7 to i32
  %or95 = or i32 %shl93, %conv94
  %tobool97 = icmp slt i8 %7, 0
  br i1 %tobool97, label %if.end107, label %if.then98

if.then98:                                        ; preds = %if.end90
  %and99 = and i32 %or95, -266354561
  %shl100 = shl nuw nsw i32 %and91, 7
  %or101 = or i32 %and99, %shl100
  %shr102 = lshr i32 %or57, 4
  %conv103 = zext i32 %shr102 to i64
  %shl104 = shl nuw nsw i64 %conv103, 32
  %conv105 = zext i32 %or101 to i64
  %or106 = or i64 %shl104, %conv105
  br label %cleanup

if.end107:                                        ; preds = %if.end90
  %incdec.ptr108 = getelementptr inbounds i8, i8* %p, i64 8
  %shl109 = shl i32 %and91, 15
  %8 = load i8, i8* %incdec.ptr108, align 1, !tbaa !10
  %conv110 = zext i8 %8 to i32
  %and112 = shl i32 %or95, 8
  %shl113 = and i32 %and112, 532709120
  %or111 = or i32 %shl113, %shl109
  %or114 = or i32 %or111, %conv110
  %shl115 = shl nuw i32 %or57, 4
  %9 = lshr i8 %4, 3
  %10 = and i8 %9, 15
  %shr119 = zext i8 %10 to i32
  %or120 = or i32 %shl115, %shr119
  %conv121 = zext i32 %or120 to i64
  %shl122 = shl nuw i64 %conv121, 32
  %conv123 = zext i32 %or114 to i64
  %or124 = or i64 %shl122, %conv123
  br label %cleanup

cleanup:                                          ; preds = %if.end107, %if.then98, %if.then80, %if.then64, %if.then48, %if.then35, %if.then22, %if.then7, %if.then
  %or124.sink = phi i64 [ %or124, %if.end107 ], [ %or106, %if.then98 ], [ %or89, %if.then80 ], [ %or72, %if.then64 ], [ %or54, %if.then48 ], [ %conv39, %if.then35 ], [ %conv27, %if.then22 ], [ %conv12, %if.then7 ], [ %conv2, %if.then ]
  %retval.0 = phi i8 [ 9, %if.end107 ], [ 8, %if.then98 ], [ 7, %if.then80 ], [ 6, %if.then64 ], [ 5, %if.then48 ], [ 4, %if.then35 ], [ 3, %if.then22 ], [ 2, %if.then7 ], [ 1, %if.then ]
  store i64 %or124.sink, i64* %v, align 8, !tbaa !16
  ret i8 %retval.0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtr(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeParseCellPtrIndex(%struct.MemPage* nocapture readonly, i8*, %struct.CellInfo* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @btreeParseCell(%struct.MemPage*, i32, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtr(%struct.MemPage* nocapture readonly, i8*) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare zeroext i16 @cellSizePtrNoPayload(%struct.MemPage* nocapture readnone, i8* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @ptrmapPutOvflPtr(%struct.MemPage*, %struct.MemPage* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @defragmentPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @pageFindSlot(%struct.MemPage* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateSpace(%struct.MemPage*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @freeSpace(%struct.MemPage* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @decodeFlags(%struct.MemPage* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeComputeFreeSpace(%struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeCellSizeCheck(%struct.MemPage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInitPage(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroPage(%struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.MemPage* @btreePageFromDbPage(%struct.PgHdr*, i32, %struct.BtShared*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MemPage* @btreePageLookup(%struct.BtShared*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @btreePagecount(%struct.BtShared* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAndInitPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, %struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePage(%struct.MemPage* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @releasePageOne(%struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeGetUnusedPage(%struct.BtShared*, i32, %struct.MemPage** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pageReinit(%struct.PgHdr* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeInvokeBusyHandler(i8* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @removeFromSharingList(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @allocateTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeTempSpace(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @lockBtree(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSharedLock(%struct.Pager*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @unlockBtreeIfUnused(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @newDatabase(%struct.BtShared* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setChildPtrmaps(%struct.MemPage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @modifyPagePointer(%struct.MemPage*, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @relocatePage(%struct.BtShared*, %struct.MemPage*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @incrVacuumStep(%struct.BtShared*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @allocateBtreePage(%struct.BtShared*, %struct.MemPage** nocapture, i32* nocapture, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @finalDbSize(%struct.BtShared* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @autoVacuumCommit(%struct.BtShared*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeEndTransaction(%struct.Btree*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @btreeSetNPage(%struct.BtShared* nocapture, %struct.MemPage* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursor(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCursorWithLock(%struct.Btree*, i32, i32, %struct.KeyInfo*, %struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @getCellInfo(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @getOverflowPage(%struct.BtShared*, i32, %struct.MemPage**, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @copyPayload(i8*, i8*, i32, i32, %struct.PgHdr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @accessPayload(%struct.BtCursor*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @accessPayloadChecked(%struct.BtCursor*, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @fetchPayload(%struct.BtCursor* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToChild(%struct.BtCursor*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @moveToParent(%struct.BtCursor* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRoot(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToLeftmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @moveToRightmost(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreeNext(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @btreePrevious(%struct.BtCursor*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @freePage2(%struct.BtShared*, %struct.MemPage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freePage(%struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearCell(%struct.MemPage*, i8*, %struct.CellInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @fillInCell(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @dropCell(%struct.MemPage* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @insertCell(%struct.MemPage*, i32, i8*, i32, i8*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @populateCellCache(%struct.CellArray* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare zeroext i16 @computeCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @cachedCellSize(%struct.CellArray* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @rebuildPage(%struct.CellArray* nocapture readonly, i32, i32, %struct.MemPage* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageInsertArray(%struct.MemPage* nocapture readonly, i8*, i8** nocapture, i8* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @pageFreeArray(%struct.MemPage* nocapture, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @editPage(%struct.MemPage*, i32, i32, i32, %struct.CellArray* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_quick(%struct.MemPage*, %struct.MemPage*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @copyNodeContent(%struct.MemPage* nocapture readonly, %struct.MemPage*, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_nonroot(%struct.MemPage*, i32, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance_deeper(%struct.MemPage*, %struct.MemPage** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @anotherValidCursor(%struct.BtCursor* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @balance(%struct.BtCursor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteContent(%struct.MemPage* nocapture readonly, i8*, %struct.BtreePayload* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeOverwriteCell(%struct.BtCursor* nocapture readonly, %struct.BtreePayload* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeCreateTable(%struct.Btree* nocapture, i32* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @clearDatabasePage(%struct.BtShared*, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @btreeDropTable(%struct.Btree*, i32, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkAppendMsg(%struct.IntegrityCk*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setPageReferenced(%struct.IntegrityCk* nocapture readonly, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkRef(%struct.IntegrityCk*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkPtrmap(%struct.IntegrityCk*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @checkList(%struct.IntegrityCk*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @btreeHeapInsert(i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @btreeHeapPull(i32* nocapture, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @checkTreePage(%struct.IntegrityCk*, i32, i64* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Btree* @findBtree(%struct.sqlite3*, %struct.sqlite3*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTempDatabase(%struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorWithMsg(%struct.sqlite3*, i32, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setDestPgsz(%struct.sqlite3_backup* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetPageSize(%struct.Btree* nocapture, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @checkReadTransaction(%struct.sqlite3*, %struct.Btree* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_backup* @sqlite3_backup_init(%struct.sqlite3*, i8*, %struct.sqlite3*, i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @isFatalError(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @backupOnePage(%struct.sqlite3_backup* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @backupTruncateFile(%struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @attachBackupObject(%struct.sqlite3_backup*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_step(%struct.sqlite3_backup*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ResetAllSchemasOfConnection(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerCommitPhaseOne(%struct.Pager*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseTwo(%struct.Btree*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeCommitPhaseOne(%struct.Btree* nocapture, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_backup_finish(%struct.sqlite3_backup*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeRollback(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3LeaveMutexAndCloseZombie(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_remaining(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_backup_pagecount(%struct.sqlite3_backup* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare void @backupUpdate(%struct.sqlite3_backup* nocapture, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMemRenderNum(i32, i8*, %struct.sqlite3_value* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeMemAddTerminator(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeMemClear(%struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define i64 @doubleToInt64(double %r) local_unnamed_addr #22 {
entry:
  %cmp = fcmp ugt double %r, 0xC3E0000000000000
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult double %r, 0x43E0000000000000
  br i1 %cmp1, label %if.else3, label %return

if.else3:                                         ; preds = %if.else
  %conv = fptosi double %r to i64
  br label %return

return:                                           ; preds = %if.else3, %if.else, %entry
  %retval.0 = phi i64 [ %conv, %if.else3 ], [ -9223372036854775808, %entry ], [ 9223372036854775807, %if.else ]
  ret i64 %retval.0
}

; Function Attrs: noinline nounwind ssp uwtable
declare i64 @memIntValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define dso_local i32 @sqlite3Atoi64(i8* readonly %zNum, i64* nocapture %pNum, i32 %length, i8 zeroext %enc) unnamed_addr #2 {
entry:
  %conv = zext i8 %enc to i32
  %cmp = icmp eq i8 %enc, 1
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %sub = sub nsw i32 3, %conv
  %cmp3255 = icmp slt i32 %sub, %length
  br i1 %cmp3255, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %if.else
  %0 = sext i32 %sub to i64
  %1 = sext i32 %length to i64
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc, %land.rhs.preheader
  %indvars.iv266 = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next267, %for.inc ]
  %i.0256 = phi i32 [ %sub, %land.rhs.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds i8, i8* %zNum, i64 %indvars.iv266
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !10
  %cmp6 = icmp eq i8 %2, 0
  br i1 %cmp6, label %for.inc, label %for.end.loopexit.split.loop.exit295

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next267 = add i64 %indvars.iv266, 2
  %add = add nsw i32 %i.0256, 2
  %cmp3 = icmp slt i64 %indvars.iv.next267, %1
  br i1 %cmp3, label %land.rhs, label %for.end

for.end.loopexit.split.loop.exit295:              ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv266 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.split.loop.exit295, %for.inc, %if.else
  %i.0.lcssa = phi i32 [ %sub, %if.else ], [ %3, %for.end.loopexit.split.loop.exit295 ], [ %add, %for.inc ]
  %cmp3.lcssa = phi i32 [ 0, %if.else ], [ 1, %for.end.loopexit.split.loop.exit295 ], [ 0, %for.inc ]
  %xor = xor i32 %i.0.lcssa, 1
  %and = and i32 %conv, 1
  %idx.ext13 = zext i32 %and to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext13
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %zNum.addr.0 = phi i8* [ %add.ptr14, %for.end ], [ %zNum, %entry ]
  %incr.0 = phi i32 [ 2, %for.end ], [ 1, %entry ]
  %nonNum.0 = phi i32 [ %cmp3.lcssa, %for.end ], [ 0, %entry ]
  %idx.ext.pn.in = phi i32 [ %xor, %for.end ], [ %length, %entry ]
  %idx.ext.pn = sext i32 %idx.ext.pn.in to i64
  %zEnd.0 = getelementptr inbounds i8, i8* %zNum, i64 %idx.ext.pn
  %cmp15252 = icmp ult i8* %zNum.addr.0, %zEnd.0
  br i1 %cmp15252, label %land.rhs17.lr.ph, label %if.end43

land.rhs17.lr.ph:                                 ; preds = %if.end
  %idx.ext23 = zext i32 %incr.0 to i64
  br label %land.rhs17

land.rhs17:                                       ; preds = %while.body, %land.rhs17.lr.ph
  %zNum.addr.1253 = phi i8* [ %zNum.addr.0, %land.rhs17.lr.ph ], [ %add.ptr24, %while.body ]
  %4 = load i8, i8* %zNum.addr.1253, align 1, !tbaa !10
  %idxprom18 = zext i8 %4 to i64
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom18
  %5 = load i8, i8* %arrayidx19, align 1, !tbaa !10
  %6 = and i8 %5, 1
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.then27, label %while.body

while.body:                                       ; preds = %land.rhs17
  %add.ptr24 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  %cmp15 = icmp ult i8* %add.ptr24, %zEnd.0
  br i1 %cmp15, label %land.rhs17, label %if.end43

if.then27:                                        ; preds = %land.rhs17
  switch i8 %4, label %if.end43 [
    i8 45, label %if.then31
    i8 43, label %if.then38
  ]

if.then31:                                        ; preds = %if.then27
  %add.ptr33 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.then38:                                        ; preds = %if.then27
  %add.ptr40 = getelementptr inbounds i8, i8* %zNum.addr.1253, i64 %idx.ext23
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.then31, %if.then27, %while.body, %if.end
  %zNum.addr.2 = phi i8* [ %add.ptr33, %if.then31 ], [ %add.ptr40, %if.then38 ], [ %zNum.addr.1253, %if.then27 ], [ %zNum.addr.0, %if.end ], [ %add.ptr24, %while.body ]
  %neg.0 = phi i32 [ 1, %if.then31 ], [ 0, %if.then38 ], [ 0, %if.then27 ], [ 0, %if.end ], [ 0, %while.body ]
  %cmp45248 = icmp ult i8* %zNum.addr.2, %zEnd.0
  br i1 %cmp45248, label %land.rhs47.lr.ph, label %while.end56

land.rhs47.lr.ph:                                 ; preds = %if.end43
  %idx.ext54 = zext i32 %incr.0 to i64
  br label %land.rhs47

land.rhs47:                                       ; preds = %while.body53, %land.rhs47.lr.ph
  %zNum.addr.3249 = phi i8* [ %zNum.addr.2, %land.rhs47.lr.ph ], [ %add.ptr55, %while.body53 ]
  %7 = load i8, i8* %zNum.addr.3249, align 1, !tbaa !10
  %cmp50 = icmp eq i8 %7, 48
  br i1 %cmp50, label %while.body53, label %while.end56

while.body53:                                     ; preds = %land.rhs47
  %add.ptr55 = getelementptr inbounds i8, i8* %zNum.addr.3249, i64 %idx.ext54
  %cmp45 = icmp ult i8* %add.ptr55, %zEnd.0
  br i1 %cmp45, label %land.rhs47, label %while.end56

while.end56:                                      ; preds = %while.body53, %land.rhs47, %if.end43
  %zNum.addr.3.lcssa = phi i8* [ %zNum.addr.2, %if.end43 ], [ %add.ptr55, %while.body53 ], [ %zNum.addr.3249, %land.rhs47 ]
  %cmp60238 = icmp ult i8* %zNum.addr.3.lcssa, %zEnd.0
  br i1 %cmp60238, label %land.end70.preheader, label %for.end77.thread

for.end77.thread:                                 ; preds = %while.end56
  %tobool81272 = icmp eq i32 %neg.0, 0
  br i1 %tobool81272, label %if.end88, label %if.then84

land.end70.preheader:                             ; preds = %while.end56
  %8 = zext i32 %incr.0 to i64
  br label %land.end70

land.end70:                                       ; preds = %for.body71, %land.end70.preheader
  %indvars.iv264 = phi i64 [ 0, %land.end70.preheader ], [ %indvars.iv.next265, %for.body71 ]
  %arrayidx59241 = phi i8* [ %zNum.addr.3.lcssa, %land.end70.preheader ], [ %arrayidx59, %for.body71 ]
  %i.1240 = phi i32 [ 0, %land.end70.preheader ], [ %add76, %for.body71 ]
  %u.0239 = phi i64 [ 0, %land.end70.preheader ], [ %sub74, %for.body71 ]
  %9 = load i8, i8* %arrayidx59241, align 1, !tbaa !10
  %.off = add i8 %9, -48
  %10 = icmp ult i8 %.off, 10
  br i1 %10, label %for.body71, label %for.end77.split.loop.exit

for.body71:                                       ; preds = %land.end70
  %mul = mul i64 %u.0239, 10
  %conv72288 = zext i8 %9 to i64
  %add73 = add i64 %mul, -48
  %sub74 = add i64 %add73, %conv72288
  %indvars.iv.next265 = add i64 %indvars.iv264, %8
  %add76 = add nuw nsw i32 %i.1240, %incr.0
  %arrayidx59 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next265
  %cmp60 = icmp ult i8* %arrayidx59, %zEnd.0
  br i1 %cmp60, label %land.end70, label %for.end77

for.end77.split.loop.exit:                        ; preds = %land.end70
  %11 = trunc i64 %indvars.iv264 to i32
  br label %for.end77

for.end77:                                        ; preds = %for.end77.split.loop.exit, %for.body71
  %u.0.lcssa = phi i64 [ %u.0239, %for.end77.split.loop.exit ], [ %sub74, %for.body71 ]
  %i.1.lcssa = phi i32 [ %11, %for.end77.split.loop.exit ], [ %add76, %for.body71 ]
  %cmp60.lcssa = phi i1 [ true, %for.end77.split.loop.exit ], [ false, %for.body71 ]
  %cmp78 = icmp slt i64 %u.0.lcssa, 0
  %tobool81 = icmp ne i32 %neg.0, 0
  br i1 %cmp78, label %if.then80, label %if.else82

if.then80:                                        ; preds = %for.end77
  %cond = select i1 %tobool81, i64 -9223372036854775808, i64 9223372036854775807
  br label %if.end88

if.else82:                                        ; preds = %for.end77
  br i1 %tobool81, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.else82, %for.end77.thread
  %u.0.lcssa273286 = phi i64 [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %i.1.lcssa275284 = phi i32 [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  %cmp60.lcssa277282 = phi i1 [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %sub85 = sub nsw i64 0, %u.0.lcssa273286
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.else82, %if.then80, %for.end77.thread
  %sub85.sink = phi i64 [ %sub85, %if.then84 ], [ %cond, %if.then80 ], [ 0, %for.end77.thread ], [ %u.0.lcssa, %if.else82 ]
  %tobool81279 = phi i1 [ true, %if.then84 ], [ %tobool81, %if.then80 ], [ false, %for.end77.thread ], [ false, %if.else82 ]
  %cmp60.lcssa276 = phi i1 [ %cmp60.lcssa277282, %if.then84 ], [ %cmp60.lcssa, %if.then80 ], [ false, %for.end77.thread ], [ %cmp60.lcssa, %if.else82 ]
  %i.1.lcssa274 = phi i32 [ %i.1.lcssa275284, %if.then84 ], [ %i.1.lcssa, %if.then80 ], [ 0, %for.end77.thread ], [ %i.1.lcssa, %if.else82 ]
  store i64 %sub85.sink, i64* %pNum, align 8, !tbaa !16
  %cmp89 = icmp eq i32 %i.1.lcssa274, 0
  %cmp92 = icmp eq i8* %zNum.addr.2, %zNum.addr.3.lcssa
  %or.cond = and i1 %cmp92, %cmp89
  br i1 %or.cond, label %if.end120, label %if.else95

if.else95:                                        ; preds = %if.end88
  %tobool96 = icmp ne i32 %nonNum.0, 0
  %cmp60.not = xor i1 %cmp60.lcssa276, true
  %brmerge = or i1 %tobool96, %cmp60.not
  br i1 %brmerge, label %if.end120, label %do.body.preheader

do.body.preheader:                                ; preds = %if.else95
  %12 = zext i32 %i.1.lcssa274 to i64
  %13 = zext i32 %incr.0 to i64
  br label %do.body

do.body:                                          ; preds = %if.end112, %do.body.preheader
  %indvars.iv = phi i64 [ %12, %do.body.preheader ], [ %indvars.iv.next, %if.end112 ]
  %arrayidx105 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv
  %14 = load i8, i8* %arrayidx105, align 1, !tbaa !10
  %idxprom106 = zext i8 %14 to i64
  %arrayidx107 = getelementptr inbounds [256 x i8], [256 x i8]* @sqlite3CtypeMap, i64 0, i64 %idxprom106
  %15 = load i8, i8* %arrayidx107, align 1, !tbaa !10
  %16 = and i8 %15, 1
  %tobool110 = icmp eq i8 %16, 0
  br i1 %tobool110, label %if.end120, label %if.end112

if.end112:                                        ; preds = %do.body
  %indvars.iv.next = add i64 %indvars.iv, %13
  %arrayidx115 = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %indvars.iv.next
  %cmp116 = icmp ult i8* %arrayidx115, %zEnd.0
  br i1 %cmp116, label %do.body, label %if.end120

if.end120:                                        ; preds = %if.end112, %do.body, %if.else95, %if.end88
  %rc.1 = phi i32 [ -1, %if.end88 ], [ %nonNum.0, %if.else95 ], [ 1, %do.body ], [ 0, %if.end112 ]
  %mul121 = mul nuw nsw i32 %incr.0, 19
  %cmp122 = icmp ult i32 %i.1.lcssa274, %mul121
  br i1 %cmp122, label %cleanup, label %if.else125

if.else125:                                       ; preds = %if.end120
  %cmp127 = icmp ugt i32 %i.1.lcssa274, %mul121
  br i1 %cmp127, label %if.else133.thread, label %cond.false

if.else133.thread:                                ; preds = %if.else125
  %cond135233 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135233, i64* %pNum, align 8, !tbaa !16
  br label %cleanup

cond.false:                                       ; preds = %if.else125
  %17 = zext i32 %incr.0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %cond.false
  %indvars.iv.i = phi i64 [ 0, %cond.false ], [ %indvars.iv.next.i, %for.body.i ]
  %18 = mul nuw nsw i64 %indvars.iv.i, %17
  %arrayidx.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %18
  %19 = load i8, i8* %arrayidx.i, align 1, !tbaa !10
  %conv.i = sext i8 %19 to i32
  %arrayidx3.i = getelementptr inbounds [19 x i8], [19 x i8]* @.str.33, i64 0, i64 %indvars.iv.i
  %20 = load i8, i8* %arrayidx3.i, align 1, !tbaa !10
  %conv4.i = sext i8 %20 to i32
  %sub.i = sub nsw i32 %conv.i, %conv4.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.i = icmp eq i32 %sub.i, 0
  %cmp1.i = icmp ult i64 %indvars.iv.i, 17
  %21 = and i1 %cmp1.i, %cmp.i
  br i1 %21, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i
  %mul5.i = mul nsw i32 %sub.i, 10
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %for.end.i
  %mul8.i = mul nuw nsw i32 %incr.0, 18
  %idxprom9.i = zext i32 %mul8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, i8* %zNum.addr.3.lcssa, i64 %idxprom9.i
  %22 = load i8, i8* %arrayidx10.i, align 1, !tbaa !10
  %conv11.i = sext i8 %22 to i32
  %sub12.i = add nsw i32 %conv11.i, -56
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %for.end.i
  %cond129 = phi i32 [ %sub12.i, %if.then.i ], [ %mul5.i, %for.end.i ]
  %cmp130 = icmp slt i32 %cond129, 0
  br i1 %cmp130, label %cleanup, label %if.else133

if.else133:                                       ; preds = %cond.end
  %cond135 = select i1 %tobool81279, i64 -9223372036854775808, i64 9223372036854775807
  store i64 %cond135, i64* %pNum, align 8, !tbaa !16
  %cmp136 = icmp eq i32 %cond129, 0
  %cond144 = select i1 %tobool81279, i32 %rc.1, i32 3
  %spec.select236 = select i1 %cmp136, i32 %cond144, i32 2
  ret i32 %spec.select236

cleanup:                                          ; preds = %cond.end, %if.else133.thread, %if.end120
  %23 = phi i32 [ 2, %if.else133.thread ], [ %rc.1, %cond.end ], [ %rc.1, %if.end120 ]
  ret i32 %23
}

; Function Attrs: noinline nounwind ssp uwtable
declare double @memRealValue(%struct.sqlite3_value* nocapture readonly) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeReleaseAndSetInt64(%struct.sqlite3_value*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeClrCopy(%struct.sqlite3_value*, %struct.sqlite3_value*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @valueToText(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @valueNew(%struct.sqlite3*, %struct.ValueNewStat4Ctx* nocapture readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @valueFromExpr(%struct.sqlite3*, %struct.Expr* nocapture readonly, i8 zeroext, i8 zeroext, %struct.sqlite3_value** nocapture, %struct.ValueNewStat4Ctx* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MPrintf(%struct.sqlite3*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMemNumerify(%struct.sqlite3_value* nocapture) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @valueBytes(%struct.sqlite3_value*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @growOpArray(%struct.Vdbe* nocapture, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @growOp3(%struct.Vdbe* nocapture, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp3(%struct.Vdbe*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @resizeResolveLabel(%struct.Parse* nocapture, %struct.Vdbe* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @resolveP2Values(%struct.Vdbe* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @freeEphemeralFunction(%struct.sqlite3*, %struct.FuncDef*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4Mem(%struct.sqlite3*, %struct.sqlite3_value*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
declare void @freeP4FuncCtx(%struct.sqlite3*, %struct.sqlite3_context*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @freeP4(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeFreeOpArray(%struct.sqlite3*, %struct.VdbeOp*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeChangeP4Full(%struct.Vdbe* nocapture readonly, %struct.VdbeOp*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeChangeP4(%struct.Vdbe*, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @displayP4(%struct.VdbeOp* nocapture readonly, i8*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @vdbeLeave(%struct.Vdbe* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @initMemArray(%struct.sqlite3_value* nocapture, i32, %struct.sqlite3*, i16 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @releaseMemArray(%struct.sqlite3_value*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @allocSpace(%struct.ReusableSpace* nocapture, i8* readnone, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @closeCursorsInFrame(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @closeAllCursors(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFrameRestore(%struct.VdbeFrame* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCommit(%struct.sqlite3*, %struct.Vdbe* nocapture readnone) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @vdbeCloseStatement(%struct.Vdbe* nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSavepoint(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @handleMovedCursor(%struct.VdbeCursor* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @serialGet(i8* nocapture readonly, i32, %struct.sqlite3_value*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeCompareMemString(%struct.sqlite3_value*, %struct.sqlite3_value*, %struct.CollSeq* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isAllZero(i8* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @vdbeRecordDecodeInt(i32, i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareInt(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompare(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeRecordCompareWithSkip(i32, i8*, %struct.UnpackedRecord*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeRecordCompareString(i32, i8*, %struct.UnpackedRecord*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_expired(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafety(%struct.Vdbe* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSafetyNotNull(%struct.Vdbe* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_finalize(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_reset(%struct.sqlite3_stmt*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeReset(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_clear_bindings(%struct.sqlite3_stmt* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_blob(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_bytes16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_int(%struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_subtype(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_value_pointer(%struct.sqlite3_value* nocapture readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16be(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_value_text16le(%struct.sqlite3_value*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_nochange(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_value_frombind(%struct.sqlite3_value* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_value_dup(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_value_free(%struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @setResultStrOrError(%struct.sqlite3_context* nocapture, i8*, i32, i8 zeroext, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @invokeValueDestructor(i8*, void (i8*)*, %struct.sqlite3_context*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error16(%struct.sqlite3_context* nocapture, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_int64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_null(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_pointer(%struct.sqlite3_context* nocapture readonly, i8*, i8*, void (i8*)*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_result_subtype(%struct.sqlite3_context* nocapture readonly, i32) #15

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16be(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_text16le(%struct.sqlite3_context* nocapture, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_value(%struct.sqlite3_context* nocapture readonly, %struct.sqlite3_value*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_zeroblob(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_result_zeroblob64(%struct.sqlite3_context* nocapture readonly, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_result_error_code(%struct.sqlite3_context* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @doWalCallbacks(%struct.sqlite3*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_step(%struct.sqlite3_stmt*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_user_data(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_vtab_nochange(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare i8* @createAggContext(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_aggregate_context(%struct.sqlite3_context* nocapture readonly, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_get_auxdata(%struct.sqlite3_context* nocapture readonly, i32) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_auxdata(%struct.sqlite3_context* nocapture, i32, i8*, void (i8*)*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_aggregate_count(%struct.sqlite3_context* nocapture readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_column_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_data_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare nonnull %struct.sqlite3_value* @columnNullValue() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @columnMem(%struct.sqlite3_stmt* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @columnMallocFailure(%struct.sqlite3_stmt*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_blob(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare double @sqlite3_column_double(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_int(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_column_int64(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @sqlite3_column_value(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_text16(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_column_type(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @columnName(%struct.sqlite3_stmt* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_name16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_column_decltype16(%struct.sqlite3_stmt* readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeUnbind(%struct.Vdbe*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @bindText(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_blob64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_int64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_null(%struct.sqlite3_stmt*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_pointer(%struct.sqlite3_stmt*, i32, i8*, i8*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text64(%struct.sqlite3_stmt*, i32, i8*, i64, void (i8*)*, i8 zeroext) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_value(%struct.sqlite3_stmt*, i32, %struct.sqlite3_value* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_bind_zeroblob64(%struct.sqlite3_stmt*, i32, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_count(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_bind_parameter_name(%struct.sqlite3_stmt* readonly, i32) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_bind_parameter_index(%struct.sqlite3_stmt* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_transfer_bindings(%struct.sqlite3_stmt* nocapture, %struct.sqlite3_stmt* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3* @sqlite3_db_handle(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_readonly(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_isexplain(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_stmt_busy(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_stmt* @sqlite3_next_stmt(%struct.sqlite3* nocapture readonly, %struct.sqlite3_stmt* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_stmt_status(%struct.sqlite3_stmt*, i32, i32) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_sql(%struct.sqlite3_stmt* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare noalias i8* @sqlite3_expanded_sql(%struct.sqlite3_stmt* nocapture readnone) #11

; Function Attrs: alwaysinline nofree norecurse nounwind ssp uwtable
define i32 @alsoAnInt(%struct.sqlite3_value* nocapture readonly %pRec, double %rValue, i64* nocapture %piValue) local_unnamed_addr #2 {
entry:
  %conv = fptosi double %rValue to i64
  %cmp.i = fcmp oeq double %rValue, 0.000000e+00
  br i1 %cmp.i, label %if.then, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %entry
  %conv.i = sitofp i64 %conv to double
  %0 = bitcast double %conv.i to i64
  %1 = bitcast double %rValue to i64
  %2 = icmp ne i64 %1, %0
  %conv.off = add i64 %conv, 2251799813685248
  %3 = icmp ugt i64 %conv.off, 4503599627370495
  %4 = or i1 %3, %2
  br i1 %4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.rhs.i, %entry
  store i64 %conv, i64* %piValue, align 8, !tbaa !16
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  %z = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 5
  %5 = load i8*, i8** %z, align 8, !tbaa !26
  %n = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 4
  %6 = load i32, i32* %n, align 4, !tbaa !29
  %enc = getelementptr inbounds %struct.sqlite3_value, %struct.sqlite3_value* %pRec, i64 0, i32 2
  %7 = load i8, i8* %enc, align 2, !tbaa !21
  %call1 = call i32 @sqlite3Atoi64(i8* %5, i64* %piValue, i32 %6, i8 zeroext %7)
  %cmp = icmp eq i32 %call1, 0
  %conv2 = zext i1 %cmp to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %conv2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_value_numeric_type(%struct.sqlite3_value* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare %struct.sqlite3_value* @out2Prerelease(%struct.Vdbe* nocapture readonly, %struct.VdbeOp* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobSeekToRow(%struct.Incrblob* nocapture, i64, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeExec(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_open(%struct.sqlite3*, i8*, i8*, i8*, i64, i32, %struct.sqlite3_blob** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ErrorMsg(%struct.Parse* nocapture, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMakeReady(%struct.Vdbe*, %struct.Parse* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_close(%struct.sqlite3_blob*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @blobReadWrite(%struct.sqlite3_blob*, i8*, i32, i32, i32 (%struct.BtCursor*, i32, i32, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_read(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePayloadChecked(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_write(%struct.sqlite3_blob*, i8*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreePutData(%struct.BtCursor*, i32, i32, i8*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_blob_bytes(%struct.sqlite3_blob* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_blob_reopen(%struct.sqlite3_blob*, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaReaderClear(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeIncrFree(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadBlob(%struct.PmaReader* nocapture, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReadVarint(%struct.PmaReader* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMapFile(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderSeek(%struct.SortSubtask* nocapture readonly, %struct.PmaReader*, %struct.SorterFile* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderNext(%struct.PmaReader*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrSwap(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderInit(%struct.SortSubtask* nocapture readonly, %struct.SorterFile* nocapture readonly, i64, %struct.PmaReader*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareTail(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompare(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareText(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCompareInt(%struct.SortSubtask* nocapture readonly, i32* nocapture, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterRecordFree(%struct.sqlite3*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSortSubtaskCleanup(%struct.sqlite3*, %struct.SortSubtask*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinThread(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterCreateThread(%struct.SortSubtask* nocapture, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterJoinAll(%struct.VdbeSorter* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.MergeEngine* @vdbeMergeEngineNew(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineFree(%struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbeSorterExtendFile(%struct.sqlite3* nocapture readonly, %struct.sqlite3_file*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterOpenTempFile(%struct.sqlite3* nocapture readonly, i64, %struct.sqlite3_file** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSortAllocUnpacked(%struct.SortSubtask* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SorterRecord* @vdbeSorterMerge(%struct.SortSubtask*, %struct.SorterRecord*, %struct.SorterRecord*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare nonnull i32 (%struct.SortSubtask*, i32*, i8*, i32, i8*, i32)* @vdbeSorterGetCompare(%struct.VdbeSorter* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSort(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriterInit(%struct.sqlite3_file*, %struct.PmaWriter*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteBlob(%struct.PmaWriter* nocapture, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaWriterFinish(%struct.PmaWriter*, i64* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @vdbePmaWriteVarint(%struct.PmaWriter* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterListToPMA(%struct.SortSubtask*, %struct.SorterList* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineStep(%struct.MergeEngine* nocapture readonly, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeSorterFlushThread(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterFlushPMA(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrPopulate(%struct.IncrMerger* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbeIncrPopulateThread(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrBgPopulate(%struct.IncrMerger*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeIncrMergerNew(%struct.SortSubtask*, %struct.MergeEngine*, %struct.IncrMerger** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @vdbeIncrMergerSetThreads(%struct.IncrMerger* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @vdbeMergeEngineCompare(%struct.MergeEngine* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineInit(%struct.SortSubtask*, %struct.MergeEngine* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbePmaReaderIncrMergeInit(%struct.PmaReader*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @vdbePmaReaderBgIncrInit(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeMergeEngineLevel0(%struct.SortSubtask* nocapture readonly, i32, i64* nocapture, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @vdbeSorterTreeDepth(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterAddToTree(%struct.SortSubtask*, i32, i32, %struct.MergeEngine* nocapture readonly, %struct.MergeEngine*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterMergeTreeBuild(%struct.VdbeSorter*, %struct.MergeEngine** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @vdbeSorterSetupMerge(%struct.VdbeSorter*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i8* @vdbeSorterRowkey(%struct.VdbeSorter* nocapture readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @memjrnlRead(%struct.sqlite3_file* nocapture, i8*, i32, i64) #8

; Function Attrs: nounwind ssp uwtable
declare void @memjrnlFreeChunks(%struct.MemJournal* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlCreateFile(%struct.MemJournal*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlWrite(%struct.sqlite3_file*, i8*, i32, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlTruncate(%struct.sqlite3_file* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @memjrnlClose(%struct.sqlite3_file* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @memjrnlSync(%struct.sqlite3_file* nocapture readnone, i32) #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @memjrnlFileSize(%struct.sqlite3_file* nocapture readonly, i64* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @walkWindowList(%struct.Walker*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @walkExpr(%struct.Walker*, %struct.Expr*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelect(%struct.Walker*, %struct.Select*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @incrAggDepth(%struct.Walker* nocapture readonly, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare void @incrAggFunctionDepth(%struct.Expr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveAlias(%struct.Parse* nocapture readonly, %struct.ExprList* nocapture readonly, i32, %struct.Expr*, i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nameInUsingClause(%struct.IdList* readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @areDoubleQuotedStringsEnabled(%struct.sqlite3* nocapture readonly, %struct.NameContext* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @lookupName(%struct.Parse*, i8*, i8*, i8*, %struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3MatchEName(%struct.ExprList_item* nocapture readonly, i8* readonly, i8* readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @notValidImpl(%struct.Parse* nocapture, %struct.NameContext* nocapture readonly, i8*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprProbability(%struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveExprStep(%struct.Walker*, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.FuncDef* @sqlite3FindFunction(%struct.sqlite3*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @resolveAsName(%struct.Parse* nocapture readnone, %struct.ExprList* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderByTermToExprList(%struct.Parse*, %struct.Select* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCompare(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resolveOutOfRangeError(%struct.Parse* nocapture, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveCompoundOrderBy(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprIsInteger(%struct.Expr* readonly, i32* nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @resolveRemoveWindowsCb(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare void @windowRemoveExprFromSelect(%struct.Select*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveOrderGroupBy(%struct.NameContext*, %struct.Select*, %struct.ExprList*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ResolveOrderGroupBy(%struct.Parse* nocapture, %struct.Select* nocapture readonly, %struct.ExprList* readonly, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveSelectStep(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectPrep(%struct.Parse*, %struct.Select*, %struct.NameContext*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare signext i8 @comparisonAffinity(%struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local signext i8 @sqlite3ExprAffinity(%struct.Expr* nocapture readonly) unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare zeroext i8 @binaryCompareP5(%struct.Expr* nocapture readonly, %struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @codeCompare(%struct.Parse* nocapture, %struct.Expr*, %struct.Expr*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeAddOp4(%struct.Vdbe*, i32, i32, i32, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeSubselect(%struct.Parse*, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CodeSubselect(%struct.Parse*, %struct.Expr* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprVectorRegister(%struct.Parse*, %struct.Expr*, i32, i32, %struct.Expr** nocapture, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTemp(%struct.Parse*, %struct.Expr*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeVectorCompare(%struct.Parse*, %struct.Expr* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExpr(%struct.Expr* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfExprList(%struct.ExprList* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @heightOfSelect(%struct.Select* readonly, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @exprSetHeight(%struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @exprStructSize(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @dupedExprStructSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprNodeSize(%struct.Expr* nocapture readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @dupedExprSize(%struct.Expr* readonly, i32) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprDup(%struct.sqlite3*, %struct.Expr*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectDup(%struct.sqlite3*, %struct.Select* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListDup(%struct.sqlite3*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowDup(%struct.sqlite3*, %struct.Expr*, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.With* @withDup(%struct.sqlite3*, %struct.With* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @gatherSelectWindowsCallback(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @gatherSelectWindowsSelectCallback(%struct.Walker* nocapture readonly, %struct.Select* readnone) #7

; Function Attrs: nounwind ssp uwtable
declare void @gatherSelectWindows(%struct.Select*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @exprListDeleteNN(%struct.sqlite3*, %struct.ExprList*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsConstant(%struct.Walker* nocapture, %struct.Expr* nocapture) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsConst(%struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare dso_local i32 @sqlite3SelectWalkFail(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #10

; Function Attrs: nounwind ssp uwtable
declare i32 @exprNodeIsConstantOrGroupBy(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @isCandidateForInOpt(%struct.Expr* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i8* @exprINAffinity(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeReal(%struct.Vdbe* nocapture, i8* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeInteger(%struct.Parse* nocapture, %struct.Expr* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3DecOrHexToI64(i8* readonly, i64*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @exprToRegister(%struct.Expr*, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeVector(%struct.Parse*, %struct.Expr*, i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @setDoNotMergeFlagOnCopy(%struct.Vdbe* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCodeInlineFunction(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCode(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeTarget(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesExpr(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprImpliesNonNullRow(%struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprCodeBetween(%struct.Parse*, %struct.Expr* nocapture readonly, i32, void (%struct.Parse*, %struct.Expr*, i32, i32)*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprCompareVariable(%struct.Parse* nocapture readonly, %struct.Expr* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @exprImpliesNotNull(%struct.Parse*, %struct.Expr* readonly, %struct.Expr* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @impliesNotNullRow(%struct.Walker*, %struct.Expr* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprIdxCover(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprSrcCount(%struct.Walker* nocapture readonly, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoColumn(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @addAggInfoFunc(%struct.sqlite3*, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeAggregate(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @analyzeAggregatesInSelect(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @analyzeAggregatesInSelectEnd(%struct.Walker* nocapture, %struct.Select* nocapture readnone) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @isAlterableTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTestSchema(%struct.Parse*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3NestedParse(%struct.Parse*, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameReloadSchema(%struct.Parse* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @isRealTable(%struct.Parse* nocapture, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameUnmapExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readnone) #15

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkWith(%struct.Walker*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameUnmapSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTokenFree(%struct.sqlite3*, %struct.RenameToken*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameTokenFind(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, i8* readnone) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameColumnSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameColumnExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.RenameToken* @renameColumnTokenNext(%struct.RenameCtx* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnParseError(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value*, %struct.sqlite3_value*, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnElistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.ExprList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @renameColumnIdlistNames(%struct.Parse* nocapture, %struct.RenameCtx* nocapture, %struct.IdList* readonly, i8* readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameParseSql(%struct.Parse*, i8* readonly, %struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3RunParser(%struct.Parse*, i8*, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameEditSql(%struct.sqlite3_context* nocapture, %struct.RenameCtx* nocapture, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @renameResolveTrigger(%struct.Parse*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare dso_local %struct.Table* @sqlite3FindTable(%struct.sqlite3* nocapture readonly, i8* nocapture readonly, i8* readonly) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ViewGetColumnNames(%struct.Parse*, %struct.Table* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameWalkTrigger(%struct.Walker*, %struct.Trigger* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameParseCleanup(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @renameColumnFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @renameTableExprCb(%struct.Walker* nocapture readonly, %struct.Expr* readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @renameTableSelectCb(%struct.Walker*, %struct.Select* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @renameTableTest(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @openStatTable(%struct.Parse*, i32, i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableLock(%struct.Parse* nocapture, i32, i32, i8 zeroext, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @statAccumDestructor(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @statInit(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statPush(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @statGet(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @callStatGet(%struct.Parse* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeOneTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readnone, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strlike(i8* readonly, i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3OpenTable(%struct.Parse*, i32, i32, %struct.Table* nocapture readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @loadAnalysis(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeDatabase(%struct.Parse*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @analyzeTable(%struct.Parse*, %struct.Table* readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @decodeIntArray(i8* readonly, i32, i32* nocapture readnone, i16* nocapture, %struct.Index* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_strglob(i8* readonly, i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare i32 @analysisLoader(i8* nocapture readonly, i32, i8** readonly, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resolveAttachExpr(%struct.NameContext*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @attachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ParseUri(i8*, i8*, i32* nocapture, %struct.sqlite3_vfs** nocapture, i8** nocapture, i8** nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Schema* @sqlite3SchemaGet(%struct.sqlite3*, %struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeSetPagerFlags(%struct.Btree* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_filename(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeClose(%struct.Btree*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @detachFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CollapseDatabaseArray(%struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeAttach(%struct.Parse*, i32, %struct.FuncDef*, %struct.Expr* readonly, %struct.Expr*, %struct.Expr*, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_set_authorizer(%struct.sqlite3* nocapture, i32 (i8*, i32, i8*, i8*, i8*, i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteAuthBadReturnCode(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeTableLocks(%struct.Parse*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @deleteTable(%struct.sqlite3*, %struct.Table*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3HashInsert(%struct.Hash* nocapture, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @makeColumnPartOfPrimaryKey(%struct.Parse* nocapture, %struct.Column* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @identLength(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @identPut(i8* nocapture, i32* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i8* @createTableStmt(%struct.sqlite3*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @resizeIndexObject(%struct.sqlite3*, %struct.Index* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateTableWidth(%struct.Table* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @estimateIndexWidth(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @hasColumn(i16* nocapture readonly, i32, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isDupColumn(%struct.Index* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @recomputeColumnsNotIndexed(%struct.Index* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @convertToWithoutRowidTable(%struct.Parse*, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppend(%struct.sqlite3*, %struct.ExprList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprAlloc(%struct.sqlite3*, i32, %struct.Token* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateIndex(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.SrcList*, %struct.ExprList*, i32, %struct.Token* readnone, %struct.Expr*, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @sqliteViewResetAll(%struct.sqlite3*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyRootPage(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @destroyTable(%struct.Parse*, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tableMayNotBeDropped(%struct.sqlite3* nocapture readnone, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @collationMatch(i8* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @reindexTable(%struct.Parse*, %struct.Table* nocapture readonly, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RefillIndex(%struct.Parse*, %struct.Index* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @reindexDatabases(%struct.Parse*, i8* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @callCollNeeded(%struct.sqlite3*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i32 @synthCollSeq(%struct.sqlite3* nocapture readonly, %struct.CollSeq*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @findCollSeqEntry(%struct.sqlite3*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @matchQuality(%struct.FuncDef* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @tabIsReadOnly(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @minmaxFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @typeofFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lengthFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @absFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @instrFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @printfFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value**) #3

; Function Attrs: nounwind ssp uwtable
declare void @substrFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @roundFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @contextMalloc(%struct.sqlite3_context* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @upperFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @lowerFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @randomBlob(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_insert_rowid(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i64 @sqlite3_last_insert_rowid(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @total_changes(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_total_changes(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @patternCompare(i8*, i8*, %struct.compareInfo* readonly, i32) local_unnamed_addr #18

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
declare void @likeFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nullifFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @versionFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_libversion() #11

; Function Attrs: nounwind ssp uwtable
declare void @sourceidFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_sourceid() #11

; Function Attrs: nounwind ssp uwtable
declare void @errlogFunc(%struct.sqlite3_context* nocapture readnone, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @compileoptionusedFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @sqlite3_compileoption_used(i8* readonly) #18

; Function Attrs: nounwind ssp uwtable
declare void @compileoptiongetFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind readnone ssp uwtable
declare i8* @sqlite3_compileoption_get(i32) #23

; Function Attrs: nounwind ssp uwtable
declare void @quoteFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @unicodeFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @charFunc(%struct.sqlite3_context*, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @hexFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @zeroblobFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @replaceFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @trimFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @loadExt(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_load_extension(%struct.sqlite3*, i8*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @sumFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @avgFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @totalFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @countInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minmaxStep(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValueFinalize(%struct.sqlite3_context* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxValue(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @minMaxFinalize(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatStep(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatInverse(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatFinalize(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @groupConcatValue(%struct.sqlite3_context* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare void @fkLookupParent(%struct.Parse*, i32, %struct.Table* readonly, %struct.Index*, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3IndexAffinityStr(%struct.sqlite3*, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableRegister(%struct.Parse* nocapture readonly, %struct.Table* nocapture readonly, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @exprTableColumn(%struct.sqlite3*, %struct.Table*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkScanChildren(%struct.Parse*, %struct.SrcList*, %struct.Table*, %struct.Index* readonly, %struct.FKey* nocapture readonly, i32* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3PExpr(%struct.Parse* nocapture, i32, %struct.Expr*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.WhereInfo* @sqlite3WhereBegin(%struct.Parse*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.ExprList*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereEnd(%struct.WhereInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @fkTriggerDelete(%struct.sqlite3*, %struct.Trigger*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkChildIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @fkParentIsModified(%struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @isSetNullAction(%struct.Parse* nocapture readonly, %struct.FKey* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.Trigger* @fkActionTrigger(%struct.Parse*, %struct.Table* nocapture readonly, %struct.FKey* nocapture, %struct.ExprList* readnone) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkLocateIndex(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.FKey* nocapture readonly, %struct.Index** nocapture, i32**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Select* @sqlite3SelectNew(%struct.Parse* nocapture, %struct.ExprList*, %struct.SrcList*, %struct.Expr*, %struct.ExprList*, %struct.Expr*, %struct.ExprList*, i32, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppend(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token* readonly, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @readsTable(%struct.Parse*, i32, %struct.Table* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprColumnFlagUnion(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @autoIncBegin(%struct.Parse* nocapture, i32, %struct.Table*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @autoIncStep(%struct.Parse* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare void @autoIncrementEnd(%struct.Parse*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @checkConstraintExprNode(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @xferCompatibleIndex(%struct.Index* nocapture readonly, %struct.Index* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @xferOptimization(%struct.Parse*, %struct.Table*, %struct.Select* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_exec(%struct.sqlite3*, i8*, i32 (i8*, i32, i8**, i8**)*, i8*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_enable_load_extension(%struct.sqlite3* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_auto_extension(void ()*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_cancel_auto_extension(void ()* readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_reset_auto_extension() #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @getSafetyLevel(i8* readonly, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getLockingMode(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @getAutoVacuum(i8* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @getTempStore(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @invalidateTempStorage(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @changeTempStorage(%struct.Parse* nocapture, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setPragmaResultColumnNames(%struct.Vdbe* nocapture, %struct.PragmaName* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleInt(%struct.Vdbe*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @returnSingleText(%struct.Vdbe* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @setAllPagerFlags(%struct.sqlite3* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @actionName(i8 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.PragmaName* @pragmaLocate(i8* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @pragmaFunclistLine(%struct.Vdbe* nocapture, %struct.FuncDef* readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeMultiLoad(%struct.Vdbe* nocapture, i32, i8* nocapture readonly, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @integrityCheckResultRow(%struct.Vdbe* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @corruptSchema(%struct.InitData* nocapture, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @schemaIsValid(%struct.Parse* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3LockAndPrepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare16(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v2(%struct.sqlite3*, i8*, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_prepare16_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt** nocapture, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @clearSelect(%struct.sqlite3*, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SrcListDelete(%struct.sqlite3*, %struct.SrcList*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Select* @findRightmost(%struct.Select* readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @columnIndex(%struct.Table* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @tableAndColumnIndex(%struct.SrcList* nocapture readonly, i32, i8* nocapture readonly, i32*, i32* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @addWhereTerm(%struct.Parse* nocapture, %struct.SrcList* nocapture, i32, i32, i32, i32, i32, %struct.Expr** nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @unsetJoinExpr(%struct.Expr*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteProcessJoin(%struct.Parse* nocapture, %struct.Select* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SetJoinExpr(%struct.Expr*, i32) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @innerLoopLoadRow(%struct.Parse*, %struct.Select* nocapture readonly, %struct.RowLoadInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeExprList(%struct.Parse*, %struct.ExprList* nocapture readonly, i32, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @makeSorterRecord(%struct.Parse*, %struct.SortCtx* nocapture readonly, %struct.Select* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @pushOntoSorter(%struct.Parse*, %struct.SortCtx* nocapture, %struct.Select* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeOffset(%struct.Vdbe* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeDistinct(%struct.Parse* nocapture, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @selectInnerLoop(%struct.Parse*, %struct.Select* nocapture readonly, i32, %struct.SortCtx*, %struct.DistinctCtx* readonly, %struct.SelectDest* nocapture, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3ExprCollSeq(%struct.Parse* nocapture, %struct.Expr* readonly) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @selectOpName(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @explainTempTable(%struct.Parse* nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeExplain(%struct.Parse* nocapture, i8 zeroext, i8*, ...) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateSortTail(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SortCtx* nocapture readonly, i32, %struct.SelectDest* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @columnTypeImpl(%struct.NameContext*, %struct.Expr* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnTypes(%struct.Parse*, %struct.SrcList*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateColumnNames(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @computeLimitRegisters(%struct.Parse*, %struct.Select* nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.CollSeq* @multiSelectCollSeq(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.KeyInfo* @multiSelectOrderByKeyInfo(%struct.Parse* nocapture, %struct.Select* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @generateWithRecursiveQuery(%struct.Parse*, %struct.Select*, %struct.SelectDest*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Select(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectValues(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelect(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @multiSelectOrderBy(%struct.Parse*, %struct.Select*, %struct.SelectDest* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @generateOutputSubroutine(%struct.Parse*, %struct.Select* nocapture readonly, %struct.SelectDest* nocapture readonly, %struct.SelectDest* nocapture, i32, i32, %struct.KeyInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @substExpr(%struct.SubstContext* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substSelect(%struct.SubstContext* nocapture readonly, %struct.Select*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @substExprList(%struct.SubstContext*, %struct.ExprList*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @flattenSubquery(%struct.Parse*, %struct.Select*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListEnlarge(%struct.Parse* nocapture, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @constInsert(%struct.WhereConst* nocapture, %struct.Expr*, %struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @findConstInWhere(%struct.WhereConst*, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstantExprRewrite(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @propagateConstants(%struct.Parse*, %struct.Select* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3SelectWalkNoop(%struct.Walker* nocapture readnone, %struct.Select* nocapture readnone) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @pushDownWhereTerms(%struct.Parse*, %struct.Select*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @minMaxQuery(%struct.sqlite3*, %struct.Expr* nocapture readonly, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @isSimpleCount(%struct.Select* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @convertCompoundSelectToSubquery(%struct.Walker* nocapture readonly, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListAppendFromTerm(%struct.Parse* nocapture, %struct.SrcList*, %struct.Token*, %struct.Token*, %struct.Token* readonly, %struct.Select*, %struct.Expr*, %struct.IdList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @cannotBeFunction(%struct.Parse* nocapture, %struct.SrcList_item* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare %struct.Cte* @searchWith(%struct.With*, %struct.SrcList_item* nocapture readonly, %struct.With** nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @withExpand(%struct.Walker*, %struct.SrcList_item* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ColumnsFromExprList(%struct.sqlite3*, %struct.ExprList* readonly, i16* nocapture, %struct.Column** nocapture) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @selectPopWith(%struct.Walker* nocapture readonly, %struct.Select* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @selectExpander(%struct.Walker*, %struct.Select* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3SrcListAssignCursors(%struct.Parse* nocapture, %struct.SrcList*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @selectAddSubqueryTypeInfo(%struct.Walker* nocapture readonly, %struct.Select* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SelectAddColumnTypeAndCollation(%struct.Parse* nocapture, %struct.Table* nocapture, %struct.Select* nocapture readonly, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @resetAccumulator(%struct.Parse* nocapture, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @finalizeAggFunctions(%struct.Parse* nocapture readonly, %struct.AggInfo* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @updateAccumulator(%struct.Parse*, i32, %struct.AggInfo* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfFalse(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare void @explainSimpleCount(%struct.Parse* nocapture, %struct.Table* nocapture readonly, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @havingToWhereExprCb(%struct.Walker* nocapture, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @havingToWhere(%struct.Parse*, %struct.Select*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList_item* @isSelfJoinView(%struct.SrcList* readonly, %struct.SrcList_item* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table_cb(i8* nocapture, i32, i8** readonly, i8** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_get_table(%struct.sqlite3*, i8*, i8*** nocapture, i32*, i32*, i8**) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_free_table(i8**) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @triggerSpanDup(%struct.sqlite3*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerStep* @triggerStepAllocate(%struct.Parse* nocapture, i8 zeroext, %struct.Token* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.Table* @tableOfTrigger(%struct.Trigger* nocapture readonly) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @checkColumnOverlap(%struct.IdList* readonly, %struct.ExprList* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare %struct.SrcList* @targetSrcList(%struct.Parse* nocapture readonly, %struct.TriggerStep* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeTriggerProgram(%struct.Parse*, %struct.TriggerStep* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Update(%struct.Parse*, %struct.SrcList*, %struct.ExprList*, %struct.Expr*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Insert(%struct.Parse*, %struct.SrcList*, %struct.Select*, %struct.IdList*, i32, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListDup(%struct.sqlite3*, %struct.IdList* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteFrom(%struct.Parse*, %struct.SrcList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @transferParseError(%struct.Parse* nocapture, %struct.Parse* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @codeRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeDelete(%struct.Vdbe*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.TriggerPrg* @getRowTrigger(%struct.Parse*, %struct.Trigger*, %struct.Table*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexColumnIsBeingUpdated(%struct.Index* nocapture readonly, i32, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexWhereClauseMightChange(%struct.Index* nocapture readonly, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSql(%struct.sqlite3*, i8** nocapture, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @execSqlF(%struct.sqlite3*, i8** nocapture, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @explainIndexColumnName(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @explainAppendTerm(%struct.sqlite3_str*, %struct.Index* nocapture readonly, i32, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @explainIndexRange(%struct.sqlite3_str*, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableTerm(%struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeApplyAffinity(%struct.Parse* nocapture readonly, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare void @updateRangeAffinityStr(%struct.Expr* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare %struct.Expr* @removeUnindexableInClauseTerms(%struct.Parse* nocapture readonly, i32, %struct.WhereLoop* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeEqualityTerm(%struct.Parse*, %struct.WhereTerm* nocapture, %struct.WhereLevel* nocapture, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindInIndex(%struct.Parse*, %struct.Expr*, i32, i32*, i32*, i32* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @codeAllEqualityTerms(%struct.Parse*, %struct.WhereLevel*, i32, i32, i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLikeOptimizationStringFixup(%struct.Vdbe* nocapture readonly, %struct.WhereLevel* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @codeDeferredSeek(%struct.WhereInfo* nocapture, %struct.Index* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @codeExprOrVector(%struct.Parse*, %struct.Expr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @preserveExpr(%struct.IdxExprTrans* nocapture readonly, %struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransNode(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereIndexExprTransColumn(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare void @whereIndexExprTrans(%struct.Index* nocapture readonly, i32, i32, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereApplyPartialIndexConstraints(%struct.Expr* readonly, i32, %struct.WhereClause* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereOrInfoDelete(%struct.sqlite3*, %struct.WhereOrInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereClauseClear(%struct.WhereClause* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereAndInfoDelete(%struct.sqlite3*, %struct.WhereAndInfo*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereClauseInsert(%struct.WhereClause*, %struct.Expr*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @allowedOp(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @exprCommute(%struct.Parse* nocapture, %struct.Expr* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @operatorMask(i32) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare i32 @isLikeOrGlob(%struct.Parse*, %struct.Expr* nocapture readonly, %struct.Expr** nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @transferJoinMarkings(%struct.Expr*, %struct.Expr* nocapture readonly) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @markTermAsChild(%struct.WhereClause* nocapture readonly, i32, i32) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereTerm* @whereNthSubterm(%struct.WhereTerm* readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @whereCombineDisjuncts(%struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.WhereTerm* nocapture readonly, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyze(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @exprAnalyzeOrTerm(%struct.SrcList* nocapture readonly, %struct.WhereClause*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereSplit(%struct.WhereClause*, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @termIsEquivalence(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare i64 @exprSelectUsage(%struct.WhereMaskSet* nocapture, %struct.Select* readonly) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
declare i32 @exprMightBeIndexed2(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i32 @exprMightBeIndexed(%struct.SrcList* nocapture readonly, i64, i32* nocapture, %struct.Expr* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCheckIN(%struct.Parse* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereExprUsageNN(%struct.WhereMaskSet* nocapture, %struct.Expr* nocapture readonly) unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
declare void @whereOrMove(%struct.WhereOrSet*, %struct.WhereOrSet*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereOrInsert(%struct.WhereOrSet* nocapture, i64, i16 signext, i16 signext) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @createMask(%struct.WhereMaskSet* nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanNext(%struct.WhereScan* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInitIndexExpr(%struct.WhereScan* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %struct.WhereTerm* @whereScanInit(%struct.WhereScan* nocapture, %struct.WhereClause*, i32, i32, i32, %struct.Index* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @findIndexCol(%struct.Parse* nocapture, %struct.ExprList* nocapture readonly, i32, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @indexColumnNotNull(%struct.Index* nocapture readonly, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @isDistinctRedundant(%struct.Parse* nocapture, %struct.SrcList* nocapture readonly, %struct.WhereClause*, %struct.ExprList* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare signext i16 @estLog(i16 signext) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @translateColumnToCopy(%struct.Parse* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #15

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @termCanDriveIndex(%struct.WhereTerm* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare void @constructAutomaticIndex(%struct.Parse*, %struct.WhereClause* nocapture readonly, %struct.SrcList_item* nocapture readonly, i64, %struct.WhereLevel* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopResize(%struct.sqlite3*, %struct.WhereLoop*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GenerateIndexKey(%struct.Parse*, %struct.Index* nocapture, i32, i32, i32, i32*, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereRangeAdjust(%struct.WhereTerm* readonly, i16 signext) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @whereRangeScanEst(%struct.Parse* nocapture readnone, %struct.WhereLoopBuilder* nocapture readnone, %struct.WhereTerm* readonly, %struct.WhereTerm* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare void @whereLoopInit(%struct.WhereLoop*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClearUnion(%struct.sqlite3*, %struct.WhereLoop* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopClear(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopXfer(%struct.sqlite3*, %struct.WhereLoop*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopDelete(%struct.sqlite3*, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereInfoFree(%struct.sqlite3*, %struct.WhereInfo*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @whereLoopCheaperProperSubset(%struct.WhereLoop* nocapture readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @whereLoopAdjustCost(%struct.WhereLoop* readonly, %struct.WhereLoop* nocapture) local_unnamed_addr #15

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.WhereLoop** @whereLoopFindLesser(%struct.WhereLoop** readonly, %struct.WhereLoop* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopInsert(%struct.WhereLoopBuilder* nocapture, %struct.WhereLoop*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @whereLoopOutputAdjust(%struct.WhereClause* nocapture readonly, %struct.WhereLoop* nocapture, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereRangeVectorLen(%struct.Parse* nocapture, i32, %struct.Index* nocapture readonly, i32, %struct.WhereTerm* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtreeIndex(%struct.WhereLoopBuilder*, %struct.SrcList_item* readonly, %struct.Index* readonly, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @indexMightHelpWithOrderBy(%struct.WhereLoopBuilder* nocapture readonly, %struct.Index* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereUsablePartialIndex(i32, i32, %struct.WhereClause* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddBtree(%struct.WhereLoopBuilder*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddOr(%struct.WhereLoopBuilder* nocapture, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereLoopAddAll(%struct.WhereLoopBuilder*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare signext i8 @wherePathSatisfiesOrderBy(%struct.WhereInfo*, %struct.ExprList* nocapture readonly, %struct.WherePath* nocapture readonly, i16 zeroext, i16 zeroext, %struct.WhereLoop* nocapture, i64* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare signext i16 @whereSortingCost(%struct.WhereInfo* nocapture readonly, i16 signext, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @wherePathSolver(%struct.WhereInfo*, i16 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @whereShortCut(%struct.WhereLoopBuilder* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @exprNodeIsDeterministic(%struct.Walker* nocapture, %struct.Expr* nocapture readonly) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @exprIsDeterministic(%struct.Expr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @row_numberValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @dense_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @nth_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @first_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @percent_rankValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distStepFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @cume_distValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @ntileValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueInvFunc(%struct.sqlite3_context* nocapture readonly, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueValueFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: nounwind ssp uwtable
declare void @last_valueFinalizeFunc(%struct.sqlite3_context* nocapture readonly) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopStepFunc(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @noopValueFunc(%struct.sqlite3_context* nocapture) #11

; Function Attrs: nounwind ssp uwtable
declare %struct.Window* @windowFind(%struct.Parse* nocapture, %struct.Window*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteExprCb(%struct.Walker* nocapture readonly, %struct.Expr*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @selectWindowRewriteSelectCb(%struct.Walker*, %struct.Select*) #3

; Function Attrs: nounwind ssp uwtable
declare void @selectWindowRewriteEList(%struct.Parse*, %struct.Window*, %struct.SrcList*, %struct.ExprList* readonly, %struct.Table*, %struct.ExprList** nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare %struct.ExprList* @exprListAppendList(%struct.Parse* nocapture readonly, %struct.ExprList*, %struct.ExprList* readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCheckValue(%struct.Parse*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowArgCount(%struct.Window* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowReadPeerValues(%struct.WindowCodeArg* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggStep(%struct.WindowCodeArg* nocapture readonly, %struct.Window* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowAggFinal(%struct.WindowCodeArg* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowFullScan(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowReturnOneRow(%struct.WindowCodeArg* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowInitAccum(%struct.Parse*, %struct.Window* readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @windowCacheFrame(%struct.Window* readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @windowIfNewPeer(%struct.Parse*, %struct.ExprList* readonly, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @windowCodeRangeTest(%struct.WindowCodeArg* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowCodeOp(%struct.WindowCodeArg*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @windowExprGtZero(%struct.Parse* nocapture readonly, %struct.Expr* readonly) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @disableLookaside(%struct.Parse* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare void @yy_destructor(%struct.yyParser* nocapture readonly, i16 zeroext, %union.YYMINORTYPE* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowDelete(%struct.sqlite3*, %struct.Window*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DeleteTriggerStep(%struct.sqlite3*, %struct.TriggerStep*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_pop_parser_stack(%struct.yyParser* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_shift_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare zeroext i16 @yy_find_reduce_action(i16 zeroext, i16 zeroext) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
declare void @yyStackOverflow(%struct.yyParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_shift(%struct.yyParser*, i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare zeroext i16 @yy_reduce(%struct.yyParser*, i32, i32, i8*, i32, %struct.Parse*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3StartTable(%struct.Parse*, %struct.Token*, %struct.Token*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3EndTable(%struct.Parse*, %struct.Token* nocapture readonly, %struct.Token* readonly, i8 zeroext, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddDefaultValue(%struct.Parse*, %struct.Expr*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @tokenExpr(%struct.Parse* nocapture, i32, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddPrimaryKey(%struct.Parse*, %struct.ExprList*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CreateForeignKey(%struct.Parse* nocapture, %struct.ExprList*, %struct.Token*, %struct.ExprList*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3AddGenerated(%struct.Parse* nocapture, %struct.Expr*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTable(%struct.Parse*, %struct.SrcList*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3JoinType(%struct.Parse* nocapture, %struct.Token*, %struct.Token*, %struct.Token*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.ExprList* @sqlite3ExprListAppendVector(%struct.Parse*, %struct.ExprList*, %struct.IdList*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.IdList* @sqlite3IdListAppend(%struct.Parse* nocapture, %struct.IdList*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3GetInt32(i8* nocapture readonly, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Vacuum(%struct.Parse*, %struct.Token*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Pragma(%struct.Parse*, %struct.Token*, %struct.Token*, %struct.Token*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3Analyze(%struct.Parse*, %struct.Token*, %struct.Token* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.With* @sqlite3WithAdd(%struct.Parse* nocapture, %struct.With*, %struct.Token* readonly, %struct.ExprList*, %struct.Select*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WindowChain(%struct.Parse* nocapture, %struct.Window* nocapture, %struct.Window* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Window* @sqlite3WindowAlloc(%struct.Parse*, i32, i32, %struct.Expr*, i32, %struct.Expr*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @yy_syntax_error(%struct.yyParser* nocapture, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @yy_accept(%struct.yyParser* nocapture) local_unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @keywordCode(i8* nocapture readonly, i32 returned, i32* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
declare i32 @sqlite3_keyword_name(i32, i8** nocapture, i32* nocapture) #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_keyword_count() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_keyword_check(i8* nocapture readonly, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @getToken(i8** nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local i32 @sqlite3GetToken(i8* readonly, i32*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeWindowKeyword(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeOverKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @analyzeFilterKeyword(i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_complete(i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_complete16(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_libversion_number() #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_threadsafe() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_shutdown() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_config(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @setupLookaside(%struct.sqlite3*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare %struct.sqlite3_mutex* @sqlite3_db_mutex(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_release_memory(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_cacheflush(%struct.sqlite3* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_db_config(%struct.sqlite3*, i32, ...) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @binCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare i32 @rtrimCollFunc(i8* nocapture readnone, i32, i8* nocapture readonly, i32, i8* nocapture readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @nocaseCollatingFunc(i8* nocapture readnone, i32, i8* readonly, i32, i8* readonly) #7

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_set_last_insert_rowid(%struct.sqlite3* nocapture, i64) #3

; Function Attrs: nounwind ssp uwtable
declare void @functionDestroy(%struct.sqlite3*, %struct.FuncDef* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @disconnectAllVtab(%struct.sqlite3* nocapture) local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @connectionIsBusy(%struct.sqlite3* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Close(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_close_v2(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqliteDefaultBusyCallback(i8* nocapture readonly, i32, %struct.sqlite3_file* nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_handler(%struct.sqlite3* nocapture, i32 (i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare void @sqlite3_progress_handler(%struct.sqlite3* nocapture, i32, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_busy_timeout(%struct.sqlite3*, i32) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare void @sqlite3_interrupt(%struct.sqlite3*) #15

; Function Attrs: nounwind ssp uwtable
declare i32 @createFunctionApi(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CreateFunc(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, %struct.FuncDestructor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function_v2(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_window_function(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_function16(%struct.sqlite3*, i8*, i32, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)*, void (%struct.sqlite3_context*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_overload_function(%struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3InvalidFunction(%struct.sqlite3_context* nocapture, i32, %struct.sqlite3_value** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_commit_hook(%struct.sqlite3* nocapture, i32 (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_update_hook(%struct.sqlite3* nocapture, void (i8*, i32, i8*, i8*, i64)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_rollback_hook(%struct.sqlite3* nocapture, void (i8*)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_autocheckpoint(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_wal_hook(%struct.sqlite3* nocapture, i32 (i8*, %struct.sqlite3*, i8*, i32)*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalDefaultHook(i8*, %struct.sqlite3*, i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint_v2(%struct.sqlite3*, i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Checkpoint(%struct.sqlite3* nocapture readonly, i32, i32, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_wal_checkpoint(%struct.sqlite3*, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_errmsg16(%struct.sqlite3*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_errcode(%struct.sqlite3* readonly) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_system_errno(%struct.sqlite3* readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i8* @sqlite3_errstr(i32) #11

; Function Attrs: nounwind ssp uwtable
declare i32 @createCollation(%struct.sqlite3*, i8*, i8 zeroext, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare i32 @sqlite3_limit(%struct.sqlite3* nocapture, i32, i32) #15

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @uriParameter(i8* readonly, i8* nocapture readonly) local_unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare i32 @openDatabase(i8*, %struct.sqlite3** nocapture, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open_v2(i8*, %struct.sqlite3** nocapture, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_open16(i8*, %struct.sqlite3** nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation_v2(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_create_collation16(%struct.sqlite3*, i8*, i32, i8*, i32 (i8*, i32, i8*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_collation_needed16(%struct.sqlite3* nocapture, i8*, void (i8*, %struct.sqlite3*, i32, i8*)*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare i32 @sqlite3_global_recover() local_unnamed_addr #11

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_get_autocommit(%struct.sqlite3* nocapture readonly) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare void @sqlite3_thread_cleanup() #11

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_table_column_metadata(%struct.sqlite3*, i8* readonly, i8*, i8*, i8**, i8**, i32*, i32*, i32*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_sleep(i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_extended_result_codes(%struct.sqlite3* nocapture, i32) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_file_control(%struct.sqlite3* nocapture readonly, i8* readonly, i32, i8*) #3

; Function Attrs: nounwind ssp uwtable
declare i32 @sqlite3_test_control(i32, ...) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @databaseName(i8* readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
declare nonnull i8* @appendText(i8*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare i8* @sqlite3_create_filename(i8*, i8*, i8*, i32, i8** nocapture readonly) #3

; Function Attrs: nounwind readonly ssp uwtable
declare i8* @sqlite3_uri_key(i8* readonly, i32) #18

; Function Attrs: nounwind ssp uwtable
declare i64 @sqlite3_uri_int64(i8* readonly, i8* readonly, i64) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_filename_database(i8* readonly) #7

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_journal(i8* readonly) #18

; Function Attrs: nounwind readonly ssp uwtable
declare nonnull i8* @sqlite3_filename_wal(i8* readonly) #18

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i8* @sqlite3_db_filename(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
declare i32 @sqlite3_db_readonly(%struct.sqlite3* nocapture readonly, i8* readonly) #7

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ErrorFinish(%struct.sqlite3* nocapture, i32) unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
declare dso_local void @sqlite3BitvecClear(%struct.Bitvec*, i32, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeTripAllCursors(%struct.Btree*, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeMemTranslate(%struct.sqlite3_value*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3BtreeCloseCursor(%struct.BtCursor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3VdbeSorterReset(%struct.sqlite3*, %struct.VdbeSorter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeTransferError(%struct.Vdbe* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RollbackAll(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @exit(i32) local_unnamed_addr #24

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3NoopDestructor(i8* nocapture) #11

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3VdbeFinishMoveto(%struct.VdbeCursor* nocapture) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SchemaClear(i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitOne(%struct.sqlite3*, i32, i8**, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3InitCallback(i8* nocapture, i32, i8**, i8** nocapture readnone) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AnalysisLoad(%struct.sqlite3*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
declare dso_local void @sqlite3VdbeFrameMemDel(i8*) #15

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3PagerSetJournalMode(%struct.Pager*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local i32 @sqlite3RunVacuum(i8** nocapture, %struct.sqlite3*, i32, %struct.sqlite3_value*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3Prepare(%struct.sqlite3*, i8*, i32, i32, %struct.Vdbe*, %struct.sqlite3_stmt** nocapture, i8**) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3RowSetDelete(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalClose(%struct.Wal*, %struct.sqlite3*, i32, i32, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalCheckpoint(%struct.Wal*, %struct.sqlite3*, i32, i32 (i8*)*, i8*, i32, i32, i8*, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3BtreeSetSpillSize(%struct.Btree* nocapture, i32) unnamed_addr #3

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) local_unnamed_addr #12

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WalkSelectExpr(%struct.Walker*, %struct.Select* nocapture readonly) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
declare dso_local void @sqlite3ExprDeleteNN(%struct.sqlite3*, %struct.Expr*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.SrcList* @sqlite3SrcListDup(%struct.sqlite3*, %struct.SrcList* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGeneratedColumn(%struct.Parse*, %struct.Column*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ExprCodeRunJustOnce(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeIN(%struct.Parse*, %struct.Expr*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeCopy(%struct.Parse*, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprCodeGetColumnOfTable(%struct.Vdbe* nocapture, %struct.Table* readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind readonly ssp uwtable
declare dso_local i32 @sqlite3BlobCompare(%struct.sqlite3_value* nocapture readonly, %struct.sqlite3_value* nocapture readonly) unnamed_addr #25

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3WindowCompare(%struct.Parse*, %struct.Window* readonly, %struct.Window* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.KeyInfo* @sqlite3KeyInfoOfIndex(%struct.Parse* nocapture, %struct.Index* nocapture) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3PagerClose(%struct.Pager*, %struct.sqlite3*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3AuthReadCol(%struct.Parse* nocapture, i8*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3ReadSchema(%struct.Parse*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Table* @sqlite3ResultSetOfSelect(%struct.Parse*, %struct.Select*, i8 signext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSrcList(%struct.DbFixer* nocapture readonly, %struct.SrcList*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3CheckObjectName(%struct.Parse* nocapture, i8*, i8* readonly, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FindDb(%struct.sqlite3*, %struct.Token* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixSelect(%struct.DbFixer* nocapture readonly, %struct.Select* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FixExpr(%struct.DbFixer* nocapture readonly, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UniqueConstraint(%struct.Parse*, i32, %struct.Index* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.CollSeq* @sqlite3GetCollSeq(%struct.Parse* nocapture, i8 zeroext, %struct.CollSeq*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3ExprWalkNoop(%struct.Walker* nocapture readnone, %struct.Expr* nocapture readnone) #11

; Function Attrs: nounwind readonly ssp uwtable
declare dso_local %struct.Expr* @sqlite3ExprSimplifiedAndOr(%struct.Expr* readonly) unnamed_addr #18

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ExprIfTrue(%struct.Parse*, %struct.Expr*, i32, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3OpenTableAndIndices(%struct.Parse*, %struct.Table* nocapture readonly, i32, i8 zeroext, i32, i8* readonly, i32*, i32*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3ComputeGeneratedColumns(%struct.Parse*, i32, %struct.Table*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3TableAffinity(%struct.Vdbe* nocapture, %struct.Table* nocapture, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeRowTrigger(%struct.Parse*, %struct.Trigger*, i32, %struct.ExprList* readonly, i32, %struct.Table*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateConstraintChecks(%struct.Parse*, %struct.Table*, i32* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext, i32, i32* nocapture, i32*, %struct.Upsert*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3FkCheck(%struct.Parse*, %struct.Table*, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CompleteInsertion(%struct.Parse*, %struct.Table*, i32, i32, i32, i32* nocapture readonly, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowDelete(%struct.Parse*, %struct.Table*, %struct.Trigger*, i32, i32, i32, i16 signext, i8 zeroext, i8 zeroext, i8 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3GenerateRowIndexDelete(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32, i32* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3UpsertDoUpdate(%struct.Parse*, %struct.Upsert*, %struct.Table* nocapture readonly, %struct.Index* readonly, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3FkOldmask(%struct.Parse* nocapture, %struct.Table* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MaterializeView(%struct.Parse*, %struct.Table* nocapture readonly, %struct.Expr*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3SetHasNullFlag(%struct.Vdbe* nocapture, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3WhereExplainOneScan(%struct.Parse* nocapture readonly, %struct.SrcList* nocapture readonly, %struct.WhereLevel* nocapture readonly, i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i64 @sqlite3WhereCodeOneLoopStart(%struct.Parse*, %struct.Vdbe*, %struct.WhereInfo*, i32, %struct.WhereLevel*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeVerifyNamedSchema(%struct.Parse* nocapture, i8* readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3CodeDropTable(%struct.Parse*, %struct.Table* nocapture readonly, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3DropTriggerPtr(%struct.Parse*, %struct.Trigger* nocapture readonly) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local %struct.Expr* @sqlite3WindowOffsetExpr(%struct.Parse*, %struct.Expr*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemMalloc(i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local void @sqlite3MemFree(i8*) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i8* @sqlite3MemRealloc(i8*, i32) #3

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemSize(i8*) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local i32 @sqlite3MemRoundup(i32) #11

; Function Attrs: nounwind ssp uwtable
declare dso_local i32 @sqlite3MemInit(i8* nocapture readnone) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
declare dso_local void @sqlite3MemShutdown(i8* nocapture) #11

; Function Attrs: allocsize(1)
declare i8* @malloc_zone_malloc(%struct._malloc_zone_t*, i64) local_unnamed_addr #26

declare void @malloc_zone_free(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: allocsize(2)
declare i8* @malloc_zone_realloc(%struct._malloc_zone_t*, i8*, i64) local_unnamed_addr #27

declare i64 @malloc_size(i8*) local_unnamed_addr #12

declare i32 @sysctlbyname(i8*, i8*, i64*, i8*, i64) local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_default_zone() local_unnamed_addr #12

declare %struct._malloc_zone_t* @malloc_create_zone(i64, i32) local_unnamed_addr #12

declare void @malloc_set_zone_name(%struct._malloc_zone_t*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #28

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #28

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) local_unnamed_addr #29

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #28

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #30

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #28

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree
declare i64 @strlcat(i8*, i8*, i64) #31

; Function Attrs: nofree
declare i64 @strlcpy(i8*, i8*, i64) #31

attributes #0 = { norecurse nounwind nonlazybind uwtable willreturn "nonfree" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { alwaysinline nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noinline nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree noinline norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { noinline nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { allocsize(2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { nounwind readnone speculatable willreturn }
attributes #29 = { nofree nounwind }
attributes #30 = { cold noreturn nounwind }
attributes #31 = { nofree }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4}
!llvm.ident = !{!5}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 7, !"PIC Level", i32 2}
!5 = !{!"clang version 11.0.0 (https://github.com/KowalskiThomas/LLVM 63660cfe7d4c851881497a874a10f82c1b74cd5a)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"double", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !13, i64 8}
!12 = !{!"UnpackedRecord", !13, i64 0, !13, i64 8, !14, i64 16, !8, i64 18, !8, i64 19, !8, i64 20, !8, i64 21, !8, i64 22}
!13 = !{!"any pointer", !8, i64 0}
!14 = !{!"short", !8, i64 0}
!15 = !{!12, !8, i64 18}
!16 = !{!17, !17, i64 0}
!17 = !{!"long long", !8, i64 0}
!18 = !{!19, !8, i64 4}
!19 = !{!"KeyInfo", !20, i64 0, !8, i64 4, !14, i64 6, !14, i64 8, !13, i64 16, !13, i64 24, !8, i64 32}
!20 = !{!"int", !8, i64 0}
!21 = !{!22, !8, i64 10}
!22 = !{!"sqlite3_value", !8, i64 0, !14, i64 8, !8, i64 10, !8, i64 11, !20, i64 12, !13, i64 16, !13, i64 24, !20, i64 32, !20, i64 36, !13, i64 40, !13, i64 48}
!23 = !{!19, !13, i64 16}
!24 = !{!22, !13, i64 40}
!25 = !{!22, !20, i64 32}
!26 = !{!22, !13, i64 16}
!27 = !{!12, !14, i64 16}
!28 = !{!22, !14, i64 8}
!29 = !{!22, !20, i64 12}
!30 = !{!22, !13, i64 24}
!31 = !{!32, !13, i64 8}
!32 = !{!"sqlite3_str", !13, i64 0, !13, i64 8, !20, i64 16, !20, i64 20, !20, i64 24, !8, i64 28, !8, i64 29}
!33 = !{!32, !13, i64 0}
!34 = !{!32, !20, i64 16}
!35 = !{!32, !20, i64 24}
!36 = !{!14, !14, i64 0}
!37 = distinct !DISubprogram(name: "jittedFunction", linkageName: "jittedFunction", scope: null, file: !38, line: 1610, type: !39, scopeLine: 1610, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !40)
!38 = !DIFile(filename: "../src/mlir/thomas/ModuleWriter.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!39 = !DISubroutineType(types: !40)
!40 = !{}
!41 = !DILocation(line: 100, scope: !42)
!42 = !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!43 = !DILocation(line: 102, scope: !42)
!44 = !DILocation(line: 106, scope: !42)
!45 = !DILocation(line: 107, scope: !42)
!46 = !DILocation(line: 111, scope: !42)
!47 = !DILocation(line: 112, scope: !42)
!48 = !DILocation(line: 116, scope: !42)
!49 = !DILocation(line: 117, scope: !42)
!50 = !DILocation(line: 131, scope: !42)
!51 = !DILocation(line: 135, scope: !42)
!52 = !DILocation(line: 136, scope: !42)
!53 = !DILocation(line: 164, scope: !42)
!54 = !DILocation(line: 24, scope: !55)
!55 = !DILexicalBlockFile(scope: !37, file: !56, discriminator: 0)
!56 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/InitLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!57 = !DILocation(line: 28, scope: !55)
!58 = !DILocation(line: 34, scope: !55)
!59 = !DILocation(line: 38, scope: !55)
!60 = !DILocation(line: 39, scope: !55)
!61 = !DILocation(line: 40, scope: !55)
!62 = !DILocation(line: 46, scope: !55)
!63 = !DILocation(line: 37, scope: !64)
!64 = !DILexicalBlockFile(scope: !37, file: !65, discriminator: 0)
!65 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterOpenLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!66 = !DILocation(line: 45, scope: !64)
!67 = !DILocation(line: 50, scope: !64)
!68 = !DILocation(line: 52, scope: !64)
!69 = !DILocation(line: 53, scope: !64)
!70 = !DILocation(line: 54, scope: !64)
!71 = !DILocation(line: 55, scope: !64)
!72 = !DILocation(line: 57, scope: !64)
!73 = !DILocation(line: 59, scope: !64)
!74 = !DILocation(line: 1567, scope: !42)
!75 = !DILocation(line: 30, scope: !76)
!76 = !DILexicalBlockFile(scope: !37, file: !77, discriminator: 0)
!77 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IntegerLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!78 = !DILocation(line: 36, scope: !76)
!79 = !DILocation(line: 34, scope: !80)
!80 = !DILexicalBlockFile(scope: !37, file: !81, discriminator: 0)
!81 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/OutToPrerelease.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!82 = !DILocation(line: 38, scope: !80)
!83 = !DILocation(line: 41, scope: !80)
!84 = !DILocation(line: 39, scope: !76)
!85 = !DILocation(line: 40, scope: !76)
!86 = !DILocation(line: 42, scope: !76)
!87 = !DILocation(line: 42, scope: !88)
!88 = !DILexicalBlockFile(scope: !37, file: !89, discriminator: 0)
!89 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NullLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!90 = !DILocation(line: 43, scope: !88)
!91 = !DILocation(line: 52, scope: !88)
!92 = !DILocation(line: 55, scope: !88)
!93 = !DILocation(line: 58, scope: !88)
!94 = !DILocation(line: 59, scope: !88)
!95 = !DILocation(line: 63, scope: !88)
!96 = !DILocation(line: 66, scope: !88)
!97 = !DILocation(line: 71, scope: !88)
!98 = !DILocation(line: 74, scope: !88)
!99 = !DILocation(line: 75, scope: !88)
!100 = !DILocation(line: 35, scope: !101)
!101 = !DILexicalBlockFile(scope: !37, file: !102, discriminator: 0)
!102 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/GosubLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!103 = !DILocation(line: 38, scope: !101)
!104 = !DILocation(line: 39, scope: !101)
!105 = !DILocation(line: 42, scope: !101)
!106 = !DILocation(line: 43, scope: !101)
!107 = !DILocation(line: 45, scope: !101)
!108 = !DILocation(line: 51, scope: !101)
!109 = !DILocation(line: 37, scope: !110)
!110 = !DILexicalBlockFile(scope: !37, file: !111, discriminator: 0)
!111 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenReadLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!112 = !DILocation(line: 38, scope: !110)
!113 = !DILocation(line: 39, scope: !110)
!114 = !DILocation(line: 43, scope: !110)
!115 = !DILocation(line: 45, scope: !110)
!116 = !DILocation(line: 94, scope: !110)
!117 = !DILocation(line: 103, scope: !110)
!118 = !DILocation(line: 104, scope: !110)
!119 = !DILocation(line: 107, scope: !110)
!120 = !DILocation(line: 109, scope: !110)
!121 = !DILocation(line: 111, scope: !110)
!122 = !DILocation(line: 112, scope: !110)
!123 = !DILocation(line: 115, scope: !110)
!124 = !DILocation(line: 117, scope: !110)
!125 = !DILocation(line: 120, scope: !110)
!126 = !DILocation(line: 126, scope: !110)
!127 = !DILocation(line: 129, scope: !110)
!128 = !DILocation(line: 136, scope: !110)
!129 = !DILocation(line: 138, scope: !110)
!130 = !DILocation(line: 141, scope: !110)
!131 = !DILocation(line: 142, scope: !110)
!132 = !DILocation(line: 145, scope: !110)
!133 = !DILocation(line: 28, scope: !134)
!134 = !DILexicalBlockFile(scope: !37, file: !135, discriminator: 0)
!135 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RewindLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!136 = !DILocation(line: 39, scope: !134)
!137 = !DILocation(line: 43, scope: !134)
!138 = !DILocation(line: 45, scope: !134)
!139 = !DILocation(line: 46, scope: !134)
!140 = !DILocation(line: 49, scope: !134)
!141 = !DILocation(line: 56, scope: !134)
!142 = !DILocation(line: 58, scope: !134)
!143 = !DILocation(line: 73, scope: !134)
!144 = !DILocation(line: 74, scope: !134)
!145 = !DILocation(line: 77, scope: !134)
!146 = !DILocation(line: 85, scope: !134)
!147 = !DILocation(line: 87, scope: !134)
!148 = !DILocation(line: 89, scope: !134)
!149 = !DILocation(line: 100, scope: !134)
!150 = !DILocation(line: 107, scope: !134)
!151 = !DILocation(line: 111, scope: !134)
!152 = !DILocation(line: 115, scope: !134)
!153 = !DILocation(line: 121, scope: !134)
!154 = !DILocation(line: 125, scope: !134)
!155 = !DILocation(line: 129, scope: !134)
!156 = !DILocation(line: 133, scope: !134)
!157 = !DILocation(line: 136, scope: !134)
!158 = !DILocation(line: 142, scope: !134)
!159 = !DILocation(line: 148, scope: !134)
!160 = !DILocation(line: 149, scope: !134)
!161 = !DILocation(line: 151, scope: !134)
!162 = !DILocation(line: 155, scope: !134)
!163 = !DILocation(line: 157, scope: !134)
!164 = !DILocation(line: 159, scope: !134)
!165 = !DILocation(line: 162, scope: !134)
!166 = !DILocation(line: 30, scope: !167)
!167 = !DILexicalBlockFile(scope: !37, file: !168, discriminator: 0)
!168 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ColumnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!169 = !DILocation(line: 42, scope: !167)
!170 = !DILocation(line: 43, scope: !167)
!171 = !DILocation(line: 60, scope: !167)
!172 = !DILocation(line: 61, scope: !167)
!173 = !DILocation(line: 72, scope: !167)
!174 = !DILocation(line: 73, scope: !167)
!175 = !DILocation(line: 74, scope: !167)
!176 = !DILocation(line: 85, scope: !167)
!177 = !DILocation(line: 88, scope: !167)
!178 = !DILocation(line: 93, scope: !167)
!179 = !DILocation(line: 103, scope: !167)
!180 = !DILocation(line: 120, scope: !167)
!181 = !DILocation(line: 126, scope: !167)
!182 = !DILocation(line: 130, scope: !167)
!183 = !DILocation(line: 142, scope: !167)
!184 = !DILocation(line: 147, scope: !167)
!185 = !DILocation(line: 153, scope: !167)
!186 = !DILocation(line: 159, scope: !167)
!187 = !DILocation(line: 168, scope: !167)
!188 = !DILocation(line: 174, scope: !167)
!189 = !DILocation(line: 179, scope: !167)
!190 = !DILocation(line: 181, scope: !167)
!191 = !DILocation(line: 199, scope: !167)
!192 = !DILocation(line: 206, scope: !167)
!193 = !DILocation(line: 214, scope: !167)
!194 = !DILocation(line: 222, scope: !167)
!195 = !DILocation(line: 230, scope: !167)
!196 = !DILocation(line: 248, scope: !167)
!197 = !DILocation(line: 253, scope: !167)
!198 = !DILocation(line: 257, scope: !167)
!199 = !DILocation(line: 261, scope: !167)
!200 = !DILocation(line: 264, scope: !167)
!201 = !DILocation(line: 268, scope: !167)
!202 = !DILocation(line: 303, scope: !167)
!203 = !DILocation(line: 498, scope: !167)
!204 = !DILocation(line: 499, scope: !167)
!205 = !DILocation(line: 504, scope: !167)
!206 = !DILocation(line: 23, scope: !207)
!207 = !DILexicalBlockFile(scope: !37, file: !208, discriminator: 0)
!208 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/GetVarint32.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!209 = !DILocation(line: 36, scope: !207)
!210 = !DILocation(line: 39, scope: !207)
!211 = !DILocation(line: 47, scope: !207)
!212 = !DILocation(line: 50, scope: !207)
!213 = !DILocation(line: 53, scope: !207)
!214 = !DILocation(line: 55, scope: !207)
!215 = !DILocation(line: 64, scope: !207)
!216 = !DILocation(line: 71, scope: !207)
!217 = !DILocation(line: 72, scope: !207)
!218 = !DILocation(line: 73, scope: !207)
!219 = !DILocation(line: 509, scope: !167)
!220 = !DILocation(line: 517, scope: !167)
!221 = !DILocation(line: 518, scope: !167)
!222 = !DILocation(line: 521, scope: !167)
!223 = !DILocation(line: 524, scope: !167)
!224 = !DILocation(line: 547, scope: !167)
!225 = !DILocation(line: 550, scope: !167)
!226 = !DILocation(line: 533, scope: !167)
!227 = !DILocation(line: 535, scope: !167)
!228 = !DILocation(line: 556, scope: !167)
!229 = !DILocation(line: 425, scope: !167)
!230 = !DILocation(line: 433, scope: !167)
!231 = !DILocation(line: 469, scope: !167)
!232 = !DILocation(line: 474, scope: !167)
!233 = !DILocation(line: 478, scope: !167)
!234 = !DILocation(line: 484, scope: !167)
!235 = !DILocation(line: 491, scope: !167)
!236 = !DILocation(line: 327, scope: !167)
!237 = !DILocation(line: 332, scope: !167)
!238 = !DILocation(line: 343, scope: !167)
!239 = !DILocation(line: 349, scope: !167)
!240 = !DILocation(line: 352, scope: !167)
!241 = !DILocation(line: 358, scope: !167)
!242 = !DILocation(line: 362, scope: !167)
!243 = !DILocation(line: 364, scope: !167)
!244 = !DILocation(line: 372, scope: !167)
!245 = !DILocation(line: 377, scope: !167)
!246 = !DILocation(line: 378, scope: !167)
!247 = !DILocation(line: 379, scope: !167)
!248 = !DILocation(line: 384, scope: !167)
!249 = !DILocation(line: 389, scope: !167)
!250 = !DILocation(line: 390, scope: !167)
!251 = !DILocation(line: 405, scope: !167)
!252 = !DILocation(line: 411, scope: !167)
!253 = !DILocation(line: 563, scope: !167)
!254 = !DILocation(line: 565, scope: !167)
!255 = !DILocation(line: 575, scope: !167)
!256 = !DILocation(line: 1037, scope: !167)
!257 = !DILocation(line: 1041, scope: !167)
!258 = !DILocation(line: 1042, scope: !167)
!259 = !DILocation(line: 1044, scope: !167)
!260 = !DILocation(line: 1057, scope: !167)
!261 = !DILocation(line: 1063, scope: !167)
!262 = !DILocation(line: 1072, scope: !167)
!263 = !DILocation(line: 1077, scope: !167)
!264 = !DILocation(line: 1083, scope: !167)
!265 = !DILocation(line: 1095, scope: !167)
!266 = !DILocation(line: 1097, scope: !167)
!267 = !DILocation(line: 1099, scope: !167)
!268 = !DILocation(line: 1101, scope: !167)
!269 = !DILocation(line: 1103, scope: !167)
!270 = !DILocation(line: 1109, scope: !167)
!271 = !DILocation(line: 1110, scope: !167)
!272 = !DILocation(line: 1111, scope: !167)
!273 = !DILocation(line: 1112, scope: !167)
!274 = !DILocation(line: 1113, scope: !167)
!275 = !DILocation(line: 1114, scope: !167)
!276 = !DILocation(line: 1115, scope: !167)
!277 = !DILocation(line: 1116, scope: !167)
!278 = !DILocation(line: 1123, scope: !167)
!279 = !DILocation(line: 1124, scope: !167)
!280 = !DILocation(line: 1125, scope: !167)
!281 = !DILocation(line: 1130, scope: !167)
!282 = !DILocation(line: 1134, scope: !167)
!283 = !DILocation(line: 1140, scope: !167)
!284 = !DILocation(line: 1141, scope: !167)
!285 = !DILocation(line: 1142, scope: !167)
!286 = !DILocation(line: 1143, scope: !167)
!287 = !DILocation(line: 1145, scope: !167)
!288 = !DILocation(line: 1148, scope: !167)
!289 = !DILocation(line: 1149, scope: !167)
!290 = !DILocation(line: 1152, scope: !167)
!291 = !DILocation(line: 1157, scope: !167)
!292 = !DILocation(line: 1159, scope: !167)
!293 = !DILocation(line: 1163, scope: !167)
!294 = !DILocation(line: 1172, scope: !167)
!295 = !DILocation(line: 1182, scope: !167)
!296 = !DILocation(line: 1188, scope: !167)
!297 = !DILocation(line: 1190, scope: !167)
!298 = !DILocation(line: 1192, scope: !167)
!299 = !DILocation(line: 1194, scope: !167)
!300 = !DILocation(line: 1199, scope: !167)
!301 = !DILocation(line: 1201, scope: !167)
!302 = !DILocation(line: 1210, scope: !167)
!303 = !DILocation(line: 1217, scope: !167)
!304 = !DILocation(line: 1222, scope: !167)
!305 = !DILocation(line: 1225, scope: !167)
!306 = !DILocation(line: 1227, scope: !167)
!307 = !DILocation(line: 1234, scope: !167)
!308 = !DILocation(line: 1235, scope: !167)
!309 = !DILocation(line: 1236, scope: !167)
!310 = !DILocation(line: 1237, scope: !167)
!311 = !DILocation(line: 1242, scope: !167)
!312 = !DILocation(line: 1243, scope: !167)
!313 = !DILocation(line: 1245, scope: !167)
!314 = !DILocation(line: 1246, scope: !167)
!315 = !DILocation(line: 1247, scope: !167)
!316 = !DILocation(line: 1250, scope: !167)
!317 = !DILocation(line: 1252, scope: !167)
!318 = !DILocation(line: 1254, scope: !167)
!319 = !DILocation(line: 1256, scope: !167)
!320 = !DILocation(line: 1258, scope: !167)
!321 = !DILocation(line: 1268, scope: !167)
!322 = !DILocation(line: 1272, scope: !167)
!323 = !DILocation(line: 1281, scope: !167)
!324 = !DILocation(line: 1282, scope: !167)
!325 = !DILocation(line: 1283, scope: !167)
!326 = !DILocation(line: 1285, scope: !167)
!327 = !DILocation(line: 1287, scope: !167)
!328 = !DILocation(line: 1297, scope: !167)
!329 = !DILocation(line: 1300, scope: !167)
!330 = !DILocation(line: 1309, scope: !167)
!331 = !DILocation(line: 1326, scope: !167)
!332 = !DILocation(line: 1334, scope: !167)
!333 = !DILocation(line: 1339, scope: !167)
!334 = !DILocation(line: 1340, scope: !167)
!335 = !DILocation(line: 1343, scope: !167)
!336 = !DILocation(line: 1354, scope: !167)
!337 = !DILocation(line: 1359, scope: !167)
!338 = !DILocation(line: 1363, scope: !167)
!339 = !DILocation(line: 1373, scope: !167)
!340 = !DILocation(line: 1375, scope: !167)
!341 = !DILocation(line: 1376, scope: !167)
!342 = !DILocation(line: 1378, scope: !167)
!343 = !DILocation(line: 1314, scope: !167)
!344 = !DILocation(line: 1318, scope: !167)
!345 = !DILocation(line: 1017, scope: !167)
!346 = !DILocation(line: 1023, scope: !167)
!347 = !DILocation(line: 1025, scope: !167)
!348 = !DILocation(line: 1027, scope: !167)
!349 = !DILocation(line: 584, scope: !167)
!350 = !DILocation(line: 585, scope: !167)
!351 = !DILocation(line: 586, scope: !167)
!352 = !DILocation(line: 595, scope: !167)
!353 = !DILocation(line: 605, scope: !167)
!354 = !DILocation(line: 607, scope: !167)
!355 = !DILocation(line: 614, scope: !167)
!356 = !DILocation(line: 628, scope: !167)
!357 = !DILocation(line: 629, scope: !167)
!358 = !DILocation(line: 644, scope: !167)
!359 = !DILocation(line: 645, scope: !167)
!360 = !DILocation(line: 646, scope: !167)
!361 = !DILocation(line: 647, scope: !167)
!362 = !DILocation(line: 649, scope: !167)
!363 = !DILocation(line: 651, scope: !167)
!364 = !DILocation(line: 654, scope: !167)
!365 = !DILocation(line: 655, scope: !167)
!366 = !DILocation(line: 656, scope: !167)
!367 = !DILocation(line: 658, scope: !167)
!368 = !DILocation(line: 659, scope: !167)
!369 = !DILocation(line: 662, scope: !167)
!370 = !DILocation(line: 664, scope: !167)
!371 = !DILocation(line: 666, scope: !167)
!372 = !DILocation(line: 668, scope: !167)
!373 = !DILocation(line: 670, scope: !167)
!374 = !DILocation(line: 684, scope: !167)
!375 = !DILocation(line: 695, scope: !167)
!376 = !DILocation(line: 697, scope: !167)
!377 = !DILocation(line: 703, scope: !167)
!378 = !DILocation(line: 704, scope: !167)
!379 = !DILocation(line: 705, scope: !167)
!380 = !DILocation(line: 708, scope: !167)
!381 = !DILocation(line: 710, scope: !167)
!382 = !DILocation(line: 713, scope: !167)
!383 = !DILocation(line: 717, scope: !167)
!384 = !DILocation(line: 786, scope: !167)
!385 = !DILocation(line: 788, scope: !167)
!386 = !DILocation(line: 790, scope: !167)
!387 = !DILocation(line: 794, scope: !167)
!388 = !DILocation(line: 795, scope: !167)
!389 = !DILocation(line: 796, scope: !167)
!390 = !DILocation(line: 799, scope: !167)
!391 = !DILocation(line: 804, scope: !167)
!392 = !DILocation(line: 814, scope: !167)
!393 = !DILocation(line: 817, scope: !167)
!394 = !DILocation(line: 821, scope: !167)
!395 = !DILocation(line: 822, scope: !167)
!396 = !DILocation(line: 823, scope: !167)
!397 = !DILocation(line: 825, scope: !167)
!398 = !DILocation(line: 830, scope: !167)
!399 = !DILocation(line: 833, scope: !167)
!400 = !DILocation(line: 750, scope: !167)
!401 = !DILocation(line: 753, scope: !167)
!402 = !DILocation(line: 760, scope: !167)
!403 = !DILocation(line: 766, scope: !167)
!404 = !DILocation(line: 769, scope: !167)
!405 = !DILocation(line: 770, scope: !167)
!406 = !DILocation(line: 773, scope: !167)
!407 = !DILocation(line: 775, scope: !167)
!408 = !DILocation(line: 778, scope: !167)
!409 = !DILocation(line: 779, scope: !167)
!410 = !DILocation(line: 780, scope: !167)
!411 = !DILocation(line: 782, scope: !167)
!412 = !DILocation(line: 723, scope: !167)
!413 = !DILocation(line: 726, scope: !167)
!414 = !DILocation(line: 730, scope: !167)
!415 = !DILocation(line: 731, scope: !167)
!416 = !DILocation(line: 732, scope: !167)
!417 = !DILocation(line: 733, scope: !167)
!418 = !DILocation(line: 734, scope: !167)
!419 = !DILocation(line: 737, scope: !167)
!420 = !DILocation(line: 739, scope: !167)
!421 = !DILocation(line: 741, scope: !167)
!422 = !DILocation(line: 743, scope: !167)
!423 = !DILocation(line: 843, scope: !167)
!424 = !DILocation(line: 844, scope: !167)
!425 = !DILocation(line: 845, scope: !167)
!426 = !DILocation(line: 853, scope: !167)
!427 = !DILocation(line: 857, scope: !167)
!428 = !DILocation(line: 861, scope: !167)
!429 = !DILocation(line: 865, scope: !167)
!430 = !DILocation(line: 869, scope: !167)
!431 = !DILocation(line: 870, scope: !167)
!432 = !DILocation(line: 871, scope: !167)
!433 = !DILocation(line: 877, scope: !167)
!434 = !DILocation(line: 887, scope: !167)
!435 = !DILocation(line: 889, scope: !167)
!436 = !DILocation(line: 892, scope: !167)
!437 = !DILocation(line: 897, scope: !167)
!438 = !DILocation(line: 898, scope: !167)
!439 = !DILocation(line: 900, scope: !167)
!440 = !DILocation(line: 922, scope: !167)
!441 = !DILocation(line: 923, scope: !167)
!442 = !DILocation(line: 924, scope: !167)
!443 = !DILocation(line: 927, scope: !167)
!444 = !DILocation(line: 928, scope: !167)
!445 = !DILocation(line: 929, scope: !167)
!446 = !DILocation(line: 930, scope: !167)
!447 = !DILocation(line: 931, scope: !167)
!448 = !DILocation(line: 932, scope: !167)
!449 = !DILocation(line: 933, scope: !167)
!450 = !DILocation(line: 946, scope: !167)
!451 = !DILocation(line: 961, scope: !167)
!452 = !DILocation(line: 963, scope: !167)
!453 = !DILocation(line: 972, scope: !167)
!454 = !DILocation(line: 974, scope: !167)
!455 = !DILocation(line: 975, scope: !167)
!456 = !DILocation(line: 1001, scope: !167)
!457 = !DILocation(line: 1391, scope: !167)
!458 = !DILocation(line: 41, scope: !459)
!459 = !DILexicalBlockFile(scope: !37, file: !460, discriminator: 0)
!460 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekRowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!461 = !DILocation(line: 43, scope: !459)
!462 = !DILocation(line: 44, scope: !459)
!463 = !DILocation(line: 45, scope: !459)
!464 = !DILocation(line: 47, scope: !459)
!465 = !DILocation(line: 49, scope: !459)
!466 = !DILocation(line: 50, scope: !459)
!467 = !DILocation(line: 51, scope: !459)
!468 = !DILocation(line: 58, scope: !459)
!469 = !DILocation(line: 60, scope: !459)
!470 = !DILocation(line: 65, scope: !459)
!471 = !DILocation(line: 66, scope: !459)
!472 = !DILocation(line: 69, scope: !459)
!473 = !DILocation(line: 72, scope: !459)
!474 = !DILocation(line: 73, scope: !459)
!475 = !DILocation(line: 74, scope: !459)
!476 = !DILocation(line: 75, scope: !459)
!477 = !DILocation(line: 81, scope: !459)
!478 = !DILocation(line: 85, scope: !459)
!479 = !DILocation(line: 86, scope: !459)
!480 = !DILocation(line: 87, scope: !459)
!481 = !DILocation(line: 88, scope: !459)
!482 = !DILocation(line: 90, scope: !459)
!483 = !DILocation(line: 95, scope: !459)
!484 = !DILocation(line: 96, scope: !459)
!485 = !DILocation(line: 97, scope: !459)
!486 = !DILocation(line: 98, scope: !459)
!487 = !DILocation(line: 100, scope: !459)
!488 = !DILocation(line: 106, scope: !459)
!489 = !DILocation(line: 107, scope: !459)
!490 = !DILocation(line: 110, scope: !459)
!491 = !DILocation(line: 111, scope: !459)
!492 = !DILocation(line: 114, scope: !459)
!493 = !DILocation(line: 117, scope: !459)
!494 = !DILocation(line: 118, scope: !459)
!495 = !DILocation(line: 125, scope: !459)
!496 = !DILocation(line: 128, scope: !459)
!497 = !DILocation(line: 129, scope: !459)
!498 = !DILocation(line: 132, scope: !459)
!499 = !DILocation(line: 133, scope: !459)
!500 = !DILocation(line: 136, scope: !459)
!501 = !DILocation(line: 137, scope: !459)
!502 = !DILocation(line: 140, scope: !459)
!503 = !DILocation(line: 141, scope: !459)
!504 = !DILocation(line: 144, scope: !459)
!505 = !DILocation(line: 145, scope: !459)
!506 = !DILocation(line: 146, scope: !459)
!507 = !DILocation(line: 155, scope: !459)
!508 = !DILocation(line: 157, scope: !459)
!509 = !DILocation(line: 165, scope: !459)
!510 = !DILocation(line: 166, scope: !459)
!511 = !DILocation(line: 178, scope: !459)
!512 = !DILocation(line: 183, scope: !459)
!513 = !DILocation(line: 184, scope: !459)
!514 = !DILocation(line: 67, scope: !167)
!515 = !DILocation(line: 58, scope: !516)
!516 = !DILexicalBlockFile(scope: !37, file: !517, discriminator: 0)
!517 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareJumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!518 = !DILocation(line: 61, scope: !516)
!519 = !DILocation(line: 63, scope: !516)
!520 = !DILocation(line: 66, scope: !516)
!521 = !DILocation(line: 69, scope: !516)
!522 = !DILocation(line: 72, scope: !516)
!523 = !DILocation(line: 73, scope: !516)
!524 = !DILocation(line: 74, scope: !516)
!525 = !DILocation(line: 75, scope: !516)
!526 = !DILocation(line: 78, scope: !516)
!527 = !DILocation(line: 79, scope: !516)
!528 = !DILocation(line: 80, scope: !516)
!529 = !DILocation(line: 81, scope: !516)
!530 = !DILocation(line: 236, scope: !516)
!531 = !DILocation(line: 238, scope: !516)
!532 = !DILocation(line: 244, scope: !516)
!533 = !DILocation(line: 246, scope: !516)
!534 = !DILocation(line: 332, scope: !516)
!535 = !DILocation(line: 334, scope: !516)
!536 = !DILocation(line: 503, scope: !516)
!537 = !DILocation(line: 505, scope: !516)
!538 = !DILocation(line: 508, scope: !516)
!539 = !DILocation(line: 510, scope: !516)
!540 = !DILocation(line: 513, scope: !516)
!541 = !DILocation(line: 515, scope: !516)
!542 = !DILocation(line: 518, scope: !516)
!543 = !DILocation(line: 520, scope: !516)
!544 = !DILocation(line: 526, scope: !516)
!545 = !DILocation(line: 528, scope: !516)
!546 = !DILocation(line: 532, scope: !516)
!547 = !DILocation(line: 539, scope: !516)
!548 = !DILocation(line: 540, scope: !516)
!549 = !DILocation(line: 541, scope: !516)
!550 = !DILocation(line: 542, scope: !516)
!551 = !DILocation(line: 544, scope: !516)
!552 = !DILocation(line: 553, scope: !516)
!553 = !DILocation(line: 555, scope: !516)
!554 = !DILocation(line: 559, scope: !516)
!555 = !DILocation(line: 566, scope: !516)
!556 = !DILocation(line: 567, scope: !516)
!557 = !DILocation(line: 568, scope: !516)
!558 = !DILocation(line: 569, scope: !516)
!559 = !DILocation(line: 571, scope: !516)
!560 = !DILocation(line: 579, scope: !516)
!561 = !DILocation(line: 580, scope: !516)
!562 = !DILocation(line: 581, scope: !516)
!563 = !DILocation(line: 582, scope: !516)
!564 = !DILocation(line: 583, scope: !516)
!565 = !DILocation(line: 588, scope: !516)
!566 = !DILocation(line: 612, scope: !516)
!567 = !DILocation(line: 614, scope: !516)
!568 = !DILocation(line: 619, scope: !516)
!569 = !DILocation(line: 621, scope: !516)
!570 = !DILocation(line: 626, scope: !516)
!571 = !DILocation(line: 628, scope: !516)
!572 = !DILocation(line: 634, scope: !516)
!573 = !DILocation(line: 636, scope: !516)
!574 = !DILocation(line: 642, scope: !516)
!575 = !DILocation(line: 644, scope: !516)
!576 = !DILocation(line: 650, scope: !516)
!577 = !DILocation(line: 652, scope: !516)
!578 = !DILocation(line: 688, scope: !516)
!579 = !DILocation(line: 689, scope: !516)
!580 = !DILocation(line: 690, scope: !516)
!581 = !DILocation(line: 691, scope: !516)
!582 = !DILocation(line: 36, scope: !583)
!583 = !DILexicalBlockFile(scope: !37, file: !584, discriminator: 0)
!584 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OnceLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!585 = !DILocation(line: 37, scope: !583)
!586 = !DILocation(line: 38, scope: !583)
!587 = !DILocation(line: 41, scope: !583)
!588 = !DILocation(line: 42, scope: !583)
!589 = !DILocation(line: 45, scope: !583)
!590 = !DILocation(line: 52, scope: !583)
!591 = !DILocation(line: 53, scope: !583)
!592 = !DILocation(line: 59, scope: !583)
!593 = !DILocation(line: 60, scope: !583)
!594 = !DILocation(line: 62, scope: !583)
!595 = !DILocation(line: 71, scope: !583)
!596 = !DILocation(line: 85, scope: !583)
!597 = !DILocation(line: 88, scope: !583)
!598 = !DILocation(line: 91, scope: !583)
!599 = !DILocation(line: 97, scope: !583)
!600 = !DILocation(line: 103, scope: !583)
!601 = !DILocation(line: 50, scope: !602)
!602 = !DILexicalBlockFile(scope: !37, file: !603, discriminator: 0)
!603 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenEphemeralLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!604 = !DILocation(line: 53, scope: !602)
!605 = !DILocation(line: 54, scope: !602)
!606 = !DILocation(line: 57, scope: !602)
!607 = !DILocation(line: 58, scope: !602)
!608 = !DILocation(line: 59, scope: !602)
!609 = !DILocation(line: 66, scope: !602)
!610 = !DILocation(line: 68, scope: !602)
!611 = !DILocation(line: 75, scope: !602)
!612 = !DILocation(line: 76, scope: !602)
!613 = !DILocation(line: 77, scope: !602)
!614 = !DILocation(line: 82, scope: !602)
!615 = !DILocation(line: 87, scope: !602)
!616 = !DILocation(line: 88, scope: !602)
!617 = !DILocation(line: 91, scope: !602)
!618 = !DILocation(line: 92, scope: !602)
!619 = !DILocation(line: 95, scope: !602)
!620 = !DILocation(line: 96, scope: !602)
!621 = !DILocation(line: 98, scope: !602)
!622 = !DILocation(line: 103, scope: !602)
!623 = !DILocation(line: 105, scope: !602)
!624 = !DILocation(line: 112, scope: !602)
!625 = !DILocation(line: 119, scope: !602)
!626 = !DILocation(line: 128, scope: !602)
!627 = !DILocation(line: 129, scope: !602)
!628 = !DILocation(line: 130, scope: !602)
!629 = !DILocation(line: 131, scope: !602)
!630 = !DILocation(line: 135, scope: !602)
!631 = !DILocation(line: 136, scope: !602)
!632 = !DILocation(line: 139, scope: !602)
!633 = !DILocation(line: 141, scope: !602)
!634 = !DILocation(line: 149, scope: !602)
!635 = !DILocation(line: 155, scope: !602)
!636 = !DILocation(line: 157, scope: !602)
!637 = !DILocation(line: 161, scope: !602)
!638 = !DILocation(line: 162, scope: !602)
!639 = !DILocation(line: 167, scope: !602)
!640 = !DILocation(line: 169, scope: !602)
!641 = !DILocation(line: 177, scope: !602)
!642 = !DILocation(line: 178, scope: !602)
!643 = !DILocation(line: 180, scope: !602)
!644 = !DILocation(line: 184, scope: !602)
!645 = !DILocation(line: 185, scope: !602)
!646 = !DILocation(line: 186, scope: !602)
!647 = !DILocation(line: 187, scope: !602)
!648 = !DILocation(line: 197, scope: !602)
!649 = !DILocation(line: 198, scope: !602)
!650 = !DILocation(line: 201, scope: !602)
!651 = !DILocation(line: 204, scope: !602)
!652 = !DILocation(line: 211, scope: !602)
!653 = !DILocation(line: 213, scope: !602)
!654 = !DILocation(line: 218, scope: !602)
!655 = !DILocation(line: 219, scope: !602)
!656 = !DILocation(line: 224, scope: !602)
!657 = !DILocation(line: 230, scope: !602)
!658 = !DILocation(line: 232, scope: !602)
!659 = !DILocation(line: 237, scope: !602)
!660 = !DILocation(line: 238, scope: !602)
!661 = !DILocation(line: 239, scope: !602)
!662 = !DILocation(line: 246, scope: !602)
!663 = !DILocation(line: 248, scope: !602)
!664 = !DILocation(line: 254, scope: !602)
!665 = !DILocation(line: 255, scope: !602)
!666 = !DILocation(line: 257, scope: !602)
!667 = !DILocation(line: 263, scope: !602)
!668 = !DILocation(line: 266, scope: !602)
!669 = !DILocation(line: 267, scope: !602)
!670 = !DILocation(line: 268, scope: !602)
!671 = !DILocation(line: 275, scope: !602)
!672 = !DILocation(line: 278, scope: !602)
!673 = !DILocation(line: 279, scope: !602)
!674 = !DILocation(line: 281, scope: !602)
!675 = !DILocation(line: 293, scope: !602)
!676 = !DILocation(line: 294, scope: !602)
!677 = !DILocation(line: 295, scope: !602)
!678 = !DILocation(line: 296, scope: !602)
!679 = !DILocation(line: 297, scope: !602)
!680 = !DILocation(line: 299, scope: !602)
!681 = !DILocation(line: 305, scope: !602)
!682 = !DILocation(line: 311, scope: !602)
!683 = !DILocation(line: 312, scope: !602)
!684 = !DILocation(line: 313, scope: !602)
!685 = !DILocation(line: 319, scope: !602)
!686 = !DILocation(line: 41, scope: !134)
!687 = !DILocation(line: 39, scope: !688)
!688 = !DILexicalBlockFile(scope: !37, file: !689, discriminator: 0)
!689 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RowidLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!690 = !DILocation(line: 40, scope: !688)
!691 = !DILocation(line: 43, scope: !688)
!692 = !DILocation(line: 44, scope: !688)
!693 = !DILocation(line: 47, scope: !688)
!694 = !DILocation(line: 48, scope: !688)
!695 = !DILocation(line: 51, scope: !688)
!696 = !DILocation(line: 52, scope: !688)
!697 = !DILocation(line: 53, scope: !688)
!698 = !DILocation(line: 68, scope: !688)
!699 = !DILocation(line: 73, scope: !688)
!700 = !DILocation(line: 74, scope: !688)
!701 = !DILocation(line: 77, scope: !688)
!702 = !DILocation(line: 82, scope: !688)
!703 = !DILocation(line: 83, scope: !688)
!704 = !DILocation(line: 84, scope: !688)
!705 = !DILocation(line: 86, scope: !688)
!706 = !DILocation(line: 92, scope: !688)
!707 = !DILocation(line: 93, scope: !688)
!708 = !DILocation(line: 94, scope: !688)
!709 = !DILocation(line: 96, scope: !688)
!710 = !DILocation(line: 102, scope: !688)
!711 = !DILocation(line: 103, scope: !688)
!712 = !DILocation(line: 104, scope: !688)
!713 = !DILocation(line: 106, scope: !688)
!714 = !DILocation(line: 120, scope: !688)
!715 = !DILocation(line: 128, scope: !688)
!716 = !DILocation(line: 129, scope: !688)
!717 = !DILocation(line: 135, scope: !688)
!718 = !DILocation(line: 140, scope: !688)
!719 = !DILocation(line: 141, scope: !688)
!720 = !DILocation(line: 144, scope: !688)
!721 = !DILocation(line: 149, scope: !688)
!722 = !DILocation(line: 150, scope: !688)
!723 = !DILocation(line: 151, scope: !688)
!724 = !DILocation(line: 152, scope: !688)
!725 = !DILocation(line: 154, scope: !688)
!726 = !DILocation(line: 159, scope: !688)
!727 = !DILocation(line: 160, scope: !688)
!728 = !DILocation(line: 161, scope: !688)
!729 = !DILocation(line: 162, scope: !688)
!730 = !DILocation(line: 164, scope: !688)
!731 = !DILocation(line: 167, scope: !688)
!732 = !DILocation(line: 48, scope: !733)
!733 = !DILexicalBlockFile(scope: !37, file: !734, discriminator: 0)
!734 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MakeRecordLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!735 = !DILocation(line: 54, scope: !733)
!736 = !DILocation(line: 55, scope: !733)
!737 = !DILocation(line: 58, scope: !733)
!738 = !DILocation(line: 59, scope: !733)
!739 = !DILocation(line: 62, scope: !733)
!740 = !DILocation(line: 63, scope: !733)
!741 = !DILocation(line: 66, scope: !733)
!742 = !DILocation(line: 72, scope: !733)
!743 = !DILocation(line: 73, scope: !733)
!744 = !DILocation(line: 74, scope: !733)
!745 = !DILocation(line: 80, scope: !733)
!746 = !DILocation(line: 87, scope: !733)
!747 = !DILocation(line: 94, scope: !733)
!748 = !DILocation(line: 145, scope: !733)
!749 = !DILocation(line: 146, scope: !733)
!750 = !DILocation(line: 148, scope: !733)
!751 = !DILocation(line: 149, scope: !733)
!752 = !DILocation(line: 150, scope: !733)
!753 = !DILocation(line: 151, scope: !733)
!754 = !DILocation(line: 162, scope: !733)
!755 = !DILocation(line: 171, scope: !733)
!756 = !DILocation(line: 172, scope: !733)
!757 = !DILocation(line: 177, scope: !733)
!758 = !DILocation(line: 179, scope: !733)
!759 = !DILocation(line: 185, scope: !733)
!760 = !DILocation(line: 187, scope: !733)
!761 = !DILocation(line: 193, scope: !733)
!762 = !DILocation(line: 195, scope: !733)
!763 = !DILocation(line: 199, scope: !733)
!764 = !DILocation(line: 205, scope: !733)
!765 = !DILocation(line: 206, scope: !733)
!766 = !DILocation(line: 207, scope: !733)
!767 = !DILocation(line: 209, scope: !733)
!768 = !DILocation(line: 211, scope: !733)
!769 = !DILocation(line: 218, scope: !733)
!770 = !DILocation(line: 224, scope: !733)
!771 = !DILocation(line: 225, scope: !733)
!772 = !DILocation(line: 227, scope: !733)
!773 = !DILocation(line: 232, scope: !733)
!774 = !DILocation(line: 234, scope: !733)
!775 = !DILocation(line: 239, scope: !733)
!776 = !DILocation(line: 241, scope: !733)
!777 = !DILocation(line: 242, scope: !733)
!778 = !DILocation(line: 243, scope: !733)
!779 = !DILocation(line: 244, scope: !733)
!780 = !DILocation(line: 245, scope: !733)
!781 = !DILocation(line: 261, scope: !733)
!782 = !DILocation(line: 271, scope: !733)
!783 = !DILocation(line: 272, scope: !733)
!784 = !DILocation(line: 276, scope: !733)
!785 = !DILocation(line: 282, scope: !733)
!786 = !DILocation(line: 283, scope: !733)
!787 = !DILocation(line: 284, scope: !733)
!788 = !DILocation(line: 286, scope: !733)
!789 = !DILocation(line: 292, scope: !733)
!790 = !DILocation(line: 295, scope: !733)
!791 = !DILocation(line: 297, scope: !733)
!792 = !DILocation(line: 0, scope: !733)
!793 = !DILocation(line: 306, scope: !733)
!794 = !DILocation(line: 311, scope: !733)
!795 = !DILocation(line: 312, scope: !733)
!796 = !DILocation(line: 314, scope: !733)
!797 = !DILocation(line: 318, scope: !733)
!798 = !DILocation(line: 323, scope: !733)
!799 = !DILocation(line: 324, scope: !733)
!800 = !DILocation(line: 326, scope: !733)
!801 = !DILocation(line: 330, scope: !733)
!802 = !DILocation(line: 335, scope: !733)
!803 = !DILocation(line: 336, scope: !733)
!804 = !DILocation(line: 338, scope: !733)
!805 = !DILocation(line: 355, scope: !733)
!806 = !DILocation(line: 361, scope: !733)
!807 = !DILocation(line: 362, scope: !733)
!808 = !DILocation(line: 368, scope: !733)
!809 = !DILocation(line: 369, scope: !733)
!810 = !DILocation(line: 370, scope: !733)
!811 = !DILocation(line: 371, scope: !733)
!812 = !DILocation(line: 373, scope: !733)
!813 = !DILocation(line: 377, scope: !733)
!814 = !DILocation(line: 378, scope: !733)
!815 = !DILocation(line: 391, scope: !733)
!816 = !DILocation(line: 396, scope: !733)
!817 = !DILocation(line: 397, scope: !733)
!818 = !DILocation(line: 398, scope: !733)
!819 = !DILocation(line: 400, scope: !733)
!820 = !DILocation(line: 406, scope: !733)
!821 = !DILocation(line: 407, scope: !733)
!822 = !DILocation(line: 408, scope: !733)
!823 = !DILocation(line: 409, scope: !733)
!824 = !DILocation(line: 412, scope: !733)
!825 = !DILocation(line: 413, scope: !733)
!826 = !DILocation(line: 414, scope: !733)
!827 = !DILocation(line: 415, scope: !733)
!828 = !DILocation(line: 416, scope: !733)
!829 = !DILocation(line: 417, scope: !733)
!830 = !DILocation(line: 418, scope: !733)
!831 = !DILocation(line: 419, scope: !733)
!832 = !DILocation(line: 421, scope: !733)
!833 = !DILocation(line: 427, scope: !733)
!834 = !DILocation(line: 428, scope: !733)
!835 = !DILocation(line: 434, scope: !733)
!836 = !DILocation(line: 436, scope: !733)
!837 = !DILocation(line: 438, scope: !733)
!838 = !DILocation(line: 440, scope: !733)
!839 = !DILocation(line: 442, scope: !733)
!840 = !DILocation(line: 448, scope: !733)
!841 = !DILocation(line: 449, scope: !733)
!842 = !DILocation(line: 468, scope: !733)
!843 = !DILocation(line: 469, scope: !733)
!844 = !DILocation(line: 470, scope: !733)
!845 = !DILocation(line: 454, scope: !733)
!846 = !DILocation(line: 461, scope: !733)
!847 = !DILocation(line: 463, scope: !733)
!848 = !DILocation(line: 479, scope: !733)
!849 = !DILocation(line: 480, scope: !733)
!850 = !DILocation(line: 481, scope: !733)
!851 = !DILocation(line: 484, scope: !733)
!852 = !DILocation(line: 485, scope: !733)
!853 = !DILocation(line: 486, scope: !733)
!854 = !DILocation(line: 487, scope: !733)
!855 = !DILocation(line: 490, scope: !733)
!856 = !DILocation(line: 492, scope: !733)
!857 = !DILocation(line: 500, scope: !733)
!858 = !DILocation(line: 506, scope: !733)
!859 = !DILocation(line: 508, scope: !733)
!860 = !DILocation(line: 509, scope: !733)
!861 = !DILocation(line: 510, scope: !733)
!862 = !DILocation(line: 516, scope: !733)
!863 = !DILocation(line: 520, scope: !733)
!864 = !DILocation(line: 521, scope: !733)
!865 = !DILocation(line: 527, scope: !733)
!866 = !DILocation(line: 530, scope: !733)
!867 = !DILocation(line: 535, scope: !733)
!868 = !DILocation(line: 536, scope: !733)
!869 = !DILocation(line: 537, scope: !733)
!870 = !DILocation(line: 541, scope: !733)
!871 = !DILocation(line: 542, scope: !733)
!872 = !DILocation(line: 550, scope: !733)
!873 = !DILocation(line: 551, scope: !733)
!874 = !DILocation(line: 554, scope: !733)
!875 = !DILocation(line: 555, scope: !733)
!876 = !DILocation(line: 556, scope: !733)
!877 = !DILocation(line: 557, scope: !733)
!878 = !DILocation(line: 558, scope: !733)
!879 = !DILocation(line: 559, scope: !733)
!880 = !DILocation(line: 566, scope: !733)
!881 = !DILocation(line: 571, scope: !733)
!882 = !DILocation(line: 572, scope: !733)
!883 = !DILocation(line: 573, scope: !733)
!884 = !DILocation(line: 575, scope: !733)
!885 = !DILocation(line: 603, scope: !733)
!886 = !DILocation(line: 604, scope: !733)
!887 = !DILocation(line: 619, scope: !733)
!888 = !DILocation(line: 625, scope: !733)
!889 = !DILocation(line: 626, scope: !733)
!890 = !DILocation(line: 627, scope: !733)
!891 = !DILocation(line: 630, scope: !733)
!892 = !DILocation(line: 631, scope: !733)
!893 = !DILocation(line: 638, scope: !733)
!894 = !DILocation(line: 639, scope: !733)
!895 = !DILocation(line: 641, scope: !733)
!896 = !DILocation(line: 646, scope: !733)
!897 = !DILocation(line: 647, scope: !733)
!898 = !DILocation(line: 648, scope: !733)
!899 = !DILocation(line: 649, scope: !733)
!900 = !DILocation(line: 652, scope: !733)
!901 = !DILocation(line: 653, scope: !733)
!902 = !DILocation(line: 654, scope: !733)
!903 = !DILocation(line: 656, scope: !733)
!904 = !DILocation(line: 662, scope: !733)
!905 = !DILocation(line: 663, scope: !733)
!906 = !DILocation(line: 664, scope: !733)
!907 = !DILocation(line: 667, scope: !733)
!908 = !DILocation(line: 668, scope: !733)
!909 = !DILocation(line: 671, scope: !733)
!910 = !DILocation(line: 673, scope: !733)
!911 = !DILocation(line: 677, scope: !733)
!912 = !DILocation(line: 678, scope: !733)
!913 = !DILocation(line: 679, scope: !733)
!914 = !DILocation(line: 684, scope: !733)
!915 = !DILocation(line: 687, scope: !733)
!916 = !DILocation(line: 688, scope: !733)
!917 = !DILocation(line: 689, scope: !733)
!918 = !DILocation(line: 693, scope: !733)
!919 = !DILocation(line: 694, scope: !733)
!920 = !DILocation(line: 695, scope: !733)
!921 = !DILocation(line: 698, scope: !733)
!922 = !DILocation(line: 699, scope: !733)
!923 = !DILocation(line: 701, scope: !733)
!924 = !DILocation(line: 707, scope: !733)
!925 = !DILocation(line: 40, scope: !926)
!926 = !DILexicalBlockFile(scope: !37, file: !927, discriminator: 0)
!927 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!928 = !DILocation(line: 41, scope: !926)
!929 = !DILocation(line: 43, scope: !926)
!930 = !DILocation(line: 51, scope: !926)
!931 = !DILocation(line: 24, scope: !926)
!932 = !DILocation(line: 57, scope: !926)
!933 = !DILocation(line: 58, scope: !926)
!934 = !DILocation(line: 61, scope: !926)
!935 = !DILocation(line: 62, scope: !926)
!936 = !DILocation(line: 63, scope: !926)
!937 = !DILocation(line: 64, scope: !926)
!938 = !DILocation(line: 65, scope: !926)
!939 = !DILocation(line: 68, scope: !926)
!940 = !DILocation(line: 69, scope: !926)
!941 = !DILocation(line: 70, scope: !926)
!942 = !DILocation(line: 71, scope: !926)
!943 = !DILocation(line: 74, scope: !926)
!944 = !DILocation(line: 76, scope: !926)
!945 = !DILocation(line: 79, scope: !926)
!946 = !DILocation(line: 81, scope: !926)
!947 = !DILocation(line: 84, scope: !926)
!948 = !DILocation(line: 85, scope: !926)
!949 = !DILocation(line: 89, scope: !926)
!950 = !DILocation(line: 92, scope: !926)
!951 = !DILocation(line: 101, scope: !926)
!952 = !DILocation(line: 102, scope: !926)
!953 = !DILocation(line: 107, scope: !926)
!954 = !DILocation(line: 42, scope: !955)
!955 = !DILexicalBlockFile(scope: !37, file: !956, discriminator: 0)
!956 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/NextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!957 = !DILocation(line: 43, scope: !955)
!958 = !DILocation(line: 46, scope: !955)
!959 = !DILocation(line: 65, scope: !955)
!960 = !DILocation(line: 71, scope: !955)
!961 = !DILocation(line: 75, scope: !955)
!962 = !DILocation(line: 80, scope: !955)
!963 = !DILocation(line: 83, scope: !955)
!964 = !DILocation(line: 84, scope: !955)
!965 = !DILocation(line: 87, scope: !955)
!966 = !DILocation(line: 93, scope: !955)
!967 = !DILocation(line: 99, scope: !955)
!968 = !DILocation(line: 101, scope: !955)
!969 = !DILocation(line: 114, scope: !955)
!970 = !DILocation(line: 116, scope: !955)
!971 = !DILocation(line: 42, scope: !972)
!972 = !DILexicalBlockFile(scope: !37, file: !973, discriminator: 0)
!973 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/StringLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!974 = !DILocation(line: 43, scope: !972)
!975 = !DILocation(line: 48, scope: !972)
!976 = !DILocation(line: 49, scope: !972)
!977 = !DILocation(line: 50, scope: !972)
!978 = !DILocation(line: 51, scope: !972)
!979 = !DILocation(line: 52, scope: !972)
!980 = !DILocation(line: 55, scope: !972)
!981 = !DILocation(line: 56, scope: !972)
!982 = !DILocation(line: 57, scope: !972)
!983 = !DILocation(line: 58, scope: !972)
!984 = !DILocation(line: 59, scope: !972)
!985 = !DILocation(line: 60, scope: !972)
!986 = !DILocation(line: 50, scope: !987)
!987 = !DILexicalBlockFile(scope: !37, file: !988, discriminator: 0)
!988 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SeekGELowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!989 = !DILocation(line: 52, scope: !987)
!990 = !DILocation(line: 53, scope: !987)
!991 = !DILocation(line: 56, scope: !987)
!992 = !DILocation(line: 57, scope: !987)
!993 = !DILocation(line: 60, scope: !987)
!994 = !DILocation(line: 61, scope: !987)
!995 = !DILocation(line: 63, scope: !987)
!996 = !DILocation(line: 64, scope: !987)
!997 = !DILocation(line: 68, scope: !987)
!998 = !DILocation(line: 69, scope: !987)
!999 = !DILocation(line: 72, scope: !987)
!1000 = !DILocation(line: 73, scope: !987)
!1001 = !DILocation(line: 76, scope: !987)
!1002 = !DILocation(line: 77, scope: !987)
!1003 = !DILocation(line: 80, scope: !987)
!1004 = !DILocation(line: 81, scope: !987)
!1005 = !DILocation(line: 84, scope: !987)
!1006 = !DILocation(line: 85, scope: !987)
!1007 = !DILocation(line: 92, scope: !987)
!1008 = !DILocation(line: 94, scope: !987)
!1009 = !DILocation(line: 99, scope: !987)
!1010 = !DILocation(line: 102, scope: !987)
!1011 = !DILocation(line: 103, scope: !987)
!1012 = !DILocation(line: 105, scope: !987)
!1013 = !DILocation(line: 106, scope: !987)
!1014 = !DILocation(line: 114, scope: !987)
!1015 = !DILocation(line: 119, scope: !987)
!1016 = !DILocation(line: 42, scope: !1017)
!1017 = !DILexicalBlockFile(scope: !37, file: !1018, discriminator: 0)
!1018 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/Operators/ApplyNumericAffinity.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1019 = !DILocation(line: 121, scope: !987)
!1020 = !DILocation(line: 126, scope: !987)
!1021 = !DILocation(line: 129, scope: !987)
!1022 = !DILocation(line: 132, scope: !987)
!1023 = !DILocation(line: 134, scope: !987)
!1024 = !DILocation(line: 135, scope: !987)
!1025 = !DILocation(line: 141, scope: !987)
!1026 = !DILocation(line: 145, scope: !987)
!1027 = !DILocation(line: 146, scope: !987)
!1028 = !DILocation(line: 153, scope: !987)
!1029 = !DILocation(line: 164, scope: !987)
!1030 = !DILocation(line: 185, scope: !987)
!1031 = !DILocation(line: 186, scope: !987)
!1032 = !DILocation(line: 187, scope: !987)
!1033 = !DILocation(line: 193, scope: !987)
!1034 = !DILocation(line: 194, scope: !987)
!1035 = !DILocation(line: 198, scope: !987)
!1036 = !DILocation(line: 199, scope: !987)
!1037 = !DILocation(line: 201, scope: !987)
!1038 = !DILocation(line: 207, scope: !987)
!1039 = !DILocation(line: 211, scope: !987)
!1040 = !DILocation(line: 212, scope: !987)
!1041 = !DILocation(line: 214, scope: !987)
!1042 = !DILocation(line: 226, scope: !987)
!1043 = !DILocation(line: 227, scope: !987)
!1044 = !DILocation(line: 231, scope: !987)
!1045 = !DILocation(line: 232, scope: !987)
!1046 = !DILocation(line: 239, scope: !987)
!1047 = !DILocation(line: 240, scope: !987)
!1048 = !DILocation(line: 244, scope: !987)
!1049 = !DILocation(line: 245, scope: !987)
!1050 = !DILocation(line: 247, scope: !987)
!1051 = !DILocation(line: 264, scope: !987)
!1052 = !DILocation(line: 265, scope: !987)
!1053 = !DILocation(line: 273, scope: !987)
!1054 = !DILocation(line: 274, scope: !987)
!1055 = !DILocation(line: 281, scope: !987)
!1056 = !DILocation(line: 288, scope: !987)
!1057 = !DILocation(line: 289, scope: !987)
!1058 = !DILocation(line: 290, scope: !987)
!1059 = !DILocation(line: 291, scope: !987)
!1060 = !DILocation(line: 292, scope: !987)
!1061 = !DILocation(line: 299, scope: !987)
!1062 = !DILocation(line: 303, scope: !987)
!1063 = !DILocation(line: 305, scope: !987)
!1064 = !DILocation(line: 312, scope: !987)
!1065 = !DILocation(line: 315, scope: !987)
!1066 = !DILocation(line: 317, scope: !987)
!1067 = !DILocation(line: 318, scope: !987)
!1068 = !DILocation(line: 319, scope: !987)
!1069 = !DILocation(line: 323, scope: !987)
!1070 = !DILocation(line: 324, scope: !987)
!1071 = !DILocation(line: 327, scope: !987)
!1072 = !DILocation(line: 329, scope: !987)
!1073 = !DILocation(line: 332, scope: !987)
!1074 = !DILocation(line: 334, scope: !987)
!1075 = !DILocation(line: 335, scope: !987)
!1076 = !DILocation(line: 339, scope: !987)
!1077 = !DILocation(line: 340, scope: !987)
!1078 = !DILocation(line: 342, scope: !987)
!1079 = !DILocation(line: 356, scope: !987)
!1080 = !DILocation(line: 357, scope: !987)
!1081 = !DILocation(line: 358, scope: !987)
!1082 = !DILocation(line: 359, scope: !987)
!1083 = !DILocation(line: 360, scope: !987)
!1084 = !DILocation(line: 364, scope: !987)
!1085 = !DILocation(line: 371, scope: !987)
!1086 = !DILocation(line: 372, scope: !987)
!1087 = !DILocation(line: 373, scope: !987)
!1088 = !DILocation(line: 375, scope: !987)
!1089 = !DILocation(line: 377, scope: !987)
!1090 = !DILocation(line: 378, scope: !987)
!1091 = !DILocation(line: 379, scope: !987)
!1092 = !DILocation(line: 0, scope: !987)
!1093 = !DILocation(line: 386, scope: !987)
!1094 = !DILocation(line: 394, scope: !987)
!1095 = !DILocation(line: 397, scope: !987)
!1096 = !DILocation(line: 398, scope: !987)
!1097 = !DILocation(line: 408, scope: !987)
!1098 = !DILocation(line: 413, scope: !987)
!1099 = !DILocation(line: 415, scope: !987)
!1100 = !DILocation(line: 494, scope: !987)
!1101 = !DILocation(line: 495, scope: !987)
!1102 = !DILocation(line: 501, scope: !987)
!1103 = !DILocation(line: 504, scope: !987)
!1104 = !DILocation(line: 505, scope: !987)
!1105 = !DILocation(line: 507, scope: !987)
!1106 = !DILocation(line: 508, scope: !987)
!1107 = !DILocation(line: 44, scope: !1108)
!1108 = !DILexicalBlockFile(scope: !37, file: !1109, discriminator: 0)
!1109 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IdxCompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1110 = !DILocation(line: 45, scope: !1108)
!1111 = !DILocation(line: 47, scope: !1108)
!1112 = !DILocation(line: 48, scope: !1108)
!1113 = !DILocation(line: 49, scope: !1108)
!1114 = !DILocation(line: 52, scope: !1108)
!1115 = !DILocation(line: 54, scope: !1108)
!1116 = !DILocation(line: 55, scope: !1108)
!1117 = !DILocation(line: 56, scope: !1108)
!1118 = !DILocation(line: 60, scope: !1108)
!1119 = !DILocation(line: 61, scope: !1108)
!1120 = !DILocation(line: 63, scope: !1108)
!1121 = !DILocation(line: 66, scope: !1108)
!1122 = !DILocation(line: 73, scope: !1108)
!1123 = !DILocation(line: 75, scope: !1108)
!1124 = !DILocation(line: 76, scope: !1108)
!1125 = !DILocation(line: 81, scope: !1108)
!1126 = !DILocation(line: 82, scope: !1108)
!1127 = !DILocation(line: 91, scope: !1108)
!1128 = !DILocation(line: 103, scope: !1108)
!1129 = !DILocation(line: 107, scope: !1108)
!1130 = !DILocation(line: 108, scope: !1108)
!1131 = !DILocation(line: 109, scope: !1108)
!1132 = !DILocation(line: 356, scope: !516)
!1133 = !DILocation(line: 358, scope: !516)
!1134 = !DILocation(line: 360, scope: !516)
!1135 = !DILocation(line: 369, scope: !516)
!1136 = !DILocation(line: 370, scope: !516)
!1137 = !DILocation(line: 372, scope: !516)
!1138 = !DILocation(line: 377, scope: !516)
!1139 = !DILocation(line: 384, scope: !516)
!1140 = !DILocation(line: 385, scope: !516)
!1141 = !DILocation(line: 387, scope: !516)
!1142 = !DILocation(line: 398, scope: !516)
!1143 = !DILocation(line: 400, scope: !516)
!1144 = !DILocation(line: 402, scope: !516)
!1145 = !DILocation(line: 407, scope: !516)
!1146 = !DILocation(line: 413, scope: !516)
!1147 = !DILocation(line: 425, scope: !516)
!1148 = !DILocation(line: 427, scope: !516)
!1149 = !DILocation(line: 430, scope: !516)
!1150 = !DILocation(line: 432, scope: !516)
!1151 = !DILocation(line: 439, scope: !516)
!1152 = !DILocation(line: 441, scope: !516)
!1153 = !DILocation(line: 444, scope: !516)
!1154 = !DILocation(line: 445, scope: !516)
!1155 = !DILocation(line: 446, scope: !516)
!1156 = !DILocation(line: 447, scope: !516)
!1157 = !DILocation(line: 449, scope: !516)
!1158 = !DILocation(line: 450, scope: !516)
!1159 = !DILocation(line: 456, scope: !516)
!1160 = !DILocation(line: 458, scope: !516)
!1161 = !DILocation(line: 462, scope: !516)
!1162 = !DILocation(line: 464, scope: !516)
!1163 = !DILocation(line: 474, scope: !516)
!1164 = !DILocation(line: 476, scope: !516)
!1165 = !DILocation(line: 480, scope: !516)
!1166 = !DILocation(line: 482, scope: !516)
!1167 = !DILocation(line: 487, scope: !516)
!1168 = !DILocation(line: 489, scope: !516)
!1169 = !DILocation(line: 595, scope: !516)
!1170 = !DILocation(line: 611, scope: !516)
!1171 = !DILocation(line: 35, scope: !1172)
!1172 = !DILexicalBlockFile(scope: !37, file: !1173, discriminator: 0)
!1173 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/RealAffinityLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1174 = !DILocation(line: 38, scope: !1172)
!1175 = !DILocation(line: 39, scope: !1172)
!1176 = !DILocation(line: 41, scope: !1172)
!1177 = !DILocation(line: 47, scope: !1172)
!1178 = !DILocation(line: 49, scope: !1172)
!1179 = !DILocation(line: 53, scope: !1172)
!1180 = !DILocation(line: 55, scope: !1172)
!1181 = !DILocation(line: 26, scope: !1182)
!1182 = !DILexicalBlockFile(scope: !37, file: !1183, discriminator: 0)
!1183 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterInsertLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1184 = !DILocation(line: 41, scope: !1182)
!1185 = !DILocation(line: 42, scope: !1182)
!1186 = !DILocation(line: 45, scope: !1182)
!1187 = !DILocation(line: 48, scope: !1182)
!1188 = !DILocation(line: 24, scope: !1182)
!1189 = !DILocation(line: 56, scope: !1182)
!1190 = !DILocation(line: 66, scope: !1182)
!1191 = !DILocation(line: 32, scope: !1192)
!1192 = !DILexicalBlockFile(scope: !37, file: !1193, discriminator: 0)
!1193 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/OpenPseudoLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1194 = !DILocation(line: 41, scope: !1192)
!1195 = !DILocation(line: 46, scope: !1192)
!1196 = !DILocation(line: 47, scope: !1192)
!1197 = !DILocation(line: 49, scope: !1192)
!1198 = !DILocation(line: 50, scope: !1192)
!1199 = !DILocation(line: 52, scope: !1192)
!1200 = !DILocation(line: 53, scope: !1192)
!1201 = !DILocation(line: 55, scope: !1192)
!1202 = !DILocation(line: 56, scope: !1192)
!1203 = !DILocation(line: 57, scope: !1192)
!1204 = !DILocation(line: 36, scope: !1205)
!1205 = !DILexicalBlockFile(scope: !37, file: !1206, discriminator: 0)
!1206 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterDataLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1207 = !DILocation(line: 39, scope: !1205)
!1208 = !DILocation(line: 40, scope: !1205)
!1209 = !DILocation(line: 41, scope: !1205)
!1210 = !DILocation(line: 46, scope: !1205)
!1211 = !DILocation(line: 60, scope: !1205)
!1212 = !DILocation(line: 61, scope: !1205)
!1213 = !DILocation(line: 62, scope: !1205)
!1214 = !DILocation(line: 63, scope: !1205)
!1215 = !DILocation(line: 31, scope: !1216)
!1216 = !DILexicalBlockFile(scope: !37, file: !1217, discriminator: 0)
!1217 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CompareLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1218 = !DILocation(line: 52, scope: !1216)
!1219 = !DILocation(line: 53, scope: !1216)
!1220 = !DILocation(line: 54, scope: !1216)
!1221 = !DILocation(line: 55, scope: !1216)
!1222 = !DILocation(line: 56, scope: !1216)
!1223 = !DILocation(line: 129, scope: !1216)
!1224 = !DILocation(line: 133, scope: !1216)
!1225 = !DILocation(line: 153, scope: !1216)
!1226 = !DILocation(line: 154, scope: !1216)
!1227 = !DILocation(line: 160, scope: !1216)
!1228 = !DILocation(line: 164, scope: !1216)
!1229 = !DILocation(line: 165, scope: !1216)
!1230 = !DILocation(line: 167, scope: !1216)
!1231 = !DILocation(line: 168, scope: !1216)
!1232 = !DILocation(line: 169, scope: !1216)
!1233 = !DILocation(line: 170, scope: !1216)
!1234 = !DILocation(line: 171, scope: !1216)
!1235 = !DILocation(line: 177, scope: !1216)
!1236 = !DILocation(line: 185, scope: !1216)
!1237 = !DILocation(line: 186, scope: !1216)
!1238 = !DILocation(line: 188, scope: !1216)
!1239 = !DILocation(line: 198, scope: !1216)
!1240 = !DILocation(line: 199, scope: !1216)
!1241 = !DILocation(line: 200, scope: !1216)
!1242 = !DILocation(line: 201, scope: !1216)
!1243 = !DILocation(line: 203, scope: !1216)
!1244 = !DILocation(line: 204, scope: !1216)
!1245 = !DILocation(line: 205, scope: !1216)
!1246 = !DILocation(line: 206, scope: !1216)
!1247 = !DILocation(line: 208, scope: !1216)
!1248 = !DILocation(line: 211, scope: !1216)
!1249 = !DILocation(line: 215, scope: !1216)
!1250 = !DILocation(line: 216, scope: !1216)
!1251 = !DILocation(line: 218, scope: !1216)
!1252 = !DILocation(line: 232, scope: !1216)
!1253 = !DILocation(line: 233, scope: !1216)
!1254 = !DILocation(line: 237, scope: !1216)
!1255 = !DILocation(line: 238, scope: !1216)
!1256 = !DILocation(line: 239, scope: !1216)
!1257 = !DILocation(line: 241, scope: !1216)
!1258 = !DILocation(line: 159, scope: !1216)
!1259 = !DILocation(line: 163, scope: !1216)
!1260 = !DILocation(line: 259, scope: !1216)
!1261 = !DILocation(line: 36, scope: !1262)
!1262 = !DILexicalBlockFile(scope: !37, file: !1263, discriminator: 0)
!1263 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/JumpLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1264 = !DILocation(line: 38, scope: !1262)
!1265 = !DILocation(line: 42, scope: !1262)
!1266 = !DILocation(line: 39, scope: !1262)
!1267 = !DILocation(line: 36, scope: !1268)
!1268 = !DILexicalBlockFile(scope: !37, file: !1269, discriminator: 0)
!1269 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/MoveLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1270 = !DILocation(line: 37, scope: !1268)
!1271 = !DILocation(line: 39, scope: !1268)
!1272 = !DILocation(line: 43, scope: !1268)
!1273 = !DILocation(line: 44, scope: !1268)
!1274 = !DILocation(line: 34, scope: !1275)
!1275 = !DILexicalBlockFile(scope: !37, file: !1276, discriminator: 0)
!1276 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfPosLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1277 = !DILocation(line: 35, scope: !1275)
!1278 = !DILocation(line: 36, scope: !1275)
!1279 = !DILocation(line: 37, scope: !1275)
!1280 = !DILocation(line: 43, scope: !1275)
!1281 = !DILocation(line: 45, scope: !1275)
!1282 = !DILocation(line: 61, scope: !1275)
!1283 = !DILocation(line: 25, scope: !1284)
!1284 = !DILexicalBlockFile(scope: !37, file: !1285, discriminator: 0)
!1285 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggStepLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1286 = !DILocation(line: 47, scope: !1284)
!1287 = !DILocation(line: 48, scope: !1284)
!1288 = !DILocation(line: 58, scope: !1284)
!1289 = !DILocation(line: 63, scope: !1284)
!1290 = !DILocation(line: 64, scope: !1284)
!1291 = !DILocation(line: 66, scope: !1284)
!1292 = !DILocation(line: 73, scope: !1284)
!1293 = !DILocation(line: 75, scope: !1284)
!1294 = !DILocation(line: 79, scope: !1284)
!1295 = !DILocation(line: 80, scope: !1284)
!1296 = !DILocation(line: 83, scope: !1284)
!1297 = !DILocation(line: 88, scope: !1284)
!1298 = !DILocation(line: 89, scope: !1284)
!1299 = !DILocation(line: 90, scope: !1284)
!1300 = !DILocation(line: 91, scope: !1284)
!1301 = !DILocation(line: 92, scope: !1284)
!1302 = !DILocation(line: 93, scope: !1284)
!1303 = !DILocation(line: 94, scope: !1284)
!1304 = !DILocation(line: 95, scope: !1284)
!1305 = !DILocation(line: 96, scope: !1284)
!1306 = !DILocation(line: 97, scope: !1284)
!1307 = !DILocation(line: 108, scope: !1284)
!1308 = !DILocation(line: 116, scope: !1284)
!1309 = !DILocation(line: 117, scope: !1284)
!1310 = !DILocation(line: 119, scope: !1284)
!1311 = !DILocation(line: 125, scope: !1284)
!1312 = !DILocation(line: 126, scope: !1284)
!1313 = !DILocation(line: 128, scope: !1284)
!1314 = !DILocation(line: 129, scope: !1284)
!1315 = !DILocation(line: 130, scope: !1284)
!1316 = !DILocation(line: 131, scope: !1284)
!1317 = !DILocation(line: 133, scope: !1284)
!1318 = !DILocation(line: 136, scope: !1284)
!1319 = !DILocation(line: 137, scope: !1284)
!1320 = !DILocation(line: 138, scope: !1284)
!1321 = !DILocation(line: 139, scope: !1284)
!1322 = !DILocation(line: 140, scope: !1284)
!1323 = !DILocation(line: 143, scope: !1284)
!1324 = !DILocation(line: 146, scope: !1284)
!1325 = !DILocation(line: 150, scope: !1284)
!1326 = !DILocation(line: 158, scope: !1284)
!1327 = !DILocation(line: 164, scope: !1284)
!1328 = !DILocation(line: 165, scope: !1284)
!1329 = !DILocation(line: 166, scope: !1284)
!1330 = !DILocation(line: 167, scope: !1284)
!1331 = !DILocation(line: 171, scope: !1284)
!1332 = !DILocation(line: 172, scope: !1284)
!1333 = !DILocation(line: 173, scope: !1284)
!1334 = !DILocation(line: 174, scope: !1284)
!1335 = !DILocation(line: 175, scope: !1284)
!1336 = !DILocation(line: 178, scope: !1284)
!1337 = !DILocation(line: 182, scope: !1284)
!1338 = !DILocation(line: 187, scope: !1284)
!1339 = !DILocation(line: 188, scope: !1284)
!1340 = !DILocation(line: 189, scope: !1284)
!1341 = !DILocation(line: 194, scope: !1284)
!1342 = !DILocation(line: 198, scope: !1284)
!1343 = !DILocation(line: 199, scope: !1284)
!1344 = !DILocation(line: 200, scope: !1284)
!1345 = !DILocation(line: 201, scope: !1284)
!1346 = !DILocation(line: 202, scope: !1284)
!1347 = !DILocation(line: 203, scope: !1284)
!1348 = !DILocation(line: 210, scope: !1284)
!1349 = !DILocation(line: 231, scope: !1284)
!1350 = !DILocation(line: 233, scope: !1284)
!1351 = !DILocation(line: 234, scope: !1284)
!1352 = !DILocation(line: 239, scope: !1284)
!1353 = !DILocation(line: 242, scope: !1284)
!1354 = !DILocation(line: 243, scope: !1284)
!1355 = !DILocation(line: 246, scope: !1284)
!1356 = !DILocation(line: 216, scope: !1284)
!1357 = !DILocation(line: 219, scope: !1284)
!1358 = !DILocation(line: 221, scope: !1284)
!1359 = !DILocation(line: 256, scope: !1284)
!1360 = !DILocation(line: 258, scope: !1284)
!1361 = !DILocation(line: 259, scope: !1284)
!1362 = !DILocation(line: 260, scope: !1284)
!1363 = !DILocation(line: 263, scope: !1284)
!1364 = !DILocation(line: 270, scope: !1284)
!1365 = !DILocation(line: 271, scope: !1284)
!1366 = !DILocation(line: 277, scope: !1284)
!1367 = !DILocation(line: 278, scope: !1284)
!1368 = !DILocation(line: 279, scope: !1284)
!1369 = !DILocation(line: 282, scope: !1284)
!1370 = !DILocation(line: 283, scope: !1284)
!1371 = !DILocation(line: 289, scope: !1284)
!1372 = !DILocation(line: 293, scope: !1284)
!1373 = !DILocation(line: 297, scope: !1284)
!1374 = !DILocation(line: 302, scope: !1284)
!1375 = !DILocation(line: 303, scope: !1284)
!1376 = !DILocation(line: 305, scope: !1284)
!1377 = !DILocation(line: 311, scope: !1284)
!1378 = !DILocation(line: 312, scope: !1284)
!1379 = !DILocation(line: 314, scope: !1284)
!1380 = !DILocation(line: 319, scope: !1284)
!1381 = !DILocation(line: 320, scope: !1284)
!1382 = !DILocation(line: 325, scope: !1284)
!1383 = !DILocation(line: 336, scope: !1284)
!1384 = !DILocation(line: 342, scope: !1284)
!1385 = !DILocation(line: 341, scope: !1284)
!1386 = !DILocation(line: 350, scope: !1284)
!1387 = !DILocation(line: 352, scope: !1284)
!1388 = !DILocation(line: 358, scope: !1284)
!1389 = !DILocation(line: 359, scope: !1284)
!1390 = !DILocation(line: 362, scope: !1284)
!1391 = !DILocation(line: 363, scope: !1284)
!1392 = !DILocation(line: 366, scope: !1284)
!1393 = !DILocation(line: 369, scope: !1284)
!1394 = !DILocation(line: 374, scope: !1284)
!1395 = !DILocation(line: 382, scope: !1284)
!1396 = !DILocation(line: 34, scope: !1397)
!1397 = !DILexicalBlockFile(scope: !37, file: !1398, discriminator: 0)
!1398 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/IfLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1399 = !DILocation(line: 35, scope: !1397)
!1400 = !DILocation(line: 40, scope: !1397)
!1401 = !DILocation(line: 41, scope: !1397)
!1402 = !DILocation(line: 36, scope: !1403)
!1403 = !DILexicalBlockFile(scope: !37, file: !1404, discriminator: 0)
!1404 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/SorterNextLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1405 = !DILocation(line: 37, scope: !1403)
!1406 = !DILocation(line: 43, scope: !1403)
!1407 = !DILocation(line: 46, scope: !1403)
!1408 = !DILocation(line: 47, scope: !1403)
!1409 = !DILocation(line: 49, scope: !1403)
!1410 = !DILocation(line: 55, scope: !1403)
!1411 = !DILocation(line: 56, scope: !1403)
!1412 = !DILocation(line: 60, scope: !1403)
!1413 = !DILocation(line: 62, scope: !1403)
!1414 = !DILocation(line: 75, scope: !1403)
!1415 = !DILocation(line: 85, scope: !1403)
!1416 = !DILocation(line: 31, scope: !1417)
!1417 = !DILexicalBlockFile(scope: !37, file: !1418, discriminator: 0)
!1418 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ReturnLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1419 = !DILocation(line: 33, scope: !1417)
!1420 = !DILocation(line: 35, scope: !1417)
!1421 = !DILocation(line: 37, scope: !1417)
!1422 = !DILocation(line: 39, scope: !1417)
!1423 = !DILocation(line: 41, scope: !1417)
!1424 = !DILocation(line: 45, scope: !1417)
!1425 = !DILocation(line: 48, scope: !1417)
!1426 = !DILocation(line: 31, scope: !1427)
!1427 = !DILexicalBlockFile(scope: !37, file: !1428, discriminator: 0)
!1428 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/AggFinalLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1429 = !DILocation(line: 32, scope: !1427)
!1430 = !DILocation(line: 33, scope: !1427)
!1431 = !DILocation(line: 34, scope: !1427)
!1432 = !DILocation(line: 39, scope: !1427)
!1433 = !DILocation(line: 45, scope: !1427)
!1434 = !DILocation(line: 47, scope: !1427)
!1435 = !DILocation(line: 48, scope: !1427)
!1436 = !DILocation(line: 49, scope: !1427)
!1437 = !DILocation(line: 56, scope: !1427)
!1438 = !DILocation(line: 59, scope: !1427)
!1439 = !DILocation(line: 67, scope: !1427)
!1440 = !DILocation(line: 40, scope: !1441)
!1441 = !DILexicalBlockFile(scope: !37, file: !1442, discriminator: 0)
!1442 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/CopyLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1443 = !DILocation(line: 41, scope: !1441)
!1444 = !DILocation(line: 43, scope: !1441)
!1445 = !DILocation(line: 23, scope: !1446)
!1446 = !DILexicalBlockFile(scope: !37, file: !1447, discriminator: 0)
!1447 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/ResultRowLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1448 = !DILocation(line: 28, scope: !1446)
!1449 = !DILocation(line: 52, scope: !1446)
!1450 = !DILocation(line: 56, scope: !1446)
!1451 = !DILocation(line: 62, scope: !1446)
!1452 = !DILocation(line: 63, scope: !1446)
!1453 = !DILocation(line: 64, scope: !1446)
!1454 = !DILocation(line: 65, scope: !1446)
!1455 = !DILocation(line: 71, scope: !1446)
!1456 = !DILocation(line: 75, scope: !1446)
!1457 = !DILocation(line: 76, scope: !1446)
!1458 = !DILocation(line: 80, scope: !1446)
!1459 = !DILocation(line: 82, scope: !1446)
!1460 = !DILocation(line: 83, scope: !1446)
!1461 = !DILocation(line: 84, scope: !1446)
!1462 = !DILocation(line: 85, scope: !1446)
!1463 = !DILocation(line: 91, scope: !1446)
!1464 = !DILocation(line: 95, scope: !1446)
!1465 = !DILocation(line: 99, scope: !1446)
!1466 = !DILocation(line: 106, scope: !1446)
!1467 = !DILocation(line: 111, scope: !1446)
!1468 = !DILocation(line: 112, scope: !1446)
!1469 = !DILocation(line: 113, scope: !1446)
!1470 = !DILocation(line: 121, scope: !1446)
!1471 = !DILocation(line: 127, scope: !1446)
!1472 = !DILocation(line: 128, scope: !1446)
!1473 = !DILocation(line: 26, scope: !1474)
!1474 = !DILexicalBlockFile(scope: !37, file: !1475, discriminator: 0)
!1475 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/HaltLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1476 = !DILocation(line: 29, scope: !1474)
!1477 = !DILocation(line: 25, scope: !1478)
!1478 = !DILexicalBlockFile(scope: !37, file: !1479, discriminator: 0)
!1479 = !DIFile(filename: "../src/mlir/lib/Standalone/Lowering/TransactionLowering.cpp", directory: "/Users/kowalski/dev/sqlite/release")
!1480 = !DILocation(line: 48, scope: !1478)
!1481 = !DILocation(line: 52, scope: !1478)
!1482 = !DILocation(line: 53, scope: !1478)
!1483 = !DILocation(line: 54, scope: !1478)
!1484 = !DILocation(line: 55, scope: !1478)
!1485 = !DILocation(line: 57, scope: !1478)
!1486 = !DILocation(line: 58, scope: !1478)
!1487 = !DILocation(line: 60, scope: !1478)
!1488 = !DILocation(line: 65, scope: !1478)
!1489 = !DILocation(line: 69, scope: !1478)
!1490 = !DILocation(line: 71, scope: !1478)
!1491 = !DILocation(line: 143, scope: !1478)
!1492 = !DILocation(line: 152, scope: !1478)
!1493 = !DILocation(line: 153, scope: !1478)
!1494 = !DILocation(line: 156, scope: !1478)
!1495 = !DILocation(line: 157, scope: !1478)
!1496 = !DILocation(line: 158, scope: !1478)
!1497 = !DILocation(line: 159, scope: !1478)
!1498 = !DILocation(line: 161, scope: !1478)
!1499 = !DILocation(line: 162, scope: !1478)
!1500 = !DILocation(line: 181, scope: !1478)
!1501 = !DILocation(line: 189, scope: !1478)
